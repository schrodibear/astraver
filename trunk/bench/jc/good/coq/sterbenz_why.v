(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export jessie_why.
Require Export Reals.
Require Export JessieGappa. 
Require Import tactics. 
(*Require Export JessieFloats.*) 


(* Why obligation from file "why/sterbenz1.why", line 33, characters 17-226: *)
(*Why goal*) Lemma diff_ensures_default_po_1 : 
  forall (x: gen_float),
  forall (y: gen_float),
  forall (HW_1: (Rle (Rdiv (float_value y) (2)%R) (float_value x)) /\
                (Rle (float_value x) (Rmult (2)%R (float_value y)))),
  (Rle
   (Rabs
    (round_float Double nearest_even (Rminus (float_value x) (float_value y))))
   (max_gen_float Double)).
Proof.
intros.
destruct HW_1.
Admitted.


Lemma equality_helper :
  forall x y,
 (0 <= x - y <= 0)%R ->
  x = y.
Proof.
intros x y (Ha, Hb).
apply Rle_antisym.
apply Rplus_le_reg_l with (-y)%R.
now rewrite Rplus_opp_l, Rplus_comm.
apply Ropp_le_cancel.
apply Rplus_le_reg_l with x.
now rewrite Rplus_opp_r.
Qed.


(* Why obligation from file "/users/demons/ayad/ppc/why/bench/jc/good/sterbenz1.jc", line 8, characters 16-62: *)
(*Why goal*) Lemma diff_ensures_default_po_2 : 
  forall (x: gen_float),
  forall (y: gen_float),
  forall (HW_1: (Rle (Rdiv (float_value y) (2)%R) (float_value x)) /\
                (Rle (float_value x) (Rmult (2)%R (float_value y)))),
  forall (HW_2: (Rle
                 (Rabs
                  (round_float
                   Double nearest_even (Rminus
                                        (float_value x) (float_value y))))
                 (max_gen_float Double))),
  forall (result: gen_float),
  forall (HW_3: (eq (float_value result) (round_float
                                          Double nearest_even (Rminus
                                                               (float_value x) (
                                                               float_value y)))) /\
                (eq (exact_value result) (Rminus
                                          (float_value x) (float_value y))) /\
                (eq (model_value result) (Rminus
                                          (float_value x) (float_value y)))),
  forall (why__return: gen_float),
  forall (HW_4: why__return = result),
  (* JC_5 *)
  (eq (float_value why__return) (Rminus (float_value x) (float_value y))).
Proof.
intros x y.
set (fx := float_value x).
set (fy := float_value y).
unfold round_float,max_gen_float.
intuition.
subst.
clear H3 H4.
rewrite H1; clear H1.
apply equality_helper.
set (f := (fx - fy)%R) in *. 




gappa.



Rminus_diag_uniq.
apply Rle_antisym.
gappa.

elim HW_3.
intros.
rewrite H.
apply trans_eq with (FtoRradix (Fminus radix (genf x) (genf y))).
unfold FtoRradix.
apply sym_eq.
apply RoundedModeProjectorIdemEq with bdouble 53%nat (EvenClosest bdouble radix 53);auto with zarith.
apply Sterbenz; auto with zarith real.


unfold float_value.
unfold round_float.
unfold gen_float_of_real. 
unfold gen_float_of_real_aux.
unfold bfloat_format.
unfold precision.

unfold mk_gen_float.
apply trans_eq with Fminus2
Admitted.
Save.

(* Why obligation from file "why/sterbenz1.why", line 52, characters 17-226: *)
(*Why goal*) Lemma diff_safety_po_1 : 
  forall (x: gen_float),
  forall (y: gen_float),
  forall (HW_1: (* JC_4 *) True),
  (Rle
   (Rabs
    (round_float Double nearest_even (Rminus (float_value x) (float_value y))))
   (max_gen_float Double)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

