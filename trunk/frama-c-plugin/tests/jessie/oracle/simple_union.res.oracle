Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -jessie -jessie-gen-only simple_union.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -dD simple_union.c"
[jessie] Starting Jessie translation
[jessie] Producing Jessie files in subdir simple_union.jessie
[jessie] File simple_union.jessie/simple_union.jc written.
[jessie] File simple_union.jessie/simple_union.cloc written.
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type int16 = -32768..32767

type int8 = -128..127

type int32 = -2147483648..2147483647

tag char_P = {
  int8 char_M: 8;
}

type char_P = [char_P]

tag void_P = {
}

type void_P = [void_P]

tag __anonstruct_s_1 = {
  int16 s1: 16; 
  int16 s2: 16;
}

type __anonstruct_s_1 = [__anonstruct_s_1]

type U = [U & iP & sP]

tag U = {
  padding padding: 32;
}

tag iP = {
  int32 iM: 32;
}

tag sP = {
  __anonstruct_s_1[0] sM: 32;
}

unit zero(U[..] x)
  requires (C_7 : ((C_8 : (\offset_min(x) <= 0)) &&
                    (C_9 : (\offset_max(x) >= 0))));
behavior default:
  ensures (C_6 : true);
{  
   {  (C_3 : ((C_2 : (C_1 : (x :> iP[0])).iM) = 0));
      
      {  
         (assert for default: (C_4 : ((x :> sP[0]).sM.s1 == 0)));
         ()
      };
      
      {  
         (assert for default: (C_5 : ((x :> sP[0]).sM.s2 == 0)));
         ()
      };
      
      (return ())
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs simple_union.jessie/simple_union.cloc simple_union.jessie/simple_union.jc
