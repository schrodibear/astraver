rm -f struct3.jc
../../bin/toplevel.opt -jessie-analysis  -jessie-gen-only struct3.c
Parsing
Cleaning unused parts
Symbolic link
Starting semantical analysis
cat struct3.jc
# IntModel = bounded
# InvariantPolicy = Arguments

type _bool = 0..1

type int8 = -128..127

type uint8 = 0..255

type int32 = -2147483648..2147483647

type uint32 = 0..4294967295

type int16 = -32768..32767

type uint16 = 0..65535

type int64 = -9223372036854775808..9223372036854775807

type uint64 = 0..18446744073709551615

tag char_P = {
  int8 char_M;
}

type char_P = [char_P]

tag void_P = {
  unit void_M;
}

type void_P = [void_P]

tag S = {
  int32 x; 
  int32 y;
}

type S = [S]

tag U = {
  int32 z; 
  S[0] s;
}

type U = [U]

logic int32 strlen{L}(char_P[..] s) reads s.char_M;

axiom strlen_def1{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    (((0 <= i) && (i < strlen{L}(s))) ==> ((s + i).char_M != 0))))

axiom strlen_def2{L} :
(\forall char_P[..] s;
  ((s + strlen{L}(s)).char_M == 0))

axiom strlen_not_zero{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    ((((0 <= i) && (i <= strlen{L}(s))) && ((s + i).char_M != 0)) ==>
      (i < strlen{L}(s)))))

axiom strlen_zero{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    ((((0 <= i) && (i <= strlen{L}(s))) && ((s + i).char_M == 0)) ==>
      (i == strlen{L}(s)))))

axiom strlen_sup{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    (((0 <= i) && ((s + i).char_M == 0)) ==>
      ((0 <= strlen{L}(s)) && (strlen{L}(s) <= i)))))

axiom strlen_shift{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    (((0 <= i) && (i <= strlen{L}(s))) ==>
      (strlen{L}((s + i)) == (strlen{L}(s) - i)))))

axiom strlen_create{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    (((0 <= i) && ((s + i).char_M == 0)) ==>
      ((0 <= strlen{L}(s)) && (strlen{L}(s) <= i)))))

axiom strlen_create2{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    (\forall int32 k;
      (((k <= i) && ((s + i).char_M == 0)) ==>
        ((0 <= strlen{L}((s + k))) && (strlen{L}((s + k)) <= (i - k)))))))

int32 f()
behavior default:
  assumes true;
  ensures (C_10 : (\result == 2));
{  
   (var S[0] a);
   
   (var int32 __retres);
   
   {  (C_2 : (a = (C_1 : (new S[1]))));
      (C_4 : ((C_3 : a.x) = 1));
      (C_6 : ((C_5 : a.y) = 2));
      (C_8 : (__retres = (C_7 : a.y)));
      
      {  (C_9 : (free(a)));
         
         (return __retres)
      }
   }
}

int32 g()
behavior default_1:
  assumes true;
  ensures (C_25 : (\result == 3));
{  
   (var U[0] u);
   
   (var int32 __retres);
   
   {  (C_12 : (u = (C_11 : (new U[1]))));
      (C_14 : ((C_13 : u.z) = 1));
      (C_17 : ((C_16 : (C_15 : u.s).x) = 2));
      (C_20 : ((C_19 : (C_18 : u.s).y) = 3));
      (C_23 : (__retres = (C_22 : (C_21 : u.s).y)));
      
      {  (C_24 : (free(u)));
         
         (return __retres)
      }
   }
}
