(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require BuiltIn.
Require Pointer.
Require int.Int.
Require Alloc_table.
Require map.Map.
Require Tag_id.
Require Tag.
Require Tag_table_type.
Require Tag_table.

(* Why3 assumption *)
Definition allocable {t:Type} {t_WT:WhyType t} (a:(Alloc_table.alloc_table
  t)) (p:(Pointer.pointer t)): Prop := ((Alloc_table.offset_max a
  p) = (-3%Z)%Z) /\ (((-3%Z)%Z < (Alloc_table.offset_min a p))%Z /\
  ((Alloc_table.offset_min a p) = 0%Z)).

(* Why3 assumption *)
Definition freeable {t:Type} {t_WT:WhyType t} (a:(Alloc_table.alloc_table t))
  (p:(Pointer.pointer t)): Prop := ((Alloc_table.offset_min a p) = 0%Z) /\
  (0%Z <= ((Alloc_table.offset_max a p) + 1%Z)%Z)%Z.

(* Why3 assumption *)
Definition allocated {t:Type} {t_WT:WhyType t} (a:(Alloc_table.alloc_table
  t)) (p:(Pointer.pointer t)): Prop := ((Alloc_table.offset_min a
  p) <= (Alloc_table.offset_max a p))%Z.

(* Why3 assumption *)
Definition tag_fresh {t:Type} {t_WT:WhyType t} (t1:(map.Map.map
  (Pointer.pointer t) (Tag_id.tag_id t))) (p:(Pointer.pointer t)): Prop :=
  ((map.Map.get t1 p) = (Tag.bottom_tag : (Tag_id.tag_id t))).

Axiom Alloc_fresh_not_same_block : forall {t:Type} {t_WT:WhyType t},
  forall (p1:(Pointer.pointer t)), forall (p2:(Pointer.pointer t)),
  forall (a:(Alloc_table.alloc_table t)), ((allocable a p1) /\ (freeable a
  p2)) -> ~ (Pointer.same_block p1 p2).

