(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require BuiltIn.
Require Jessie_pointer.
Require int.Int.
Require Jessie_alloc_table.
Require map.Map.
Require Jessie_tag_id.
Require Jessie_tag.
Require Jessie_tag_table_type.
Require Jessie_tag_table.

(* Why3 assumption *)
Definition allocable {t:Type} {t_WT:WhyType t}
  (a:(Jessie_alloc_table.alloc_table t)) (p:(Jessie_pointer.pointer
  t)): Prop := ((Jessie_alloc_table.offset_max a p) = (-1%Z)%Z) /\
  (((-1%Z)%Z < (Jessie_alloc_table.offset_min a p))%Z /\
  ((Jessie_alloc_table.offset_min a p) = 0%Z)).

(* Why3 assumption *)
Definition freeable {t:Type} {t_WT:WhyType t}
  (a:(Jessie_alloc_table.alloc_table t)) (p:(Jessie_pointer.pointer
  t)): Prop := ((Jessie_alloc_table.offset_min a p) = 0%Z) /\
  (0%Z <= (Jessie_alloc_table.offset_max a p))%Z.

(* Why3 assumption *)
Definition allocated {t:Type} {t_WT:WhyType t}
  (a:(Jessie_alloc_table.alloc_table t)) (p:(Jessie_pointer.pointer
  t)): Prop := ((Jessie_alloc_table.offset_min a
  p) <= (Jessie_alloc_table.offset_max a p))%Z.

(* Why3 assumption *)
Definition tag_fresh {t:Type} {t_WT:WhyType t} (t1:(map.Map.map
  (Jessie_pointer.pointer t) (Jessie_tag_id.tag_id t)))
  (p:(Jessie_pointer.pointer t)): Prop := ((map.Map.get t1
  p) = (Jessie_tag.bottom_tag : (Jessie_tag_id.tag_id t))).

Axiom Alloc_fresh_not_same_block : forall {t:Type} {t_WT:WhyType t},
  forall (p1:(Jessie_pointer.pointer t)), forall (p2:(Jessie_pointer.pointer
  t)), forall (a:(Jessie_alloc_table.alloc_table t)), ((allocable a p1) /\
  (freeable a p2)) -> ~ (Jessie_pointer.same_block p1 p2).

