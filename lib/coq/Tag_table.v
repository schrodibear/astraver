(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require BuiltIn.
Require Pointer.
Require int.Int.
Require map.Map.
Require Tag_id.
Require Tag.
Require Tag_table_type.

(* Why3 assumption *)
Definition instanceof {t:Type} {t_WT:WhyType t} (t1:(map.Map.map
  (Pointer.pointer t) (Tag_id.tag_id t))) (p:(Pointer.pointer t))
  (s:(Tag_id.tag_id t)): Prop := (Tag.subtag (map.Map.get t1 p) s).

Parameter downcast: forall {t:Type} {t_WT:WhyType t}, (map.Map.map
  (Pointer.pointer t) (Tag_id.tag_id t)) -> (Pointer.pointer t) ->
  (Tag_id.tag_id t) -> (Pointer.pointer t).

Axiom Downcast_instanceof : forall {t:Type} {t_WT:WhyType t},
  forall (t1:(map.Map.map (Pointer.pointer t) (Tag_id.tag_id t))),
  forall (p:(Pointer.pointer t)), forall (s:(Tag_id.tag_id t)), (instanceof
  t1 p s) -> ((downcast t1 p s) = p).

Axiom Downcast_null : forall {t:Type} {t_WT:WhyType t},
  forall (t1:(map.Map.map (Pointer.pointer t) (Tag_id.tag_id t))),
  forall (s:(Tag_id.tag_id t)), ((downcast t1
  (Pointer.null : (Pointer.pointer t)) s) = (Pointer.null : (Pointer.pointer
  t))).

