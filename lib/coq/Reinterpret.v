(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require BuiltIn.
Require Pointer.
Require int.Int.
Require int.Abs.
Require int.ComputerDivision.
Require Tag_id.

Parameter cast_factor: forall {t:Type} {t_WT:WhyType t}, (Tag_id.tag_id t) ->
  (Tag_id.tag_id t) -> Numbers.BinNums.Z.

Axiom Cast_factor_trans : forall {t:Type} {t_WT:WhyType t},
  forall (t1:(Tag_id.tag_id t)), forall (t2:(Tag_id.tag_id t)),
  forall (t3:(Tag_id.tag_id t)), let c12 := (cast_factor t1 t2) in let c23 :=
  (cast_factor t2 t3) in let c13 := (cast_factor t1 t3) in
  ((((0%Z < c12)%Z /\ (0%Z < c23)%Z) -> (c13 = (c12 * c23)%Z)) /\
  ((((0%Z < c12)%Z /\ ((c23 < 0%Z)%Z /\ (((-c23)%Z < c12)%Z /\
  ((ZArith.BinInt.Z.rem c12 (-c23)%Z) = 0%Z)))) ->
  (c13 = (ZArith.BinInt.Z.quot c12 (-c23)%Z))) /\ ((((0%Z < c12)%Z /\
  ((c23 < 0%Z)%Z /\ ((c12 < (-c23)%Z)%Z /\
  ((ZArith.BinInt.Z.rem (-c23)%Z c12) = 0%Z)))) ->
  (c13 = (-(ZArith.BinInt.Z.quot (-c23)%Z c12))%Z)) /\ ((((c12 < 0%Z)%Z /\
  ((0%Z < c23)%Z /\ (((-c12)%Z < c23)%Z /\
  ((ZArith.BinInt.Z.rem c23 (-c12)%Z) = 0%Z)))) ->
  (c13 = (ZArith.BinInt.Z.quot c23 (-c12)%Z))) /\ ((((c12 < 0%Z)%Z /\
  ((0%Z < c23)%Z /\ ((c23 < (-c12)%Z)%Z /\
  ((ZArith.BinInt.Z.rem (-c12)%Z c23) = 0%Z)))) ->
  (c13 = (-(ZArith.BinInt.Z.quot (-c12)%Z c23))%Z)) /\ (((c12 < 0%Z)%Z /\
  (c23 < 0%Z)%Z) -> (c13 = ((-c12)%Z * c23)%Z))))))).

