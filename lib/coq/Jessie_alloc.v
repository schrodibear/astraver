(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require BuiltIn.
Require Jessie_pointer.
Require int.Int.
Require Jessie_alloc_table.
Require map.Map.
Require Jessie_pset.
Require Jessie_tag_id.
Require Jessie_tag.
Require Jessie_tag_table_type.
Require Jessie_tag_table.
Require Jessie_allocable.

(* Why3 assumption *)
Definition alloc_extends {t:Type} {t_WT:WhyType t}
  (a1:(Jessie_alloc_table.alloc_table t)) (a2:(Jessie_alloc_table.alloc_table
  t)): Prop := forall (p:(Jessie_pointer.pointer t)),
  (Jessie_alloc_table.valid a1 p) -> (((Jessie_alloc_table.offset_min a1
  p) = (Jessie_alloc_table.offset_min a2 p)) /\
  ((Jessie_alloc_table.offset_max a1 p) = (Jessie_alloc_table.offset_max a2
  p))).

(* Why3 assumption *)
Definition free_extends {t:Type} {t_WT:WhyType t}
  (a1:(Jessie_alloc_table.alloc_table t)) (a2:(Jessie_alloc_table.alloc_table
  t)): Prop := forall (p:(Jessie_pointer.pointer t)),
  (~ (Jessie_allocable.allocated a1 p)) ->
  (((Jessie_alloc_table.offset_min a1 p) = (Jessie_alloc_table.offset_min a2
  p)) /\ ((Jessie_alloc_table.offset_max a1
  p) = (Jessie_alloc_table.offset_max a2 p))).

(* Why3 assumption *)
Definition alloc_block {t:Type} {t_WT:WhyType t}
  (a1:(Jessie_alloc_table.alloc_table t)) (a2:(Jessie_alloc_table.alloc_table
  t)) (p:(Jessie_pointer.pointer t)) (n:Z): Prop :=
  forall (q:(Jessie_pointer.pointer t)), ((~ (Jessie_pointer.same_block q
  p)) -> (((Jessie_alloc_table.offset_min a2
  q) = (Jessie_alloc_table.offset_min a1 q)) /\
  ((Jessie_alloc_table.offset_max a2 q) = (Jessie_alloc_table.offset_max a1
  q)))) /\ ((Jessie_pointer.same_block q p) ->
  (((Jessie_alloc_table.offset_min a2
  q) = (0%Z - (Jessie_pointer.sub_pointer q p))%Z) /\
  ((Jessie_alloc_table.offset_max a2
  q) = ((n - 1%Z)%Z - (Jessie_pointer.sub_pointer q p))%Z))).

(* Why3 assumption *)
Definition free_block {t:Type} {t_WT:WhyType t}
  (a1:(Jessie_alloc_table.alloc_table t)) (a2:(Jessie_alloc_table.alloc_table
  t)) (p:(Jessie_pointer.pointer t)): Prop :=
  forall (q:(Jessie_pointer.pointer t)), ((~ (Jessie_pointer.same_block q
  p)) -> (((Jessie_alloc_table.offset_min a2
  q) = (Jessie_alloc_table.offset_min a1 q)) /\
  ((Jessie_alloc_table.offset_max a2 q) = (Jessie_alloc_table.offset_max a1
  q)))) /\ ((Jessie_pointer.same_block q p) ->
  (((Jessie_alloc_table.offset_min a2
  q) = (0%Z - (Jessie_pointer.sub_pointer q p))%Z) /\
  ((Jessie_alloc_table.offset_max a2
  q) = ((-1%Z)%Z - (Jessie_pointer.sub_pointer q p))%Z))).

(* Why3 assumption *)
Definition switch_blocks {t:Type} {t_WT:WhyType t}
  (a1:(Jessie_alloc_table.alloc_table t)) (a2:(Jessie_alloc_table.alloc_table
  t)) (p:(Jessie_pointer.pointer t)) (q:(Jessie_pointer.pointer t))
  (n:Z): Prop := forall (r:(Jessie_pointer.pointer t)),
  (((~ (Jessie_pointer.same_block r p)) /\ ~ (Jessie_pointer.same_block r
  q)) -> (((Jessie_alloc_table.offset_min a2
  r) = (Jessie_alloc_table.offset_min a1 r)) /\
  ((Jessie_alloc_table.offset_max a2 r) = (Jessie_alloc_table.offset_max a1
  r)))) /\ (((Jessie_pointer.same_block r p) ->
  (((Jessie_alloc_table.offset_min a2
  r) = (0%Z - (Jessie_pointer.sub_pointer r p))%Z) /\
  ((Jessie_alloc_table.offset_max a2
  r) = ((-1%Z)%Z - (Jessie_pointer.sub_pointer r p))%Z))) /\
  ((Jessie_pointer.same_block r q) -> (((Jessie_alloc_table.offset_min a2
  r) = (0%Z - (Jessie_pointer.sub_pointer r q))%Z) /\
  ((Jessie_alloc_table.offset_max a2
  r) = ((n - 1%Z)%Z - (Jessie_pointer.sub_pointer r q))%Z)))).

(* Why3 assumption *)
Definition alloc_blockset {t:Type} {t_WT:WhyType t}
  (a1:(Jessie_alloc_table.alloc_table t)) (a2:(Jessie_alloc_table.alloc_table
  t)) (q:(Jessie_pset.pset t)): Prop := forall (p:(Jessie_pointer.pointer
  t)), (forall (r:(Jessie_pointer.pointer t)), (Jessie_pset.in_pset r q) ->
  ~ (Jessie_pointer.same_block p r)) -> (((Jessie_alloc_table.offset_min a1
  p) = (Jessie_alloc_table.offset_min a2 p)) /\
  ((Jessie_alloc_table.offset_max a1 p) = (Jessie_alloc_table.offset_max a2
  p))).

(* Why3 assumption *)
Definition tag_extends {t:Type} {t_WT:WhyType t} (t1:(map.Map.map
  (Jessie_pointer.pointer t) (Jessie_tag_id.tag_id t))) (t2:(map.Map.map
  (Jessie_pointer.pointer t) (Jessie_tag_id.tag_id t))): Prop :=
  forall (p:(Jessie_pointer.pointer t)), (~ ((map.Map.get t1
  p) = (Jessie_tag.bottom_tag : (Jessie_tag_id.tag_id t)))) ->
  ((map.Map.get t2 p) = (map.Map.get t1 p)).

(* Why3 assumption *)
Definition alloc_tag_blockset {t:Type} {t_WT:WhyType t} (t1:(map.Map.map
  (Jessie_pointer.pointer t) (Jessie_tag_id.tag_id t))) (t2:(map.Map.map
  (Jessie_pointer.pointer t) (Jessie_tag_id.tag_id t))) (q:(Jessie_pset.pset
  t)): Prop := forall (p:(Jessie_pointer.pointer t)), (~ ((map.Map.get t1
  p) = (Jessie_tag.bottom_tag : (Jessie_tag_id.tag_id t)))) ->
  ((map.Map.get t2 p) = (map.Map.get t1 p)).

