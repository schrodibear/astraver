(* Logic definitions used for separation pragma *)
(* For notin *)
type 'a mybag

logic in_mybag : 'a,'a mybag -> prop

logic disj_mybag : 'a mybag, 'a mybag -> prop

axiom disj_sym : forall s1,s2 : 'a mybag[disj_mybag(s1,s2)]. disj_mybag(s1,s2) -> disj_mybag(s2,s1)

(* For frame rule *)
(*type 'a myframe

logic myframe_and : myframe, myframe -> myframe
logic frame_between : myframe, myframe -> myframe*)

(*
axiom gen :
      frame_between(sa,m1,m2) -> not in_mybag(p,sa) -> (frame_between(sa,m1,store(m2,p,v)) 

axiom gen :
      frame_between(sa,m1,m2) -> frame_between(sa,m2,m3) -> frame_between(sa,m1,m3) 


axiom specifiq :
      valid ->  ...,... -> frame_between(next(p,m1)

axiom :
  forall sa,sb : mybag.
  forall m1 m2 : memory[frame_between(sa,m1,m2),P_b(m2)]. (*Le prouveur ne doit pas trouver les frames *)
  frame_between(sa,m1,m2) -> disj(sa,sb) -> P_b(m1) -> P_b(m2)
*)