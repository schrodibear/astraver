rm -f init2.jc
../../bin/toplevel.opt -jessie-analysis  -jessie-gen-only init2.c
Parsing
Cleaning unused parts
Symbolic link
Starting semantical analysis
cat init2.jc
# IntModel = bounded
# InvariantPolicy = Arguments

type _bool = 0..1

type int8 = -128..127

type uint8 = 0..255

type int32 = -2147483648..2147483647

type uint32 = 0..4294967295

type int16 = -32768..32767

type uint16 = 0..65535

type int64 = -9223372036854775808..9223372036854775807

type uint64 = 0..18446744073709551615

tag char_P = {
  int8 char_M;
}

type char_P = [char_P]

tag void_P = {
  unit void_M;
}

type void_P = [void_P]

invariant valid_ls :
((\offset_min(ls) <= 0) && (\offset_max(ls) >= 0))

tag __anonstruct_lastruct1_1 = {
  int32 a; 
  int32 b;
}

type __anonstruct_lastruct1_1 = [__anonstruct_lastruct1_1]

tag __anonstruct_lastruct2_2 = {
  __anonstruct_lastruct1_1[0] c; 
  int32 d;
}

type __anonstruct_lastruct2_2 = [__anonstruct_lastruct2_2]

type __anonenum_lenum_3 = 12..56

logic int32 strlen{L}(char_P[..] s) reads s.char_M;

axiom strlen_def1{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    (((0 <= i) && (i < strlen{L}(s))) ==> ((s + i).char_M != 0))))

axiom strlen_def2{L} :
(\forall char_P[..] s;
  ((s + strlen{L}(s)).char_M == 0))

axiom strlen_not_zero{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    ((((0 <= i) && (i <= strlen{L}(s))) && ((s + i).char_M != 0)) ==>
      (i < strlen{L}(s)))))

axiom strlen_zero{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    ((((0 <= i) && (i <= strlen{L}(s))) && ((s + i).char_M == 0)) ==>
      (i == strlen{L}(s)))))

axiom strlen_sup{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    (((0 <= i) && ((s + i).char_M == 0)) ==>
      ((0 <= strlen{L}(s)) && (strlen{L}(s) <= i)))))

axiom strlen_shift{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    (((0 <= i) && (i <= strlen{L}(s))) ==>
      (strlen{L}((s + i)) == (strlen{L}(s) - i)))))

axiom strlen_create{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    (((0 <= i) && ((s + i).char_M == 0)) ==>
      ((0 <= strlen{L}(s)) && (strlen{L}(s) <= i)))))

axiom strlen_create2{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    (\forall int32 k;
      (((k <= i) && ((s + i).char_M == 0)) ==>
        ((0 <= strlen{L}((s + k))) && (strlen{L}((s + k)) <= (i - k)))))))

__anonstruct_lastruct2_2[0] ls;

int32 varglo;

__anonenum_lenum_3 le;

int32 laconstante;

int32 f()
behavior default:
  assumes true;
  assigns \nothing;
  ensures (C_2 : (((((C_6 : (ls.c.a == 1)) && (C_7 : (varglo == 123))) &&
                     (C_8 : (\result == 4))) &&
                    (C_9 : (le == 34))) &&
                   (C_10 : (laconstante == 7))));
{  
   (var int32 varloc);
   
   {  (C_1 : (varloc = 4));
      
      (return varloc)
   }
}
