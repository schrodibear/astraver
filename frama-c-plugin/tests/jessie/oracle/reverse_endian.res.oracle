Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -IFRAMAC_SHARE/libc -jessie -jessie-gen-only reverse_endian.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -IFRAMAC_SHARE/libc -dD reverse_endian.c"
[jessie] Starting Jessie translation
[jessie] Producing Jessie files in subdir reverse_endian.jessie
[jessie] File reverse_endian.jessie/reverse_endian.jc written.
[jessie] File reverse_endian.jessie/reverse_endian.cloc written.
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type uint8 = 0..255

type int8 = -128..127

type int16 = -32768..32767

tag shortP = {
  int16 shortM: 16;
}

type shortP = [shortP]

tag unsigned_charP = {
  uint8 unsigned_charM: 8;
}

type unsigned_charP = [unsigned_charP]

tag charP = {
  int8 charM: 8;
}

type charP = [charP]

tag voidP = {
}

type voidP = [voidP]

unit reverse_endian(shortP[..] s)
  requires (C_13 : ((C_14 : (\offset_min(s) <= 0)) &&
                     (C_15 : (\offset_max(s) >= 0))));
behavior default:
  ensures (C_12 : (\at(s,Old).shortM ==
                    ((256 * (\at(s.shortM,Old) % 256)) +
                      (\at(s.shortM,Old) / 256))));
{  
   (var charP[..] c);
   
   (var int8 tmp);
   
   {  (C_2 : (c = (C_1 : (s :> charP[..]))));
      (C_4 : (tmp = (C_3 : c.charM)));
      (C_8 : ((C_7 : c.charM) = (C_6 : (C_5 : (c + 1)).charM)));
      (C_11 : ((C_10 : (C_9 : (c + 1)).charM) = tmp));
      
      (return ())
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs reverse_endian.jessie/reverse_endian.cloc reverse_endian.jessie/reverse_endian.jc
