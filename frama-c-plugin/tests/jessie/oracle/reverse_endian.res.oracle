Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -jessie -jessie-gen-only reverse_endian.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -dD reverse_endian.c"
[jessie] Starting Jessie translation
[jessie] Producing Jessie files in subdir reverse_endian.jessie
[jessie] File reverse_endian.jessie/reverse_endian.jc written.
[jessie] File reverse_endian.jessie/reverse_endian.cloc written.
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type int16 = -32768..32767

type int8 = -128..127

tag short_P = {
  int16 short_M: 16;
}

type short_P = [short_P]

tag char_P = {
  int8 char_M: 8;
}

type char_P = [char_P]

tag void_P = {
}

type void_P = [void_P]

unit reverse_endian(short_P[..] s)
  requires (C_13 : ((C_14 : (\offset_min(s) <= 0)) &&
                     (C_15 : (\offset_max(s) >= 0))));
behavior default:
  ensures (C_12 : (\at(s,Old).short_M ==
                    ((256 * (\old(s.short_M) % 256)) +
                      (\old(s.short_M) / 256))));
{  
   (var char_P[..] c);
   
   (var int8 tmp);
   
   {  (C_2 : (c = (C_1 : (s :> char_P[..]))));
      (C_4 : (tmp = (C_3 : c.char_M)));
      (C_8 : ((C_7 : c.char_M) = (C_6 : (C_5 : (c + 1)).char_M)));
      (C_11 : ((C_10 : (C_9 : (c + 1)).char_M) = tmp));
      
      (return ())
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs reverse_endian.jessie/reverse_endian.cloc reverse_endian.jessie/reverse_endian.jc
