Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -IFRAMAC_SHARE/libc -jessie -jessie-gen-only bts0363.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -IFRAMAC_SHARE/libc -dD bts0363.c"
[jessie] Starting Jessie translation
[jessie] Producing Jessie files in subdir bts0363.jessie
[jessie] File bts0363.jessie/bts0363.jc written.
[jessie] File bts0363.jessie/bts0363.cloc written.
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type uint32 = 0..4294967295

type uint8 = 0..255

type int16 = -32768..32767

type int32 = -2147483648..2147483647

type int8 = -128..127

tag intP = {
  int32 intM: 32;
}

type intP = [intP]

tag unsigned_charP = {
  uint8 unsigned_charM: 8;
}

type unsigned_charP = [unsigned_charP]

tag struct_proc___xP = {
  proc_0[..] struct_proc___xM: 32;
}

type struct_proc___xP = [struct_proc___xP]

tag unsigned_intP = {
  uint32 unsigned_intM: 32;
}

type unsigned_intP = [unsigned_intP]

tag charP = {
  int8 charM: 8;
}

type charP = [charP]

tag voidP = {
}

type voidP = [voidP]

tag priv = {
  int16 s_id: 16; 
  int16 s_flags: 16; 
  unsigned_intP[..] s_stack_guard: 32;
}

type priv = [priv]

tag proc_0 = {
  int32 p_nr: 32; 
  priv[..] p_priv: 32; 
  int16 p_rts_flags: 16; 
  int16 p_misc_flags: 16; 
  int8 p_priority: 8; 
  int8 p_max_priority: 8; 
  int8 p_ticks_left: 8; 
  int8 p_quantum_size: 8; 
  struct_proc___xP[0] p_nextready: 32; 
  proc_0[..] p_caller_q: 32; 
  proc_0[..] p_q_link: 32;
}

type proc_0 = [proc_0]

proc_0[..] prev_ptr;

proc_0[..] proc_ptr;

proc_0[..] next_ptr;

proc_0[..] bill_ptr;

proc_0[0..103] proc;

invariant valid_proc :
((\offset_min(proc) <= 0) && (\offset_max(proc) >= 103))

struct_proc___xP[0..103] pproc_addr;

invariant valid_pproc_addr :
((\offset_min(pproc_addr) <= 0) && (\offset_max(pproc_addr) >= 103))

struct_proc___xP[0..15] rdy_head;

invariant valid_rdy_head :
((\offset_min(rdy_head) <= 0) && (\offset_max(rdy_head) >= 15))

struct_proc___xP[0..15] rdy_tail;

invariant valid_rdy_tail :
((\offset_min(rdy_tail) <= 0) && (\offset_max(rdy_tail) >= 15))

unit enqueue(proc_0[..] rp_0)
behavior default:
  ensures (C_47 : true);
{  
   (var intP[0] q);
   
   (var intP[0] front_0);
   
   (var proc_0[..] tmp);
   
   {  (C_2 : (q = (C_1 : (new intP[1]))));
      (C_4 : (front_0 = (C_3 : (new intP[1]))));
      (C_5 : sched(rp_0, q, front_0));
      (if ((C_37 : (rdy_head + (C_36 : q.intM)).struct_proc___xM) == null) then 
      {  (C_26 : (tmp = rp_0));
         (C_29 : ((C_28 : (rdy_tail + (C_27 : q.intM)).struct_proc___xM) = tmp));
         (C_32 : ((C_31 : (rdy_head + (C_30 : q.intM)).struct_proc___xM) = tmp));
         (C_35 : ((C_34 : (C_33 : rp_0.p_nextready).struct_proc___xM) = null))
      } else (if ((C_25 : front_0.intM) != 0) then 
             {  (C_21 : ((C_20 : (C_19 : rp_0.p_nextready).struct_proc___xM) = 
                (C_18 : (rdy_head + (C_17 : q.intM)).struct_proc___xM)));
                (C_24 : ((C_23 : (rdy_head + (C_22 : q.intM)).struct_proc___xM) = rp_0))
             } else 
             {  (C_10 : ((C_9 : (C_8 : (C_7 : (rdy_tail + (C_6 : q.intM)).struct_proc___xM).p_nextready).struct_proc___xM) = rp_0));
                (C_13 : ((C_12 : (rdy_tail + (C_11 : q.intM)).struct_proc___xM) = rp_0));
                (C_16 : ((C_15 : (C_14 : rp_0.p_nextready).struct_proc___xM) = null))
             }));
      (if (! (proc_ptr != null)) then 
      (goto _LOR) else (if ((C_43 : proc_ptr.p_rts_flags) != 0) then 
                       (goto _LOR) else (if ((C_42 : ((C_41 : ((C_40 : (
                                                               (C_39 : 
                                                               (C_38 : proc_ptr.p_priv).s_flags) :> int32)) &
                                                                0x02)) :> int32)) !=
                                              0) then 
                                        (goto _LOR) else ())));
      
      (goto _LOR_0);
      (_LOR : 
      {  (C_44 : pick_proc())
      });
      (_LOR_0 : ());
      
      {  (C_45 : (free(q)));
         (C_46 : (free(front_0)));
         
         (return ())
      }
   }
}

unit dequeue(proc_0[..] rp)
behavior default:
  ensures (C_74 : true);
{  
   (var int32 q_0);
   
   (var struct_proc___xP[..] xpp);
   
   (var proc_0[..] prev_xp);
   
   (var uint32 tmp_0);
   
   {  (C_50 : (q_0 = (C_49 : ((C_48 : rp.p_priority) :> int32))));
      (if ((C_53 : rp.p_nr) < 0) then (if false then (C_52 : (tmp_0 = 48879)) else 
                                      (C_51 : (tmp_0 = 0xDEADBEEF))) else ());
      (C_54 : (prev_xp = null));
      (C_56 : (xpp = (C_55 : (rdy_head + q_0))));
      
      loop 
      while (true)
      {  
         {  (if ((C_57 : xpp.struct_proc___xM) != null) then () else 
            (goto while_0_break));
            
            {  (if ((C_68 : xpp.struct_proc___xM) == rp) then 
               {  (C_62 : ((C_61 : xpp.struct_proc___xM) = (C_60 : (C_59 : 
                                                                   (C_58 : xpp.struct_proc___xM).p_nextready).struct_proc___xM)));
                  (if (rp == (C_65 : (rdy_tail + q_0).struct_proc___xM)) then 
                  (C_64 : ((C_63 : (rdy_tail + q_0).struct_proc___xM) = prev_xp)) else ());
                  (if (rp == proc_ptr) then (C_67 : pick_proc()) else 
                  (if (rp == next_ptr) then (C_66 : pick_proc()) else ()));
                  
                  (goto while_0_break)
               } else ());
               (C_70 : (prev_xp = (C_69 : xpp.struct_proc___xM)))
            };
            (C_73 : (xpp = (C_72 : (C_71 : xpp.struct_proc___xM).p_nextready)))
         }
      };
      (while_0_break : ());
      
      (return ())
   }
}

unit sched(proc_0[..] rp_1, intP[..] queue, intP[..] front)
behavior default:
  ensures (C_96 : true);
{  
   (var int32 time_left);
   
   {  (C_78 : (time_left = (C_77 : ((if ((C_76 : ((C_75 : rp_1.p_ticks_left) :> int32)) >
                                          0) then 1 else 0) :> int32))));
      (if (! (time_left != 0)) then 
      {  (C_81 : ((C_80 : rp_1.p_ticks_left) = (C_79 : rp_1.p_quantum_size)));
         (if ((C_89 : ((C_88 : rp_1.p_priority) :> int32)) < 14) then 
         (C_87 : ((C_86 : rp_1.p_priority) = (C_85 : ((C_84 : ((C_83 : (
                                                               (C_82 : rp_1.p_priority) :> int32)) +
                                                                1)) :> int8)))) else ())
      } else ());
      (C_93 : ((C_92 : queue.intM) = (C_91 : ((C_90 : rp_1.p_priority) :> int32))));
      (C_95 : ((C_94 : front.intM) = time_left));
      
      (return ())
   }
}

unit pick_proc()
  requires (C_423 : (((C_425 : (\offset_min(rdy_head) <= 0)) &&
                       (C_426 : (\offset_max(rdy_head) >= (16 - 1)))) &&
                      (C_427 : ((rdy_head + 0).struct_proc___xM != null))));
behavior default:
  assigns next_ptr.p_nr,
  next_ptr.p_priv,
  next_ptr.p_rts_flags,
  next_ptr.p_misc_flags,
  next_ptr.p_priority,
  next_ptr.p_max_priority,
  next_ptr.p_ticks_left,
  next_ptr.p_quantum_size,
  next_ptr.p_nextready.struct_proc___xM,
  next_ptr.p_caller_q,
  next_ptr.p_q_link,
  bill_ptr.p_nr,
  bill_ptr.p_priv,
  bill_ptr.p_rts_flags,
  bill_ptr.p_misc_flags,
  bill_ptr.p_priority,
  bill_ptr.p_max_priority,
  bill_ptr.p_ticks_left,
  bill_ptr.p_quantum_size,
  bill_ptr.p_nextready.struct_proc___xM,
  bill_ptr.p_caller_q,
  bill_ptr.p_q_link;
  ensures (C_422 : (((\offset_min(next_ptr) <= 0) &&
                      (\offset_max(next_ptr) >= 0)) ||
                     (((\offset_min(next_ptr) <= 0) &&
                        (\offset_max(next_ptr) >= 0)) &&
                       ((\offset_min(bill_ptr) <= 0) &&
                         (\offset_max(bill_ptr) >= 0)))));
{  
   (var proc_0[..] rp_2);
   
   (var int32 q_1);
   
   {  (C_97 : (q_1 = 0));
      
      {  (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_99 : (rp_2 = (C_98 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_100 : (next_ptr = rp_2));
               
               ( requires (C_110 : ((C_111 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_112 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_107 : ((C_108 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_109 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_106 : ((C_105 : ((C_104 : ((C_103 : (C_102 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_101 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_115 : (q_1 = (C_114 : ((C_113 : (q_1 + 1)) :> int32))));
         (unrolling_21_loop : ());
         (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_117 : (rp_2 = (C_116 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_118 : (next_ptr = rp_2));
               
               ( requires (C_128 : ((C_129 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_130 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_125 : ((C_126 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_127 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_124 : ((C_123 : ((C_122 : ((C_121 : (C_120 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_119 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_133 : (q_1 = (C_132 : ((C_131 : (q_1 + 1)) :> int32))));
         (unrolling_20_loop : ());
         (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_135 : (rp_2 = (C_134 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_136 : (next_ptr = rp_2));
               
               ( requires (C_146 : ((C_147 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_148 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_143 : ((C_144 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_145 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_142 : ((C_141 : ((C_140 : ((C_139 : (C_138 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_137 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_151 : (q_1 = (C_150 : ((C_149 : (q_1 + 1)) :> int32))));
         (unrolling_19_loop : ());
         (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_153 : (rp_2 = (C_152 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_154 : (next_ptr = rp_2));
               
               ( requires (C_164 : ((C_165 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_166 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_161 : ((C_162 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_163 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_160 : ((C_159 : ((C_158 : ((C_157 : (C_156 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_155 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_169 : (q_1 = (C_168 : ((C_167 : (q_1 + 1)) :> int32))));
         (unrolling_18_loop : ());
         (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_171 : (rp_2 = (C_170 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_172 : (next_ptr = rp_2));
               
               ( requires (C_182 : ((C_183 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_184 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_179 : ((C_180 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_181 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_178 : ((C_177 : ((C_176 : ((C_175 : (C_174 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_173 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_187 : (q_1 = (C_186 : ((C_185 : (q_1 + 1)) :> int32))));
         (unrolling_17_loop : ());
         (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_189 : (rp_2 = (C_188 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_190 : (next_ptr = rp_2));
               
               ( requires (C_200 : ((C_201 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_202 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_197 : ((C_198 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_199 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_196 : ((C_195 : ((C_194 : ((C_193 : (C_192 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_191 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_205 : (q_1 = (C_204 : ((C_203 : (q_1 + 1)) :> int32))));
         (unrolling_16_loop : ());
         (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_207 : (rp_2 = (C_206 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_208 : (next_ptr = rp_2));
               
               ( requires (C_218 : ((C_219 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_220 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_215 : ((C_216 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_217 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_214 : ((C_213 : ((C_212 : ((C_211 : (C_210 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_209 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_223 : (q_1 = (C_222 : ((C_221 : (q_1 + 1)) :> int32))));
         (unrolling_15_loop : ());
         (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_225 : (rp_2 = (C_224 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_226 : (next_ptr = rp_2));
               
               ( requires (C_236 : ((C_237 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_238 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_233 : ((C_234 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_235 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_232 : ((C_231 : ((C_230 : ((C_229 : (C_228 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_227 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_241 : (q_1 = (C_240 : ((C_239 : (q_1 + 1)) :> int32))));
         (unrolling_14_loop : ());
         (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_243 : (rp_2 = (C_242 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_244 : (next_ptr = rp_2));
               
               ( requires (C_254 : ((C_255 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_256 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_251 : ((C_252 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_253 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_250 : ((C_249 : ((C_248 : ((C_247 : (C_246 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_245 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_259 : (q_1 = (C_258 : ((C_257 : (q_1 + 1)) :> int32))));
         (unrolling_13_loop : ());
         (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_261 : (rp_2 = (C_260 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_262 : (next_ptr = rp_2));
               
               ( requires (C_272 : ((C_273 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_274 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_269 : ((C_270 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_271 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_268 : ((C_267 : ((C_266 : ((C_265 : (C_264 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_263 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_277 : (q_1 = (C_276 : ((C_275 : (q_1 + 1)) :> int32))));
         (unrolling_12_loop : ());
         (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_279 : (rp_2 = (C_278 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_280 : (next_ptr = rp_2));
               
               ( requires (C_290 : ((C_291 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_292 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_287 : ((C_288 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_289 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_286 : ((C_285 : ((C_284 : ((C_283 : (C_282 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_281 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_295 : (q_1 = (C_294 : ((C_293 : (q_1 + 1)) :> int32))));
         (unrolling_11_loop : ());
         (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_297 : (rp_2 = (C_296 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_298 : (next_ptr = rp_2));
               
               ( requires (C_308 : ((C_309 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_310 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_305 : ((C_306 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_307 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_304 : ((C_303 : ((C_302 : ((C_301 : (C_300 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_299 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_313 : (q_1 = (C_312 : ((C_311 : (q_1 + 1)) :> int32))));
         (unrolling_10_loop : ());
         (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_315 : (rp_2 = (C_314 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_316 : (next_ptr = rp_2));
               
               ( requires (C_326 : ((C_327 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_328 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_323 : ((C_324 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_325 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_322 : ((C_321 : ((C_320 : ((C_319 : (C_318 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_317 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_331 : (q_1 = (C_330 : ((C_329 : (q_1 + 1)) :> int32))));
         (unrolling_9_loop : ());
         (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_333 : (rp_2 = (C_332 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_334 : (next_ptr = rp_2));
               
               ( requires (C_344 : ((C_345 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_346 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_341 : ((C_342 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_343 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_340 : ((C_339 : ((C_338 : ((C_337 : (C_336 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_335 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_349 : (q_1 = (C_348 : ((C_347 : (q_1 + 1)) :> int32))));
         (unrolling_8_loop : ());
         (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_351 : (rp_2 = (C_350 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_352 : (next_ptr = rp_2));
               
               ( requires (C_362 : ((C_363 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_364 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_359 : ((C_360 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_361 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_358 : ((C_357 : ((C_356 : ((C_355 : (C_354 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_353 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_367 : (q_1 = (C_366 : ((C_365 : (q_1 + 1)) :> int32))));
         (unrolling_7_loop : ());
         (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_369 : (rp_2 = (C_368 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_370 : (next_ptr = rp_2));
               
               ( requires (C_380 : ((C_381 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_382 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_377 : ((C_378 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_379 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_376 : ((C_375 : ((C_374 : ((C_373 : (C_372 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_371 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_385 : (q_1 = (C_384 : ((C_383 : (q_1 + 1)) :> int32))));
         (unrolling_6_loop : ());
         (if (q_1 < 16) then () else 
         (goto while_0_break));
         
         {  (C_387 : (rp_2 = (C_386 : (rdy_head + q_1).struct_proc___xM)));
            (if (rp_2 != null) then 
            {  (C_388 : (next_ptr = rp_2));
               
               ( requires (C_398 : ((C_399 : (\offset_min(rp_2.p_priv) <= 0)) &&
                                     (C_400 : (\offset_max(rp_2.p_priv) >= 0))));
                 
                 behavior default:
                   ensures (C_395 : ((C_396 : (\offset_min(bill_ptr) <= 0)) &&
                                      (C_397 : (\offset_max(bill_ptr) >= 0))));
                 { 
                 {  (if ((C_394 : ((C_393 : ((C_392 : ((C_391 : (C_390 : rp_2.p_priv).s_flags) :> int32)) &
                                              0x04)) :> int32)) !=
                          0) then (C_389 : (bill_ptr = rp_2)) else ())
                 }
                 });
               
               (goto return_label)
            } else ())
         };
         (C_403 : (q_1 = (C_402 : ((C_401 : (q_1 + 1)) :> int32))));
         (unrolling_5_loop : ());
         
         loop 
         while (true)
         {  
            {  (if (q_1 < 16) then () else 
               (goto while_0_break));
               
               {  (C_405 : (rp_2 = (C_404 : (rdy_head + q_1).struct_proc___xM)));
                  (if (rp_2 != null) then 
                  {  (C_406 : (next_ptr = rp_2));
                     
                     ( requires (C_416 : ((C_417 : (\offset_min(rp_2.p_priv) <=
                                                     0)) &&
                                           (C_418 : (\offset_max(rp_2.p_priv) >=
                                                      0))));
                       
                       behavior default:
                         ensures (C_413 : ((C_414 : (\offset_min(bill_ptr) <=
                                                      0)) &&
                                            (C_415 : (\offset_max(bill_ptr) >=
                                                       0))));
                       { 
                       {  (if ((C_412 : ((C_411 : ((C_410 : ((C_409 : 
                                                             (C_408 : rp_2.p_priv).s_flags) :> int32)) &
                                                    0x04)) :> int32)) !=
                                0) then (C_407 : (bill_ptr = rp_2)) else ())
                       }
                       });
                     
                     (goto return_label)
                  } else ())
               };
               (C_421 : (q_1 = (C_420 : ((C_419 : (q_1 + 1)) :> int32))))
            }
         };
         (unrolling_4_loop : ())
      };
      (while_0_break : ());
      (return_label : 
      (return ()))
   }
}

unit balance_queues(intP[..] tp)
  requires (C_475 : ((C_476 : (\offset_min(tp) <= 0)) &&
                      (C_477 : (\offset_max(tp) >= 0))));
  requires (C_472 : ((C_473 : (\offset_min(proc) <= 0)) &&
                      (C_474 : (\offset_max(proc) >= (104 - 1)))));
behavior default:
  ensures (C_471 : true);
{  
   (var proc_0[..] rp_3);
   
   (var int32 next_period);
   
   (var int32 ticks_added);
   
   {  (C_428 : (ticks_added = 0));
      (C_429 : (rp_3 = proc));
      
      loop 
      behavior default:
        invariant (C_430 : ((rp_3 - (proc + 104)) < 0));
      while (true)
      {  
         {  (if ((rp_3 - (C_431 : (proc + 104))) < 0) then () else 
            (goto while_0_break));
            
            {  (if (! ((C_466 : ((C_465 : rp_3.p_rts_flags) :> int32)) ==
                        0x01)) then (if ((C_464 : ((C_463 : rp_3.p_priority) :> int32)) >
                                          (C_462 : ((C_461 : rp_3.p_max_priority) :> int32))) then 
                                    {  (if ((C_446 : ((C_445 : rp_3.p_rts_flags) :> int32)) ==
                                             0) then (C_444 : dequeue(rp_3)) else ());
                                       (C_451 : (ticks_added = (C_450 : (
                                                               (C_449 : 
                                                               (ticks_added +
                                                                 (C_448 : (
                                                                 (C_447 : rp_3.p_quantum_size) :> int32)))) :> int32))));
                                       (C_457 : ((C_456 : rp_3.p_priority) = 
                                       (C_455 : ((C_454 : ((C_453 : (
                                                           (C_452 : rp_3.p_priority) :> int32)) -
                                                            1)) :> int8))));
                                       (if ((C_460 : ((C_459 : rp_3.p_rts_flags) :> int32)) ==
                                             0) then (C_458 : enqueue(rp_3)) else ())
                                    } else 
                                    {  (C_440 : (ticks_added = (C_439 : (
                                                               (C_438 : 
                                                               (ticks_added +
                                                                 (C_437 : (
                                                                 (C_436 : 
                                                                 ((C_435 : (
                                                                  (C_434 : rp_3.p_quantum_size) :> int32)) -
                                                                   (C_433 : (
                                                                   (C_432 : rp_3.p_ticks_left) :> int32)))) :> int32)))) :> int32))));
                                       (C_443 : ((C_442 : rp_3.p_ticks_left) = 
                                       (C_441 : rp_3.p_quantum_size)))
                                    }) else ())
            };
            (C_468 : (rp_3 = (C_467 : (rp_3 + 1))))
         }
      };
      (while_0_break : ());
      (if (100 > ticks_added) then (C_470 : (next_period = 100)) else 
      (C_469 : (next_period = ticks_added)));
      
      (return ())
   }
}

int32 main()
behavior default:
  ensures (C_480 : true);
{  
   (var int32 __retres);
   
   {  (C_478 : balance_queues(null));
      (C_479 : (__retres = 0));
      
      (return __retres)
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs bts0363.jessie/bts0363.cloc bts0363.jessie/bts0363.jc
type charP

type int16

type int32

type int8

type intP

type padding

type pproc_addr_6

type priv

type proc_0

type proc_5

type proc_ptr_2

type proc_ptr_28

type rdy_tail_8

type struct_proc___xP

type uint32

type uint8

type unsigned_charP

type unsigned_intP

type voidP

logic charP_tag:  -> charP tag_id

axiom charP_int : (int_of_tag(charP_tag) = (1))

logic charP_of_pointer_address: unit pointer -> charP pointer

axiom charP_of_pointer_address_of_pointer_addr :
 (forall p:charP pointer. (p = charP_of_pointer_address(pointer_address(p))))

axiom charP_parenttag_bottom : parenttag(charP_tag, bottom_tag)

axiom charP_tags :
 (forall x:charP pointer.
  (forall charP_tag_table:charP tag_table.
   instanceof(charP_tag_table, x, charP_tag)))

logic integer_of_int16: int16 -> int

predicate eq_int16(x:int16, y:int16) =
 eq_int(integer_of_int16(x), integer_of_int16(y))

logic integer_of_int32: int32 -> int

predicate eq_int32(x:int32, y:int32) =
 eq_int(integer_of_int32(x), integer_of_int32(y))

logic integer_of_int8: int8 -> int

predicate eq_int8(x:int8, y:int8) =
 eq_int(integer_of_int8(x), integer_of_int8(y))

logic integer_of_uint32: uint32 -> int

predicate eq_uint32(x:uint32, y:uint32) =
 eq_int(integer_of_uint32(x), integer_of_uint32(y))

logic integer_of_uint8: uint8 -> int

predicate eq_uint8(x:uint8, y:uint8) =
 eq_int(integer_of_uint8(x), integer_of_uint8(y))

logic int16_of_integer: int -> int16

axiom int16_coerce :
 (forall x:int.
  ((le_int((-32768), x) and le_int(x, (32767))) ->
   eq_int(integer_of_int16(int16_of_integer(x)), x)))

axiom int16_extensionality :
 (forall x:int16.
  (forall y:int16[eq_int(integer_of_int16(x), integer_of_int16(y))].
   (eq_int(integer_of_int16(x), integer_of_int16(y)) -> (x = y))))

axiom int16_range :
 (forall x:int16.
  (le_int((-32768), integer_of_int16(x))
  and le_int(integer_of_int16(x), (32767))))

logic int32_of_integer: int -> int32

axiom int32_coerce :
 (forall x:int.
  ((le_int((-2147483648), x) and le_int(x, (2147483647))) ->
   eq_int(integer_of_int32(int32_of_integer(x)), x)))

axiom int32_extensionality :
 (forall x:int32.
  (forall y:int32[eq_int(integer_of_int32(x), integer_of_int32(y))].
   (eq_int(integer_of_int32(x), integer_of_int32(y)) -> (x = y))))

axiom int32_range :
 (forall x:int32.
  (le_int((-2147483648), integer_of_int32(x))
  and le_int(integer_of_int32(x), (2147483647))))

logic int8_of_integer: int -> int8

axiom int8_coerce :
 (forall x:int.
  ((le_int((-128), x) and le_int(x, (127))) ->
   eq_int(integer_of_int8(int8_of_integer(x)), x)))

axiom int8_extensionality :
 (forall x:int8.
  (forall y:int8[eq_int(integer_of_int8(x), integer_of_int8(y))].
   (eq_int(integer_of_int8(x), integer_of_int8(y)) -> (x = y))))

axiom int8_range :
 (forall x:int8.
  (le_int((-128), integer_of_int8(x)) and le_int(integer_of_int8(x), (127))))

logic intP_tag:  -> intP tag_id

axiom intP_int : (int_of_tag(intP_tag) = (1))

logic intP_of_pointer_address: unit pointer -> intP pointer

axiom intP_of_pointer_address_of_pointer_addr :
 (forall p:intP pointer. (p = intP_of_pointer_address(pointer_address(p))))

axiom intP_parenttag_bottom : parenttag(intP_tag, bottom_tag)

axiom intP_tags :
 (forall x:intP pointer.
  (forall intP_tag_table:intP tag_table.
   instanceof(intP_tag_table, x, intP_tag)))

predicate left_valid_struct_charP(p:charP pointer, a:int,
 charP_alloc_table:charP alloc_table) =
 (offset_min(charP_alloc_table, p) <= a)

predicate left_valid_struct_intP(p:intP pointer, a:int,
 intP_alloc_table:intP alloc_table) = (offset_min(intP_alloc_table, p) <= a)

predicate left_valid_struct_priv(p:priv pointer, a:int,
 priv_alloc_table:priv alloc_table) = (offset_min(priv_alloc_table, p) <= a)

predicate left_valid_struct_struct_proc___xP(p:struct_proc___xP pointer,
 a:int, struct_proc___xP_alloc_table:struct_proc___xP alloc_table) =
 (offset_min(struct_proc___xP_alloc_table, p) <= a)

predicate left_valid_struct_proc_0(p:proc_0 pointer, a:int,
 proc_0_alloc_table:proc_0 alloc_table,
 struct_proc___xP_alloc_table:struct_proc___xP alloc_table,
 proc_0_p_nextready:(proc_0, struct_proc___xP pointer) memory) =
 ((offset_min(proc_0_alloc_table, p) <= a)
 and left_valid_struct_struct_proc___xP(select(proc_0_p_nextready, p), (0),
     struct_proc___xP_alloc_table))

predicate left_valid_struct_unsigned_charP(p:unsigned_charP pointer, a:int,
 unsigned_charP_alloc_table:unsigned_charP alloc_table) =
 (offset_min(unsigned_charP_alloc_table, p) <= a)

predicate left_valid_struct_unsigned_intP(p:unsigned_intP pointer, a:int,
 unsigned_intP_alloc_table:unsigned_intP alloc_table) =
 (offset_min(unsigned_intP_alloc_table, p) <= a)

predicate left_valid_struct_voidP(p:voidP pointer, a:int,
 voidP_alloc_table:voidP alloc_table) =
 (offset_min(voidP_alloc_table, p) <= a)

axiom pointer_addr_of_charP_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(charP_of_pointer_address(p))))

axiom pointer_addr_of_intP_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(intP_of_pointer_address(p))))

logic priv_of_pointer_address: unit pointer -> priv pointer

axiom pointer_addr_of_priv_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(priv_of_pointer_address(p))))

logic proc_0_of_pointer_address: unit pointer -> proc_0 pointer

axiom pointer_addr_of_proc_0_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(proc_0_of_pointer_address(p))))

logic struct_proc___xP_of_pointer_address: unit pointer -> struct_proc___xP pointer

axiom pointer_addr_of_struct_proc___xP_of_pointer_address :
 (forall p:unit pointer.
  (p = pointer_address(struct_proc___xP_of_pointer_address(p))))

logic unsigned_charP_of_pointer_address: unit pointer -> unsigned_charP pointer

axiom pointer_addr_of_unsigned_charP_of_pointer_address :
 (forall p:unit pointer.
  (p = pointer_address(unsigned_charP_of_pointer_address(p))))

logic unsigned_intP_of_pointer_address: unit pointer -> unsigned_intP pointer

axiom pointer_addr_of_unsigned_intP_of_pointer_address :
 (forall p:unit pointer.
  (p = pointer_address(unsigned_intP_of_pointer_address(p))))

logic voidP_of_pointer_address: unit pointer -> voidP pointer

axiom pointer_addr_of_voidP_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(voidP_of_pointer_address(p))))

logic pproc_addr:  -> struct_proc___xP pointer

logic prev_ptr:  -> proc_0 pointer

logic priv_tag:  -> priv tag_id

axiom priv_int : (int_of_tag(priv_tag) = (1))

axiom priv_of_pointer_address_of_pointer_addr :
 (forall p:priv pointer. (p = priv_of_pointer_address(pointer_address(p))))

axiom priv_parenttag_bottom : parenttag(priv_tag, bottom_tag)

axiom priv_tags :
 (forall x:priv pointer.
  (forall priv_tag_table:priv tag_table.
   instanceof(priv_tag_table, x, priv_tag)))

logic proc:  -> proc_0 pointer

logic proc_0_tag:  -> proc_0 tag_id

axiom proc_0_int : (int_of_tag(proc_0_tag) = (1))

axiom proc_0_of_pointer_address_of_pointer_addr :
 (forall p:proc_0 pointer.
  (p = proc_0_of_pointer_address(pointer_address(p))))

axiom proc_0_parenttag_bottom : parenttag(proc_0_tag, bottom_tag)

axiom proc_0_tags :
 (forall x:proc_0 pointer.
  (forall proc_0_tag_table:proc_0 tag_table.
   instanceof(proc_0_tag_table, x, proc_0_tag)))

logic proc_ptr:  -> proc_0 pointer

logic rdy_head:  -> struct_proc___xP pointer

logic rdy_tail:  -> struct_proc___xP pointer

predicate right_valid_struct_charP(p:charP pointer, b:int,
 charP_alloc_table:charP alloc_table) =
 (offset_max(charP_alloc_table, p) >= b)

predicate right_valid_struct_intP(p:intP pointer, b:int,
 intP_alloc_table:intP alloc_table) = (offset_max(intP_alloc_table, p) >= b)

predicate right_valid_struct_priv(p:priv pointer, b:int,
 priv_alloc_table:priv alloc_table) = (offset_max(priv_alloc_table, p) >= b)

predicate right_valid_struct_struct_proc___xP(p:struct_proc___xP pointer,
 b:int, struct_proc___xP_alloc_table:struct_proc___xP alloc_table) =
 (offset_max(struct_proc___xP_alloc_table, p) >= b)

predicate right_valid_struct_proc_0(p:proc_0 pointer, b:int,
 proc_0_alloc_table:proc_0 alloc_table,
 struct_proc___xP_alloc_table:struct_proc___xP alloc_table,
 proc_0_p_nextready:(proc_0, struct_proc___xP pointer) memory) =
 ((offset_max(proc_0_alloc_table, p) >= b)
 and right_valid_struct_struct_proc___xP(select(proc_0_p_nextready, p), (0),
     struct_proc___xP_alloc_table))

predicate right_valid_struct_unsigned_charP(p:unsigned_charP pointer, b:int,
 unsigned_charP_alloc_table:unsigned_charP alloc_table) =
 (offset_max(unsigned_charP_alloc_table, p) >= b)

predicate right_valid_struct_unsigned_intP(p:unsigned_intP pointer, b:int,
 unsigned_intP_alloc_table:unsigned_intP alloc_table) =
 (offset_max(unsigned_intP_alloc_table, p) >= b)

predicate right_valid_struct_voidP(p:voidP pointer, b:int,
 voidP_alloc_table:voidP alloc_table) =
 (offset_max(voidP_alloc_table, p) >= b)

predicate strict_valid_root_charP(p:charP pointer, a:int, b:int,
 charP_alloc_table:charP alloc_table) =
 ((offset_min(charP_alloc_table, p) = a)
 and (offset_max(charP_alloc_table, p) = b))

predicate strict_valid_root_intP(p:intP pointer, a:int, b:int,
 intP_alloc_table:intP alloc_table) =
 ((offset_min(intP_alloc_table, p) = a)
 and (offset_max(intP_alloc_table, p) = b))

predicate strict_valid_root_priv(p:priv pointer, a:int, b:int,
 priv_alloc_table:priv alloc_table) =
 ((offset_min(priv_alloc_table, p) = a)
 and (offset_max(priv_alloc_table, p) = b))

predicate strict_valid_root_proc_0(p:proc_0 pointer, a:int, b:int,
 proc_0_alloc_table:proc_0 alloc_table) =
 ((offset_min(proc_0_alloc_table, p) = a)
 and (offset_max(proc_0_alloc_table, p) = b))

predicate strict_valid_root_struct_proc___xP(p:struct_proc___xP pointer,
 a:int, b:int, struct_proc___xP_alloc_table:struct_proc___xP alloc_table) =
 ((offset_min(struct_proc___xP_alloc_table, p) = a)
 and (offset_max(struct_proc___xP_alloc_table, p) = b))

predicate strict_valid_root_unsigned_charP(p:unsigned_charP pointer, a:int,
 b:int, unsigned_charP_alloc_table:unsigned_charP alloc_table) =
 ((offset_min(unsigned_charP_alloc_table, p) = a)
 and (offset_max(unsigned_charP_alloc_table, p) = b))

predicate strict_valid_root_unsigned_intP(p:unsigned_intP pointer, a:int,
 b:int, unsigned_intP_alloc_table:unsigned_intP alloc_table) =
 ((offset_min(unsigned_intP_alloc_table, p) = a)
 and (offset_max(unsigned_intP_alloc_table, p) = b))

predicate strict_valid_root_voidP(p:voidP pointer, a:int, b:int,
 voidP_alloc_table:voidP alloc_table) =
 ((offset_min(voidP_alloc_table, p) = a)
 and (offset_max(voidP_alloc_table, p) = b))

predicate strict_valid_struct_charP(p:charP pointer, a:int, b:int,
 charP_alloc_table:charP alloc_table) =
 ((offset_min(charP_alloc_table, p) = a)
 and (offset_max(charP_alloc_table, p) = b))

predicate strict_valid_struct_intP(p:intP pointer, a:int, b:int,
 intP_alloc_table:intP alloc_table) =
 ((offset_min(intP_alloc_table, p) = a)
 and (offset_max(intP_alloc_table, p) = b))

predicate strict_valid_struct_priv(p:priv pointer, a:int, b:int,
 priv_alloc_table:priv alloc_table) =
 ((offset_min(priv_alloc_table, p) = a)
 and (offset_max(priv_alloc_table, p) = b))

predicate strict_valid_struct_struct_proc___xP(p:struct_proc___xP pointer,
 a:int, b:int, struct_proc___xP_alloc_table:struct_proc___xP alloc_table) =
 ((offset_min(struct_proc___xP_alloc_table, p) = a)
 and (offset_max(struct_proc___xP_alloc_table, p) = b))

predicate strict_valid_struct_proc_0(p:proc_0 pointer, a:int, b:int,
 proc_0_alloc_table:proc_0 alloc_table,
 struct_proc___xP_alloc_table:struct_proc___xP alloc_table,
 proc_0_p_nextready:(proc_0, struct_proc___xP pointer) memory) =
 ((offset_min(proc_0_alloc_table, p) = a)
 and ((offset_max(proc_0_alloc_table, p) = b)
     and strict_valid_struct_struct_proc___xP(select(proc_0_p_nextready, p),
         (0), (0), struct_proc___xP_alloc_table)))

predicate strict_valid_struct_unsigned_charP(p:unsigned_charP pointer, a:int,
 b:int, unsigned_charP_alloc_table:unsigned_charP alloc_table) =
 ((offset_min(unsigned_charP_alloc_table, p) = a)
 and (offset_max(unsigned_charP_alloc_table, p) = b))

predicate strict_valid_struct_unsigned_intP(p:unsigned_intP pointer, a:int,
 b:int, unsigned_intP_alloc_table:unsigned_intP alloc_table) =
 ((offset_min(unsigned_intP_alloc_table, p) = a)
 and (offset_max(unsigned_intP_alloc_table, p) = b))

predicate strict_valid_struct_voidP(p:voidP pointer, a:int, b:int,
 voidP_alloc_table:voidP alloc_table) =
 ((offset_min(voidP_alloc_table, p) = a)
 and (offset_max(voidP_alloc_table, p) = b))

logic struct_proc___xP_tag:  -> struct_proc___xP tag_id

axiom struct_proc___xP_int : (int_of_tag(struct_proc___xP_tag) = (1))

axiom struct_proc___xP_of_pointer_address_of_pointer_addr :
 (forall p:struct_proc___xP pointer.
  (p = struct_proc___xP_of_pointer_address(pointer_address(p))))

axiom struct_proc___xP_parenttag_bottom :
 parenttag(struct_proc___xP_tag, bottom_tag)

axiom struct_proc___xP_tags :
 (forall x:struct_proc___xP pointer.
  (forall struct_proc___xP_tag_table:struct_proc___xP tag_table.
   instanceof(struct_proc___xP_tag_table, x, struct_proc___xP_tag)))

logic uint32_of_integer: int -> uint32

axiom uint32_coerce :
 (forall x:int.
  ((le_int((0), x) and le_int(x, (4294967295))) ->
   eq_int(integer_of_uint32(uint32_of_integer(x)), x)))

axiom uint32_extensionality :
 (forall x:uint32.
  (forall y:uint32[eq_int(integer_of_uint32(x), integer_of_uint32(y))].
   (eq_int(integer_of_uint32(x), integer_of_uint32(y)) -> (x = y))))

axiom uint32_range :
 (forall x:uint32.
  (le_int((0), integer_of_uint32(x))
  and le_int(integer_of_uint32(x), (4294967295))))

logic uint8_of_integer: int -> uint8

axiom uint8_coerce :
 (forall x:int.
  ((le_int((0), x) and le_int(x, (255))) ->
   eq_int(integer_of_uint8(uint8_of_integer(x)), x)))

axiom uint8_extensionality :
 (forall x:uint8.
  (forall y:uint8[eq_int(integer_of_uint8(x), integer_of_uint8(y))].
   (eq_int(integer_of_uint8(x), integer_of_uint8(y)) -> (x = y))))

axiom uint8_range :
 (forall x:uint8.
  (le_int((0), integer_of_uint8(x)) and le_int(integer_of_uint8(x), (255))))

logic unsigned_charP_tag:  -> unsigned_charP tag_id

axiom unsigned_charP_int : (int_of_tag(unsigned_charP_tag) = (1))

axiom unsigned_charP_of_pointer_address_of_pointer_addr :
 (forall p:unsigned_charP pointer.
  (p = unsigned_charP_of_pointer_address(pointer_address(p))))

axiom unsigned_charP_parenttag_bottom :
 parenttag(unsigned_charP_tag, bottom_tag)

axiom unsigned_charP_tags :
 (forall x:unsigned_charP pointer.
  (forall unsigned_charP_tag_table:unsigned_charP tag_table.
   instanceof(unsigned_charP_tag_table, x, unsigned_charP_tag)))

logic unsigned_intP_tag:  -> unsigned_intP tag_id

axiom unsigned_intP_int : (int_of_tag(unsigned_intP_tag) = (1))

axiom unsigned_intP_of_pointer_address_of_pointer_addr :
 (forall p:unsigned_intP pointer.
  (p = unsigned_intP_of_pointer_address(pointer_address(p))))

axiom unsigned_intP_parenttag_bottom :
 parenttag(unsigned_intP_tag, bottom_tag)

axiom unsigned_intP_tags :
 (forall x:unsigned_intP pointer.
  (forall unsigned_intP_tag_table:unsigned_intP tag_table.
   instanceof(unsigned_intP_tag_table, x, unsigned_intP_tag)))

predicate valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table:struct_proc___xP alloc_table) =
 (le_int(offset_min(struct_proc___xP_pproc_addr_6_alloc_table, pproc_addr),
  (0))
 and ge_int(offset_max(struct_proc___xP_pproc_addr_6_alloc_table, pproc_addr),
     (103)))

predicate valid_proc(proc_0_proc_5_alloc_table:proc_0 alloc_table) =
 (le_int(offset_min(proc_0_proc_5_alloc_table, proc), (0))
 and ge_int(offset_max(proc_0_proc_5_alloc_table, proc), (103)))

predicate valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table:struct_proc___xP alloc_table) =
 (le_int(offset_min(struct_proc___xP_proc_ptr_2_alloc_table, rdy_head), (0))
 and ge_int(offset_max(struct_proc___xP_proc_ptr_2_alloc_table, rdy_head),
     (15)))

predicate valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table:struct_proc___xP alloc_table) =
 (le_int(offset_min(struct_proc___xP_rdy_tail_8_alloc_table, rdy_tail), (0))
 and ge_int(offset_max(struct_proc___xP_rdy_tail_8_alloc_table, rdy_tail),
     (15)))

predicate valid_root_charP(p:charP pointer, a:int, b:int,
 charP_alloc_table:charP alloc_table) =
 ((offset_min(charP_alloc_table, p) <= a)
 and (offset_max(charP_alloc_table, p) >= b))

predicate valid_root_intP(p:intP pointer, a:int, b:int,
 intP_alloc_table:intP alloc_table) =
 ((offset_min(intP_alloc_table, p) <= a)
 and (offset_max(intP_alloc_table, p) >= b))

predicate valid_root_priv(p:priv pointer, a:int, b:int,
 priv_alloc_table:priv alloc_table) =
 ((offset_min(priv_alloc_table, p) <= a)
 and (offset_max(priv_alloc_table, p) >= b))

predicate valid_root_proc_0(p:proc_0 pointer, a:int, b:int,
 proc_0_alloc_table:proc_0 alloc_table) =
 ((offset_min(proc_0_alloc_table, p) <= a)
 and (offset_max(proc_0_alloc_table, p) >= b))

predicate valid_root_struct_proc___xP(p:struct_proc___xP pointer, a:int,
 b:int, struct_proc___xP_alloc_table:struct_proc___xP alloc_table) =
 ((offset_min(struct_proc___xP_alloc_table, p) <= a)
 and (offset_max(struct_proc___xP_alloc_table, p) >= b))

predicate valid_root_unsigned_charP(p:unsigned_charP pointer, a:int, b:int,
 unsigned_charP_alloc_table:unsigned_charP alloc_table) =
 ((offset_min(unsigned_charP_alloc_table, p) <= a)
 and (offset_max(unsigned_charP_alloc_table, p) >= b))

predicate valid_root_unsigned_intP(p:unsigned_intP pointer, a:int, b:int,
 unsigned_intP_alloc_table:unsigned_intP alloc_table) =
 ((offset_min(unsigned_intP_alloc_table, p) <= a)
 and (offset_max(unsigned_intP_alloc_table, p) >= b))

predicate valid_root_voidP(p:voidP pointer, a:int, b:int,
 voidP_alloc_table:voidP alloc_table) =
 ((offset_min(voidP_alloc_table, p) <= a)
 and (offset_max(voidP_alloc_table, p) >= b))

predicate valid_struct_charP(p:charP pointer, a:int, b:int,
 charP_alloc_table:charP alloc_table) =
 ((offset_min(charP_alloc_table, p) <= a)
 and (offset_max(charP_alloc_table, p) >= b))

predicate valid_struct_intP(p:intP pointer, a:int, b:int,
 intP_alloc_table:intP alloc_table) =
 ((offset_min(intP_alloc_table, p) <= a)
 and (offset_max(intP_alloc_table, p) >= b))

predicate valid_struct_priv(p:priv pointer, a:int, b:int,
 priv_alloc_table:priv alloc_table) =
 ((offset_min(priv_alloc_table, p) <= a)
 and (offset_max(priv_alloc_table, p) >= b))

predicate valid_struct_struct_proc___xP(p:struct_proc___xP pointer, a:int,
 b:int, struct_proc___xP_alloc_table:struct_proc___xP alloc_table) =
 ((offset_min(struct_proc___xP_alloc_table, p) <= a)
 and (offset_max(struct_proc___xP_alloc_table, p) >= b))

predicate valid_struct_proc_0(p:proc_0 pointer, a:int, b:int,
 proc_0_alloc_table:proc_0 alloc_table,
 struct_proc___xP_alloc_table:struct_proc___xP alloc_table,
 proc_0_p_nextready:(proc_0, struct_proc___xP pointer) memory) =
 ((offset_min(proc_0_alloc_table, p) <= a)
 and ((offset_max(proc_0_alloc_table, p) >= b)
     and valid_struct_struct_proc___xP(select(proc_0_p_nextready, p), (0),
         (0), struct_proc___xP_alloc_table)))

predicate valid_struct_unsigned_charP(p:unsigned_charP pointer, a:int, b:int,
 unsigned_charP_alloc_table:unsigned_charP alloc_table) =
 ((offset_min(unsigned_charP_alloc_table, p) <= a)
 and (offset_max(unsigned_charP_alloc_table, p) >= b))

predicate valid_struct_unsigned_intP(p:unsigned_intP pointer, a:int, b:int,
 unsigned_intP_alloc_table:unsigned_intP alloc_table) =
 ((offset_min(unsigned_intP_alloc_table, p) <= a)
 and (offset_max(unsigned_intP_alloc_table, p) >= b))

predicate valid_struct_voidP(p:voidP pointer, a:int, b:int,
 voidP_alloc_table:voidP alloc_table) =
 ((offset_min(voidP_alloc_table, p) <= a)
 and (offset_max(voidP_alloc_table, p) >= b))

logic voidP_tag:  -> voidP tag_id

axiom voidP_int : (int_of_tag(voidP_tag) = (1))

axiom voidP_of_pointer_address_of_pointer_addr :
 (forall p:voidP pointer. (p = voidP_of_pointer_address(pointer_address(p))))

axiom voidP_parenttag_bottom : parenttag(voidP_tag, bottom_tag)

axiom voidP_tags :
 (forall x:voidP pointer.
  (forall voidP_tag_table:voidP tag_table.
   instanceof(voidP_tag_table, x, voidP_tag)))

exception Goto__LOR_0_exc of unit

exception Goto__LOR_exc of unit

exception Goto_while_0_break_exc of unit

exception Loop_continue_exc of unit

exception Loop_exit_exc of unit

exception Return_label_exc of unit

parameter charP_alloc_table : charP alloc_table ref

parameter charP_tag_table : charP tag_table ref

parameter alloc_struct_charP :
 n:int ->
  charP_alloc_table:charP alloc_table ref ->
   charP_tag_table:charP tag_table ref ->
    { } charP pointer writes charP_alloc_table,charP_tag_table
    { (strict_valid_struct_charP(result, (0), sub_int(n, (1)),
       charP_alloc_table)
      and (alloc_extends(charP_alloc_table@, charP_alloc_table)
          and (alloc_fresh(charP_alloc_table@, result, n)
              and instanceof(charP_tag_table, result, charP_tag)))) }

parameter alloc_struct_charP_requires :
 n:int ->
  charP_alloc_table:charP alloc_table ref ->
   charP_tag_table:charP tag_table ref ->
    { ge_int(n, (0))} charP pointer writes charP_alloc_table,charP_tag_table
    { (strict_valid_struct_charP(result, (0), sub_int(n, (1)),
       charP_alloc_table)
      and (alloc_extends(charP_alloc_table@, charP_alloc_table)
          and (alloc_fresh(charP_alloc_table@, result, n)
              and instanceof(charP_tag_table, result, charP_tag)))) }

parameter intP_alloc_table : intP alloc_table ref

parameter intP_tag_table : intP tag_table ref

parameter alloc_struct_intP :
 n:int ->
  intP_alloc_table:intP alloc_table ref ->
   intP_tag_table:intP tag_table ref ->
    { } intP pointer writes intP_alloc_table,intP_tag_table
    { (strict_valid_struct_intP(result, (0), sub_int(n, (1)),
       intP_alloc_table)
      and (alloc_extends(intP_alloc_table@, intP_alloc_table)
          and (alloc_fresh(intP_alloc_table@, result, n)
              and instanceof(intP_tag_table, result, intP_tag)))) }

parameter alloc_struct_intP_requires :
 n:int ->
  intP_alloc_table:intP alloc_table ref ->
   intP_tag_table:intP tag_table ref ->
    { ge_int(n, (0))} intP pointer writes intP_alloc_table,intP_tag_table
    { (strict_valid_struct_intP(result, (0), sub_int(n, (1)),
       intP_alloc_table)
      and (alloc_extends(intP_alloc_table@, intP_alloc_table)
          and (alloc_fresh(intP_alloc_table@, result, n)
              and instanceof(intP_tag_table, result, intP_tag)))) }

parameter priv_alloc_table : priv alloc_table ref

parameter priv_tag_table : priv tag_table ref

parameter alloc_struct_priv :
 n:int ->
  priv_alloc_table:priv alloc_table ref ->
   priv_tag_table:priv tag_table ref ->
    { } priv pointer writes priv_alloc_table,priv_tag_table
    { (strict_valid_struct_priv(result, (0), sub_int(n, (1)),
       priv_alloc_table)
      and (alloc_extends(priv_alloc_table@, priv_alloc_table)
          and (alloc_fresh(priv_alloc_table@, result, n)
              and instanceof(priv_tag_table, result, priv_tag)))) }

parameter alloc_struct_priv_requires :
 n:int ->
  priv_alloc_table:priv alloc_table ref ->
   priv_tag_table:priv tag_table ref ->
    { ge_int(n, (0))} priv pointer writes priv_alloc_table,priv_tag_table
    { (strict_valid_struct_priv(result, (0), sub_int(n, (1)),
       priv_alloc_table)
      and (alloc_extends(priv_alloc_table@, priv_alloc_table)
          and (alloc_fresh(priv_alloc_table@, result, n)
              and instanceof(priv_tag_table, result, priv_tag)))) }

parameter proc_0_alloc_table : proc_0 alloc_table ref

parameter struct_proc___xP_alloc_table : struct_proc___xP alloc_table ref

parameter proc_0_tag_table : proc_0 tag_table ref

parameter alloc_struct_proc_0 :
 n:int ->
  proc_0_alloc_table:proc_0 alloc_table ref ->
   struct_proc___xP_alloc_table:struct_proc___xP alloc_table ref ->
    proc_0_tag_table:proc_0 tag_table ref ->
     proc_0_p_nextready:(proc_0, struct_proc___xP pointer) memory ->
      { } proc_0 pointer
      writes proc_0_alloc_table,proc_0_tag_table,struct_proc___xP_alloc_table
      { (strict_valid_struct_proc_0(result, (0), sub_int(n, (1)),
         proc_0_alloc_table, struct_proc___xP_alloc_table,
         proc_0_p_nextready)
        and (alloc_extends(proc_0_alloc_table@, proc_0_alloc_table)
            and (alloc_fresh(proc_0_alloc_table@, result, n)
                and instanceof(proc_0_tag_table, result, proc_0_tag)))) }

parameter alloc_struct_proc_0_requires :
 n:int ->
  proc_0_alloc_table:proc_0 alloc_table ref ->
   struct_proc___xP_alloc_table:struct_proc___xP alloc_table ref ->
    proc_0_tag_table:proc_0 tag_table ref ->
     proc_0_p_nextready:(proc_0, struct_proc___xP pointer) memory ->
      { ge_int(n, (0))} proc_0 pointer
      writes proc_0_alloc_table,proc_0_tag_table,struct_proc___xP_alloc_table
      { (strict_valid_struct_proc_0(result, (0), sub_int(n, (1)),
         proc_0_alloc_table, struct_proc___xP_alloc_table,
         proc_0_p_nextready)
        and (alloc_extends(proc_0_alloc_table@, proc_0_alloc_table)
            and (alloc_fresh(proc_0_alloc_table@, result, n)
                and instanceof(proc_0_tag_table, result, proc_0_tag)))) }

parameter struct_proc___xP_tag_table : struct_proc___xP tag_table ref

parameter alloc_struct_struct_proc___xP :
 n:int ->
  struct_proc___xP_alloc_table:struct_proc___xP alloc_table ref ->
   struct_proc___xP_tag_table:struct_proc___xP tag_table ref ->
    { } struct_proc___xP pointer
    writes struct_proc___xP_alloc_table,struct_proc___xP_tag_table
    { (strict_valid_struct_struct_proc___xP(result, (0), sub_int(n, (1)),
       struct_proc___xP_alloc_table)
      and (alloc_extends(struct_proc___xP_alloc_table@,
           struct_proc___xP_alloc_table)
          and (alloc_fresh(struct_proc___xP_alloc_table@, result, n)
              and instanceof(struct_proc___xP_tag_table, result,
                  struct_proc___xP_tag)))) }

parameter alloc_struct_struct_proc___xP_requires :
 n:int ->
  struct_proc___xP_alloc_table:struct_proc___xP alloc_table ref ->
   struct_proc___xP_tag_table:struct_proc___xP tag_table ref ->
    { ge_int(n, (0))} struct_proc___xP pointer
    writes struct_proc___xP_alloc_table,struct_proc___xP_tag_table
    { (strict_valid_struct_struct_proc___xP(result, (0), sub_int(n, (1)),
       struct_proc___xP_alloc_table)
      and (alloc_extends(struct_proc___xP_alloc_table@,
           struct_proc___xP_alloc_table)
          and (alloc_fresh(struct_proc___xP_alloc_table@, result, n)
              and instanceof(struct_proc___xP_tag_table, result,
                  struct_proc___xP_tag)))) }

parameter unsigned_charP_alloc_table : unsigned_charP alloc_table ref

parameter unsigned_charP_tag_table : unsigned_charP tag_table ref

parameter alloc_struct_unsigned_charP :
 n:int ->
  unsigned_charP_alloc_table:unsigned_charP alloc_table ref ->
   unsigned_charP_tag_table:unsigned_charP tag_table ref ->
    { } unsigned_charP pointer
    writes unsigned_charP_alloc_table,unsigned_charP_tag_table
    { (strict_valid_struct_unsigned_charP(result, (0), sub_int(n, (1)),
       unsigned_charP_alloc_table)
      and (alloc_extends(unsigned_charP_alloc_table@,
           unsigned_charP_alloc_table)
          and (alloc_fresh(unsigned_charP_alloc_table@, result, n)
              and instanceof(unsigned_charP_tag_table, result,
                  unsigned_charP_tag)))) }

parameter alloc_struct_unsigned_charP_requires :
 n:int ->
  unsigned_charP_alloc_table:unsigned_charP alloc_table ref ->
   unsigned_charP_tag_table:unsigned_charP tag_table ref ->
    { ge_int(n, (0))} unsigned_charP pointer
    writes unsigned_charP_alloc_table,unsigned_charP_tag_table
    { (strict_valid_struct_unsigned_charP(result, (0), sub_int(n, (1)),
       unsigned_charP_alloc_table)
      and (alloc_extends(unsigned_charP_alloc_table@,
           unsigned_charP_alloc_table)
          and (alloc_fresh(unsigned_charP_alloc_table@, result, n)
              and instanceof(unsigned_charP_tag_table, result,
                  unsigned_charP_tag)))) }

parameter unsigned_intP_alloc_table : unsigned_intP alloc_table ref

parameter unsigned_intP_tag_table : unsigned_intP tag_table ref

parameter alloc_struct_unsigned_intP :
 n:int ->
  unsigned_intP_alloc_table:unsigned_intP alloc_table ref ->
   unsigned_intP_tag_table:unsigned_intP tag_table ref ->
    { } unsigned_intP pointer
    writes unsigned_intP_alloc_table,unsigned_intP_tag_table
    { (strict_valid_struct_unsigned_intP(result, (0), sub_int(n, (1)),
       unsigned_intP_alloc_table)
      and (alloc_extends(unsigned_intP_alloc_table@,
           unsigned_intP_alloc_table)
          and (alloc_fresh(unsigned_intP_alloc_table@, result, n)
              and instanceof(unsigned_intP_tag_table, result,
                  unsigned_intP_tag)))) }

parameter alloc_struct_unsigned_intP_requires :
 n:int ->
  unsigned_intP_alloc_table:unsigned_intP alloc_table ref ->
   unsigned_intP_tag_table:unsigned_intP tag_table ref ->
    { ge_int(n, (0))} unsigned_intP pointer
    writes unsigned_intP_alloc_table,unsigned_intP_tag_table
    { (strict_valid_struct_unsigned_intP(result, (0), sub_int(n, (1)),
       unsigned_intP_alloc_table)
      and (alloc_extends(unsigned_intP_alloc_table@,
           unsigned_intP_alloc_table)
          and (alloc_fresh(unsigned_intP_alloc_table@, result, n)
              and instanceof(unsigned_intP_tag_table, result,
                  unsigned_intP_tag)))) }

parameter voidP_alloc_table : voidP alloc_table ref

parameter voidP_tag_table : voidP tag_table ref

parameter alloc_struct_voidP :
 n:int ->
  voidP_alloc_table:voidP alloc_table ref ->
   voidP_tag_table:voidP tag_table ref ->
    { } voidP pointer writes voidP_alloc_table,voidP_tag_table
    { (strict_valid_struct_voidP(result, (0), sub_int(n, (1)),
       voidP_alloc_table)
      and (alloc_extends(voidP_alloc_table@, voidP_alloc_table)
          and (alloc_fresh(voidP_alloc_table@, result, n)
              and instanceof(voidP_tag_table, result, voidP_tag)))) }

parameter alloc_struct_voidP_requires :
 n:int ->
  voidP_alloc_table:voidP alloc_table ref ->
   voidP_tag_table:voidP tag_table ref ->
    { ge_int(n, (0))} voidP pointer writes voidP_alloc_table,voidP_tag_table
    { (strict_valid_struct_voidP(result, (0), sub_int(n, (1)),
       voidP_alloc_table)
      and (alloc_extends(voidP_alloc_table@, voidP_alloc_table)
          and (alloc_fresh(voidP_alloc_table@, result, n)
              and instanceof(voidP_tag_table, result, voidP_tag)))) }

parameter any_int16 : unit -> { } int16 { true }

parameter any_int32 : unit -> { } int32 { true }

parameter any_int8 : unit -> { } int8 { true }

parameter any_uint32 : unit -> { } uint32 { true }

parameter any_uint8 : unit -> { } uint8 { true }

parameter struct_proc___xP_rdy_tail_8_alloc_table :
 struct_proc___xP alloc_table ref

parameter struct_proc___xP_pproc_addr_6_alloc_table :
 struct_proc___xP alloc_table ref

parameter struct_proc___xP_proc_ptr_2_alloc_table :
 struct_proc___xP alloc_table ref

parameter proc_0_proc_5_alloc_table : proc_0 alloc_table ref

parameter proc_0_proc_ptr_2_alloc_table : proc_0 alloc_table ref

parameter priv_proc_ptr_28_alloc_table : priv alloc_table ref

parameter proc_0_p_nextready_proc_ptr_2 :
 (proc_0, struct_proc___xP pointer) memory ref

parameter proc_0_p_quantum_size_proc_5 : (proc_0, int8) memory ref

parameter proc_0_p_quantum_size_proc_ptr_2 : (proc_0, int8) memory ref

parameter proc_0_p_ticks_left_proc_5 : (proc_0, int8) memory ref

parameter proc_0_p_ticks_left_proc_ptr_2 : (proc_0, int8) memory ref

parameter proc_0_p_max_priority_proc_5 : (proc_0, int8) memory ref

parameter proc_0_p_priority_proc_5 : (proc_0, int8) memory ref

parameter proc_0_p_priority_proc_ptr_2 : (proc_0, int8) memory ref

parameter proc_0_p_rts_flags_proc_5 : (proc_0, int16) memory ref

parameter proc_0_p_rts_flags_proc_ptr_2 : (proc_0, int16) memory ref

parameter proc_0_p_priv_proc_ptr_2 : (proc_0, priv pointer) memory ref

parameter proc_0_p_nr_proc_ptr_2 : (proc_0, int32) memory ref

parameter priv_s_flags_proc_ptr_28 : (priv, int16) memory ref

parameter struct_proc___xP_struct_proc___xM_rdy_tail_8 :
 (struct_proc___xP, proc_0 pointer) memory ref

parameter struct_proc___xP_struct_proc___xM_proc_ptr_2 :
 (struct_proc___xP, proc_0 pointer) memory ref

parameter bill_ptr : proc_0 pointer ref

parameter next_ptr : proc_0 pointer ref

parameter proc_0_p_q_link_proc_ptr_2 : (proc_0, proc_0 pointer) memory ref

parameter proc_0_p_caller_q_proc_ptr_2 : (proc_0, proc_0 pointer) memory ref

parameter proc_0_p_max_priority_proc_ptr_2 : (proc_0, int8) memory ref

parameter proc_0_p_misc_flags_proc_ptr_2 : (proc_0, int16) memory ref

parameter balance_queues :
 tp:intP pointer ->
  intP_tp_14_alloc_table:intP alloc_table ->
   { } unit
   reads bill_ptr,next_ptr,priv_proc_ptr_28_alloc_table,priv_s_flags_proc_ptr_28,proc_0_p_max_priority_proc_5,proc_0_p_nextready_proc_ptr_2,proc_0_p_nr_proc_ptr_2,proc_0_p_priority_proc_5,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_p_quantum_size_proc_5,proc_0_p_quantum_size_proc_ptr_2,proc_0_p_rts_flags_proc_5,proc_0_p_rts_flags_proc_ptr_2,proc_0_p_ticks_left_proc_5,proc_0_p_ticks_left_proc_ptr_2,proc_0_proc_5_alloc_table,proc_0_proc_ptr_2_alloc_table,struct_proc___xP_pproc_addr_6_alloc_table,struct_proc___xP_proc_ptr_2_alloc_table,struct_proc___xP_rdy_tail_8_alloc_table,struct_proc___xP_struct_proc___xM_proc_ptr_2,struct_proc___xP_struct_proc___xM_rdy_tail_8
   writes bill_ptr,next_ptr,proc_0_p_caller_q_proc_ptr_2,proc_0_p_max_priority_proc_ptr_2,proc_0_p_misc_flags_proc_ptr_2,proc_0_p_nr_proc_ptr_2,proc_0_p_priority_proc_5,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_p_q_link_proc_ptr_2,proc_0_p_quantum_size_proc_ptr_2,proc_0_p_rts_flags_proc_ptr_2,proc_0_p_ticks_left_proc_5,proc_0_p_ticks_left_proc_ptr_2,struct_proc___xP_struct_proc___xM_proc_ptr_2,struct_proc___xP_struct_proc___xM_rdy_tail_8
   { (JC_<somenum>:
     ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
     and ((JC_<somenum>:
          valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
         and ((JC_<somenum>:
              valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
             and (JC_<somenum>:
                 valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }

parameter balance_queues_requires :
 tp:intP pointer ->
  intP_tp_14_alloc_table:intP alloc_table ->
   { (JC_<somenum>:
     (((JC_<somenum>: le_int(offset_min(intP_tp_14_alloc_table, tp), (0)))
      and ((JC_<somenum>: ge_int(offset_max(intP_tp_14_alloc_table, tp), (0)))
          and ((JC_<somenum>:
               le_int(offset_min(proc_0_proc_5_alloc_table, proc), (0)))
              and (JC_<somenum>:
                  ge_int(offset_max(proc_0_proc_5_alloc_table, proc),
                  sub_int((104), (1)))))))
     and ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
         and ((JC_<somenum>:
              valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
             and ((JC_<somenum>:
                  valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
                 and (JC_<somenum>:
                     valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))))}
   unit
   reads bill_ptr,next_ptr,priv_proc_ptr_28_alloc_table,priv_s_flags_proc_ptr_28,proc_0_p_max_priority_proc_5,proc_0_p_nextready_proc_ptr_2,proc_0_p_nr_proc_ptr_2,proc_0_p_priority_proc_5,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_p_quantum_size_proc_5,proc_0_p_quantum_size_proc_ptr_2,proc_0_p_rts_flags_proc_5,proc_0_p_rts_flags_proc_ptr_2,proc_0_p_ticks_left_proc_5,proc_0_p_ticks_left_proc_ptr_2,proc_0_proc_5_alloc_table,proc_0_proc_ptr_2_alloc_table,struct_proc___xP_pproc_addr_6_alloc_table,struct_proc___xP_proc_ptr_2_alloc_table,struct_proc___xP_rdy_tail_8_alloc_table,struct_proc___xP_struct_proc___xM_proc_ptr_2,struct_proc___xP_struct_proc___xM_rdy_tail_8
   writes bill_ptr,next_ptr,proc_0_p_caller_q_proc_ptr_2,proc_0_p_max_priority_proc_ptr_2,proc_0_p_misc_flags_proc_ptr_2,proc_0_p_nr_proc_ptr_2,proc_0_p_priority_proc_5,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_p_q_link_proc_ptr_2,proc_0_p_quantum_size_proc_ptr_2,proc_0_p_rts_flags_proc_ptr_2,proc_0_p_ticks_left_proc_5,proc_0_p_ticks_left_proc_ptr_2,struct_proc___xP_struct_proc___xM_proc_ptr_2,struct_proc___xP_struct_proc___xM_rdy_tail_8
   { (JC_<somenum>:
     ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
     and ((JC_<somenum>:
          valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
         and ((JC_<somenum>:
              valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
             and (JC_<somenum>:
                 valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }

parameter dequeue :
 rp:proc_0 pointer ->
  { } unit
  reads bill_ptr,next_ptr,priv_proc_ptr_28_alloc_table,priv_s_flags_proc_ptr_28,proc_0_p_nextready_proc_ptr_2,proc_0_p_nr_proc_ptr_2,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_proc_5_alloc_table,proc_0_proc_ptr_2_alloc_table,struct_proc___xP_pproc_addr_6_alloc_table,struct_proc___xP_proc_ptr_2_alloc_table,struct_proc___xP_rdy_tail_8_alloc_table,struct_proc___xP_struct_proc___xM_proc_ptr_2,struct_proc___xP_struct_proc___xM_rdy_tail_8
  writes bill_ptr,next_ptr,proc_0_p_caller_q_proc_ptr_2,proc_0_p_max_priority_proc_ptr_2,proc_0_p_misc_flags_proc_ptr_2,proc_0_p_nr_proc_ptr_2,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_p_q_link_proc_ptr_2,proc_0_p_quantum_size_proc_ptr_2,proc_0_p_rts_flags_proc_ptr_2,proc_0_p_ticks_left_proc_ptr_2,struct_proc___xP_struct_proc___xM_proc_ptr_2,struct_proc___xP_struct_proc___xM_rdy_tail_8
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>: valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>: valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }

parameter dequeue_requires :
 rp:proc_0 pointer ->
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>: valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>: valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table))))))}
  unit
  reads bill_ptr,next_ptr,priv_proc_ptr_28_alloc_table,priv_s_flags_proc_ptr_28,proc_0_p_nextready_proc_ptr_2,proc_0_p_nr_proc_ptr_2,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_proc_5_alloc_table,proc_0_proc_ptr_2_alloc_table,struct_proc___xP_pproc_addr_6_alloc_table,struct_proc___xP_proc_ptr_2_alloc_table,struct_proc___xP_rdy_tail_8_alloc_table,struct_proc___xP_struct_proc___xM_proc_ptr_2,struct_proc___xP_struct_proc___xM_rdy_tail_8
  writes bill_ptr,next_ptr,proc_0_p_caller_q_proc_ptr_2,proc_0_p_max_priority_proc_ptr_2,proc_0_p_misc_flags_proc_ptr_2,proc_0_p_nr_proc_ptr_2,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_p_q_link_proc_ptr_2,proc_0_p_quantum_size_proc_ptr_2,proc_0_p_rts_flags_proc_ptr_2,proc_0_p_ticks_left_proc_ptr_2,struct_proc___xP_struct_proc___xM_proc_ptr_2,struct_proc___xP_struct_proc___xM_rdy_tail_8
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>: valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>: valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }

parameter enqueue :
 rp_0:proc_0 pointer ->
  { } unit
  reads bill_ptr,next_ptr,priv_proc_ptr_28_alloc_table,priv_s_flags_proc_ptr_28,proc_0_p_nextready_proc_ptr_2,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_p_quantum_size_proc_ptr_2,proc_0_p_rts_flags_proc_ptr_2,proc_0_p_ticks_left_proc_ptr_2,proc_0_proc_5_alloc_table,proc_0_proc_ptr_2_alloc_table,struct_proc___xP_pproc_addr_6_alloc_table,struct_proc___xP_proc_ptr_2_alloc_table,struct_proc___xP_rdy_tail_8_alloc_table,struct_proc___xP_struct_proc___xM_proc_ptr_2,struct_proc___xP_struct_proc___xM_rdy_tail_8
  writes bill_ptr,next_ptr,proc_0_p_caller_q_proc_ptr_2,proc_0_p_max_priority_proc_ptr_2,proc_0_p_misc_flags_proc_ptr_2,proc_0_p_nr_proc_ptr_2,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_p_q_link_proc_ptr_2,proc_0_p_quantum_size_proc_ptr_2,proc_0_p_rts_flags_proc_ptr_2,proc_0_p_ticks_left_proc_ptr_2,struct_proc___xP_struct_proc___xM_proc_ptr_2,struct_proc___xP_struct_proc___xM_rdy_tail_8
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>: valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>: valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }

parameter enqueue_requires :
 rp_0:proc_0 pointer ->
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>: valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>: valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table))))))}
  unit
  reads bill_ptr,next_ptr,priv_proc_ptr_28_alloc_table,priv_s_flags_proc_ptr_28,proc_0_p_nextready_proc_ptr_2,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_p_quantum_size_proc_ptr_2,proc_0_p_rts_flags_proc_ptr_2,proc_0_p_ticks_left_proc_ptr_2,proc_0_proc_5_alloc_table,proc_0_proc_ptr_2_alloc_table,struct_proc___xP_pproc_addr_6_alloc_table,struct_proc___xP_proc_ptr_2_alloc_table,struct_proc___xP_rdy_tail_8_alloc_table,struct_proc___xP_struct_proc___xM_proc_ptr_2,struct_proc___xP_struct_proc___xM_rdy_tail_8
  writes bill_ptr,next_ptr,proc_0_p_caller_q_proc_ptr_2,proc_0_p_max_priority_proc_ptr_2,proc_0_p_misc_flags_proc_ptr_2,proc_0_p_nr_proc_ptr_2,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_p_q_link_proc_ptr_2,proc_0_p_quantum_size_proc_ptr_2,proc_0_p_rts_flags_proc_ptr_2,proc_0_p_ticks_left_proc_ptr_2,struct_proc___xP_struct_proc___xM_proc_ptr_2,struct_proc___xP_struct_proc___xM_rdy_tail_8
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>: valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>: valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }

parameter int16_of_integer_ :
 x:int ->
  { (le_int((-32768), x) and le_int(x, (32767)))} int16
  { eq_int(integer_of_int16(result), x) }

parameter int32_of_integer_ :
 x:int ->
  { (le_int((-2147483648), x) and le_int(x, (2147483647)))} int32
  { eq_int(integer_of_int32(result), x) }

parameter int8_of_integer_ :
 x:int ->
  { (le_int((-128), x) and le_int(x, (127)))} int8
  { eq_int(integer_of_int8(result), x) }

parameter main :
 tt:unit ->
  { } int32
  reads bill_ptr,next_ptr,priv_proc_ptr_28_alloc_table,priv_s_flags_proc_ptr_28,proc_0_p_max_priority_proc_5,proc_0_p_nextready_proc_ptr_2,proc_0_p_nr_proc_ptr_2,proc_0_p_priority_proc_5,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_p_quantum_size_proc_5,proc_0_p_quantum_size_proc_ptr_2,proc_0_p_rts_flags_proc_5,proc_0_p_rts_flags_proc_ptr_2,proc_0_p_ticks_left_proc_5,proc_0_p_ticks_left_proc_ptr_2,proc_0_proc_5_alloc_table,proc_0_proc_ptr_2_alloc_table,struct_proc___xP_pproc_addr_6_alloc_table,struct_proc___xP_proc_ptr_2_alloc_table,struct_proc___xP_rdy_tail_8_alloc_table,struct_proc___xP_struct_proc___xM_proc_ptr_2,struct_proc___xP_struct_proc___xM_rdy_tail_8
  writes bill_ptr,next_ptr,proc_0_p_caller_q_proc_ptr_2,proc_0_p_max_priority_proc_ptr_2,proc_0_p_misc_flags_proc_ptr_2,proc_0_p_nr_proc_ptr_2,proc_0_p_priority_proc_5,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_p_q_link_proc_ptr_2,proc_0_p_quantum_size_proc_ptr_2,proc_0_p_rts_flags_proc_ptr_2,proc_0_p_ticks_left_proc_5,proc_0_p_ticks_left_proc_ptr_2,struct_proc___xP_struct_proc___xM_proc_ptr_2,struct_proc___xP_struct_proc___xM_rdy_tail_8
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>:
         valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>:
             valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }

parameter main_requires :
 tt:unit ->
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>:
         valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>:
             valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table))))))}
  int32
  reads bill_ptr,next_ptr,priv_proc_ptr_28_alloc_table,priv_s_flags_proc_ptr_28,proc_0_p_max_priority_proc_5,proc_0_p_nextready_proc_ptr_2,proc_0_p_nr_proc_ptr_2,proc_0_p_priority_proc_5,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_p_quantum_size_proc_5,proc_0_p_quantum_size_proc_ptr_2,proc_0_p_rts_flags_proc_5,proc_0_p_rts_flags_proc_ptr_2,proc_0_p_ticks_left_proc_5,proc_0_p_ticks_left_proc_ptr_2,proc_0_proc_5_alloc_table,proc_0_proc_ptr_2_alloc_table,struct_proc___xP_pproc_addr_6_alloc_table,struct_proc___xP_proc_ptr_2_alloc_table,struct_proc___xP_rdy_tail_8_alloc_table,struct_proc___xP_struct_proc___xM_proc_ptr_2,struct_proc___xP_struct_proc___xM_rdy_tail_8
  writes bill_ptr,next_ptr,proc_0_p_caller_q_proc_ptr_2,proc_0_p_max_priority_proc_ptr_2,proc_0_p_misc_flags_proc_ptr_2,proc_0_p_nr_proc_ptr_2,proc_0_p_priority_proc_5,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_p_q_link_proc_ptr_2,proc_0_p_quantum_size_proc_ptr_2,proc_0_p_rts_flags_proc_ptr_2,proc_0_p_ticks_left_proc_5,proc_0_p_ticks_left_proc_ptr_2,struct_proc___xP_struct_proc___xM_proc_ptr_2,struct_proc___xP_struct_proc___xM_rdy_tail_8
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>:
         valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>:
             valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }

parameter pick_proc :
 tt:unit ->
  { } unit
  reads bill_ptr,next_ptr,priv_proc_ptr_28_alloc_table,priv_s_flags_proc_ptr_28,proc_0_p_nextready_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_proc_5_alloc_table,proc_0_proc_ptr_2_alloc_table,struct_proc___xP_pproc_addr_6_alloc_table,struct_proc___xP_proc_ptr_2_alloc_table,struct_proc___xP_rdy_tail_8_alloc_table,struct_proc___xP_struct_proc___xM_proc_ptr_2
  writes bill_ptr,next_ptr,proc_0_p_caller_q_proc_ptr_2,proc_0_p_max_priority_proc_ptr_2,proc_0_p_misc_flags_proc_ptr_2,proc_0_p_nr_proc_ptr_2,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_p_q_link_proc_ptr_2,proc_0_p_quantum_size_proc_ptr_2,proc_0_p_rts_flags_proc_ptr_2,proc_0_p_ticks_left_proc_ptr_2,struct_proc___xP_struct_proc___xM_proc_ptr_2
  { ((JC_<somenum>:
     ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
     and ((JC_<somenum>:
          valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
         and ((JC_<somenum>:
              valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
             and (JC_<somenum>:
                 valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table))))))
    and (JC_<somenum>:
        ((JC_<somenum>:
         ((le_int(offset_min(proc_0_proc_ptr_2_alloc_table, next_ptr), (0))
          and ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, next_ptr),
              (0)))
         or (le_int(offset_min(proc_0_proc_ptr_2_alloc_table, next_ptr), (0))
            and (ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, next_ptr),
                 (0))
                and (le_int(offset_min(proc_0_proc_ptr_2_alloc_table,
                            bill_ptr),
                     (0))
                    and ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                               bill_ptr),
                        (0)))))))
        and (JC_<somenum>:
            (((((((((((((bill_ptr = bill_ptr@) and (next_ptr = next_ptr@))
                      and (JC_<somenum>:
                          not_assigns(struct_proc___xP_proc_ptr_2_alloc_table@,
                          struct_proc___xP_struct_proc___xM_proc_ptr_2@,
                          struct_proc___xP_struct_proc___xM_proc_ptr_2,
                          pset_union(pset_deref(proc_0_p_nextready_proc_ptr_2@,
                                     pset_singleton(bill_ptr@)),
                          pset_deref(proc_0_p_nextready_proc_ptr_2@,
                          pset_singleton(next_ptr@))))))
                     and (JC_<somenum>:
                         not_assigns(proc_0_proc_ptr_2_alloc_table@,
                         proc_0_p_nr_proc_ptr_2@, proc_0_p_nr_proc_ptr_2,
                         pset_union(pset_singleton(bill_ptr@),
                         pset_singleton(next_ptr@)))))
                    and (JC_<somenum>:
                        not_assigns(proc_0_proc_ptr_2_alloc_table@,
                        proc_0_p_priv_proc_ptr_2@, proc_0_p_priv_proc_ptr_2,
                        pset_union(pset_singleton(bill_ptr@),
                        pset_singleton(next_ptr@)))))
                   and (JC_<somenum>:
                       not_assigns(proc_0_proc_ptr_2_alloc_table@,
                       proc_0_p_rts_flags_proc_ptr_2@,
                       proc_0_p_rts_flags_proc_ptr_2,
                       pset_union(pset_singleton(bill_ptr@),
                       pset_singleton(next_ptr@)))))
                  and (JC_<somenum>:
                      not_assigns(proc_0_proc_ptr_2_alloc_table@,
                      proc_0_p_misc_flags_proc_ptr_2@,
                      proc_0_p_misc_flags_proc_ptr_2,
                      pset_union(pset_singleton(bill_ptr@),
                      pset_singleton(next_ptr@)))))
                 and (JC_<somenum>:
                     not_assigns(proc_0_proc_ptr_2_alloc_table@,
                     proc_0_p_priority_proc_ptr_2@,
                     proc_0_p_priority_proc_ptr_2,
                     pset_union(pset_singleton(bill_ptr@),
                     pset_singleton(next_ptr@)))))
                and (JC_<somenum>:
                    not_assigns(proc_0_proc_ptr_2_alloc_table@,
                    proc_0_p_max_priority_proc_ptr_2@,
                    proc_0_p_max_priority_proc_ptr_2,
                    pset_union(pset_singleton(bill_ptr@),
                    pset_singleton(next_ptr@)))))
               and (JC_<somenum>:
                   not_assigns(proc_0_proc_ptr_2_alloc_table@,
                   proc_0_p_ticks_left_proc_ptr_2@,
                   proc_0_p_ticks_left_proc_ptr_2,
                   pset_union(pset_singleton(bill_ptr@),
                   pset_singleton(next_ptr@)))))
              and (JC_<somenum>:
                  not_assigns(proc_0_proc_ptr_2_alloc_table@,
                  proc_0_p_quantum_size_proc_ptr_2@,
                  proc_0_p_quantum_size_proc_ptr_2,
                  pset_union(pset_singleton(bill_ptr@),
                  pset_singleton(next_ptr@)))))
             and (JC_<somenum>:
                 not_assigns(proc_0_proc_ptr_2_alloc_table@,
                 proc_0_p_caller_q_proc_ptr_2@, proc_0_p_caller_q_proc_ptr_2,
                 pset_union(pset_singleton(bill_ptr@),
                 pset_singleton(next_ptr@)))))
            and (JC_<somenum>:
                not_assigns(proc_0_proc_ptr_2_alloc_table@,
                proc_0_p_q_link_proc_ptr_2@, proc_0_p_q_link_proc_ptr_2,
                pset_union(pset_singleton(bill_ptr@),
                pset_singleton(next_ptr@))))))))) }

parameter pick_proc_requires :
 tt:unit ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     ((JC_<somenum>:
      le_int(offset_min(struct_proc___xP_proc_ptr_2_alloc_table, rdy_head),
      (0)))
     and ((JC_<somenum>:
          ge_int(offset_max(struct_proc___xP_proc_ptr_2_alloc_table,
                 rdy_head),
          sub_int((16), (1))))
         and (JC_<somenum>:
             (select(struct_proc___xP_struct_proc___xM_proc_ptr_2,
              shift(rdy_head, (0))) <> null)))))
    and ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
        and ((JC_<somenum>:
             valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
            and ((JC_<somenum>:
                 valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
                and (JC_<somenum>:
                    valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))))}
  unit
  reads bill_ptr,next_ptr,priv_proc_ptr_28_alloc_table,priv_s_flags_proc_ptr_28,proc_0_p_nextready_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_proc_5_alloc_table,proc_0_proc_ptr_2_alloc_table,struct_proc___xP_pproc_addr_6_alloc_table,struct_proc___xP_proc_ptr_2_alloc_table,struct_proc___xP_rdy_tail_8_alloc_table,struct_proc___xP_struct_proc___xM_proc_ptr_2
  writes bill_ptr,next_ptr,proc_0_p_caller_q_proc_ptr_2,proc_0_p_max_priority_proc_ptr_2,proc_0_p_misc_flags_proc_ptr_2,proc_0_p_nr_proc_ptr_2,proc_0_p_priority_proc_ptr_2,proc_0_p_priv_proc_ptr_2,proc_0_p_q_link_proc_ptr_2,proc_0_p_quantum_size_proc_ptr_2,proc_0_p_rts_flags_proc_ptr_2,proc_0_p_ticks_left_proc_ptr_2,struct_proc___xP_struct_proc___xM_proc_ptr_2
  { ((JC_<somenum>:
     ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
     and ((JC_<somenum>:
          valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
         and ((JC_<somenum>:
              valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
             and (JC_<somenum>:
                 valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table))))))
    and (JC_<somenum>:
        ((JC_<somenum>:
         ((le_int(offset_min(proc_0_proc_ptr_2_alloc_table, next_ptr), (0))
          and ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, next_ptr),
              (0)))
         or (le_int(offset_min(proc_0_proc_ptr_2_alloc_table, next_ptr), (0))
            and (ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, next_ptr),
                 (0))
                and (le_int(offset_min(proc_0_proc_ptr_2_alloc_table,
                            bill_ptr),
                     (0))
                    and ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                               bill_ptr),
                        (0)))))))
        and (JC_<somenum>:
            (((((((((((((bill_ptr = bill_ptr@) and (next_ptr = next_ptr@))
                      and (JC_<somenum>:
                          not_assigns(struct_proc___xP_proc_ptr_2_alloc_table@,
                          struct_proc___xP_struct_proc___xM_proc_ptr_2@,
                          struct_proc___xP_struct_proc___xM_proc_ptr_2,
                          pset_union(pset_deref(proc_0_p_nextready_proc_ptr_2@,
                                     pset_singleton(bill_ptr@)),
                          pset_deref(proc_0_p_nextready_proc_ptr_2@,
                          pset_singleton(next_ptr@))))))
                     and (JC_<somenum>:
                         not_assigns(proc_0_proc_ptr_2_alloc_table@,
                         proc_0_p_nr_proc_ptr_2@, proc_0_p_nr_proc_ptr_2,
                         pset_union(pset_singleton(bill_ptr@),
                         pset_singleton(next_ptr@)))))
                    and (JC_<somenum>:
                        not_assigns(proc_0_proc_ptr_2_alloc_table@,
                        proc_0_p_priv_proc_ptr_2@, proc_0_p_priv_proc_ptr_2,
                        pset_union(pset_singleton(bill_ptr@),
                        pset_singleton(next_ptr@)))))
                   and (JC_<somenum>:
                       not_assigns(proc_0_proc_ptr_2_alloc_table@,
                       proc_0_p_rts_flags_proc_ptr_2@,
                       proc_0_p_rts_flags_proc_ptr_2,
                       pset_union(pset_singleton(bill_ptr@),
                       pset_singleton(next_ptr@)))))
                  and (JC_<somenum>:
                      not_assigns(proc_0_proc_ptr_2_alloc_table@,
                      proc_0_p_misc_flags_proc_ptr_2@,
                      proc_0_p_misc_flags_proc_ptr_2,
                      pset_union(pset_singleton(bill_ptr@),
                      pset_singleton(next_ptr@)))))
                 and (JC_<somenum>:
                     not_assigns(proc_0_proc_ptr_2_alloc_table@,
                     proc_0_p_priority_proc_ptr_2@,
                     proc_0_p_priority_proc_ptr_2,
                     pset_union(pset_singleton(bill_ptr@),
                     pset_singleton(next_ptr@)))))
                and (JC_<somenum>:
                    not_assigns(proc_0_proc_ptr_2_alloc_table@,
                    proc_0_p_max_priority_proc_ptr_2@,
                    proc_0_p_max_priority_proc_ptr_2,
                    pset_union(pset_singleton(bill_ptr@),
                    pset_singleton(next_ptr@)))))
               and (JC_<somenum>:
                   not_assigns(proc_0_proc_ptr_2_alloc_table@,
                   proc_0_p_ticks_left_proc_ptr_2@,
                   proc_0_p_ticks_left_proc_ptr_2,
                   pset_union(pset_singleton(bill_ptr@),
                   pset_singleton(next_ptr@)))))
              and (JC_<somenum>:
                  not_assigns(proc_0_proc_ptr_2_alloc_table@,
                  proc_0_p_quantum_size_proc_ptr_2@,
                  proc_0_p_quantum_size_proc_ptr_2,
                  pset_union(pset_singleton(bill_ptr@),
                  pset_singleton(next_ptr@)))))
             and (JC_<somenum>:
                 not_assigns(proc_0_proc_ptr_2_alloc_table@,
                 proc_0_p_caller_q_proc_ptr_2@, proc_0_p_caller_q_proc_ptr_2,
                 pset_union(pset_singleton(bill_ptr@),
                 pset_singleton(next_ptr@)))))
            and (JC_<somenum>:
                not_assigns(proc_0_proc_ptr_2_alloc_table@,
                proc_0_p_q_link_proc_ptr_2@, proc_0_p_q_link_proc_ptr_2,
                pset_union(pset_singleton(bill_ptr@),
                pset_singleton(next_ptr@))))))))) }

parameter safe_int16_of_integer_ :
 x:int -> { } int16 { eq_int(integer_of_int16(result), x) }

parameter safe_int32_of_integer_ :
 x:int -> { } int32 { eq_int(integer_of_int32(result), x) }

parameter safe_int8_of_integer_ :
 x:int -> { } int8 { eq_int(integer_of_int8(result), x) }

parameter safe_uint32_of_integer_ :
 x:int -> { } uint32 { eq_int(integer_of_uint32(result), x) }

parameter safe_uint8_of_integer_ :
 x:int -> { } uint8 { eq_int(integer_of_uint8(result), x) }

parameter sched :
 rp_1:proc_0 pointer ->
  queue:intP pointer ->
   front:intP pointer ->
    proc_0_p_ticks_left_rp_1_11:(proc_0, int8) memory ref ->
     proc_0_p_priority_rp_1_11:(proc_0, int8) memory ref ->
      intP_intM_front_13:(intP, int32) memory ref ->
       intP_intM_queue_12:(intP, int32) memory ref ->
        proc_0_rp_1_11_alloc_table:proc_0 alloc_table ->
         intP_front_13_alloc_table:intP alloc_table ->
          intP_queue_12_alloc_table:intP alloc_table ->
           proc_0_p_quantum_size_rp_1_11:(proc_0, int8) memory ->
            { } unit
            reads proc_0_p_priority_rp_1_11,proc_0_p_ticks_left_rp_1_11,proc_0_proc_5_alloc_table,struct_proc___xP_pproc_addr_6_alloc_table,struct_proc___xP_proc_ptr_2_alloc_table,struct_proc___xP_rdy_tail_8_alloc_table
            writes intP_intM_front_13,intP_intM_queue_12,proc_0_p_priority_rp_1_11,proc_0_p_ticks_left_rp_1_11
            { (JC_<somenum>:
              ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
              and ((JC_<somenum>:
                   valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
                  and ((JC_<somenum>:
                       valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
                      and (JC_<somenum>:
                          valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }

parameter sched_requires :
 rp_1:proc_0 pointer ->
  queue:intP pointer ->
   front:intP pointer ->
    proc_0_p_ticks_left_rp_1_11:(proc_0, int8) memory ref ->
     proc_0_p_priority_rp_1_11:(proc_0, int8) memory ref ->
      intP_intM_front_13:(intP, int32) memory ref ->
       intP_intM_queue_12:(intP, int32) memory ref ->
        proc_0_rp_1_11_alloc_table:proc_0 alloc_table ->
         intP_front_13_alloc_table:intP alloc_table ->
          intP_queue_12_alloc_table:intP alloc_table ->
           proc_0_p_quantum_size_rp_1_11:(proc_0, int8) memory ->
            { (JC_<somenum>:
              ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
              and ((JC_<somenum>:
                   valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
                  and ((JC_<somenum>:
                       valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
                      and (JC_<somenum>:
                          valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table))))))}
            unit
            reads proc_0_p_priority_rp_1_11,proc_0_p_ticks_left_rp_1_11,proc_0_proc_5_alloc_table,struct_proc___xP_pproc_addr_6_alloc_table,struct_proc___xP_proc_ptr_2_alloc_table,struct_proc___xP_rdy_tail_8_alloc_table
            writes intP_intM_front_13,intP_intM_queue_12,proc_0_p_priority_rp_1_11,proc_0_p_ticks_left_rp_1_11
            { (JC_<somenum>:
              ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
              and ((JC_<somenum>:
                   valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
                  and ((JC_<somenum>:
                       valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
                      and (JC_<somenum>:
                          valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }

parameter uint32_of_integer_ :
 x:int ->
  { (le_int((0), x) and le_int(x, (4294967295)))} uint32
  { eq_int(integer_of_uint32(result), x) }

parameter uint8_of_integer_ :
 x:int ->
  { (le_int((0), x) and le_int(x, (255)))} uint8
  { eq_int(integer_of_uint8(result), x) }

let balance_queues_ensures_default =
 fun (tp : intP pointer) (intP_tp_14_alloc_table : intP alloc_table) ->
  { (JC_<somenum>:
    (((JC_<somenum>: le_int(offset_min(intP_tp_14_alloc_table, tp), (0)))
     and ((JC_<somenum>: ge_int(offset_max(intP_tp_14_alloc_table, tp), (0)))
         and ((JC_<somenum>:
              le_int(offset_min(proc_0_proc_5_alloc_table, proc), (0)))
             and (JC_<somenum>:
                 ge_int(offset_max(proc_0_proc_5_alloc_table, proc),
                 sub_int((104), (1)))))))
    and ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
        and ((JC_<somenum>:
             valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
            and ((JC_<somenum>:
                 valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
                and (JC_<somenum>:
                    valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table))))))) }
  (init:
  try
   begin
     (let rp_3 = ref (any_pointer void) in
     (let next_period = ref (any_int32 void) in
     (let ticks_added = ref (any_int32 void) in
     try
      (C_428:
      (C_429:
      begin
        (let jessie_<somenum> = (ticks_added := (safe_int32_of_integer_ (0))) in
        void); (let jessie_<somenum> = (rp_3 := proc) in void);
       (loop_6:
       while true do
       { invariant
           (JC_<somenum>: lt_int(sub_pointer(rp_3, shift(proc, (104))), (0))) 
          }
        begin
          [ { } unit { true } ];
         try
          begin
            (let jessie_<somenum> =
            (C_468:
            begin
              (if ((lt_int_ ((safe_sub_pointer_ !rp_3) (C_431:
                                                       ((shift proc) (104))))) (0))
              then void else (raise (Goto_while_0_break_exc void)));
             (if (not ((eq_int_ (integer_of_int32 (C_466:
                                                  (safe_int32_of_integer_ 
                                                   (integer_of_int16 
                                                    (C_465:
                                                    ((safe_acc_ !proc_0_p_rts_flags_proc_5) !rp_3))))))) (1)))
             then
              (if ((gt_int_ (integer_of_int32 (C_464:
                                              (safe_int32_of_integer_ 
                                               (integer_of_int8 (C_463:
                                                                ((safe_acc_ !proc_0_p_priority_proc_5) !rp_3))))))) 
                   (integer_of_int32 (C_462:
                                     (safe_int32_of_integer_ (integer_of_int8 
                                                              (C_461:
                                                              ((safe_acc_ !proc_0_p_max_priority_proc_5) !rp_3)))))))
              then
               (C_451:
               (C_457:
               begin
                 (if ((eq_int_ (integer_of_int32 (C_446:
                                                 (safe_int32_of_integer_ 
                                                  (integer_of_int16 (C_445:
                                                                    ((safe_acc_ !proc_0_p_rts_flags_proc_5) !rp_3))))))) (0))
                 then
                  (C_444:
                  (let jessie_<somenum> = !rp_3 in (JC_<somenum>: (dequeue jessie_<somenum>))))
                 else void);
                (let jessie_<somenum> =
                (ticks_added := (C_450:
                                (safe_int32_of_integer_ (C_449:
                                                        ((add_int (integer_of_int32 !ticks_added)) 
                                                         (integer_of_int32 
                                                          (C_448:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int8 
                                                            (C_447:
                                                            ((safe_acc_ !proc_0_p_quantum_size_proc_5) !rp_3))))))))))) in
                void);
                (let jessie_<somenum> =
                (C_455:
                (safe_int8_of_integer_ (C_454:
                                       ((sub_int (integer_of_int32 (C_453:
                                                                   (safe_int32_of_integer_ 
                                                                    (integer_of_int8 
                                                                    (C_452:
                                                                    ((safe_acc_ !proc_0_p_priority_proc_5) !rp_3))))))) (1))))) in
                (let jessie_<somenum> = !rp_3 in
                (((safe_upd_ proc_0_p_priority_proc_5) jessie_<somenum>) jessie_<somenum>)));
                (if ((eq_int_ (integer_of_int32 (C_460:
                                                (safe_int32_of_integer_ 
                                                 (integer_of_int16 (C_459:
                                                                   ((safe_acc_ !proc_0_p_rts_flags_proc_5) !rp_3))))))) (0))
                then
                 (C_458:
                 (let jessie_<somenum> = !rp_3 in (JC_<somenum>: (enqueue jessie_<somenum>))))
                else void) end))
              else
               (let jessie_<somenum> =
               (C_440:
               begin
                 (let jessie_<somenum> =
                 (ticks_added := (C_439:
                                 (safe_int32_of_integer_ (C_438:
                                                         ((add_int (integer_of_int32 !ticks_added)) 
                                                          (integer_of_int32 
                                                           (C_437:
                                                           (safe_int32_of_integer_ 
                                                            (C_436:
                                                            ((sub_int 
                                                              (integer_of_int32 
                                                               (C_435:
                                                               (safe_int32_of_integer_ 
                                                                (integer_of_int8 
                                                                 (C_434:
                                                                 ((safe_acc_ !proc_0_p_quantum_size_proc_5) !rp_3))))))) 
                                                             (integer_of_int32 
                                                              (C_433:
                                                              (safe_int32_of_integer_ 
                                                               (integer_of_int8 
                                                                (C_432:
                                                                ((safe_acc_ !proc_0_p_ticks_left_proc_5) !rp_3)))))))))))))))) in
                 void);
                (C_443:
                (let jessie_<somenum> =
                (C_441: ((safe_acc_ !proc_0_p_quantum_size_proc_5) !rp_3)) in
                begin
                  (let jessie_<somenum> = !rp_3 in
                  (((safe_upd_ proc_0_p_ticks_left_proc_5) jessie_<somenum>) jessie_<somenum>));
                 jessie_<somenum> end)) end) in void)) else void);
             (rp_3 := (C_467: ((shift !rp_3) (1)))); !rp_3 end) in void);
           (raise (Loop_continue_exc void)) end with
          Loop_continue_exc jessie_<somenum> -> void end end done);
       (raise (Goto_while_0_break_exc void)) end)) with
      Goto_while_0_break_exc jessie_<somenum> ->
      (while_0_break:
      begin
        void;
       (let jessie_<somenum> =
       (if ((gt_int_ (100)) (integer_of_int32 !ticks_added))
       then
        (C_470:
        begin   (next_period := (safe_int32_of_integer_ (100))); !next_period
        end)
       else (C_469: begin   (next_period := !ticks_added); !next_period end)) in
       void); (raise Return) end) end))); (raise Return) end with Return ->
   void end) { (JC_<somenum>: true) }

let balance_queues_safety =
 fun (tp : intP pointer) (intP_tp_14_alloc_table : intP alloc_table) ->
  { (JC_<somenum>:
    (((JC_<somenum>: le_int(offset_min(intP_tp_14_alloc_table, tp), (0)))
     and ((JC_<somenum>: ge_int(offset_max(intP_tp_14_alloc_table, tp), (0)))
         and ((JC_<somenum>:
              le_int(offset_min(proc_0_proc_5_alloc_table, proc), (0)))
             and (JC_<somenum>:
                 ge_int(offset_max(proc_0_proc_5_alloc_table, proc),
                 sub_int((104), (1)))))))
    and ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
        and ((JC_<somenum>:
             valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
            and ((JC_<somenum>:
                 valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
                and (JC_<somenum>:
                    valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table))))))) }
  (init:
  try
   begin
     (let rp_3 = ref (any_pointer void) in
     (let next_period = ref (any_int32 void) in
     (let ticks_added = ref (any_int32 void) in
     try
      (C_428:
      (C_429:
      begin
        (let jessie_<somenum> = (ticks_added := (safe_int32_of_integer_ (0))) in
        void); (let jessie_<somenum> = (rp_3 := proc) in void);
       (loop_5:
       while true do
       { invariant (JC_<somenum>: true) variant (0) }
        begin
          [ { } unit reads rp_3
            { (JC_<somenum>: lt_int(sub_pointer(rp_3, shift(proc, (104))), (0))) } ];
         try
          begin
            (let jessie_<somenum> =
            (C_468:
            begin
              (if ((lt_int_ ((sub_pointer_ !rp_3) (C_431:
                                                  ((shift proc) (104))))) (0))
              then void else (raise (Goto_while_0_break_exc void)));
             (if (not ((eq_int_ (integer_of_int32 (C_466:
                                                  (JC_<somenum>:
                                                  (int32_of_integer_ 
                                                   (integer_of_int16 
                                                    (C_465:
                                                    (JC_<somenum>:
                                                    (((acc_ !proc_0_proc_5_alloc_table) !proc_0_p_rts_flags_proc_5) !rp_3))))))))) (1)))
             then
              (if ((gt_int_ (integer_of_int32 (C_464:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (integer_of_int8 
                                                                  (C_463:
                                                                  (JC_<somenum>:
                                                                  (((acc_ !proc_0_proc_5_alloc_table) !proc_0_p_priority_proc_5) !rp_3))))))))) 
                   (integer_of_int32 (C_462:
                                     (JC_<somenum>:
                                     (int32_of_integer_ (integer_of_int8 
                                                         (C_461:
                                                         (JC_<somenum>:
                                                         (((acc_ !proc_0_proc_5_alloc_table) !proc_0_p_max_priority_proc_5) !rp_3)))))))))
              then
               (C_451:
               (C_457:
               begin
                 (if ((eq_int_ (integer_of_int32 (C_446:
                                                 (JC_<somenum>:
                                                 (int32_of_integer_ (integer_of_int16 
                                                                    (C_445:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_5_alloc_table) !proc_0_p_rts_flags_proc_5) !rp_3))))))))) (0))
                 then
                  (C_444:
                  (let jessie_<somenum> = !rp_3 in
                  (JC_<somenum>: (dequeue_requires jessie_<somenum>)))) else void);
                (let jessie_<somenum> =
                (ticks_added := (C_450:
                                (JC_<somenum>:
                                (int32_of_integer_ (C_449:
                                                   ((add_int (integer_of_int32 !ticks_added)) 
                                                    (integer_of_int32 
                                                     (C_448:
                                                     (JC_<somenum>:
                                                     (int32_of_integer_ 
                                                      (integer_of_int8 
                                                       (C_447:
                                                       (JC_<somenum>:
                                                       (((acc_ !proc_0_proc_5_alloc_table) !proc_0_p_quantum_size_proc_5) !rp_3)))))))))))))) in
                void);
                (let jessie_<somenum> =
                (C_455:
                (JC_<somenum>:
                (int8_of_integer_ (C_454:
                                  ((sub_int (integer_of_int32 (C_453:
                                                              (JC_<somenum>:
                                                              (int32_of_integer_ 
                                                               (integer_of_int8 
                                                                (C_452:
                                                                (JC_<somenum>:
                                                                (((acc_ !proc_0_proc_5_alloc_table) !proc_0_p_priority_proc_5) !rp_3))))))))) (1)))))) in
                (let jessie_<somenum> = !rp_3 in
                (JC_<somenum>:
                ((((upd_ !proc_0_proc_5_alloc_table) proc_0_p_priority_proc_5) jessie_<somenum>) jessie_<somenum>))));
                (if ((eq_int_ (integer_of_int32 (C_460:
                                                (JC_<somenum>:
                                                (int32_of_integer_ (integer_of_int16 
                                                                    (C_459:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_5_alloc_table) !proc_0_p_rts_flags_proc_5) !rp_3))))))))) (0))
                then
                 (C_458:
                 (let jessie_<somenum> = !rp_3 in
                 (JC_<somenum>: (enqueue_requires jessie_<somenum>)))) else void) end))
              else
               (let jessie_<somenum> =
               (C_440:
               begin
                 (let jessie_<somenum> =
                 (ticks_added := (C_439:
                                 (JC_<somenum>:
                                 (int32_of_integer_ (C_438:
                                                    ((add_int (integer_of_int32 !ticks_added)) 
                                                     (integer_of_int32 
                                                      (C_437:
                                                      (JC_<somenum>:
                                                      (int32_of_integer_ 
                                                       (C_436:
                                                       ((sub_int (integer_of_int32 
                                                                  (C_435:
                                                                  (JC_<somenum>:
                                                                  (int32_of_integer_ 
                                                                   (integer_of_int8 
                                                                    (C_434:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_5_alloc_table) !proc_0_p_quantum_size_proc_5) !rp_3))))))))) 
                                                        (integer_of_int32 
                                                         (C_433:
                                                         (JC_<somenum>:
                                                         (int32_of_integer_ 
                                                          (integer_of_int8 
                                                           (C_432:
                                                           (JC_<somenum>:
                                                           (((acc_ !proc_0_proc_5_alloc_table) !proc_0_p_ticks_left_proc_5) !rp_3)))))))))))))))))))) in
                 void);
                (C_443:
                (let jessie_<somenum> =
                (C_441:
                (JC_<somenum>:
                (((acc_ !proc_0_proc_5_alloc_table) !proc_0_p_quantum_size_proc_5) !rp_3))) in
                begin
                  (let jessie_<somenum> = !rp_3 in
                  (JC_<somenum>:
                  ((((upd_ !proc_0_proc_5_alloc_table) proc_0_p_ticks_left_proc_5) jessie_<somenum>) jessie_<somenum>)));
                 jessie_<somenum> end)) end) in void)) else void);
             (rp_3 := (C_467: ((shift !rp_3) (1)))); !rp_3 end) in void);
           (raise (Loop_continue_exc void)) end with
          Loop_continue_exc jessie_<somenum> -> void end end done);
       (raise (Goto_while_0_break_exc void)) end)) with
      Goto_while_0_break_exc jessie_<somenum> ->
      (while_0_break:
      begin
        void;
       (let jessie_<somenum> =
       (if ((gt_int_ (100)) (integer_of_int32 !ticks_added))
       then
        (C_470:
        begin   (next_period := (safe_int32_of_integer_ (100))); !next_period
        end)
       else (C_469: begin   (next_period := !ticks_added); !next_period end)) in
       void); (raise Return) end) end))); (raise Return) end with Return ->
   void end)
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>:
         valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>:
             valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }

let dequeue_ensures_default =
 fun (rp : proc_0 pointer) ->
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>: valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>: valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }
  (init:
  try
   begin
     (let q_0 = ref (any_int32 void) in
     (let xpp = ref (any_pointer void) in
     (let prev_xp = ref (any_pointer void) in
     (let tmp_0 = ref (any_uint32 void) in
     try
      (C_50:
      (C_54:
      (C_56:
      begin
        (let jessie_<somenum> =
        (q_0 := (C_49:
                (safe_int32_of_integer_ (integer_of_int8 (C_48:
                                                         ((safe_acc_ !proc_0_p_priority_proc_ptr_2) rp)))))) in
        void);
       (if ((lt_int_ (integer_of_int32 (C_53:
                                       ((safe_acc_ !proc_0_p_nr_proc_ptr_2) rp)))) (0))
       then
        (let jessie_<somenum> =
        (if false
        then
         (C_52:
         begin   (tmp_0 := (safe_uint32_of_integer_ (48879))); !tmp_0 end)
        else
         (C_51:
         begin   (tmp_0 := (safe_uint32_of_integer_ (3735928559))); !tmp_0
         end)) in void) else void);
       (let jessie_<somenum> = (prev_xp := null) in void);
       (let jessie_<somenum> =
       (xpp := (C_55: ((shift rdy_head) (integer_of_int32 !q_0)))) in void);
       (loop_2:
       while true do
       { invariant (JC_<somenum>: true)  }
        begin
          [ { } unit { true } ];
         try
          begin
            (let jessie_<somenum> =
            (C_73:
            begin
              (if ((safe_neq_pointer (C_57:
                                     ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) !xpp))) null)
              then void else (raise (Goto_while_0_break_exc void)));
             (let jessie_<somenum> =
             (C_70:
             begin
               (if ((safe_eq_pointer (C_68:
                                     ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) !xpp))) rp)
               then
                (C_62:
                begin
                  (let jessie_<somenum> =
                  (C_60:
                  ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                   (C_59:
                   ((safe_acc_ !proc_0_p_nextready_proc_ptr_2) (C_58:
                                                               ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) !xpp)))))) in
                  (let jessie_<somenum> = !xpp in
                  (((safe_upd_ struct_proc___xP_struct_proc___xM_proc_ptr_2) jessie_<somenum>) jessie_<somenum>)));
                 (if ((safe_eq_pointer rp) (C_65:
                                           ((safe_acc_ !struct_proc___xP_struct_proc___xM_rdy_tail_8) 
                                            ((shift rdy_tail) (integer_of_int32 !q_0)))))
                 then
                  (let jessie_<somenum> =
                  (C_64:
                  (let jessie_<somenum> = !prev_xp in
                  (let jessie_<somenum> = rdy_tail in
                  (let jessie_<somenum> = (integer_of_int32 !q_0) in
                  (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
                  (((safe_upd_ struct_proc___xP_struct_proc___xM_rdy_tail_8) jessie_<somenum>) jessie_<somenum>)))))) in
                  void) else void);
                 (if ((safe_eq_pointer rp) proc_ptr)
                 then (C_67: (JC_<somenum>: (pick_proc void)))
                 else
                  (if ((safe_eq_pointer rp) !next_ptr)
                  then (C_66: (JC_<somenum>: (pick_proc void))) else void));
                 (raise (Goto_while_0_break_exc void)) end) else void);
              (prev_xp := (C_69:
                          ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) !xpp)));
              !prev_xp end) in void);
             (xpp := (C_72:
                     ((safe_acc_ !proc_0_p_nextready_proc_ptr_2) (C_71:
                                                                 ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) !xpp)))));
             !xpp end) in void); (raise (Loop_continue_exc void)) end with
          Loop_continue_exc jessie_<somenum> -> void end end done);
       (raise (Goto_while_0_break_exc void)) end))) with
      Goto_while_0_break_exc jessie_<somenum> ->
      (while_0_break: begin   void; (raise Return) end) end))));
    (raise Return) end with Return -> void end) { (JC_<somenum>: true) }

let dequeue_safety =
 fun (rp : proc_0 pointer) ->
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>: valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>: valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }
  (init:
  try
   begin
     (let q_0 = ref (any_int32 void) in
     (let xpp = ref (any_pointer void) in
     (let prev_xp = ref (any_pointer void) in
     (let tmp_0 = ref (any_uint32 void) in
     try
      (C_50:
      (C_54:
      (C_56:
      begin
        (let jessie_<somenum> =
        (q_0 := (C_49:
                (JC_<somenum>:
                (int32_of_integer_ (integer_of_int8 (C_48:
                                                    (JC_<somenum>:
                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priority_proc_ptr_2) rp)))))))) in
        void);
       (if ((lt_int_ (integer_of_int32 (C_53:
                                       (JC_<somenum>:
                                       (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_nr_proc_ptr_2) rp))))) (0))
       then
        (let jessie_<somenum> =
        (if false
        then
         (C_52:
         begin   (tmp_0 := (safe_uint32_of_integer_ (48879))); !tmp_0 end)
        else
         (C_51:
         begin   (tmp_0 := (safe_uint32_of_integer_ (3735928559))); !tmp_0
         end)) in void) else void);
       (let jessie_<somenum> = (prev_xp := null) in void);
       (let jessie_<somenum> =
       (xpp := (C_55: ((shift rdy_head) (integer_of_int32 !q_0)))) in void);
       (loop_1:
       while true do
       { invariant (JC_<somenum>: true) variant (0) }
        begin
          [ { } unit { true } ];
         try
          begin
            (let jessie_<somenum> =
            (C_73:
            begin
              (if ((neq_pointer (C_57:
                                (JC_<somenum>:
                                (((acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) !xpp)))) null)
              then void else (raise (Goto_while_0_break_exc void)));
             (let jessie_<somenum> =
             (C_70:
             begin
               (if ((eq_pointer (C_68:
                                (JC_<somenum>:
                                (((acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) !xpp)))) rp)
               then
                (C_62:
                begin
                  (let jessie_<somenum> =
                  (C_60:
                  ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                   (C_59:
                   (JC_<somenum>:
                   (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_nextready_proc_ptr_2) 
                    (C_58:
                    (JC_<somenum>:
                    (((acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) !xpp)))))))) in
                  (let jessie_<somenum> = !xpp in
                  (JC_<somenum>:
                  ((((upd_ !struct_proc___xP_proc_ptr_2_alloc_table) struct_proc___xP_struct_proc___xM_proc_ptr_2) jessie_<somenum>) jessie_<somenum>))));
                 (if ((eq_pointer rp) (C_65:
                                      (JC_<somenum>:
                                      ((((offset_acc_ !struct_proc___xP_rdy_tail_8_alloc_table) !struct_proc___xP_struct_proc___xM_rdy_tail_8) rdy_tail) 
                                       (integer_of_int32 !q_0)))))
                 then
                  (let jessie_<somenum> =
                  (C_64:
                  (let jessie_<somenum> = !prev_xp in
                  (let jessie_<somenum> = rdy_tail in
                  (let jessie_<somenum> = (integer_of_int32 !q_0) in
                  (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
                  (JC_<somenum>:
                  (((((offset_upd_ !struct_proc___xP_rdy_tail_8_alloc_table) struct_proc___xP_struct_proc___xM_rdy_tail_8) jessie_<somenum>) jessie_<somenum>) jessie_<somenum>))))))) in
                  void) else void);
                 (if ((eq_pointer rp) proc_ptr)
                 then (C_67: (JC_<somenum>: (pick_proc_requires void)))
                 else
                  (if ((eq_pointer rp) !next_ptr)
                  then (C_66: (JC_<somenum>: (pick_proc_requires void))) else void));
                 (raise (Goto_while_0_break_exc void)) end) else void);
              (prev_xp := (C_69:
                          (JC_<somenum>:
                          (((acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) !xpp))));
              !prev_xp end) in void);
             (xpp := (C_72:
                     (JC_<somenum>:
                     (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_nextready_proc_ptr_2) 
                      (C_71:
                      (JC_<somenum>:
                      (((acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) !xpp)))))));
             !xpp end) in void); (raise (Loop_continue_exc void)) end with
          Loop_continue_exc jessie_<somenum> -> void end end done);
       (raise (Goto_while_0_break_exc void)) end))) with
      Goto_while_0_break_exc jessie_<somenum> ->
      (while_0_break: begin   void; (raise Return) end) end))));
    (raise Return) end with Return -> void end)
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>: valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>: valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }

let enqueue_ensures_default =
 fun (rp_0 : proc_0 pointer) ->
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>: valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>: valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }
  (init:
  try
   begin
     (let intP_intM_front_0_16 = ref (any_memory void) in
     (let intP_intM_q_15 = ref (any_memory void) in
     (let intP_q_15_tag_table = ref (any_tag_table void) in
     (let intP_front_0_16_tag_table = ref (any_tag_table void) in
     (let intP_front_0_16_alloc_table = ref (any_alloc_table void) in
     (let intP_q_15_alloc_table = ref (any_alloc_table void) in
     (let q = ref (any_pointer void) in
     (let front_0 = ref (any_pointer void) in
     (let tmp = ref (any_pointer void) in
     try
      begin
        try
         (C_2:
         (C_4:
         (C_5:
         begin
           (let jessie_<somenum> =
           (q := (C_1:
                 (JC_<somenum>:
                 (((alloc_struct_intP (1)) intP_q_15_alloc_table) intP_q_15_tag_table)))) in
           void);
          (let jessie_<somenum> =
          (front_0 := (C_3:
                      (JC_<somenum>:
                      (((alloc_struct_intP (1)) intP_front_0_16_alloc_table) intP_front_0_16_tag_table)))) in
          void);
          (let jessie_<somenum> = rp_0 in
          (let jessie_<somenum> = !q in
          (let jessie_<somenum> = !front_0 in
          (JC_<somenum>:
          (((((((((((sched jessie_<somenum>) jessie_<somenum>) jessie_<somenum>) proc_0_p_ticks_left_proc_ptr_2) proc_0_p_priority_proc_ptr_2) intP_intM_front_0_16) intP_intM_q_15) !proc_0_proc_ptr_2_alloc_table) !intP_front_0_16_alloc_table) !intP_q_15_alloc_table) !proc_0_p_quantum_size_proc_ptr_2)))));
          (let jessie_<somenum> =
          (if ((safe_eq_pointer (C_37:
                                ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                                 ((shift rdy_head) (integer_of_int32 
                                                    (C_36:
                                                    ((safe_acc_ !intP_intM_q_15) !q))))))) null)
          then
           (C_26:
           (C_29:
           (C_32:
           begin
             (let jessie_<somenum> = (tmp := rp_0) in void);
            (let jessie_<somenum> =
            (let jessie_<somenum> = !tmp in
            (let jessie_<somenum> = rdy_tail in
            (let jessie_<somenum> =
            (integer_of_int32 (C_27: ((safe_acc_ !intP_intM_q_15) !q))) in
            (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
            (((safe_upd_ struct_proc___xP_struct_proc___xM_rdy_tail_8) jessie_<somenum>) jessie_<somenum>))))) in
            void);
            (let jessie_<somenum> =
            (let jessie_<somenum> = !tmp in
            (let jessie_<somenum> = rdy_head in
            (let jessie_<somenum> =
            (integer_of_int32 (C_30: ((safe_acc_ !intP_intM_q_15) !q))) in
            (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
            (((safe_upd_ struct_proc___xP_struct_proc___xM_proc_ptr_2) jessie_<somenum>) jessie_<somenum>))))) in
            void);
            (C_35:
            (let jessie_<somenum> = null in
            begin
              (let jessie_<somenum> =
              (C_33: ((safe_acc_ !proc_0_p_nextready_proc_ptr_2) rp_0)) in
              (((safe_upd_ struct_proc___xP_struct_proc___xM_proc_ptr_2) jessie_<somenum>) jessie_<somenum>));
             jessie_<somenum> end)) end)))
          else
           (if ((neq_int_ (integer_of_int32 (C_25:
                                            ((safe_acc_ !intP_intM_front_0_16) !front_0)))) (0))
           then
            (C_21:
            begin
              (let jessie_<somenum> =
              (C_18:
              ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
               ((shift rdy_head) (integer_of_int32 (C_17:
                                                   ((safe_acc_ !intP_intM_q_15) !q)))))) in
              (let jessie_<somenum> =
              (C_19: ((safe_acc_ !proc_0_p_nextready_proc_ptr_2) rp_0)) in
              (((safe_upd_ struct_proc___xP_struct_proc___xM_proc_ptr_2) jessie_<somenum>) jessie_<somenum>)));
             (C_24:
             (let jessie_<somenum> = rp_0 in
             (let jessie_<somenum> = rdy_head in
             (let jessie_<somenum> =
             (integer_of_int32 (C_22: ((safe_acc_ !intP_intM_q_15) !q))) in
             (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
             begin
               (((safe_upd_ struct_proc___xP_struct_proc___xM_proc_ptr_2) jessie_<somenum>) jessie_<somenum>);
              jessie_<somenum> end))))) end)
           else
            (C_10:
            (C_13:
            begin
              (let jessie_<somenum> = rp_0 in
              (let jessie_<somenum> =
              (C_8:
              ((safe_acc_ !proc_0_p_nextready_proc_ptr_2) (C_7:
                                                          ((safe_acc_ !struct_proc___xP_struct_proc___xM_rdy_tail_8) 
                                                           ((shift rdy_tail) 
                                                            (integer_of_int32 
                                                             (C_6:
                                                             ((safe_acc_ !intP_intM_q_15) !q)))))))) in
              (((safe_upd_ struct_proc___xP_struct_proc___xM_proc_ptr_2) jessie_<somenum>) jessie_<somenum>)));
             (let jessie_<somenum> =
             (let jessie_<somenum> = rp_0 in
             (let jessie_<somenum> = rdy_tail in
             (let jessie_<somenum> =
             (integer_of_int32 (C_11: ((safe_acc_ !intP_intM_q_15) !q))) in
             (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
             (((safe_upd_ struct_proc___xP_struct_proc___xM_rdy_tail_8) jessie_<somenum>) jessie_<somenum>))))) in
             void);
             (C_16:
             (let jessie_<somenum> = null in
             begin
               (let jessie_<somenum> =
               (C_14: ((safe_acc_ !proc_0_p_nextready_proc_ptr_2) rp_0)) in
               (((safe_upd_ struct_proc___xP_struct_proc___xM_proc_ptr_2) jessie_<somenum>) jessie_<somenum>));
              jessie_<somenum> end)) end)))) in void);
          (if (not ((safe_neq_pointer proc_ptr) null))
          then (raise (Goto__LOR_exc void))
          else
           (if ((neq_int_ (integer_of_int16 (C_43:
                                            ((safe_acc_ !proc_0_p_rts_flags_proc_ptr_2) proc_ptr)))) (0))
           then (raise (Goto__LOR_exc void))
           else
            (if ((neq_int_ (integer_of_int32 (C_42:
                                             (safe_int32_of_integer_ 
                                              (C_41:
                                              ((bw_and (integer_of_int32 
                                                        (C_40:
                                                        (safe_int32_of_integer_ 
                                                         (integer_of_int16 
                                                          (C_39:
                                                          ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                           (C_38:
                                                           ((safe_acc_ !proc_0_p_priv_proc_ptr_2) proc_ptr))))))))) (2))))))) (0))
            then (raise (Goto__LOR_exc void)) else void)));
          (raise (Goto__LOR_0_exc void)); (raise (Goto__LOR_exc void)) end)))
         with Goto__LOR_exc jessie_<somenum> ->
         (_LOR: (C_44: (JC_<somenum>: (pick_proc void)))) end;
       (raise (Goto__LOR_0_exc void)) end with Goto__LOR_0_exc jessie_<somenum> ->
      (_LOR_0:
      (C_45:
      (C_46:
      begin
        void; ((safe_free_parameter intP_q_15_alloc_table) !q);
       ((safe_free_parameter intP_front_0_16_alloc_table) !front_0);
       (raise Return) end))) end))))))))); (raise Return) end with Return ->
   void end) { (JC_<somenum>: true) }

let enqueue_safety =
 fun (rp_0 : proc_0 pointer) ->
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>: valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>: valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }
  (init:
  try
   begin
     (let intP_intM_front_0_16 = ref (any_memory void) in
     (let intP_intM_q_15 = ref (any_memory void) in
     (let intP_q_15_tag_table = ref (any_tag_table void) in
     (let intP_front_0_16_tag_table = ref (any_tag_table void) in
     (let intP_front_0_16_alloc_table = ref (any_alloc_table void) in
     (let intP_q_15_alloc_table = ref (any_alloc_table void) in
     (let q = ref (any_pointer void) in
     (let front_0 = ref (any_pointer void) in
     (let tmp = ref (any_pointer void) in
     try
      begin
        try
         (C_2:
         (C_4:
         (C_5:
         begin
           (let jessie_<somenum> =
           (q := (let jessie_<somenum> =
                 (C_1:
                 (JC_<somenum>:
                 (((alloc_struct_intP_requires (1)) intP_q_15_alloc_table) intP_q_15_tag_table))) in
                 (JC_<somenum>:
                 (assert
                 { ge_int(offset_max(intP_q_15_alloc_table, jessie_<somenum>), (0)) };
                 jessie_<somenum>)))) in void);
          (let jessie_<somenum> =
          (front_0 := (let jessie_<somenum> =
                      (C_3:
                      (JC_<somenum>:
                      (((alloc_struct_intP_requires (1)) intP_front_0_16_alloc_table) intP_front_0_16_tag_table))) in
                      (JC_<somenum>:
                      (assert
                      { ge_int(offset_max(intP_front_0_16_alloc_table,
                               jessie_<somenum>),
                        (0)) }; jessie_<somenum>)))) in void);
          (let jessie_<somenum> = rp_0 in
          (let jessie_<somenum> = !q in
          (let jessie_<somenum> = !front_0 in
          (JC_<somenum>:
          (((((((((((sched_requires jessie_<somenum>) jessie_<somenum>) jessie_<somenum>) proc_0_p_ticks_left_proc_ptr_2) proc_0_p_priority_proc_ptr_2) intP_intM_front_0_16) intP_intM_q_15) !proc_0_proc_ptr_2_alloc_table) !intP_front_0_16_alloc_table) !intP_q_15_alloc_table) !proc_0_p_quantum_size_proc_ptr_2)))));
          (let jessie_<somenum> =
          (if ((eq_pointer (C_37:
                           (JC_<somenum>:
                           ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                            (integer_of_int32 (C_36:
                                              ((safe_acc_ !intP_intM_q_15) !q))))))) null)
          then
           (C_26:
           (C_29:
           (C_32:
           begin
             (let jessie_<somenum> = (tmp := rp_0) in void);
            (let jessie_<somenum> =
            (let jessie_<somenum> = !tmp in
            (let jessie_<somenum> = rdy_tail in
            (let jessie_<somenum> =
            (integer_of_int32 (C_27: ((safe_acc_ !intP_intM_q_15) !q))) in
            (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
            (JC_<somenum>:
            (((((offset_upd_ !struct_proc___xP_rdy_tail_8_alloc_table) struct_proc___xP_struct_proc___xM_rdy_tail_8) jessie_<somenum>) jessie_<somenum>) jessie_<somenum>)))))) in
            void);
            (let jessie_<somenum> =
            (let jessie_<somenum> = !tmp in
            (let jessie_<somenum> = rdy_head in
            (let jessie_<somenum> =
            (integer_of_int32 (C_30: ((safe_acc_ !intP_intM_q_15) !q))) in
            (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
            (JC_<somenum>:
            (((((offset_upd_ !struct_proc___xP_proc_ptr_2_alloc_table) struct_proc___xP_struct_proc___xM_proc_ptr_2) jessie_<somenum>) jessie_<somenum>) jessie_<somenum>)))))) in
            void);
            (C_35:
            (let jessie_<somenum> = null in
            begin
              (let jessie_<somenum> =
              (C_33:
              (JC_<somenum>:
              (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_nextready_proc_ptr_2) rp_0))) in
              (((safe_upd_ struct_proc___xP_struct_proc___xM_proc_ptr_2) jessie_<somenum>) jessie_<somenum>));
             jessie_<somenum> end)) end)))
          else
           (if ((neq_int_ (integer_of_int32 (C_25:
                                            ((safe_acc_ !intP_intM_front_0_16) !front_0)))) (0))
           then
            (C_21:
            begin
              (let jessie_<somenum> =
              (C_18:
              (JC_<somenum>:
              ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
               (integer_of_int32 (C_17: ((safe_acc_ !intP_intM_q_15) !q)))))) in
              (let jessie_<somenum> =
              (C_19:
              (JC_<somenum>:
              (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_nextready_proc_ptr_2) rp_0))) in
              (((safe_upd_ struct_proc___xP_struct_proc___xM_proc_ptr_2) jessie_<somenum>) jessie_<somenum>)));
             (C_24:
             (let jessie_<somenum> = rp_0 in
             (let jessie_<somenum> = rdy_head in
             (let jessie_<somenum> =
             (integer_of_int32 (C_22: ((safe_acc_ !intP_intM_q_15) !q))) in
             (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
             begin
               (JC_<somenum>:
               (((((offset_upd_ !struct_proc___xP_proc_ptr_2_alloc_table) struct_proc___xP_struct_proc___xM_proc_ptr_2) jessie_<somenum>) jessie_<somenum>) jessie_<somenum>));
              jessie_<somenum> end))))) end)
           else
            (C_10:
            (C_13:
            begin
              (let jessie_<somenum> = rp_0 in
              (let jessie_<somenum> =
              (C_8:
              (JC_<somenum>:
              (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_nextready_proc_ptr_2) 
               (C_7:
               (JC_<somenum>:
               ((((offset_acc_ !struct_proc___xP_rdy_tail_8_alloc_table) !struct_proc___xP_struct_proc___xM_rdy_tail_8) rdy_tail) 
                (integer_of_int32 (C_6: ((safe_acc_ !intP_intM_q_15) !q))))))))) in
              (((safe_upd_ struct_proc___xP_struct_proc___xM_proc_ptr_2) jessie_<somenum>) jessie_<somenum>)));
             (let jessie_<somenum> =
             (let jessie_<somenum> = rp_0 in
             (let jessie_<somenum> = rdy_tail in
             (let jessie_<somenum> =
             (integer_of_int32 (C_11: ((safe_acc_ !intP_intM_q_15) !q))) in
             (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
             (JC_<somenum>:
             (((((offset_upd_ !struct_proc___xP_rdy_tail_8_alloc_table) struct_proc___xP_struct_proc___xM_rdy_tail_8) jessie_<somenum>) jessie_<somenum>) jessie_<somenum>)))))) in
             void);
             (C_16:
             (let jessie_<somenum> = null in
             begin
               (let jessie_<somenum> =
               (C_14:
               (JC_<somenum>:
               (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_nextready_proc_ptr_2) rp_0))) in
               (((safe_upd_ struct_proc___xP_struct_proc___xM_proc_ptr_2) jessie_<somenum>) jessie_<somenum>));
              jessie_<somenum> end)) end)))) in void);
          (if (not ((neq_pointer proc_ptr) null))
          then (raise (Goto__LOR_exc void))
          else
           (if ((neq_int_ (integer_of_int16 (C_43:
                                            (JC_<somenum>:
                                            (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_rts_flags_proc_ptr_2) proc_ptr))))) (0))
           then (raise (Goto__LOR_exc void))
           else
            (if ((neq_int_ (integer_of_int32 (C_42:
                                             (JC_<somenum>:
                                             (int32_of_integer_ (C_41:
                                                                ((bw_and 
                                                                  (integer_of_int32 
                                                                   (C_40:
                                                                   (JC_<somenum>:
                                                                   (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_39:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_38:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) proc_ptr)))))))))))) (2)))))))) (0))
            then (raise (Goto__LOR_exc void)) else void)));
          (raise (Goto__LOR_0_exc void)); (raise (Goto__LOR_exc void)) end)))
         with Goto__LOR_exc jessie_<somenum> ->
         (_LOR: (C_44: (JC_<somenum>: (pick_proc_requires void)))) end;
       (raise (Goto__LOR_0_exc void)) end with Goto__LOR_0_exc jessie_<somenum> ->
      (_LOR_0:
      (C_45:
      (C_46:
      begin
        void; ((free_parameter intP_q_15_alloc_table) !q);
       ((free_parameter intP_front_0_16_alloc_table) !front_0);
       (raise Return) end))) end))))))))); (raise Return) end with Return ->
   void end)
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>: valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>: valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }

let main_ensures_default =
 fun (tt : unit) ->
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>:
         valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>:
             valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let intP_null_65_alloc_table = (any_alloc_table void) in
     (let __retres = ref (any_int32 void) in
     (C_478:
     (C_479:
     begin
       (let jessie_<somenum> = null in
       (JC_<somenum>: ((balance_queues jessie_<somenum>) intP_null_65_alloc_table)));
      (let jessie_<somenum> = (__retres := (safe_int32_of_integer_ (0))) in void);
      (return := !__retres); (raise Return) end)))); absurd  end with
   Return -> !return end)) { (JC_<somenum>: true) }

let main_safety =
 fun (tt : unit) ->
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>:
         valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>:
             valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let intP_null_65_alloc_table = (any_alloc_table void) in
     (let __retres = ref (any_int32 void) in
     (C_478:
     (C_479:
     begin
       (let jessie_<somenum> = null in
       (JC_<somenum>:
       ((balance_queues_requires jessie_<somenum>) intP_null_65_alloc_table)));
      (let jessie_<somenum> = (__retres := (safe_int32_of_integer_ (0))) in void);
      (return := !__retres); (raise Return) end)))); absurd  end with
   Return -> !return end))
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>:
         valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>:
             valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }

let pick_proc_ensures_default =
 fun (tt : unit) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     ((JC_<somenum>:
      le_int(offset_min(struct_proc___xP_proc_ptr_2_alloc_table, rdy_head),
      (0)))
     and ((JC_<somenum>:
          ge_int(offset_max(struct_proc___xP_proc_ptr_2_alloc_table,
                 rdy_head),
          sub_int((16), (1))))
         and (JC_<somenum>:
             (select(struct_proc___xP_struct_proc___xM_proc_ptr_2,
              shift(rdy_head, (0))) <> null)))))
    and ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
        and ((JC_<somenum>:
             valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
            and ((JC_<somenum>:
                 valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
                and (JC_<somenum>:
                    valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table))))))) }
  (init:
  try
   begin
     (let rp_2 = ref (any_pointer void) in
     (let q_1 = ref (any_int32 void) in
     try
      begin
        try
         (C_97:
         (C_99:
         (C_115:
         (unrolling_21_loop:
         (C_117:
         (C_133:
         (unrolling_20_loop:
         (C_135:
         (C_151:
         (unrolling_19_loop:
         (C_153:
         (C_169:
         (unrolling_18_loop:
         (C_171:
         (C_187:
         (unrolling_17_loop:
         (C_189:
         (C_205:
         (unrolling_16_loop:
         (C_207:
         (C_223:
         (unrolling_15_loop:
         (C_225:
         (C_241:
         (unrolling_14_loop:
         (C_243:
         (C_259:
         (unrolling_13_loop:
         (C_261:
         (C_277:
         (unrolling_12_loop:
         (C_279:
         (C_295:
         (unrolling_11_loop:
         (C_297:
         (C_313:
         (unrolling_10_loop:
         (C_315:
         (C_331:
         (unrolling_9_loop:
         (C_333:
         (C_349:
         (unrolling_8_loop:
         (C_351:
         (C_367:
         (unrolling_7_loop:
         (C_369:
         (C_385:
         (unrolling_6_loop:
         (C_387:
         (C_403:
         (unrolling_5_loop:
         begin
           (let jessie_<somenum> = (q_1 := (safe_int32_of_integer_ (0))) in void);
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_98:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_100:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_106:
                                               (safe_int32_of_integer_ 
                                                (C_105:
                                                ((bw_and (integer_of_int32 
                                                          (C_104:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_103:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_102:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_101: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_114:
                  (safe_int32_of_integer_ (C_113:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_116:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_118:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_124:
                                               (safe_int32_of_integer_ 
                                                (C_123:
                                                ((bw_and (integer_of_int32 
                                                          (C_122:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_121:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_120:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_119: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_132:
                  (safe_int32_of_integer_ (C_131:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_134:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_136:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_142:
                                               (safe_int32_of_integer_ 
                                                (C_141:
                                                ((bw_and (integer_of_int32 
                                                          (C_140:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_139:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_138:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_137: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_150:
                  (safe_int32_of_integer_ (C_149:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_152:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_154:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_160:
                                               (safe_int32_of_integer_ 
                                                (C_159:
                                                ((bw_and (integer_of_int32 
                                                          (C_158:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_157:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_156:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_155: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_168:
                  (safe_int32_of_integer_ (C_167:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_170:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_172:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_178:
                                               (safe_int32_of_integer_ 
                                                (C_177:
                                                ((bw_and (integer_of_int32 
                                                          (C_176:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_175:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_174:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_173: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_186:
                  (safe_int32_of_integer_ (C_185:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_188:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_190:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_196:
                                               (safe_int32_of_integer_ 
                                                (C_195:
                                                ((bw_and (integer_of_int32 
                                                          (C_194:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_193:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_192:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_191: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_204:
                  (safe_int32_of_integer_ (C_203:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_206:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_208:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_214:
                                               (safe_int32_of_integer_ 
                                                (C_213:
                                                ((bw_and (integer_of_int32 
                                                          (C_212:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_211:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_210:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_209: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_222:
                  (safe_int32_of_integer_ (C_221:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_224:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_226:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_232:
                                               (safe_int32_of_integer_ 
                                                (C_231:
                                                ((bw_and (integer_of_int32 
                                                          (C_230:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_229:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_228:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_227: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_240:
                  (safe_int32_of_integer_ (C_239:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_242:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_244:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_250:
                                               (safe_int32_of_integer_ 
                                                (C_249:
                                                ((bw_and (integer_of_int32 
                                                          (C_248:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_247:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_246:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_245: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_258:
                  (safe_int32_of_integer_ (C_257:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_260:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_262:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_268:
                                               (safe_int32_of_integer_ 
                                                (C_267:
                                                ((bw_and (integer_of_int32 
                                                          (C_266:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_265:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_264:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_263: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_276:
                  (safe_int32_of_integer_ (C_275:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_278:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_280:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_286:
                                               (safe_int32_of_integer_ 
                                                (C_285:
                                                ((bw_and (integer_of_int32 
                                                          (C_284:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_283:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_282:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_281: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_294:
                  (safe_int32_of_integer_ (C_293:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_296:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_298:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_304:
                                               (safe_int32_of_integer_ 
                                                (C_303:
                                                ((bw_and (integer_of_int32 
                                                          (C_302:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_301:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_300:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_299: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_312:
                  (safe_int32_of_integer_ (C_311:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_314:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_316:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_322:
                                               (safe_int32_of_integer_ 
                                                (C_321:
                                                ((bw_and (integer_of_int32 
                                                          (C_320:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_319:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_318:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_317: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_330:
                  (safe_int32_of_integer_ (C_329:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_332:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_334:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_340:
                                               (safe_int32_of_integer_ 
                                                (C_339:
                                                ((bw_and (integer_of_int32 
                                                          (C_338:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_337:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_336:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_335: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_348:
                  (safe_int32_of_integer_ (C_347:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_350:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_352:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_358:
                                               (safe_int32_of_integer_ 
                                                (C_357:
                                                ((bw_and (integer_of_int32 
                                                          (C_356:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_355:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_354:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_353: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_366:
                  (safe_int32_of_integer_ (C_365:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_368:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_370:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_376:
                                               (safe_int32_of_integer_ 
                                                (C_375:
                                                ((bw_and (integer_of_int32 
                                                          (C_374:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_373:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_372:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_371: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_384:
                  (safe_int32_of_integer_ (C_383:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_386:
                   ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                    ((shift rdy_head) (integer_of_int32 !q_1))))) in void);
          (if ((safe_neq_pointer !rp_2) null)
          then
           (C_388:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            [ { } unit
              { (JC_<somenum>:
                ((JC_<somenum>:
                 le_int(offset_min(priv_proc_ptr_28_alloc_table,
                        select(proc_0_p_priv_proc_ptr_2, rp_2)),
                 (0)))
                and (JC_<somenum>:
                    ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                           select(proc_0_p_priv_proc_ptr_2, rp_2)),
                    (0))))) } ];
            (assert { true };
            (((if ((neq_int_ (integer_of_int32 (C_394:
                                               (safe_int32_of_integer_ 
                                                (C_393:
                                                ((bw_and (integer_of_int32 
                                                          (C_392:
                                                          (safe_int32_of_integer_ 
                                                           (integer_of_int16 
                                                            (C_391:
                                                            ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                             (C_390:
                                                             ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
              then (let jessie_<somenum> = (C_389: (bill_ptr := !rp_2)) in void)
              else void))
            {{ (JC_<somenum>:
               ((JC_<somenum>:
                le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                (0)))
               and (JC_<somenum>:
                   ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0))))) }})); (raise (Return_label_exc void)) end)
          else void);
          (let jessie_<somenum> =
          (q_1 := (C_402:
                  (safe_int32_of_integer_ (C_401:
                                          ((add_int (integer_of_int32 !q_1)) (1)))))) in
          void); void;
          (loop_4:
          while true do
          { invariant
              (JC_<somenum>:
              (((((((((((((bill_ptr = bill_ptr@init)
                         and (next_ptr = next_ptr@init))
                        and (JC_<somenum>:
                            not_assigns(struct_proc___xP_proc_ptr_2_alloc_table@init,
                            struct_proc___xP_struct_proc___xM_proc_ptr_2@init,
                            struct_proc___xP_struct_proc___xM_proc_ptr_2,
                            pset_union(pset_deref(proc_0_p_nextready_proc_ptr_2@init,
                                       pset_singleton(bill_ptr@init)),
                            pset_deref(proc_0_p_nextready_proc_ptr_2@init,
                            pset_singleton(next_ptr@init))))))
                       and (JC_<somenum>:
                           not_assigns(proc_0_proc_ptr_2_alloc_table@init,
                           proc_0_p_nr_proc_ptr_2@init,
                           proc_0_p_nr_proc_ptr_2,
                           pset_union(pset_singleton(bill_ptr@init),
                           pset_singleton(next_ptr@init)))))
                      and (JC_<somenum>:
                          not_assigns(proc_0_proc_ptr_2_alloc_table@init,
                          proc_0_p_priv_proc_ptr_2@init,
                          proc_0_p_priv_proc_ptr_2,
                          pset_union(pset_singleton(bill_ptr@init),
                          pset_singleton(next_ptr@init)))))
                     and (JC_<somenum>:
                         not_assigns(proc_0_proc_ptr_2_alloc_table@init,
                         proc_0_p_rts_flags_proc_ptr_2@init,
                         proc_0_p_rts_flags_proc_ptr_2,
                         pset_union(pset_singleton(bill_ptr@init),
                         pset_singleton(next_ptr@init)))))
                    and (JC_<somenum>:
                        not_assigns(proc_0_proc_ptr_2_alloc_table@init,
                        proc_0_p_misc_flags_proc_ptr_2@init,
                        proc_0_p_misc_flags_proc_ptr_2,
                        pset_union(pset_singleton(bill_ptr@init),
                        pset_singleton(next_ptr@init)))))
                   and (JC_<somenum>:
                       not_assigns(proc_0_proc_ptr_2_alloc_table@init,
                       proc_0_p_priority_proc_ptr_2@init,
                       proc_0_p_priority_proc_ptr_2,
                       pset_union(pset_singleton(bill_ptr@init),
                       pset_singleton(next_ptr@init)))))
                  and (JC_<somenum>:
                      not_assigns(proc_0_proc_ptr_2_alloc_table@init,
                      proc_0_p_max_priority_proc_ptr_2@init,
                      proc_0_p_max_priority_proc_ptr_2,
                      pset_union(pset_singleton(bill_ptr@init),
                      pset_singleton(next_ptr@init)))))
                 and (JC_<somenum>:
                     not_assigns(proc_0_proc_ptr_2_alloc_table@init,
                     proc_0_p_ticks_left_proc_ptr_2@init,
                     proc_0_p_ticks_left_proc_ptr_2,
                     pset_union(pset_singleton(bill_ptr@init),
                     pset_singleton(next_ptr@init)))))
                and (JC_<somenum>:
                    not_assigns(proc_0_proc_ptr_2_alloc_table@init,
                    proc_0_p_quantum_size_proc_ptr_2@init,
                    proc_0_p_quantum_size_proc_ptr_2,
                    pset_union(pset_singleton(bill_ptr@init),
                    pset_singleton(next_ptr@init)))))
               and (JC_<somenum>:
                   not_assigns(proc_0_proc_ptr_2_alloc_table@init,
                   proc_0_p_caller_q_proc_ptr_2@init,
                   proc_0_p_caller_q_proc_ptr_2,
                   pset_union(pset_singleton(bill_ptr@init),
                   pset_singleton(next_ptr@init)))))
              and (JC_<somenum>:
                  not_assigns(proc_0_proc_ptr_2_alloc_table@init,
                  proc_0_p_q_link_proc_ptr_2@init,
                  proc_0_p_q_link_proc_ptr_2,
                  pset_union(pset_singleton(bill_ptr@init),
                  pset_singleton(next_ptr@init))))))  }
           begin
             [ { } unit { true } ];
            try
             begin
               (let jessie_<somenum> =
               (C_405:
               (C_421:
               begin
                 (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
                 else (raise (Goto_while_0_break_exc void)));
                (let jessie_<somenum> =
                (rp_2 := (C_404:
                         ((safe_acc_ !struct_proc___xP_struct_proc___xM_proc_ptr_2) 
                          ((shift rdy_head) (integer_of_int32 !q_1))))) in
                void);
                (if ((safe_neq_pointer !rp_2) null)
                then
                 (C_406:
                 begin
                   (let jessie_<somenum> = (next_ptr := !rp_2) in void);
                  [ { } unit
                    { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) } ];
                  (assert { true };
                  (((if ((neq_int_ (integer_of_int32 (C_412:
                                                     (safe_int32_of_integer_ 
                                                      (C_411:
                                                      ((bw_and (integer_of_int32 
                                                                (C_410:
                                                                (safe_int32_of_integer_ 
                                                                 (integer_of_int16 
                                                                  (C_409:
                                                                  ((safe_acc_ !priv_s_flags_proc_ptr_28) 
                                                                   (C_408:
                                                                   ((safe_acc_ !proc_0_p_priv_proc_ptr_2) !rp_2))))))))) (4))))))) (0))
                    then
                     (let jessie_<somenum> = (C_407: (bill_ptr := !rp_2)) in void)
                    else void))
                  {{ (JC_<somenum>:
                     ((JC_<somenum>:
                      le_int(offset_min(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0)))
                     and (JC_<somenum>:
                         ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                                bill_ptr),
                         (0))))) }})); (raise (Return_label_exc void)) end)
                else void);
                (q_1 := (C_420:
                        (safe_int32_of_integer_ (C_419:
                                                ((add_int (integer_of_int32 !q_1)) (1))))));
                !q_1 end)) in void); (raise (Loop_continue_exc void)) end
             with Loop_continue_exc jessie_<somenum> -> void end end done);
          (unrolling_4_loop: void); (raise (Goto_while_0_break_exc void)) end))))))))))))))))))))))))))))))))))))))))))))))))))))
         with Goto_while_0_break_exc jessie_<somenum> -> (while_0_break: void) end;
       (raise (Return_label_exc void)) end with Return_label_exc jessie_<somenum> ->
      (return_label: (raise Return)) end)); (raise Return) end with Return ->
   void end)
  { (JC_<somenum>:
    ((JC_<somenum>:
     ((le_int(offset_min(proc_0_proc_ptr_2_alloc_table, next_ptr), (0))
      and ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, next_ptr), (0)))
     or (le_int(offset_min(proc_0_proc_ptr_2_alloc_table, next_ptr), (0))
        and (ge_int(offset_max(proc_0_proc_ptr_2_alloc_table, next_ptr), (0))
            and (le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                 (0))
                and ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                           bill_ptr),
                    (0)))))))
    and (JC_<somenum>:
        (((((((((((((bill_ptr = bill_ptr@) and (next_ptr = next_ptr@))
                  and (JC_<somenum>:
                      not_assigns(struct_proc___xP_proc_ptr_2_alloc_table@,
                      struct_proc___xP_struct_proc___xM_proc_ptr_2@,
                      struct_proc___xP_struct_proc___xM_proc_ptr_2,
                      pset_union(pset_deref(proc_0_p_nextready_proc_ptr_2@,
                                 pset_singleton(bill_ptr@)),
                      pset_deref(proc_0_p_nextready_proc_ptr_2@,
                      pset_singleton(next_ptr@))))))
                 and (JC_<somenum>:
                     not_assigns(proc_0_proc_ptr_2_alloc_table@,
                     proc_0_p_nr_proc_ptr_2@, proc_0_p_nr_proc_ptr_2,
                     pset_union(pset_singleton(bill_ptr@),
                     pset_singleton(next_ptr@)))))
                and (JC_<somenum>:
                    not_assigns(proc_0_proc_ptr_2_alloc_table@,
                    proc_0_p_priv_proc_ptr_2@, proc_0_p_priv_proc_ptr_2,
                    pset_union(pset_singleton(bill_ptr@),
                    pset_singleton(next_ptr@)))))
               and (JC_<somenum>:
                   not_assigns(proc_0_proc_ptr_2_alloc_table@,
                   proc_0_p_rts_flags_proc_ptr_2@,
                   proc_0_p_rts_flags_proc_ptr_2,
                   pset_union(pset_singleton(bill_ptr@),
                   pset_singleton(next_ptr@)))))
              and (JC_<somenum>:
                  not_assigns(proc_0_proc_ptr_2_alloc_table@,
                  proc_0_p_misc_flags_proc_ptr_2@,
                  proc_0_p_misc_flags_proc_ptr_2,
                  pset_union(pset_singleton(bill_ptr@),
                  pset_singleton(next_ptr@)))))
             and (JC_<somenum>:
                 not_assigns(proc_0_proc_ptr_2_alloc_table@,
                 proc_0_p_priority_proc_ptr_2@, proc_0_p_priority_proc_ptr_2,
                 pset_union(pset_singleton(bill_ptr@),
                 pset_singleton(next_ptr@)))))
            and (JC_<somenum>:
                not_assigns(proc_0_proc_ptr_2_alloc_table@,
                proc_0_p_max_priority_proc_ptr_2@,
                proc_0_p_max_priority_proc_ptr_2,
                pset_union(pset_singleton(bill_ptr@),
                pset_singleton(next_ptr@)))))
           and (JC_<somenum>:
               not_assigns(proc_0_proc_ptr_2_alloc_table@,
               proc_0_p_ticks_left_proc_ptr_2@,
               proc_0_p_ticks_left_proc_ptr_2,
               pset_union(pset_singleton(bill_ptr@),
               pset_singleton(next_ptr@)))))
          and (JC_<somenum>:
              not_assigns(proc_0_proc_ptr_2_alloc_table@,
              proc_0_p_quantum_size_proc_ptr_2@,
              proc_0_p_quantum_size_proc_ptr_2,
              pset_union(pset_singleton(bill_ptr@),
              pset_singleton(next_ptr@)))))
         and (JC_<somenum>:
             not_assigns(proc_0_proc_ptr_2_alloc_table@,
             proc_0_p_caller_q_proc_ptr_2@, proc_0_p_caller_q_proc_ptr_2,
             pset_union(pset_singleton(bill_ptr@), pset_singleton(next_ptr@)))))
        and (JC_<somenum>:
            not_assigns(proc_0_proc_ptr_2_alloc_table@,
            proc_0_p_q_link_proc_ptr_2@, proc_0_p_q_link_proc_ptr_2,
            pset_union(pset_singleton(bill_ptr@), pset_singleton(next_ptr@)))))))) }

let pick_proc_safety =
 fun (tt : unit) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     ((JC_<somenum>:
      le_int(offset_min(struct_proc___xP_proc_ptr_2_alloc_table, rdy_head),
      (0)))
     and ((JC_<somenum>:
          ge_int(offset_max(struct_proc___xP_proc_ptr_2_alloc_table,
                 rdy_head),
          sub_int((16), (1))))
         and (JC_<somenum>:
             (select(struct_proc___xP_struct_proc___xM_proc_ptr_2,
              shift(rdy_head, (0))) <> null)))))
    and ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
        and ((JC_<somenum>:
             valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
            and ((JC_<somenum>:
                 valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
                and (JC_<somenum>:
                    valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table))))))) }
  (init:
  try
   begin
     (let rp_2 = ref (any_pointer void) in
     (let q_1 = ref (any_int32 void) in
     try
      begin
        try
         (C_97:
         (C_99:
         (C_115:
         (unrolling_21_loop:
         (C_117:
         (C_133:
         (unrolling_20_loop:
         (C_135:
         (C_151:
         (unrolling_19_loop:
         (C_153:
         (C_169:
         (unrolling_18_loop:
         (C_171:
         (C_187:
         (unrolling_17_loop:
         (C_189:
         (C_205:
         (unrolling_16_loop:
         (C_207:
         (C_223:
         (unrolling_15_loop:
         (C_225:
         (C_241:
         (unrolling_14_loop:
         (C_243:
         (C_259:
         (unrolling_13_loop:
         (C_261:
         (C_277:
         (unrolling_12_loop:
         (C_279:
         (C_295:
         (unrolling_11_loop:
         (C_297:
         (C_313:
         (unrolling_10_loop:
         (C_315:
         (C_331:
         (unrolling_9_loop:
         (C_333:
         (C_349:
         (unrolling_8_loop:
         (C_351:
         (C_367:
         (unrolling_7_loop:
         (C_369:
         (C_385:
         (unrolling_6_loop:
         (C_387:
         (C_403:
         (unrolling_5_loop:
         begin
           (let jessie_<somenum> = (q_1 := (safe_int32_of_integer_ (0))) in void);
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_98:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_100:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_106:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_105:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_104:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_103:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_102:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_101: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_114:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_113:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_116:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_118:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_124:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_123:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_122:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_121:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_120:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_119: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_132:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_131:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_134:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_136:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_142:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_141:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_140:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_139:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_138:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_137: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_150:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_149:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_152:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_154:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_160:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_159:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_158:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_157:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_156:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_155: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_168:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_167:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_170:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_172:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_178:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_177:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_176:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_175:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_174:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_173: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_186:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_185:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_188:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_190:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_196:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_195:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_194:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_193:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_192:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_191: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_204:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_203:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_206:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_208:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_214:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_213:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_212:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_211:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_210:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_209: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_222:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_221:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_224:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_226:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_232:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_231:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_230:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_229:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_228:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_227: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_240:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_239:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_242:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_244:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_250:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_249:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_248:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_247:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_246:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_245: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_258:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_257:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_260:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_262:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_268:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_267:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_266:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_265:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_264:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_263: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_276:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_275:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_278:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_280:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_286:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_285:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_284:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_283:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_282:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_281: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_294:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_293:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_296:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_298:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_304:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_303:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_302:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_301:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_300:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_299: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_312:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_311:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_314:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_316:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_322:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_321:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_320:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_319:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_318:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_317: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_330:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_329:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_332:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_334:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_340:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_339:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_338:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_337:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_336:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_335: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_348:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_347:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_350:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_352:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_358:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_357:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_356:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_355:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_354:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_353: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_366:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_365:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_368:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_370:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_376:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_375:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_374:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_373:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_372:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_371: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_384:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_383:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
          else (raise (Goto_while_0_break_exc void)));
          (let jessie_<somenum> =
          (rp_2 := (C_386:
                   (JC_<somenum>:
                   ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                    (integer_of_int32 !q_1))))) in void);
          (if ((neq_pointer !rp_2) null)
          then
           (C_388:
           begin
             (let jessie_<somenum> = (next_ptr := !rp_2) in void);
            (let jessie_<somenum> =
            (assert { (JC_<somenum>:
                      ((JC_<somenum>:
                       le_int(offset_min(priv_proc_ptr_28_alloc_table,
                              select(proc_0_p_priv_proc_ptr_2, rp_2)),
                       (0)))
                      and (JC_<somenum>:
                          ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                 select(proc_0_p_priv_proc_ptr_2, rp_2)),
                          (0))))) };
            ((if ((neq_int_ (integer_of_int32 (C_394:
                                              (JC_<somenum>:
                                              (int32_of_integer_ (C_393:
                                                                 ((bw_and 
                                                                   (integer_of_int32 
                                                                    (C_392:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (integer_of_int16 
                                                                    (C_391:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                    (C_390:
                                                                    (JC_<somenum>:
                                                                    (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
             then (let jessie_<somenum> = (C_389: (bill_ptr := !rp_2)) in void)
             else void))) in
            begin
              [ { } unit
                { (JC_<somenum>:
                  ((JC_<somenum>:
                   le_int(offset_min(proc_0_proc_ptr_2_alloc_table, bill_ptr),
                   (0)))
                  and (JC_<somenum>:
                      ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                             bill_ptr),
                      (0))))) } ]; jessie_<somenum> end);
            (raise (Return_label_exc void)) end) else void);
          (let jessie_<somenum> =
          (q_1 := (C_402:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_401:
                                     ((add_int (integer_of_int32 !q_1)) (1))))))) in
          void); void;
          (loop_3:
          while true do
          { invariant (JC_<somenum>: true) variant (0) }
           begin
             [ { } unit { true } ];
            try
             begin
               (let jessie_<somenum> =
               (C_405:
               (C_421:
               begin
                 (if ((lt_int_ (integer_of_int32 !q_1)) (16)) then void
                 else (raise (Goto_while_0_break_exc void)));
                (let jessie_<somenum> =
                (rp_2 := (C_404:
                         (JC_<somenum>:
                         ((((offset_acc_ !struct_proc___xP_proc_ptr_2_alloc_table) !struct_proc___xP_struct_proc___xM_proc_ptr_2) rdy_head) 
                          (integer_of_int32 !q_1))))) in void);
                (if ((neq_pointer !rp_2) null)
                then
                 (C_406:
                 begin
                   (let jessie_<somenum> = (next_ptr := !rp_2) in void);
                  (let jessie_<somenum> =
                  (assert { (JC_<somenum>:
                            ((JC_<somenum>:
                             le_int(offset_min(priv_proc_ptr_28_alloc_table,
                                    select(proc_0_p_priv_proc_ptr_2, rp_2)),
                             (0)))
                            and (JC_<somenum>:
                                ge_int(offset_max(priv_proc_ptr_28_alloc_table,
                                       select(proc_0_p_priv_proc_ptr_2, rp_2)),
                                (0))))) };
                  ((if ((neq_int_ (integer_of_int32 (C_412:
                                                    (JC_<somenum>:
                                                    (int32_of_integer_ 
                                                     (C_411:
                                                     ((bw_and (integer_of_int32 
                                                               (C_410:
                                                               (JC_<somenum>:
                                                               (int32_of_integer_ 
                                                                (integer_of_int16 
                                                                 (C_409:
                                                                 (JC_<somenum>:
                                                                 (((acc_ !priv_proc_ptr_28_alloc_table) !priv_s_flags_proc_ptr_28) 
                                                                  (C_408:
                                                                  (JC_<somenum>:
                                                                  (((acc_ !proc_0_proc_ptr_2_alloc_table) !proc_0_p_priv_proc_ptr_2) !rp_2)))))))))))) (4)))))))) (0))
                   then
                    (let jessie_<somenum> = (C_407: (bill_ptr := !rp_2)) in void)
                   else void))) in
                  begin
                    [ { } unit
                      { (JC_<somenum>:
                        ((JC_<somenum>:
                         le_int(offset_min(proc_0_proc_ptr_2_alloc_table,
                                bill_ptr),
                         (0)))
                        and (JC_<somenum>:
                            ge_int(offset_max(proc_0_proc_ptr_2_alloc_table,
                                   bill_ptr),
                            (0))))) } ]; jessie_<somenum> end);
                  (raise (Return_label_exc void)) end) else void);
                (q_1 := (C_420:
                        (JC_<somenum>:
                        (int32_of_integer_ (C_419:
                                           ((add_int (integer_of_int32 !q_1)) (1)))))));
                !q_1 end)) in void); (raise (Loop_continue_exc void)) end
             with Loop_continue_exc jessie_<somenum> -> void end end done);
          (unrolling_4_loop: void); (raise (Goto_while_0_break_exc void)) end))))))))))))))))))))))))))))))))))))))))))))))))))))
         with Goto_while_0_break_exc jessie_<somenum> -> (while_0_break: void) end;
       (raise (Return_label_exc void)) end with Return_label_exc jessie_<somenum> ->
      (return_label: (raise Return)) end)); (raise Return) end with Return ->
   void end)
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>:
         valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>:
             valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }

let sched_ensures_default =
 fun (rp_1 : proc_0 pointer) (queue : intP pointer) (front : intP pointer) (intP_intM_queue_12 : (intP, int32) memory ref) (intP_intM_front_13 : (intP, int32) memory ref) (proc_0_p_priority_rp_1_11 : (proc_0, int8) memory ref) (proc_0_p_ticks_left_rp_1_11 : (proc_0, int8) memory ref) (intP_queue_12_alloc_table : intP alloc_table) (intP_front_13_alloc_table : intP alloc_table) (proc_0_rp_1_11_alloc_table : proc_0 alloc_table) (proc_0_p_quantum_size_rp_1_11 : (proc_0, int8) memory) ->
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>:
         valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>:
             valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }
  (init:
  try
   begin
     (let time_left = ref (any_int32 void) in
     (C_78:
     (C_93:
     (C_95:
     begin
       (let jessie_<somenum> =
       (time_left := (C_77:
                     (safe_int32_of_integer_ (if ((gt_int_ (integer_of_int32 
                                                            (C_76:
                                                            (safe_int32_of_integer_ 
                                                             (integer_of_int8 
                                                              (C_75:
                                                              ((safe_acc_ !proc_0_p_ticks_left_rp_1_11) rp_1))))))) (0))
                                             then (1) else (0))))) in void);
      (if (not ((neq_int_ (integer_of_int32 !time_left)) (0)))
      then
       (C_81:
       begin
         (let jessie_<somenum> =
         (C_79: ((safe_acc_ proc_0_p_quantum_size_rp_1_11) rp_1)) in
         (let jessie_<somenum> = rp_1 in
         (((safe_upd_ proc_0_p_ticks_left_rp_1_11) jessie_<somenum>) jessie_<somenum>)));
        (if ((lt_int_ (integer_of_int32 (C_89:
                                        (safe_int32_of_integer_ (integer_of_int8 
                                                                 (C_88:
                                                                 ((safe_acc_ !proc_0_p_priority_rp_1_11) rp_1))))))) (14))
        then
         (let jessie_<somenum> =
         (C_85:
         (safe_int8_of_integer_ (C_84:
                                ((add_int (integer_of_int32 (C_83:
                                                            (safe_int32_of_integer_ 
                                                             (integer_of_int8 
                                                              (C_82:
                                                              ((safe_acc_ !proc_0_p_priority_rp_1_11) rp_1))))))) (1))))) in
         (let jessie_<somenum> = rp_1 in
         (((safe_upd_ proc_0_p_priority_rp_1_11) jessie_<somenum>) jessie_<somenum>)))
        else void) end) else void);
      (let jessie_<somenum> =
      (C_91:
      (safe_int32_of_integer_ (integer_of_int8 (C_90:
                                               ((safe_acc_ !proc_0_p_priority_rp_1_11) rp_1))))) in
      (let jessie_<somenum> = queue in
      (((safe_upd_ intP_intM_queue_12) jessie_<somenum>) jessie_<somenum>)));
      (let jessie_<somenum> = !time_left in
      (let jessie_<somenum> = front in
      (((safe_upd_ intP_intM_front_13) jessie_<somenum>) jessie_<somenum>)));
      (raise Return) end)))); (raise Return) end with Return -> void end)
  { (JC_<somenum>: true) }

let sched_safety =
 fun (rp_1 : proc_0 pointer) (queue : intP pointer) (front : intP pointer) (intP_intM_queue_12 : (intP, int32) memory ref) (intP_intM_front_13 : (intP, int32) memory ref) (proc_0_p_priority_rp_1_11 : (proc_0, int8) memory ref) (proc_0_p_ticks_left_rp_1_11 : (proc_0, int8) memory ref) (intP_queue_12_alloc_table : intP alloc_table) (intP_front_13_alloc_table : intP alloc_table) (proc_0_rp_1_11_alloc_table : proc_0 alloc_table) (proc_0_p_quantum_size_rp_1_11 : (proc_0, int8) memory) ->
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>:
         valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>:
             valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }
  (init:
  try
   begin
     (let time_left = ref (any_int32 void) in
     (C_78:
     (C_93:
     (C_95:
     begin
       (let jessie_<somenum> =
       (time_left := (C_77:
                     (JC_<somenum>:
                     (int32_of_integer_ (if ((gt_int_ (integer_of_int32 
                                                       (C_76:
                                                       (JC_<somenum>:
                                                       (int32_of_integer_ 
                                                        (integer_of_int8 
                                                         (C_75:
                                                         (JC_<somenum>:
                                                         (((acc_ proc_0_rp_1_11_alloc_table) !proc_0_p_ticks_left_rp_1_11) rp_1))))))))) (0))
                                        then (1) else (0)))))) in void);
      (if (not ((neq_int_ (integer_of_int32 !time_left)) (0)))
      then
       (C_81:
       begin
         (let jessie_<somenum> =
         (C_79:
         (JC_<somenum>:
         (((acc_ proc_0_rp_1_11_alloc_table) proc_0_p_quantum_size_rp_1_11) rp_1))) in
         (let jessie_<somenum> = rp_1 in
         (JC_<somenum>:
         ((((upd_ proc_0_rp_1_11_alloc_table) proc_0_p_ticks_left_rp_1_11) jessie_<somenum>) jessie_<somenum>))));
        (if ((lt_int_ (integer_of_int32 (C_89:
                                        (JC_<somenum>:
                                        (int32_of_integer_ (integer_of_int8 
                                                            (C_88:
                                                            (JC_<somenum>:
                                                            (((acc_ proc_0_rp_1_11_alloc_table) !proc_0_p_priority_rp_1_11) rp_1))))))))) (14))
        then
         (let jessie_<somenum> =
         (C_85:
         (JC_<somenum>:
         (int8_of_integer_ (C_84:
                           ((add_int (integer_of_int32 (C_83:
                                                       (JC_<somenum>:
                                                       (int32_of_integer_ 
                                                        (integer_of_int8 
                                                         (C_82:
                                                         (JC_<somenum>:
                                                         (((acc_ proc_0_rp_1_11_alloc_table) !proc_0_p_priority_rp_1_11) rp_1))))))))) (1)))))) in
         (let jessie_<somenum> = rp_1 in
         (JC_<somenum>:
         ((((upd_ proc_0_rp_1_11_alloc_table) proc_0_p_priority_rp_1_11) jessie_<somenum>) jessie_<somenum>))))
        else void) end) else void);
      (let jessie_<somenum> =
      (C_91:
      (JC_<somenum>:
      (int32_of_integer_ (integer_of_int8 (C_90:
                                          (JC_<somenum>:
                                          (((acc_ proc_0_rp_1_11_alloc_table) !proc_0_p_priority_rp_1_11) rp_1))))))) in
      (let jessie_<somenum> = queue in
      (JC_<somenum>:
      ((((upd_ intP_queue_12_alloc_table) intP_intM_queue_12) jessie_<somenum>) jessie_<somenum>))));
      (let jessie_<somenum> = !time_left in
      (let jessie_<somenum> = front in
      (JC_<somenum>:
      ((((upd_ intP_front_13_alloc_table) intP_intM_front_13) jessie_<somenum>) jessie_<somenum>))));
      (raise Return) end)))); (raise Return) end with Return -> void end)
  { (JC_<somenum>:
    ((JC_<somenum>: valid_proc(proc_0_proc_5_alloc_table))
    and ((JC_<somenum>:
         valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table))
        and ((JC_<somenum>:
             valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table))
            and (JC_<somenum>:
                valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table)))))) }


WHYLIB=WHYHOME/lib WHYEXEC=WHYHOME/bin/why.opt GWHYEXEC=WHYHOME/bin/gwhy.opt make --quiet -C bts0363.jessie --quiet -f bts0363.makefile project
why --project [...] why/bts0363.why
<project name="bts0363" context="why/bts0363_ctx.why">
  <function name="Function sched">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/bts0363_po529.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "288" begin = "19" end = "35"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po530.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "288" begin = "19" end = "35"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po531.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "288" begin = "19" end = "35"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po532.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "288" begin = "19" end = "35"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po533.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "288" begin = "19" end = "39"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po534.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "288" begin = "19" end = "39"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po535.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "295" begin = "25" end = "43"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po536.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "295" begin = "25" end = "43"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po537.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "214" begin = "18" end = "75"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po538.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "214" begin = "18" end = "75"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po539.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "296" begin = "10" end = "24"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po540.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "296" begin = "10" end = "24"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po541.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "296" begin = "10" end = "24"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po542.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "296" begin = "10" end = "24"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po543.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "297" begin = "10" end = "24"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po544.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "297" begin = "10" end = "24"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po545.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "297" begin = "10" end = "24"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po546.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "297" begin = "10" end = "24"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po547.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "297" begin = "10" end = "29"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po548.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "297" begin = "10" end = "29"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po549.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "297" begin = "10" end = "29"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po550.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "297" begin = "10" end = "29"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po551.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "305" begin = "11" end = "25"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po552.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "305" begin = "11" end = "25"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po553.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "305" begin = "11" end = "25"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po554.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "305" begin = "11" end = "25"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po555.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "220" begin = "15" end = "81"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po556.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "220" begin = "15" end = "81"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po557.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "221" begin = "15" end = "46"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po558.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "221" begin = "15" end = "46"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po559.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "279" begin = "0" end = "6"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po560.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "279" begin = "0" end = "6"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po561.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "279" begin = "0" end = "6"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Function pick_proc">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="default behavior">
    <goal why_file="why/bts0363_po178.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po179.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po180.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po181.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po182.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po183.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po184.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po185.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po186.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po187.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po188.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po189.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po190.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po191.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po192.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po193.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po194.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po195.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po196.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po197.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po198.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po199.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po200.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po201.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po202.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po203.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po204.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po205.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po206.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po207.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po208.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po209.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po210.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po211.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po212.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0363_po213.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0363_po214.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0363_po215.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0363_po216.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0363_po217.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0363_po218.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0363_po219.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0363_po220.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0363_po221.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0363_po222.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0363_po223.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0363_po224.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0363_po225.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po226.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "344" begin = "22" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po227.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0363_po228.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0363_po229.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0363_po230.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0363_po231.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0363_po232.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0363_po233.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0363_po234.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0363_po235.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0363_po236.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0363_po237.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0363_po238.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "693" begin = "9" end = "1584"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0363_po239.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "319" begin = "12" end = "70"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po240.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "232" begin = "10" end = "550"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po241.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "232" begin = "10" end = "550"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po242.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "321" begin = "12" end = "21"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po243.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "321" begin = "12" end = "21"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po244.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "321" begin = "12" end = "21"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po245.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "321" begin = "12" end = "21"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po246.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "321" begin = "12" end = "21"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po247.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "321" begin = "12" end = "21"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po248.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "321" begin = "12" end = "21"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po249.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "321" begin = "12" end = "21"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po250.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "321" begin = "12" end = "21"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po251.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "321" begin = "12" end = "21"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po252.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "321" begin = "12" end = "21"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
    <behavior name="Safety">
    <goal why_file="why/bts0363_po253.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po254.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po255.why">
      <location file = "why/bts0363.why" line = "3504" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po256.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po257.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po258.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po259.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po260.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po261.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po262.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po263.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po264.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po265.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po266.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po267.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po268.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po269.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po270.why">
      <location file = "why/bts0363.why" line = "3560" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po271.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po272.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po273.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po274.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po275.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po276.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po277.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po278.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po279.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po280.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po281.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po282.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po283.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po284.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po285.why">
      <location file = "why/bts0363.why" line = "3616" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po286.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po287.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po288.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po289.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po290.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po291.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po292.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po293.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po294.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po295.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po296.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po297.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po298.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po299.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po300.why">
      <location file = "why/bts0363.why" line = "3672" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po301.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po302.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po303.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po304.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po305.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po306.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po307.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po308.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po309.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po310.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po311.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po312.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po313.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po314.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po315.why">
      <location file = "why/bts0363.why" line = "3728" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po316.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po317.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po318.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po319.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po320.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po321.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po322.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po323.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po324.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po325.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po326.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po327.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po328.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po329.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po330.why">
      <location file = "why/bts0363.why" line = "3784" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po331.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po332.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po333.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po334.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po335.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po336.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po337.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po338.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po339.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po340.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po341.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po342.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po343.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po344.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po345.why">
      <location file = "why/bts0363.why" line = "3840" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po346.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po347.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po348.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po349.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po350.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po351.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po352.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po353.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po354.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po355.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po356.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po357.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po358.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po359.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po360.why">
      <location file = "why/bts0363.why" line = "3896" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po361.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po362.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po363.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po364.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po365.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po366.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po367.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po368.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po369.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po370.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po371.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po372.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po373.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po374.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po375.why">
      <location file = "why/bts0363.why" line = "3952" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po376.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po377.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po378.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po379.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po380.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po381.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po382.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po383.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po384.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po385.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po386.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po387.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po388.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po389.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po390.why">
      <location file = "why/bts0363.why" line = "4008" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po391.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po392.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po393.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po394.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po395.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po396.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po397.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po398.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po399.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po400.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po401.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po402.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po403.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po404.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po405.why">
      <location file = "why/bts0363.why" line = "4064" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po406.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po407.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po408.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po409.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po410.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po411.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po412.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po413.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po414.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po415.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po416.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po417.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po418.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po419.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po420.why">
      <location file = "why/bts0363.why" line = "4120" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po421.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po422.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po423.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po424.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po425.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po426.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po427.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po428.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po429.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po430.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po431.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po432.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po433.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po434.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po435.why">
      <location file = "why/bts0363.why" line = "4176" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po436.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po437.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po438.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po439.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po440.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po441.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po442.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po443.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po444.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po445.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po446.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po447.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po448.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po449.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po450.why">
      <location file = "why/bts0363.why" line = "4232" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po451.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po452.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po453.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po454.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po455.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po456.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po457.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po458.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po459.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po460.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po461.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po462.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po463.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po464.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po465.why">
      <location file = "why/bts0363.why" line = "4288" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po466.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po467.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po468.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po469.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po470.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po471.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po472.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po473.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po474.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po475.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po476.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po477.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po478.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po479.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po480.why">
      <location file = "why/bts0363.why" line = "4344" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po481.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po482.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po483.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po484.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po485.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po486.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po487.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po488.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po489.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po490.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po491.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po492.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po493.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po494.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po495.why">
      <location file = "why/bts0363.why" line = "4400" begin = "15" end = "39"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po496.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po497.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po498.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po499.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po500.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po501.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po502.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po503.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po504.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po505.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po506.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po507.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po508.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po509.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "337" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po510.why">
      <location file = "why/bts0363.why" line = "4467" begin = "21" end = "45"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po511.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po512.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "343" begin = "23" end = "41"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po513.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po514.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "15" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po515.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po516.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po517.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po518.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "37"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po519.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po520.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "346" begin = "14" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po521.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po522.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "336" begin = "20" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po523.why">
      <location file = "why/bts0363.why" line = "4451" begin = "46" end = "47"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/bts0363_po524.why">
      <location file = "why/bts0363.why" line = "4451" begin = "46" end = "47"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/bts0363_po525.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "321" begin = "12" end = "21"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po526.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "321" begin = "12" end = "21"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po527.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "321" begin = "12" end = "21"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po528.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "321" begin = "12" end = "21"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Function main">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/bts0363_po168.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "807" begin = "15" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po169.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "807" begin = "15" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po170.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "807" begin = "15" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po171.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "807" begin = "15" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po172.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "807" begin = "15" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po173.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "807" begin = "15" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po174.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "807" begin = "15" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po175.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "408" begin = "4" end = "8"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po176.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "408" begin = "4" end = "8"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po177.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "408" begin = "4" end = "8"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Function enqueue">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/bts0363_po116.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "185" begin = "6" end = "7"/>
      <explain kind = "Pre"
text = "AllocSize"/>
    </goal>
    <goal why_file="why/bts0363_po117.why">
      <location file = "why/bts0363.why" line = "2085" begin = "19" end = "76"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po118.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "186" begin = "6" end = "11"/>
      <explain kind = "Pre"
text = "AllocSize"/>
    </goal>
    <goal why_file="why/bts0363_po119.why">
      <location file = "why/bts0363.why" line = "2094" begin = "24" end = "142"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0363_po120.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "122" begin = "13" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po121.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "122" begin = "13" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po122.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "122" begin = "13" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po123.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "198" begin = "6" end = "17"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po124.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "198" begin = "6" end = "17"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po125.why">
      <location file = "why/bts0363.why" line = "2103" begin = "15" end = "354"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po126.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "125" begin = "18" end = "78"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po127.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "125" begin = "18" end = "78"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po128.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "126" begin = "18" end = "78"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po129.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "126" begin = "18" end = "78"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po130.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "200" begin = "25" end = "42"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po131.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "200" begin = "25" end = "42"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po132.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "203" begin = "24" end = "35"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po133.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "203" begin = "24" end = "35"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po134.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "203" begin = "24" end = "35"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po135.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "203" begin = "24" end = "35"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po136.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "131" begin = "25" end = "86"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po137.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "131" begin = "25" end = "86"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po138.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "207" begin = "6" end = "17"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po139.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "207" begin = "6" end = "17"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po140.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "207" begin = "33" end = "35"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po141.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "207" begin = "33" end = "35"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po142.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "134" begin = "25" end = "86"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po143.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "134" begin = "25" end = "86"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po144.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "209" begin = "25" end = "42"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po145.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "209" begin = "25" end = "42"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po146.why">
      <location file = "why/bts0363.why" line = "2199" begin = "20" end = "47"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po147.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "216" begin = "18" end = "39"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po148.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "216" begin = "18" end = "39"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po149.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "217" begin = "6" end = "24"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po150.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "217" begin = "6" end = "24"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po151.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "217" begin = "5" end = "34"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po152.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "217" begin = "5" end = "34"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po153.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "217" begin = "5" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po154.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "217" begin = "5" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po155.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "217" begin = "5" end = "41"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po156.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "217" begin = "5" end = "41"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po157.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "148" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po158.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "148" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po159.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "148" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po160.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "148" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po161.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "148" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po162.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "148" begin = "17" end = "28"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po163.why">
      <location file = "why/bts0363.why" line = "2231" begin = "15" end = "56"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po164.why">
      <location file = "why/bts0363.why" line = "2232" begin = "8" end = "61"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po165.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "177" begin = "1" end = "5"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po166.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "177" begin = "1" end = "5"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po167.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "177" begin = "1" end = "5"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Function dequeue">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/bts0363_po68.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "237" begin = "19" end = "33"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po69.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "237" begin = "19" end = "33"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po70.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "237" begin = "19" end = "33"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po71.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "237" begin = "19" end = "33"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po72.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "242" begin = "8" end = "18"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po73.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "242" begin = "8" end = "18"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po74.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "257" begin = "27" end = "31"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po75.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "257" begin = "27" end = "31"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po76.why">
      <location file = "why/bts0363.why" line = "1822" begin = "19" end = "222"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po77.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "259" begin = "10" end = "14"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po78.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "259" begin = "10" end = "14"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po79.why">
      <location file = "why/bts0363.why" line = "1829" begin = "20" end = "220"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po80.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "260" begin = "18" end = "22"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po81.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "260" begin = "18" end = "22"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po82.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "260" begin = "17" end = "36"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po83.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "260" begin = "17" end = "36"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po84.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "185" begin = "27" end = "203"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po85.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "185" begin = "27" end = "203"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po86.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "261" begin = "20" end = "31"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po87.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "261" begin = "20" end = "31"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po88.why">
      <location file = "why/bts0363.why" line = "1847" begin = "22" end = "311"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po89.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "262" begin = "28" end = "35"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po90.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "262" begin = "28" end = "35"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po91.why">
      <location file = "why/bts0363.why" line = "1861" begin = "22" end = "46"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po92.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "264" begin = "14" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po93.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "264" begin = "14" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po94.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "264" begin = "14" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po95.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "264" begin = "14" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po96.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "264" begin = "14" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po97.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "264" begin = "14" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po98.why">
      <location file = "why/bts0363.why" line = "1864" begin = "23" end = "48"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po99.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "264" begin = "14" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po100.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "264" begin = "14" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po101.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "264" begin = "14" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po102.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "264" begin = "14" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po103.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "264" begin = "14" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po104.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "264" begin = "14" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po105.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "267" begin = "16" end = "20"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po106.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "267" begin = "16" end = "20"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po107.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "257" begin = "64" end = "68"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po108.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "257" begin = "64" end = "68"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po109.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "257" begin = "62" end = "82"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po110.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "257" begin = "62" end = "82"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po111.why">
      <location file = "why/bts0363.why" line = "1814" begin = "43" end = "44"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/bts0363_po112.why">
      <location file = "why/bts0363.why" line = "1814" begin = "43" end = "44"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/bts0363_po113.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "230" begin = "1" end = "5"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po114.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "230" begin = "1" end = "5"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po115.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "230" begin = "1" end = "5"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Function balance_queues">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="default behavior">
    <goal why_file="why/bts0363_po1.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "380" begin = "21" end = "42"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0363_po2.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "380" begin = "21" end = "42"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    </behavior>
    <behavior name="Safety">
    <goal why_file="why/bts0363_po3.why">
      <location file = "why/bts0363.why" line = "1527" begin = "29" end = "129"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/bts0363_po4.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "382" begin = "13" end = "30"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po5.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "382" begin = "13" end = "30"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po6.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "382" begin = "13" end = "30"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po7.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "382" begin = "13" end = "30"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po8.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "384" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po9.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "384" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po10.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "384" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po11.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "384" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po12.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "384" begin = "25" end = "43"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po13.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "384" begin = "25" end = "43"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po14.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "384" begin = "25" end = "43"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po15.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "384" begin = "25" end = "43"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po16.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "385" begin = "12" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po17.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "385" begin = "12" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po18.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "385" begin = "12" end = "27"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po19.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "385" begin = "12" end = "27"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po20.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "385" begin = "34" end = "45"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po21.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "385" begin = "34" end = "45"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po22.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "385" begin = "34" end = "45"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po23.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "385" begin = "34" end = "45"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po24.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "386" begin = "23" end = "41"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po25.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "386" begin = "23" end = "41"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po26.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "386" begin = "23" end = "41"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po27.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "386" begin = "23" end = "41"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po28.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "386" begin = "8" end = "41"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po29.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "386" begin = "8" end = "41"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po30.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "387" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po31.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "387" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po32.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "387" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po33.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "387" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po34.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "387" begin = "8" end = "27"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po35.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "387" begin = "8" end = "27"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po36.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "770" begin = "49" end = "319"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po37.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "770" begin = "49" end = "319"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po38.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "388" begin = "12" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po39.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "388" begin = "12" end = "27"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po40.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "388" begin = "12" end = "27"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po41.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "388" begin = "12" end = "27"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po42.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "388" begin = "34" end = "45"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po43.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "388" begin = "34" end = "45"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po44.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "388" begin = "34" end = "45"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po45.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "388" begin = "34" end = "45"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0363_po46.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "391" begin = "23" end = "41"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po47.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "391" begin = "23" end = "41"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po48.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "391" begin = "23" end = "41"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po49.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "391" begin = "23" end = "41"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po50.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "391" begin = "44" end = "60"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po51.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "391" begin = "44" end = "60"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po52.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "391" begin = "44" end = "60"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po53.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "391" begin = "44" end = "60"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po54.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "391" begin = "23" end = "60"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po55.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "391" begin = "23" end = "60"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po56.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "391" begin = "8" end = "60"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po57.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "391" begin = "8" end = "60"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/bts0363_po58.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "392" begin = "33" end = "51"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po59.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "392" begin = "33" end = "51"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po60.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "786" begin = "49" end = "148"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po61.why">
      <location file = "PPCHOME/tests/jessie/bts0363.jessie/bts0363.jc" line = "786" begin = "49" end = "148"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0363_po62.why">
      <location file = "why/bts0363.why" line = "1518" begin = "43" end = "44"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/bts0363_po63.why">
      <location file = "why/bts0363.why" line = "1518" begin = "43" end = "44"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/bts0363_po64.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "368" begin = "1" end = "5"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po65.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "368" begin = "1" end = "5"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po66.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "368" begin = "1" end = "5"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0363_po67.why">
      <location file = "PPCHOME/tests/jessie/bts0363.c" line = "368" begin = "1" end = "5"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
</project>
logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

logic bool_and : bool, bool -> bool

logic bool_or : bool, bool -> bool

logic bool_xor : bool, bool -> bool

logic bool_not : bool -> bool

axiom bool_and_def:
  (forall a:bool.
    (forall b:bool.
      ((bool_and(a, b) = true) <-> ((a = true) and (b = true)))))

axiom bool_or_def:
  (forall a:bool.
    (forall b:bool. ((bool_or(a, b) = true) <-> ((a = true) or (b = true)))))

axiom bool_xor_def:
  (forall a:bool. (forall b:bool. ((bool_xor(a, b) = true) <-> (a <> b))))

axiom bool_not_def: (forall a:bool. ((bool_not(a) = true) <-> (a = false)))

logic ite : bool, 'a1, 'a1 -> 'a1

axiom ite_true: (forall x:'a1. (forall y:'a1. (ite(true, x, y) = x)))

axiom ite_false: (forall x:'a1. (forall y:'a1. (ite(false, x, y) = y)))

logic lt_int_bool : int, int -> bool

logic le_int_bool : int, int -> bool

logic gt_int_bool : int, int -> bool

logic ge_int_bool : int, int -> bool

logic eq_int_bool : int, int -> bool

logic neq_int_bool : int, int -> bool

axiom lt_int_bool_axiom:
  (forall x:int. (forall y:int. ((lt_int_bool(x, y) = true) <-> (x < y))))

axiom le_int_bool_axiom:
  (forall x:int. (forall y:int. ((le_int_bool(x, y) = true) <-> (x <= y))))

axiom gt_int_bool_axiom:
  (forall x:int. (forall y:int. ((gt_int_bool(x, y) = true) <-> (x > y))))

axiom ge_int_bool_axiom:
  (forall x:int. (forall y:int. ((ge_int_bool(x, y) = true) <-> (x >= y))))

axiom eq_int_bool_axiom:
  (forall x:int. (forall y:int. ((eq_int_bool(x, y) = true) <-> (x = y))))

axiom neq_int_bool_axiom:
  (forall x:int. (forall y:int. ((neq_int_bool(x, y) = true) <-> (x <> y))))

logic abs_int : int -> int

axiom abs_int_pos: (forall x:int. ((x >= 0) -> (abs_int(x) = x)))

axiom abs_int_neg: (forall x:int. ((x <= 0) -> (abs_int(x) = (-x))))

logic int_max : int, int -> int

logic int_min : int, int -> int

axiom int_max_is_ge:
  (forall x:int.
    (forall y:int. ((int_max(x, y) >= x) and (int_max(x, y) >= y))))

axiom int_max_is_some:
  (forall x:int.
    (forall y:int. ((int_max(x, y) = x) or (int_max(x, y) = y))))

axiom int_min_is_le:
  (forall x:int.
    (forall y:int. ((int_min(x, y) <= x) and (int_min(x, y) <= y))))

axiom int_min_is_some:
  (forall x:int.
    (forall y:int. ((int_min(x, y) = x) or (int_min(x, y) = y))))

logic lt_real : real, real -> prop

logic le_real : real, real -> prop

logic gt_real : real, real -> prop

logic ge_real : real, real -> prop

logic eq_real : real, real -> prop

logic neq_real : real, real -> prop

logic add_real : real, real -> real

logic sub_real : real, real -> real

logic mul_real : real, real -> real

logic div_real : real, real -> real

logic neg_real : real -> real

logic real_of_int : int -> real

axiom real_of_int_zero: (real_of_int(0) = 0.0)

axiom real_of_int_one: (real_of_int(1) = 1.0)

axiom real_of_int_add:
  (forall x:int.
    (forall y:int.
      (real_of_int((x + y)) = (real_of_int(x) + real_of_int(y)))))

axiom real_of_int_sub:
  (forall x:int.
    (forall y:int.
      (real_of_int((x - y)) = (real_of_int(x) - real_of_int(y)))))

logic truncate_real_to_int : real -> int

axiom truncate_down_pos:
  (forall x:real.
    ((x >= 0.0) ->
     ((real_of_int(truncate_real_to_int(x)) <= x) and
      (x < real_of_int((truncate_real_to_int(x) + 1))))))

axiom truncate_up_neg:
  (forall x:real.
    ((x <= 0.0) ->
     ((real_of_int((truncate_real_to_int(x) - 1)) < x) and
      (x <= real_of_int(truncate_real_to_int(x))))))

logic floor_real_to_int : real -> int

logic ceil_real_to_int : real -> int

logic lt_real_bool : real, real -> bool

logic le_real_bool : real, real -> bool

logic gt_real_bool : real, real -> bool

logic ge_real_bool : real, real -> bool

logic eq_real_bool : real, real -> bool

logic neq_real_bool : real, real -> bool

axiom lt_real_bool_axiom:
  (forall x:real. (forall y:real. ((lt_real_bool(x, y) = true) <-> (x < y))))

axiom le_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((le_real_bool(x, y) = true) <-> (x <= y))))

axiom gt_real_bool_axiom:
  (forall x:real. (forall y:real. ((gt_real_bool(x, y) = true) <-> (x > y))))

axiom ge_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((ge_real_bool(x, y) = true) <-> (x >= y))))

axiom eq_real_bool_axiom:
  (forall x:real. (forall y:real. ((eq_real_bool(x, y) = true) <-> (x = y))))

axiom neq_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((neq_real_bool(x, y) = true) <-> (x <> y))))

logic real_max : real, real -> real

logic real_min : real, real -> real

axiom real_max_is_ge:
  (forall x:real.
    (forall y:real. ((real_max(x, y) >= x) and (real_max(x, y) >= y))))

axiom real_max_is_some:
  (forall x:real.
    (forall y:real. ((real_max(x, y) = x) or (real_max(x, y) = y))))

axiom real_min_is_le:
  (forall x:real.
    (forall y:real. ((real_min(x, y) <= x) and (real_min(x, y) <= y))))

axiom real_min_is_some:
  (forall x:real.
    (forall y:real. ((real_min(x, y) = x) or (real_min(x, y) = y))))

function sqr_real(x: real) : real = (x * x)

logic sqrt_real : real -> real

axiom sqrt_pos: (forall x:real. ((x >= 0.0) -> (sqrt_real(x) >= 0.0)))

axiom sqrt_sqr: (forall x:real. ((x >= 0.0) -> (sqr_real(sqrt_real(x)) = x)))

axiom sqr_sqrt: (forall x:real. ((x >= 0.0) -> (sqrt_real((x * x)) = x)))

logic abs_real : real -> real

axiom abs_real_pos:
  (forall x:real [abs_real(x)]. ((x >= 0.0) -> (abs_real(x) = x)))

axiom abs_real_neg:
  (forall x:real [abs_real(x)]. ((x <= 0.0) -> (abs_real(x) = (-x))))

logic exp : real -> real

logic log : real -> real

logic log10 : real -> real

axiom log_exp: (forall x:real. (log(exp(x)) = x))

axiom exp_log: (forall x:real. ((x > 0.0) -> (exp(log(x)) = x)))

logic pow_real_int : real, int -> real

logic pow_real : real, real -> real

logic cos : real -> real

logic sin : real -> real

logic tan : real -> real

logic pi : real

logic cosh : real -> real

logic sinh : real -> real

logic tanh : real -> real

logic acos : real -> real

logic asin : real -> real

logic atan : real -> real

logic atan2 : real, real -> real

logic hypot : real, real -> real

axiom prod_pos:
  (forall x:real.
    (forall y:real.
      ((((x > 0.0) and (y > 0.0)) -> ((x * y) > 0.0)) and
       (((x < 0.0) and (y < 0.0)) -> ((x * y) > 0.0)))))

axiom abs_minus: (forall x:real. (abs_real((-x)) = abs_real(x)))

logic computer_div : int, int -> int

logic computer_mod : int, int -> int

logic math_div : int, int -> int

logic math_mod : int, int -> int

axiom math_div_mod:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> (x = ((y * math_div(x, y)) + math_mod(x, y))))))

axiom math_mod_bound:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> ((0 <= math_mod(x, y)) and (math_mod(x, y) < abs_int(y))))))

axiom computer_div_mod:
  (forall x:int.
    (forall y:int [computer_div(x, y), computer_mod(x, y)].
      ((y <> 0) -> (x = ((y * computer_div(x, y)) + computer_mod(x, y))))))

axiom computer_div_bound:
  (forall x:int.
    (forall y:int.
      (((x >= 0) and (y > 0)) ->
       ((0 <= computer_div(x, y)) and (computer_div(x, y) <= x)))))

axiom computer_mod_bound:
  (forall x:int.
    (forall y:int. ((y <> 0) -> (abs_int(computer_mod(x, y)) < abs_int(y)))))

axiom computer_mod_sign_pos:
  (forall x:int.
    (forall y:int. (((x >= 0) and (y <> 0)) -> (computer_mod(x, y) >= 0))))

axiom computer_mod_sign_neg:
  (forall x:int.
    (forall y:int. (((x <= 0) and (y <> 0)) -> (computer_mod(x, y) <= 0))))

axiom computer_rounds_toward_zero:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> (abs_int((computer_div(x, y) * y)) <= abs_int(x)))))

type 't alloc_table

type 't pointer

type 't block

logic base_block : 'a1 pointer -> 'a1 block

logic offset_max : 'a1 alloc_table, 'a1 pointer -> int

logic offset_min : 'a1 alloc_table, 'a1 pointer -> int

predicate valid(a: 'a1 alloc_table, p: 'a1 pointer) =
  ((offset_min(a, p) <= 0) and (offset_max(a, p) >= 0))

predicate same_block(p: 'a1 pointer, q: 'a1 pointer) =
  (base_block(p) = base_block(q))

logic sub_pointer : 'a1 pointer, 'a1 pointer -> int

logic shift : 'a1 pointer, int -> 'a1 pointer

logic null : 'a1 pointer

logic pointer_address : 'a1 pointer -> unit pointer

logic absolute_address : int -> unit pointer

logic address : 'a1 pointer -> int

axiom address_injective:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. ((p = q) <-> (address(p) = address(q)))))

axiom address_null: (address(null) = 0)

axiom address_shift_lt:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) < address(shift(p, j))) <-> (i < j)))))

axiom address_shift_le:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) <= address(shift(p, j))) <-> (i <= j)))))

axiom shift_zero: (forall p:'a1 pointer [shift(p, 0)]. (shift(p, 0) = p))

axiom shift_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(shift(p, i), j)]. (shift(shift(p, i),
        j) = shift(p, (i + j))))))

axiom offset_max_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_max(a, shift(p, i)) = (offset_max(a, p) - i)))))

axiom offset_min_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_min(a, shift(p, i)) = (offset_min(a, p) - i)))))

axiom neq_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(p, i), shift(p, j)].
        ((i <> j) -> (shift(p, i) <> shift(p, j))))))

axiom null_not_valid: (forall a:'a1 alloc_table. (not valid(a, null)))

axiom null_pointer:
  (forall a:'a1 alloc_table.
    ((offset_min(a, null) >= 0) and (offset_max(a, null) <= (-2))))

logic eq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

logic neq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

axiom eq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer. ((eq_pointer_bool(p1, p2) = true) <-> (p1 = p2))))

axiom neq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer.
      ((neq_pointer_bool(p1, p2) = true) <-> (p1 <> p2))))

axiom same_block_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(p, shift(q, i))].
        (same_block(p, q) -> same_block(p, shift(q, i))))))

axiom same_block_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(shift(q, i), p)].
        (same_block(q, p) -> same_block(shift(q, i), p)))))

axiom sub_pointer_shift:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> (p = shift(q, sub_pointer(p, q))))))

axiom sub_pointer_self:
  (forall p:'a1 pointer [sub_pointer(p, p)]. (sub_pointer(p, p) = 0))

axiom sub_pointer_zero:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> ((sub_pointer(p, q) = 0) -> (p = q)))))

axiom sub_pointer_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(shift(p, i), q)]. (sub_pointer(shift(p, i),
        q) = (sub_pointer(p, q) + i)))))

axiom sub_pointer_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(p, shift(q, i))]. (sub_pointer(p, shift(q,
        i)) = (sub_pointer(p, q) - i)))))

type ('t, 'v) memory

logic select : ('a2, 'a1) memory, 'a2 pointer -> 'a1

logic store : ('a1, 'a2) memory, 'a1 pointer, 'a2 -> ('a1, 'a2) memory

axiom select_store_eq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 = p2) -> (select(store(m, p1, a), p2) = a))))))

axiom select_store_neq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 <> p2) -> (select(store(m, p1, a), p2) = select(m, p2)))))))

type 't pset

logic pset_empty : 'a1 pset

logic pset_singleton : 'a1 pointer -> 'a1 pset

logic pset_deref : ('a2, 'a1 pointer) memory, 'a2 pset -> 'a1 pset

logic pset_union : 'a1 pset, 'a1 pset -> 'a1 pset

logic pset_all : 'a1 pset -> 'a1 pset

logic pset_range : 'a1 pset, int, int -> 'a1 pset

logic pset_range_left : 'a1 pset, int -> 'a1 pset

logic pset_range_right : 'a1 pset, int -> 'a1 pset

logic in_pset : 'a1 pointer, 'a1 pset -> prop

logic valid_pset : 'a1 alloc_table, 'a1 pset -> prop

predicate pset_disjoint(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (not (in_pset(p, ps1) and in_pset(p, ps2))))

predicate pset_included(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (in_pset(p, ps1) -> in_pset(p, ps2)))

axiom pset_included_self: (forall ps:'a1 pset. pset_included(ps, ps))

axiom pset_included_range:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))].
            (((c <= a) and (b <= d)) -> pset_included(pset_range(ps, a, b),
             pset_range(ps, c, d))))))))

axiom pset_included_range_all:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))]. pset_included(pset_range(ps, a, b), pset_all(ps)))))))

axiom in_pset_empty: (forall p:'a1 pointer. (not in_pset(p, pset_empty)))

axiom in_pset_singleton:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. (in_pset(p, pset_singleton(q)) <-> (p = q))))

axiom in_pset_deref:
  (forall p:'a1 pointer.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (in_pset(p, pset_deref(m, q)) <->
         (exists r:'a2 pointer. (in_pset(r, q) and (p = select(m, r))))))))

axiom in_pset_all:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (in_pset(p, pset_all(q)) <->
       (exists i:int.
         (exists r:'a1 pointer. (in_pset(r, q) and (p = shift(r, i))))))))

axiom in_pset_range:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (forall b:int.
          (in_pset(p, pset_range(q, a, b)) <->
           (exists i:int.
             (exists r:'a1 pointer.
               ((a <= i) and
                ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))))

axiom in_pset_range_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall b:int.
        (in_pset(p, pset_range_left(q, b)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_range_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (in_pset(p, pset_range_right(q, a)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((a <= i) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_union:
  (forall p:'a1 pointer.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (in_pset(p, pset_union(s1, s2)) <->
         (in_pset(p, s1) or in_pset(p, s2))))))

axiom valid_pset_empty: (forall a:'a1 alloc_table. valid_pset(a, pset_empty))

axiom valid_pset_singleton:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (valid_pset(a, pset_singleton(p)) <-> valid(a, p))))

axiom valid_pset_deref:
  (forall a:'a1 alloc_table.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (valid_pset(a, pset_deref(m, q)) <->
         (forall r:'a2 pointer.
           (forall p:'a1 pointer.
             ((in_pset(r, q) and (p = select(m, r))) -> valid(a, p))))))))

axiom valid_pset_range:
  (forall a:'a1 alloc_table.
    (forall q:'a1 pset.
      (forall c:int.
        (forall d:int.
          (valid_pset(a, pset_range(q, c, d)) <->
           (forall i:int.
             (forall r:'a1 pointer.
               ((in_pset(r, q) and ((c <= i) and (i <= d))) -> valid(a,
                shift(r, i))))))))))

axiom valid_pset_union:
  (forall a:'a1 alloc_table.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (valid_pset(a, pset_union(s1, s2)) <->
         (valid_pset(a, s1) and valid_pset(a, s2))))))

predicate not_assigns(a: 'a1 alloc_table, m1: ('a1, 'a2) memory, m2: ('a1,
  'a2) memory, l: 'a1 pset) =
  (forall p:'a1 pointer.
    ((valid(a, p) and (not in_pset(p, l))) -> (select(m2, p) = select(m1, p))))

axiom not_assigns_refl:
  (forall a:'a1 alloc_table.
    (forall m:('a1, 'a2) memory.
      (forall l:'a1 pset. not_assigns(a, m, m, l))))

axiom not_assigns_trans:
  (forall a:'a1 alloc_table.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory.
          (forall l:'a1 pset [not_assigns(a, m1, m2, l), not_assigns(a, m1,
            m3, l)].
            (not_assigns(a, m1, m2, l) ->
             (not_assigns(a, m2, m3, l) -> not_assigns(a, m1, m3, l))))))))

logic full_separated : 'a1 pointer, 'a2 pointer -> prop

axiom full_separated_shift1:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(p, shift(q, i))))))

axiom full_separated_shift2:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift3:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift4:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(p, shift(q, i))))))

type 't tag_table

type 't tag_id

logic int_of_tag : 'a1 tag_id -> int

logic typeof : 'a1 tag_table, 'a1 pointer -> 'a1 tag_id

logic parenttag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag_bool : 'a1 tag_id, 'a1 tag_id -> bool

axiom subtag_bool_def:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id. ((subtag_bool(t1, t2) = true) <-> subtag(t1, t2))))

axiom subtag_refl: (forall t:'a1 tag_id. subtag(t, t))

axiom subtag_parent:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id.
      (forall t3:'a1 tag_id.
        (subtag(t1, t2) -> (parenttag(t2, t3) -> subtag(t1, t3))))))

predicate instanceof(a: 'a1 tag_table, p: 'a1 pointer, t: 'a1 tag_id) =
  subtag(typeof(a, p), t)

logic downcast : 'a1 tag_table, 'a1 pointer, 'a1 tag_id -> 'a1 pointer

axiom downcast_instanceof:
  (forall a:'a1 tag_table.
    (forall p:'a1 pointer.
      (forall s:'a1 tag_id. (instanceof(a, p, s) -> (downcast(a, p, s) = p)))))

logic bottom_tag : 'a1 tag_id

axiom bottom_tag_axiom: (forall t:'a1 tag_id. subtag(t, bottom_tag))

predicate root_tag(t: 'a1 tag_id) = parenttag(t, bottom_tag)

axiom root_subtag:
  (forall a:'a1 tag_id.
    (forall b:'a1 tag_id.
      (forall c:'a1 tag_id.
        (root_tag(a) ->
         (root_tag(b) -> ((a <> b) -> (subtag(c, a) -> (not subtag(c, b)))))))))

predicate fully_packed(tag_table: 'a1 tag_table, mutable: ('a1,
  'a1 tag_id) memory, this: 'a1 pointer) = (select(mutable,
  this) = typeof(tag_table, this))

logic bw_compl : int -> int

logic bw_and : int, int -> int

axiom bw_and_not_null:
  (forall a:int.
    (forall b:int. ((bw_and(a, b) <> 0) -> ((a <> 0) and (b <> 0)))))

logic bw_xor : int, int -> int

logic bw_or : int, int -> int

logic lsl : int, int -> int

axiom lsl_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsl(a, b)))))

axiom lsl_left_positive_monotone:
  (forall a1:int.
    (forall a2:int.
      (forall b:int.
        (((0 <= a1) and ((a1 <= a2) and (0 <= b))) -> (lsl(a1, b) <= lsl(a2,
         b))))))

logic lsr : int, int -> int

axiom lsr_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsr(a, b)))))

axiom lsr_left_positive_decreases:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(a, b) <= a))))

logic asr : int, int -> int

axiom asr_positive_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= asr(a, b)))))

axiom asr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) <= a))))

axiom asr_lsr_same_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) = lsr(a, b)))))

axiom lsl_of_lsr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsl(lsr(a, b), b) <= a))))

axiom lsr_of_lsl_identity_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(lsl(a, b), b) = a))))

logic alloc_extends : 'a1 alloc_table, 'a1 alloc_table -> prop

predicate alloc_fresh(a: 'a1 alloc_table, p: 'a1 pointer, n: int) =
  (forall i:int. (((0 <= i) and (i < n)) -> (not valid(a, shift(p, i)))))

axiom alloc_extends_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_min(a1, p) = offset_min(a2, p)))))))

axiom alloc_extends_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_max(a1, p) = offset_max(a2, p)))))))

axiom alloc_extends_not_assigns_empty:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory.
          (forall l:'a1 pset.
            (forall p:'a1 pointer.
              (forall n:int [alloc_extends(a1, a2), alloc_fresh(a1, p, n),
                not_assigns(a2, m1, m2, l)].
                ((alloc_extends(a1, a2) and
                  (alloc_fresh(a1, p, n) and
                   (not_assigns(a2, m1, m2, l) and pset_included(l,
                    pset_all(pset_singleton(p)))))) ->
                 not_assigns(a1, m1, m2, pset_empty)))))))))

logic alloc_extends_except : 'a1 alloc_table, 'a1 alloc_table,
'a1 pset -> prop

axiom alloc_extends_except_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_min(a1,
            p) = offset_min(a2, p))))))))

axiom alloc_extends_except_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_max(a1,
            p) = offset_max(a2, p))))))))

type 'a mybag

logic in_mybag : 'a1, 'a1 mybag -> prop

logic disj_mybag : 'a1 mybag, 'a1 mybag -> prop

axiom disj_sym:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag [disj_mybag(s1, s2)].
      (disj_mybag(s1, s2) -> disj_mybag(s2, s1))))

logic sub_mybag : 'a1 mybag, 'a1 mybag -> prop

axiom sub_refl:
  (forall sa:'a1 pointer mybag [sub_mybag(sa, sa)]. sub_mybag(sa, sa))

axiom sub_disj:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall s3:'a1 mybag [disj_mybag(s1, s2), sub_mybag(s2, s3)|
        disj_mybag(s1, s3), sub_mybag(s2, s3)].
        (disj_mybag(s1, s3) -> (sub_mybag(s2, s3) -> disj_mybag(s1, s2))))))

axiom sub_in:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall p:'a1 [in_mybag(p, s1), sub_mybag(s1, s2)| in_mybag(p, s2),
        sub_mybag(s1, s2)].
        ((not in_mybag(p, s2)) ->
         (sub_mybag(s1, s2) -> (not in_mybag(p, s1)))))))

axiom sub_sub:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall s3:'a1 mybag [sub_mybag(s1, s3), sub_mybag(s2, s3)|
        sub_mybag(s1, s3), sub_mybag(s1, s2)].
        (sub_mybag(s1, s2) -> (sub_mybag(s2, s3) -> sub_mybag(s1, s3))))))

logic frame_between : 'a1 pointer mybag, ('a1, 'a2) memory, ('a1,
'a2) memory -> prop

axiom frame_between_refl:
  (forall sa:'a1 pointer mybag.
    (forall m:('a1, 'a2) memory [frame_between(sa, m, m)]. frame_between(sa,
      m, m)))

axiom frame_between_gen:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall p:'a1 pointer.
          (forall v:'a2 [frame_between(sa, m1, store(m2, p, v))].
            (frame_between(sa, m1, m2) ->
             (in_mybag(p, sa) -> frame_between(sa, store(m1, p, v), m2))))))))

axiom frame_between_gen2:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory [frame_between(sa, m1, m2),
          frame_between(sa, m1, m3)| frame_between(sa, m2, m3),
          frame_between(sa, m1, m3)].
          (frame_between(sa, m1, m2) ->
           (frame_between(sa, m2, m3) -> frame_between(sa, m1, m3)))))))

axiom frame_between_gen_sub1:
  (forall s12:'a1 pointer mybag.
    (forall s23:'a1 pointer mybag.
      (forall s13:'a1 pointer mybag.
        (forall m1:('a1, 'a2) memory.
          (forall m2:('a1, 'a2) memory.
            (forall m3:('a1, 'a2) memory [frame_between(s12, m1, m2),
              frame_between(s13, m1, m3)].
              (sub_mybag(s12, s13) ->
               (frame_between(s12, m1, m2) ->
                (frame_between(s23, m2, m3) -> frame_between(s13, m1, m3))))))))))

axiom frame_between_gen_sub2:
  (forall s12:'a1 pointer mybag.
    (forall s23:'a1 pointer mybag.
      (forall s13:'a1 pointer mybag.
        (forall m1:('a1, 'a2) memory.
          (forall m2:('a1, 'a2) memory.
            (forall m3:('a1, 'a2) memory [frame_between(s23, m2, m3),
              frame_between(s13, m1, m3)].
              (frame_between(s12, m1, m2) ->
               (sub_mybag(s23, s13) ->
                (frame_between(s23, m2, m3) -> frame_between(s13, m1, m3))))))))))

axiom frame_between_pointer:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall p:'a1 pointer.
          (forall v:'a2 [frame_between(sa, m1, m2), select(m1, p)|
            frame_between(sa, m1, m2), select(m2, p)].
            (frame_between(sa, m1, m2) ->
             ((not in_mybag(p, sa)) -> (select(m1, p) = select(m2, p)))))))))

axiom frame_between_sub:
  (forall sa:'a1 pointer mybag.
    (forall sb:'a1 pointer mybag.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory [frame_between(sa, m1, m2),
          sub_mybag(sa, sb)].
          (frame_between(sa, m1, m2) ->
           (sub_mybag(sa, sb) -> frame_between(sb, m1, m2)))))))

type charP

type int16

type int32

type int8

type intP

type padding

type pproc_addr_6

type priv

type proc_0

type proc_5

type proc_ptr_2

type proc_ptr_28

type rdy_tail_8

type struct_proc___xP

type uint32

type uint8

type unsigned_charP

type unsigned_intP

type voidP

logic charP_tag : charP tag_id

axiom charP_int: (int_of_tag(charP_tag) = 1)

logic charP_of_pointer_address : unit pointer -> charP pointer

axiom charP_of_pointer_address_of_pointer_addr:
  (forall p:charP pointer.
    (p = charP_of_pointer_address(pointer_address(p))))

axiom charP_parenttag_bottom: parenttag(charP_tag, bottom_tag)

axiom charP_tags:
  (forall x:charP pointer.
    (forall charP_tag_table:charP tag_table. instanceof(charP_tag_table, x,
      charP_tag)))

logic integer_of_int16 : int16 -> int

predicate eq_int16(x: int16, y: int16) =
  (integer_of_int16(x) = integer_of_int16(y))

logic integer_of_int32 : int32 -> int

predicate eq_int32(x: int32, y: int32) =
  (integer_of_int32(x) = integer_of_int32(y))

logic integer_of_int8 : int8 -> int

predicate eq_int8(x: int8, y: int8) =
  (integer_of_int8(x) = integer_of_int8(y))

logic integer_of_uint32 : uint32 -> int

predicate eq_uint32(x: uint32, y: uint32) =
  (integer_of_uint32(x) = integer_of_uint32(y))

logic integer_of_uint8 : uint8 -> int

predicate eq_uint8(x: uint8, y: uint8) =
  (integer_of_uint8(x) = integer_of_uint8(y))

logic int16_of_integer : int -> int16

axiom int16_coerce:
  (forall x:int.
    ((((-32768) <= x) and (x <= 32767)) ->
     (integer_of_int16(int16_of_integer(x)) = x)))

axiom int16_extensionality:
  (forall x:int16.
    (forall y:int16 [(integer_of_int16(x) = integer_of_int16(y))].
      ((integer_of_int16(x) = integer_of_int16(y)) -> (x = y))))

axiom int16_range:
  (forall x:int16.
    (((-32768) <= integer_of_int16(x)) and (integer_of_int16(x) <= 32767)))

logic int32_of_integer : int -> int32

axiom int32_coerce:
  (forall x:int.
    ((((-2147483648) <= x) and (x <= 2147483647)) ->
     (integer_of_int32(int32_of_integer(x)) = x)))

axiom int32_extensionality:
  (forall x:int32.
    (forall y:int32 [(integer_of_int32(x) = integer_of_int32(y))].
      ((integer_of_int32(x) = integer_of_int32(y)) -> (x = y))))

axiom int32_range:
  (forall x:int32.
    (((-2147483648) <= integer_of_int32(x)) and
     (integer_of_int32(x) <= 2147483647)))

logic int8_of_integer : int -> int8

axiom int8_coerce:
  (forall x:int.
    ((((-128) <= x) and (x <= 127)) ->
     (integer_of_int8(int8_of_integer(x)) = x)))

axiom int8_extensionality:
  (forall x:int8.
    (forall y:int8 [(integer_of_int8(x) = integer_of_int8(y))].
      ((integer_of_int8(x) = integer_of_int8(y)) -> (x = y))))

axiom int8_range:
  (forall x:int8.
    (((-128) <= integer_of_int8(x)) and (integer_of_int8(x) <= 127)))

logic intP_tag : intP tag_id

axiom intP_int: (int_of_tag(intP_tag) = 1)

logic intP_of_pointer_address : unit pointer -> intP pointer

axiom intP_of_pointer_address_of_pointer_addr:
  (forall p:intP pointer. (p = intP_of_pointer_address(pointer_address(p))))

axiom intP_parenttag_bottom: parenttag(intP_tag, bottom_tag)

axiom intP_tags:
  (forall x:intP pointer.
    (forall intP_tag_table:intP tag_table. instanceof(intP_tag_table, x,
      intP_tag)))

predicate left_valid_struct_charP(p: charP pointer, a: int,
  charP_alloc_table: charP alloc_table) = (offset_min(charP_alloc_table,
  p) <= a)

predicate left_valid_struct_intP(p: intP pointer, a: int,
  intP_alloc_table: intP alloc_table) = (offset_min(intP_alloc_table,
  p) <= a)

predicate left_valid_struct_priv(p: priv pointer, a: int,
  priv_alloc_table: priv alloc_table) = (offset_min(priv_alloc_table,
  p) <= a)

predicate left_valid_struct_struct_proc___xP(p: struct_proc___xP pointer,
  a: int, struct_proc___xP_alloc_table: struct_proc___xP alloc_table) =
  (offset_min(struct_proc___xP_alloc_table, p) <= a)

predicate left_valid_struct_proc_0(p: proc_0 pointer, a: int,
  proc_0_alloc_table: proc_0 alloc_table,
  struct_proc___xP_alloc_table: struct_proc___xP alloc_table,
  proc_0_p_nextready: (proc_0, struct_proc___xP pointer) memory) =
  ((offset_min(proc_0_alloc_table, p) <= a) and
   left_valid_struct_struct_proc___xP(select(proc_0_p_nextready, p), 0,
   struct_proc___xP_alloc_table))

predicate left_valid_struct_unsigned_charP(p: unsigned_charP pointer, a: int,
  unsigned_charP_alloc_table: unsigned_charP alloc_table) =
  (offset_min(unsigned_charP_alloc_table, p) <= a)

predicate left_valid_struct_unsigned_intP(p: unsigned_intP pointer, a: int,
  unsigned_intP_alloc_table: unsigned_intP alloc_table) =
  (offset_min(unsigned_intP_alloc_table, p) <= a)

predicate left_valid_struct_voidP(p: voidP pointer, a: int,
  voidP_alloc_table: voidP alloc_table) = (offset_min(voidP_alloc_table,
  p) <= a)

axiom pointer_addr_of_charP_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(charP_of_pointer_address(p))))

axiom pointer_addr_of_intP_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(intP_of_pointer_address(p))))

logic priv_of_pointer_address : unit pointer -> priv pointer

axiom pointer_addr_of_priv_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(priv_of_pointer_address(p))))

logic proc_0_of_pointer_address : unit pointer -> proc_0 pointer

axiom pointer_addr_of_proc_0_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(proc_0_of_pointer_address(p))))

logic struct_proc___xP_of_pointer_address : unit pointer -> struct_proc___xP pointer

axiom pointer_addr_of_struct_proc___xP_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(struct_proc___xP_of_pointer_address(p))))

logic unsigned_charP_of_pointer_address : unit pointer -> unsigned_charP pointer

axiom pointer_addr_of_unsigned_charP_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(unsigned_charP_of_pointer_address(p))))

logic unsigned_intP_of_pointer_address : unit pointer -> unsigned_intP pointer

axiom pointer_addr_of_unsigned_intP_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(unsigned_intP_of_pointer_address(p))))

logic voidP_of_pointer_address : unit pointer -> voidP pointer

axiom pointer_addr_of_voidP_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(voidP_of_pointer_address(p))))

logic pproc_addr : struct_proc___xP pointer

logic prev_ptr : proc_0 pointer

logic priv_tag : priv tag_id

axiom priv_int: (int_of_tag(priv_tag) = 1)

axiom priv_of_pointer_address_of_pointer_addr:
  (forall p:priv pointer. (p = priv_of_pointer_address(pointer_address(p))))

axiom priv_parenttag_bottom: parenttag(priv_tag, bottom_tag)

axiom priv_tags:
  (forall x:priv pointer.
    (forall priv_tag_table:priv tag_table. instanceof(priv_tag_table, x,
      priv_tag)))

logic proc : proc_0 pointer

logic proc_0_tag : proc_0 tag_id

axiom proc_0_int: (int_of_tag(proc_0_tag) = 1)

axiom proc_0_of_pointer_address_of_pointer_addr:
  (forall p:proc_0 pointer.
    (p = proc_0_of_pointer_address(pointer_address(p))))

axiom proc_0_parenttag_bottom: parenttag(proc_0_tag, bottom_tag)

axiom proc_0_tags:
  (forall x:proc_0 pointer.
    (forall proc_0_tag_table:proc_0 tag_table. instanceof(proc_0_tag_table,
      x, proc_0_tag)))

logic proc_ptr : proc_0 pointer

logic rdy_head : struct_proc___xP pointer

logic rdy_tail : struct_proc___xP pointer

predicate right_valid_struct_charP(p: charP pointer, b: int,
  charP_alloc_table: charP alloc_table) = (offset_max(charP_alloc_table,
  p) >= b)

predicate right_valid_struct_intP(p: intP pointer, b: int,
  intP_alloc_table: intP alloc_table) = (offset_max(intP_alloc_table,
  p) >= b)

predicate right_valid_struct_priv(p: priv pointer, b: int,
  priv_alloc_table: priv alloc_table) = (offset_max(priv_alloc_table,
  p) >= b)

predicate right_valid_struct_struct_proc___xP(p: struct_proc___xP pointer,
  b: int, struct_proc___xP_alloc_table: struct_proc___xP alloc_table) =
  (offset_max(struct_proc___xP_alloc_table, p) >= b)

predicate right_valid_struct_proc_0(p: proc_0 pointer, b: int,
  proc_0_alloc_table: proc_0 alloc_table,
  struct_proc___xP_alloc_table: struct_proc___xP alloc_table,
  proc_0_p_nextready: (proc_0, struct_proc___xP pointer) memory) =
  ((offset_max(proc_0_alloc_table, p) >= b) and
   right_valid_struct_struct_proc___xP(select(proc_0_p_nextready, p), 0,
   struct_proc___xP_alloc_table))

predicate right_valid_struct_unsigned_charP(p: unsigned_charP pointer,
  b: int, unsigned_charP_alloc_table: unsigned_charP alloc_table) =
  (offset_max(unsigned_charP_alloc_table, p) >= b)

predicate right_valid_struct_unsigned_intP(p: unsigned_intP pointer, b: int,
  unsigned_intP_alloc_table: unsigned_intP alloc_table) =
  (offset_max(unsigned_intP_alloc_table, p) >= b)

predicate right_valid_struct_voidP(p: voidP pointer, b: int,
  voidP_alloc_table: voidP alloc_table) = (offset_max(voidP_alloc_table,
  p) >= b)

predicate strict_valid_root_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) = a) and (offset_max(charP_alloc_table,
   p) = b))

predicate strict_valid_root_intP(p: intP pointer, a: int, b: int,
  intP_alloc_table: intP alloc_table) =
  ((offset_min(intP_alloc_table, p) = a) and (offset_max(intP_alloc_table,
   p) = b))

predicate strict_valid_root_priv(p: priv pointer, a: int, b: int,
  priv_alloc_table: priv alloc_table) =
  ((offset_min(priv_alloc_table, p) = a) and (offset_max(priv_alloc_table,
   p) = b))

predicate strict_valid_root_proc_0(p: proc_0 pointer, a: int, b: int,
  proc_0_alloc_table: proc_0 alloc_table) =
  ((offset_min(proc_0_alloc_table, p) = a) and
   (offset_max(proc_0_alloc_table, p) = b))

predicate strict_valid_root_struct_proc___xP(p: struct_proc___xP pointer,
  a: int, b: int,
  struct_proc___xP_alloc_table: struct_proc___xP alloc_table) =
  ((offset_min(struct_proc___xP_alloc_table, p) = a) and
   (offset_max(struct_proc___xP_alloc_table, p) = b))

predicate strict_valid_root_unsigned_charP(p: unsigned_charP pointer, a: int,
  b: int, unsigned_charP_alloc_table: unsigned_charP alloc_table) =
  ((offset_min(unsigned_charP_alloc_table, p) = a) and
   (offset_max(unsigned_charP_alloc_table, p) = b))

predicate strict_valid_root_unsigned_intP(p: unsigned_intP pointer, a: int,
  b: int, unsigned_intP_alloc_table: unsigned_intP alloc_table) =
  ((offset_min(unsigned_intP_alloc_table, p) = a) and
   (offset_max(unsigned_intP_alloc_table, p) = b))

predicate strict_valid_root_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) = a) and (offset_max(voidP_alloc_table,
   p) = b))

predicate strict_valid_struct_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) = a) and (offset_max(charP_alloc_table,
   p) = b))

predicate strict_valid_struct_intP(p: intP pointer, a: int, b: int,
  intP_alloc_table: intP alloc_table) =
  ((offset_min(intP_alloc_table, p) = a) and (offset_max(intP_alloc_table,
   p) = b))

predicate strict_valid_struct_priv(p: priv pointer, a: int, b: int,
  priv_alloc_table: priv alloc_table) =
  ((offset_min(priv_alloc_table, p) = a) and (offset_max(priv_alloc_table,
   p) = b))

predicate strict_valid_struct_struct_proc___xP(p: struct_proc___xP pointer,
  a: int, b: int,
  struct_proc___xP_alloc_table: struct_proc___xP alloc_table) =
  ((offset_min(struct_proc___xP_alloc_table, p) = a) and
   (offset_max(struct_proc___xP_alloc_table, p) = b))

predicate strict_valid_struct_proc_0(p: proc_0 pointer, a: int, b: int,
  proc_0_alloc_table: proc_0 alloc_table,
  struct_proc___xP_alloc_table: struct_proc___xP alloc_table,
  proc_0_p_nextready: (proc_0, struct_proc___xP pointer) memory) =
  ((offset_min(proc_0_alloc_table, p) = a) and
   ((offset_max(proc_0_alloc_table, p) = b) and
    strict_valid_struct_struct_proc___xP(select(proc_0_p_nextready, p), 0, 0,
    struct_proc___xP_alloc_table)))

predicate strict_valid_struct_unsigned_charP(p: unsigned_charP pointer,
  a: int, b: int, unsigned_charP_alloc_table: unsigned_charP alloc_table) =
  ((offset_min(unsigned_charP_alloc_table, p) = a) and
   (offset_max(unsigned_charP_alloc_table, p) = b))

predicate strict_valid_struct_unsigned_intP(p: unsigned_intP pointer, a: int,
  b: int, unsigned_intP_alloc_table: unsigned_intP alloc_table) =
  ((offset_min(unsigned_intP_alloc_table, p) = a) and
   (offset_max(unsigned_intP_alloc_table, p) = b))

predicate strict_valid_struct_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) = a) and (offset_max(voidP_alloc_table,
   p) = b))

logic struct_proc___xP_tag : struct_proc___xP tag_id

axiom struct_proc___xP_int: (int_of_tag(struct_proc___xP_tag) = 1)

axiom struct_proc___xP_of_pointer_address_of_pointer_addr:
  (forall p:struct_proc___xP pointer.
    (p = struct_proc___xP_of_pointer_address(pointer_address(p))))

axiom struct_proc___xP_parenttag_bottom: parenttag(struct_proc___xP_tag,
  bottom_tag)

axiom struct_proc___xP_tags:
  (forall x:struct_proc___xP pointer.
    (forall struct_proc___xP_tag_table:struct_proc___xP tag_table.
      instanceof(struct_proc___xP_tag_table, x, struct_proc___xP_tag)))

logic uint32_of_integer : int -> uint32

axiom uint32_coerce:
  (forall x:int.
    (((0 <= x) and (x <= 4294967295)) ->
     (integer_of_uint32(uint32_of_integer(x)) = x)))

axiom uint32_extensionality:
  (forall x:uint32.
    (forall y:uint32 [(integer_of_uint32(x) = integer_of_uint32(y))].
      ((integer_of_uint32(x) = integer_of_uint32(y)) -> (x = y))))

axiom uint32_range:
  (forall x:uint32.
    ((0 <= integer_of_uint32(x)) and (integer_of_uint32(x) <= 4294967295)))

logic uint8_of_integer : int -> uint8

axiom uint8_coerce:
  (forall x:int.
    (((0 <= x) and (x <= 255)) -> (integer_of_uint8(uint8_of_integer(x)) = x)))

axiom uint8_extensionality:
  (forall x:uint8.
    (forall y:uint8 [(integer_of_uint8(x) = integer_of_uint8(y))].
      ((integer_of_uint8(x) = integer_of_uint8(y)) -> (x = y))))

axiom uint8_range:
  (forall x:uint8.
    ((0 <= integer_of_uint8(x)) and (integer_of_uint8(x) <= 255)))

logic unsigned_charP_tag : unsigned_charP tag_id

axiom unsigned_charP_int: (int_of_tag(unsigned_charP_tag) = 1)

axiom unsigned_charP_of_pointer_address_of_pointer_addr:
  (forall p:unsigned_charP pointer.
    (p = unsigned_charP_of_pointer_address(pointer_address(p))))

axiom unsigned_charP_parenttag_bottom: parenttag(unsigned_charP_tag,
  bottom_tag)

axiom unsigned_charP_tags:
  (forall x:unsigned_charP pointer.
    (forall unsigned_charP_tag_table:unsigned_charP tag_table.
      instanceof(unsigned_charP_tag_table, x, unsigned_charP_tag)))

logic unsigned_intP_tag : unsigned_intP tag_id

axiom unsigned_intP_int: (int_of_tag(unsigned_intP_tag) = 1)

axiom unsigned_intP_of_pointer_address_of_pointer_addr:
  (forall p:unsigned_intP pointer.
    (p = unsigned_intP_of_pointer_address(pointer_address(p))))

axiom unsigned_intP_parenttag_bottom: parenttag(unsigned_intP_tag,
  bottom_tag)

axiom unsigned_intP_tags:
  (forall x:unsigned_intP pointer.
    (forall unsigned_intP_tag_table:unsigned_intP tag_table.
      instanceof(unsigned_intP_tag_table, x, unsigned_intP_tag)))

predicate valid_pproc_addr(struct_proc___xP_pproc_addr_6_alloc_table: struct_proc___xP alloc_table) =
  ((offset_min(struct_proc___xP_pproc_addr_6_alloc_table,
   pproc_addr) <= 0) and
   (offset_max(struct_proc___xP_pproc_addr_6_alloc_table, pproc_addr) >= 103))

predicate valid_proc(proc_0_proc_5_alloc_table: proc_0 alloc_table) =
  ((offset_min(proc_0_proc_5_alloc_table, proc) <= 0) and
   (offset_max(proc_0_proc_5_alloc_table, proc) >= 103))

predicate valid_rdy_head(struct_proc___xP_proc_ptr_2_alloc_table: struct_proc___xP alloc_table) =
  ((offset_min(struct_proc___xP_proc_ptr_2_alloc_table, rdy_head) <= 0) and
   (offset_max(struct_proc___xP_proc_ptr_2_alloc_table, rdy_head) >= 15))

predicate valid_rdy_tail(struct_proc___xP_rdy_tail_8_alloc_table: struct_proc___xP alloc_table) =
  ((offset_min(struct_proc___xP_rdy_tail_8_alloc_table, rdy_tail) <= 0) and
   (offset_max(struct_proc___xP_rdy_tail_8_alloc_table, rdy_tail) >= 15))

predicate valid_root_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) <= a) and (offset_max(charP_alloc_table,
   p) >= b))

predicate valid_root_intP(p: intP pointer, a: int, b: int,
  intP_alloc_table: intP alloc_table) =
  ((offset_min(intP_alloc_table, p) <= a) and (offset_max(intP_alloc_table,
   p) >= b))

predicate valid_root_priv(p: priv pointer, a: int, b: int,
  priv_alloc_table: priv alloc_table) =
  ((offset_min(priv_alloc_table, p) <= a) and (offset_max(priv_alloc_table,
   p) >= b))

predicate valid_root_proc_0(p: proc_0 pointer, a: int, b: int,
  proc_0_alloc_table: proc_0 alloc_table) =
  ((offset_min(proc_0_alloc_table, p) <= a) and
   (offset_max(proc_0_alloc_table, p) >= b))

predicate valid_root_struct_proc___xP(p: struct_proc___xP pointer, a: int,
  b: int, struct_proc___xP_alloc_table: struct_proc___xP alloc_table) =
  ((offset_min(struct_proc___xP_alloc_table, p) <= a) and
   (offset_max(struct_proc___xP_alloc_table, p) >= b))

predicate valid_root_unsigned_charP(p: unsigned_charP pointer, a: int,
  b: int, unsigned_charP_alloc_table: unsigned_charP alloc_table) =
  ((offset_min(unsigned_charP_alloc_table, p) <= a) and
   (offset_max(unsigned_charP_alloc_table, p) >= b))

predicate valid_root_unsigned_intP(p: unsigned_intP pointer, a: int, b: int,
  unsigned_intP_alloc_table: unsigned_intP alloc_table) =
  ((offset_min(unsigned_intP_alloc_table, p) <= a) and
   (offset_max(unsigned_intP_alloc_table, p) >= b))

predicate valid_root_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) <= a) and (offset_max(voidP_alloc_table,
   p) >= b))

predicate valid_struct_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) <= a) and (offset_max(charP_alloc_table,
   p) >= b))

predicate valid_struct_intP(p: intP pointer, a: int, b: int,
  intP_alloc_table: intP alloc_table) =
  ((offset_min(intP_alloc_table, p) <= a) and (offset_max(intP_alloc_table,
   p) >= b))

predicate valid_struct_priv(p: priv pointer, a: int, b: int,
  priv_alloc_table: priv alloc_table) =
  ((offset_min(priv_alloc_table, p) <= a) and (offset_max(priv_alloc_table,
   p) >= b))

predicate valid_struct_struct_proc___xP(p: struct_proc___xP pointer, a: int,
  b: int, struct_proc___xP_alloc_table: struct_proc___xP alloc_table) =
  ((offset_min(struct_proc___xP_alloc_table, p) <= a) and
   (offset_max(struct_proc___xP_alloc_table, p) >= b))

predicate valid_struct_proc_0(p: proc_0 pointer, a: int, b: int,
  proc_0_alloc_table: proc_0 alloc_table,
  struct_proc___xP_alloc_table: struct_proc___xP alloc_table,
  proc_0_p_nextready: (proc_0, struct_proc___xP pointer) memory) =
  ((offset_min(proc_0_alloc_table, p) <= a) and
   ((offset_max(proc_0_alloc_table, p) >= b) and
    valid_struct_struct_proc___xP(select(proc_0_p_nextready, p), 0, 0,
    struct_proc___xP_alloc_table)))

predicate valid_struct_unsigned_charP(p: unsigned_charP pointer, a: int,
  b: int, unsigned_charP_alloc_table: unsigned_charP alloc_table) =
  ((offset_min(unsigned_charP_alloc_table, p) <= a) and
   (offset_max(unsigned_charP_alloc_table, p) >= b))

predicate valid_struct_unsigned_intP(p: unsigned_intP pointer, a: int,
  b: int, unsigned_intP_alloc_table: unsigned_intP alloc_table) =
  ((offset_min(unsigned_intP_alloc_table, p) <= a) and
   (offset_max(unsigned_intP_alloc_table, p) >= b))

predicate valid_struct_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) <= a) and (offset_max(voidP_alloc_table,
   p) >= b))

logic voidP_tag : voidP tag_id

axiom voidP_int: (int_of_tag(voidP_tag) = 1)

axiom voidP_of_pointer_address_of_pointer_addr:
  (forall p:voidP pointer.
    (p = voidP_of_pointer_address(pointer_address(p))))

axiom voidP_parenttag_bottom: parenttag(voidP_tag, bottom_tag)

axiom voidP_tags:
  (forall x:voidP pointer.
    (forall voidP_tag_table:voidP tag_table. instanceof(voidP_tag_table, x,
      voidP_tag)))

