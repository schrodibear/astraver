Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -IFRAMAC_SHARE/libc -add-symbolic-path PPCHOME:PPCHOME -jessie -jessie-gen-only assigns_range.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -IFRAMAC_SHARE/libc -dD PPCHOME/tests/jessie/assigns_range.c"
[jessie] Starting Jessie translation
[jessie] Producing Jessie files in subdir assigns_range.jessie
[jessie] File assigns_range.jessie/assigns_range.jc written.
[jessie] File assigns_range.jessie/assigns_range.cloc written.
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type uint8 = 0..255

type int8 = -128..127

type int32 = -2147483648..2147483647

tag unsigned_charP = {
  uint8 unsigned_charM: 8;
}

type unsigned_charP = [unsigned_charP]

tag intP = {
  int32 intM: 32;
}

type intP = [intP]

tag charP = {
  int8 charM: 8;
}

type charP = [charP]

tag voidP = {
}

type voidP = [voidP]

tag __anonstruct_S_1 = {
  intP[..] rc: 32;
}

type __anonstruct_S_1 = [__anonstruct_S_1]

intP[0..9] t;

invariant valid_t :
((\offset_min(t) <= 0) && (\offset_max(t) >= 9))

int32 f()
behavior default:
  assigns (t + [0..3]).intM;
  ensures (C_13 : true);
{  
   (var int32 __retres);
   
   {  
      {  (C_2 : ((C_1 : (t + 3).intM) = 0));
         (C_5 : ((C_4 : (t + 2).intM) = (C_3 : (t + 3).intM)));
         (C_8 : ((C_7 : (t + 1).intM) = (C_6 : (t + 2).intM)));
         (C_11 : ((C_10 : (t + 0).intM) = (C_9 : (t + 1).intM)))
      };
      (C_12 : (__retres = 0));
      
      (return __retres)
   }
}

int32 g()
behavior default:
  assigns (t + \at(\result,Here)).intM;
  ensures (C_17 : true);
{  
   (var int32 __retres_0);
   
   {  (C_15 : ((C_14 : (t + 2).intM) = 9));
      (C_16 : (__retres_0 = 2));
      
      (return __retres_0)
   }
}

int32 f1(intP[..] p, intP[..] q)
  requires (C_23 : (((C_25 : (\offset_min(p) <= 0)) &&
                      (C_26 : (\offset_max(p) >= 0))) &&
                     ((C_28 : (\offset_min(q) <= 0)) &&
                       (C_29 : (\offset_max(q) >= 0)))));
behavior default:
  assigns q.intM;
  ensures (C_22 : true);
{  
   (var int32 __retres_1);
   
   {  (C_18 : (p = q));
      (C_20 : ((C_19 : p.intM) = 1));
      (C_21 : (__retres_1 = 1));
      
      (return __retres_1)
   }
}

int32 f2(__anonstruct_S_1[..] p_0, intP[..] r)
  requires (C_37 : ((((C_40 : (\offset_min(p_0) <= 0)) &&
                       (C_41 : (\offset_max(p_0) >= 0))) &&
                      ((C_43 : (\offset_min(p_0.rc) <= 0)) &&
                        (C_44 : (\offset_max(p_0.rc) >= 0)))) &&
                     ((C_46 : (\offset_min(r) <= 0)) &&
                       (C_47 : (\offset_max(r) >= 0)))));
behavior default:
  assigns \at(\at(p_0,Old).rc,Here).intM,
  p_0.rc;
  ensures (C_36 : true);
{  
   (var int32 __retres_2);
   
   {  (C_31 : ((C_30 : p_0.rc) = r));
      (C_34 : ((C_33 : (C_32 : p_0.rc).intM) = 55));
      (C_35 : (__retres_2 = 1));
      
      (return __retres_2)
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs assigns_range.jessie/assigns_range.cloc assigns_range.jessie/assigns_range.jc
