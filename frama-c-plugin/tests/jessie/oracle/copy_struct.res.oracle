Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -jessie -jessie-gen-only copy_struct.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -dD copy_struct.c"
[jessie] Starting Jessie translation
[jessie] Producing Jessie files in subdir copy_struct.jessie
[jessie] File copy_struct.jessie/copy_struct.jc written.
[jessie] File copy_struct.jessie/copy_struct.cloc written.
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type int8 = -128..127

type int32 = -2147483648..2147483647

tag char_P = {
  int8 char_M: 8;
}

type char_P = [char_P]

tag void_P = {
}

type void_P = [void_P]

tag S = {
  int32 i: 32; 
  int32 j: 32;
}

type S = [S]

tag T = {
  S[0] a: 64; 
  S[0] b: 64;
}

type T = [T]

unit f(T[..] p_0, T[..] q)
  requires (C_21 : (((C_23 : (\offset_min(p_0) <= 0)) &&
                      (C_24 : (\offset_max(p_0) >= 0))) &&
                     ((C_26 : (\offset_min(q) <= 0)) &&
                       (C_27 : (\offset_max(q) >= 0)))));
behavior default:
  ensures (C_28 : (((C_30 : (p_0.a.i == q.a.i)) &&
                     (C_31 : (p_0.a.j == q.a.j))) &&
                    ((C_33 : (p_0.b.i == q.b.i)) &&
                      (C_34 : (p_0.b.j == q.b.j)))));
{  
   {  
      {  (C_5 : ((C_4 : (C_3 : q.a).i) = (C_2 : (C_1 : p_0.a).i)));
         (C_10 : ((C_9 : (C_8 : q.a).j) = (C_7 : (C_6 : p_0.a).j)));
         (C_15 : ((C_14 : (C_13 : q.b).i) = (C_12 : (C_11 : p_0.b).i)));
         (C_20 : ((C_19 : (C_18 : q.b).j) = (C_17 : (C_16 : p_0.b).j)))
      };
      
      (return ())
   }
}

T[0] id(T[0] v_p_2)
behavior default:
  ensures (C_80 : (((C_82 : (\result.a.i == v_p_2.a.i)) &&
                     (C_83 : (\result.a.j == v_p_2.a.j))) &&
                    ((C_85 : (\result.b.i == v_p_2.b.i)) &&
                      (C_86 : (\result.b.j == v_p_2.b.j)))));
{  
   (var T[0] p_2);
   
   (var T[0] __cil_tmp);
   
   {  (C_36 : (p_2 = (C_35 : (new T[1]))));
      (C_38 : (__cil_tmp = (C_37 : (new T[1]))));
      
      {  (C_43 : ((C_42 : (C_41 : p_2.a).i) = (C_40 : (C_39 : v_p_2.a).i)));
         (C_48 : ((C_47 : (C_46 : p_2.a).j) = (C_45 : (C_44 : v_p_2.a).j)));
         (C_53 : ((C_52 : (C_51 : p_2.b).i) = (C_50 : (C_49 : v_p_2.b).i)));
         (C_58 : ((C_57 : (C_56 : p_2.b).j) = (C_55 : (C_54 : v_p_2.b).j)))
      };
      
      {  (C_63 : ((C_62 : (C_61 : __cil_tmp.a).i) = (C_60 : (C_59 : p_2.a).i)));
         (C_68 : ((C_67 : (C_66 : __cil_tmp.a).j) = (C_65 : (C_64 : p_2.a).j)));
         (C_73 : ((C_72 : (C_71 : __cil_tmp.b).i) = (C_70 : (C_69 : p_2.b).i)));
         (C_78 : ((C_77 : (C_76 : __cil_tmp.b).j) = (C_75 : (C_74 : p_2.b).j)));
         
         {  (C_79 : (free(p_2)));
            
            (return __cil_tmp)
         }
      }
   }
}

T[0] idp(T[..] p)
  requires (C_132 : ((C_133 : (\offset_min(p) <= 0)) &&
                      (C_134 : (\offset_max(p) >= 0))));
behavior default:
  ensures (C_135 : (((C_137 : (\result.a.i == p.a.i)) &&
                      (C_138 : (\result.a.j == p.a.j))) &&
                     ((C_140 : (\result.b.i == p.b.i)) &&
                       (C_141 : (\result.b.j == p.b.j)))));
{  
   (var T[0] __retres);
   
   (var T[0] __cil_tmp);
   
   {  (C_88 : (__retres = (C_87 : (new T[1]))));
      (C_90 : (__cil_tmp = (C_89 : (new T[1]))));
      
      {  (C_95 : ((C_94 : (C_93 : __retres.a).i) = (C_92 : (C_91 : p.a).i)));
         (C_100 : ((C_99 : (C_98 : __retres.a).j) = (C_97 : (C_96 : p.a).j)));
         (C_105 : ((C_104 : (C_103 : __retres.b).i) = (C_102 : (C_101 : p.b).i)));
         (C_110 : ((C_109 : (C_108 : __retres.b).j) = (C_107 : (C_106 : p.b).j)))
      };
      
      {  (C_115 : ((C_114 : (C_113 : __cil_tmp.a).i) = (C_112 : (C_111 : __retres.a).i)));
         (C_120 : ((C_119 : (C_118 : __cil_tmp.a).j) = (C_117 : (C_116 : __retres.a).j)));
         (C_125 : ((C_124 : (C_123 : __cil_tmp.b).i) = (C_122 : (C_121 : __retres.b).i)));
         (C_130 : ((C_129 : (C_128 : __cil_tmp.b).j) = (C_127 : (C_126 : __retres.b).j)));
         
         {  (C_131 : (free(__retres)));
            
            (return __cil_tmp)
         }
      }
   }
}

unit g(T[..] p_1)
  requires (C_209 : ((C_210 : (\offset_min(p_1) <= 0)) &&
                      (C_211 : (\offset_max(p_1) >= 0))));
behavior default:
  ensures (C_212 : true);
{  
   (var T[0] copy);
   
   (var T[0] copy2);
   
   (var T[0] __cil_tmp);
   
   (var T[0] __cil_tmp_8);
   
   {  (C_143 : (copy = (C_142 : (new T[1]))));
      (C_145 : (copy2 = (C_144 : (new T[1]))));
      
      {  (C_147 : (__cil_tmp = (C_146 : id(p_1))));
         
         {  (C_152 : ((C_151 : (C_150 : copy.a).i) = (C_149 : (C_148 : __cil_tmp.a).i)));
            (C_157 : ((C_156 : (C_155 : copy.a).j) = (C_154 : (C_153 : __cil_tmp.a).j)));
            (C_162 : ((C_161 : (C_160 : copy.b).i) = (C_159 : (C_158 : __cil_tmp.b).i)));
            (C_167 : ((C_166 : (C_165 : copy.b).j) = (C_164 : (C_163 : __cil_tmp.b).j)))
         };
         (C_168 : (free(__cil_tmp)))
      };
      
      {  (C_170 : (__cil_tmp_8 = (C_169 : idp(p_1))));
         
         {  (C_175 : ((C_174 : (C_173 : copy2.a).i) = (C_172 : (C_171 : __cil_tmp_8.a).i)));
            (C_180 : ((C_179 : (C_178 : copy2.a).j) = (C_177 : (C_176 : __cil_tmp_8.a).j)));
            (C_185 : ((C_184 : (C_183 : copy2.b).i) = (C_182 : (C_181 : __cil_tmp_8.b).i)));
            (C_190 : ((C_189 : (C_188 : copy2.b).j) = (C_187 : (C_186 : __cil_tmp_8.b).j)))
         };
         (C_191 : (free(__cil_tmp_8)))
      };
      (C_194 : ((C_193 : (C_192 : copy2.a).i) = 0));
      
      {  
         (assert for default: (C_195 : (p_1.a.i == copy.a.i)));
         ()
      };
      (C_198 : ((C_197 : (C_196 : copy.a).j) = 1));
      
      {  
         (assert for default: (C_199 : (p_1.a.j == copy2.a.j)));
         ()
      };
      (C_202 : ((C_201 : (C_200 : p_1.b).i) = 0));
      
      {  
         (assert for default: (C_203 : (copy.b.i == copy2.b.i)));
         ()
      };
      
      {  
         (assert for default: (C_204 : ((C_205 : (p_1.b.j == copy.b.j)) &&
                                         (C_206 : (copy.b.j == copy2.b.j)))));
         ()
      };
      
      {  (C_207 : (free(copy)));
         (C_208 : (free(copy2)));
         
         (return ())
      }
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs copy_struct.jessie/copy_struct.cloc copy_struct.jessie/copy_struct.jc
type S

type T

type char_P

type int32

type int8

type padding

type void_P

exception Loop_continue_exc of unit

exception Loop_exit_exc of unit

exception Return_label_exc of unit

logic S_tag:  -> S tag_id

axiom S_int : (int_of_tag(S_tag) = (1))

logic S_of_bitvector: bitvector -> S pointer

logic bitvector_of_S: S pointer -> bitvector

axiom S_of_bitvector_of_bitvector_of_S :
 (forall x:S pointer. (S_of_bitvector(bitvector_of_S(x)) = x))

logic S_of_pointer_address: unit pointer -> S pointer

axiom S_of_pointer_address_of_pointer_addr :
 (forall p:S pointer. (p = S_of_pointer_address(pointer_address(p))))

axiom S_parenttag_bottom : parenttag(S_tag, bottom_tag)

axiom S_tags :
 (forall x:S pointer.
  (forall S_tag_table:S tag_table. instanceof(S_tag_table, x, S_tag)))

logic T_tag:  -> T tag_id

axiom T_int : (int_of_tag(T_tag) = (1))

logic T_of_bitvector: bitvector -> T pointer

logic bitvector_of_T: T pointer -> bitvector

axiom T_of_bitvector_of_bitvector_of_T :
 (forall x:T pointer. (T_of_bitvector(bitvector_of_T(x)) = x))

logic T_of_pointer_address: unit pointer -> T pointer

axiom T_of_pointer_address_of_pointer_addr :
 (forall p:T pointer. (p = T_of_pointer_address(pointer_address(p))))

axiom T_parenttag_bottom : parenttag(T_tag, bottom_tag)

axiom T_tags :
 (forall x:T pointer.
  (forall T_tag_table:T tag_table. instanceof(T_tag_table, x, T_tag)))

axiom bitvector_of_S_of_S_of_bitvector :
 (forall x:bitvector. (bitvector_of_S(S_of_bitvector(x)) = x))

axiom bitvector_of_T_of_T_of_bitvector :
 (forall x:bitvector. (bitvector_of_T(T_of_bitvector(x)) = x))

logic bitvector_of_char_P: char_P pointer -> bitvector

logic char_P_of_bitvector: bitvector -> char_P pointer

axiom bitvector_of_char_P_of_char_P_of_bitvector :
 (forall x:bitvector. (bitvector_of_char_P(char_P_of_bitvector(x)) = x))

logic bitvector_of_int32: int32 -> bitvector

logic int32_of_bitvector: bitvector -> int32

axiom bitvector_of_int32_of_int32_of_bitvector :
 (forall x:bitvector. (bitvector_of_int32(int32_of_bitvector(x)) = x))

logic bitvector_of_int8: int8 -> bitvector

logic int8_of_bitvector: bitvector -> int8

axiom bitvector_of_int8_of_int8_of_bitvector :
 (forall x:bitvector. (bitvector_of_int8(int8_of_bitvector(x)) = x))

logic bitvector_of_void_P: void_P pointer -> bitvector

logic void_P_of_bitvector: bitvector -> void_P pointer

axiom bitvector_of_void_P_of_void_P_of_bitvector :
 (forall x:bitvector. (bitvector_of_void_P(void_P_of_bitvector(x)) = x))

logic char_P_tag:  -> char_P tag_id

axiom char_P_int : (int_of_tag(char_P_tag) = (1))

axiom char_P_of_bitvector_of_bitvector_of_char_P :
 (forall x:char_P pointer. (char_P_of_bitvector(bitvector_of_char_P(x)) = x))

logic char_P_of_pointer_address: unit pointer -> char_P pointer

axiom char_P_of_pointer_address_of_pointer_addr :
 (forall p:char_P pointer.
  (p = char_P_of_pointer_address(pointer_address(p))))

axiom char_P_parenttag_bottom : parenttag(char_P_tag, bottom_tag)

axiom char_P_tags :
 (forall x:char_P pointer.
  (forall char_P_tag_table:char_P tag_table.
   instanceof(char_P_tag_table, x, char_P_tag)))

logic integer_of_int32: int32 -> int

predicate eq_int32(x:int32,
 y:int32) =
 eq_int(integer_of_int32(x), integer_of_int32(y))

logic integer_of_int8: int8 -> int

predicate eq_int8(x:int8,
 y:int8) =
 eq_int(integer_of_int8(x), integer_of_int8(y))

logic int32_of_integer: int -> int32

axiom int32_coerce :
 (forall x:int.
  ((le_int((-2147483648), x) and le_int(x, (2147483647))) ->
   eq_int(integer_of_int32(int32_of_integer(x)), x)))

axiom int32_of_bitvector_of_bitvector_of_int32 :
 (forall x:int32. eq_int32(int32_of_bitvector(bitvector_of_int32(x)), x))

axiom int32_range :
 (forall x:int32.
  (le_int((-2147483648), integer_of_int32(x))
  and le_int(integer_of_int32(x), (2147483647))))

logic int8_of_integer: int -> int8

axiom int8_coerce :
 (forall x:int.
  ((le_int((-128), x) and le_int(x, (127))) ->
   eq_int(integer_of_int8(int8_of_integer(x)), x)))

axiom int8_of_bitvector_of_bitvector_of_int8 :
 (forall x:int8. eq_int8(int8_of_bitvector(bitvector_of_int8(x)), x))

axiom int8_range :
 (forall x:int8.
  (le_int((-128), integer_of_int8(x)) and le_int(integer_of_int8(x), (127))))

predicate left_valid_struct_S(p:S pointer,
 a:int,
 S_alloc_table:S alloc_table) =
 (offset_min(S_alloc_table, p) <= a)

predicate left_valid_struct_T(p:T pointer,
 a:int,
 S_alloc_table:S alloc_table,
 T_alloc_table:T alloc_table,
 T_a:(T, S pointer) memory,
 T_b:(T, S pointer) memory) =
 ((offset_min(T_alloc_table, p) <= a)
 and (left_valid_struct_S(select(T_a, p), (0), S_alloc_table)
     and left_valid_struct_S(select(T_b, p), (0), S_alloc_table)))

predicate left_valid_struct_char_P(p:char_P pointer,
 a:int,
 char_P_alloc_table:char_P alloc_table) =
 (offset_min(char_P_alloc_table, p) <= a)

predicate left_valid_struct_void_P(p:void_P pointer,
 a:int,
 void_P_alloc_table:void_P alloc_table) =
 (offset_min(void_P_alloc_table, p) <= a)

axiom pointer_addr_of_S_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(S_of_pointer_address(p))))

axiom pointer_addr_of_T_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(T_of_pointer_address(p))))

axiom pointer_addr_of_char_P_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(char_P_of_pointer_address(p))))

logic void_P_of_pointer_address: unit pointer -> void_P pointer

axiom pointer_addr_of_void_P_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(void_P_of_pointer_address(p))))

predicate right_valid_struct_S(p:S pointer,
 b:int,
 S_alloc_table:S alloc_table) =
 (offset_max(S_alloc_table, p) >= b)

predicate right_valid_struct_T(p:T pointer,
 b:int,
 S_alloc_table:S alloc_table,
 T_alloc_table:T alloc_table,
 T_a:(T, S pointer) memory,
 T_b:(T, S pointer) memory) =
 ((offset_max(T_alloc_table, p) >= b)
 and (right_valid_struct_S(select(T_a, p), (0), S_alloc_table)
     and right_valid_struct_S(select(T_b, p), (0), S_alloc_table)))

predicate right_valid_struct_char_P(p:char_P pointer,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 (offset_max(char_P_alloc_table, p) >= b)

predicate right_valid_struct_void_P(p:void_P pointer,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 (offset_max(void_P_alloc_table, p) >= b)

predicate strict_valid_root_S(p:S pointer,
 a:int,
 b:int,
 S_alloc_table:S alloc_table) =
 ((offset_min(S_alloc_table, p) = a) and (offset_max(S_alloc_table, p) = b))

predicate strict_valid_root_T(p:T pointer,
 a:int,
 b:int,
 T_alloc_table:T alloc_table) =
 ((offset_min(T_alloc_table, p) = a) and (offset_max(T_alloc_table, p) = b))

predicate strict_valid_root_char_P(p:char_P pointer,
 a:int,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) = a)
 and (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_root_void_P(p:void_P pointer,
 a:int,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) = a)
 and (offset_max(void_P_alloc_table, p) = b))

predicate strict_valid_struct_S(p:S pointer,
 a:int,
 b:int,
 S_alloc_table:S alloc_table) =
 ((offset_min(S_alloc_table, p) = a) and (offset_max(S_alloc_table, p) = b))

predicate strict_valid_struct_T(p:T pointer,
 a:int,
 b:int,
 S_alloc_table:S alloc_table,
 T_alloc_table:T alloc_table,
 T_a:(T, S pointer) memory,
 T_b:(T, S pointer) memory) =
 ((offset_min(T_alloc_table, p) = a)
 and ((offset_max(T_alloc_table, p) = b)
     and (strict_valid_struct_S(select(T_a, p), (0), (0), S_alloc_table)
         and strict_valid_struct_S(select(T_b, p), (0), (0), S_alloc_table))))

predicate strict_valid_struct_char_P(p:char_P pointer,
 a:int,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) = a)
 and (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_struct_void_P(p:void_P pointer,
 a:int,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) = a)
 and (offset_max(void_P_alloc_table, p) = b))

predicate valid_bitvector_struct_S(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_T(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_char_P(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_void_P(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_root_S(p:S pointer,
 a:int,
 b:int,
 S_alloc_table:S alloc_table) =
 ((offset_min(S_alloc_table, p) <= a)
 and (offset_max(S_alloc_table, p) >= b))

predicate valid_root_T(p:T pointer,
 a:int,
 b:int,
 T_alloc_table:T alloc_table) =
 ((offset_min(T_alloc_table, p) <= a)
 and (offset_max(T_alloc_table, p) >= b))

predicate valid_root_char_P(p:char_P pointer,
 a:int,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) <= a)
 and (offset_max(char_P_alloc_table, p) >= b))

predicate valid_root_void_P(p:void_P pointer,
 a:int,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) <= a)
 and (offset_max(void_P_alloc_table, p) >= b))

predicate valid_struct_S(p:S pointer,
 a:int,
 b:int,
 S_alloc_table:S alloc_table) =
 ((offset_min(S_alloc_table, p) <= a)
 and (offset_max(S_alloc_table, p) >= b))

predicate valid_struct_T(p:T pointer,
 a:int,
 b:int,
 S_alloc_table:S alloc_table,
 T_alloc_table:T alloc_table,
 T_a:(T, S pointer) memory,
 T_b:(T, S pointer) memory) =
 ((offset_min(T_alloc_table, p) <= a)
 and ((offset_max(T_alloc_table, p) >= b)
     and (valid_struct_S(select(T_a, p), (0), (0), S_alloc_table)
         and valid_struct_S(select(T_b, p), (0), (0), S_alloc_table))))

predicate valid_struct_char_P(p:char_P pointer,
 a:int,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) <= a)
 and (offset_max(char_P_alloc_table, p) >= b))

predicate valid_struct_void_P(p:void_P pointer,
 a:int,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) <= a)
 and (offset_max(void_P_alloc_table, p) >= b))

logic void_P_tag:  -> void_P tag_id

axiom void_P_int : (int_of_tag(void_P_tag) = (1))

axiom void_P_of_bitvector_of_bitvector_of_void_P :
 (forall x:void_P pointer. (void_P_of_bitvector(bitvector_of_void_P(x)) = x))

axiom void_P_of_pointer_address_of_pointer_addr :
 (forall p:void_P pointer.
  (p = void_P_of_pointer_address(pointer_address(p))))

axiom void_P_parenttag_bottom : parenttag(void_P_tag, bottom_tag)

axiom void_P_tags :
 (forall x:void_P pointer.
  (forall void_P_tag_table:void_P tag_table.
   instanceof(void_P_tag_table, x, void_P_tag)))

parameter S_alloc_table : S alloc_table ref

parameter S_tag_table : S tag_table ref

parameter T_alloc_table : T alloc_table ref

parameter T_tag_table : T tag_table ref

parameter alloc_bitvector_struct_S :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_S(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_S_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_S(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_T :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_T(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_T_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_T(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_char_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_char_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_char_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_char_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_void_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_void_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_void_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_void_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_struct_S :
 n:int ->
  S_alloc_table:S alloc_table ref ->
   S_tag_table:S tag_table ref ->
    { } S pointer writes S_alloc_table,S_tag_table
    { (strict_valid_struct_S(result, (0), sub_int(n, (1)), S_alloc_table)
      and (alloc_extends(S_alloc_table@, S_alloc_table)
          and (alloc_fresh(S_alloc_table@, result, n)
              and instanceof(S_tag_table, result, S_tag)))) }

parameter alloc_struct_S_requires :
 n:int ->
  S_alloc_table:S alloc_table ref ->
   S_tag_table:S tag_table ref ->
    { ge_int(n, (0))} S pointer writes S_alloc_table,S_tag_table
    { (strict_valid_struct_S(result, (0), sub_int(n, (1)), S_alloc_table)
      and (alloc_extends(S_alloc_table@, S_alloc_table)
          and (alloc_fresh(S_alloc_table@, result, n)
              and instanceof(S_tag_table, result, S_tag)))) }

parameter alloc_struct_T :
 n:int ->
  S_alloc_table:S alloc_table ref ->
   T_alloc_table:T alloc_table ref ->
    T_tag_table:T tag_table ref ->
     T_a:(T, S pointer) memory ->
      T_b:(T, S pointer) memory ->
       { } T pointer writes S_alloc_table,T_alloc_table,T_tag_table
       { (strict_valid_struct_T(result, (0), sub_int(n, (1)), S_alloc_table,
          T_alloc_table, T_a, T_b)
         and (alloc_extends(T_alloc_table@, T_alloc_table)
             and (alloc_fresh(T_alloc_table@, result, n)
                 and instanceof(T_tag_table, result, T_tag)))) }

parameter alloc_struct_T_requires :
 n:int ->
  S_alloc_table:S alloc_table ref ->
   T_alloc_table:T alloc_table ref ->
    T_tag_table:T tag_table ref ->
     T_a:(T, S pointer) memory ->
      T_b:(T, S pointer) memory ->
       { ge_int(n, (0))} T pointer
       writes S_alloc_table,T_alloc_table,T_tag_table
       { (strict_valid_struct_T(result, (0), sub_int(n, (1)), S_alloc_table,
          T_alloc_table, T_a, T_b)
         and (alloc_extends(T_alloc_table@, T_alloc_table)
             and (alloc_fresh(T_alloc_table@, result, n)
                 and instanceof(T_tag_table, result, T_tag)))) }

parameter char_P_alloc_table : char_P alloc_table ref

parameter char_P_tag_table : char_P tag_table ref

parameter alloc_struct_char_P :
 n:int ->
  char_P_alloc_table:char_P alloc_table ref ->
   char_P_tag_table:char_P tag_table ref ->
    { } char_P pointer writes char_P_alloc_table,char_P_tag_table
    { (strict_valid_struct_char_P(result, (0), sub_int(n, (1)),
       char_P_alloc_table)
      and (alloc_extends(char_P_alloc_table@, char_P_alloc_table)
          and (alloc_fresh(char_P_alloc_table@, result, n)
              and instanceof(char_P_tag_table, result, char_P_tag)))) }

parameter alloc_struct_char_P_requires :
 n:int ->
  char_P_alloc_table:char_P alloc_table ref ->
   char_P_tag_table:char_P tag_table ref ->
    { ge_int(n, (0))} char_P pointer
    writes char_P_alloc_table,char_P_tag_table
    { (strict_valid_struct_char_P(result, (0), sub_int(n, (1)),
       char_P_alloc_table)
      and (alloc_extends(char_P_alloc_table@, char_P_alloc_table)
          and (alloc_fresh(char_P_alloc_table@, result, n)
              and instanceof(char_P_tag_table, result, char_P_tag)))) }

parameter void_P_alloc_table : void_P alloc_table ref

parameter void_P_tag_table : void_P tag_table ref

parameter alloc_struct_void_P :
 n:int ->
  void_P_alloc_table:void_P alloc_table ref ->
   void_P_tag_table:void_P tag_table ref ->
    { } void_P pointer writes void_P_alloc_table,void_P_tag_table
    { (strict_valid_struct_void_P(result, (0), sub_int(n, (1)),
       void_P_alloc_table)
      and (alloc_extends(void_P_alloc_table@, void_P_alloc_table)
          and (alloc_fresh(void_P_alloc_table@, result, n)
              and instanceof(void_P_tag_table, result, void_P_tag)))) }

parameter alloc_struct_void_P_requires :
 n:int ->
  void_P_alloc_table:void_P alloc_table ref ->
   void_P_tag_table:void_P tag_table ref ->
    { ge_int(n, (0))} void_P pointer
    writes void_P_alloc_table,void_P_tag_table
    { (strict_valid_struct_void_P(result, (0), sub_int(n, (1)),
       void_P_alloc_table)
      and (alloc_extends(void_P_alloc_table@, void_P_alloc_table)
          and (alloc_fresh(void_P_alloc_table@, result, n)
              and instanceof(void_P_tag_table, result, void_P_tag)))) }

parameter any_int32 : unit -> { } int32 { true }

parameter any_int8 : unit -> { } int8 { true }

parameter f :
 p_0:T pointer ->
  q:T pointer ->
   S_j_q_2:(S, int32) memory ref ->
    S_i_q_2:(S, int32) memory ref ->
     T_q_2_alloc_table:T alloc_table ->
      T_p_0_1_alloc_table:T alloc_table ->
       S_q_2_alloc_table:S alloc_table ->
        S_p_0_1_alloc_table:S alloc_table ->
         T_b_q_2:(T, S pointer) memory ->
          T_b_p_0_1:(T, S pointer) memory ->
           T_a_q_2:(T, S pointer) memory ->
            T_a_p_0_1:(T, S pointer) memory ->
             S_j_p_0_1:(S, int32) memory ->
              S_i_p_0_1:(S, int32) memory ->
               { } unit reads S_i_q_2,S_j_q_2 writes S_i_q_2,S_j_q_2
               { (JC_22:
                 ((JC_18:
                  eq_int(integer_of_int32(select(S_i_p_0_1,
                                          select(T_a_p_0_1, p_0))),
                  integer_of_int32(select(S_i_q_2, select(T_a_q_2, q)))))
                 and ((JC_19:
                      eq_int(integer_of_int32(select(S_j_p_0_1,
                                              select(T_a_p_0_1, p_0))),
                      integer_of_int32(select(S_j_q_2, select(T_a_q_2, q)))))
                     and ((JC_20:
                          eq_int(integer_of_int32(select(S_i_p_0_1,
                                                  select(T_b_p_0_1, p_0))),
                          integer_of_int32(select(S_i_q_2,
                                           select(T_b_q_2, q)))))
                         and (JC_21:
                             eq_int(integer_of_int32(select(S_j_p_0_1,
                                                     select(T_b_p_0_1, p_0))),
                             integer_of_int32(select(S_j_q_2,
                                              select(T_b_q_2, q))))))))) }

parameter f_requires :
 p_0:T pointer ->
  q:T pointer ->
   S_j_q_2:(S, int32) memory ref ->
    S_i_q_2:(S, int32) memory ref ->
     T_q_2_alloc_table:T alloc_table ->
      T_p_0_1_alloc_table:T alloc_table ->
       S_q_2_alloc_table:S alloc_table ->
        S_p_0_1_alloc_table:S alloc_table ->
         T_b_q_2:(T, S pointer) memory ->
          T_b_p_0_1:(T, S pointer) memory ->
           T_a_q_2:(T, S pointer) memory ->
            T_a_p_0_1:(T, S pointer) memory ->
             S_j_p_0_1:(S, int32) memory ->
              S_i_p_0_1:(S, int32) memory ->
               { (JC_5:
                 ((JC_1: le_int(offset_min(T_p_0_1_alloc_table, p_0), (0)))
                 and ((JC_2:
                      ge_int(offset_max(T_p_0_1_alloc_table, p_0), (0)))
                     and ((JC_3:
                          le_int(offset_min(T_q_2_alloc_table, q), (0)))
                         and (JC_4:
                             ge_int(offset_max(T_q_2_alloc_table, q), (0)))))))}
               unit reads S_i_q_2,S_j_q_2 writes S_i_q_2,S_j_q_2
               { (JC_22:
                 ((JC_18:
                  eq_int(integer_of_int32(select(S_i_p_0_1,
                                          select(T_a_p_0_1, p_0))),
                  integer_of_int32(select(S_i_q_2, select(T_a_q_2, q)))))
                 and ((JC_19:
                      eq_int(integer_of_int32(select(S_j_p_0_1,
                                              select(T_a_p_0_1, p_0))),
                      integer_of_int32(select(S_j_q_2, select(T_a_q_2, q)))))
                     and ((JC_20:
                          eq_int(integer_of_int32(select(S_i_p_0_1,
                                                  select(T_b_p_0_1, p_0))),
                          integer_of_int32(select(S_i_q_2,
                                           select(T_b_q_2, q)))))
                         and (JC_21:
                             eq_int(integer_of_int32(select(S_j_p_0_1,
                                                     select(T_b_p_0_1, p_0))),
                             integer_of_int32(select(S_j_q_2,
                                              select(T_b_q_2, q))))))))) }

parameter g :
 p_1:T pointer ->
  S_i_p_1_9:(S, int32) memory ref ->
   T_p_1_9_alloc_table:T alloc_table ->
    S_p_1_9_alloc_table:S alloc_table ->
     T_b_p_1_9:(T, S pointer) memory ->
      T_a_p_1_9:(T, S pointer) memory ->
       S_j_p_1_9:(S, int32) memory ->
        { } unit reads S_i_p_1_9 writes S_i_p_1_9 { true }

parameter g_requires :
 p_1:T pointer ->
  S_i_p_1_9:(S, int32) memory ref ->
   T_p_1_9_alloc_table:T alloc_table ->
    S_p_1_9_alloc_table:S alloc_table ->
     T_b_p_1_9:(T, S pointer) memory ->
      T_a_p_1_9:(T, S pointer) memory ->
       S_j_p_1_9:(S, int32) memory ->
        { (JC_91:
          ((JC_89: le_int(offset_min(T_p_1_9_alloc_table, p_1), (0)))
          and (JC_90: ge_int(offset_max(T_p_1_9_alloc_table, p_1), (0)))))}
        unit reads S_i_p_1_9 writes S_i_p_1_9 { true }

parameter id :
 v_p_2:T pointer ->
  T_result_4_alloc_table:T alloc_table ref ->
   S_result_4_alloc_table:S alloc_table ref ->
    T_result_4_tag_table:T tag_table ref ->
     S_result_4_tag_table:S tag_table ref ->
      T_b_result_4:(T, S pointer) memory ref ->
       T_a_result_4:(T, S pointer) memory ref ->
        S_j_result_4:(S, int32) memory ref ->
         S_i_result_4:(S, int32) memory ref ->
          T_v_p_2_3_alloc_table:T alloc_table ->
           S_v_p_2_3_alloc_table:S alloc_table ->
            T_b_v_p_2_3:(T, S pointer) memory ->
             T_a_v_p_2_3:(T, S pointer) memory ->
              S_j_v_p_2_3:(S, int32) memory ->
               S_i_v_p_2_3:(S, int32) memory ->
                { } T pointer
                reads S_i_result_4,S_j_result_4,S_result_4_alloc_table,T_a_result_4,T_b_result_4,T_result_4_alloc_table
                writes S_i_result_4,S_j_result_4,S_result_4_alloc_table,S_result_4_tag_table,T_a_result_4,T_b_result_4,T_result_4_alloc_table,T_result_4_tag_table
                { (JC_50:
                  ((JC_46:
                   eq_int(integer_of_int32(select(S_i_result_4,
                                           select(T_a_result_4, result))),
                   integer_of_int32(select(S_i_v_p_2_3,
                                    select(T_a_v_p_2_3, v_p_2)))))
                  and ((JC_47:
                       eq_int(integer_of_int32(select(S_j_result_4,
                                               select(T_a_result_4, result))),
                       integer_of_int32(select(S_j_v_p_2_3,
                                        select(T_a_v_p_2_3, v_p_2)))))
                      and ((JC_48:
                           eq_int(integer_of_int32(select(S_i_result_4,
                                                   select(T_b_result_4,
                                                   result))),
                           integer_of_int32(select(S_i_v_p_2_3,
                                            select(T_b_v_p_2_3, v_p_2)))))
                          and (JC_49:
                              eq_int(integer_of_int32(select(S_j_result_4,
                                                      select(T_b_result_4,
                                                      result))),
                              integer_of_int32(select(S_j_v_p_2_3,
                                               select(T_b_v_p_2_3, v_p_2))))))))) }

parameter id_requires :
 v_p_2:T pointer ->
  T_result_4_alloc_table:T alloc_table ref ->
   S_result_4_alloc_table:S alloc_table ref ->
    T_result_4_tag_table:T tag_table ref ->
     S_result_4_tag_table:S tag_table ref ->
      T_b_result_4:(T, S pointer) memory ref ->
       T_a_result_4:(T, S pointer) memory ref ->
        S_j_result_4:(S, int32) memory ref ->
         S_i_result_4:(S, int32) memory ref ->
          T_v_p_2_3_alloc_table:T alloc_table ->
           S_v_p_2_3_alloc_table:S alloc_table ->
            T_b_v_p_2_3:(T, S pointer) memory ->
             T_a_v_p_2_3:(T, S pointer) memory ->
              S_j_v_p_2_3:(S, int32) memory ->
               S_i_v_p_2_3:(S, int32) memory ->
                { } T pointer
                reads S_i_result_4,S_j_result_4,S_result_4_alloc_table,T_a_result_4,T_b_result_4,T_result_4_alloc_table
                writes S_i_result_4,S_j_result_4,S_result_4_alloc_table,S_result_4_tag_table,T_a_result_4,T_b_result_4,T_result_4_alloc_table,T_result_4_tag_table
                { (JC_50:
                  ((JC_46:
                   eq_int(integer_of_int32(select(S_i_result_4,
                                           select(T_a_result_4, result))),
                   integer_of_int32(select(S_i_v_p_2_3,
                                    select(T_a_v_p_2_3, v_p_2)))))
                  and ((JC_47:
                       eq_int(integer_of_int32(select(S_j_result_4,
                                               select(T_a_result_4, result))),
                       integer_of_int32(select(S_j_v_p_2_3,
                                        select(T_a_v_p_2_3, v_p_2)))))
                      and ((JC_48:
                           eq_int(integer_of_int32(select(S_i_result_4,
                                                   select(T_b_result_4,
                                                   result))),
                           integer_of_int32(select(S_i_v_p_2_3,
                                            select(T_b_v_p_2_3, v_p_2)))))
                          and (JC_49:
                              eq_int(integer_of_int32(select(S_j_result_4,
                                                      select(T_b_result_4,
                                                      result))),
                              integer_of_int32(select(S_j_v_p_2_3,
                                               select(T_b_v_p_2_3, v_p_2))))))))) }

parameter idp :
 p:T pointer ->
  T_result_7_alloc_table:T alloc_table ref ->
   S_result_7_alloc_table:S alloc_table ref ->
    T_result_7_tag_table:T tag_table ref ->
     S_result_7_tag_table:S tag_table ref ->
      T_b_result_7:(T, S pointer) memory ref ->
       T_a_result_7:(T, S pointer) memory ref ->
        S_j_result_7:(S, int32) memory ref ->
         S_i_result_7:(S, int32) memory ref ->
          T_p_6_alloc_table:T alloc_table ->
           S_p_6_alloc_table:S alloc_table ->
            T_b_p_6:(T, S pointer) memory ->
             T_a_p_6:(T, S pointer) memory ->
              S_j_p_6:(S, int32) memory ->
               S_i_p_6:(S, int32) memory ->
                { } T pointer
                reads S_i_result_7,S_j_result_7,S_result_7_alloc_table,T_a_result_7,T_b_result_7,T_result_7_alloc_table
                writes S_i_result_7,S_j_result_7,S_result_7_alloc_table,S_result_7_tag_table,T_a_result_7,T_b_result_7,T_result_7_alloc_table,T_result_7_tag_table
                { (JC_76:
                  ((JC_72:
                   eq_int(integer_of_int32(select(S_i_result_7,
                                           select(T_a_result_7, result))),
                   integer_of_int32(select(S_i_p_6, select(T_a_p_6, p)))))
                  and ((JC_73:
                       eq_int(integer_of_int32(select(S_j_result_7,
                                               select(T_a_result_7, result))),
                       integer_of_int32(select(S_j_p_6, select(T_a_p_6, p)))))
                      and ((JC_74:
                           eq_int(integer_of_int32(select(S_i_result_7,
                                                   select(T_b_result_7,
                                                   result))),
                           integer_of_int32(select(S_i_p_6,
                                            select(T_b_p_6, p)))))
                          and (JC_75:
                              eq_int(integer_of_int32(select(S_j_result_7,
                                                      select(T_b_result_7,
                                                      result))),
                              integer_of_int32(select(S_j_p_6,
                                               select(T_b_p_6, p))))))))) }

parameter idp_requires :
 p:T pointer ->
  T_result_7_alloc_table:T alloc_table ref ->
   S_result_7_alloc_table:S alloc_table ref ->
    T_result_7_tag_table:T tag_table ref ->
     S_result_7_tag_table:S tag_table ref ->
      T_b_result_7:(T, S pointer) memory ref ->
       T_a_result_7:(T, S pointer) memory ref ->
        S_j_result_7:(S, int32) memory ref ->
         S_i_result_7:(S, int32) memory ref ->
          T_p_6_alloc_table:T alloc_table ->
           S_p_6_alloc_table:S alloc_table ->
            T_b_p_6:(T, S pointer) memory ->
             T_a_p_6:(T, S pointer) memory ->
              S_j_p_6:(S, int32) memory ->
               S_i_p_6:(S, int32) memory ->
                { (JC_61:
                  ((JC_59: le_int(offset_min(T_p_6_alloc_table, p), (0)))
                  and (JC_60: ge_int(offset_max(T_p_6_alloc_table, p), (0)))))}
                T pointer
                reads S_i_result_7,S_j_result_7,S_result_7_alloc_table,T_a_result_7,T_b_result_7,T_result_7_alloc_table
                writes S_i_result_7,S_j_result_7,S_result_7_alloc_table,S_result_7_tag_table,T_a_result_7,T_b_result_7,T_result_7_alloc_table,T_result_7_tag_table
                { (JC_76:
                  ((JC_72:
                   eq_int(integer_of_int32(select(S_i_result_7,
                                           select(T_a_result_7, result))),
                   integer_of_int32(select(S_i_p_6, select(T_a_p_6, p)))))
                  and ((JC_73:
                       eq_int(integer_of_int32(select(S_j_result_7,
                                               select(T_a_result_7, result))),
                       integer_of_int32(select(S_j_p_6, select(T_a_p_6, p)))))
                      and ((JC_74:
                           eq_int(integer_of_int32(select(S_i_result_7,
                                                   select(T_b_result_7,
                                                   result))),
                           integer_of_int32(select(S_i_p_6,
                                            select(T_b_p_6, p)))))
                          and (JC_75:
                              eq_int(integer_of_int32(select(S_j_result_7,
                                                      select(T_b_result_7,
                                                      result))),
                              integer_of_int32(select(S_j_p_6,
                                               select(T_b_p_6, p))))))))) }

parameter int32_of_integer_ :
 x:int ->
  { (le_int((-2147483648), x) and le_int(x, (2147483647)))} int32
  { eq_int(integer_of_int32(result), x) }

parameter int8_of_integer_ :
 x:int ->
  { (le_int((-128), x) and le_int(x, (127)))} int8
  { eq_int(integer_of_int8(result), x) }

parameter safe_int32_of_integer_ :
 x:int -> { } int32 { eq_int(integer_of_int32(result), x) }

parameter safe_int8_of_integer_ :
 x:int -> { } int8 { eq_int(integer_of_int8(result), x) }

let f_ensures_default =
 fun (p_0 : T pointer) (q : T pointer) (S_i_q_2 : (S, int32) memory ref) (S_j_q_2 : (S, int32) memory ref) (S_p_0_1_alloc_table : S alloc_table) (S_q_2_alloc_table : S alloc_table) (T_p_0_1_alloc_table : T alloc_table) (T_q_2_alloc_table : T alloc_table) (S_i_p_0_1 : (S, int32) memory) (S_j_p_0_1 : (S, int32) memory) (T_a_p_0_1 : (T, S pointer) memory) (T_a_q_2 : (T, S pointer) memory) (T_b_p_0_1 : (T, S pointer) memory) (T_b_q_2 : (T, S pointer) memory) ->
  { (JC_11:
    ((JC_7: le_int(offset_min(T_p_0_1_alloc_table, p_0), (0)))
    and ((JC_8: ge_int(offset_max(T_p_0_1_alloc_table, p_0), (0)))
        and ((JC_9: le_int(offset_min(T_q_2_alloc_table, q), (0)))
            and (JC_10: ge_int(offset_max(T_q_2_alloc_table, q), (0))))))) }
  (init:
  try
   begin
     (let jessie_48 = (C_5:
                      begin
                        (let jessie_30 = (let jessie_26 = (C_2:
                                                          ((safe_acc_ S_i_p_0_1) 
                                                           (C_1:
                                                           ((safe_acc_ T_a_p_0_1) p_0)))) in
                                         (let jessie_29 = (C_3:
                                                          ((safe_acc_ T_a_q_2) q)) in
                                         (((safe_upd_ S_i_q_2) jessie_29) jessie_26))) in
                        void);
                       (C_10:
                       begin
                         (let jessie_36 = (let jessie_32 = (C_7:
                                                           ((safe_acc_ S_j_p_0_1) 
                                                            (C_6:
                                                            ((safe_acc_ T_a_p_0_1) p_0)))) in
                                          (let jessie_35 = (C_8:
                                                           ((safe_acc_ T_a_q_2) q)) in
                                          (((safe_upd_ S_j_q_2) jessie_35) jessie_32))) in
                         void);
                        (C_15:
                        begin
                          (let jessie_42 = (let jessie_38 = (C_12:
                                                            ((safe_acc_ S_i_p_0_1) 
                                                             (C_11:
                                                             ((safe_acc_ T_b_p_0_1) p_0)))) in
                                           (let jessie_41 = (C_13:
                                                            ((safe_acc_ T_b_q_2) q)) in
                                           (((safe_upd_ S_i_q_2) jessie_41) jessie_38))) in
                          void);
                         (C_20:
                         (let jessie_44 = (C_17:
                                          ((safe_acc_ S_j_p_0_1) (C_16:
                                                                 ((safe_acc_ T_b_p_0_1) p_0)))) in
                         (let jessie_47 = (C_18: ((safe_acc_ T_b_q_2) q)) in
                         begin
                           (((safe_upd_ S_j_q_2) jessie_47) jessie_44);
                          jessie_44
                         end)))
                        end)
                       end)
                      end) in
     void);
    (raise Return);
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_17:
    ((JC_13:
     eq_int(integer_of_int32(select(S_i_p_0_1, select(T_a_p_0_1, p_0))),
     integer_of_int32(select(S_i_q_2, select(T_a_q_2, q)))))
    and ((JC_14:
         eq_int(integer_of_int32(select(S_j_p_0_1, select(T_a_p_0_1, p_0))),
         integer_of_int32(select(S_j_q_2, select(T_a_q_2, q)))))
        and ((JC_15:
             eq_int(integer_of_int32(select(S_i_p_0_1,
                                     select(T_b_p_0_1, p_0))),
             integer_of_int32(select(S_i_q_2, select(T_b_q_2, q)))))
            and (JC_16:
                eq_int(integer_of_int32(select(S_j_p_0_1,
                                        select(T_b_p_0_1, p_0))),
                integer_of_int32(select(S_j_q_2, select(T_b_q_2, q))))))))) }

let f_safety =
 fun (p_0 : T pointer) (q : T pointer) (S_i_q_2 : (S, int32) memory ref) (S_j_q_2 : (S, int32) memory ref) (S_p_0_1_alloc_table : S alloc_table) (S_q_2_alloc_table : S alloc_table) (T_p_0_1_alloc_table : T alloc_table) (T_q_2_alloc_table : T alloc_table) (S_i_p_0_1 : (S, int32) memory) (S_j_p_0_1 : (S, int32) memory) (T_a_p_0_1 : (T, S pointer) memory) (T_a_q_2 : (T, S pointer) memory) (T_b_p_0_1 : (T, S pointer) memory) (T_b_q_2 : (T, S pointer) memory) ->
  { (JC_11:
    ((JC_7: le_int(offset_min(T_p_0_1_alloc_table, p_0), (0)))
    and ((JC_8: ge_int(offset_max(T_p_0_1_alloc_table, p_0), (0)))
        and ((JC_9: le_int(offset_min(T_q_2_alloc_table, q), (0)))
            and (JC_10: ge_int(offset_max(T_q_2_alloc_table, q), (0))))))) }
  (init:
  try
   begin
     (let jessie_24 = (C_5:
                      begin
                        (let jessie_6 = (let jessie_2 = (C_2:
                                                        ((safe_acc_ S_i_p_0_1) 
                                                         (C_1:
                                                         (JC_25:
                                                         (((acc_ T_p_0_1_alloc_table) T_a_p_0_1) p_0))))) in
                                        (let jessie_5 = (C_3:
                                                        (JC_27:
                                                        (((acc_ T_q_2_alloc_table) T_a_q_2) q))) in
                                        (((safe_upd_ S_i_q_2) jessie_5) jessie_2))) in
                        void);
                       (C_10:
                       begin
                         (let jessie_12 = (let jessie_8 = (C_7:
                                                          ((safe_acc_ S_j_p_0_1) 
                                                           (C_6:
                                                           (JC_28:
                                                           (((acc_ T_p_0_1_alloc_table) T_a_p_0_1) p_0))))) in
                                          (let jessie_11 = (C_8:
                                                           (JC_30:
                                                           (((acc_ T_q_2_alloc_table) T_a_q_2) q))) in
                                          (((safe_upd_ S_j_q_2) jessie_11) jessie_8))) in
                         void);
                        (C_15:
                        begin
                          (let jessie_18 = (let jessie_14 = (C_12:
                                                            ((safe_acc_ S_i_p_0_1) 
                                                             (C_11:
                                                             (JC_31:
                                                             (((acc_ T_p_0_1_alloc_table) T_b_p_0_1) p_0))))) in
                                           (let jessie_17 = (C_13:
                                                            (JC_33:
                                                            (((acc_ T_q_2_alloc_table) T_b_q_2) q))) in
                                           (((safe_upd_ S_i_q_2) jessie_17) jessie_14))) in
                          void);
                         (C_20:
                         (let jessie_20 = (C_17:
                                          ((safe_acc_ S_j_p_0_1) (C_16:
                                                                 (JC_34:
                                                                 (((acc_ T_p_0_1_alloc_table) T_b_p_0_1) p_0))))) in
                         (let jessie_23 = (C_18:
                                          (JC_36:
                                          (((acc_ T_q_2_alloc_table) T_b_q_2) q))) in
                         begin
                           (((safe_upd_ S_j_q_2) jessie_23) jessie_20);
                          jessie_20
                         end)))
                        end)
                       end)
                      end) in
     void);
    (raise Return);
    (raise Return)
   end
   with
   Return ->
   void end)
  { true }

let g_ensures_default =
 fun (p_1 : T pointer) (S_i_p_1_9 : (S, int32) memory ref) (S_p_1_9_alloc_table : S alloc_table) (T_p_1_9_alloc_table : T alloc_table) (S_j_p_1_9 : (S, int32) memory) (T_a_p_1_9 : (T, S pointer) memory) (T_b_p_1_9 : (T, S pointer) memory) ->
  { (JC_95:
    ((JC_93: le_int(offset_min(T_p_1_9_alloc_table, p_1), (0)))
    and (JC_94: ge_int(offset_max(T_p_1_9_alloc_table, p_1), (0))))) }
  (init:
  try
   begin
     (let T_b___cil_tmp_8_21 = ref (any_memory void) in
     (let T_b___cil_tmp_20 = ref (any_memory void) in
     (let T_b_copy2_19 = ref (any_memory void) in
     (let T_b_copy_18 = ref (any_memory void) in
     (let T_a___cil_tmp_8_21 = ref (any_memory void) in
     (let T_a___cil_tmp_20 = ref (any_memory void) in
     (let T_a_copy2_19 = ref (any_memory void) in
     (let T_a_copy_18 = ref (any_memory void) in
     (let S_j___cil_tmp_8_21 = ref (any_memory void) in
     (let S_j___cil_tmp_20 = ref (any_memory void) in
     (let S_j_copy2_19 = ref (any_memory void) in
     (let S_j_copy_18 = ref (any_memory void) in
     (let S_i___cil_tmp_8_21 = ref (any_memory void) in
     (let S_i___cil_tmp_20 = ref (any_memory void) in
     (let S_i_copy2_19 = ref (any_memory void) in
     (let S_i_copy_18 = ref (any_memory void) in
     (let S_copy_18_tag_table = ref (any_tag_table void) in
     (let S_copy2_19_tag_table = ref (any_tag_table void) in
     (let S___cil_tmp_20_tag_table = ref (any_tag_table void) in
     (let S___cil_tmp_8_21_tag_table = ref (any_tag_table void) in
     (let T_copy_18_tag_table = ref (any_tag_table void) in
     (let T_copy2_19_tag_table = ref (any_tag_table void) in
     (let T___cil_tmp_20_tag_table = ref (any_tag_table void) in
     (let T___cil_tmp_8_21_tag_table = ref (any_tag_table void) in
     (let T___cil_tmp_8_21_alloc_table = ref (any_alloc_table void) in
     (let T___cil_tmp_20_alloc_table = ref (any_alloc_table void) in
     (let T_copy2_19_alloc_table = ref (any_alloc_table void) in
     (let T_copy_18_alloc_table = ref (any_alloc_table void) in
     (let S___cil_tmp_8_21_alloc_table = ref (any_alloc_table void) in
     (let S___cil_tmp_20_alloc_table = ref (any_alloc_table void) in
     (let S_copy2_19_alloc_table = ref (any_alloc_table void) in
     (let S_copy_18_alloc_table = ref (any_alloc_table void) in
     (let copy = ref (any_pointer void) in
     (let copy2 = ref (any_pointer void) in
     (let __cil_tmp_1 = ref (any_pointer void) in
     (let __cil_tmp_8 = ref (any_pointer void) in
     (C_143:
     begin
       (let jessie_338 = (copy := (C_142:
                                  (JC_116:
                                  ((((((alloc_struct_T (1)) S_copy_18_alloc_table) T_copy_18_alloc_table) T_copy_18_tag_table) !T_a_copy_18) !T_b_copy_18)))) in
       void);
      (C_145:
      begin
        (let jessie_340 = (copy2 := (C_144:
                                    (JC_117:
                                    ((((((alloc_struct_T (1)) S_copy2_19_alloc_table) T_copy2_19_alloc_table) T_copy2_19_tag_table) !T_a_copy2_19) !T_b_copy2_19)))) in
        void);
       (C_147:
       begin
         (let jessie_343 = (__cil_tmp_1 := (C_146:
                                           (let jessie_342 = p_1 in
                                           (JC_118:
                                           (((((((((((((((id jessie_342) T___cil_tmp_20_alloc_table) S___cil_tmp_20_alloc_table) T___cil_tmp_20_tag_table) S___cil_tmp_20_tag_table) T_b___cil_tmp_20) T_a___cil_tmp_20) S_j___cil_tmp_20) S_i___cil_tmp_20) T_p_1_9_alloc_table) S_p_1_9_alloc_table) T_b_p_1_9) T_a_p_1_9) S_j_p_1_9) !S_i_p_1_9))))) in
         void);
        (let jessie_367 = (C_152:
                          begin
                            (let jessie_349 = (let jessie_345 = (C_149:
                                                                ((safe_acc_ !S_i___cil_tmp_20) 
                                                                 (C_148:
                                                                 ((safe_acc_ !T_a___cil_tmp_20) !__cil_tmp_1)))) in
                                              (let jessie_348 = (C_150:
                                                                ((safe_acc_ !T_a_copy_18) !copy)) in
                                              (((safe_upd_ S_i_copy_18) jessie_348) jessie_345))) in
                            void);
                           (C_157:
                           begin
                             (let jessie_355 = (let jessie_351 = (C_154:
                                                                 ((safe_acc_ !S_j___cil_tmp_20) 
                                                                  (C_153:
                                                                  ((safe_acc_ !T_a___cil_tmp_20) !__cil_tmp_1)))) in
                                               (let jessie_354 = (C_155:
                                                                 ((safe_acc_ !T_a_copy_18) !copy)) in
                                               (((safe_upd_ S_j_copy_18) jessie_354) jessie_351))) in
                             void);
                            (C_162:
                            begin
                              (let jessie_361 = (let jessie_357 = (C_159:
                                                                  ((safe_acc_ !S_i___cil_tmp_20) 
                                                                   (C_158:
                                                                   ((safe_acc_ !T_b___cil_tmp_20) !__cil_tmp_1)))) in
                                                (let jessie_360 = (C_160:
                                                                  ((safe_acc_ !T_b_copy_18) !copy)) in
                                                (((safe_upd_ S_i_copy_18) jessie_360) jessie_357))) in
                              void);
                             (C_167:
                             (let jessie_363 = (C_164:
                                               ((safe_acc_ !S_j___cil_tmp_20) 
                                                (C_163:
                                                ((safe_acc_ !T_b___cil_tmp_20) !__cil_tmp_1)))) in
                             (let jessie_366 = (C_165:
                                               ((safe_acc_ !T_b_copy_18) !copy)) in
                             begin
                               (((safe_upd_ S_j_copy_18) jessie_366) jessie_363);
                              jessie_363
                             end)))
                            end)
                           end)
                          end) in
        void);
        (C_168:
        ((safe_free_parameter T___cil_tmp_20_alloc_table) !__cil_tmp_1))
       end);
       (C_170:
       begin
         (let jessie_370 = (__cil_tmp_8 := (C_169:
                                           (let jessie_369 = p_1 in
                                           (JC_119:
                                           (((((((((((((((idp jessie_369) T___cil_tmp_8_21_alloc_table) S___cil_tmp_8_21_alloc_table) T___cil_tmp_8_21_tag_table) S___cil_tmp_8_21_tag_table) T_b___cil_tmp_8_21) T_a___cil_tmp_8_21) S_j___cil_tmp_8_21) S_i___cil_tmp_8_21) T_p_1_9_alloc_table) S_p_1_9_alloc_table) T_b_p_1_9) T_a_p_1_9) S_j_p_1_9) !S_i_p_1_9))))) in
         void);
        (let jessie_394 = (C_175:
                          begin
                            (let jessie_376 = (let jessie_372 = (C_172:
                                                                ((safe_acc_ !S_i___cil_tmp_8_21) 
                                                                 (C_171:
                                                                 ((safe_acc_ !T_a___cil_tmp_8_21) !__cil_tmp_8)))) in
                                              (let jessie_375 = (C_173:
                                                                ((safe_acc_ !T_a_copy2_19) !copy2)) in
                                              (((safe_upd_ S_i_copy2_19) jessie_375) jessie_372))) in
                            void);
                           (C_180:
                           begin
                             (let jessie_382 = (let jessie_378 = (C_177:
                                                                 ((safe_acc_ !S_j___cil_tmp_8_21) 
                                                                  (C_176:
                                                                  ((safe_acc_ !T_a___cil_tmp_8_21) !__cil_tmp_8)))) in
                                               (let jessie_381 = (C_178:
                                                                 ((safe_acc_ !T_a_copy2_19) !copy2)) in
                                               (((safe_upd_ S_j_copy2_19) jessie_381) jessie_378))) in
                             void);
                            (C_185:
                            begin
                              (let jessie_388 = (let jessie_384 = (C_182:
                                                                  ((safe_acc_ !S_i___cil_tmp_8_21) 
                                                                   (C_181:
                                                                   ((safe_acc_ !T_b___cil_tmp_8_21) !__cil_tmp_8)))) in
                                                (let jessie_387 = (C_183:
                                                                  ((safe_acc_ !T_b_copy2_19) !copy2)) in
                                                (((safe_upd_ S_i_copy2_19) jessie_387) jessie_384))) in
                              void);
                             (C_190:
                             (let jessie_390 = (C_187:
                                               ((safe_acc_ !S_j___cil_tmp_8_21) 
                                                (C_186:
                                                ((safe_acc_ !T_b___cil_tmp_8_21) !__cil_tmp_8)))) in
                             (let jessie_393 = (C_188:
                                               ((safe_acc_ !T_b_copy2_19) !copy2)) in
                             begin
                               (((safe_upd_ S_j_copy2_19) jessie_393) jessie_390);
                              jessie_390
                             end)))
                            end)
                           end)
                          end) in
        void);
        (C_191:
        ((safe_free_parameter T___cil_tmp_8_21_alloc_table) !__cil_tmp_8))
       end);
       (C_194:
       begin
         (let jessie_400 = (let jessie_396 = (safe_int32_of_integer_ (0)) in
                           (let jessie_399 = (C_192:
                                             ((safe_acc_ !T_a_copy2_19) !copy2)) in
                           (((safe_upd_ S_i_copy2_19) jessie_399) jessie_396))) in
         void);
        (assert
        { (JC_120:
          eq_int(integer_of_int32(select(S_i_p_1_9, select(T_a_p_1_9, p_1))),
          integer_of_int32(select(S_i_copy_18, select(T_a_copy_18, copy))))) };
        void);
        void;
        (C_198:
        begin
          (let jessie_406 = (let jessie_402 = (safe_int32_of_integer_ (1)) in
                            (let jessie_405 = (C_196:
                                              ((safe_acc_ !T_a_copy_18) !copy)) in
                            (((safe_upd_ S_j_copy_18) jessie_405) jessie_402))) in
          void);
         (assert
         { (JC_121:
           eq_int(integer_of_int32(select(S_j_p_1_9, select(T_a_p_1_9, p_1))),
           integer_of_int32(select(S_j_copy2_19, select(T_a_copy2_19, copy2))))) };
         void);
         void;
         (C_202:
         begin
           (let jessie_412 = (let jessie_408 = (safe_int32_of_integer_ (0)) in
                             (let jessie_411 = (C_200:
                                               ((safe_acc_ T_b_p_1_9) p_1)) in
                             (((safe_upd_ S_i_p_1_9) jessie_411) jessie_408))) in
           void);
          (assert
          { (JC_122:
            eq_int(integer_of_int32(select(S_i_copy_18,
                                    select(T_b_copy_18, copy))),
            integer_of_int32(select(S_i_copy2_19,
                             select(T_b_copy2_19, copy2))))) };
          void);
          void;
          (assert
          { (JC_125:
            ((JC_123:
             eq_int(integer_of_int32(select(S_j_p_1_9,
                                     select(T_b_p_1_9, p_1))),
             integer_of_int32(select(S_j_copy_18, select(T_b_copy_18, copy)))))
            and (JC_124:
                eq_int(integer_of_int32(select(S_j_copy_18,
                                        select(T_b_copy_18, copy))),
                integer_of_int32(select(S_j_copy2_19,
                                 select(T_b_copy2_19, copy2))))))) };
          void);
          void;
          (C_207:
          begin
            ((safe_free_parameter T_copy_18_alloc_table) !copy);
           (C_208:
           begin
             ((safe_free_parameter T_copy2_19_alloc_table) !copy2);
            (raise Return)
           end)
          end)
         end)
        end)
       end)
      end)
     end)))))))))))))))))))))))))))))))))))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_97: true) }

let g_safety =
 fun (p_1 : T pointer) (S_i_p_1_9 : (S, int32) memory ref) (S_p_1_9_alloc_table : S alloc_table) (T_p_1_9_alloc_table : T alloc_table) (S_j_p_1_9 : (S, int32) memory) (T_a_p_1_9 : (T, S pointer) memory) (T_b_p_1_9 : (T, S pointer) memory) ->
  { (JC_95:
    ((JC_93: le_int(offset_min(T_p_1_9_alloc_table, p_1), (0)))
    and (JC_94: ge_int(offset_max(T_p_1_9_alloc_table, p_1), (0))))) }
  (init:
  try
   begin
     (let T_b___cil_tmp_8_21 = ref (any_memory void) in
     (let T_b___cil_tmp_20 = ref (any_memory void) in
     (let T_b_copy2_19 = ref (any_memory void) in
     (let T_b_copy_18 = ref (any_memory void) in
     (let T_a___cil_tmp_8_21 = ref (any_memory void) in
     (let T_a___cil_tmp_20 = ref (any_memory void) in
     (let T_a_copy2_19 = ref (any_memory void) in
     (let T_a_copy_18 = ref (any_memory void) in
     (let S_j___cil_tmp_8_21 = ref (any_memory void) in
     (let S_j___cil_tmp_20 = ref (any_memory void) in
     (let S_j_copy2_19 = ref (any_memory void) in
     (let S_j_copy_18 = ref (any_memory void) in
     (let S_i___cil_tmp_8_21 = ref (any_memory void) in
     (let S_i___cil_tmp_20 = ref (any_memory void) in
     (let S_i_copy2_19 = ref (any_memory void) in
     (let S_i_copy_18 = ref (any_memory void) in
     (let S_copy_18_tag_table = ref (any_tag_table void) in
     (let S_copy2_19_tag_table = ref (any_tag_table void) in
     (let S___cil_tmp_20_tag_table = ref (any_tag_table void) in
     (let S___cil_tmp_8_21_tag_table = ref (any_tag_table void) in
     (let T_copy_18_tag_table = ref (any_tag_table void) in
     (let T_copy2_19_tag_table = ref (any_tag_table void) in
     (let T___cil_tmp_20_tag_table = ref (any_tag_table void) in
     (let T___cil_tmp_8_21_tag_table = ref (any_tag_table void) in
     (let T___cil_tmp_8_21_alloc_table = ref (any_alloc_table void) in
     (let T___cil_tmp_20_alloc_table = ref (any_alloc_table void) in
     (let T_copy2_19_alloc_table = ref (any_alloc_table void) in
     (let T_copy_18_alloc_table = ref (any_alloc_table void) in
     (let S___cil_tmp_8_21_alloc_table = ref (any_alloc_table void) in
     (let S___cil_tmp_20_alloc_table = ref (any_alloc_table void) in
     (let S_copy2_19_alloc_table = ref (any_alloc_table void) in
     (let S_copy_18_alloc_table = ref (any_alloc_table void) in
     (let copy = ref (any_pointer void) in
     (let copy2 = ref (any_pointer void) in
     (let __cil_tmp_1 = ref (any_pointer void) in
     (let __cil_tmp_8 = ref (any_pointer void) in
     (C_143:
     begin
       (let jessie_262 = (copy := (let jessie_261 = (C_142:
                                                    (JC_101:
                                                    ((((((alloc_struct_T_requires (1)) S_copy_18_alloc_table) T_copy_18_alloc_table) T_copy_18_tag_table) !T_a_copy_18) !T_b_copy_18))) in
                                  (JC_102:
                                  (assert
                                  { ge_int(offset_max(T_copy_18_alloc_table,
                                           jessie_261),
                                    (0)) };
                                  jessie_261)))) in
       void);
      (C_145:
      begin
        (let jessie_264 = (copy2 := (let jessie_263 = (C_144:
                                                      (JC_103:
                                                      ((((((alloc_struct_T_requires (1)) S_copy2_19_alloc_table) T_copy2_19_alloc_table) T_copy2_19_tag_table) !T_a_copy2_19) !T_b_copy2_19))) in
                                    (JC_104:
                                    (assert
                                    { ge_int(offset_max(T_copy2_19_alloc_table,
                                             jessie_263),
                                      (0)) };
                                    jessie_263)))) in
        void);
       (C_147:
       begin
         (let jessie_267 = (__cil_tmp_1 := (C_146:
                                           (let jessie_266 = p_1 in
                                           (JC_106:
                                           (assert
                                           { (le_int(offset_min(T_p_1_9_alloc_table,
                                                     jessie_266),
                                              (0))
                                             and ge_int(offset_max(T_p_1_9_alloc_table,
                                                        jessie_266),
                                                 (0))) };
                                           (JC_105:
                                           (((((((((((((((id_requires jessie_266) T___cil_tmp_20_alloc_table) S___cil_tmp_20_alloc_table) T___cil_tmp_20_tag_table) S___cil_tmp_20_tag_table) T_b___cil_tmp_20) T_a___cil_tmp_20) S_j___cil_tmp_20) S_i___cil_tmp_20) T_p_1_9_alloc_table) S_p_1_9_alloc_table) T_b_p_1_9) T_a_p_1_9) S_j_p_1_9) !S_i_p_1_9))))))) in
         void);
        (let jessie_291 = (C_152:
                          begin
                            (let jessie_273 = (let jessie_269 = (C_149:
                                                                ((safe_acc_ !S_i___cil_tmp_20) 
                                                                 (C_148:
                                                                 ((safe_acc_ !T_a___cil_tmp_20) !__cil_tmp_1)))) in
                                              (let jessie_272 = (C_150:
                                                                ((safe_acc_ !T_a_copy_18) !copy)) in
                                              (((safe_upd_ S_i_copy_18) jessie_272) jessie_269))) in
                            void);
                           (C_157:
                           begin
                             (let jessie_279 = (let jessie_275 = (C_154:
                                                                 ((safe_acc_ !S_j___cil_tmp_20) 
                                                                  (C_153:
                                                                  ((safe_acc_ !T_a___cil_tmp_20) !__cil_tmp_1)))) in
                                               (let jessie_278 = (C_155:
                                                                 ((safe_acc_ !T_a_copy_18) !copy)) in
                                               (((safe_upd_ S_j_copy_18) jessie_278) jessie_275))) in
                             void);
                            (C_162:
                            begin
                              (let jessie_285 = (let jessie_281 = (C_159:
                                                                  ((safe_acc_ !S_i___cil_tmp_20) 
                                                                   (C_158:
                                                                   ((safe_acc_ !T_b___cil_tmp_20) !__cil_tmp_1)))) in
                                                (let jessie_284 = (C_160:
                                                                  ((safe_acc_ !T_b_copy_18) !copy)) in
                                                (((safe_upd_ S_i_copy_18) jessie_284) jessie_281))) in
                              void);
                             (C_167:
                             (let jessie_287 = (C_164:
                                               ((safe_acc_ !S_j___cil_tmp_20) 
                                                (C_163:
                                                ((safe_acc_ !T_b___cil_tmp_20) !__cil_tmp_1)))) in
                             (let jessie_290 = (C_165:
                                               ((safe_acc_ !T_b_copy_18) !copy)) in
                             begin
                               (((safe_upd_ S_j_copy_18) jessie_290) jessie_287);
                              jessie_287
                             end)))
                            end)
                           end)
                          end) in
        void);
        (C_168: ((free_parameter T___cil_tmp_20_alloc_table) !__cil_tmp_1))
       end);
       (C_170:
       begin
         (let jessie_294 = (__cil_tmp_8 := (C_169:
                                           (let jessie_293 = p_1 in
                                           (JC_107:
                                           (((((((((((((((idp_requires jessie_293) T___cil_tmp_8_21_alloc_table) S___cil_tmp_8_21_alloc_table) T___cil_tmp_8_21_tag_table) S___cil_tmp_8_21_tag_table) T_b___cil_tmp_8_21) T_a___cil_tmp_8_21) S_j___cil_tmp_8_21) S_i___cil_tmp_8_21) T_p_1_9_alloc_table) S_p_1_9_alloc_table) T_b_p_1_9) T_a_p_1_9) S_j_p_1_9) !S_i_p_1_9))))) in
         void);
        (let jessie_318 = (C_175:
                          begin
                            (let jessie_300 = (let jessie_296 = (C_172:
                                                                ((safe_acc_ !S_i___cil_tmp_8_21) 
                                                                 (C_171:
                                                                 ((safe_acc_ !T_a___cil_tmp_8_21) !__cil_tmp_8)))) in
                                              (let jessie_299 = (C_173:
                                                                ((safe_acc_ !T_a_copy2_19) !copy2)) in
                                              (((safe_upd_ S_i_copy2_19) jessie_299) jessie_296))) in
                            void);
                           (C_180:
                           begin
                             (let jessie_306 = (let jessie_302 = (C_177:
                                                                 ((safe_acc_ !S_j___cil_tmp_8_21) 
                                                                  (C_176:
                                                                  ((safe_acc_ !T_a___cil_tmp_8_21) !__cil_tmp_8)))) in
                                               (let jessie_305 = (C_178:
                                                                 ((safe_acc_ !T_a_copy2_19) !copy2)) in
                                               (((safe_upd_ S_j_copy2_19) jessie_305) jessie_302))) in
                             void);
                            (C_185:
                            begin
                              (let jessie_312 = (let jessie_308 = (C_182:
                                                                  ((safe_acc_ !S_i___cil_tmp_8_21) 
                                                                   (C_181:
                                                                   ((safe_acc_ !T_b___cil_tmp_8_21) !__cil_tmp_8)))) in
                                                (let jessie_311 = (C_183:
                                                                  ((safe_acc_ !T_b_copy2_19) !copy2)) in
                                                (((safe_upd_ S_i_copy2_19) jessie_311) jessie_308))) in
                              void);
                             (C_190:
                             (let jessie_314 = (C_187:
                                               ((safe_acc_ !S_j___cil_tmp_8_21) 
                                                (C_186:
                                                ((safe_acc_ !T_b___cil_tmp_8_21) !__cil_tmp_8)))) in
                             (let jessie_317 = (C_188:
                                               ((safe_acc_ !T_b_copy2_19) !copy2)) in
                             begin
                               (((safe_upd_ S_j_copy2_19) jessie_317) jessie_314);
                              jessie_314
                             end)))
                            end)
                           end)
                          end) in
        void);
        (C_191: ((free_parameter T___cil_tmp_8_21_alloc_table) !__cil_tmp_8))
       end);
       (C_194:
       begin
         (let jessie_324 = (let jessie_320 = (safe_int32_of_integer_ (0)) in
                           (let jessie_323 = (C_192:
                                             ((safe_acc_ !T_a_copy2_19) !copy2)) in
                           (((safe_upd_ S_i_copy2_19) jessie_323) jessie_320))) in
         void);
        [ { } unit reads S_i_copy_18,S_i_p_1_9,T_a_copy_18,copy
          { (JC_108:
            eq_int(integer_of_int32(select(S_i_p_1_9, select(T_a_p_1_9, p_1))),
            integer_of_int32(select(S_i_copy_18, select(T_a_copy_18, copy))))) } ];
        void;
        (C_198:
        begin
          (let jessie_330 = (let jessie_326 = (safe_int32_of_integer_ (1)) in
                            (let jessie_329 = (C_196:
                                              ((safe_acc_ !T_a_copy_18) !copy)) in
                            (((safe_upd_ S_j_copy_18) jessie_329) jessie_326))) in
          void);
         [ { } unit reads S_j_copy2_19,T_a_copy2_19,copy2
           { (JC_109:
             eq_int(integer_of_int32(select(S_j_p_1_9,
                                     select(T_a_p_1_9, p_1))),
             integer_of_int32(select(S_j_copy2_19,
                              select(T_a_copy2_19, copy2))))) } ];
         void;
         (C_202:
         begin
           (let jessie_336 = (let jessie_332 = (safe_int32_of_integer_ (0)) in
                             (let jessie_335 = (C_200:
                                               (JC_111:
                                               (((acc_ T_p_1_9_alloc_table) T_b_p_1_9) p_1))) in
                             (((safe_upd_ S_i_p_1_9) jessie_335) jessie_332))) in
           void);
          [ { } unit
            reads S_i_copy2_19,S_i_copy_18,T_b_copy2_19,T_b_copy_18,copy,copy2
            { (JC_112:
              eq_int(integer_of_int32(select(S_i_copy_18,
                                      select(T_b_copy_18, copy))),
              integer_of_int32(select(S_i_copy2_19,
                               select(T_b_copy2_19, copy2))))) } ];
          void;
          [ { } unit
            reads S_j_copy2_19,S_j_copy_18,T_b_copy2_19,T_b_copy_18,copy,copy2
            { (JC_115:
              ((JC_113:
               eq_int(integer_of_int32(select(S_j_p_1_9,
                                       select(T_b_p_1_9, p_1))),
               integer_of_int32(select(S_j_copy_18,
                                select(T_b_copy_18, copy)))))
              and (JC_114:
                  eq_int(integer_of_int32(select(S_j_copy_18,
                                          select(T_b_copy_18, copy))),
                  integer_of_int32(select(S_j_copy2_19,
                                   select(T_b_copy2_19, copy2))))))) } ];
          void;
          (C_207:
          begin
            ((free_parameter T_copy_18_alloc_table) !copy);
           (C_208:
           begin
             ((free_parameter T_copy2_19_alloc_table) !copy2); (raise Return)
           end)
          end)
         end)
        end)
       end)
      end)
     end)))))))))))))))))))))))))))))))))))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { true }

let id_ensures_default =
 fun (v_p_2 : T pointer) (S_result_4_alloc_table : S alloc_table ref) (T_result_4_alloc_table : T alloc_table ref) (T_result_4_tag_table : T tag_table ref) (S_result_4_tag_table : S tag_table ref) (S_i_result_4 : (S, int32) memory ref) (S_j_result_4 : (S, int32) memory ref) (T_a_result_4 : (T, S pointer) memory ref) (T_b_result_4 : (T, S pointer) memory ref) (S_v_p_2_3_alloc_table : S alloc_table) (T_v_p_2_3_alloc_table : T alloc_table) (S_i_v_p_2_3 : (S, int32) memory) (S_j_v_p_2_3 : (S, int32) memory) (T_a_v_p_2_3 : (T, S pointer) memory) (T_b_v_p_2_3 : (T, S pointer) memory) ->
  { valid_struct_T(v_p_2, (0), (0), S_v_p_2_3_alloc_table,
    T_v_p_2_3_alloc_table, T_a_v_p_2_3, T_b_v_p_2_3) }
  (init:
  (let return = ref (any_pointer void) in
  try
   begin
     (let T_b_p_2_10 = ref (any_memory void) in
     (let T_a_p_2_10 = ref (any_memory void) in
     (let S_j_p_2_10 = ref (any_memory void) in
     (let S_i_p_2_10 = ref (any_memory void) in
     (let S_p_2_10_tag_table = ref (any_tag_table void) in
     (let T_p_2_10_tag_table = ref (any_tag_table void) in
     (let T_p_2_10_alloc_table = ref (any_alloc_table void) in
     (let S_p_2_10_alloc_table = ref (any_alloc_table void) in
     (let p_2 = ref (any_pointer void) in
     (let __cil_tmp = ref (any_pointer void) in
     (C_36:
     begin
       (let jessie_103 = (p_2 := (C_35:
                                 (JC_57:
                                 ((((((alloc_struct_T (1)) S_p_2_10_alloc_table) T_p_2_10_alloc_table) T_p_2_10_tag_table) !T_a_p_2_10) !T_b_p_2_10)))) in
       void);
      (C_38:
      begin
        (let jessie_105 = (__cil_tmp := (C_37:
                                        (JC_58:
                                        ((((((alloc_struct_T (1)) S_result_4_alloc_table) T_result_4_alloc_table) T_result_4_tag_table) !T_a_result_4) !T_b_result_4)))) in
        void);
       (let jessie_129 = (C_43:
                         begin
                           (let jessie_111 = (let jessie_107 = (C_40:
                                                               ((safe_acc_ S_i_v_p_2_3) 
                                                                (C_39:
                                                                ((safe_acc_ T_a_v_p_2_3) v_p_2)))) in
                                             (let jessie_110 = (C_41:
                                                               ((safe_acc_ !T_a_p_2_10) !p_2)) in
                                             (((safe_upd_ S_i_p_2_10) jessie_110) jessie_107))) in
                           void);
                          (C_48:
                          begin
                            (let jessie_117 = (let jessie_113 = (C_45:
                                                                ((safe_acc_ S_j_v_p_2_3) 
                                                                 (C_44:
                                                                 ((safe_acc_ T_a_v_p_2_3) v_p_2)))) in
                                              (let jessie_116 = (C_46:
                                                                ((safe_acc_ !T_a_p_2_10) !p_2)) in
                                              (((safe_upd_ S_j_p_2_10) jessie_116) jessie_113))) in
                            void);
                           (C_53:
                           begin
                             (let jessie_123 = (let jessie_119 = (C_50:
                                                                 ((safe_acc_ S_i_v_p_2_3) 
                                                                  (C_49:
                                                                  ((safe_acc_ T_b_v_p_2_3) v_p_2)))) in
                                               (let jessie_122 = (C_51:
                                                                 ((safe_acc_ !T_b_p_2_10) !p_2)) in
                                               (((safe_upd_ S_i_p_2_10) jessie_122) jessie_119))) in
                             void);
                            (C_58:
                            (let jessie_125 = (C_55:
                                              ((safe_acc_ S_j_v_p_2_3) 
                                               (C_54:
                                               ((safe_acc_ T_b_v_p_2_3) v_p_2)))) in
                            (let jessie_128 = (C_56:
                                              ((safe_acc_ !T_b_p_2_10) !p_2)) in
                            begin
                              (((safe_upd_ S_j_p_2_10) jessie_128) jessie_125);
                             jessie_125
                            end)))
                           end)
                          end)
                         end) in
       void);
       (C_63:
       begin
         (let jessie_135 = (let jessie_131 = (C_60:
                                             ((safe_acc_ !S_i_p_2_10) 
                                              (C_59:
                                              ((safe_acc_ !T_a_p_2_10) !p_2)))) in
                           (let jessie_134 = (C_61:
                                             ((safe_acc_ !T_a_result_4) !__cil_tmp)) in
                           (((safe_upd_ S_i_result_4) jessie_134) jessie_131))) in
         void);
        (C_68:
        begin
          (let jessie_141 = (let jessie_137 = (C_65:
                                              ((safe_acc_ !S_j_p_2_10) 
                                               (C_64:
                                               ((safe_acc_ !T_a_p_2_10) !p_2)))) in
                            (let jessie_140 = (C_66:
                                              ((safe_acc_ !T_a_result_4) !__cil_tmp)) in
                            (((safe_upd_ S_j_result_4) jessie_140) jessie_137))) in
          void);
         (C_73:
         begin
           (let jessie_147 = (let jessie_143 = (C_70:
                                               ((safe_acc_ !S_i_p_2_10) 
                                                (C_69:
                                                ((safe_acc_ !T_b_p_2_10) !p_2)))) in
                             (let jessie_146 = (C_71:
                                               ((safe_acc_ !T_b_result_4) !__cil_tmp)) in
                             (((safe_upd_ S_i_result_4) jessie_146) jessie_143))) in
           void);
          (C_78:
          begin
            (let jessie_153 = (let jessie_149 = (C_75:
                                                ((safe_acc_ !S_j_p_2_10) 
                                                 (C_74:
                                                 ((safe_acc_ !T_b_p_2_10) !p_2)))) in
                              (let jessie_152 = (C_76:
                                                ((safe_acc_ !T_b_result_4) !__cil_tmp)) in
                              (((safe_upd_ S_j_result_4) jessie_152) jessie_149))) in
            void);
           (C_79:
           begin
             ((safe_free_parameter T_p_2_10_alloc_table) !p_2);
            (return := !__cil_tmp);
            (raise Return)
           end)
          end)
         end)
        end)
       end)
      end)
     end)))))))))));
    absurd 
   end
   with
   Return ->
   !return end))
  { (JC_45:
    ((JC_41:
     eq_int(integer_of_int32(select(S_i_result_4,
                             select(T_a_result_4, result))),
     integer_of_int32(select(S_i_v_p_2_3, select(T_a_v_p_2_3, v_p_2)))))
    and ((JC_42:
         eq_int(integer_of_int32(select(S_j_result_4,
                                 select(T_a_result_4, result))),
         integer_of_int32(select(S_j_v_p_2_3, select(T_a_v_p_2_3, v_p_2)))))
        and ((JC_43:
             eq_int(integer_of_int32(select(S_i_result_4,
                                     select(T_b_result_4, result))),
             integer_of_int32(select(S_i_v_p_2_3, select(T_b_v_p_2_3, v_p_2)))))
            and (JC_44:
                eq_int(integer_of_int32(select(S_j_result_4,
                                        select(T_b_result_4, result))),
                integer_of_int32(select(S_j_v_p_2_3,
                                 select(T_b_v_p_2_3, v_p_2))))))))) }

let id_safety =
 fun (v_p_2 : T pointer) (S_result_4_alloc_table : S alloc_table ref) (T_result_4_alloc_table : T alloc_table ref) (T_result_4_tag_table : T tag_table ref) (S_result_4_tag_table : S tag_table ref) (S_i_result_4 : (S, int32) memory ref) (S_j_result_4 : (S, int32) memory ref) (T_a_result_4 : (T, S pointer) memory ref) (T_b_result_4 : (T, S pointer) memory ref) (S_v_p_2_3_alloc_table : S alloc_table) (T_v_p_2_3_alloc_table : T alloc_table) (S_i_v_p_2_3 : (S, int32) memory) (S_j_v_p_2_3 : (S, int32) memory) (T_a_v_p_2_3 : (T, S pointer) memory) (T_b_v_p_2_3 : (T, S pointer) memory) ->
  { valid_struct_T(v_p_2, (0), (0), S_v_p_2_3_alloc_table,
    T_v_p_2_3_alloc_table, T_a_v_p_2_3, T_b_v_p_2_3) }
  (init:
  (let return = ref (any_pointer void) in
  try
   begin
     (let T_b_p_2_10 = ref (any_memory void) in
     (let T_a_p_2_10 = ref (any_memory void) in
     (let S_j_p_2_10 = ref (any_memory void) in
     (let S_i_p_2_10 = ref (any_memory void) in
     (let S_p_2_10_tag_table = ref (any_tag_table void) in
     (let T_p_2_10_tag_table = ref (any_tag_table void) in
     (let T_p_2_10_alloc_table = ref (any_alloc_table void) in
     (let S_p_2_10_alloc_table = ref (any_alloc_table void) in
     (let p_2 = ref (any_pointer void) in
     (let __cil_tmp = ref (any_pointer void) in
     (C_36:
     begin
       (let jessie_50 = (p_2 := (let jessie_49 = (C_35:
                                                 (JC_53:
                                                 ((((((alloc_struct_T_requires (1)) S_p_2_10_alloc_table) T_p_2_10_alloc_table) T_p_2_10_tag_table) !T_a_p_2_10) !T_b_p_2_10))) in
                                (JC_54:
                                (assert
                                { ge_int(offset_max(T_p_2_10_alloc_table,
                                         jessie_49),
                                  (0)) };
                                jessie_49)))) in
       void);
      (C_38:
      begin
        (let jessie_52 = (__cil_tmp := (let jessie_51 = (C_37:
                                                        (JC_55:
                                                        ((((((alloc_struct_T_requires (1)) S_result_4_alloc_table) T_result_4_alloc_table) T_result_4_tag_table) !T_a_result_4) !T_b_result_4))) in
                                       (JC_56:
                                       (assert
                                       { ge_int(offset_max(T_result_4_alloc_table,
                                                jessie_51),
                                         (0)) };
                                       jessie_51)))) in
        void);
       (let jessie_76 = (C_43:
                        begin
                          (let jessie_58 = (let jessie_54 = (C_40:
                                                            ((safe_acc_ S_i_v_p_2_3) 
                                                             (C_39:
                                                             ((safe_acc_ T_a_v_p_2_3) v_p_2)))) in
                                           (let jessie_57 = (C_41:
                                                            ((safe_acc_ !T_a_p_2_10) !p_2)) in
                                           (((safe_upd_ S_i_p_2_10) jessie_57) jessie_54))) in
                          void);
                         (C_48:
                         begin
                           (let jessie_64 = (let jessie_60 = (C_45:
                                                             ((safe_acc_ S_j_v_p_2_3) 
                                                              (C_44:
                                                              ((safe_acc_ T_a_v_p_2_3) v_p_2)))) in
                                            (let jessie_63 = (C_46:
                                                             ((safe_acc_ !T_a_p_2_10) !p_2)) in
                                            (((safe_upd_ S_j_p_2_10) jessie_63) jessie_60))) in
                           void);
                          (C_53:
                          begin
                            (let jessie_70 = (let jessie_66 = (C_50:
                                                              ((safe_acc_ S_i_v_p_2_3) 
                                                               (C_49:
                                                               ((safe_acc_ T_b_v_p_2_3) v_p_2)))) in
                                             (let jessie_69 = (C_51:
                                                              ((safe_acc_ !T_b_p_2_10) !p_2)) in
                                             (((safe_upd_ S_i_p_2_10) jessie_69) jessie_66))) in
                            void);
                           (C_58:
                           (let jessie_72 = (C_55:
                                            ((safe_acc_ S_j_v_p_2_3) 
                                             (C_54:
                                             ((safe_acc_ T_b_v_p_2_3) v_p_2)))) in
                           (let jessie_75 = (C_56:
                                            ((safe_acc_ !T_b_p_2_10) !p_2)) in
                           begin
                             (((safe_upd_ S_j_p_2_10) jessie_75) jessie_72);
                            jessie_72
                           end)))
                          end)
                         end)
                        end) in
       void);
       (C_63:
       begin
         (let jessie_82 = (let jessie_78 = (C_60:
                                           ((safe_acc_ !S_i_p_2_10) (C_59:
                                                                    ((safe_acc_ !T_a_p_2_10) !p_2)))) in
                          (let jessie_81 = (C_61:
                                           ((safe_acc_ !T_a_result_4) !__cil_tmp)) in
                          (((safe_upd_ S_i_result_4) jessie_81) jessie_78))) in
         void);
        (C_68:
        begin
          (let jessie_88 = (let jessie_84 = (C_65:
                                            ((safe_acc_ !S_j_p_2_10) 
                                             (C_64:
                                             ((safe_acc_ !T_a_p_2_10) !p_2)))) in
                           (let jessie_87 = (C_66:
                                            ((safe_acc_ !T_a_result_4) !__cil_tmp)) in
                           (((safe_upd_ S_j_result_4) jessie_87) jessie_84))) in
          void);
         (C_73:
         begin
           (let jessie_94 = (let jessie_90 = (C_70:
                                             ((safe_acc_ !S_i_p_2_10) 
                                              (C_69:
                                              ((safe_acc_ !T_b_p_2_10) !p_2)))) in
                            (let jessie_93 = (C_71:
                                             ((safe_acc_ !T_b_result_4) !__cil_tmp)) in
                            (((safe_upd_ S_i_result_4) jessie_93) jessie_90))) in
           void);
          (C_78:
          begin
            (let jessie_100 = (let jessie_96 = (C_75:
                                               ((safe_acc_ !S_j_p_2_10) 
                                                (C_74:
                                                ((safe_acc_ !T_b_p_2_10) !p_2)))) in
                              (let jessie_99 = (C_76:
                                               ((safe_acc_ !T_b_result_4) !__cil_tmp)) in
                              (((safe_upd_ S_j_result_4) jessie_99) jessie_96))) in
            void);
           (C_79:
           begin
             ((free_parameter T_p_2_10_alloc_table) !p_2);
            (return := !__cil_tmp);
            (raise Return)
           end)
          end)
         end)
        end)
       end)
      end)
     end)))))))))));
    absurd 
   end
   with
   Return ->
   !return end))
  { true }

let idp_ensures_default =
 fun (p : T pointer) (S_result_7_alloc_table : S alloc_table ref) (T_result_7_alloc_table : T alloc_table ref) (T_result_7_tag_table : T tag_table ref) (S_result_7_tag_table : S tag_table ref) (S_i_result_7 : (S, int32) memory ref) (S_j_result_7 : (S, int32) memory ref) (T_a_result_7 : (T, S pointer) memory ref) (T_b_result_7 : (T, S pointer) memory ref) (S_p_6_alloc_table : S alloc_table) (T_p_6_alloc_table : T alloc_table) (S_i_p_6 : (S, int32) memory) (S_j_p_6 : (S, int32) memory) (T_a_p_6 : (T, S pointer) memory) (T_b_p_6 : (T, S pointer) memory) ->
  { (JC_65:
    ((JC_63: le_int(offset_min(T_p_6_alloc_table, p), (0)))
    and (JC_64: ge_int(offset_max(T_p_6_alloc_table, p), (0))))) }
  (init:
  (let return = ref (any_pointer void) in
  try
   begin
     (let T_b___retres_14 = ref (any_memory void) in
     (let T_a___retres_14 = ref (any_memory void) in
     (let S_j___retres_14 = ref (any_memory void) in
     (let S_i___retres_14 = ref (any_memory void) in
     (let S___retres_14_tag_table = ref (any_tag_table void) in
     (let T___retres_14_tag_table = ref (any_tag_table void) in
     (let T___retres_14_alloc_table = ref (any_alloc_table void) in
     (let S___retres_14_alloc_table = ref (any_alloc_table void) in
     (let __retres = ref (any_pointer void) in
     (let __cil_tmp_0 = ref (any_pointer void) in
     (C_88:
     begin
       (let jessie_209 = (__retres := (C_87:
                                      (JC_87:
                                      ((((((alloc_struct_T (1)) S___retres_14_alloc_table) T___retres_14_alloc_table) T___retres_14_tag_table) !T_a___retres_14) !T_b___retres_14)))) in
       void);
      (C_90:
      begin
        (let jessie_211 = (__cil_tmp_0 := (C_89:
                                          (JC_88:
                                          ((((((alloc_struct_T (1)) S_result_7_alloc_table) T_result_7_alloc_table) T_result_7_tag_table) !T_a_result_7) !T_b_result_7)))) in
        void);
       (let jessie_235 = (C_95:
                         begin
                           (let jessie_217 = (let jessie_213 = (C_92:
                                                               ((safe_acc_ S_i_p_6) 
                                                                (C_91:
                                                                ((safe_acc_ T_a_p_6) p)))) in
                                             (let jessie_216 = (C_93:
                                                               ((safe_acc_ !T_a___retres_14) !__retres)) in
                                             (((safe_upd_ S_i___retres_14) jessie_216) jessie_213))) in
                           void);
                          (C_100:
                          begin
                            (let jessie_223 = (let jessie_219 = (C_97:
                                                                ((safe_acc_ S_j_p_6) 
                                                                 (C_96:
                                                                 ((safe_acc_ T_a_p_6) p)))) in
                                              (let jessie_222 = (C_98:
                                                                ((safe_acc_ !T_a___retres_14) !__retres)) in
                                              (((safe_upd_ S_j___retres_14) jessie_222) jessie_219))) in
                            void);
                           (C_105:
                           begin
                             (let jessie_229 = (let jessie_225 = (C_102:
                                                                 ((safe_acc_ S_i_p_6) 
                                                                  (C_101:
                                                                  ((safe_acc_ T_b_p_6) p)))) in
                                               (let jessie_228 = (C_103:
                                                                 ((safe_acc_ !T_b___retres_14) !__retres)) in
                                               (((safe_upd_ S_i___retres_14) jessie_228) jessie_225))) in
                             void);
                            (C_110:
                            (let jessie_231 = (C_107:
                                              ((safe_acc_ S_j_p_6) (C_106:
                                                                   ((safe_acc_ T_b_p_6) p)))) in
                            (let jessie_234 = (C_108:
                                              ((safe_acc_ !T_b___retres_14) !__retres)) in
                            begin
                              (((safe_upd_ S_j___retres_14) jessie_234) jessie_231);
                             jessie_231
                            end)))
                           end)
                          end)
                         end) in
       void);
       (C_115:
       begin
         (let jessie_241 = (let jessie_237 = (C_112:
                                             ((safe_acc_ !S_i___retres_14) 
                                              (C_111:
                                              ((safe_acc_ !T_a___retres_14) !__retres)))) in
                           (let jessie_240 = (C_113:
                                             ((safe_acc_ !T_a_result_7) !__cil_tmp_0)) in
                           (((safe_upd_ S_i_result_7) jessie_240) jessie_237))) in
         void);
        (C_120:
        begin
          (let jessie_247 = (let jessie_243 = (C_117:
                                              ((safe_acc_ !S_j___retres_14) 
                                               (C_116:
                                               ((safe_acc_ !T_a___retres_14) !__retres)))) in
                            (let jessie_246 = (C_118:
                                              ((safe_acc_ !T_a_result_7) !__cil_tmp_0)) in
                            (((safe_upd_ S_j_result_7) jessie_246) jessie_243))) in
          void);
         (C_125:
         begin
           (let jessie_253 = (let jessie_249 = (C_122:
                                               ((safe_acc_ !S_i___retres_14) 
                                                (C_121:
                                                ((safe_acc_ !T_b___retres_14) !__retres)))) in
                             (let jessie_252 = (C_123:
                                               ((safe_acc_ !T_b_result_7) !__cil_tmp_0)) in
                             (((safe_upd_ S_i_result_7) jessie_252) jessie_249))) in
           void);
          (C_130:
          begin
            (let jessie_259 = (let jessie_255 = (C_127:
                                                ((safe_acc_ !S_j___retres_14) 
                                                 (C_126:
                                                 ((safe_acc_ !T_b___retres_14) !__retres)))) in
                              (let jessie_258 = (C_128:
                                                ((safe_acc_ !T_b_result_7) !__cil_tmp_0)) in
                              (((safe_upd_ S_j_result_7) jessie_258) jessie_255))) in
            void);
           (C_131:
           begin
             ((safe_free_parameter T___retres_14_alloc_table) !__retres);
            (return := !__cil_tmp_0);
            (raise Return)
           end)
          end)
         end)
        end)
       end)
      end)
     end)))))))))));
    absurd 
   end
   with
   Return ->
   !return end))
  { (JC_71:
    ((JC_67:
     eq_int(integer_of_int32(select(S_i_result_7,
                             select(T_a_result_7, result))),
     integer_of_int32(select(S_i_p_6, select(T_a_p_6, p)))))
    and ((JC_68:
         eq_int(integer_of_int32(select(S_j_result_7,
                                 select(T_a_result_7, result))),
         integer_of_int32(select(S_j_p_6, select(T_a_p_6, p)))))
        and ((JC_69:
             eq_int(integer_of_int32(select(S_i_result_7,
                                     select(T_b_result_7, result))),
             integer_of_int32(select(S_i_p_6, select(T_b_p_6, p)))))
            and (JC_70:
                eq_int(integer_of_int32(select(S_j_result_7,
                                        select(T_b_result_7, result))),
                integer_of_int32(select(S_j_p_6, select(T_b_p_6, p))))))))) }

let idp_safety =
 fun (p : T pointer) (S_result_7_alloc_table : S alloc_table ref) (T_result_7_alloc_table : T alloc_table ref) (T_result_7_tag_table : T tag_table ref) (S_result_7_tag_table : S tag_table ref) (S_i_result_7 : (S, int32) memory ref) (S_j_result_7 : (S, int32) memory ref) (T_a_result_7 : (T, S pointer) memory ref) (T_b_result_7 : (T, S pointer) memory ref) (S_p_6_alloc_table : S alloc_table) (T_p_6_alloc_table : T alloc_table) (S_i_p_6 : (S, int32) memory) (S_j_p_6 : (S, int32) memory) (T_a_p_6 : (T, S pointer) memory) (T_b_p_6 : (T, S pointer) memory) ->
  { (JC_65:
    ((JC_63: le_int(offset_min(T_p_6_alloc_table, p), (0)))
    and (JC_64: ge_int(offset_max(T_p_6_alloc_table, p), (0))))) }
  (init:
  (let return = ref (any_pointer void) in
  try
   begin
     (let T_b___retres_14 = ref (any_memory void) in
     (let T_a___retres_14 = ref (any_memory void) in
     (let S_j___retres_14 = ref (any_memory void) in
     (let S_i___retres_14 = ref (any_memory void) in
     (let S___retres_14_tag_table = ref (any_tag_table void) in
     (let T___retres_14_tag_table = ref (any_tag_table void) in
     (let T___retres_14_alloc_table = ref (any_alloc_table void) in
     (let S___retres_14_alloc_table = ref (any_alloc_table void) in
     (let __retres = ref (any_pointer void) in
     (let __cil_tmp_0 = ref (any_pointer void) in
     (C_88:
     begin
       (let jessie_156 = (__retres := (let jessie_155 = (C_87:
                                                        (JC_79:
                                                        ((((((alloc_struct_T_requires (1)) S___retres_14_alloc_table) T___retres_14_alloc_table) T___retres_14_tag_table) !T_a___retres_14) !T_b___retres_14))) in
                                      (JC_80:
                                      (assert
                                      { ge_int(offset_max(T___retres_14_alloc_table,
                                               jessie_155),
                                        (0)) };
                                      jessie_155)))) in
       void);
      (C_90:
      begin
        (let jessie_158 = (__cil_tmp_0 := (let jessie_157 = (C_89:
                                                            (JC_81:
                                                            ((((((alloc_struct_T_requires (1)) S_result_7_alloc_table) T_result_7_alloc_table) T_result_7_tag_table) !T_a_result_7) !T_b_result_7))) in
                                          (JC_82:
                                          (assert
                                          { ge_int(offset_max(T_result_7_alloc_table,
                                                   jessie_157),
                                            (0)) };
                                          jessie_157)))) in
        void);
       (let jessie_182 = (C_95:
                         begin
                           (let jessie_164 = (let jessie_160 = (C_92:
                                                               ((safe_acc_ S_i_p_6) 
                                                                (C_91:
                                                                (JC_83:
                                                                (((acc_ T_p_6_alloc_table) T_a_p_6) p))))) in
                                             (let jessie_163 = (C_93:
                                                               ((safe_acc_ !T_a___retres_14) !__retres)) in
                                             (((safe_upd_ S_i___retres_14) jessie_163) jessie_160))) in
                           void);
                          (C_100:
                          begin
                            (let jessie_170 = (let jessie_166 = (C_97:
                                                                ((safe_acc_ S_j_p_6) 
                                                                 (C_96:
                                                                 (JC_84:
                                                                 (((acc_ T_p_6_alloc_table) T_a_p_6) p))))) in
                                              (let jessie_169 = (C_98:
                                                                ((safe_acc_ !T_a___retres_14) !__retres)) in
                                              (((safe_upd_ S_j___retres_14) jessie_169) jessie_166))) in
                            void);
                           (C_105:
                           begin
                             (let jessie_176 = (let jessie_172 = (C_102:
                                                                 ((safe_acc_ S_i_p_6) 
                                                                  (C_101:
                                                                  (JC_85:
                                                                  (((acc_ T_p_6_alloc_table) T_b_p_6) p))))) in
                                               (let jessie_175 = (C_103:
                                                                 ((safe_acc_ !T_b___retres_14) !__retres)) in
                                               (((safe_upd_ S_i___retres_14) jessie_175) jessie_172))) in
                             void);
                            (C_110:
                            (let jessie_178 = (C_107:
                                              ((safe_acc_ S_j_p_6) (C_106:
                                                                   (JC_86:
                                                                   (((acc_ T_p_6_alloc_table) T_b_p_6) p))))) in
                            (let jessie_181 = (C_108:
                                              ((safe_acc_ !T_b___retres_14) !__retres)) in
                            begin
                              (((safe_upd_ S_j___retres_14) jessie_181) jessie_178);
                             jessie_178
                            end)))
                           end)
                          end)
                         end) in
       void);
       (C_115:
       begin
         (let jessie_188 = (let jessie_184 = (C_112:
                                             ((safe_acc_ !S_i___retres_14) 
                                              (C_111:
                                              ((safe_acc_ !T_a___retres_14) !__retres)))) in
                           (let jessie_187 = (C_113:
                                             ((safe_acc_ !T_a_result_7) !__cil_tmp_0)) in
                           (((safe_upd_ S_i_result_7) jessie_187) jessie_184))) in
         void);
        (C_120:
        begin
          (let jessie_194 = (let jessie_190 = (C_117:
                                              ((safe_acc_ !S_j___retres_14) 
                                               (C_116:
                                               ((safe_acc_ !T_a___retres_14) !__retres)))) in
                            (let jessie_193 = (C_118:
                                              ((safe_acc_ !T_a_result_7) !__cil_tmp_0)) in
                            (((safe_upd_ S_j_result_7) jessie_193) jessie_190))) in
          void);
         (C_125:
         begin
           (let jessie_200 = (let jessie_196 = (C_122:
                                               ((safe_acc_ !S_i___retres_14) 
                                                (C_121:
                                                ((safe_acc_ !T_b___retres_14) !__retres)))) in
                             (let jessie_199 = (C_123:
                                               ((safe_acc_ !T_b_result_7) !__cil_tmp_0)) in
                             (((safe_upd_ S_i_result_7) jessie_199) jessie_196))) in
           void);
          (C_130:
          begin
            (let jessie_206 = (let jessie_202 = (C_127:
                                                ((safe_acc_ !S_j___retres_14) 
                                                 (C_126:
                                                 ((safe_acc_ !T_b___retres_14) !__retres)))) in
                              (let jessie_205 = (C_128:
                                                ((safe_acc_ !T_b_result_7) !__cil_tmp_0)) in
                              (((safe_upd_ S_j_result_7) jessie_205) jessie_202))) in
            void);
           (C_131:
           begin
             ((free_parameter T___retres_14_alloc_table) !__retres);
            (return := !__cil_tmp_0);
            (raise Return)
           end)
          end)
         end)
        end)
       end)
      end)
     end)))))))))));
    absurd 
   end
   with
   Return ->
   !return end))
  { true }


WHYLIB=WHYHOME/lib WHYEXEC=WHYHOME/bin/why.opt GWHYEXEC=WHYHOME/bin/gwhy.opt make --quiet -C copy_struct.jessie --quiet -f copy_struct.makefile project
why --project [...] why/copy_struct.why
<project name="copy_struct" context="why/copy_struct_ctx.why">
  <function name="Function idp">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/copy_struct_po48.why">
      <location file = "PPCHOME/tests/jessie/" line = "0" begin = "-1" end = "-1"/>
      <explain kind = "Pre"
text = "AllocSize"/>
    </goal>
    <goal why_file="why/copy_struct_po49.why">
      <location file = "why/copy_struct.why" line = "1984" begin = "40" end = "189"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/copy_struct_po50.why">
      <location file = "PPCHOME/tests/jessie/" line = "0" begin = "-1" end = "-1"/>
      <explain kind = "Pre"
text = "AllocSize"/>
    </goal>
    <goal why_file="why/copy_struct_po51.why">
      <location file = "why/copy_struct.why" line = "1996" begin = "44" end = "198"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/copy_struct_po52.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "33" begin = "2" end = "8"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/copy_struct_po53.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "33" begin = "2" end = "8"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/copy_struct_po54.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "33" begin = "2" end = "8"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/copy_struct_po55.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "33" begin = "2" end = "8"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/copy_struct_po56.why">
      <location file = "why/copy_struct.why" line = "2091" begin = "14" end = "66"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    </behavior>
    <behavior name="Default behavior">
    <goal why_file="why/copy_struct_po44.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "29" begin = "12" end = "33"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/copy_struct_po45.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "29" begin = "37" end = "58"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/copy_struct_po46.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "30" begin = "12" end = "33"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/copy_struct_po47.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "30" begin = "37" end = "58"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Function id">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/copy_struct_po39.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "24" begin = "21" end = "22"/>
      <explain kind = "Pre"
text = "AllocSize"/>
    </goal>
    <goal why_file="why/copy_struct_po40.why">
      <location file = "why/copy_struct.why" line = "1688" begin = "34" end = "165"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/copy_struct_po41.why">
      <location file = "PPCHOME/tests/jessie/" line = "0" begin = "-1" end = "-1"/>
      <explain kind = "Pre"
text = "AllocSize"/>
    </goal>
    <goal why_file="why/copy_struct_po42.why">
      <location file = "why/copy_struct.why" line = "1700" begin = "41" end = "188"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/copy_struct_po43.why">
      <location file = "why/copy_struct.why" line = "1791" begin = "14" end = "56"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    </behavior>
    <behavior name="Default behavior">
    <goal why_file="why/copy_struct_po35.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "21" begin = "12" end = "32"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/copy_struct_po36.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "21" begin = "36" end = "56"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/copy_struct_po37.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "22" begin = "12" end = "32"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/copy_struct_po38.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "22" begin = "36" end = "56"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Function g">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/copy_struct_po22.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "39" begin = "11" end = "15"/>
      <explain kind = "Pre"
text = "AllocSize"/>
    </goal>
    <goal why_file="why/copy_struct_po23.why">
      <location file = "why/copy_struct.why" line = "1303" begin = "36" end = "173"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/copy_struct_po24.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "40" begin = "11" end = "16"/>
      <explain kind = "Pre"
text = "AllocSize"/>
    </goal>
    <goal why_file="why/copy_struct_po25.why">
      <location file = "why/copy_struct.why" line = "1315" begin = "38" end = "180"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/copy_struct_po26.why">
      <location file = "why/copy_struct.why" line = "1326" begin = "45" end = "413"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/copy_struct_po27.why">
      <location file = "why/copy_struct.why" line = "1326" begin = "45" end = "413"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/copy_struct_po28.why">
      <location file = "why/copy_struct.why" line = "1380" begin = "17" end = "73"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/copy_struct_po29.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "40" begin = "2" end = "8"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/copy_struct_po30.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "40" begin = "2" end = "8"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/copy_struct_po31.why">
      <location file = "why/copy_struct.why" line = "1434" begin = "17" end = "75"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/copy_struct_po32.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "45" begin = "2" end = "3"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/copy_struct_po33.why">
      <location file = "why/copy_struct.why" line = "1494" begin = "13" end = "57"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/copy_struct_po34.why">
      <location file = "why/copy_struct.why" line = "1497" begin = "14" end = "60"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    </behavior>
    <behavior name="Default behavior">
    <goal why_file="why/copy_struct_po17.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "42" begin = "13" end = "31"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/copy_struct_po18.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "44" begin = "13" end = "32"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/copy_struct_po19.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "46" begin = "13" end = "34"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/copy_struct_po20.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "47" begin = "13" end = "31"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/copy_struct_po21.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "47" begin = "23" end = "44"/>
      <explain kind = "Assert"/>
    </goal>
    </behavior>
  </function>
  <function name="Function f">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/copy_struct_po5.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "18" begin = "2" end = "3"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/copy_struct_po6.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "18" begin = "2" end = "3"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/copy_struct_po7.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "18" begin = "2" end = "3"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/copy_struct_po8.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "18" begin = "2" end = "3"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/copy_struct_po9.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "18" begin = "2" end = "3"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/copy_struct_po10.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "18" begin = "2" end = "3"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/copy_struct_po11.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "18" begin = "2" end = "3"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/copy_struct_po12.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "18" begin = "2" end = "3"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/copy_struct_po13.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "18" begin = "2" end = "3"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/copy_struct_po14.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "18" begin = "2" end = "3"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/copy_struct_po15.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "18" begin = "2" end = "3"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/copy_struct_po16.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "18" begin = "2" end = "3"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    </behavior>
    <behavior name="Default behavior">
    <goal why_file="why/copy_struct_po1.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "14" begin = "12" end = "28"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/copy_struct_po2.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "14" begin = "32" end = "48"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/copy_struct_po3.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "15" begin = "12" end = "28"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/copy_struct_po4.why">
      <location file = "PPCHOME/tests/jessie/copy_struct.c" line = "15" begin = "32" end = "48"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
</project>
logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic div_int : int, int -> int

logic mod_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

logic bool_and : bool, bool -> bool

logic bool_or : bool, bool -> bool

logic bool_xor : bool, bool -> bool

logic bool_not : bool -> bool

axiom bool_and_def:
  (forall a:bool.
    (forall b:bool.
      ((bool_and(a, b) = true) <-> ((a = true) and (b = true)))))

axiom bool_or_def:
  (forall a:bool.
    (forall b:bool. ((bool_or(a, b) = true) <-> ((a = true) or (b = true)))))

axiom bool_xor_def:
  (forall a:bool. (forall b:bool. ((bool_xor(a, b) = true) <-> (a <> b))))

axiom bool_not_def: (forall a:bool. ((bool_not(a) = true) <-> (a = false)))

logic ite : bool, 'a1, 'a1 -> 'a1

axiom ite_true: (forall x:'a1. (forall y:'a1. (ite(true, x, y) = x)))

axiom ite_false: (forall x:'a1. (forall y:'a1. (ite(false, x, y) = y)))

logic lt_int_bool : int, int -> bool

logic le_int_bool : int, int -> bool

logic gt_int_bool : int, int -> bool

logic ge_int_bool : int, int -> bool

logic eq_int_bool : int, int -> bool

logic neq_int_bool : int, int -> bool

axiom lt_int_bool_axiom:
  (forall x:int. (forall y:int. ((lt_int_bool(x, y) = true) <-> (x < y))))

axiom le_int_bool_axiom:
  (forall x:int. (forall y:int. ((le_int_bool(x, y) = true) <-> (x <= y))))

axiom gt_int_bool_axiom:
  (forall x:int. (forall y:int. ((gt_int_bool(x, y) = true) <-> (x > y))))

axiom ge_int_bool_axiom:
  (forall x:int. (forall y:int. ((ge_int_bool(x, y) = true) <-> (x >= y))))

axiom eq_int_bool_axiom:
  (forall x:int. (forall y:int. ((eq_int_bool(x, y) = true) <-> (x = y))))

axiom neq_int_bool_axiom:
  (forall x:int. (forall y:int. ((neq_int_bool(x, y) = true) <-> (x <> y))))

logic abs_int : int -> int

axiom abs_int_pos: (forall x:int. ((x >= 0) -> (abs_int(x) = x)))

axiom abs_int_neg: (forall x:int. ((x <= 0) -> (abs_int(x) = (-x))))

logic int_max : int, int -> int

logic int_min : int, int -> int

axiom int_max_is_ge:
  (forall x:int.
    (forall y:int. ((int_max(x, y) >= x) and (int_max(x, y) >= y))))

axiom int_max_is_some:
  (forall x:int.
    (forall y:int. ((int_max(x, y) = x) or (int_max(x, y) = y))))

axiom int_min_is_le:
  (forall x:int.
    (forall y:int. ((int_min(x, y) <= x) and (int_min(x, y) <= y))))

axiom int_min_is_some:
  (forall x:int.
    (forall y:int. ((int_min(x, y) = x) or (int_min(x, y) = y))))

logic lt_real : real, real -> prop

logic le_real : real, real -> prop

logic gt_real : real, real -> prop

logic ge_real : real, real -> prop

logic eq_real : real, real -> prop

logic neq_real : real, real -> prop

logic add_real : real, real -> real

logic sub_real : real, real -> real

logic mul_real : real, real -> real

logic div_real : real, real -> real

logic neg_real : real -> real

logic real_of_int : int -> real

axiom real_of_int_zero: (real_of_int(0) = 0.0)

axiom real_of_int_one: (real_of_int(1) = 1.0)

axiom real_of_int_add:
  (forall x:int.
    (forall y:int.
      (real_of_int((x + y)) = (real_of_int(x) + real_of_int(y)))))

axiom real_of_int_sub:
  (forall x:int.
    (forall y:int.
      (real_of_int((x - y)) = (real_of_int(x) - real_of_int(y)))))

logic truncate_real_to_int : real -> int

axiom truncate_down_pos:
  (forall x:real.
    ((x >= 0.0) ->
     ((real_of_int(truncate_real_to_int(x)) <= x) and
      (x < real_of_int((truncate_real_to_int(x) + 1))))))

axiom truncate_up_neg:
  (forall x:real.
    ((x <= 0.0) ->
     ((real_of_int((truncate_real_to_int(x) - 1)) < x) and
      (x <= real_of_int(truncate_real_to_int(x))))))

logic floor_real_to_int : real -> int

logic ceil_real_to_int : real -> int

logic lt_real_bool : real, real -> bool

logic le_real_bool : real, real -> bool

logic gt_real_bool : real, real -> bool

logic ge_real_bool : real, real -> bool

logic eq_real_bool : real, real -> bool

logic neq_real_bool : real, real -> bool

axiom lt_real_bool_axiom:
  (forall x:real. (forall y:real. ((lt_real_bool(x, y) = true) <-> (x < y))))

axiom le_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((le_real_bool(x, y) = true) <-> (x <= y))))

axiom gt_real_bool_axiom:
  (forall x:real. (forall y:real. ((gt_real_bool(x, y) = true) <-> (x > y))))

axiom ge_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((ge_real_bool(x, y) = true) <-> (x >= y))))

axiom eq_real_bool_axiom:
  (forall x:real. (forall y:real. ((eq_real_bool(x, y) = true) <-> (x = y))))

axiom neq_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((neq_real_bool(x, y) = true) <-> (x <> y))))

logic real_max : real, real -> real

logic real_min : real, real -> real

axiom real_max_is_ge:
  (forall x:real.
    (forall y:real. ((real_max(x, y) >= x) and (real_max(x, y) >= y))))

axiom real_max_is_some:
  (forall x:real.
    (forall y:real. ((real_max(x, y) = x) or (real_max(x, y) = y))))

axiom real_min_is_le:
  (forall x:real.
    (forall y:real. ((real_min(x, y) <= x) and (real_min(x, y) <= y))))

axiom real_min_is_some:
  (forall x:real.
    (forall y:real. ((real_min(x, y) = x) or (real_min(x, y) = y))))

function sqr_real(x: real) : real = (x * x)

logic sqrt_real : real -> real

axiom sqrt_pos: (forall x:real. ((x >= 0.0) -> (sqrt_real(x) >= 0.0)))

axiom sqrt_sqr: (forall x:real. ((x >= 0.0) -> (sqr_real(sqrt_real(x)) = x)))

axiom sqr_sqrt: (forall x:real. ((x >= 0.0) -> (sqrt_real((x * x)) = x)))

logic pow_real : real, real -> real

logic abs_real : real -> real

axiom abs_real_pos:
  (forall x:real [abs_real(x)]. ((x >= 0.0) -> (abs_real(x) = x)))

axiom abs_real_neg:
  (forall x:real [abs_real(x)]. ((x <= 0.0) -> (abs_real(x) = (-x))))

logic exp : real -> real

logic log : real -> real

logic log10 : real -> real

axiom log_exp: (forall x:real. (log(exp(x)) = x))

axiom exp_log: (forall x:real. ((x > 0.0) -> (exp(log(x)) = x)))

logic cos : real -> real

logic sin : real -> real

logic tan : real -> real

logic cosh : real -> real

logic sinh : real -> real

logic tanh : real -> real

logic acos : real -> real

logic asin : real -> real

logic atan : real -> real

logic atan2 : real, real -> real

logic hypot : real, real -> real

axiom prod_pos:
  (forall x:real.
    (forall y:real.
      ((((x > 0.0) and (y > 0.0)) -> ((x * y) > 0.0)) and
       (((x < 0.0) and (y < 0.0)) -> ((x * y) > 0.0)))))

axiom abs_minus: (forall x:real. (abs_real((-x)) = abs_real(x)))

type 't alloc_table

type 't pointer

type 't block

logic base_block : 'a1 pointer -> 'a1 block

logic offset_max : 'a1 alloc_table, 'a1 pointer -> int

logic offset_min : 'a1 alloc_table, 'a1 pointer -> int

predicate valid(a: 'a1 alloc_table, p: 'a1 pointer) =
  ((offset_min(a, p) <= 0) and (offset_max(a, p) >= 0))

predicate same_block(p: 'a1 pointer, q: 'a1 pointer) =
  (base_block(p) = base_block(q))

logic sub_pointer : 'a1 pointer, 'a1 pointer -> int

logic shift : 'a1 pointer, int -> 'a1 pointer

logic null : 'a1 pointer

logic pointer_address : 'a1 pointer -> unit pointer

logic absolute_address : int -> unit pointer

logic address : 'a1 pointer -> int

axiom address_injective:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. ((p = q) <-> (address(p) = address(q)))))

axiom address_null: (address(null) = 0)

axiom address_shift_lt:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) < address(shift(p, j))) <-> (i < j)))))

axiom address_shift_le:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) <= address(shift(p, j))) <-> (i <= j)))))

axiom shift_zero: (forall p:'a1 pointer [shift(p, 0)]. (shift(p, 0) = p))

axiom shift_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(shift(p, i), j)]. (shift(shift(p, i),
        j) = shift(p, (i + j))))))

axiom offset_max_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_max(a, shift(p, i)) = (offset_max(a, p) - i)))))

axiom offset_min_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_min(a, shift(p, i)) = (offset_min(a, p) - i)))))

axiom neq_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(p, i), shift(p, j)].
        ((i <> j) -> (shift(p, i) <> shift(p, j))))))

axiom null_not_valid: (forall a:'a1 alloc_table. (not valid(a, null)))

axiom null_pointer:
  (forall a:'a1 alloc_table.
    ((offset_min(a, null) >= 0) and (offset_max(a, null) <= (-2))))

logic eq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

logic neq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

axiom eq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer. ((eq_pointer_bool(p1, p2) = true) <-> (p1 = p2))))

axiom neq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer.
      ((neq_pointer_bool(p1, p2) = true) <-> (p1 <> p2))))

axiom same_block_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(p, shift(q, i))].
        (same_block(p, q) -> same_block(p, shift(q, i))))))

axiom same_block_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(shift(q, i), p)].
        (same_block(q, p) -> same_block(shift(q, i), p)))))

axiom sub_pointer_shift:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> (p = shift(q, sub_pointer(p, q))))))

axiom sub_pointer_self:
  (forall p:'a1 pointer [sub_pointer(p, p)]. (sub_pointer(p, p) = 0))

axiom sub_pointer_zero:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> ((sub_pointer(p, q) = 0) -> (p = q)))))

axiom sub_pointer_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(shift(p, i), q)]. (sub_pointer(shift(p, i),
        q) = (sub_pointer(p, q) + i)))))

axiom sub_pointer_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(p, shift(q, i))]. (sub_pointer(p, shift(q,
        i)) = (sub_pointer(p, q) - i)))))

type ('t, 'v) memory

logic select : ('a2, 'a1) memory, 'a2 pointer -> 'a1

logic store : ('a1, 'a2) memory, 'a1 pointer, 'a2 -> ('a1, 'a2) memory

axiom select_store_eq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 = p2) -> (select(store(m, p1, a), p2) = a))))))

axiom select_store_neq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 <> p2) -> (select(store(m, p1, a), p2) = select(m, p2)))))))

type 't pset

logic pset_empty : 'a1 pset

logic pset_singleton : 'a1 pointer -> 'a1 pset

logic pset_deref : ('a2, 'a1 pointer) memory, 'a2 pset -> 'a1 pset

logic pset_union : 'a1 pset, 'a1 pset -> 'a1 pset

logic pset_all : 'a1 pset -> 'a1 pset

logic pset_range : 'a1 pset, int, int -> 'a1 pset

logic pset_range_left : 'a1 pset, int -> 'a1 pset

logic pset_range_right : 'a1 pset, int -> 'a1 pset

logic in_pset : 'a1 pointer, 'a1 pset -> prop

logic valid_pset : 'a1 alloc_table, 'a1 pset -> prop

predicate pset_disjoint(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (not (in_pset(p, ps1) and in_pset(p, ps2))))

predicate pset_included(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (in_pset(p, ps1) -> in_pset(p, ps2)))

axiom pset_included_self: (forall ps:'a1 pset. pset_included(ps, ps))

axiom pset_included_range:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))].
            (((c <= a) and (b <= d)) -> pset_included(pset_range(ps, a, b),
             pset_range(ps, c, d))))))))

axiom pset_included_range_all:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))]. pset_included(pset_range(ps, a, b), pset_all(ps)))))))

axiom in_pset_empty: (forall p:'a1 pointer. (not in_pset(p, pset_empty)))

axiom in_pset_singleton:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. (in_pset(p, pset_singleton(q)) <-> (p = q))))

axiom in_pset_deref:
  (forall p:'a1 pointer.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (in_pset(p, pset_deref(m, q)) <->
         (exists r:'a2 pointer. (in_pset(r, q) and (p = select(m, r))))))))

axiom in_pset_all:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (in_pset(p, pset_all(q)) <->
       (exists i:int.
         (exists r:'a1 pointer. (in_pset(r, q) and (p = shift(r, i))))))))

axiom in_pset_range:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (forall b:int.
          (in_pset(p, pset_range(q, a, b)) <->
           (exists i:int.
             (exists r:'a1 pointer.
               ((a <= i) and
                ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))))

axiom in_pset_range_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall b:int.
        (in_pset(p, pset_range_left(q, b)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_range_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (in_pset(p, pset_range_right(q, a)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((a <= i) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_union:
  (forall p:'a1 pointer.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (in_pset(p, pset_union(s1, s2)) <->
         (in_pset(p, s1) or in_pset(p, s2))))))

axiom valid_pset_empty: (forall a:'a1 alloc_table. valid_pset(a, pset_empty))

axiom valid_pset_singleton:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (valid_pset(a, pset_singleton(p)) <-> valid(a, p))))

axiom valid_pset_deref:
  (forall a:'a1 alloc_table.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (valid_pset(a, pset_deref(m, q)) <->
         (forall r:'a2 pointer.
           (forall p:'a1 pointer.
             ((in_pset(r, q) and (p = select(m, r))) -> valid(a, p))))))))

axiom valid_pset_range:
  (forall a:'a1 alloc_table.
    (forall q:'a1 pset.
      (forall c:int.
        (forall d:int.
          (valid_pset(a, pset_range(q, c, d)) <->
           (forall i:int.
             (forall r:'a1 pointer.
               ((in_pset(r, q) and ((c <= i) and (i <= d))) -> valid(a,
                shift(r, i))))))))))

axiom valid_pset_union:
  (forall a:'a1 alloc_table.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (valid_pset(a, pset_union(s1, s2)) <->
         (valid_pset(a, s1) and valid_pset(a, s2))))))

predicate not_assigns(a: 'a1 alloc_table, m1: ('a1, 'a2) memory, m2: ('a1,
  'a2) memory, l: 'a1 pset) =
  (forall p:'a1 pointer.
    ((valid(a, p) and (not in_pset(p, l))) -> (select(m2, p) = select(m1, p))))

axiom not_assigns_refl:
  (forall a:'a1 alloc_table.
    (forall m:('a1, 'a2) memory.
      (forall l:'a1 pset. not_assigns(a, m, m, l))))

axiom not_assigns_trans:
  (forall a:'a1 alloc_table.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory.
          (forall l:'a1 pset [not_assigns(a, m1, m2, l), not_assigns(a, m1,
            m3, l)].
            (not_assigns(a, m1, m2, l) ->
             (not_assigns(a, m2, m3, l) -> not_assigns(a, m1, m3, l))))))))

logic full_separated : 'a1 pointer, 'a2 pointer -> prop

axiom full_separated_shift1:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(p, shift(q, i))))))

axiom full_separated_shift2:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift3:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift4:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(p, shift(q, i))))))

type 't tag_table

type 't tag_id

logic int_of_tag : 'a1 tag_id -> int

logic typeof : 'a1 tag_table, 'a1 pointer -> 'a1 tag_id

logic parenttag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag_bool : 'a1 tag_id, 'a1 tag_id -> bool

axiom subtag_bool_def:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id. ((subtag_bool(t1, t2) = true) <-> subtag(t1, t2))))

axiom subtag_refl: (forall t:'a1 tag_id. subtag(t, t))

axiom subtag_parent:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id.
      (forall t3:'a1 tag_id.
        (subtag(t1, t2) -> (parenttag(t2, t3) -> subtag(t1, t3))))))

predicate instanceof(a: 'a1 tag_table, p: 'a1 pointer, t: 'a1 tag_id) =
  subtag(typeof(a, p), t)

logic downcast : 'a1 tag_table, 'a1 pointer, 'a1 tag_id -> 'a1 pointer

axiom downcast_instanceof:
  (forall a:'a1 tag_table.
    (forall p:'a1 pointer.
      (forall s:'a1 tag_id. (instanceof(a, p, s) -> (downcast(a, p, s) = p)))))

logic bottom_tag : 'a1 tag_id

axiom bottom_tag_axiom: (forall t:'a1 tag_id. subtag(t, bottom_tag))

predicate root_tag(t: 'a1 tag_id) = parenttag(t, bottom_tag)

axiom root_subtag:
  (forall a:'a1 tag_id.
    (forall b:'a1 tag_id.
      (forall c:'a1 tag_id.
        (root_tag(a) ->
         (root_tag(b) -> ((a <> b) -> (subtag(c, a) -> (not subtag(c, b)))))))))

predicate fully_packed(tag_table: 'a1 tag_table, mutable: ('a1,
  'a1 tag_id) memory, this: 'a1 pointer) = (select(mutable,
  this) = typeof(tag_table, this))

logic bw_compl : int -> int

logic bw_and : int, int -> int

axiom bw_and_not_null:
  (forall a:int.
    (forall b:int. ((bw_and(a, b) <> 0) -> ((a <> 0) and (b <> 0)))))

logic bw_xor : int, int -> int

logic bw_or : int, int -> int

logic lsl : int, int -> int

axiom lsl_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsl(a, b)))))

axiom lsl_left_positive_monotone:
  (forall a1:int.
    (forall a2:int.
      (forall b:int.
        (((0 <= a1) and ((a1 <= a2) and (0 <= b))) -> (lsl(a1, b) <= lsl(a2,
         b))))))

logic lsr : int, int -> int

axiom lsr_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsr(a, b)))))

axiom lsr_left_positive_decreases:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(a, b) <= a))))

logic asr : int, int -> int

axiom asr_positive_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= asr(a, b)))))

axiom asr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) <= a))))

axiom asr_lsr_same_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) = lsr(a, b)))))

axiom lsl_of_lsr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsl(lsr(a, b), b) <= a))))

axiom lsr_of_lsl_identity_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(lsl(a, b), b) = a))))

logic alloc_extends : 'a1 alloc_table, 'a1 alloc_table -> prop

predicate alloc_fresh(a: 'a1 alloc_table, p: 'a1 pointer, n: int) =
  (forall i:int. (((0 <= i) and (i < n)) -> (not valid(a, shift(p, i)))))

axiom alloc_extends_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_min(a1, p) = offset_min(a2, p)))))))

axiom alloc_extends_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_max(a1, p) = offset_max(a2, p)))))))

axiom alloc_extends_not_assigns_empty:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory.
          (forall l:'a1 pset.
            (forall p:'a1 pointer.
              (forall n:int [alloc_extends(a1, a2), alloc_fresh(a1, p, n),
                not_assigns(a2, m1, m2, l)].
                ((alloc_extends(a1, a2) and
                  (alloc_fresh(a1, p, n) and
                   (not_assigns(a2, m1, m2, l) and pset_included(l,
                    pset_all(pset_singleton(p)))))) ->
                 not_assigns(a1, m1, m2, pset_empty)))))))))

logic alloc_extends_except : 'a1 alloc_table, 'a1 alloc_table,
'a1 pset -> prop

axiom alloc_extends_except_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_min(a1,
            p) = offset_min(a2, p))))))))

axiom alloc_extends_except_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_max(a1,
            p) = offset_max(a2, p))))))))

type bitvector

logic concat_bitvector : bitvector, bitvector -> bitvector

logic offset_min_bytes : 'a1 alloc_table, 'a1 pointer, int -> int

logic offset_max_bytes : 'a1 alloc_table, 'a1 pointer, int -> int

axiom offset_min_bytes_def:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall s:int [offset_min_bytes(a, p, s)].
        ((0 < s) ->
         ((offset_min(a, p) <= (s * offset_min_bytes(a, p, s))) and
          (((s * offset_min_bytes(a, p, s)) - s) < offset_min(a, p)))))))

axiom offset_max_bytes_def:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall s:int [offset_max_bytes(a, p, s)].
        ((0 < s) ->
         (((((s * offset_max_bytes(a, p, s)) + s) - 1) <= offset_max(a,
          p)) and (offset_max(a, p) < ((((s * offset_max_bytes(a, p,
          s)) + s) + s) - 1)))))))

logic extract_bytes : bitvector, int, int -> bitvector

logic replace_bytes : bitvector, int, int, bitvector -> bitvector

axiom select_store_eq_union:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector [extract_bytes(replace_bytes(v1, o1, s1,
              v2), o2, s2)].
              (((o1 = o2) and (s1 = s2)) -> (extract_bytes(replace_bytes(v1,
               o1, s1, v2), o2, s2) = v2))))))))

axiom select_store_neq_union:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector [extract_bytes(replace_bytes(v1, o1, s1,
              v2), o2, s2)].
              ((((o2 + s2) <= o1) or ((o1 + s2) <= o2)) ->
               (extract_bytes(replace_bytes(v1, o1, s1, v2), o2,
               s2) = extract_bytes(v1, o2, s2)))))))))

axiom concat_replace_bytes_up:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector.
              (forall v3:bitvector [replace_bytes(replace_bytes(v1, o1, s1,
                v2), o2, s2, v3)].
                (((o1 + s1) = o2) -> (replace_bytes(replace_bytes(v1, o1, s1,
                 v2), o2, s2, v3) = replace_bytes(v1, o1, (s1 + s2),
                 concat_bitvector(v2, v3)))))))))))

axiom concat_replace_bytes_down:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector.
              (forall v3:bitvector [replace_bytes(replace_bytes(v1, o1, s1,
                v2), o2, s2, v3)].
                (((o2 + s2) = o1) -> (replace_bytes(replace_bytes(v1, o1, s1,
                 v2), o2, s2, v3) = replace_bytes(v1, o2, (s1 + s2),
                 concat_bitvector(v3, v2)))))))))))

axiom concat_extract_bytes:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v:bitvector [concat_bitvector(extract_bytes(v, o1, s1),
            extract_bytes(v, o2, s2))].
            (((o1 + s1) = o2) -> (concat_bitvector(extract_bytes(v, o1, s1),
             extract_bytes(v, o2, s2)) = extract_bytes(v, o1, (s1 + s2)))))))))

logic select_bytes : ('a1, bitvector) memory, 'a1 pointer, int,
int -> bitvector

logic store_bytes : ('a1, bitvector) memory, 'a1 pointer, int, int,
bitvector -> ('a1, bitvector) memory

axiom select_store_eq_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall o1:int.
          (forall s1:int.
            (forall o2:int.
              (forall s2:int.
                (forall v:bitvector [select_bytes(store_bytes(m, p1, o1, s1,
                  v), p2, o2, s2)].
                  (((p1 = p2) and ((o1 = o2) and (s1 = s2))) ->
                   (select_bytes(store_bytes(m, p1, o1, s1, v), p2, o2,
                   s2) = v))))))))))

axiom select_store_neq_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall o1:int.
          (forall s1:int.
            (forall o2:int.
              (forall s2:int.
                (forall v:bitvector [select_bytes(store_bytes(m, p1, o1, s1,
                  v), p2, o2, s2)].
                  (pset_disjoint(pset_range(pset_singleton(p1), o1,
                   (o1 + s1)), pset_range(pset_singleton(p2), o2,
                   (o2 + s2))) -> (select_bytes(store_bytes(m, p1, o1, s1,
                   v), p2, o2, s2) = select_bytes(m, p2, o2, s2)))))))))))

axiom shift_store_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall i:int.
        (forall o:int.
          (forall s:int.
            (forall v:bitvector [store_bytes(m, shift(p, i), o, s, v)].
              (store_bytes(m, shift(p, i), o, s, v) = store_bytes(m, p,
              (o + i), s, v))))))))

axiom shift_select_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall i:int.
        (forall o:int.
          (forall s:int.
            (forall v:bitvector [select_bytes(m, shift(p, i), o, s)].
              (select_bytes(m, shift(p, i), o, s) = select_bytes(m, p,
              (o + i), s))))))))

axiom concat_store_bytes_up:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall o1:int.
        (forall s1:int.
          (forall o2:int.
            (forall s2:int.
              (forall v1:bitvector.
                (forall v2:bitvector [store_bytes(store_bytes(m, p, o1, s1,
                  v1), p, o2, s2, v2)].
                  (((o1 + s1) = o2) -> (store_bytes(store_bytes(m, p, o1, s1,
                   v1), p, o2, s2, v2) = store_bytes(m, p, o1, (s1 + s2),
                   concat_bitvector(v1, v2))))))))))))

axiom concat_store_bytes_down:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall o1:int.
        (forall s1:int.
          (forall o2:int.
            (forall s2:int.
              (forall v1:bitvector.
                (forall v2:bitvector [store_bytes(store_bytes(m, p, o1, s1,
                  v1), p, o2, s2, v2)].
                  (((o2 + s2) = o1) -> (store_bytes(store_bytes(m, p, o1, s1,
                   v1), p, o2, s2, v2) = store_bytes(m, p, o2, (s1 + s2),
                   concat_bitvector(v2, v1))))))))))))

axiom concat_select_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall o1:int.
        (forall s1:int.
          (forall o2:int.
            (forall s2:int [concat_bitvector(select_bytes(m, p, o1, s1),
              select_bytes(m, p, o2, s2))].
              (((o1 + s1) = o2) -> (concat_bitvector(select_bytes(m, p, o1,
               s1), select_bytes(m, p, o2, s2)) = select_bytes(m, p, o1,
               (s1 + s2))))))))))

logic integer_of_bitvector : bitvector -> int

logic bitvector_of_integer : int -> bitvector

logic real_of_bitvector : bitvector -> real

type S

type T

type char_P

type int32

type int8

type padding

type void_P

logic S_tag : S tag_id

axiom S_int: (int_of_tag(S_tag) = 1)

logic S_of_bitvector : bitvector -> S pointer

logic bitvector_of_S : S pointer -> bitvector

axiom S_of_bitvector_of_bitvector_of_S:
  (forall x:S pointer. (S_of_bitvector(bitvector_of_S(x)) = x))

logic S_of_pointer_address : unit pointer -> S pointer

axiom S_of_pointer_address_of_pointer_addr:
  (forall p:S pointer. (p = S_of_pointer_address(pointer_address(p))))

axiom S_parenttag_bottom: parenttag(S_tag, bottom_tag)

axiom S_tags:
  (forall x:S pointer.
    (forall S_tag_table:S tag_table. instanceof(S_tag_table, x, S_tag)))

logic T_tag : T tag_id

axiom T_int: (int_of_tag(T_tag) = 1)

logic T_of_bitvector : bitvector -> T pointer

logic bitvector_of_T : T pointer -> bitvector

axiom T_of_bitvector_of_bitvector_of_T:
  (forall x:T pointer. (T_of_bitvector(bitvector_of_T(x)) = x))

logic T_of_pointer_address : unit pointer -> T pointer

axiom T_of_pointer_address_of_pointer_addr:
  (forall p:T pointer. (p = T_of_pointer_address(pointer_address(p))))

axiom T_parenttag_bottom: parenttag(T_tag, bottom_tag)

axiom T_tags:
  (forall x:T pointer.
    (forall T_tag_table:T tag_table. instanceof(T_tag_table, x, T_tag)))

axiom bitvector_of_S_of_S_of_bitvector:
  (forall x:bitvector. (bitvector_of_S(S_of_bitvector(x)) = x))

axiom bitvector_of_T_of_T_of_bitvector:
  (forall x:bitvector. (bitvector_of_T(T_of_bitvector(x)) = x))

logic bitvector_of_char_P : char_P pointer -> bitvector

logic char_P_of_bitvector : bitvector -> char_P pointer

axiom bitvector_of_char_P_of_char_P_of_bitvector:
  (forall x:bitvector. (bitvector_of_char_P(char_P_of_bitvector(x)) = x))

logic bitvector_of_int32 : int32 -> bitvector

logic int32_of_bitvector : bitvector -> int32

axiom bitvector_of_int32_of_int32_of_bitvector:
  (forall x:bitvector. (bitvector_of_int32(int32_of_bitvector(x)) = x))

logic bitvector_of_int8 : int8 -> bitvector

logic int8_of_bitvector : bitvector -> int8

axiom bitvector_of_int8_of_int8_of_bitvector:
  (forall x:bitvector. (bitvector_of_int8(int8_of_bitvector(x)) = x))

logic bitvector_of_void_P : void_P pointer -> bitvector

logic void_P_of_bitvector : bitvector -> void_P pointer

axiom bitvector_of_void_P_of_void_P_of_bitvector:
  (forall x:bitvector. (bitvector_of_void_P(void_P_of_bitvector(x)) = x))

logic char_P_tag : char_P tag_id

axiom char_P_int: (int_of_tag(char_P_tag) = 1)

axiom char_P_of_bitvector_of_bitvector_of_char_P:
  (forall x:char_P pointer.
    (char_P_of_bitvector(bitvector_of_char_P(x)) = x))

logic char_P_of_pointer_address : unit pointer -> char_P pointer

axiom char_P_of_pointer_address_of_pointer_addr:
  (forall p:char_P pointer.
    (p = char_P_of_pointer_address(pointer_address(p))))

axiom char_P_parenttag_bottom: parenttag(char_P_tag, bottom_tag)

axiom char_P_tags:
  (forall x:char_P pointer.
    (forall char_P_tag_table:char_P tag_table. instanceof(char_P_tag_table,
      x, char_P_tag)))

logic integer_of_int32 : int32 -> int

predicate eq_int32(x: int32, y: int32) =
  (integer_of_int32(x) = integer_of_int32(y))

logic integer_of_int8 : int8 -> int

predicate eq_int8(x: int8, y: int8) =
  (integer_of_int8(x) = integer_of_int8(y))

logic int32_of_integer : int -> int32

axiom int32_coerce:
  (forall x:int.
    ((((-2147483648) <= x) and (x <= 2147483647)) ->
     (integer_of_int32(int32_of_integer(x)) = x)))

axiom int32_of_bitvector_of_bitvector_of_int32:
  (forall x:int32. eq_int32(int32_of_bitvector(bitvector_of_int32(x)), x))

axiom int32_range:
  (forall x:int32.
    (((-2147483648) <= integer_of_int32(x)) and
     (integer_of_int32(x) <= 2147483647)))

logic int8_of_integer : int -> int8

axiom int8_coerce:
  (forall x:int.
    ((((-128) <= x) and (x <= 127)) ->
     (integer_of_int8(int8_of_integer(x)) = x)))

axiom int8_of_bitvector_of_bitvector_of_int8:
  (forall x:int8. eq_int8(int8_of_bitvector(bitvector_of_int8(x)), x))

axiom int8_range:
  (forall x:int8.
    (((-128) <= integer_of_int8(x)) and (integer_of_int8(x) <= 127)))

predicate left_valid_struct_S(p: S pointer, a: int,
  S_alloc_table: S alloc_table) = (offset_min(S_alloc_table, p) <= a)

predicate left_valid_struct_T(p: T pointer, a: int,
  S_alloc_table: S alloc_table, T_alloc_table: T alloc_table, T_a: (T,
  S pointer) memory, T_b: (T, S pointer) memory) =
  ((offset_min(T_alloc_table, p) <= a) and
   (left_valid_struct_S(select(T_a, p), 0, S_alloc_table) and
    left_valid_struct_S(select(T_b, p), 0, S_alloc_table)))

predicate left_valid_struct_char_P(p: char_P pointer, a: int,
  char_P_alloc_table: char_P alloc_table) = (offset_min(char_P_alloc_table,
  p) <= a)

predicate left_valid_struct_void_P(p: void_P pointer, a: int,
  void_P_alloc_table: void_P alloc_table) = (offset_min(void_P_alloc_table,
  p) <= a)

axiom pointer_addr_of_S_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(S_of_pointer_address(p))))

axiom pointer_addr_of_T_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(T_of_pointer_address(p))))

axiom pointer_addr_of_char_P_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(char_P_of_pointer_address(p))))

logic void_P_of_pointer_address : unit pointer -> void_P pointer

axiom pointer_addr_of_void_P_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(void_P_of_pointer_address(p))))

predicate right_valid_struct_S(p: S pointer, b: int,
  S_alloc_table: S alloc_table) = (offset_max(S_alloc_table, p) >= b)

predicate right_valid_struct_T(p: T pointer, b: int,
  S_alloc_table: S alloc_table, T_alloc_table: T alloc_table, T_a: (T,
  S pointer) memory, T_b: (T, S pointer) memory) =
  ((offset_max(T_alloc_table, p) >= b) and
   (right_valid_struct_S(select(T_a, p), 0, S_alloc_table) and
    right_valid_struct_S(select(T_b, p), 0, S_alloc_table)))

predicate right_valid_struct_char_P(p: char_P pointer, b: int,
  char_P_alloc_table: char_P alloc_table) = (offset_max(char_P_alloc_table,
  p) >= b)

predicate right_valid_struct_void_P(p: void_P pointer, b: int,
  void_P_alloc_table: void_P alloc_table) = (offset_max(void_P_alloc_table,
  p) >= b)

predicate strict_valid_root_S(p: S pointer, a: int, b: int,
  S_alloc_table: S alloc_table) =
  ((offset_min(S_alloc_table, p) = a) and (offset_max(S_alloc_table, p) = b))

predicate strict_valid_root_T(p: T pointer, a: int, b: int,
  T_alloc_table: T alloc_table) =
  ((offset_min(T_alloc_table, p) = a) and (offset_max(T_alloc_table, p) = b))

predicate strict_valid_root_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) = a) and
   (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_root_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) = a) and
   (offset_max(void_P_alloc_table, p) = b))

predicate strict_valid_struct_S(p: S pointer, a: int, b: int,
  S_alloc_table: S alloc_table) =
  ((offset_min(S_alloc_table, p) = a) and (offset_max(S_alloc_table, p) = b))

predicate strict_valid_struct_T(p: T pointer, a: int, b: int,
  S_alloc_table: S alloc_table, T_alloc_table: T alloc_table, T_a: (T,
  S pointer) memory, T_b: (T, S pointer) memory) =
  ((offset_min(T_alloc_table, p) = a) and
   ((offset_max(T_alloc_table, p) = b) and
    (strict_valid_struct_S(select(T_a, p), 0, 0, S_alloc_table) and
     strict_valid_struct_S(select(T_b, p), 0, 0, S_alloc_table))))

predicate strict_valid_struct_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) = a) and
   (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_struct_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) = a) and
   (offset_max(void_P_alloc_table, p) = b))

predicate valid_bitvector_struct_S(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_T(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_char_P(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_void_P(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_root_S(p: S pointer, a: int, b: int,
  S_alloc_table: S alloc_table) =
  ((offset_min(S_alloc_table, p) <= a) and (offset_max(S_alloc_table,
   p) >= b))

predicate valid_root_T(p: T pointer, a: int, b: int,
  T_alloc_table: T alloc_table) =
  ((offset_min(T_alloc_table, p) <= a) and (offset_max(T_alloc_table,
   p) >= b))

predicate valid_root_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) <= a) and
   (offset_max(char_P_alloc_table, p) >= b))

predicate valid_root_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) <= a) and
   (offset_max(void_P_alloc_table, p) >= b))

predicate valid_struct_S(p: S pointer, a: int, b: int,
  S_alloc_table: S alloc_table) =
  ((offset_min(S_alloc_table, p) <= a) and (offset_max(S_alloc_table,
   p) >= b))

predicate valid_struct_T(p: T pointer, a: int, b: int,
  S_alloc_table: S alloc_table, T_alloc_table: T alloc_table, T_a: (T,
  S pointer) memory, T_b: (T, S pointer) memory) =
  ((offset_min(T_alloc_table, p) <= a) and
   ((offset_max(T_alloc_table, p) >= b) and
    (valid_struct_S(select(T_a, p), 0, 0, S_alloc_table) and
     valid_struct_S(select(T_b, p), 0, 0, S_alloc_table))))

predicate valid_struct_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) <= a) and
   (offset_max(char_P_alloc_table, p) >= b))

predicate valid_struct_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) <= a) and
   (offset_max(void_P_alloc_table, p) >= b))

logic void_P_tag : void_P tag_id

axiom void_P_int: (int_of_tag(void_P_tag) = 1)

axiom void_P_of_bitvector_of_bitvector_of_void_P:
  (forall x:void_P pointer.
    (void_P_of_bitvector(bitvector_of_void_P(x)) = x))

axiom void_P_of_pointer_address_of_pointer_addr:
  (forall p:void_P pointer.
    (p = void_P_of_pointer_address(pointer_address(p))))

axiom void_P_parenttag_bottom: parenttag(void_P_tag, bottom_tag)

axiom void_P_tags:
  (forall x:void_P pointer.
    (forall void_P_tag_table:void_P tag_table. instanceof(void_P_tag_table,
      x, void_P_tag)))

