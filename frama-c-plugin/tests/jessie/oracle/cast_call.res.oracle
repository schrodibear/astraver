Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -jessie -jessie-gen-only cast_call.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -dD cast_call.c"
[jessie] Starting Jessie translation
[jessie] Producing Jessie files in subdir cast_call.jessie
[jessie] File cast_call.jessie/cast_call.jc written.
[jessie] File cast_call.jessie/cast_call.cloc written.
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type int32 = -2147483648..2147483647

type int8 = -128..127

tag int_P = {
  int32 int_M: 32;
}

type int_P = [int_P]

tag char_P = {
  int8 char_M: 8;
}

type char_P = [char_P]

tag void_P = {
}

type void_P = [void_P]

char_P[..] f(char_P[..] c)
  requires (C_2 : ((C_3 : (\offset_min(c) <= 0)) &&
                    (C_4 : (\offset_max(c) >= 0))));
behavior default:
  ensures (C_1 : (\result == \at(c,Old)));
{  
   {  
      (return c)
   }
}

unit g()
behavior default:
  ensures (C_14 : true);
{  
   (var int_P[0] i);
   
   (var char_P[..] c_0);
   
   {  (C_6 : (i = (C_5 : (new int_P[1]))));
      (C_9 : (c_0 = (C_8 : f((C_7 : (i :> char_P[..]))))));
      (C_11 : ((C_10 : c_0.char_M) = 0));
      
      {  
         (assert for default: (C_12 : (i.int_M == 0)));
         ()
      };
      
      {  (C_13 : (free(i)));
         
         (return ())
      }
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs cast_call.jessie/cast_call.cloc cast_call.jessie/cast_call.jc
