Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -jessie -jessie-gen-only dillon2.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -dD dillon2.c"
[jessie] Starting Jessie translation
[jessie] Producing Jessie files in subdir dillon2.jessie
[jessie] File dillon2.jessie/dillon2.jc written.
[jessie] File dillon2.jessie/dillon2.cloc written.
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type int32 = -2147483648..2147483647

type int8 = -128..127

tag int_P = {
  int32 int_M: 32;
}

type int_P = [int_P]

tag las_xP = {
  __anonstruct_las_1[..] las_xM: 32;
}

type las_xP = [las_xP]

tag char_P = {
  int8 char_M: 8;
}

type char_P = [char_P]

tag void_P = {
}

type void_P = [void_P]

tag __anonstruct_las_1 = {
  int32 a: 32;
}

type __anonstruct_las_1 = [__anonstruct_las_1]

las_xP[0] p;

logic las_xP[..] p_ref =
p

unit f3()
  requires (C_5 : ((C_6 : (\offset_min(p.las_xM) <= 0)) &&
                    (C_7 : (\offset_max(p.las_xM) >= 0))));
behavior default:
  assigns p.las_xM.a;
  ensures (C_4 : true);
{  
   {  (C_3 : ((C_2 : (C_1 : p.las_xM).a) = 5));
      
      (return ())
   }
}

unit g3(int_P[..] p_0)
  requires (C_10 : ((C_11 : (\offset_min(p_0) <= 0)) &&
                     (C_12 : (\offset_max(p_0) >= 0))));
behavior default:
  assigns p_ref.las_xM.a;
  ensures (C_9 : true);
{  
   {  (C_8 : f3());
      
      (return ())
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs dillon2.jessie/dillon2.cloc dillon2.jessie/dillon2.jc
