Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -jessie -jessie-gen-only hd_snoob.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -dD hd_snoob.c"
[jessie] Starting Jessie translation
[kernel] No code for function printf, default assigns generated
[kernel] No code for function strtol, default assigns generated
hd_snoob.c:144:[jessie] warning: skipping all arguments of implicit prototype printf
hd_snoob.c:148:[jessie] warning: skipping all arguments of implicit prototype strtol
hd_snoob.c:150:[jessie] warning: skipping all arguments of implicit prototype printf
hd_snoob.c:154:[jessie] warning: skipping all arguments of implicit prototype printf
hd_snoob.c:163:[jessie] warning: skipping all arguments of implicit prototype printf
[jessie] Producing Jessie files in subdir hd_snoob.jessie
[jessie] File hd_snoob.jessie/hd_snoob.jc written.
[jessie] File hd_snoob.jessie/hd_snoob.cloc written.
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type uint16 = 0..65535

type uint32 = 0..4294967295

type int8 = -128..127

type int32 = -2147483648..2147483647

tag char_xP = {
  char_P[..] char_xM: 32;
}

type char_xP = [char_xP]

tag unsigned_short_P = {
  uint16 unsigned_short_M: 16;
}

type unsigned_short_P = [unsigned_short_P]

tag char_P = {
  int8 char_M: 8;
}

type char_P = [char_P]

tag void_P = {
}

type void_P = [void_P]

invariant valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_ :
(valid_string(__string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_) &&
  (strlen(__string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_) == 49))

char_P[0..49] __string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_;

invariant valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0 :
((\offset_min(__string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_) <=
   0) &&
  (\offset_max(__string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_) >=
    49))

invariant valid___string_n____d_ :
(valid_string(__string_n____d_) && (strlen(__string_n____d_) == 7))

char_P[0..7] __string_n____d_;

invariant valid___string_n____d__0 :
((\offset_min(__string_n____d_) <= 0) &&
  (\offset_max(__string_n____d_) >= 7))

invariant valid___string_Argument_must_be_an_integer_from_1_to_7__ :
(valid_string(__string_Argument_must_be_an_integer_from_1_to_7__) &&
  (strlen(__string_Argument_must_be_an_integer_from_1_to_7__) == 41))

char_P[0..41] __string_Argument_must_be_an_integer_from_1_to_7__;

invariant valid___string_Argument_must_be_an_integer_from_1_to_7___0 :
((\offset_min(__string_Argument_must_be_an_integer_from_1_to_7__) <= 0) &&
  (\offset_max(__string_Argument_must_be_an_integer_from_1_to_7__) >= 41))

invariant valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__ :
(valid_string(__string_Need_exactly_one_argument__an_integer_from_1_to_7__) &&
  (strlen(__string_Need_exactly_one_argument__an_integer_from_1_to_7__) ==
    51))

char_P[0..51] __string_Need_exactly_one_argument__an_integer_from_1_to_7__;

invariant valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0 :
((\offset_min(__string_Need_exactly_one_argument__an_integer_from_1_to_7__) <=
   0) &&
  (\offset_max(__string_Need_exactly_one_argument__an_integer_from_1_to_7__) >=
    51))

axiomatic MemCmp {

  logic integer memcmp{L}(char_P[..] s1, char_P[..] s2, integer n)
  reads (s1 + [0..(n - 1)]).char_M, (s2 + [0..(n - 1)]).char_M;
   
  axiom memcmp_range{L} :
  (\forall char_P[..] s1_0;
    (\forall char_P[..] s2_0;
      (\forall integer n_0;
        ((((- 2147483647) - 1) <= memcmp{L}(s1_0, s2_0, n_0)) &&
          (memcmp{L}(s1_0, s2_0, n_0) <= 2147483647)))))
   
  axiom memcmp_zero{L} :
  (\forall char_P[..] s1_1;
    (\forall char_P[..] s2_1;
      (\forall integer n_1;
        ((memcmp{L}(s1_1, s2_1, n_1) == 0) <==>
          (\forall integer i;
            (((0 <= i) && (i < n_1)) ==>
              ((s1_1 + i).char_M == (s2_1 + i).char_M)))))))
  
}

axiomatic MemChr {

  logic boolean memchr{L}(char_P[..] s, integer c, integer n_2)
  reads (s + [0..(n_2 - 1)]).char_M;
   
  axiom memchr_def{L} :
  (\forall char_P[..] s_0;
    (\forall integer c_0;
      (\forall integer n_3;
        ((memchr{L}(s_0, c_0, n_3) == true) <==>
          (\exists int32 i_0;
            (((0 <= i_0) && (i_0 < n_3)) && ((s_0 + i_0).char_M == c_0)))))))
  
}

axiomatic MemSet {

  logic boolean memset{L}(char_P[..] s_1, integer c_1, integer n_4)
  reads (s_1 + [0..(n_4 - 1)]).char_M;
   
  axiom memset_def{L} :
  (\forall char_P[..] s_2;
    (\forall integer c_2;
      (\forall integer n_5;
        ((memset{L}(s_2, c_2, n_5) == true) <==>
          (\forall integer i_1;
            (((0 <= i_1) && (i_1 < n_5)) ==> ((s_2 + i_1).char_M == c_2)))))))
  
}

axiomatic StrLen {

  logic integer strlen{L}(char_P[..] s_3) reads (s_3 + [0..]).char_M;
   
  axiom strlen_pos_or_null{L} :
  (\forall char_P[..] s_4;
    (\forall integer i_2;
      (((((0 <= i_2) && (i_2 <= 2147483647)) &&
          (\forall integer j;
            (((0 <= j) && (j < i_2)) ==> ((s_4 + j).char_M != 0)))) &&
         ((s_4 + i_2).char_M == 0)) ==>
        (strlen{L}(s_4) == i_2))))
   
  axiom strlen_neg{L} :
  (\forall char_P[..] s_5;
    ((\forall integer i_3;
       (((0 <= i_3) && (i_3 <= 2147483647)) ==> ((s_5 + i_3).char_M != 0))) ==>
      (strlen{L}(s_5) < 0)))
   
  axiom strlen_range{L} :
  (\forall char_P[..] s_6;
    (strlen{L}(s_6) <= 2147483647))
   
  axiom strlen_before_null{L} :
  (\forall char_P[..] s_7;
    (\forall integer i_4;
      (((0 <= i_4) && (i_4 < strlen{L}(s_7))) ==> ((s_7 + i_4).char_M != 0))))
   
  axiom strlen_at_null{L} :
  (\forall char_P[..] s_8;
    ((0 <= strlen{L}(s_8)) ==> ((s_8 + strlen{L}(s_8)).char_M == 0)))
   
  axiom strlen_not_zero{L} :
  (\forall char_P[..] s_9;
    (\forall integer i_5;
      ((((0 <= i_5) && (i_5 <= strlen{L}(s_9))) && ((s_9 + i_5).char_M != 0)) ==>
        (i_5 < strlen{L}(s_9)))))
   
  axiom strlen_zero{L} :
  (\forall char_P[..] s_10;
    (\forall integer i_6;
      ((((0 <= i_6) && (i_6 <= strlen{L}(s_10))) &&
         ((s_10 + i_6).char_M == 0)) ==>
        (i_6 == strlen{L}(s_10)))))
   
  axiom strlen_sup{L} :
  (\forall char_P[..] s_11;
    (\forall integer i_7;
      (((0 <= i_7) && ((s_11 + i_7).char_M == 0)) ==>
        ((0 <= strlen{L}(s_11)) && (strlen{L}(s_11) <= i_7)))))
   
  axiom strlen_shift{L} :
  (\forall char_P[..] s_12;
    (\forall integer i_8;
      (((0 <= i_8) && (i_8 <= strlen{L}(s_12))) ==>
        (strlen{L}((s_12 + i_8)) == (strlen{L}(s_12) - i_8)))))
   
  axiom strlen_create{L} :
  (\forall char_P[..] s_13;
    (\forall integer i_9;
      ((((0 <= i_9) && (i_9 <= 2147483647)) && ((s_13 + i_9).char_M == 0)) ==>
        ((0 <= strlen{L}(s_13)) && (strlen{L}(s_13) <= i_9)))))
   
  axiom strlen_create_shift{L} :
  (\forall char_P[..] s_14;
    (\forall integer i_10;
      (\forall integer k;
        ((((0 <= k) && ((k <= i_10) && (i_10 <= 2147483647))) &&
           ((s_14 + i_10).char_M == 0)) ==>
          ((0 <= strlen{L}((s_14 + k))) &&
            (strlen{L}((s_14 + k)) <= (i_10 - k)))))))
   
  axiom memcmp_strlen_left{L} :
  (\forall char_P[..] s1_2;
    (\forall char_P[..] s2_2;
      (\forall integer n_6;
        (((memcmp{L}(s1_2, s2_2, n_6) == 0) && (strlen{L}(s1_2) < n_6)) ==>
          (strlen{L}(s1_2) == strlen{L}(s2_2))))))
   
  axiom memcmp_strlen_right{L} :
  (\forall char_P[..] s1_3;
    (\forall char_P[..] s2_3;
      (\forall integer n_7;
        (((memcmp{L}(s1_3, s2_3, n_7) == 0) && (strlen{L}(s2_3) < n_7)) ==>
          (strlen{L}(s1_3) == strlen{L}(s2_3))))))
   
  axiom memcmp_strlen_shift_left{L} :
  (\forall char_P[..] s1_4;
    (\forall char_P[..] s2_4;
      (\forall integer k_0;
        (\forall integer n_8;
          ((((memcmp{L}(s1_4, (s2_4 + k_0), n_8) == 0) && (0 <= k_0)) &&
             (strlen{L}(s1_4) < n_8)) ==>
            ((0 <= strlen{L}(s2_4)) &&
              (strlen{L}(s2_4) <= (k_0 + strlen{L}(s1_4)))))))))
   
  axiom memcmp_strlen_shift_right{L} :
  (\forall char_P[..] s1_5;
    (\forall char_P[..] s2_5;
      (\forall integer k_1;
        (\forall integer n_9;
          ((((memcmp{L}((s1_5 + k_1), s2_5, n_9) == 0) && (0 <= k_1)) &&
             (strlen{L}(s2_5) < n_9)) ==>
            ((0 <= strlen{L}(s1_5)) &&
              (strlen{L}(s1_5) <= (k_1 + strlen{L}(s2_5)))))))))
  
}

axiomatic StrCmp {

  logic integer strcmp{L}(char_P[..] s1_6, char_P[..] s2_6)
  reads (s1_6 + [0..strlen{L}(s1_6)]).char_M,
  (s2_6 + [0..strlen{L}(s2_6)]).char_M;
   
  axiom strcmp_range{L} :
  (\forall char_P[..] s1_7;
    (\forall char_P[..] s2_7;
      ((((- 2147483647) - 1) <= strcmp{L}(s1_7, s2_7)) &&
        (strcmp{L}(s1_7, s2_7) <= 2147483647))))
   
  axiom strcmp_zero{L} :
  (\forall char_P[..] s1_8;
    (\forall char_P[..] s2_8;
      ((strcmp{L}(s1_8, s2_8) == 0) <==>
        ((strlen{L}(s1_8) == strlen{L}(s2_8)) &&
          (\forall integer i_11;
            (((0 <= i_11) && (i_11 <= strlen{L}(s1_8))) ==>
              ((s1_8 + i_11).char_M == (s2_8 + i_11).char_M)))))))
  
}

axiomatic StrNCmp {

  logic integer strncmp{L}(char_P[..] s1_9, char_P[..] s2_9, integer n_10)
  reads (s1_9 + [0..(n_10 - 1)]).char_M, (s2_9 + [0..(n_10 - 1)]).char_M;
   
  axiom strncmp_zero{L} :
  (\forall char_P[..] s1_10;
    (\forall char_P[..] s2_10;
      (\forall integer n_11;
        ((strncmp{L}(s1_10, s2_10, n_11) == 0) <==>
          (((strlen{L}(s1_10) < n_11) && (strcmp{L}(s1_10, s2_10) == 0)) ||
            (\forall integer i_12;
              (((0 <= i_12) && (i_12 < n_11)) ==>
                ((s1_10 + i_12).char_M == (s2_10 + i_12).char_M))))))))
  
}

axiomatic StrChr {

  logic boolean strchr{L}(char_P[..] s_15, integer c_3)
  reads (s_15 + [0..strlen{L}(s_15)]).char_M;
   
  axiom strchr_def{L} :
  (\forall char_P[..] s_16;
    (\forall integer c_4;
      ((strchr{L}(s_16, c_4) == true) <==>
        (\exists integer i_13;
          (((0 <= i_13) && (i_13 <= strlen{L}(s_16))) &&
            ((s_16 + i_13).char_M == c_4))))))
  
}

axiomatic WcsLen {

  logic integer wcslen{L}(unsigned_short_P[..] s_17)
  reads (s_17 + [0..]).unsigned_short_M;
   
  axiom wcslen_pos_or_null{L} :
  (\forall unsigned_short_P[..] s_18;
    (\forall integer i_14;
      ((((0 <= i_14) &&
          (\forall integer j_0;
            (((0 <= j_0) && (j_0 < i_14)) ==>
              ((s_18 + j_0).unsigned_short_M != 0)))) &&
         ((s_18 + i_14).unsigned_short_M == 0)) ==>
        (wcslen{L}(s_18) == i_14))))
   
  axiom wcslen_neg{L} :
  (\forall unsigned_short_P[..] s_19;
    ((\forall integer i_15;
       ((0 <= i_15) ==> ((s_19 + i_15).unsigned_short_M != 0))) ==>
      (wcslen{L}(s_19) < 0)))
   
  axiom wcslen_before_null{L} :
  (\forall unsigned_short_P[..] s_20;
    (\forall int32 i_16;
      (((0 <= i_16) && (i_16 < wcslen{L}(s_20))) ==>
        ((s_20 + i_16).unsigned_short_M != 0))))
   
  axiom wcslen_at_null{L} :
  (\forall unsigned_short_P[..] s_21;
    ((0 <= wcslen{L}(s_21)) ==>
      ((s_21 + wcslen{L}(s_21)).unsigned_short_M == 0)))
   
  axiom wcslen_not_zero{L} :
  (\forall unsigned_short_P[..] s_22;
    (\forall int32 i_17;
      ((((0 <= i_17) && (i_17 <= wcslen{L}(s_22))) &&
         ((s_22 + i_17).unsigned_short_M != 0)) ==>
        (i_17 < wcslen{L}(s_22)))))
   
  axiom wcslen_zero{L} :
  (\forall unsigned_short_P[..] s_23;
    (\forall int32 i_18;
      ((((0 <= i_18) && (i_18 <= wcslen{L}(s_23))) &&
         ((s_23 + i_18).unsigned_short_M == 0)) ==>
        (i_18 == wcslen{L}(s_23)))))
   
  axiom wcslen_sup{L} :
  (\forall unsigned_short_P[..] s_24;
    (\forall int32 i_19;
      (((0 <= i_19) && ((s_24 + i_19).unsigned_short_M == 0)) ==>
        ((0 <= wcslen{L}(s_24)) && (wcslen{L}(s_24) <= i_19)))))
   
  axiom wcslen_shift{L} :
  (\forall unsigned_short_P[..] s_25;
    (\forall int32 i_20;
      (((0 <= i_20) && (i_20 <= wcslen{L}(s_25))) ==>
        (wcslen{L}((s_25 + i_20)) == (wcslen{L}(s_25) - i_20)))))
   
  axiom wcslen_create{L} :
  (\forall unsigned_short_P[..] s_26;
    (\forall int32 i_21;
      (((0 <= i_21) && ((s_26 + i_21).unsigned_short_M == 0)) ==>
        ((0 <= wcslen{L}(s_26)) && (wcslen{L}(s_26) <= i_21)))))
   
  axiom wcslen_create_shift{L} :
  (\forall unsigned_short_P[..] s_27;
    (\forall int32 i_22;
      (\forall int32 k_2;
        ((((0 <= k_2) && (k_2 <= i_22)) &&
           ((s_27 + i_22).unsigned_short_M == 0)) ==>
          ((0 <= wcslen{L}((s_27 + k_2))) &&
            (wcslen{L}((s_27 + k_2)) <= (i_22 - k_2)))))))
  
}

axiomatic WcsCmp {

  logic integer wcscmp{L}(unsigned_short_P[..] s1_11,
                          unsigned_short_P[..] s2_11)
  reads (s1_11 + [0..wcslen{L}(s1_11)]).unsigned_short_M,
  (s2_11 + [0..wcslen{L}(s2_11)]).unsigned_short_M;
   
  axiom wcscmp_zero{L} :
  (\forall unsigned_short_P[..] s1_12;
    (\forall unsigned_short_P[..] s2_12;
      ((wcscmp{L}(s1_12, s2_12) == 0) <==>
        ((wcslen{L}(s1_12) == wcslen{L}(s2_12)) &&
          (\forall integer i_23;
            (((0 <= i_23) && (i_23 <= wcslen{L}(s1_12))) ==>
              ((s1_12 + i_23).unsigned_short_M ==
                (s2_12 + i_23).unsigned_short_M)))))))
  
}

axiomatic WcsNCmp {

  logic integer wcsncmp{L}(unsigned_short_P[..] s1_13,
                           unsigned_short_P[..] s2_13, integer n_12)
  reads (s1_13 + [0..(n_12 - 1)]).unsigned_short_M,
  (s2_13 + [0..(n_12 - 1)]).unsigned_short_M;
   
  axiom wcsncmp_zero{L} :
  (\forall unsigned_short_P[..] s1_14;
    (\forall unsigned_short_P[..] s2_14;
      (\forall integer n_13;
        ((wcsncmp{L}(s1_14, s2_14, n_13) == 0) <==>
          (((wcslen{L}(s1_14) < n_13) && (wcscmp{L}(s1_14, s2_14) == 0)) ||
            (\forall integer i_24;
              (((0 <= i_24) && (i_24 < n_13)) ==>
                ((s1_14 + i_24).unsigned_short_M ==
                  (s2_14 + i_24).unsigned_short_M))))))))
  
}

logic integer minimum(integer i_25, integer j_1) =
(if (i_25 < j_1) then i_25 else j_1)

logic integer maximum(integer i_26, integer j_2) =
(if (i_26 < j_2) then j_2 else i_26)

predicate valid_string{L}(char_P[..] s_28) =
((0 <= strlen{L}(s_28)) &&
  ((\offset_min(s_28) <= 0) && (\offset_max(s_28) >= strlen{L}(s_28))))

predicate valid_string_or_null{L}(char_P[..] s_29) =
((s_29 == null) || valid_string{L}(s_29))

predicate valid_wstring{L}(unsigned_short_P[..] s_30) =
((0 <= wcslen{L}(s_30)) &&
  ((\offset_min(s_30) <= 0) && (\offset_max(s_30) >= wcslen{L}(s_30))))

predicate valid_wstring_or_null{L}(unsigned_short_P[..] s_31) =
((s_31 == null) || valid_wstring{L}(s_31))

unit exit(int32 status)
behavior default:
  assigns \nothing;
  ensures (C_1 : false);
;

int32 ntz(uint32 x_1)
behavior default:
  ensures (C_42 : true);
{  
   (var int32 n);
   
   (var int32 __retres);
   
   {  (if (x_1 == 0) then 
      {  (C_2 : (__retres = 32));
         
         (goto return_label)
      } else ());
      (C_3 : (n = 1));
      (if ((C_11 : ((C_10 : (x_1 & 65535)) :> uint32)) == 0) then 
      {  (C_6 : (n = (C_5 : ((C_4 : (n + 16)) :> int32))));
         (C_9 : (x_1 = (C_8 : ((C_7 : (x_1 / 65536)) :> uint32))))
      } else ());
      (if ((C_19 : ((C_18 : (x_1 & 255)) :> uint32)) == 0) then 
      {  (C_14 : (n = (C_13 : ((C_12 : (n + 8)) :> int32))));
         (C_17 : (x_1 = (C_16 : ((C_15 : (x_1 / 256)) :> uint32))))
      } else ());
      (if ((C_27 : ((C_26 : (x_1 & 15)) :> uint32)) == 0) then 
      {  (C_22 : (n = (C_21 : ((C_20 : (n + 4)) :> int32))));
         (C_25 : (x_1 = (C_24 : ((C_23 : (x_1 / 16)) :> uint32))))
      } else ());
      (if ((C_35 : ((C_34 : (x_1 & 3)) :> uint32)) == 0) then 
      {  (C_30 : (n = (C_29 : ((C_28 : (n + 2)) :> int32))));
         (C_33 : (x_1 = (C_32 : ((C_31 : (x_1 / 4)) :> uint32))))
      } else ());
      (C_41 : (__retres = (C_40 : ((C_39 : ((C_38 : (n :> uint32)) -
                                             (C_37 : ((C_36 : (x_1 & 1)) :> uint32)))) :> int32))));
      (return_label : 
      (return __retres))
   }
}

int32 nlz(uint32 x_0)
behavior default:
  ensures (C_73 : true);
{  
   (var int32 n_0);
   
   (var int32 __retres_0);
   
   {  (if (x_0 == 0) then 
      {  (C_43 : (__retres_0 = 32));
         
         (goto return_label)
      } else ());
      (C_44 : (n_0 = 0));
      (if (x_0 <= 65535) then 
      {  (C_47 : (n_0 = (C_46 : ((C_45 : (n_0 + 16)) :> int32))));
         (C_50 : (x_0 = (C_49 : ((C_48 : (x_0 * 65536)) :> uint32))))
      } else ());
      (if (x_0 <= 16777215) then 
      {  (C_53 : (n_0 = (C_52 : ((C_51 : (n_0 + 8)) :> int32))));
         (C_56 : (x_0 = (C_55 : ((C_54 : (x_0 * 256)) :> uint32))))
      } else ());
      (if (x_0 <= 268435455) then 
      {  (C_59 : (n_0 = (C_58 : ((C_57 : (n_0 + 4)) :> int32))));
         (C_62 : (x_0 = (C_61 : ((C_60 : (x_0 * 16)) :> uint32))))
      } else ());
      (if (x_0 <= 1073741823) then 
      {  (C_65 : (n_0 = (C_64 : ((C_63 : (n_0 + 2)) :> int32))));
         (C_68 : (x_0 = (C_67 : ((C_66 : (x_0 * 4)) :> uint32))))
      } else ());
      (if (x_0 <= 2147483647) then (C_71 : (n_0 = (C_70 : ((C_69 : (n_0 + 1)) :> int32)))) else ());
      (C_72 : (__retres_0 = n_0));
      (return_label : 
      (return __retres_0))
   }
}

int32 pop(uint32 x_2)
behavior default:
  ensures (C_110 : true);
{  
   (var int32 __retres_1);
   
   {  (C_80 : (x_2 = (C_79 : ((C_78 : (x_2 -
                                        (C_77 : ((C_76 : ((C_75 : ((C_74 : 
                                                                   (x_2 /
                                                                    2)) :> uint32)) &
                                                           1431655765)) :> uint32)))) :> uint32))));
      (C_89 : (x_2 = (C_88 : ((C_87 : ((C_86 : ((C_85 : (x_2 & 858993459)) :> uint32)) +
                                        (C_84 : ((C_83 : ((C_82 : ((C_81 : 
                                                                   (x_2 /
                                                                    4)) :> uint32)) &
                                                           858993459)) :> uint32)))) :> uint32))));
      (C_96 : (x_2 = (C_95 : ((C_94 : ((C_93 : ((C_92 : (x_2 +
                                                          (C_91 : ((C_90 : 
                                                                   (x_2 /
                                                                    16)) :> uint32)))) :> uint32)) &
                                        252645135)) :> uint32))));
      (C_101 : (x_2 = (C_100 : ((C_99 : (x_2 +
                                          (C_98 : ((C_97 : (x_2 * 256)) :> uint32)))) :> uint32))));
      (C_106 : (x_2 = (C_105 : ((C_104 : (x_2 +
                                           (C_103 : ((C_102 : (x_2 * 65536)) :> uint32)))) :> uint32))));
      (C_109 : (__retres_1 = (C_108 : ((C_107 : (x_2 / 16777216)) :> int32))));
      
      (return __retres_1)
   }
}

uint32 snoob(uint32 x_3)
behavior default:
  ensures (C_130 : true);
{  
   (var uint32 smallest);
   
   (var uint32 ripple);
   
   (var uint32 ones);
   
   (var uint32 __retres_2);
   
   {  (C_115 : (smallest = (C_114 : ((C_113 : (x_3 &
                                                (C_112 : ((C_111 : (- x_3)) :> uint32)))) :> uint32))));
      (C_118 : (ripple = (C_117 : ((C_116 : (x_3 + smallest)) :> uint32))));
      (C_121 : (ones = (C_120 : ((C_119 : (x_3 ^ ripple)) :> uint32))));
      (C_126 : (ones = (C_125 : ((C_124 : ((C_123 : ((C_122 : (ones / 4)) :> uint32)) /
                                            smallest)) :> uint32))));
      (C_129 : (__retres_2 = (C_128 : ((C_127 : (ripple | ones)) :> uint32))));
      
      (return __retres_2)
   }
}

uint32 snoob1(uint32 x_4)
behavior default:
  ensures (C_153 : true);
{  
   (var uint32 smallest_0);
   
   (var uint32 ripple_0);
   
   (var uint32 ones_0);
   
   (var int32 tmp);
   
   (var uint32 __retres_3);
   
   {  (C_135 : (smallest_0 = (C_134 : ((C_133 : (x_4 &
                                                  (C_132 : ((C_131 : (- x_4)) :> uint32)))) :> uint32))));
      (C_138 : (ripple_0 = (C_137 : ((C_136 : (x_4 + smallest_0)) :> uint32))));
      (C_141 : (ones_0 = (C_140 : ((C_139 : (x_4 ^ ripple_0)) :> uint32))));
      
      {  (C_143 : (tmp = (C_142 : ntz(x_4))));
         
         {  
            (assert for default: (C_144 : ((2 + tmp) < 32)));
            (C_149 : (ones_0 = (C_148 : ((C_147 : (ones_0 >>
                                                    (C_146 : ((C_145 : 
                                                              (2 +
                                                                tmp)) :> int32)))) :> uint32))))
         }
      };
      (C_152 : (__retres_3 = (C_151 : ((C_150 : (ripple_0 | ones_0)) :> uint32))));
      
      (return __retres_3)
   }
}

uint32 snoob2(uint32 x_5)
behavior default:
  ensures (C_176 : true);
{  
   (var uint32 smallest_1);
   
   (var uint32 ripple_1);
   
   (var uint32 ones_1);
   
   (var int32 tmp_0);
   
   (var uint32 __retres_4);
   
   {  (C_158 : (smallest_1 = (C_157 : ((C_156 : (x_5 &
                                                  (C_155 : ((C_154 : (- x_5)) :> uint32)))) :> uint32))));
      (C_161 : (ripple_1 = (C_160 : ((C_159 : (x_5 + smallest_1)) :> uint32))));
      (C_164 : (ones_1 = (C_163 : ((C_162 : (x_5 ^ ripple_1)) :> uint32))));
      
      {  (C_166 : (tmp_0 = (C_165 : nlz(smallest_1))));
         
         {  
            (assert for default: (C_167 : ((33 - tmp_0) < 32)));
            (C_172 : (ones_1 = (C_171 : ((C_170 : (ones_1 >>
                                                    (C_169 : ((C_168 : 
                                                              (33 -
                                                                tmp_0)) :> int32)))) :> uint32))))
         }
      };
      (C_175 : (__retres_4 = (C_174 : ((C_173 : (ripple_1 | ones_1)) :> uint32))));
      
      (return __retres_4)
   }
}

uint32 snoob3(uint32 x_6)
behavior default:
  ensures (C_203 : true);
{  
   (var uint32 smallest_2);
   
   (var uint32 ripple_2);
   
   (var uint32 ones_2);
   
   (var int32 tmp_1);
   
   (var uint32 __retres_5);
   
   {  (C_181 : (smallest_2 = (C_180 : ((C_179 : (x_6 &
                                                  (C_178 : ((C_177 : (- x_6)) :> uint32)))) :> uint32))));
      (C_184 : (ripple_2 = (C_183 : ((C_182 : (x_6 + smallest_2)) :> uint32))));
      (C_187 : (ones_2 = (C_186 : ((C_185 : (x_6 ^ ripple_2)) :> uint32))));
      
      {  (C_189 : (tmp_1 = (C_188 : pop(ones_2))));
         
         {  
            (assert for default: (C_192 : (1 <= (2147483647 >>> (tmp_1 - 2)))));
            
            (assert for default: (C_191 : ((tmp_1 - 2) < 32)));
            
            (assert for default: (C_190 : ((tmp_1 - 2) >= 0)));
            (C_199 : (ones_2 = (C_198 : ((C_197 : ((C_196 : ((C_195 : 
                                                             (1 <<
                                                               (C_194 : (
                                                               (C_193 : 
                                                               (tmp_1 -
                                                                 2)) :> int32)))) :> int32)) -
                                                    1)) :> uint32))))
         }
      };
      (C_202 : (__retres_5 = (C_201 : ((C_200 : (ripple_2 | ones_2)) :> uint32))));
      
      (return __retres_5)
   }
}

uint32 next_set_of_n_elements(uint32 x)
behavior default:
  ensures (C_228 : true);
{  
   (var uint32 smallest_3);
   
   (var uint32 ripple_3);
   
   (var uint32 new_smallest);
   
   (var uint32 ones_3);
   
   (var uint32 __retres_6);
   
   {  (if (x == 0) then 
      {  (C_204 : (__retres_6 = 0));
         
         (goto return_label)
      } else ());
      (C_209 : (smallest_3 = (C_208 : ((C_207 : (x &
                                                  (C_206 : ((C_205 : (- x)) :> uint32)))) :> uint32))));
      (C_212 : (ripple_3 = (C_211 : ((C_210 : (x + smallest_3)) :> uint32))));
      (C_217 : (new_smallest = (C_216 : ((C_215 : (ripple_3 &
                                                    (C_214 : ((C_213 : 
                                                              (- ripple_3)) :> uint32)))) :> uint32))));
      (C_224 : (ones_3 = (C_223 : ((C_222 : ((C_221 : ((C_220 : ((C_219 : (
                                                                 (C_218 : 
                                                                 (new_smallest /
                                                                   smallest_3)) :> uint32)) /
                                                                  2)) :> uint32)) -
                                              1)) :> uint32))));
      (C_227 : (__retres_6 = (C_226 : ((C_225 : (ripple_3 | ones_3)) :> uint32))));
      (return_label : 
      (return __retres_6))
   }
}

int32 snoob4(int32 x_7)
behavior default:
  ensures (C_252 : true);
{  
   (var int32 y);
   
   (var int32 __retres_7);
   
   {  (C_235 : (y = (C_234 : ((C_233 : (x_7 +
                                         (C_232 : ((C_231 : (x_7 &
                                                              (C_230 : (
                                                              (C_229 : 
                                                              (- x_7)) :> int32)))) :> int32)))) :> int32))));
      (C_240 : (x_7 = (C_239 : ((C_238 : (x_7 &
                                           (C_237 : ((C_236 : (~ y)) :> int32)))) :> int32))));
      
      {  
         loop 
         while (true)
         {  
            {  (if ((C_242 : ((C_241 : (x_7 & 1)) :> int32)) == 0) then () else 
               (goto while_0_break));
               (C_245 : (x_7 = (C_244 : ((C_243 : (x_7 / 2)) :> int32))))
            }
         };
         (while_0_break : ())
      };
      (C_248 : (x_7 = (C_247 : ((C_246 : (x_7 / 2)) :> int32))));
      (C_251 : (__retres_7 = (C_250 : ((C_249 : (y | x_7)) :> int32))));
      
      (return __retres_7)
   }
}

int32 printf()
behavior default:
  assigns \nothing;
  ensures (C_253 : true);
;

int32 strtol()
behavior default:
  assigns \nothing;
  ensures (C_254 : true);
;

int32 main(int32 argc, char_xP[..] argv)
behavior default:
  ensures (C_294 : true);
{  
   (var int32 n_1);
   
   (var uint32 x_8);
   
   (var uint32 y_0);
   
   (var uint32 z);
   
   (var uint32 u);
   
   (var uint32 v);
   
   (var uint32 w);
   
   (var int32 __retres_8);
   
   {  (if (argc != 2) then 
      {  (C_255 : printf());
         (C_256 : exit(1))
      } else ());
      (C_260 : (n_1 = (C_259 : strtol())));
      (if (n_1 < 1) then 
      (goto _LOR) else (if (n_1 > 7) then 
                       (goto _LOR) else ()));
      
      (goto _LOR_0);
      (_LOR : 
      {  (C_261 : printf());
         (C_262 : exit(1))
      });
      (_LOR_0 : ());
      (C_263 : printf());
      
      {  
         (assert for default: (C_266 : (1 <= (2147483647 >>> n_1))));
         
         (assert for default: (C_265 : (n_1 < 32)));
         
         (assert for default: (C_264 : (n_1 >= 0)));
         (C_271 : (x_8 = (C_270 : ((C_269 : ((C_268 : ((C_267 : (1 << n_1)) :> int32)) -
                                              1)) :> uint32))))
      };
      (C_272 : (y_0 = x_8));
      (C_273 : (z = x_8));
      (C_274 : (u = x_8));
      (C_275 : (v = x_8));
      (C_276 : (w = x_8));
      
      {  
         loop 
         while (true)
         {  
            {  
               {  (C_277 : printf());
                  (C_279 : (y_0 = (C_278 : snoob1(x_8))));
                  (C_281 : (z = (C_280 : snoob2(x_8))));
                  (C_283 : (u = (C_282 : snoob3(x_8))));
                  (C_285 : (v = (C_284 : next_set_of_n_elements(x_8))));
                  (C_290 : (let __cil_tmp =
                           (C_287 : snoob4((C_286 : (x_8 :> int32))))
                           in (C_289 : (w = (C_288 : (__cil_tmp :> uint32))))));
                  (C_292 : (x_8 = (C_291 : snoob(x_8))))
               };
               (if (x_8 <= 255) then () else 
               (goto while_1_break))
            }
         };
         (while_1_break : ())
      };
      (C_293 : (__retres_8 = 0));
      
      (return __retres_8)
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs hd_snoob.jessie/hd_snoob.cloc hd_snoob.jessie/hd_snoob.jc
type __string_Argument_must_be_an_integer_from_1_to_7___3

type __string_Need_exactly_one_argument__an_integer_from_1_to_7___4

type __string_n____d__2

type __string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1

type char_P

type char_xP

type int32

type int8

type padding

type uint16

type uint32

type unsigned_short_P

type void_P

exception Goto__LOR_0_exc of unit

exception Goto__LOR_exc of unit

exception Goto_while_0_break_exc of unit

exception Goto_while_1_break_exc of unit

exception Loop_continue_exc of unit

exception Loop_exit_exc of unit

exception Return_label_exc of unit

logic __string_Argument_must_be_an_integer_from_1_to_7__:  -> char_P pointer

logic __string_Need_exactly_one_argument__an_integer_from_1_to_7__:  -> char_P pointer

logic __string_n____d_:  -> char_P pointer

logic __string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_:  -> char_P pointer

logic char_P_tag:  -> char_P tag_id

axiom char_P_int : (int_of_tag(char_P_tag) = (1))

logic char_P_of_pointer_address: unit pointer -> char_P pointer

axiom char_P_of_pointer_address_of_pointer_addr :
 (forall p:char_P pointer.
  (p = char_P_of_pointer_address(pointer_address(p))))

axiom char_P_parenttag_bottom : parenttag(char_P_tag, bottom_tag)

axiom char_P_tags :
 (forall x:char_P pointer.
  (forall char_P_tag_table:char_P tag_table.
   instanceof(char_P_tag_table, x, char_P_tag)))

logic char_xP_tag:  -> char_xP tag_id

axiom char_xP_int : (int_of_tag(char_xP_tag) = (1))

logic char_xP_of_pointer_address: unit pointer -> char_xP pointer

axiom char_xP_of_pointer_address_of_pointer_addr :
 (forall p:char_xP pointer.
  (p = char_xP_of_pointer_address(pointer_address(p))))

axiom char_xP_parenttag_bottom : parenttag(char_xP_tag, bottom_tag)

axiom char_xP_tags :
 (forall x:char_xP pointer.
  (forall char_xP_tag_table:char_xP tag_table.
   instanceof(char_xP_tag_table, x, char_xP_tag)))

logic integer_of_int32: int32 -> int

predicate eq_int32(x:int32, y:int32) =
 eq_int(integer_of_int32(x), integer_of_int32(y))

logic integer_of_int8: int8 -> int

predicate eq_int8(x:int8, y:int8) =
 eq_int(integer_of_int8(x), integer_of_int8(y))

logic integer_of_uint16: uint16 -> int

predicate eq_uint16(x:uint16, y:uint16) =
 eq_int(integer_of_uint16(x), integer_of_uint16(y))

logic integer_of_uint32: uint32 -> int

predicate eq_uint32(x:uint32, y:uint32) =
 eq_int(integer_of_uint32(x), integer_of_uint32(y))

logic int32_of_integer: int -> int32

axiom int32_coerce :
 (forall x:int.
  ((le_int((-2147483648), x) and le_int(x, (2147483647))) ->
   eq_int(integer_of_int32(int32_of_integer(x)), x)))

axiom int32_range :
 (forall x:int32.
  (le_int((-2147483648), integer_of_int32(x))
  and le_int(integer_of_int32(x), (2147483647))))

logic int8_of_integer: int -> int8

axiom int8_coerce :
 (forall x:int.
  ((le_int((-128), x) and le_int(x, (127))) ->
   eq_int(integer_of_int8(int8_of_integer(x)), x)))

axiom int8_range :
 (forall x:int8.
  (le_int((-128), integer_of_int8(x)) and le_int(integer_of_int8(x), (127))))

predicate left_valid_struct_char_P(p:char_P pointer, a:int,
 char_P_alloc_table:char_P alloc_table) =
 (offset_min(char_P_alloc_table, p) <= a)

predicate left_valid_struct_char_xP(p:char_xP pointer, a:int,
 char_xP_alloc_table:char_xP alloc_table) =
 (offset_min(char_xP_alloc_table, p) <= a)

predicate left_valid_struct_unsigned_short_P(p:unsigned_short_P pointer,
 a:int, unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 (offset_min(unsigned_short_P_alloc_table, p) <= a)

predicate left_valid_struct_void_P(p:void_P pointer, a:int,
 void_P_alloc_table:void_P alloc_table) =
 (offset_min(void_P_alloc_table, p) <= a)

function maximum(i_26:int, j_2:int) : int =
 (if lt_int_bool(i_26, j_2) then j_2 else i_26)

logic memchr: char_P pointer, int, int, (char_P, int8) memory -> bool

axiom memchr_def :
 (forall char_P_char_M_s_7_at_L:(char_P, int8) memory.
  (forall s_0_0:char_P pointer.
   (forall c_0:int.
    (forall n_3:int.
     (eq_bool(memchr(s_0_0, c_0, n_3, char_P_char_M_s_7_at_L), true)
     <-> (exists i_0:int32.
          (le_int((0), integer_of_int32(i_0))
          and (lt_int(integer_of_int32(i_0), n_3)
              and eq_int(integer_of_int8(select(char_P_char_M_s_7_at_L,
                                         shift(s_0_0, integer_of_int32(i_0)))),
                  c_0)))))))))

logic memcmp: char_P pointer, char_P pointer, int, (char_P, int8) memory,
 (char_P, int8) memory -> int

axiom memcmp_range :
 (forall char_P_char_M_s2_6_at_L:(char_P, int8) memory.
  (forall char_P_char_M_s1_5_at_L:(char_P, int8) memory.
   (forall s1_0_0:char_P pointer.
    (forall s2_0_0:char_P pointer.
     (forall n_0:int.
      (le_int(sub_int(neg_int((2147483647)), (1)),
       memcmp(s1_0_0, s2_0_0, n_0, char_P_char_M_s2_6_at_L,
       char_P_char_M_s1_5_at_L))
      and le_int(memcmp(s1_0_0, s2_0_0, n_0, char_P_char_M_s2_6_at_L,
                 char_P_char_M_s1_5_at_L),
          (2147483647))))))))

logic strlen: char_P pointer, (char_P, int8) memory -> int

axiom memcmp_strlen_left :
 (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
  (forall s1_2:char_P pointer.
   (forall s2_2:char_P pointer.
    (forall n_6:int.
     ((eq_int(memcmp(s1_2, s2_2, n_6, char_P_char_M_s_3_9_at_L,
              char_P_char_M_s_3_9_at_L),
       (0))
      and lt_int(strlen(s1_2, char_P_char_M_s_3_9_at_L), n_6)) ->
      eq_int(strlen(s1_2, char_P_char_M_s_3_9_at_L),
      strlen(s2_2, char_P_char_M_s_3_9_at_L)))))))

axiom memcmp_strlen_right :
 (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
  (forall s1_3:char_P pointer.
   (forall s2_3:char_P pointer.
    (forall n_7:int.
     ((eq_int(memcmp(s1_3, s2_3, n_7, char_P_char_M_s_3_9_at_L,
              char_P_char_M_s_3_9_at_L),
       (0))
      and lt_int(strlen(s2_3, char_P_char_M_s_3_9_at_L), n_7)) ->
      eq_int(strlen(s1_3, char_P_char_M_s_3_9_at_L),
      strlen(s2_3, char_P_char_M_s_3_9_at_L)))))))

axiom memcmp_strlen_shift_left :
 (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
  (forall s1_4:char_P pointer.
   (forall s2_4:char_P pointer.
    (forall k_0:int.
     (forall n_8:int.
      ((eq_int(memcmp(s1_4, shift(s2_4, k_0), n_8, char_P_char_M_s_3_9_at_L,
               char_P_char_M_s_3_9_at_L),
        (0))
       and (le_int((0), k_0)
           and lt_int(strlen(s1_4, char_P_char_M_s_3_9_at_L), n_8))) ->
       (le_int((0), strlen(s2_4, char_P_char_M_s_3_9_at_L))
       and le_int(strlen(s2_4, char_P_char_M_s_3_9_at_L),
           add_int(k_0, strlen(s1_4, char_P_char_M_s_3_9_at_L))))))))))

axiom memcmp_strlen_shift_right :
 (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
  (forall s1_5:char_P pointer.
   (forall s2_5:char_P pointer.
    (forall k_1:int.
     (forall n_9:int.
      ((eq_int(memcmp(shift(s1_5, k_1), s2_5, n_9, char_P_char_M_s_3_9_at_L,
               char_P_char_M_s_3_9_at_L),
        (0))
       and (le_int((0), k_1)
           and lt_int(strlen(s2_5, char_P_char_M_s_3_9_at_L), n_9))) ->
       (le_int((0), strlen(s1_5, char_P_char_M_s_3_9_at_L))
       and le_int(strlen(s1_5, char_P_char_M_s_3_9_at_L),
           add_int(k_1, strlen(s2_5, char_P_char_M_s_3_9_at_L))))))))))

axiom memcmp_zero :
 (forall char_P_char_M_s2_6_at_L:(char_P, int8) memory.
  (forall char_P_char_M_s1_5_at_L:(char_P, int8) memory.
   (forall s1_1_0:char_P pointer.
    (forall s2_1_0:char_P pointer.
     (forall n_1:int.
      (eq_int(memcmp(s1_1_0, s2_1_0, n_1, char_P_char_M_s2_6_at_L,
              char_P_char_M_s1_5_at_L),
       (0))
      <-> (forall i:int.
           ((le_int((0), i) and lt_int(i, n_1)) ->
            eq_int(integer_of_int8(select(char_P_char_M_s1_5_at_L,
                                   shift(s1_1_0, i))),
            integer_of_int8(select(char_P_char_M_s2_6_at_L, shift(s2_1_0, i))))))))))))

logic memset: char_P pointer, int, int, (char_P, int8) memory -> bool

axiom memset_def :
 (forall char_P_char_M_s_1_8_at_L:(char_P, int8) memory.
  (forall s_2:char_P pointer.
   (forall c_2:int.
    (forall n_5:int.
     (eq_bool(memset(s_2, c_2, n_5, char_P_char_M_s_1_8_at_L), true)
     <-> (forall i_1:int.
          ((le_int((0), i_1) and lt_int(i_1, n_5)) ->
           eq_int(integer_of_int8(select(char_P_char_M_s_1_8_at_L,
                                  shift(s_2, i_1))),
           c_2))))))))

function minimum(i_25:int, j_1:int) : int =
 (if lt_int_bool(i_25, j_1) then i_25 else j_1)

axiom no_assign_memchr_0 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int8) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s_7_at_L:(char_P, int8) memory.
     (forall n_2:int.
      (forall c:int.
       (forall s_0:char_P pointer.
        ((pset_disjoint(tmp,
          pset_range(pset_singleton(s_0), (0), sub_int(n_2, (1))))
         and not_assigns(tmpalloc, char_P_char_M_s_7_at_L, tmpmem, tmp)) ->
         (memchr(s_0, c, n_2, char_P_char_M_s_7_at_L) = memchr(s_0, c, n_2,
                                                        tmpmem))))))))))

axiom no_assign_memcmp_0 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int8) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s1_5_at_L:(char_P, int8) memory.
     (forall char_P_char_M_s2_6_at_L:(char_P, int8) memory.
      (forall n:int.
       (forall s2_1:char_P pointer.
        (forall s1_1:char_P pointer.
         ((pset_disjoint(tmp,
           pset_range(pset_singleton(s2_1), (0), sub_int(n, (1))))
          and not_assigns(tmpalloc, char_P_char_M_s2_6_at_L, tmpmem, tmp)) ->
          (memcmp(s1_1, s2_1, n, char_P_char_M_s2_6_at_L,
           char_P_char_M_s1_5_at_L) = memcmp(s1_1, s2_1, n, tmpmem,
                                      char_P_char_M_s1_5_at_L)))))))))))

axiom no_assign_memcmp_1 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int8) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s1_5_at_L:(char_P, int8) memory.
     (forall char_P_char_M_s2_6_at_L:(char_P, int8) memory.
      (forall n:int.
       (forall s2_1:char_P pointer.
        (forall s1_1:char_P pointer.
         ((pset_disjoint(tmp,
           pset_range(pset_singleton(s1_1), (0), sub_int(n, (1))))
          and not_assigns(tmpalloc, char_P_char_M_s1_5_at_L, tmpmem, tmp)) ->
          (memcmp(s1_1, s2_1, n, char_P_char_M_s2_6_at_L,
           char_P_char_M_s1_5_at_L) = memcmp(s1_1, s2_1, n,
                                      char_P_char_M_s2_6_at_L, tmpmem)))))))))))

axiom no_assign_memset_0 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int8) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s_1_8_at_L:(char_P, int8) memory.
     (forall n_4:int.
      (forall c_1:int.
       (forall s_1:char_P pointer.
        ((pset_disjoint(tmp,
          pset_range(pset_singleton(s_1), (0), sub_int(n_4, (1))))
         and not_assigns(tmpalloc, char_P_char_M_s_1_8_at_L, tmpmem, tmp)) ->
         (memset(s_1, c_1, n_4, char_P_char_M_s_1_8_at_L) = memset(s_1, c_1,
                                                            n_4, tmpmem))))))))))

logic strchr: char_P pointer, int, (char_P, int8) memory -> bool

axiom no_assign_strchr_0 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int8) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s_15_14_at_L:(char_P, int8) memory.
     (forall c_3:int.
      (forall s_15:char_P pointer.
       ((pset_disjoint(tmp,
         pset_range(pset_singleton(s_15), (0),
         strlen(s_15, char_P_char_M_s_15_14_at_L)))
        and not_assigns(tmpalloc, char_P_char_M_s_15_14_at_L, tmpmem, tmp)) ->
        (strchr(s_15, c_3, char_P_char_M_s_15_14_at_L) = strchr(s_15, c_3,
                                                         tmpmem)))))))))

logic strcmp: char_P pointer, char_P pointer, (char_P, int8) memory,
 (char_P, int8) memory -> int

axiom no_assign_strcmp_0 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int8) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s1_6_10_at_L:(char_P, int8) memory.
     (forall char_P_char_M_s2_6_11_at_L:(char_P, int8) memory.
      (forall s2_6:char_P pointer.
       (forall s1_6:char_P pointer.
        ((pset_disjoint(tmp,
          pset_range(pset_singleton(s2_6), (0),
          strlen(s2_6, char_P_char_M_s2_6_11_at_L)))
         and not_assigns(tmpalloc, char_P_char_M_s2_6_11_at_L, tmpmem, tmp)) ->
         (strcmp(s1_6, s2_6, char_P_char_M_s2_6_11_at_L,
          char_P_char_M_s1_6_10_at_L) = strcmp(s1_6, s2_6, tmpmem,
                                        char_P_char_M_s1_6_10_at_L))))))))))

axiom no_assign_strcmp_1 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int8) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s1_6_10_at_L:(char_P, int8) memory.
     (forall char_P_char_M_s2_6_11_at_L:(char_P, int8) memory.
      (forall s2_6:char_P pointer.
       (forall s1_6:char_P pointer.
        ((pset_disjoint(tmp,
          pset_range(pset_singleton(s1_6), (0),
          strlen(s1_6, char_P_char_M_s1_6_10_at_L)))
         and not_assigns(tmpalloc, char_P_char_M_s1_6_10_at_L, tmpmem, tmp)) ->
         (strcmp(s1_6, s2_6, char_P_char_M_s2_6_11_at_L,
          char_P_char_M_s1_6_10_at_L) = strcmp(s1_6, s2_6,
                                        char_P_char_M_s2_6_11_at_L, tmpmem))))))))))

axiom no_assign_strlen_0 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int8) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
     (forall s_3:char_P pointer.
      ((pset_disjoint(tmp, pset_range_right(pset_singleton(s_3), (0)))
       and not_assigns(tmpalloc, char_P_char_M_s_3_9_at_L, tmpmem, tmp)) ->
       (strlen(s_3, char_P_char_M_s_3_9_at_L) = strlen(s_3, tmpmem))))))))

logic strncmp: char_P pointer, char_P pointer, int, (char_P, int8) memory,
 (char_P, int8) memory -> int

axiom no_assign_strncmp_0 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int8) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s1_9_12_at_L:(char_P, int8) memory.
     (forall char_P_char_M_s2_9_13_at_L:(char_P, int8) memory.
      (forall n_10:int.
       (forall s2_9:char_P pointer.
        (forall s1_9:char_P pointer.
         ((pset_disjoint(tmp,
           pset_range(pset_singleton(s2_9), (0), sub_int(n_10, (1))))
          and not_assigns(tmpalloc, char_P_char_M_s2_9_13_at_L, tmpmem, tmp)) ->
          (strncmp(s1_9, s2_9, n_10, char_P_char_M_s2_9_13_at_L,
           char_P_char_M_s1_9_12_at_L) = strncmp(s1_9, s2_9, n_10, tmpmem,
                                         char_P_char_M_s1_9_12_at_L)))))))))))

axiom no_assign_strncmp_1 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int8) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s1_9_12_at_L:(char_P, int8) memory.
     (forall char_P_char_M_s2_9_13_at_L:(char_P, int8) memory.
      (forall n_10:int.
       (forall s2_9:char_P pointer.
        (forall s1_9:char_P pointer.
         ((pset_disjoint(tmp,
           pset_range(pset_singleton(s1_9), (0), sub_int(n_10, (1))))
          and not_assigns(tmpalloc, char_P_char_M_s1_9_12_at_L, tmpmem, tmp)) ->
          (strncmp(s1_9, s2_9, n_10, char_P_char_M_s2_9_13_at_L,
           char_P_char_M_s1_9_12_at_L) = strncmp(s1_9, s2_9, n_10,
                                         char_P_char_M_s2_9_13_at_L, tmpmem)))))))))))

logic wcslen: unsigned_short_P pointer,
 (unsigned_short_P, uint16) memory -> int

logic wcscmp: unsigned_short_P pointer, unsigned_short_P pointer,
 (unsigned_short_P, uint16) memory, (unsigned_short_P, uint16) memory -> int

axiom no_assign_wcscmp_0 :
 (forall tmp:unsigned_short_P pset.
  (forall tmpmem:(unsigned_short_P, uint16) memory.
   (forall tmpalloc:unsigned_short_P alloc_table.
    (forall unsigned_short_P_unsigned_short_M_s1_11_16_at_L:
     (unsigned_short_P, uint16) memory.
     (forall unsigned_short_P_unsigned_short_M_s2_11_17_at_L:
      (unsigned_short_P, uint16) memory.
      (forall s2_11:unsigned_short_P pointer.
       (forall s1_11:unsigned_short_P pointer.
        ((pset_disjoint(tmp,
          pset_range(pset_singleton(s2_11), (0),
          wcslen(s2_11, unsigned_short_P_unsigned_short_M_s2_11_17_at_L)))
         and not_assigns(tmpalloc,
             unsigned_short_P_unsigned_short_M_s2_11_17_at_L, tmpmem, tmp)) ->
         (wcscmp(s1_11, s2_11,
          unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
          unsigned_short_P_unsigned_short_M_s1_11_16_at_L) = wcscmp(s1_11,
                                                             s2_11, tmpmem,
                                                             unsigned_short_P_unsigned_short_M_s1_11_16_at_L))))))))))

axiom no_assign_wcscmp_1 :
 (forall tmp:unsigned_short_P pset.
  (forall tmpmem:(unsigned_short_P, uint16) memory.
   (forall tmpalloc:unsigned_short_P alloc_table.
    (forall unsigned_short_P_unsigned_short_M_s1_11_16_at_L:
     (unsigned_short_P, uint16) memory.
     (forall unsigned_short_P_unsigned_short_M_s2_11_17_at_L:
      (unsigned_short_P, uint16) memory.
      (forall s2_11:unsigned_short_P pointer.
       (forall s1_11:unsigned_short_P pointer.
        ((pset_disjoint(tmp,
          pset_range(pset_singleton(s1_11), (0),
          wcslen(s1_11, unsigned_short_P_unsigned_short_M_s1_11_16_at_L)))
         and not_assigns(tmpalloc,
             unsigned_short_P_unsigned_short_M_s1_11_16_at_L, tmpmem, tmp)) ->
         (wcscmp(s1_11, s2_11,
          unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
          unsigned_short_P_unsigned_short_M_s1_11_16_at_L) = wcscmp(s1_11,
                                                             s2_11,
                                                             unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
                                                             tmpmem))))))))))

axiom no_assign_wcslen_0 :
 (forall tmp:unsigned_short_P pset.
  (forall tmpmem:(unsigned_short_P, uint16) memory.
   (forall tmpalloc:unsigned_short_P alloc_table.
    (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:
     (unsigned_short_P, uint16) memory.
     (forall s_17:unsigned_short_P pointer.
      ((pset_disjoint(tmp, pset_range_right(pset_singleton(s_17), (0)))
       and not_assigns(tmpalloc,
           unsigned_short_P_unsigned_short_M_s_17_15_at_L, tmpmem, tmp)) ->
       (wcslen(s_17, unsigned_short_P_unsigned_short_M_s_17_15_at_L) = 
       wcslen(s_17, tmpmem))))))))

logic wcsncmp: unsigned_short_P pointer, unsigned_short_P pointer, int,
 (unsigned_short_P, uint16) memory, (unsigned_short_P, uint16) memory -> int

axiom no_assign_wcsncmp_0 :
 (forall tmp:unsigned_short_P pset.
  (forall tmpmem:(unsigned_short_P, uint16) memory.
   (forall tmpalloc:unsigned_short_P alloc_table.
    (forall unsigned_short_P_unsigned_short_M_s1_13_18_at_L:
     (unsigned_short_P, uint16) memory.
     (forall unsigned_short_P_unsigned_short_M_s2_13_19_at_L:
      (unsigned_short_P, uint16) memory.
      (forall n_12:int.
       (forall s2_13:unsigned_short_P pointer.
        (forall s1_13:unsigned_short_P pointer.
         ((pset_disjoint(tmp,
           pset_range(pset_singleton(s2_13), (0), sub_int(n_12, (1))))
          and not_assigns(tmpalloc,
              unsigned_short_P_unsigned_short_M_s2_13_19_at_L, tmpmem, tmp)) ->
          (wcsncmp(s1_13, s2_13, n_12,
           unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
           unsigned_short_P_unsigned_short_M_s1_13_18_at_L) = wcsncmp(s1_13,
                                                              s2_13, n_12,
                                                              tmpmem,
                                                              unsigned_short_P_unsigned_short_M_s1_13_18_at_L)))))))))))

axiom no_assign_wcsncmp_1 :
 (forall tmp:unsigned_short_P pset.
  (forall tmpmem:(unsigned_short_P, uint16) memory.
   (forall tmpalloc:unsigned_short_P alloc_table.
    (forall unsigned_short_P_unsigned_short_M_s1_13_18_at_L:
     (unsigned_short_P, uint16) memory.
     (forall unsigned_short_P_unsigned_short_M_s2_13_19_at_L:
      (unsigned_short_P, uint16) memory.
      (forall n_12:int.
       (forall s2_13:unsigned_short_P pointer.
        (forall s1_13:unsigned_short_P pointer.
         ((pset_disjoint(tmp,
           pset_range(pset_singleton(s1_13), (0), sub_int(n_12, (1))))
          and not_assigns(tmpalloc,
              unsigned_short_P_unsigned_short_M_s1_13_18_at_L, tmpmem, tmp)) ->
          (wcsncmp(s1_13, s2_13, n_12,
           unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
           unsigned_short_P_unsigned_short_M_s1_13_18_at_L) = wcsncmp(s1_13,
                                                              s2_13, n_12,
                                                              unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
                                                              tmpmem)))))))))))

axiom no_update_memchr_0 :
 (forall tmp:char_P pointer.
  (forall tmpval:int8.
   (forall char_P_char_M_s_7_at_L:(char_P, int8) memory.
    (forall n_2:int.
     (forall c:int.
      (forall s_0:char_P pointer.
       ((not in_pset(tmp,
             pset_range(pset_singleton(s_0), (0), sub_int(n_2, (1))))) ->
        (memchr(s_0, c, n_2, char_P_char_M_s_7_at_L) = memchr(s_0, c, n_2,
                                                       store(char_P_char_M_s_7_at_L,
                                                       tmp, tmpval))))))))))

axiom no_update_memcmp_0 :
 (forall tmp:char_P pointer.
  (forall tmpval:int8.
   (forall char_P_char_M_s1_5_at_L:(char_P, int8) memory.
    (forall char_P_char_M_s2_6_at_L:(char_P, int8) memory.
     (forall n:int.
      (forall s2_1:char_P pointer.
       (forall s1_1:char_P pointer.
        ((not in_pset(tmp,
              pset_range(pset_singleton(s2_1), (0), sub_int(n, (1))))) ->
         (memcmp(s1_1, s2_1, n, char_P_char_M_s2_6_at_L,
          char_P_char_M_s1_5_at_L) = memcmp(s1_1, s2_1, n,
                                     store(char_P_char_M_s2_6_at_L, tmp,
                                     tmpval), char_P_char_M_s1_5_at_L))))))))))

axiom no_update_memcmp_1 :
 (forall tmp:char_P pointer.
  (forall tmpval:int8.
   (forall char_P_char_M_s1_5_at_L:(char_P, int8) memory.
    (forall char_P_char_M_s2_6_at_L:(char_P, int8) memory.
     (forall n:int.
      (forall s2_1:char_P pointer.
       (forall s1_1:char_P pointer.
        ((not in_pset(tmp,
              pset_range(pset_singleton(s1_1), (0), sub_int(n, (1))))) ->
         (memcmp(s1_1, s2_1, n, char_P_char_M_s2_6_at_L,
          char_P_char_M_s1_5_at_L) = memcmp(s1_1, s2_1, n,
                                     char_P_char_M_s2_6_at_L,
                                     store(char_P_char_M_s1_5_at_L, tmp,
                                     tmpval)))))))))))

axiom no_update_memset_0 :
 (forall tmp:char_P pointer.
  (forall tmpval:int8.
   (forall char_P_char_M_s_1_8_at_L:(char_P, int8) memory.
    (forall n_4:int.
     (forall c_1:int.
      (forall s_1:char_P pointer.
       ((not in_pset(tmp,
             pset_range(pset_singleton(s_1), (0), sub_int(n_4, (1))))) ->
        (memset(s_1, c_1, n_4, char_P_char_M_s_1_8_at_L) = memset(s_1, c_1,
                                                           n_4,
                                                           store(char_P_char_M_s_1_8_at_L,
                                                           tmp, tmpval))))))))))

axiom no_update_strchr_0 :
 (forall tmp:char_P pointer.
  (forall tmpval:int8.
   (forall char_P_char_M_s_15_14_at_L:(char_P, int8) memory.
    (forall c_3:int.
     (forall s_15:char_P pointer.
      ((not in_pset(tmp,
            pset_range(pset_singleton(s_15), (0),
            strlen(s_15, char_P_char_M_s_15_14_at_L)))) ->
       (strchr(s_15, c_3, char_P_char_M_s_15_14_at_L) = strchr(s_15, c_3,
                                                        store(char_P_char_M_s_15_14_at_L,
                                                        tmp, tmpval)))))))))

axiom no_update_strcmp_0 :
 (forall tmp:char_P pointer.
  (forall tmpval:int8.
   (forall char_P_char_M_s1_6_10_at_L:(char_P, int8) memory.
    (forall char_P_char_M_s2_6_11_at_L:(char_P, int8) memory.
     (forall s2_6:char_P pointer.
      (forall s1_6:char_P pointer.
       ((not in_pset(tmp,
             pset_range(pset_singleton(s2_6), (0),
             strlen(s2_6, char_P_char_M_s2_6_11_at_L)))) ->
        (strcmp(s1_6, s2_6, char_P_char_M_s2_6_11_at_L,
         char_P_char_M_s1_6_10_at_L) = strcmp(s1_6, s2_6,
                                       store(char_P_char_M_s2_6_11_at_L, tmp,
                                       tmpval), char_P_char_M_s1_6_10_at_L)))))))))

axiom no_update_strcmp_1 :
 (forall tmp:char_P pointer.
  (forall tmpval:int8.
   (forall char_P_char_M_s1_6_10_at_L:(char_P, int8) memory.
    (forall char_P_char_M_s2_6_11_at_L:(char_P, int8) memory.
     (forall s2_6:char_P pointer.
      (forall s1_6:char_P pointer.
       ((not in_pset(tmp,
             pset_range(pset_singleton(s1_6), (0),
             strlen(s1_6, char_P_char_M_s1_6_10_at_L)))) ->
        (strcmp(s1_6, s2_6, char_P_char_M_s2_6_11_at_L,
         char_P_char_M_s1_6_10_at_L) = strcmp(s1_6, s2_6,
                                       char_P_char_M_s2_6_11_at_L,
                                       store(char_P_char_M_s1_6_10_at_L, tmp,
                                       tmpval))))))))))

axiom no_update_strlen_0 :
 (forall tmp:char_P pointer.
  (forall tmpval:int8.
   (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
    (forall s_3:char_P pointer.
     ((not in_pset(tmp, pset_range_right(pset_singleton(s_3), (0)))) ->
      (strlen(s_3, char_P_char_M_s_3_9_at_L) = strlen(s_3,
                                               store(char_P_char_M_s_3_9_at_L,
                                               tmp, tmpval))))))))

axiom no_update_strncmp_0 :
 (forall tmp:char_P pointer.
  (forall tmpval:int8.
   (forall char_P_char_M_s1_9_12_at_L:(char_P, int8) memory.
    (forall char_P_char_M_s2_9_13_at_L:(char_P, int8) memory.
     (forall n_10:int.
      (forall s2_9:char_P pointer.
       (forall s1_9:char_P pointer.
        ((not in_pset(tmp,
              pset_range(pset_singleton(s2_9), (0), sub_int(n_10, (1))))) ->
         (strncmp(s1_9, s2_9, n_10, char_P_char_M_s2_9_13_at_L,
          char_P_char_M_s1_9_12_at_L) = strncmp(s1_9, s2_9, n_10,
                                        store(char_P_char_M_s2_9_13_at_L,
                                        tmp, tmpval),
                                        char_P_char_M_s1_9_12_at_L))))))))))

axiom no_update_strncmp_1 :
 (forall tmp:char_P pointer.
  (forall tmpval:int8.
   (forall char_P_char_M_s1_9_12_at_L:(char_P, int8) memory.
    (forall char_P_char_M_s2_9_13_at_L:(char_P, int8) memory.
     (forall n_10:int.
      (forall s2_9:char_P pointer.
       (forall s1_9:char_P pointer.
        ((not in_pset(tmp,
              pset_range(pset_singleton(s1_9), (0), sub_int(n_10, (1))))) ->
         (strncmp(s1_9, s2_9, n_10, char_P_char_M_s2_9_13_at_L,
          char_P_char_M_s1_9_12_at_L) = strncmp(s1_9, s2_9, n_10,
                                        char_P_char_M_s2_9_13_at_L,
                                        store(char_P_char_M_s1_9_12_at_L,
                                        tmp, tmpval)))))))))))

axiom no_update_wcscmp_0 :
 (forall tmp:unsigned_short_P pointer.
  (forall tmpval:uint16.
   (forall unsigned_short_P_unsigned_short_M_s1_11_16_at_L:
    (unsigned_short_P, uint16) memory.
    (forall unsigned_short_P_unsigned_short_M_s2_11_17_at_L:
     (unsigned_short_P, uint16) memory.
     (forall s2_11:unsigned_short_P pointer.
      (forall s1_11:unsigned_short_P pointer.
       ((not in_pset(tmp,
             pset_range(pset_singleton(s2_11), (0),
             wcslen(s2_11, unsigned_short_P_unsigned_short_M_s2_11_17_at_L)))) ->
        (wcscmp(s1_11, s2_11,
         unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
         unsigned_short_P_unsigned_short_M_s1_11_16_at_L) = wcscmp(s1_11,
                                                            s2_11,
                                                            store(unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
                                                            tmp, tmpval),
                                                            unsigned_short_P_unsigned_short_M_s1_11_16_at_L)))))))))

axiom no_update_wcscmp_1 :
 (forall tmp:unsigned_short_P pointer.
  (forall tmpval:uint16.
   (forall unsigned_short_P_unsigned_short_M_s1_11_16_at_L:
    (unsigned_short_P, uint16) memory.
    (forall unsigned_short_P_unsigned_short_M_s2_11_17_at_L:
     (unsigned_short_P, uint16) memory.
     (forall s2_11:unsigned_short_P pointer.
      (forall s1_11:unsigned_short_P pointer.
       ((not in_pset(tmp,
             pset_range(pset_singleton(s1_11), (0),
             wcslen(s1_11, unsigned_short_P_unsigned_short_M_s1_11_16_at_L)))) ->
        (wcscmp(s1_11, s2_11,
         unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
         unsigned_short_P_unsigned_short_M_s1_11_16_at_L) = wcscmp(s1_11,
                                                            s2_11,
                                                            unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
                                                            store(unsigned_short_P_unsigned_short_M_s1_11_16_at_L,
                                                            tmp, tmpval))))))))))

axiom no_update_wcslen_0 :
 (forall tmp:unsigned_short_P pointer.
  (forall tmpval:uint16.
   (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:
    (unsigned_short_P, uint16) memory.
    (forall s_17:unsigned_short_P pointer.
     ((not in_pset(tmp, pset_range_right(pset_singleton(s_17), (0)))) ->
      (wcslen(s_17, unsigned_short_P_unsigned_short_M_s_17_15_at_L) = 
      wcslen(s_17,
      store(unsigned_short_P_unsigned_short_M_s_17_15_at_L, tmp, tmpval))))))))

axiom no_update_wcsncmp_0 :
 (forall tmp:unsigned_short_P pointer.
  (forall tmpval:uint16.
   (forall unsigned_short_P_unsigned_short_M_s1_13_18_at_L:
    (unsigned_short_P, uint16) memory.
    (forall unsigned_short_P_unsigned_short_M_s2_13_19_at_L:
     (unsigned_short_P, uint16) memory.
     (forall n_12:int.
      (forall s2_13:unsigned_short_P pointer.
       (forall s1_13:unsigned_short_P pointer.
        ((not in_pset(tmp,
              pset_range(pset_singleton(s2_13), (0), sub_int(n_12, (1))))) ->
         (wcsncmp(s1_13, s2_13, n_12,
          unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
          unsigned_short_P_unsigned_short_M_s1_13_18_at_L) = wcsncmp(s1_13,
                                                             s2_13, n_12,
                                                             store(unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
                                                             tmp, tmpval),
                                                             unsigned_short_P_unsigned_short_M_s1_13_18_at_L))))))))))

axiom no_update_wcsncmp_1 :
 (forall tmp:unsigned_short_P pointer.
  (forall tmpval:uint16.
   (forall unsigned_short_P_unsigned_short_M_s1_13_18_at_L:
    (unsigned_short_P, uint16) memory.
    (forall unsigned_short_P_unsigned_short_M_s2_13_19_at_L:
     (unsigned_short_P, uint16) memory.
     (forall n_12:int.
      (forall s2_13:unsigned_short_P pointer.
       (forall s1_13:unsigned_short_P pointer.
        ((not in_pset(tmp,
              pset_range(pset_singleton(s1_13), (0), sub_int(n_12, (1))))) ->
         (wcsncmp(s1_13, s2_13, n_12,
          unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
          unsigned_short_P_unsigned_short_M_s1_13_18_at_L) = wcsncmp(s1_13,
                                                             s2_13, n_12,
                                                             unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
                                                             store(unsigned_short_P_unsigned_short_M_s1_13_18_at_L,
                                                             tmp, tmpval)))))))))))

axiom pointer_addr_of_char_P_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(char_P_of_pointer_address(p))))

axiom pointer_addr_of_char_xP_of_pointer_address :
 (forall p:unit pointer.
  (p = pointer_address(char_xP_of_pointer_address(p))))

logic unsigned_short_P_of_pointer_address: unit pointer -> unsigned_short_P pointer

axiom pointer_addr_of_unsigned_short_P_of_pointer_address :
 (forall p:unit pointer.
  (p = pointer_address(unsigned_short_P_of_pointer_address(p))))

logic void_P_of_pointer_address: unit pointer -> void_P pointer

axiom pointer_addr_of_void_P_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(void_P_of_pointer_address(p))))

predicate right_valid_struct_char_P(p:char_P pointer, b:int,
 char_P_alloc_table:char_P alloc_table) =
 (offset_max(char_P_alloc_table, p) >= b)

predicate right_valid_struct_char_xP(p:char_xP pointer, b:int,
 char_xP_alloc_table:char_xP alloc_table) =
 (offset_max(char_xP_alloc_table, p) >= b)

predicate right_valid_struct_unsigned_short_P(p:unsigned_short_P pointer,
 b:int, unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 (offset_max(unsigned_short_P_alloc_table, p) >= b)

predicate right_valid_struct_void_P(p:void_P pointer, b:int,
 void_P_alloc_table:void_P alloc_table) =
 (offset_max(void_P_alloc_table, p) >= b)

axiom strchr_def :
 (forall char_P_char_M_s_15_14_at_L:(char_P, int8) memory.
  (forall s_16:char_P pointer.
   (forall c_4:int.
    (eq_bool(strchr(s_16, c_4, char_P_char_M_s_15_14_at_L), true)
    <-> (exists i_13:int.
         (le_int((0), i_13)
         and (le_int(i_13, strlen(s_16, char_P_char_M_s_15_14_at_L))
             and eq_int(integer_of_int8(select(char_P_char_M_s_15_14_at_L,
                                        shift(s_16, i_13))),
                 c_4))))))))

axiom strcmp_range :
 (forall char_P_char_M_s2_6_11_at_L:(char_P, int8) memory.
  (forall char_P_char_M_s1_6_10_at_L:(char_P, int8) memory.
   (forall s1_7:char_P pointer.
    (forall s2_7:char_P pointer.
     (le_int(sub_int(neg_int((2147483647)), (1)),
      strcmp(s1_7, s2_7, char_P_char_M_s2_6_11_at_L,
      char_P_char_M_s1_6_10_at_L))
     and le_int(strcmp(s1_7, s2_7, char_P_char_M_s2_6_11_at_L,
                char_P_char_M_s1_6_10_at_L),
         (2147483647)))))))

axiom strcmp_zero :
 (forall char_P_char_M_s2_6_11_at_L:(char_P, int8) memory.
  (forall char_P_char_M_s1_6_10_at_L:(char_P, int8) memory.
   (forall s1_8:char_P pointer.
    (forall s2_8:char_P pointer.
     (eq_int(strcmp(s1_8, s2_8, char_P_char_M_s2_6_11_at_L,
             char_P_char_M_s1_6_10_at_L),
      (0))
     <-> (eq_int(strlen(s1_8, char_P_char_M_s1_6_10_at_L),
          strlen(s2_8, char_P_char_M_s2_6_11_at_L))
         and (forall i_11:int.
              ((le_int((0), i_11)
               and le_int(i_11, strlen(s1_8, char_P_char_M_s1_6_10_at_L))) ->
               eq_int(integer_of_int8(select(char_P_char_M_s1_6_10_at_L,
                                      shift(s1_8, i_11))),
               integer_of_int8(select(char_P_char_M_s2_6_11_at_L,
                               shift(s2_8, i_11))))))))))))

predicate strict_valid_root_char_P(p:char_P pointer, a:int, b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) = a)
 and (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_root_char_xP(p:char_xP pointer, a:int, b:int,
 char_xP_alloc_table:char_xP alloc_table) =
 ((offset_min(char_xP_alloc_table, p) = a)
 and (offset_max(char_xP_alloc_table, p) = b))

predicate strict_valid_root_unsigned_short_P(p:unsigned_short_P pointer,
 a:int, b:int, unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 ((offset_min(unsigned_short_P_alloc_table, p) = a)
 and (offset_max(unsigned_short_P_alloc_table, p) = b))

predicate strict_valid_root_void_P(p:void_P pointer, a:int, b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) = a)
 and (offset_max(void_P_alloc_table, p) = b))

predicate strict_valid_struct_char_P(p:char_P pointer, a:int, b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) = a)
 and (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_struct_char_xP(p:char_xP pointer, a:int, b:int,
 char_xP_alloc_table:char_xP alloc_table) =
 ((offset_min(char_xP_alloc_table, p) = a)
 and (offset_max(char_xP_alloc_table, p) = b))

predicate strict_valid_struct_unsigned_short_P(p:unsigned_short_P pointer,
 a:int, b:int, unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 ((offset_min(unsigned_short_P_alloc_table, p) = a)
 and (offset_max(unsigned_short_P_alloc_table, p) = b))

predicate strict_valid_struct_void_P(p:void_P pointer, a:int, b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) = a)
 and (offset_max(void_P_alloc_table, p) = b))

axiom strlen_at_null :
 (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
  (forall s_8:char_P pointer.
   (le_int((0), strlen(s_8, char_P_char_M_s_3_9_at_L)) ->
    eq_int(integer_of_int8(select(char_P_char_M_s_3_9_at_L,
                           shift(s_8, strlen(s_8, char_P_char_M_s_3_9_at_L)))),
    (0)))))

axiom strlen_before_null :
 (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
  (forall s_7:char_P pointer.
   (forall i_4:int.
    ((le_int((0), i_4)
     and lt_int(i_4, strlen(s_7, char_P_char_M_s_3_9_at_L))) ->
     neq_int(integer_of_int8(select(char_P_char_M_s_3_9_at_L,
                             shift(s_7, i_4))),
     (0))))))

axiom strlen_create :
 (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
  (forall s_13:char_P pointer.
   (forall i_9:int.
    ((le_int((0), i_9)
     and (le_int(i_9, (2147483647))
         and eq_int(integer_of_int8(select(char_P_char_M_s_3_9_at_L,
                                    shift(s_13, i_9))),
             (0)))) ->
     (le_int((0), strlen(s_13, char_P_char_M_s_3_9_at_L))
     and le_int(strlen(s_13, char_P_char_M_s_3_9_at_L), i_9))))))

axiom strlen_create_shift :
 (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
  (forall s_14:char_P pointer.
   (forall i_10:int.
    (forall k:int.
     ((le_int((0), k)
      and (le_int(k, i_10)
          and (le_int(i_10, (2147483647))
              and eq_int(integer_of_int8(select(char_P_char_M_s_3_9_at_L,
                                         shift(s_14, i_10))),
                  (0))))) ->
      (le_int((0), strlen(shift(s_14, k), char_P_char_M_s_3_9_at_L))
      and le_int(strlen(shift(s_14, k), char_P_char_M_s_3_9_at_L),
          sub_int(i_10, k))))))))

axiom strlen_neg :
 (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
  (forall s_5:char_P pointer.
   ((forall i_3:int.
     ((le_int((0), i_3) and le_int(i_3, (2147483647))) ->
      neq_int(integer_of_int8(select(char_P_char_M_s_3_9_at_L,
                              shift(s_5, i_3))),
      (0)))) -> lt_int(strlen(s_5, char_P_char_M_s_3_9_at_L), (0)))))

axiom strlen_not_zero :
 (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
  (forall s_9:char_P pointer.
   (forall i_5:int.
    ((le_int((0), i_5)
     and (le_int(i_5, strlen(s_9, char_P_char_M_s_3_9_at_L))
         and neq_int(integer_of_int8(select(char_P_char_M_s_3_9_at_L,
                                     shift(s_9, i_5))),
             (0)))) -> lt_int(i_5, strlen(s_9, char_P_char_M_s_3_9_at_L))))))

axiom strlen_pos_or_null :
 (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
  (forall s_4:char_P pointer.
   (forall i_2:int.
    ((le_int((0), i_2)
     and (le_int(i_2, (2147483647))
         and ((forall j:int.
               ((le_int((0), j) and lt_int(j, i_2)) ->
                neq_int(integer_of_int8(select(char_P_char_M_s_3_9_at_L,
                                        shift(s_4, j))),
                (0))))
             and eq_int(integer_of_int8(select(char_P_char_M_s_3_9_at_L,
                                        shift(s_4, i_2))),
                 (0))))) ->
     eq_int(strlen(s_4, char_P_char_M_s_3_9_at_L), i_2)))))

axiom strlen_range :
 (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
  (forall s_6:char_P pointer.
   le_int(strlen(s_6, char_P_char_M_s_3_9_at_L), (2147483647))))

axiom strlen_shift :
 (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
  (forall s_12:char_P pointer.
   (forall i_8:int.
    ((le_int((0), i_8)
     and le_int(i_8, strlen(s_12, char_P_char_M_s_3_9_at_L))) ->
     eq_int(strlen(shift(s_12, i_8), char_P_char_M_s_3_9_at_L),
     sub_int(strlen(s_12, char_P_char_M_s_3_9_at_L), i_8))))))

axiom strlen_sup :
 (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
  (forall s_11:char_P pointer.
   (forall i_7:int.
    ((le_int((0), i_7)
     and eq_int(integer_of_int8(select(char_P_char_M_s_3_9_at_L,
                                shift(s_11, i_7))),
         (0))) ->
     (le_int((0), strlen(s_11, char_P_char_M_s_3_9_at_L))
     and le_int(strlen(s_11, char_P_char_M_s_3_9_at_L), i_7))))))

axiom strlen_zero :
 (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
  (forall s_10:char_P pointer.
   (forall i_6:int.
    ((le_int((0), i_6)
     and (le_int(i_6, strlen(s_10, char_P_char_M_s_3_9_at_L))
         and eq_int(integer_of_int8(select(char_P_char_M_s_3_9_at_L,
                                    shift(s_10, i_6))),
             (0)))) -> eq_int(i_6, strlen(s_10, char_P_char_M_s_3_9_at_L))))))

axiom strncmp_zero :
 (forall char_P_char_M_s2_9_13_at_L:(char_P, int8) memory.
  (forall char_P_char_M_s1_9_12_at_L:(char_P, int8) memory.
   (forall s1_10:char_P pointer.
    (forall s2_10:char_P pointer.
     (forall n_11:int.
      (eq_int(strncmp(s1_10, s2_10, n_11, char_P_char_M_s2_9_13_at_L,
              char_P_char_M_s1_9_12_at_L),
       (0))
      <-> ((lt_int(strlen(s1_10, char_P_char_M_s1_9_12_at_L), n_11)
           and eq_int(strcmp(s1_10, s2_10, char_P_char_M_s2_9_13_at_L,
                      char_P_char_M_s1_9_12_at_L),
               (0)))
          or (forall i_12:int.
              ((le_int((0), i_12) and lt_int(i_12, n_11)) ->
               eq_int(integer_of_int8(select(char_P_char_M_s1_9_12_at_L,
                                      shift(s1_10, i_12))),
               integer_of_int8(select(char_P_char_M_s2_9_13_at_L,
                               shift(s2_10, i_12)))))))))))))

logic uint16_of_integer: int -> uint16

axiom uint16_coerce :
 (forall x:int.
  ((le_int((0), x) and le_int(x, (65535))) ->
   eq_int(integer_of_uint16(uint16_of_integer(x)), x)))

axiom uint16_range :
 (forall x:uint16.
  (le_int((0), integer_of_uint16(x))
  and le_int(integer_of_uint16(x), (65535))))

logic uint32_of_integer: int -> uint32

axiom uint32_coerce :
 (forall x:int.
  ((le_int((0), x) and le_int(x, (4294967295))) ->
   eq_int(integer_of_uint32(uint32_of_integer(x)), x)))

axiom uint32_range :
 (forall x:uint32.
  (le_int((0), integer_of_uint32(x))
  and le_int(integer_of_uint32(x), (4294967295))))

logic unsigned_short_P_tag:  -> unsigned_short_P tag_id

axiom unsigned_short_P_int : (int_of_tag(unsigned_short_P_tag) = (1))

axiom unsigned_short_P_of_pointer_address_of_pointer_addr :
 (forall p:unsigned_short_P pointer.
  (p = unsigned_short_P_of_pointer_address(pointer_address(p))))

axiom unsigned_short_P_parenttag_bottom :
 parenttag(unsigned_short_P_tag, bottom_tag)

axiom unsigned_short_P_tags :
 (forall x:unsigned_short_P pointer.
  (forall unsigned_short_P_tag_table:unsigned_short_P tag_table.
   instanceof(unsigned_short_P_tag_table, x, unsigned_short_P_tag)))

predicate valid_string(s_28:char_P pointer,
 char_P_s_28_20_alloc_table_at_L:char_P alloc_table,
 char_P_char_M_s_28_20_at_L:(char_P, int8) memory) =
 (le_int((0), strlen(s_28, char_P_char_M_s_28_20_at_L))
 and (le_int(offset_min(char_P_s_28_20_alloc_table_at_L, s_28), (0))
     and ge_int(offset_max(char_P_s_28_20_alloc_table_at_L, s_28),
         strlen(s_28, char_P_char_M_s_28_20_at_L))))

predicate valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table:char_P alloc_table,
 char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3:(char_P, int8) memory) =
 (valid_string(__string_Argument_must_be_an_integer_from_1_to_7__,
  char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
  char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3)
 and eq_int(strlen(__string_Argument_must_be_an_integer_from_1_to_7__,
            char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3),
     (41)))

predicate valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table:char_P alloc_table) =
 (le_int(offset_min(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
         __string_Argument_must_be_an_integer_from_1_to_7__),
  (0))
 and ge_int(offset_max(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
            __string_Argument_must_be_an_integer_from_1_to_7__),
     (41)))

predicate valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table:char_P alloc_table,
 char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4:(char_P, int8) memory) =
 (valid_string(__string_Need_exactly_one_argument__an_integer_from_1_to_7__,
  char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
  char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4)
 and eq_int(strlen(__string_Need_exactly_one_argument__an_integer_from_1_to_7__,
            char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4),
     (51)))

predicate valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table:char_P alloc_table) =
 (le_int(offset_min(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
         __string_Need_exactly_one_argument__an_integer_from_1_to_7__),
  (0))
 and ge_int(offset_max(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
            __string_Need_exactly_one_argument__an_integer_from_1_to_7__),
     (51)))

predicate valid___string_n____d_(char_P___string_n____d__2_alloc_table:char_P alloc_table,
 char_P_char_M___string_n____d__2:(char_P, int8) memory) =
 (valid_string(__string_n____d_, char_P___string_n____d__2_alloc_table,
  char_P_char_M___string_n____d__2)
 and eq_int(strlen(__string_n____d_, char_P_char_M___string_n____d__2), (7)))

predicate valid___string_n____d__0(char_P___string_n____d__2_alloc_table:char_P alloc_table) =
 (le_int(offset_min(char_P___string_n____d__2_alloc_table, __string_n____d_),
  (0))
 and ge_int(offset_max(char_P___string_n____d__2_alloc_table,
            __string_n____d_),
     (7)))

predicate valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table:char_P alloc_table,
 char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1:(char_P, int8) memory) =
 (valid_string(__string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_,
  char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
  char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1)
 and eq_int(strlen(__string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_,
            char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1),
     (49)))

predicate valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table:char_P alloc_table) =
 (le_int(offset_min(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
         __string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_),
  (0))
 and ge_int(offset_max(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
            __string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_),
     (49)))

predicate valid_bitvector_struct_char_P(p:unit pointer, a:int, b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_char_xP(p:unit pointer, a:int, b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_unsigned_short_P(p:unit pointer, a:int,
 b:int, bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_void_P(p:unit pointer, a:int, b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_root_char_P(p:char_P pointer, a:int, b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) <= a)
 and (offset_max(char_P_alloc_table, p) >= b))

predicate valid_root_char_xP(p:char_xP pointer, a:int, b:int,
 char_xP_alloc_table:char_xP alloc_table) =
 ((offset_min(char_xP_alloc_table, p) <= a)
 and (offset_max(char_xP_alloc_table, p) >= b))

predicate valid_root_unsigned_short_P(p:unsigned_short_P pointer, a:int,
 b:int, unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 ((offset_min(unsigned_short_P_alloc_table, p) <= a)
 and (offset_max(unsigned_short_P_alloc_table, p) >= b))

predicate valid_root_void_P(p:void_P pointer, a:int, b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) <= a)
 and (offset_max(void_P_alloc_table, p) >= b))

predicate valid_string_or_null(s_29:char_P pointer,
 char_P_s_29_21_alloc_table_at_L:char_P alloc_table,
 char_P_char_M_s_29_21_at_L:(char_P, int8) memory) =
 ((s_29 = null)
 or valid_string(s_29, char_P_s_29_21_alloc_table_at_L,
    char_P_char_M_s_29_21_at_L))

predicate valid_struct_char_P(p:char_P pointer, a:int, b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) <= a)
 and (offset_max(char_P_alloc_table, p) >= b))

predicate valid_struct_char_xP(p:char_xP pointer, a:int, b:int,
 char_xP_alloc_table:char_xP alloc_table) =
 ((offset_min(char_xP_alloc_table, p) <= a)
 and (offset_max(char_xP_alloc_table, p) >= b))

predicate valid_struct_unsigned_short_P(p:unsigned_short_P pointer, a:int,
 b:int, unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 ((offset_min(unsigned_short_P_alloc_table, p) <= a)
 and (offset_max(unsigned_short_P_alloc_table, p) >= b))

predicate valid_struct_void_P(p:void_P pointer, a:int, b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) <= a)
 and (offset_max(void_P_alloc_table, p) >= b))

predicate valid_wstring(s_30:unsigned_short_P pointer,
 unsigned_short_P_s_30_22_alloc_table_at_L:unsigned_short_P alloc_table,
 unsigned_short_P_unsigned_short_M_s_30_22_at_L:(unsigned_short_P, uint16) memory) =
 (le_int((0), wcslen(s_30, unsigned_short_P_unsigned_short_M_s_30_22_at_L))
 and (le_int(offset_min(unsigned_short_P_s_30_22_alloc_table_at_L, s_30),
      (0))
     and ge_int(offset_max(unsigned_short_P_s_30_22_alloc_table_at_L, s_30),
         wcslen(s_30, unsigned_short_P_unsigned_short_M_s_30_22_at_L))))

predicate valid_wstring_or_null(s_31:unsigned_short_P pointer,
 unsigned_short_P_s_31_23_alloc_table_at_L:unsigned_short_P alloc_table,
 unsigned_short_P_unsigned_short_M_s_31_23_at_L:(unsigned_short_P, uint16) memory) =
 ((s_31 = null)
 or valid_wstring(s_31, unsigned_short_P_s_31_23_alloc_table_at_L,
    unsigned_short_P_unsigned_short_M_s_31_23_at_L))

logic void_P_tag:  -> void_P tag_id

axiom void_P_int : (int_of_tag(void_P_tag) = (1))

axiom void_P_of_pointer_address_of_pointer_addr :
 (forall p:void_P pointer.
  (p = void_P_of_pointer_address(pointer_address(p))))

axiom void_P_parenttag_bottom : parenttag(void_P_tag, bottom_tag)

axiom void_P_tags :
 (forall x:void_P pointer.
  (forall void_P_tag_table:void_P tag_table.
   instanceof(void_P_tag_table, x, void_P_tag)))

axiom wcscmp_zero :
 (forall unsigned_short_P_unsigned_short_M_s2_11_17_at_L:
  (unsigned_short_P, uint16) memory.
  (forall unsigned_short_P_unsigned_short_M_s1_11_16_at_L:
   (unsigned_short_P, uint16) memory.
   (forall s1_12:unsigned_short_P pointer.
    (forall s2_12:unsigned_short_P pointer.
     (eq_int(wcscmp(s1_12, s2_12,
             unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
             unsigned_short_P_unsigned_short_M_s1_11_16_at_L),
      (0))
     <-> (eq_int(wcslen(s1_12,
                 unsigned_short_P_unsigned_short_M_s1_11_16_at_L),
          wcslen(s2_12, unsigned_short_P_unsigned_short_M_s2_11_17_at_L))
         and (forall i_23:int.
              ((le_int((0), i_23)
               and le_int(i_23,
                   wcslen(s1_12,
                   unsigned_short_P_unsigned_short_M_s1_11_16_at_L))) ->
               eq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s1_11_16_at_L,
                                        shift(s1_12, i_23))),
               integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
                                 shift(s2_12, i_23))))))))))))

axiom wcslen_at_null :
 (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:
  (unsigned_short_P, uint16) memory.
  (forall s_21:unsigned_short_P pointer.
   (le_int((0), wcslen(s_21, unsigned_short_P_unsigned_short_M_s_17_15_at_L)) ->
    eq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
                             shift(s_21,
                             wcslen(s_21,
                             unsigned_short_P_unsigned_short_M_s_17_15_at_L)))),
    (0)))))

axiom wcslen_before_null :
 (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:
  (unsigned_short_P, uint16) memory.
  (forall s_20:unsigned_short_P pointer.
   (forall i_16:int32.
    ((le_int((0), integer_of_int32(i_16))
     and lt_int(integer_of_int32(i_16),
         wcslen(s_20, unsigned_short_P_unsigned_short_M_s_17_15_at_L))) ->
     neq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
                               shift(s_20, integer_of_int32(i_16)))),
     (0))))))

axiom wcslen_create :
 (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:
  (unsigned_short_P, uint16) memory.
  (forall s_26:unsigned_short_P pointer.
   (forall i_21:int32.
    ((le_int((0), integer_of_int32(i_21))
     and eq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
                                  shift(s_26, integer_of_int32(i_21)))),
         (0))) ->
     (le_int((0),
      wcslen(s_26, unsigned_short_P_unsigned_short_M_s_17_15_at_L))
     and le_int(wcslen(s_26, unsigned_short_P_unsigned_short_M_s_17_15_at_L),
         integer_of_int32(i_21)))))))

axiom wcslen_create_shift :
 (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:
  (unsigned_short_P, uint16) memory.
  (forall s_27:unsigned_short_P pointer.
   (forall i_22:int32.
    (forall k_2:int32.
     ((le_int((0), integer_of_int32(k_2))
      and (le_int(integer_of_int32(k_2), integer_of_int32(i_22))
          and eq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
                                       shift(s_27, integer_of_int32(i_22)))),
              (0)))) ->
      (le_int((0),
       wcslen(shift(s_27, integer_of_int32(k_2)),
       unsigned_short_P_unsigned_short_M_s_17_15_at_L))
      and le_int(wcslen(shift(s_27, integer_of_int32(k_2)),
                 unsigned_short_P_unsigned_short_M_s_17_15_at_L),
          sub_int(integer_of_int32(i_22), integer_of_int32(k_2)))))))))

axiom wcslen_neg :
 (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:
  (unsigned_short_P, uint16) memory.
  (forall s_19:unsigned_short_P pointer.
   ((forall i_15:int.
     (le_int((0), i_15) ->
      neq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
                                shift(s_19, i_15))),
      (0)))) ->
    lt_int(wcslen(s_19, unsigned_short_P_unsigned_short_M_s_17_15_at_L), (0)))))

axiom wcslen_not_zero :
 (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:
  (unsigned_short_P, uint16) memory.
  (forall s_22:unsigned_short_P pointer.
   (forall i_17:int32.
    ((le_int((0), integer_of_int32(i_17))
     and (le_int(integer_of_int32(i_17),
          wcslen(s_22, unsigned_short_P_unsigned_short_M_s_17_15_at_L))
         and neq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
                                       shift(s_22, integer_of_int32(i_17)))),
             (0)))) ->
     lt_int(integer_of_int32(i_17),
     wcslen(s_22, unsigned_short_P_unsigned_short_M_s_17_15_at_L))))))

axiom wcslen_pos_or_null :
 (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:
  (unsigned_short_P, uint16) memory.
  (forall s_18:unsigned_short_P pointer.
   (forall i_14:int.
    ((le_int((0), i_14)
     and ((forall j_0:int.
           ((le_int((0), j_0) and lt_int(j_0, i_14)) ->
            neq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
                                      shift(s_18, j_0))),
            (0))))
         and eq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
                                      shift(s_18, i_14))),
             (0)))) ->
     eq_int(wcslen(s_18, unsigned_short_P_unsigned_short_M_s_17_15_at_L),
     i_14)))))

axiom wcslen_shift :
 (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:
  (unsigned_short_P, uint16) memory.
  (forall s_25:unsigned_short_P pointer.
   (forall i_20:int32.
    ((le_int((0), integer_of_int32(i_20))
     and le_int(integer_of_int32(i_20),
         wcslen(s_25, unsigned_short_P_unsigned_short_M_s_17_15_at_L))) ->
     eq_int(wcslen(shift(s_25, integer_of_int32(i_20)),
            unsigned_short_P_unsigned_short_M_s_17_15_at_L),
     sub_int(wcslen(s_25, unsigned_short_P_unsigned_short_M_s_17_15_at_L),
     integer_of_int32(i_20)))))))

axiom wcslen_sup :
 (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:
  (unsigned_short_P, uint16) memory.
  (forall s_24:unsigned_short_P pointer.
   (forall i_19:int32.
    ((le_int((0), integer_of_int32(i_19))
     and eq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
                                  shift(s_24, integer_of_int32(i_19)))),
         (0))) ->
     (le_int((0),
      wcslen(s_24, unsigned_short_P_unsigned_short_M_s_17_15_at_L))
     and le_int(wcslen(s_24, unsigned_short_P_unsigned_short_M_s_17_15_at_L),
         integer_of_int32(i_19)))))))

axiom wcslen_zero :
 (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:
  (unsigned_short_P, uint16) memory.
  (forall s_23:unsigned_short_P pointer.
   (forall i_18:int32.
    ((le_int((0), integer_of_int32(i_18))
     and (le_int(integer_of_int32(i_18),
          wcslen(s_23, unsigned_short_P_unsigned_short_M_s_17_15_at_L))
         and eq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
                                      shift(s_23, integer_of_int32(i_18)))),
             (0)))) ->
     eq_int(integer_of_int32(i_18),
     wcslen(s_23, unsigned_short_P_unsigned_short_M_s_17_15_at_L))))))

axiom wcsncmp_zero :
 (forall unsigned_short_P_unsigned_short_M_s2_13_19_at_L:
  (unsigned_short_P, uint16) memory.
  (forall unsigned_short_P_unsigned_short_M_s1_13_18_at_L:
   (unsigned_short_P, uint16) memory.
   (forall s1_14:unsigned_short_P pointer.
    (forall s2_14:unsigned_short_P pointer.
     (forall n_13:int.
      (eq_int(wcsncmp(s1_14, s2_14, n_13,
              unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
              unsigned_short_P_unsigned_short_M_s1_13_18_at_L),
       (0))
      <-> ((lt_int(wcslen(s1_14,
                   unsigned_short_P_unsigned_short_M_s1_13_18_at_L),
            n_13)
           and eq_int(wcscmp(s1_14, s2_14,
                      unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
                      unsigned_short_P_unsigned_short_M_s1_13_18_at_L),
               (0)))
          or (forall i_24:int.
              ((le_int((0), i_24) and lt_int(i_24, n_13)) ->
               eq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s1_13_18_at_L,
                                        shift(s1_14, i_24))),
               integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
                                 shift(s2_14, i_24)))))))))))))

parameter alloc_bitvector_struct_char_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_char_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_char_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_char_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_char_xP :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_char_xP(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_char_xP_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_char_xP(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_unsigned_short_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_unsigned_short_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_unsigned_short_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_unsigned_short_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_void_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_void_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_void_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_void_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter char_P_alloc_table : char_P alloc_table ref

parameter char_P_tag_table : char_P tag_table ref

parameter alloc_struct_char_P :
 n:int ->
  char_P_alloc_table:char_P alloc_table ref ->
   char_P_tag_table:char_P tag_table ref ->
    { } char_P pointer writes char_P_alloc_table,char_P_tag_table
    { (strict_valid_struct_char_P(result, (0), sub_int(n, (1)),
       char_P_alloc_table)
      and (alloc_extends(char_P_alloc_table@, char_P_alloc_table)
          and (alloc_fresh(char_P_alloc_table@, result, n)
              and instanceof(char_P_tag_table, result, char_P_tag)))) }

parameter alloc_struct_char_P_requires :
 n:int ->
  char_P_alloc_table:char_P alloc_table ref ->
   char_P_tag_table:char_P tag_table ref ->
    { ge_int(n, (0))} char_P pointer
    writes char_P_alloc_table,char_P_tag_table
    { (strict_valid_struct_char_P(result, (0), sub_int(n, (1)),
       char_P_alloc_table)
      and (alloc_extends(char_P_alloc_table@, char_P_alloc_table)
          and (alloc_fresh(char_P_alloc_table@, result, n)
              and instanceof(char_P_tag_table, result, char_P_tag)))) }

parameter char_xP_alloc_table : char_xP alloc_table ref

parameter char_xP_tag_table : char_xP tag_table ref

parameter alloc_struct_char_xP :
 n:int ->
  char_xP_alloc_table:char_xP alloc_table ref ->
   char_xP_tag_table:char_xP tag_table ref ->
    { } char_xP pointer writes char_xP_alloc_table,char_xP_tag_table
    { (strict_valid_struct_char_xP(result, (0), sub_int(n, (1)),
       char_xP_alloc_table)
      and (alloc_extends(char_xP_alloc_table@, char_xP_alloc_table)
          and (alloc_fresh(char_xP_alloc_table@, result, n)
              and instanceof(char_xP_tag_table, result, char_xP_tag)))) }

parameter alloc_struct_char_xP_requires :
 n:int ->
  char_xP_alloc_table:char_xP alloc_table ref ->
   char_xP_tag_table:char_xP tag_table ref ->
    { ge_int(n, (0))} char_xP pointer
    writes char_xP_alloc_table,char_xP_tag_table
    { (strict_valid_struct_char_xP(result, (0), sub_int(n, (1)),
       char_xP_alloc_table)
      and (alloc_extends(char_xP_alloc_table@, char_xP_alloc_table)
          and (alloc_fresh(char_xP_alloc_table@, result, n)
              and instanceof(char_xP_tag_table, result, char_xP_tag)))) }

parameter unsigned_short_P_alloc_table : unsigned_short_P alloc_table ref

parameter unsigned_short_P_tag_table : unsigned_short_P tag_table ref

parameter alloc_struct_unsigned_short_P :
 n:int ->
  unsigned_short_P_alloc_table:unsigned_short_P alloc_table ref ->
   unsigned_short_P_tag_table:unsigned_short_P tag_table ref ->
    { } unsigned_short_P pointer
    writes unsigned_short_P_alloc_table,unsigned_short_P_tag_table
    { (strict_valid_struct_unsigned_short_P(result, (0), sub_int(n, (1)),
       unsigned_short_P_alloc_table)
      and (alloc_extends(unsigned_short_P_alloc_table@,
           unsigned_short_P_alloc_table)
          and (alloc_fresh(unsigned_short_P_alloc_table@, result, n)
              and instanceof(unsigned_short_P_tag_table, result,
                  unsigned_short_P_tag)))) }

parameter alloc_struct_unsigned_short_P_requires :
 n:int ->
  unsigned_short_P_alloc_table:unsigned_short_P alloc_table ref ->
   unsigned_short_P_tag_table:unsigned_short_P tag_table ref ->
    { ge_int(n, (0))} unsigned_short_P pointer
    writes unsigned_short_P_alloc_table,unsigned_short_P_tag_table
    { (strict_valid_struct_unsigned_short_P(result, (0), sub_int(n, (1)),
       unsigned_short_P_alloc_table)
      and (alloc_extends(unsigned_short_P_alloc_table@,
           unsigned_short_P_alloc_table)
          and (alloc_fresh(unsigned_short_P_alloc_table@, result, n)
              and instanceof(unsigned_short_P_tag_table, result,
                  unsigned_short_P_tag)))) }

parameter void_P_alloc_table : void_P alloc_table ref

parameter void_P_tag_table : void_P tag_table ref

parameter alloc_struct_void_P :
 n:int ->
  void_P_alloc_table:void_P alloc_table ref ->
   void_P_tag_table:void_P tag_table ref ->
    { } void_P pointer writes void_P_alloc_table,void_P_tag_table
    { (strict_valid_struct_void_P(result, (0), sub_int(n, (1)),
       void_P_alloc_table)
      and (alloc_extends(void_P_alloc_table@, void_P_alloc_table)
          and (alloc_fresh(void_P_alloc_table@, result, n)
              and instanceof(void_P_tag_table, result, void_P_tag)))) }

parameter alloc_struct_void_P_requires :
 n:int ->
  void_P_alloc_table:void_P alloc_table ref ->
   void_P_tag_table:void_P tag_table ref ->
    { ge_int(n, (0))} void_P pointer
    writes void_P_alloc_table,void_P_tag_table
    { (strict_valid_struct_void_P(result, (0), sub_int(n, (1)),
       void_P_alloc_table)
      and (alloc_extends(void_P_alloc_table@, void_P_alloc_table)
          and (alloc_fresh(void_P_alloc_table@, result, n)
              and instanceof(void_P_tag_table, result, void_P_tag)))) }

parameter any_int32 : unit -> { } int32 { true }

parameter any_int8 : unit -> { } int8 { true }

parameter any_uint16 : unit -> { } uint16 { true }

parameter any_uint32 : unit -> { } uint32 { true }

parameter char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table :
 char_P alloc_table ref

parameter char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table :
 char_P alloc_table ref

parameter char_P___string_n____d__2_alloc_table : char_P alloc_table ref

parameter char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table :
 char_P alloc_table ref

parameter char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3 :
 (char_P, int8) memory ref

parameter char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4 :
 (char_P, int8) memory ref

parameter char_P_char_M___string_n____d__2 : (char_P, int8) memory ref

parameter char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1 :
 (char_P, int8) memory ref

parameter exit :
 status:int32 ->
  { } unit
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { ((JC_<somenum>:
     ((JC_<somenum>:
      valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
      char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
     and ((JC_<somenum>:
          valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
         and ((JC_<somenum>:
              valid___string_n____d_(char_P___string_n____d__2_alloc_table,
              char_P_char_M___string_n____d__2))
             and ((JC_<somenum>:
                  valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                 and ((JC_<somenum>:
                      valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                      char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                     and ((JC_<somenum>:
                          valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                         and ((JC_<somenum>:
                              valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                              char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                             and (JC_<somenum>:
                                 valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table))))))))))
    and (JC_<somenum>: (false = true))) }

parameter exit_requires :
 status:int32 ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table))))))))))}
  unit
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { ((JC_<somenum>:
     ((JC_<somenum>:
      valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
      char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
     and ((JC_<somenum>:
          valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
         and ((JC_<somenum>:
              valid___string_n____d_(char_P___string_n____d__2_alloc_table,
              char_P_char_M___string_n____d__2))
             and ((JC_<somenum>:
                  valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                 and ((JC_<somenum>:
                      valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                      char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                     and ((JC_<somenum>:
                          valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                         and ((JC_<somenum>:
                              valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                              char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                             and (JC_<somenum>:
                                 valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table))))))))))
    and (JC_<somenum>: (false = true))) }

parameter int32_of_integer_ :
 x:int ->
  { (le_int((-2147483648), x) and le_int(x, (2147483647)))} int32
  { eq_int(integer_of_int32(result), x) }

parameter int8_of_integer_ :
 x:int ->
  { (le_int((-128), x) and le_int(x, (127)))} int8
  { eq_int(integer_of_int8(result), x) }

parameter main :
 argc:int32 ->
  argv:char_xP pointer ->
   { } int32
   reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
   { (JC_<somenum>:
     ((JC_<somenum>:
      valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
      char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
     and ((JC_<somenum>:
          valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
         and ((JC_<somenum>:
              valid___string_n____d_(char_P___string_n____d__2_alloc_table,
              char_P_char_M___string_n____d__2))
             and ((JC_<somenum>:
                  valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                 and ((JC_<somenum>:
                      valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                      char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                     and ((JC_<somenum>:
                          valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                         and ((JC_<somenum>:
                              valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                              char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                             and (JC_<somenum>:
                                 valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter main_requires :
 argc:int32 ->
  argv:char_xP pointer ->
   { (JC_<somenum>:
     ((JC_<somenum>:
      valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
      char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
     and ((JC_<somenum>:
          valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
         and ((JC_<somenum>:
              valid___string_n____d_(char_P___string_n____d__2_alloc_table,
              char_P_char_M___string_n____d__2))
             and ((JC_<somenum>:
                  valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                 and ((JC_<somenum>:
                      valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                      char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                     and ((JC_<somenum>:
                          valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                         and ((JC_<somenum>:
                              valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                              char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                             and (JC_<somenum>:
                                 valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table))))))))))}
   int32
   reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
   { (JC_<somenum>:
     ((JC_<somenum>:
      valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
      char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
     and ((JC_<somenum>:
          valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
         and ((JC_<somenum>:
              valid___string_n____d_(char_P___string_n____d__2_alloc_table,
              char_P_char_M___string_n____d__2))
             and ((JC_<somenum>:
                  valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                 and ((JC_<somenum>:
                      valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                      char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                     and ((JC_<somenum>:
                          valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                         and ((JC_<somenum>:
                              valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                              char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                             and (JC_<somenum>:
                                 valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter next_set_of_n_elements :
 x_7:uint32 ->
  { } uint32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter next_set_of_n_elements_requires :
 x_7:uint32 ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table))))))))))}
  uint32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter nlz :
 x_0:uint32 ->
  { } int32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter nlz_requires :
 x_0:uint32 ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table))))))))))}
  int32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter ntz :
 x_1:uint32 ->
  { } int32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter ntz_requires :
 x_1:uint32 ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table))))))))))}
  int32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter pop :
 x_2:uint32 ->
  { } int32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter pop_requires :
 x_2:uint32 ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table))))))))))}
  int32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter printf :
 tt:unit ->
  { } int32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter printf_requires :
 tt:unit ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table))))))))))}
  int32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter safe_int32_of_integer_ :
 x:int -> { } int32 { eq_int(integer_of_int32(result), x) }

parameter safe_int8_of_integer_ :
 x:int -> { } int8 { eq_int(integer_of_int8(result), x) }

parameter safe_uint16_of_integer_ :
 x:int -> { } uint16 { eq_int(integer_of_uint16(result), x) }

parameter safe_uint32_of_integer_ :
 x:int -> { } uint32 { eq_int(integer_of_uint32(result), x) }

parameter snoob :
 x_3:uint32 ->
  { } uint32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter snoob1 :
 x_4:uint32 ->
  { } uint32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter snoob1_requires :
 x_4:uint32 ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table))))))))))}
  uint32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter snoob2 :
 x_5:uint32 ->
  { } uint32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter snoob2_requires :
 x_5:uint32 ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table))))))))))}
  uint32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter snoob3 :
 x_6:uint32 ->
  { } uint32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter snoob3_requires :
 x_6:uint32 ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table))))))))))}
  uint32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter snoob4 :
 x_7_0:int32 ->
  { } int32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter snoob4_requires :
 x_7_0:int32 ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table))))))))))}
  int32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter snoob_requires :
 x_3:uint32 ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table))))))))))}
  uint32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter strtol :
 tt:unit ->
  { } int32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter strtol_requires :
 tt:unit ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table))))))))))}
  int32
  reads char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,char_P___string_n____d__2_alloc_table,char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3,char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4,char_P_char_M___string_n____d__2,char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

parameter uint16_of_integer_ :
 x:int ->
  { (le_int((0), x) and le_int(x, (65535)))} uint16
  { eq_int(integer_of_uint16(result), x) }

parameter uint32_of_integer_ :
 x:int ->
  { (le_int((0), x) and le_int(x, (4294967295)))} uint32
  { eq_int(integer_of_uint32(result), x) }

let main_ensures_default =
 fun (argc : int32) (argv : char_xP pointer) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let n_1_0 = ref (any_int32 void) in
     (let x_8 = ref (any_uint32 void) in
     (let y_0 = ref (any_uint32 void) in
     (let z = ref (any_uint32 void) in
     (let u = ref (any_uint32 void) in
     (let v = ref (any_uint32 void) in
     (let w = ref (any_uint32 void) in
     (let __retres_8 = ref (any_int32 void) in
     try
      (let jessie_<somenum> =
      begin
        try
         (let jessie_<somenum> =
         (C_260:
         begin
           (if ((neq_int_ (integer_of_int32 argc)) (2))
           then
            (C_255:
            begin
              (let jessie_<somenum> = (JC_<somenum>: (printf void)) in void);
             (C_256:
             (let jessie_<somenum> = (safe_int32_of_integer_ (1)) in
             (JC_<somenum>: (exit jessie_<somenum>)))) end) else void);
          (let jessie_<somenum> = (n_1_0 := (C_259: (JC_<somenum>: (strtol void)))) in
          void);
          (if ((lt_int_ (integer_of_int32 !n_1_0)) (1))
          then (let jessie_<somenum> = (raise (Goto__LOR_exc void)) in void)
          else
           (if ((gt_int_ (integer_of_int32 !n_1_0)) (7))
           then (let jessie_<somenum> = (raise (Goto__LOR_exc void)) in void)
           else void));
          (let jessie_<somenum> = (raise (Goto__LOR_0_exc void)) in void);
          (raise (Goto__LOR_exc void)) end) in void) with
         Goto__LOR_exc jessie_<somenum> ->
         (_LOR:
         (C_261:
         begin
           (let jessie_<somenum> = (JC_<somenum>: (printf void)) in void);
          (C_262:
          (let jessie_<somenum> = (safe_int32_of_integer_ (1)) in
          (JC_<somenum>: (exit jessie_<somenum>)))) end)) end;
       (raise (Goto__LOR_0_exc void)) end in void) with
      Goto__LOR_0_exc jessie_<somenum> ->
      (_LOR_0:
      (C_263:
      (C_272:
      (C_273:
      (C_274:
      (C_275:
      (C_276:
      (C_293:
      begin
        void; (let jessie_<somenum> = (JC_<somenum>: (printf void)) in void);
       (let jessie_<somenum> =
       (C_271:
       begin
         (assert
         { (JC_<somenum>: le_int((1), asr((2147483647), integer_of_int32(n_1_0)))) };
         void);
        (assert { (JC_<somenum>: lt_int(integer_of_int32(n_1_0), (32))) }; void);
        (assert { (JC_<somenum>: ge_int(integer_of_int32(n_1_0), (0))) }; void);
        (x_8 := (C_270:
                (safe_uint32_of_integer_ (C_269:
                                         ((sub_int (integer_of_int32 
                                                    (C_268:
                                                    (safe_int32_of_integer_ 
                                                     (C_267:
                                                     ((lsl (1)) (integer_of_int32 !n_1_0))))))) (1))))));
        !x_8 end) in void); (let jessie_<somenum> = (y_0 := !x_8) in void);
       (let jessie_<somenum> = (z := !x_8) in void);
       (let jessie_<somenum> = (u := !x_8) in void);
       (let jessie_<somenum> = (v := !x_8) in void);
       (let jessie_<somenum> = (w := !x_8) in void);
       try
        (let jessie_<somenum> =
        begin
          (loop_4:
          while true do
          { invariant (JC_<somenum>: true)  }
           begin
             [ { } unit { true } ];
            try
             (let jessie_<somenum> =
             begin
               (let jessie_<somenum> =
               (C_277:
               (C_279:
               (C_281:
               (C_283:
               (C_285:
               (C_290:
               (C_292:
               begin
                 (let jessie_<somenum> = (JC_<somenum>: (printf void)) in void);
                (let jessie_<somenum> =
                (y_0 := (C_278:
                        (let jessie_<somenum> = !x_8 in
                        (JC_<somenum>: (snoob1 jessie_<somenum>))))) in void);
                (let jessie_<somenum> =
                (z := (C_280:
                      (let jessie_<somenum> = !x_8 in
                      (JC_<somenum>: (snoob2 jessie_<somenum>))))) in void);
                (let jessie_<somenum> =
                (u := (C_282:
                      (let jessie_<somenum> = !x_8 in
                      (JC_<somenum>: (snoob3 jessie_<somenum>))))) in void);
                (let jessie_<somenum> =
                (v := (C_284:
                      (let jessie_<somenum> = !x_8 in
                      (JC_<somenum>: (next_set_of_n_elements jessie_<somenum>))))) in
                void);
                (let jessie_<somenum> =
                (let __cil_tmp =
                (C_287:
                (let jessie_<somenum> =
                (C_286: (safe_int32_of_integer_ (integer_of_uint32 !x_8))) in
                (JC_<somenum>: (snoob4 jessie_<somenum>)))) in
                (C_289:
                begin
                  (w := (C_288:
                        (safe_uint32_of_integer_ (integer_of_int32 __cil_tmp))));
                 !w end)) in void);
                (x_8 := (C_291:
                        (let jessie_<somenum> = !x_8 in
                        (JC_<somenum>: (snoob jessie_<somenum>))))); !x_8 end))))))) in
               void);
              (if ((le_int_ (integer_of_uint32 !x_8)) (255)) then void
              else
               (let jessie_<somenum> = (raise (Goto_while_1_break_exc void)) in
               void)); (raise (Loop_continue_exc void)) end in void) with
             Loop_continue_exc jessie_<somenum> -> void end end done);
         (raise (Goto_while_1_break_exc void)) end in void) with
        Goto_while_1_break_exc jessie_<somenum> -> (while_1_break: void) end;
       (let jessie_<somenum> = (__retres_8 := (safe_int32_of_integer_ (0))) in
       void); (return := !__retres_8); (raise Return) end)))))))) end))))))));
    absurd  end with Return -> !return end)) { (JC_<somenum>: true) }

let main_safety =
 fun (argc : int32) (argv : char_xP pointer) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let n_1_0 = ref (any_int32 void) in
     (let x_8 = ref (any_uint32 void) in
     (let y_0 = ref (any_uint32 void) in
     (let z = ref (any_uint32 void) in
     (let u = ref (any_uint32 void) in
     (let v = ref (any_uint32 void) in
     (let w = ref (any_uint32 void) in
     (let __retres_8 = ref (any_int32 void) in
     try
      (let jessie_<somenum> =
      begin
        try
         (let jessie_<somenum> =
         (C_260:
         begin
           (if ((neq_int_ (integer_of_int32 argc)) (2))
           then
            (C_255:
            begin
              (let jessie_<somenum> = (JC_<somenum>: (printf_requires void)) in void);
             (C_256:
             (let jessie_<somenum> = (safe_int32_of_integer_ (1)) in
             (JC_<somenum>: (exit_requires jessie_<somenum>)))) end) else void);
          (let jessie_<somenum> =
          (n_1_0 := (C_259: (JC_<somenum>: (strtol_requires void)))) in void);
          (if ((lt_int_ (integer_of_int32 !n_1_0)) (1))
          then (let jessie_<somenum> = (raise (Goto__LOR_exc void)) in void)
          else
           (if ((gt_int_ (integer_of_int32 !n_1_0)) (7))
           then (let jessie_<somenum> = (raise (Goto__LOR_exc void)) in void)
           else void));
          (let jessie_<somenum> = (raise (Goto__LOR_0_exc void)) in void);
          (raise (Goto__LOR_exc void)) end) in void) with
         Goto__LOR_exc jessie_<somenum> ->
         (_LOR:
         (C_261:
         begin
           (let jessie_<somenum> = (JC_<somenum>: (printf_requires void)) in void);
          (C_262:
          (let jessie_<somenum> = (safe_int32_of_integer_ (1)) in
          (JC_<somenum>: (exit_requires jessie_<somenum>)))) end)) end;
       (raise (Goto__LOR_0_exc void)) end in void) with
      Goto__LOR_0_exc jessie_<somenum> ->
      (_LOR_0:
      (C_263:
      (C_272:
      (C_273:
      (C_274:
      (C_275:
      (C_276:
      (C_293:
      begin
        void; (let jessie_<somenum> = (JC_<somenum>: (printf_requires void)) in void);
       (let jessie_<somenum> =
       (C_271:
       begin
         [ { } unit reads n_1_0
           { (JC_<somenum>:
             le_int((1), asr((2147483647), integer_of_int32(n_1_0)))) } ];
        [ { } unit reads n_1_0
          { (JC_<somenum>: lt_int(integer_of_int32(n_1_0), (32))) } ];
        [ { } unit reads n_1_0
          { (JC_<somenum>: ge_int(integer_of_int32(n_1_0), (0))) } ];
        (x_8 := (C_270:
                (JC_<somenum>:
                (uint32_of_integer_ (C_269:
                                    ((sub_int (integer_of_int32 (C_268:
                                                                (JC_<somenum>:
                                                                (int32_of_integer_ 
                                                                 (C_267:
                                                                 ((lsl (1)) 
                                                                  (integer_of_int32 !n_1_0)))))))) (1)))))));
        !x_8 end) in void); (let jessie_<somenum> = (y_0 := !x_8) in void);
       (let jessie_<somenum> = (z := !x_8) in void);
       (let jessie_<somenum> = (u := !x_8) in void);
       (let jessie_<somenum> = (v := !x_8) in void);
       (let jessie_<somenum> = (w := !x_8) in void);
       try
        (let jessie_<somenum> =
        begin
          (loop_3:
          while true do
          { invariant (JC_<somenum>: true) variant (0) }
           begin
             [ { } unit { true } ];
            try
             (let jessie_<somenum> =
             begin
               (let jessie_<somenum> =
               (C_277:
               (C_279:
               (C_281:
               (C_283:
               (C_285:
               (C_290:
               (C_292:
               begin
                 (let jessie_<somenum> = (JC_<somenum>: (printf_requires void)) in void);
                (let jessie_<somenum> =
                (y_0 := (C_278:
                        (let jessie_<somenum> = !x_8 in
                        (JC_<somenum>: (snoob1_requires jessie_<somenum>))))) in void);
                (let jessie_<somenum> =
                (z := (C_280:
                      (let jessie_<somenum> = !x_8 in
                      (JC_<somenum>: (snoob2_requires jessie_<somenum>))))) in void);
                (let jessie_<somenum> =
                (u := (C_282:
                      (let jessie_<somenum> = !x_8 in
                      (JC_<somenum>: (snoob3_requires jessie_<somenum>))))) in void);
                (let jessie_<somenum> =
                (v := (C_284:
                      (let jessie_<somenum> = !x_8 in
                      (JC_<somenum>: (next_set_of_n_elements_requires jessie_<somenum>))))) in
                void);
                (let jessie_<somenum> =
                (let __cil_tmp =
                (C_287:
                (let jessie_<somenum> =
                (C_286:
                (JC_<somenum>: (int32_of_integer_ (integer_of_uint32 !x_8)))) in
                (JC_<somenum>: (snoob4_requires jessie_<somenum>)))) in
                (C_289:
                begin
                  (w := (C_288:
                        (JC_<somenum>:
                        (uint32_of_integer_ (integer_of_int32 __cil_tmp)))));
                 !w end)) in void);
                (x_8 := (C_291:
                        (let jessie_<somenum> = !x_8 in
                        (JC_<somenum>: (snoob_requires jessie_<somenum>))))); !x_8 end))))))) in
               void);
              (if ((le_int_ (integer_of_uint32 !x_8)) (255)) then void
              else
               (let jessie_<somenum> = (raise (Goto_while_1_break_exc void)) in
               void)); (raise (Loop_continue_exc void)) end in void) with
             Loop_continue_exc jessie_<somenum> -> void end end done);
         (raise (Goto_while_1_break_exc void)) end in void) with
        Goto_while_1_break_exc jessie_<somenum> -> (while_1_break: void) end;
       (let jessie_<somenum> = (__retres_8 := (safe_int32_of_integer_ (0))) in
       void); (return := !__retres_8); (raise Return) end)))))))) end))))))));
    absurd  end with Return -> !return end))
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

let next_set_of_n_elements_ensures_default =
 fun (x_7 : uint32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (init:
  (let return = ref (any_uint32 void) in
  try
   begin
     (let smallest_3 = ref (any_uint32 void) in
     (let ripple_3 = ref (any_uint32 void) in
     (let new_smallest = ref (any_uint32 void) in
     (let ones_3 = ref (any_uint32 void) in
     (let __retres_6 = ref (any_uint32 void) in
     try
      (let jessie_<somenum> =
      (C_209:
      (C_212:
      (C_217:
      (C_224:
      (C_227:
      begin
        (if ((eq_int_ (integer_of_uint32 x_7)) (0))
        then
         (let jessie_<somenum> =
         (C_204:
         begin
           (let jessie_<somenum> = (__retres_6 := (safe_uint32_of_integer_ (0))) in
           void); (raise (Return_label_exc void)) end) in void) else void);
       (let jessie_<somenum> =
       (smallest_3 := (C_208:
                      (safe_uint32_of_integer_ (C_207:
                                               ((bw_and (integer_of_uint32 x_7)) 
                                                (integer_of_uint32 (C_206:
                                                                   (safe_uint32_of_integer_ 
                                                                    (C_205:
                                                                    (neg_int 
                                                                    (integer_of_uint32 x_7))))))))))) in
       void);
       (let jessie_<somenum> =
       (ripple_3 := (C_211:
                    (safe_uint32_of_integer_ (C_210:
                                             ((add_int (integer_of_uint32 x_7)) 
                                              (integer_of_uint32 !smallest_3)))))) in
       void);
       (let jessie_<somenum> =
       (new_smallest := (C_216:
                        (safe_uint32_of_integer_ (C_215:
                                                 ((bw_and (integer_of_uint32 !ripple_3)) 
                                                  (integer_of_uint32 
                                                   (C_214:
                                                   (safe_uint32_of_integer_ 
                                                    (C_213:
                                                    (neg_int (integer_of_uint32 !ripple_3))))))))))) in
       void);
       (let jessie_<somenum> =
       (ones_3 := (C_223:
                  (safe_uint32_of_integer_ (C_222:
                                           ((sub_int (integer_of_uint32 
                                                      (C_221:
                                                      (safe_uint32_of_integer_ 
                                                       (C_220:
                                                       (JC_<somenum>:
                                                       ((div_int (integer_of_uint32 
                                                                  (C_219:
                                                                  (safe_uint32_of_integer_ 
                                                                   (C_218:
                                                                   (JC_<somenum>:
                                                                   ((div_int 
                                                                    (integer_of_uint32 !new_smallest)) 
                                                                    (integer_of_uint32 !smallest_3)))))))) (2)))))))) (1)))))) in
       void);
       (let jessie_<somenum> =
       (__retres_6 := (C_226:
                      (safe_uint32_of_integer_ (C_225:
                                               ((bw_or (integer_of_uint32 !ripple_3)) 
                                                (integer_of_uint32 !ones_3)))))) in
       void); (raise (Return_label_exc void)) end))))) in void) with
      Return_label_exc jessie_<somenum> ->
      (return_label: begin   (return := !__retres_6); (raise Return) end) end)))));
    absurd  end with Return -> !return end)) { (JC_<somenum>: true) }

let next_set_of_n_elements_safety =
 fun (x_7 : uint32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (init:
  (let return = ref (any_uint32 void) in
  try
   begin
     (let smallest_3 = ref (any_uint32 void) in
     (let ripple_3 = ref (any_uint32 void) in
     (let new_smallest = ref (any_uint32 void) in
     (let ones_3 = ref (any_uint32 void) in
     (let __retres_6 = ref (any_uint32 void) in
     try
      (let jessie_<somenum> =
      (C_209:
      (C_212:
      (C_217:
      (C_224:
      (C_227:
      begin
        (if ((eq_int_ (integer_of_uint32 x_7)) (0))
        then
         (let jessie_<somenum> =
         (C_204:
         begin
           (let jessie_<somenum> = (__retres_6 := (safe_uint32_of_integer_ (0))) in
           void); (raise (Return_label_exc void)) end) in void) else void);
       (let jessie_<somenum> =
       (smallest_3 := (C_208:
                      (JC_<somenum>:
                      (uint32_of_integer_ (C_207:
                                          ((bw_and (integer_of_uint32 x_7)) 
                                           (integer_of_uint32 (C_206:
                                                              (JC_<somenum>:
                                                              (uint32_of_integer_ 
                                                               (C_205:
                                                               (neg_int 
                                                                (integer_of_uint32 x_7))))))))))))) in
       void);
       (let jessie_<somenum> =
       (ripple_3 := (C_211:
                    (JC_<somenum>:
                    (uint32_of_integer_ (C_210:
                                        ((add_int (integer_of_uint32 x_7)) 
                                         (integer_of_uint32 !smallest_3))))))) in
       void);
       (let jessie_<somenum> =
       (new_smallest := (C_216:
                        (JC_<somenum>:
                        (uint32_of_integer_ (C_215:
                                            ((bw_and (integer_of_uint32 !ripple_3)) 
                                             (integer_of_uint32 (C_214:
                                                                (JC_<somenum>:
                                                                (uint32_of_integer_ 
                                                                 (C_213:
                                                                 (neg_int 
                                                                  (integer_of_uint32 !ripple_3))))))))))))) in
       void);
       (let jessie_<somenum> =
       (ones_3 := (C_223:
                  (JC_<somenum>:
                  (uint32_of_integer_ (C_222:
                                      ((sub_int (integer_of_uint32 (C_221:
                                                                   (JC_<somenum>:
                                                                   (uint32_of_integer_ 
                                                                    (C_220:
                                                                    (JC_<somenum>:
                                                                    ((div_int_ 
                                                                    (integer_of_uint32 
                                                                    (C_219:
                                                                    (JC_<somenum>:
                                                                    (uint32_of_integer_ 
                                                                    (C_218:
                                                                    (JC_<somenum>:
                                                                    ((div_int_ 
                                                                    (integer_of_uint32 !new_smallest)) 
                                                                    (integer_of_uint32 !smallest_3))))))))) (2))))))))) (1))))))) in
       void);
       (let jessie_<somenum> =
       (__retres_6 := (C_226:
                      (JC_<somenum>:
                      (uint32_of_integer_ (C_225:
                                          ((bw_or (integer_of_uint32 !ripple_3)) 
                                           (integer_of_uint32 !ones_3))))))) in
       void); (raise (Return_label_exc void)) end))))) in void) with
      Return_label_exc jessie_<somenum> ->
      (return_label: begin   (return := !__retres_6); (raise Return) end) end)))));
    absurd  end with Return -> !return end))
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

let nlz_ensures_default =
 fun (x_0 : uint32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (let mutable_x_0 = ref x_0 in
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let n_0_0 = ref (any_int32 void) in
     (let __retres_0 = ref (any_int32 void) in
     try
      (let jessie_<somenum> =
      (C_44:
      (C_72:
      begin
        (if ((eq_int_ (integer_of_uint32 !mutable_x_0)) (0))
        then
         (let jessie_<somenum> =
         (C_43:
         begin
           (let jessie_<somenum> = (__retres_0 := (safe_int32_of_integer_ (32))) in
           void); (raise (Return_label_exc void)) end) in void) else void);
       (let jessie_<somenum> = (n_0_0 := (safe_int32_of_integer_ (0))) in void);
       (if ((le_int_ (integer_of_uint32 !mutable_x_0)) (65535))
       then
        (let jessie_<somenum> =
        (C_47:
        (C_50:
        begin
          (let jessie_<somenum> =
          (n_0_0 := (C_46:
                    (safe_int32_of_integer_ (C_45:
                                            ((add_int (integer_of_int32 !n_0_0)) (16)))))) in
          void);
         (mutable_x_0 := (C_49:
                         (safe_uint32_of_integer_ (C_48:
                                                  ((mul_int (integer_of_uint32 !mutable_x_0)) (65536))))));
         !mutable_x_0 end)) in void) else void);
       (if ((le_int_ (integer_of_uint32 !mutable_x_0)) (16777215))
       then
        (let jessie_<somenum> =
        (C_53:
        (C_56:
        begin
          (let jessie_<somenum> =
          (n_0_0 := (C_52:
                    (safe_int32_of_integer_ (C_51:
                                            ((add_int (integer_of_int32 !n_0_0)) (8)))))) in
          void);
         (mutable_x_0 := (C_55:
                         (safe_uint32_of_integer_ (C_54:
                                                  ((mul_int (integer_of_uint32 !mutable_x_0)) (256))))));
         !mutable_x_0 end)) in void) else void);
       (if ((le_int_ (integer_of_uint32 !mutable_x_0)) (268435455))
       then
        (let jessie_<somenum> =
        (C_59:
        (C_62:
        begin
          (let jessie_<somenum> =
          (n_0_0 := (C_58:
                    (safe_int32_of_integer_ (C_57:
                                            ((add_int (integer_of_int32 !n_0_0)) (4)))))) in
          void);
         (mutable_x_0 := (C_61:
                         (safe_uint32_of_integer_ (C_60:
                                                  ((mul_int (integer_of_uint32 !mutable_x_0)) (16))))));
         !mutable_x_0 end)) in void) else void);
       (if ((le_int_ (integer_of_uint32 !mutable_x_0)) (1073741823))
       then
        (let jessie_<somenum> =
        (C_65:
        (C_68:
        begin
          (let jessie_<somenum> =
          (n_0_0 := (C_64:
                    (safe_int32_of_integer_ (C_63:
                                            ((add_int (integer_of_int32 !n_0_0)) (2)))))) in
          void);
         (mutable_x_0 := (C_67:
                         (safe_uint32_of_integer_ (C_66:
                                                  ((mul_int (integer_of_uint32 !mutable_x_0)) (4))))));
         !mutable_x_0 end)) in void) else void);
       (if ((le_int_ (integer_of_uint32 !mutable_x_0)) (2147483647))
       then
        (let jessie_<somenum> =
        (C_71:
        (n_0_0 := (C_70:
                  (safe_int32_of_integer_ (C_69:
                                          ((add_int (integer_of_int32 !n_0_0)) (1))))))) in
        void) else void); (let jessie_<somenum> = (__retres_0 := !n_0_0) in void);
       (raise (Return_label_exc void)) end)) in void) with
      Return_label_exc jessie_<somenum> ->
      (return_label: begin   (return := !__retres_0); (raise Return) end) end));
    absurd  end with Return -> !return end))) { (JC_<somenum>: true) }

let nlz_safety =
 fun (x_0 : uint32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (let mutable_x_0 = ref x_0 in
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let n_0_0 = ref (any_int32 void) in
     (let __retres_0 = ref (any_int32 void) in
     try
      (let jessie_<somenum> =
      (C_44:
      (C_72:
      begin
        (if ((eq_int_ (integer_of_uint32 !mutable_x_0)) (0))
        then
         (let jessie_<somenum> =
         (C_43:
         begin
           (let jessie_<somenum> = (__retres_0 := (safe_int32_of_integer_ (32))) in
           void); (raise (Return_label_exc void)) end) in void) else void);
       (let jessie_<somenum> = (n_0_0 := (safe_int32_of_integer_ (0))) in void);
       (if ((le_int_ (integer_of_uint32 !mutable_x_0)) (65535))
       then
        (let jessie_<somenum> =
        (C_47:
        (C_50:
        begin
          (let jessie_<somenum> =
          (n_0_0 := (C_46:
                    (JC_<somenum>:
                    (int32_of_integer_ (C_45:
                                       ((add_int (integer_of_int32 !n_0_0)) (16))))))) in
          void);
         (mutable_x_0 := (C_49:
                         (JC_<somenum>:
                         (uint32_of_integer_ (C_48:
                                             ((mul_int (integer_of_uint32 !mutable_x_0)) (65536)))))));
         !mutable_x_0 end)) in void) else void);
       (if ((le_int_ (integer_of_uint32 !mutable_x_0)) (16777215))
       then
        (let jessie_<somenum> =
        (C_53:
        (C_56:
        begin
          (let jessie_<somenum> =
          (n_0_0 := (C_52:
                    (JC_<somenum>:
                    (int32_of_integer_ (C_51:
                                       ((add_int (integer_of_int32 !n_0_0)) (8))))))) in
          void);
         (mutable_x_0 := (C_55:
                         (JC_<somenum>:
                         (uint32_of_integer_ (C_54:
                                             ((mul_int (integer_of_uint32 !mutable_x_0)) (256)))))));
         !mutable_x_0 end)) in void) else void);
       (if ((le_int_ (integer_of_uint32 !mutable_x_0)) (268435455))
       then
        (let jessie_<somenum> =
        (C_59:
        (C_62:
        begin
          (let jessie_<somenum> =
          (n_0_0 := (C_58:
                    (JC_<somenum>:
                    (int32_of_integer_ (C_57:
                                       ((add_int (integer_of_int32 !n_0_0)) (4))))))) in
          void);
         (mutable_x_0 := (C_61:
                         (JC_<somenum>:
                         (uint32_of_integer_ (C_60:
                                             ((mul_int (integer_of_uint32 !mutable_x_0)) (16)))))));
         !mutable_x_0 end)) in void) else void);
       (if ((le_int_ (integer_of_uint32 !mutable_x_0)) (1073741823))
       then
        (let jessie_<somenum> =
        (C_65:
        (C_68:
        begin
          (let jessie_<somenum> =
          (n_0_0 := (C_64:
                    (JC_<somenum>:
                    (int32_of_integer_ (C_63:
                                       ((add_int (integer_of_int32 !n_0_0)) (2))))))) in
          void);
         (mutable_x_0 := (C_67:
                         (JC_<somenum>:
                         (uint32_of_integer_ (C_66:
                                             ((mul_int (integer_of_uint32 !mutable_x_0)) (4)))))));
         !mutable_x_0 end)) in void) else void);
       (if ((le_int_ (integer_of_uint32 !mutable_x_0)) (2147483647))
       then
        (let jessie_<somenum> =
        (C_71:
        (n_0_0 := (C_70:
                  (JC_<somenum>:
                  (int32_of_integer_ (C_69:
                                     ((add_int (integer_of_int32 !n_0_0)) (1)))))))) in
        void) else void); (let jessie_<somenum> = (__retres_0 := !n_0_0) in void);
       (raise (Return_label_exc void)) end)) in void) with
      Return_label_exc jessie_<somenum> ->
      (return_label: begin   (return := !__retres_0); (raise Return) end) end));
    absurd  end with Return -> !return end)))
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

let ntz_ensures_default =
 fun (x_1 : uint32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (let mutable_x_1 = ref x_1 in
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let n_14 = ref (any_int32 void) in
     (let __retres = ref (any_int32 void) in
     try
      (let jessie_<somenum> =
      (C_3:
      (C_41:
      begin
        (if ((eq_int_ (integer_of_uint32 !mutable_x_1)) (0))
        then
         (let jessie_<somenum> =
         (C_2:
         begin
           (let jessie_<somenum> = (__retres := (safe_int32_of_integer_ (32))) in
           void); (raise (Return_label_exc void)) end) in void) else void);
       (let jessie_<somenum> = (n_14 := (safe_int32_of_integer_ (1))) in void);
       (if ((eq_int_ (integer_of_uint32 (C_11:
                                        (safe_uint32_of_integer_ (C_10:
                                                                 ((bw_and 
                                                                   (integer_of_uint32 !mutable_x_1)) (65535))))))) (0))
       then
        (let jessie_<somenum> =
        (C_6:
        (C_9:
        begin
          (let jessie_<somenum> =
          (n_14 := (C_5:
                   (safe_int32_of_integer_ (C_4:
                                           ((add_int (integer_of_int32 !n_14)) (16)))))) in
          void);
         (mutable_x_1 := (C_8:
                         (safe_uint32_of_integer_ (C_7:
                                                  (JC_<somenum>:
                                                  ((div_int (integer_of_uint32 !mutable_x_1)) (65536)))))));
         !mutable_x_1 end)) in void) else void);
       (if ((eq_int_ (integer_of_uint32 (C_19:
                                        (safe_uint32_of_integer_ (C_18:
                                                                 ((bw_and 
                                                                   (integer_of_uint32 !mutable_x_1)) (255))))))) (0))
       then
        (let jessie_<somenum> =
        (C_14:
        (C_17:
        begin
          (let jessie_<somenum> =
          (n_14 := (C_13:
                   (safe_int32_of_integer_ (C_12:
                                           ((add_int (integer_of_int32 !n_14)) (8)))))) in
          void);
         (mutable_x_1 := (C_16:
                         (safe_uint32_of_integer_ (C_15:
                                                  (JC_<somenum>:
                                                  ((div_int (integer_of_uint32 !mutable_x_1)) (256)))))));
         !mutable_x_1 end)) in void) else void);
       (if ((eq_int_ (integer_of_uint32 (C_27:
                                        (safe_uint32_of_integer_ (C_26:
                                                                 ((bw_and 
                                                                   (integer_of_uint32 !mutable_x_1)) (15))))))) (0))
       then
        (let jessie_<somenum> =
        (C_22:
        (C_25:
        begin
          (let jessie_<somenum> =
          (n_14 := (C_21:
                   (safe_int32_of_integer_ (C_20:
                                           ((add_int (integer_of_int32 !n_14)) (4)))))) in
          void);
         (mutable_x_1 := (C_24:
                         (safe_uint32_of_integer_ (C_23:
                                                  (JC_<somenum>:
                                                  ((div_int (integer_of_uint32 !mutable_x_1)) (16)))))));
         !mutable_x_1 end)) in void) else void);
       (if ((eq_int_ (integer_of_uint32 (C_35:
                                        (safe_uint32_of_integer_ (C_34:
                                                                 ((bw_and 
                                                                   (integer_of_uint32 !mutable_x_1)) (3))))))) (0))
       then
        (let jessie_<somenum> =
        (C_30:
        (C_33:
        begin
          (let jessie_<somenum> =
          (n_14 := (C_29:
                   (safe_int32_of_integer_ (C_28:
                                           ((add_int (integer_of_int32 !n_14)) (2)))))) in
          void);
         (mutable_x_1 := (C_32:
                         (safe_uint32_of_integer_ (C_31:
                                                  (JC_<somenum>:
                                                  ((div_int (integer_of_uint32 !mutable_x_1)) (4)))))));
         !mutable_x_1 end)) in void) else void);
       (let jessie_<somenum> =
       (__retres := (C_40:
                    (safe_int32_of_integer_ (C_39:
                                            ((sub_int (integer_of_uint32 
                                                       (C_38:
                                                       (safe_uint32_of_integer_ 
                                                        (integer_of_int32 !n_14))))) 
                                             (integer_of_uint32 (C_37:
                                                                (safe_uint32_of_integer_ 
                                                                 (C_36:
                                                                 ((bw_and 
                                                                   (integer_of_uint32 !mutable_x_1)) (1))))))))))) in
       void); (raise (Return_label_exc void)) end)) in void) with
      Return_label_exc jessie_<somenum> ->
      (return_label: begin   (return := !__retres); (raise Return) end) end));
    absurd  end with Return -> !return end))) { (JC_<somenum>: true) }

let ntz_safety =
 fun (x_1 : uint32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (let mutable_x_1 = ref x_1 in
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let n_14 = ref (any_int32 void) in
     (let __retres = ref (any_int32 void) in
     try
      (let jessie_<somenum> =
      (C_3:
      (C_41:
      begin
        (if ((eq_int_ (integer_of_uint32 !mutable_x_1)) (0))
        then
         (let jessie_<somenum> =
         (C_2:
         begin
           (let jessie_<somenum> = (__retres := (safe_int32_of_integer_ (32))) in
           void); (raise (Return_label_exc void)) end) in void) else void);
       (let jessie_<somenum> = (n_14 := (safe_int32_of_integer_ (1))) in void);
       (if ((eq_int_ (integer_of_uint32 (C_11:
                                        (JC_<somenum>:
                                        (uint32_of_integer_ (C_10:
                                                            ((bw_and 
                                                              (integer_of_uint32 !mutable_x_1)) (65535)))))))) (0))
       then
        (let jessie_<somenum> =
        (C_6:
        (C_9:
        begin
          (let jessie_<somenum> =
          (n_14 := (C_5:
                   (JC_<somenum>:
                   (int32_of_integer_ (C_4:
                                      ((add_int (integer_of_int32 !n_14)) (16))))))) in
          void);
         (mutable_x_1 := (C_8:
                         (JC_<somenum>:
                         (uint32_of_integer_ (C_7:
                                             (JC_<somenum>:
                                             ((div_int_ (integer_of_uint32 !mutable_x_1)) (65536))))))));
         !mutable_x_1 end)) in void) else void);
       (if ((eq_int_ (integer_of_uint32 (C_19:
                                        (JC_<somenum>:
                                        (uint32_of_integer_ (C_18:
                                                            ((bw_and 
                                                              (integer_of_uint32 !mutable_x_1)) (255)))))))) (0))
       then
        (let jessie_<somenum> =
        (C_14:
        (C_17:
        begin
          (let jessie_<somenum> =
          (n_14 := (C_13:
                   (JC_<somenum>:
                   (int32_of_integer_ (C_12:
                                      ((add_int (integer_of_int32 !n_14)) (8))))))) in
          void);
         (mutable_x_1 := (C_16:
                         (JC_<somenum>:
                         (uint32_of_integer_ (C_15:
                                             (JC_<somenum>:
                                             ((div_int_ (integer_of_uint32 !mutable_x_1)) (256))))))));
         !mutable_x_1 end)) in void) else void);
       (if ((eq_int_ (integer_of_uint32 (C_27:
                                        (JC_<somenum>:
                                        (uint32_of_integer_ (C_26:
                                                            ((bw_and 
                                                              (integer_of_uint32 !mutable_x_1)) (15)))))))) (0))
       then
        (let jessie_<somenum> =
        (C_22:
        (C_25:
        begin
          (let jessie_<somenum> =
          (n_14 := (C_21:
                   (JC_<somenum>:
                   (int32_of_integer_ (C_20:
                                      ((add_int (integer_of_int32 !n_14)) (4))))))) in
          void);
         (mutable_x_1 := (C_24:
                         (JC_<somenum>:
                         (uint32_of_integer_ (C_23:
                                             (JC_<somenum>:
                                             ((div_int_ (integer_of_uint32 !mutable_x_1)) (16))))))));
         !mutable_x_1 end)) in void) else void);
       (if ((eq_int_ (integer_of_uint32 (C_35:
                                        (JC_<somenum>:
                                        (uint32_of_integer_ (C_34:
                                                            ((bw_and 
                                                              (integer_of_uint32 !mutable_x_1)) (3)))))))) (0))
       then
        (let jessie_<somenum> =
        (C_30:
        (C_33:
        begin
          (let jessie_<somenum> =
          (n_14 := (C_29:
                   (JC_<somenum>:
                   (int32_of_integer_ (C_28:
                                      ((add_int (integer_of_int32 !n_14)) (2))))))) in
          void);
         (mutable_x_1 := (C_32:
                         (JC_<somenum>:
                         (uint32_of_integer_ (C_31:
                                             (JC_<somenum>:
                                             ((div_int_ (integer_of_uint32 !mutable_x_1)) (4))))))));
         !mutable_x_1 end)) in void) else void);
       (let jessie_<somenum> =
       (__retres := (C_40:
                    (JC_<somenum>:
                    (int32_of_integer_ (C_39:
                                       ((sub_int (integer_of_uint32 (C_38:
                                                                    (JC_<somenum>:
                                                                    (uint32_of_integer_ 
                                                                    (integer_of_int32 !n_14)))))) 
                                        (integer_of_uint32 (C_37:
                                                           (JC_<somenum>:
                                                           (uint32_of_integer_ 
                                                            (C_36:
                                                            ((bw_and 
                                                              (integer_of_uint32 !mutable_x_1)) (1))))))))))))) in
       void); (raise (Return_label_exc void)) end)) in void) with
      Return_label_exc jessie_<somenum> ->
      (return_label: begin   (return := !__retres); (raise Return) end) end));
    absurd  end with Return -> !return end)))
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

let pop_ensures_default =
 fun (x_2 : uint32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (let mutable_x_2 = ref x_2 in
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let __retres_1 = ref (any_int32 void) in
     (C_80:
     (C_89:
     (C_96:
     (C_101:
     (C_106:
     (C_109:
     begin
       (let jessie_<somenum> =
       (mutable_x_2 := (C_79:
                       (safe_uint32_of_integer_ (C_78:
                                                ((sub_int (integer_of_uint32 !mutable_x_2)) 
                                                 (integer_of_uint32 (C_77:
                                                                    (safe_uint32_of_integer_ 
                                                                    (C_76:
                                                                    ((bw_and 
                                                                    (integer_of_uint32 
                                                                    (C_75:
                                                                    (safe_uint32_of_integer_ 
                                                                    (C_74:
                                                                    (JC_<somenum>:
                                                                    ((div_int 
                                                                    (integer_of_uint32 !mutable_x_2)) (2)))))))) (1431655765))))))))))) in
       void);
      (let jessie_<somenum> =
      (mutable_x_2 := (C_88:
                      (safe_uint32_of_integer_ (C_87:
                                               ((add_int (integer_of_uint32 
                                                          (C_86:
                                                          (safe_uint32_of_integer_ 
                                                           (C_85:
                                                           ((bw_and (integer_of_uint32 !mutable_x_2)) (858993459))))))) 
                                                (integer_of_uint32 (C_84:
                                                                   (safe_uint32_of_integer_ 
                                                                    (C_83:
                                                                    ((bw_and 
                                                                    (integer_of_uint32 
                                                                    (C_82:
                                                                    (safe_uint32_of_integer_ 
                                                                    (C_81:
                                                                    (JC_<somenum>:
                                                                    ((div_int 
                                                                    (integer_of_uint32 !mutable_x_2)) (4)))))))) (858993459))))))))))) in
      void);
      (let jessie_<somenum> =
      (mutable_x_2 := (C_95:
                      (safe_uint32_of_integer_ (C_94:
                                               ((bw_and (integer_of_uint32 
                                                         (C_93:
                                                         (safe_uint32_of_integer_ 
                                                          (C_92:
                                                          ((add_int (integer_of_uint32 !mutable_x_2)) 
                                                           (integer_of_uint32 
                                                            (C_91:
                                                            (safe_uint32_of_integer_ 
                                                             (C_90:
                                                             (JC_<somenum>:
                                                             ((div_int 
                                                               (integer_of_uint32 !mutable_x_2)) (16))))))))))))) (252645135)))))) in
      void);
      (let jessie_<somenum> =
      (mutable_x_2 := (C_100:
                      (safe_uint32_of_integer_ (C_99:
                                               ((add_int (integer_of_uint32 !mutable_x_2)) 
                                                (integer_of_uint32 (C_98:
                                                                   (safe_uint32_of_integer_ 
                                                                    (C_97:
                                                                    ((mul_int 
                                                                    (integer_of_uint32 !mutable_x_2)) (256))))))))))) in
      void);
      (let jessie_<somenum> =
      (mutable_x_2 := (C_105:
                      (safe_uint32_of_integer_ (C_104:
                                               ((add_int (integer_of_uint32 !mutable_x_2)) 
                                                (integer_of_uint32 (C_103:
                                                                   (safe_uint32_of_integer_ 
                                                                    (C_102:
                                                                    ((mul_int 
                                                                    (integer_of_uint32 !mutable_x_2)) (65536))))))))))) in
      void);
      (let jessie_<somenum> =
      (__retres_1 := (C_108:
                     (safe_int32_of_integer_ (C_107:
                                             (JC_<somenum>:
                                             ((div_int (integer_of_uint32 !mutable_x_2)) (16777216))))))) in
      void); (return := !__retres_1); (raise Return) end))))))); absurd  end
   with Return -> !return end))) { (JC_<somenum>: true) }

let pop_safety =
 fun (x_2 : uint32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (let mutable_x_2 = ref x_2 in
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let __retres_1 = ref (any_int32 void) in
     (C_80:
     (C_89:
     (C_96:
     (C_101:
     (C_106:
     (C_109:
     begin
       (let jessie_<somenum> =
       (mutable_x_2 := (C_79:
                       (JC_<somenum>:
                       (uint32_of_integer_ (C_78:
                                           ((sub_int (integer_of_uint32 !mutable_x_2)) 
                                            (integer_of_uint32 (C_77:
                                                               (JC_<somenum>:
                                                               (uint32_of_integer_ 
                                                                (C_76:
                                                                ((bw_and 
                                                                  (integer_of_uint32 
                                                                   (C_75:
                                                                   (JC_<somenum>:
                                                                   (uint32_of_integer_ 
                                                                    (C_74:
                                                                    (JC_<somenum>:
                                                                    ((div_int_ 
                                                                    (integer_of_uint32 !mutable_x_2)) (2))))))))) (1431655765))))))))))))) in
       void);
      (let jessie_<somenum> =
      (mutable_x_2 := (C_88:
                      (JC_<somenum>:
                      (uint32_of_integer_ (C_87:
                                          ((add_int (integer_of_uint32 
                                                     (C_86:
                                                     (JC_<somenum>:
                                                     (uint32_of_integer_ 
                                                      (C_85:
                                                      ((bw_and (integer_of_uint32 !mutable_x_2)) (858993459)))))))) 
                                           (integer_of_uint32 (C_84:
                                                              (JC_<somenum>:
                                                              (uint32_of_integer_ 
                                                               (C_83:
                                                               ((bw_and 
                                                                 (integer_of_uint32 
                                                                  (C_82:
                                                                  (JC_<somenum>:
                                                                  (uint32_of_integer_ 
                                                                   (C_81:
                                                                   (JC_<somenum>:
                                                                   ((div_int_ 
                                                                    (integer_of_uint32 !mutable_x_2)) (4))))))))) (858993459))))))))))))) in
      void);
      (let jessie_<somenum> =
      (mutable_x_2 := (C_95:
                      (JC_<somenum>:
                      (uint32_of_integer_ (C_94:
                                          ((bw_and (integer_of_uint32 
                                                    (C_93:
                                                    (JC_<somenum>:
                                                    (uint32_of_integer_ 
                                                     (C_92:
                                                     ((add_int (integer_of_uint32 !mutable_x_2)) 
                                                      (integer_of_uint32 
                                                       (C_91:
                                                       (JC_<somenum>:
                                                       (uint32_of_integer_ 
                                                        (C_90:
                                                        (JC_<somenum>:
                                                        ((div_int_ (integer_of_uint32 !mutable_x_2)) (16))))))))))))))) (252645135))))))) in
      void);
      (let jessie_<somenum> =
      (mutable_x_2 := (C_100:
                      (JC_<somenum>:
                      (uint32_of_integer_ (C_99:
                                          ((add_int (integer_of_uint32 !mutable_x_2)) 
                                           (integer_of_uint32 (C_98:
                                                              (JC_<somenum>:
                                                              (uint32_of_integer_ 
                                                               (C_97:
                                                               ((mul_int 
                                                                 (integer_of_uint32 !mutable_x_2)) (256))))))))))))) in
      void);
      (let jessie_<somenum> =
      (mutable_x_2 := (C_105:
                      (JC_<somenum>:
                      (uint32_of_integer_ (C_104:
                                          ((add_int (integer_of_uint32 !mutable_x_2)) 
                                           (integer_of_uint32 (C_103:
                                                              (JC_<somenum>:
                                                              (uint32_of_integer_ 
                                                               (C_102:
                                                               ((mul_int 
                                                                 (integer_of_uint32 !mutable_x_2)) (65536))))))))))))) in
      void);
      (let jessie_<somenum> =
      (__retres_1 := (C_108:
                     (JC_<somenum>:
                     (int32_of_integer_ (C_107:
                                        (JC_<somenum>:
                                        ((div_int_ (integer_of_uint32 !mutable_x_2)) (16777216)))))))) in
      void); (return := !__retres_1); (raise Return) end))))))); absurd  end
   with Return -> !return end)))
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

let snoob1_ensures_default =
 fun (x_4 : uint32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (init:
  (let return = ref (any_uint32 void) in
  try
   begin
     (let smallest_0 = ref (any_uint32 void) in
     (let ripple_0 = ref (any_uint32 void) in
     (let ones_0 = ref (any_uint32 void) in
     (let tmp = ref (any_int32 void) in
     (let __retres_3 = ref (any_uint32 void) in
     (C_135:
     (C_138:
     (C_141:
     (C_152:
     begin
       (let jessie_<somenum> =
       (smallest_0 := (C_134:
                      (safe_uint32_of_integer_ (C_133:
                                               ((bw_and (integer_of_uint32 x_4)) 
                                                (integer_of_uint32 (C_132:
                                                                   (safe_uint32_of_integer_ 
                                                                    (C_131:
                                                                    (neg_int 
                                                                    (integer_of_uint32 x_4))))))))))) in
       void);
      (let jessie_<somenum> =
      (ripple_0 := (C_137:
                   (safe_uint32_of_integer_ (C_136:
                                            ((add_int (integer_of_uint32 x_4)) 
                                             (integer_of_uint32 !smallest_0)))))) in
      void);
      (let jessie_<somenum> =
      (ones_0 := (C_140:
                 (safe_uint32_of_integer_ (C_139:
                                          ((bw_xor (integer_of_uint32 x_4)) 
                                           (integer_of_uint32 !ripple_0)))))) in
      void);
      (let jessie_<somenum> =
      (C_143:
      (C_149:
      begin
        (let jessie_<somenum> =
        (tmp := (C_142: (let jessie_<somenum> = x_4 in (JC_<somenum>: (ntz jessie_<somenum>))))) in
        void);
       (assert
       { (JC_<somenum>: lt_int(add_int((2), integer_of_int32(tmp)), (32))) }; void);
       (ones_0 := (C_148:
                  (safe_uint32_of_integer_ (C_147:
                                           ((lsr (integer_of_uint32 !ones_0)) 
                                            (integer_of_int32 (C_146:
                                                              (safe_int32_of_integer_ 
                                                               (C_145:
                                                               ((add_int (2)) 
                                                                (integer_of_int32 !tmp)))))))))));
       !ones_0 end)) in void);
      (let jessie_<somenum> =
      (__retres_3 := (C_151:
                     (safe_uint32_of_integer_ (C_150:
                                              ((bw_or (integer_of_uint32 !ripple_0)) 
                                               (integer_of_uint32 !ones_0)))))) in
      void); (return := !__retres_3); (raise Return) end))))))))); absurd 
   end with Return -> !return end)) { (JC_<somenum>: true) }

let snoob1_safety =
 fun (x_4 : uint32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (init:
  (let return = ref (any_uint32 void) in
  try
   begin
     (let smallest_0 = ref (any_uint32 void) in
     (let ripple_0 = ref (any_uint32 void) in
     (let ones_0 = ref (any_uint32 void) in
     (let tmp = ref (any_int32 void) in
     (let __retres_3 = ref (any_uint32 void) in
     (C_135:
     (C_138:
     (C_141:
     (C_152:
     begin
       (let jessie_<somenum> =
       (smallest_0 := (C_134:
                      (JC_<somenum>:
                      (uint32_of_integer_ (C_133:
                                          ((bw_and (integer_of_uint32 x_4)) 
                                           (integer_of_uint32 (C_132:
                                                              (JC_<somenum>:
                                                              (uint32_of_integer_ 
                                                               (C_131:
                                                               (neg_int 
                                                                (integer_of_uint32 x_4))))))))))))) in
       void);
      (let jessie_<somenum> =
      (ripple_0 := (C_137:
                   (JC_<somenum>:
                   (uint32_of_integer_ (C_136:
                                       ((add_int (integer_of_uint32 x_4)) 
                                        (integer_of_uint32 !smallest_0))))))) in
      void);
      (let jessie_<somenum> =
      (ones_0 := (C_140:
                 (JC_<somenum>:
                 (uint32_of_integer_ (C_139:
                                     ((bw_xor (integer_of_uint32 x_4)) 
                                      (integer_of_uint32 !ripple_0))))))) in
      void);
      (let jessie_<somenum> =
      (C_143:
      (C_149:
      begin
        (let jessie_<somenum> =
        (tmp := (C_142:
                (let jessie_<somenum> = x_4 in (JC_<somenum>: (ntz_requires jessie_<somenum>))))) in
        void);
       [ { } unit reads tmp
         { (JC_<somenum>: lt_int(add_int((2), integer_of_int32(tmp)), (32))) } ];
       (ones_0 := (C_148:
                  (JC_<somenum>:
                  (uint32_of_integer_ (C_147:
                                      ((lsr (integer_of_uint32 !ones_0)) 
                                       (integer_of_int32 (C_146:
                                                         (JC_<somenum>:
                                                         (int32_of_integer_ 
                                                          (C_145:
                                                          ((add_int (2)) 
                                                           (integer_of_int32 !tmp)))))))))))));
       !ones_0 end)) in void);
      (let jessie_<somenum> =
      (__retres_3 := (C_151:
                     (JC_<somenum>:
                     (uint32_of_integer_ (C_150:
                                         ((bw_or (integer_of_uint32 !ripple_0)) 
                                          (integer_of_uint32 !ones_0))))))) in
      void); (return := !__retres_3); (raise Return) end))))))))); absurd 
   end with Return -> !return end))
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

let snoob2_ensures_default =
 fun (x_5 : uint32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (init:
  (let return = ref (any_uint32 void) in
  try
   begin
     (let smallest_1 = ref (any_uint32 void) in
     (let ripple_1 = ref (any_uint32 void) in
     (let ones_1 = ref (any_uint32 void) in
     (let tmp_0 = ref (any_int32 void) in
     (let __retres_4 = ref (any_uint32 void) in
     (C_158:
     (C_161:
     (C_164:
     (C_175:
     begin
       (let jessie_<somenum> =
       (smallest_1 := (C_157:
                      (safe_uint32_of_integer_ (C_156:
                                               ((bw_and (integer_of_uint32 x_5)) 
                                                (integer_of_uint32 (C_155:
                                                                   (safe_uint32_of_integer_ 
                                                                    (C_154:
                                                                    (neg_int 
                                                                    (integer_of_uint32 x_5))))))))))) in
       void);
      (let jessie_<somenum> =
      (ripple_1 := (C_160:
                   (safe_uint32_of_integer_ (C_159:
                                            ((add_int (integer_of_uint32 x_5)) 
                                             (integer_of_uint32 !smallest_1)))))) in
      void);
      (let jessie_<somenum> =
      (ones_1 := (C_163:
                 (safe_uint32_of_integer_ (C_162:
                                          ((bw_xor (integer_of_uint32 x_5)) 
                                           (integer_of_uint32 !ripple_1)))))) in
      void);
      (let jessie_<somenum> =
      (C_166:
      (C_172:
      begin
        (let jessie_<somenum> =
        (tmp_0 := (C_165:
                  (let jessie_<somenum> = !smallest_1 in
                  (JC_<somenum>: (nlz jessie_<somenum>))))) in void);
       (assert
       { (JC_<somenum>: lt_int(sub_int((33), integer_of_int32(tmp_0)), (32))) };
       void);
       (ones_1 := (C_171:
                  (safe_uint32_of_integer_ (C_170:
                                           ((lsr (integer_of_uint32 !ones_1)) 
                                            (integer_of_int32 (C_169:
                                                              (safe_int32_of_integer_ 
                                                               (C_168:
                                                               ((sub_int (33)) 
                                                                (integer_of_int32 !tmp_0)))))))))));
       !ones_1 end)) in void);
      (let jessie_<somenum> =
      (__retres_4 := (C_174:
                     (safe_uint32_of_integer_ (C_173:
                                              ((bw_or (integer_of_uint32 !ripple_1)) 
                                               (integer_of_uint32 !ones_1)))))) in
      void); (return := !__retres_4); (raise Return) end))))))))); absurd 
   end with Return -> !return end)) { (JC_<somenum>: true) }

let snoob2_safety =
 fun (x_5 : uint32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (init:
  (let return = ref (any_uint32 void) in
  try
   begin
     (let smallest_1 = ref (any_uint32 void) in
     (let ripple_1 = ref (any_uint32 void) in
     (let ones_1 = ref (any_uint32 void) in
     (let tmp_0 = ref (any_int32 void) in
     (let __retres_4 = ref (any_uint32 void) in
     (C_158:
     (C_161:
     (C_164:
     (C_175:
     begin
       (let jessie_<somenum> =
       (smallest_1 := (C_157:
                      (JC_<somenum>:
                      (uint32_of_integer_ (C_156:
                                          ((bw_and (integer_of_uint32 x_5)) 
                                           (integer_of_uint32 (C_155:
                                                              (JC_<somenum>:
                                                              (uint32_of_integer_ 
                                                               (C_154:
                                                               (neg_int 
                                                                (integer_of_uint32 x_5))))))))))))) in
       void);
      (let jessie_<somenum> =
      (ripple_1 := (C_160:
                   (JC_<somenum>:
                   (uint32_of_integer_ (C_159:
                                       ((add_int (integer_of_uint32 x_5)) 
                                        (integer_of_uint32 !smallest_1))))))) in
      void);
      (let jessie_<somenum> =
      (ones_1 := (C_163:
                 (JC_<somenum>:
                 (uint32_of_integer_ (C_162:
                                     ((bw_xor (integer_of_uint32 x_5)) 
                                      (integer_of_uint32 !ripple_1))))))) in
      void);
      (let jessie_<somenum> =
      (C_166:
      (C_172:
      begin
        (let jessie_<somenum> =
        (tmp_0 := (C_165:
                  (let jessie_<somenum> = !smallest_1 in
                  (JC_<somenum>: (nlz_requires jessie_<somenum>))))) in void);
       [ { } unit reads tmp_0
         { (JC_<somenum>: lt_int(sub_int((33), integer_of_int32(tmp_0)), (32))) } ];
       (ones_1 := (C_171:
                  (JC_<somenum>:
                  (uint32_of_integer_ (C_170:
                                      ((lsr (integer_of_uint32 !ones_1)) 
                                       (integer_of_int32 (C_169:
                                                         (JC_<somenum>:
                                                         (int32_of_integer_ 
                                                          (C_168:
                                                          ((sub_int (33)) 
                                                           (integer_of_int32 !tmp_0)))))))))))));
       !ones_1 end)) in void);
      (let jessie_<somenum> =
      (__retres_4 := (C_174:
                     (JC_<somenum>:
                     (uint32_of_integer_ (C_173:
                                         ((bw_or (integer_of_uint32 !ripple_1)) 
                                          (integer_of_uint32 !ones_1))))))) in
      void); (return := !__retres_4); (raise Return) end))))))))); absurd 
   end with Return -> !return end))
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

let snoob3_ensures_default =
 fun (x_6 : uint32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (init:
  (let return = ref (any_uint32 void) in
  try
   begin
     (let smallest_2 = ref (any_uint32 void) in
     (let ripple_2 = ref (any_uint32 void) in
     (let ones_2 = ref (any_uint32 void) in
     (let tmp_1 = ref (any_int32 void) in
     (let __retres_5 = ref (any_uint32 void) in
     (C_181:
     (C_184:
     (C_187:
     (C_202:
     begin
       (let jessie_<somenum> =
       (smallest_2 := (C_180:
                      (safe_uint32_of_integer_ (C_179:
                                               ((bw_and (integer_of_uint32 x_6)) 
                                                (integer_of_uint32 (C_178:
                                                                   (safe_uint32_of_integer_ 
                                                                    (C_177:
                                                                    (neg_int 
                                                                    (integer_of_uint32 x_6))))))))))) in
       void);
      (let jessie_<somenum> =
      (ripple_2 := (C_183:
                   (safe_uint32_of_integer_ (C_182:
                                            ((add_int (integer_of_uint32 x_6)) 
                                             (integer_of_uint32 !smallest_2)))))) in
      void);
      (let jessie_<somenum> =
      (ones_2 := (C_186:
                 (safe_uint32_of_integer_ (C_185:
                                          ((bw_xor (integer_of_uint32 x_6)) 
                                           (integer_of_uint32 !ripple_2)))))) in
      void);
      (let jessie_<somenum> =
      (C_189:
      (C_199:
      begin
        (let jessie_<somenum> =
        (tmp_1 := (C_188:
                  (let jessie_<somenum> = !ones_2 in (JC_<somenum>: (pop jessie_<somenum>))))) in
        void);
       (assert
       { (JC_<somenum>:
         le_int((1),
         asr((2147483647), sub_int(integer_of_int32(tmp_1), (2))))) }; void);
       (assert
       { (JC_<somenum>: lt_int(sub_int(integer_of_int32(tmp_1), (2)), (32))) };
       void);
       (assert
       { (JC_<somenum>: ge_int(sub_int(integer_of_int32(tmp_1), (2)), (0))) };
       void);
       (ones_2 := (C_198:
                  (safe_uint32_of_integer_ (C_197:
                                           ((sub_int (integer_of_int32 
                                                      (C_196:
                                                      (safe_int32_of_integer_ 
                                                       (C_195:
                                                       ((lsl (1)) (integer_of_int32 
                                                                   (C_194:
                                                                   (safe_int32_of_integer_ 
                                                                    (C_193:
                                                                    ((sub_int 
                                                                    (integer_of_int32 !tmp_1)) (2)))))))))))) (1))))));
       !ones_2 end)) in void);
      (let jessie_<somenum> =
      (__retres_5 := (C_201:
                     (safe_uint32_of_integer_ (C_200:
                                              ((bw_or (integer_of_uint32 !ripple_2)) 
                                               (integer_of_uint32 !ones_2)))))) in
      void); (return := !__retres_5); (raise Return) end))))))))); absurd 
   end with Return -> !return end)) { (JC_<somenum>: true) }

let snoob3_safety =
 fun (x_6 : uint32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (init:
  (let return = ref (any_uint32 void) in
  try
   begin
     (let smallest_2 = ref (any_uint32 void) in
     (let ripple_2 = ref (any_uint32 void) in
     (let ones_2 = ref (any_uint32 void) in
     (let tmp_1 = ref (any_int32 void) in
     (let __retres_5 = ref (any_uint32 void) in
     (C_181:
     (C_184:
     (C_187:
     (C_202:
     begin
       (let jessie_<somenum> =
       (smallest_2 := (C_180:
                      (JC_<somenum>:
                      (uint32_of_integer_ (C_179:
                                          ((bw_and (integer_of_uint32 x_6)) 
                                           (integer_of_uint32 (C_178:
                                                              (JC_<somenum>:
                                                              (uint32_of_integer_ 
                                                               (C_177:
                                                               (neg_int 
                                                                (integer_of_uint32 x_6))))))))))))) in
       void);
      (let jessie_<somenum> =
      (ripple_2 := (C_183:
                   (JC_<somenum>:
                   (uint32_of_integer_ (C_182:
                                       ((add_int (integer_of_uint32 x_6)) 
                                        (integer_of_uint32 !smallest_2))))))) in
      void);
      (let jessie_<somenum> =
      (ones_2 := (C_186:
                 (JC_<somenum>:
                 (uint32_of_integer_ (C_185:
                                     ((bw_xor (integer_of_uint32 x_6)) 
                                      (integer_of_uint32 !ripple_2))))))) in
      void);
      (let jessie_<somenum> =
      (C_189:
      (C_199:
      begin
        (let jessie_<somenum> =
        (tmp_1 := (C_188:
                  (let jessie_<somenum> = !ones_2 in
                  (JC_<somenum>: (pop_requires jessie_<somenum>))))) in void);
       [ { } unit reads tmp_1
         { (JC_<somenum>:
           le_int((1),
           asr((2147483647), sub_int(integer_of_int32(tmp_1), (2))))) } ];
       [ { } unit reads tmp_1
         { (JC_<somenum>: lt_int(sub_int(integer_of_int32(tmp_1), (2)), (32))) } ];
       [ { } unit reads tmp_1
         { (JC_<somenum>: ge_int(sub_int(integer_of_int32(tmp_1), (2)), (0))) } ];
       (ones_2 := (C_198:
                  (JC_<somenum>:
                  (uint32_of_integer_ (C_197:
                                      ((sub_int (integer_of_int32 (C_196:
                                                                  (JC_<somenum>:
                                                                  (int32_of_integer_ 
                                                                   (C_195:
                                                                   ((lsl (1)) 
                                                                    (integer_of_int32 
                                                                    (C_194:
                                                                    (JC_<somenum>:
                                                                    (int32_of_integer_ 
                                                                    (C_193:
                                                                    ((sub_int 
                                                                    (integer_of_int32 !tmp_1)) (2)))))))))))))) (1)))))));
       !ones_2 end)) in void);
      (let jessie_<somenum> =
      (__retres_5 := (C_201:
                     (JC_<somenum>:
                     (uint32_of_integer_ (C_200:
                                         ((bw_or (integer_of_uint32 !ripple_2)) 
                                          (integer_of_uint32 !ones_2))))))) in
      void); (return := !__retres_5); (raise Return) end))))))))); absurd 
   end with Return -> !return end))
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

let snoob4_ensures_default =
 fun (x_7_0 : int32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (let mutable_x_7_0 = ref x_7_0 in
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let y = ref (any_int32 void) in
     (let __retres_7 = ref (any_int32 void) in
     (C_235:
     (C_240:
     (C_248:
     (C_251:
     begin
       (let jessie_<somenum> =
       (y := (C_234:
             (safe_int32_of_integer_ (C_233:
                                     ((add_int (integer_of_int32 !mutable_x_7_0)) 
                                      (integer_of_int32 (C_232:
                                                        (safe_int32_of_integer_ 
                                                         (C_231:
                                                         ((bw_and (integer_of_int32 !mutable_x_7_0)) 
                                                          (integer_of_int32 
                                                           (C_230:
                                                           (safe_int32_of_integer_ 
                                                            (C_229:
                                                            (neg_int 
                                                             (integer_of_int32 !mutable_x_7_0)))))))))))))))) in
       void);
      (let jessie_<somenum> =
      (mutable_x_7_0 := (C_239:
                        (safe_int32_of_integer_ (C_238:
                                                ((bw_and (integer_of_int32 !mutable_x_7_0)) 
                                                 (integer_of_int32 (C_237:
                                                                   (safe_int32_of_integer_ 
                                                                    (C_236:
                                                                    (bw_compl 
                                                                    (integer_of_int32 !y))))))))))) in
      void);
      try
       (let jessie_<somenum> =
       begin
         (loop_2:
         while true do
         { invariant (JC_<somenum>: true)  }
          begin
            [ { } unit { true } ];
           try
            (let jessie_<somenum> =
            begin
              (let jessie_<somenum> =
              (C_245:
              begin
                (if ((eq_int_ (integer_of_int32 (C_242:
                                                (safe_int32_of_integer_ 
                                                 (C_241:
                                                 ((bw_and (integer_of_int32 !mutable_x_7_0)) (1))))))) (0))
                then void
                else
                 (let jessie_<somenum> = (raise (Goto_while_0_break_exc void)) in
                 void));
               (mutable_x_7_0 := (C_244:
                                 (safe_int32_of_integer_ (C_243:
                                                         (JC_<somenum>:
                                                         ((div_int (integer_of_int32 !mutable_x_7_0)) (2)))))));
               !mutable_x_7_0 end) in void); (raise (Loop_continue_exc void))
            end in void) with Loop_continue_exc jessie_<somenum> -> void end end done);
        (raise (Goto_while_0_break_exc void)) end in void) with
       Goto_while_0_break_exc jessie_<somenum> -> (while_0_break: void) end;
      (let jessie_<somenum> =
      (mutable_x_7_0 := (C_247:
                        (safe_int32_of_integer_ (C_246:
                                                (JC_<somenum>:
                                                ((div_int (integer_of_int32 !mutable_x_7_0)) (2))))))) in
      void);
      (let jessie_<somenum> =
      (__retres_7 := (C_250:
                     (safe_int32_of_integer_ (C_249:
                                             ((bw_or (integer_of_int32 !y)) 
                                              (integer_of_int32 !mutable_x_7_0)))))) in
      void); (return := !__retres_7); (raise Return) end)))))); absurd  end
   with Return -> !return end))) { (JC_<somenum>: true) }

let snoob4_safety =
 fun (x_7_0 : int32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (let mutable_x_7_0 = ref x_7_0 in
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let y = ref (any_int32 void) in
     (let __retres_7 = ref (any_int32 void) in
     (C_235:
     (C_240:
     (C_248:
     (C_251:
     begin
       (let jessie_<somenum> =
       (y := (C_234:
             (JC_<somenum>:
             (int32_of_integer_ (C_233:
                                ((add_int (integer_of_int32 !mutable_x_7_0)) 
                                 (integer_of_int32 (C_232:
                                                   (JC_<somenum>:
                                                   (int32_of_integer_ 
                                                    (C_231:
                                                    ((bw_and (integer_of_int32 !mutable_x_7_0)) 
                                                     (integer_of_int32 
                                                      (C_230:
                                                      (JC_<somenum>:
                                                      (int32_of_integer_ 
                                                       (C_229:
                                                       (neg_int (integer_of_int32 !mutable_x_7_0))))))))))))))))))) in
       void);
      (let jessie_<somenum> =
      (mutable_x_7_0 := (C_239:
                        (JC_<somenum>:
                        (int32_of_integer_ (C_238:
                                           ((bw_and (integer_of_int32 !mutable_x_7_0)) 
                                            (integer_of_int32 (C_237:
                                                              (JC_<somenum>:
                                                              (int32_of_integer_ 
                                                               (C_236:
                                                               (bw_compl 
                                                                (integer_of_int32 !y))))))))))))) in
      void);
      try
       (let jessie_<somenum> =
       begin
         (loop_1:
         while true do
         { invariant (JC_<somenum>: true) variant (0) }
          begin
            [ { } unit { true } ];
           try
            (let jessie_<somenum> =
            begin
              (let jessie_<somenum> =
              (C_245:
              begin
                (if ((eq_int_ (integer_of_int32 (C_242:
                                                (JC_<somenum>:
                                                (int32_of_integer_ (C_241:
                                                                   ((bw_and 
                                                                    (integer_of_int32 !mutable_x_7_0)) (1)))))))) (0))
                then void
                else
                 (let jessie_<somenum> = (raise (Goto_while_0_break_exc void)) in
                 void));
               (mutable_x_7_0 := (C_244:
                                 (JC_<somenum>:
                                 (int32_of_integer_ (C_243:
                                                    (JC_<somenum>:
                                                    ((div_int_ (integer_of_int32 !mutable_x_7_0)) (2))))))));
               !mutable_x_7_0 end) in void); (raise (Loop_continue_exc void))
            end in void) with Loop_continue_exc jessie_<somenum> -> void end end done);
        (raise (Goto_while_0_break_exc void)) end in void) with
       Goto_while_0_break_exc jessie_<somenum> -> (while_0_break: void) end;
      (let jessie_<somenum> =
      (mutable_x_7_0 := (C_247:
                        (JC_<somenum>:
                        (int32_of_integer_ (C_246:
                                           (JC_<somenum>:
                                           ((div_int_ (integer_of_int32 !mutable_x_7_0)) (2)))))))) in
      void);
      (let jessie_<somenum> =
      (__retres_7 := (C_250:
                     (JC_<somenum>:
                     (int32_of_integer_ (C_249:
                                        ((bw_or (integer_of_int32 !y)) 
                                         (integer_of_int32 !mutable_x_7_0))))))) in
      void); (return := !__retres_7); (raise Return) end)))))); absurd  end
   with Return -> !return end)))
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }

let snoob_ensures_default =
 fun (x_3 : uint32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (init:
  (let return = ref (any_uint32 void) in
  try
   begin
     (let smallest = ref (any_uint32 void) in
     (let ripple = ref (any_uint32 void) in
     (let ones = ref (any_uint32 void) in
     (let __retres_2 = ref (any_uint32 void) in
     (C_115:
     (C_118:
     (C_121:
     (C_126:
     (C_129:
     begin
       (let jessie_<somenum> =
       (smallest := (C_114:
                    (safe_uint32_of_integer_ (C_113:
                                             ((bw_and (integer_of_uint32 x_3)) 
                                              (integer_of_uint32 (C_112:
                                                                 (safe_uint32_of_integer_ 
                                                                  (C_111:
                                                                  (neg_int 
                                                                   (integer_of_uint32 x_3))))))))))) in
       void);
      (let jessie_<somenum> =
      (ripple := (C_117:
                 (safe_uint32_of_integer_ (C_116:
                                          ((add_int (integer_of_uint32 x_3)) 
                                           (integer_of_uint32 !smallest)))))) in
      void);
      (let jessie_<somenum> =
      (ones := (C_120:
               (safe_uint32_of_integer_ (C_119:
                                        ((bw_xor (integer_of_uint32 x_3)) 
                                         (integer_of_uint32 !ripple)))))) in
      void);
      (let jessie_<somenum> =
      (ones := (C_125:
               (safe_uint32_of_integer_ (C_124:
                                        (JC_<somenum>:
                                        ((div_int (integer_of_uint32 
                                                   (C_123:
                                                   (safe_uint32_of_integer_ 
                                                    (C_122:
                                                    (JC_<somenum>:
                                                    ((div_int (integer_of_uint32 !ones)) (4)))))))) 
                                         (integer_of_uint32 !smallest))))))) in
      void);
      (let jessie_<somenum> =
      (__retres_2 := (C_128:
                     (safe_uint32_of_integer_ (C_127:
                                              ((bw_or (integer_of_uint32 !ripple)) 
                                               (integer_of_uint32 !ones)))))) in
      void); (return := !__retres_2); (raise Return) end))))))))); absurd 
   end with Return -> !return end)) { (JC_<somenum>: true) }

let snoob_safety =
 fun (x_3 : uint32) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }
  (init:
  (let return = ref (any_uint32 void) in
  try
   begin
     (let smallest = ref (any_uint32 void) in
     (let ripple = ref (any_uint32 void) in
     (let ones = ref (any_uint32 void) in
     (let __retres_2 = ref (any_uint32 void) in
     (C_115:
     (C_118:
     (C_121:
     (C_126:
     (C_129:
     begin
       (let jessie_<somenum> =
       (smallest := (C_114:
                    (JC_<somenum>:
                    (uint32_of_integer_ (C_113:
                                        ((bw_and (integer_of_uint32 x_3)) 
                                         (integer_of_uint32 (C_112:
                                                            (JC_<somenum>:
                                                            (uint32_of_integer_ 
                                                             (C_111:
                                                             (neg_int 
                                                              (integer_of_uint32 x_3))))))))))))) in
       void);
      (let jessie_<somenum> =
      (ripple := (C_117:
                 (JC_<somenum>:
                 (uint32_of_integer_ (C_116:
                                     ((add_int (integer_of_uint32 x_3)) 
                                      (integer_of_uint32 !smallest))))))) in
      void);
      (let jessie_<somenum> =
      (ones := (C_120:
               (JC_<somenum>:
               (uint32_of_integer_ (C_119:
                                   ((bw_xor (integer_of_uint32 x_3)) 
                                    (integer_of_uint32 !ripple))))))) in
      void);
      (let jessie_<somenum> =
      (ones := (C_125:
               (JC_<somenum>:
               (uint32_of_integer_ (C_124:
                                   (JC_<somenum>:
                                   ((div_int_ (integer_of_uint32 (C_123:
                                                                 (JC_<somenum>:
                                                                 (uint32_of_integer_ 
                                                                  (C_122:
                                                                  (JC_<somenum>:
                                                                  ((div_int_ 
                                                                    (integer_of_uint32 !ones)) (4))))))))) 
                                    (integer_of_uint32 !smallest)))))))) in
      void);
      (let jessie_<somenum> =
      (__retres_2 := (C_128:
                     (JC_<somenum>:
                     (uint32_of_integer_ (C_127:
                                         ((bw_or (integer_of_uint32 !ripple)) 
                                          (integer_of_uint32 !ones))))))) in
      void); (return := !__retres_2); (raise Return) end))))))))); absurd 
   end with Return -> !return end))
  { (JC_<somenum>:
    ((JC_<somenum>:
     valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
     char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1))
    and ((JC_<somenum>:
         valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table))
        and ((JC_<somenum>:
             valid___string_n____d_(char_P___string_n____d__2_alloc_table,
             char_P_char_M___string_n____d__2))
            and ((JC_<somenum>:
                 valid___string_n____d__0(char_P___string_n____d__2_alloc_table))
                and ((JC_<somenum>:
                     valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
                     char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3))
                    and ((JC_<somenum>:
                         valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table))
                        and ((JC_<somenum>:
                             valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
                             char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4))
                            and (JC_<somenum>:
                                valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table)))))))))) }


WHYLIB=WHYHOME/lib WHYEXEC=WHYHOME/bin/why.opt GWHYEXEC=WHYHOME/bin/gwhy.opt make --quiet -C hd_snoob.jessie --quiet -f hd_snoob.makefile project
why --project [...] why/hd_snoob.why
<project name="hd_snoob" context="why/hd_snoob_ctx.why">
  <function name="Function snoob4">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/hd_snoob_po337.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "132" begin = "20" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po338.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "132" begin = "20" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po339.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "132" begin = "16" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po340.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "132" begin = "16" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po341.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "132" begin = "11" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po342.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "132" begin = "11" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po343.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "133" begin = "11" end = "13"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po344.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "133" begin = "11" end = "13"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po345.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "133" begin = "7" end = "13"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po346.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "133" begin = "7" end = "13"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po347.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "134" begin = "11" end = "16"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po348.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "134" begin = "11" end = "16"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po349.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "134" begin = "28" end = "34"/>
      <explain kind = "Pre"
text = "DivByZero"/>
    </goal>
    <goal why_file="why/hd_snoob_po350.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "134" begin = "28" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po351.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "134" begin = "28" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po352.why">
      <location file = "why/hd_snoob.why" line = "4830" begin = "45" end = "46"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/hd_snoob_po353.why">
      <location file = "why/hd_snoob.why" line = "4830" begin = "45" end = "46"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/hd_snoob_po354.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "135" begin = "7" end = "13"/>
      <explain kind = "Pre"
text = "DivByZero"/>
    </goal>
    <goal why_file="why/hd_snoob_po355.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "135" begin = "7" end = "13"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po356.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "135" begin = "7" end = "13"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po357.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "136" begin = "10" end = "15"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po358.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "136" begin = "10" end = "15"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po359.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "131" begin = "4" end = "10"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po360.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "131" begin = "4" end = "10"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po361.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "131" begin = "4" end = "10"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po362.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "131" begin = "4" end = "10"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po363.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "131" begin = "4" end = "10"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po364.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "131" begin = "4" end = "10"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po365.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "131" begin = "4" end = "10"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Function snoob3">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/hd_snoob_po307.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "93" begin = "18" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po308.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "93" begin = "18" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po309.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "93" begin = "14" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po310.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "93" begin = "14" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po311.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "94" begin = "12" end = "24"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po312.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "94" begin = "12" end = "24"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po313.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "95" begin = "10" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po314.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "95" begin = "10" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po315.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "97" begin = "11" end = "20"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po316.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "97" begin = "11" end = "20"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po317.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "97" begin = "11" end = "20"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po318.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "97" begin = "11" end = "20"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po319.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "97" begin = "11" end = "20"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po320.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "97" begin = "11" end = "20"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po321.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "97" begin = "11" end = "20"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po322.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "97" begin = "11" end = "24"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po323.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "97" begin = "11" end = "24"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po324.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "96" begin = "11" end = "63"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po325.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "96" begin = "11" end = "63"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po326.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "96" begin = "10" end = "68"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po327.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "96" begin = "10" end = "68"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po328.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "98" begin = "10" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po329.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "98" begin = "10" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po330.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "90" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po331.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "90" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po332.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "90" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po333.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "90" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po334.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "90" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po335.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "90" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po336.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "90" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
    <behavior name="Default behavior">
    <goal why_file="why/hd_snoob_po304.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "96" begin = "11" end = "63"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/hd_snoob_po305.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "96" begin = "11" end = "63"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/hd_snoob_po306.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "96" begin = "11" end = "63"/>
      <explain kind = "Assert"/>
    </goal>
    </behavior>
  </function>
  <function name="Function snoob2">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/hd_snoob_po276.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "81" begin = "18" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po277.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "81" begin = "18" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po278.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "81" begin = "14" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po279.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "81" begin = "14" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po280.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "82" begin = "12" end = "24"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po281.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "82" begin = "12" end = "24"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po282.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "83" begin = "10" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po283.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "83" begin = "10" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po284.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "84" begin = "20" end = "33"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po285.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "84" begin = "20" end = "33"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po286.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "84" begin = "20" end = "33"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po287.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "84" begin = "20" end = "33"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po288.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "84" begin = "20" end = "33"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po289.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "84" begin = "20" end = "33"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po290.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "84" begin = "20" end = "33"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po291.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "84" begin = "17" end = "33"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po292.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "84" begin = "17" end = "33"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po293.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "84" begin = "10" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po294.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "84" begin = "10" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po295.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "85" begin = "10" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po296.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "85" begin = "10" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po297.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "78" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po298.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "78" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po299.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "78" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po300.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "78" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po301.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "78" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po302.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "78" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po303.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "78" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
    <behavior name="Default behavior">
    <goal why_file="why/hd_snoob_po275.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "84" begin = "10" end = "34"/>
      <explain kind = "Assert"/>
    </goal>
    </behavior>
  </function>
  <function name="Function snoob1">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/hd_snoob_po247.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "69" begin = "18" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po248.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "69" begin = "18" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po249.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "69" begin = "14" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po250.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "69" begin = "14" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po251.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "70" begin = "12" end = "24"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po252.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "70" begin = "12" end = "24"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po253.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "71" begin = "10" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po254.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "71" begin = "10" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po255.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "72" begin = "23" end = "29"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po256.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "72" begin = "23" end = "29"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po257.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "72" begin = "23" end = "29"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po258.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "72" begin = "23" end = "29"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po259.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "72" begin = "23" end = "29"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po260.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "72" begin = "23" end = "29"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po261.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "72" begin = "23" end = "29"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po262.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "72" begin = "19" end = "29"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po263.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "72" begin = "19" end = "29"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po264.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "72" begin = "10" end = "30"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po265.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "72" begin = "10" end = "30"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po266.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "73" begin = "10" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po267.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "73" begin = "10" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po268.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "66" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po269.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "66" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po270.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "66" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po271.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "66" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po272.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "66" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po273.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "66" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po274.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "66" begin = "9" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
    <behavior name="Default behavior">
    <goal why_file="why/hd_snoob_po246.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "72" begin = "10" end = "30"/>
      <explain kind = "Assert"/>
    </goal>
    </behavior>
  </function>
  <function name="Function snoob">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/hd_snoob_po366.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "56" begin = "18" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po367.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "56" begin = "18" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po368.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "56" begin = "14" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po369.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "56" begin = "14" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po370.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "57" begin = "12" end = "24"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po371.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "57" begin = "12" end = "24"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po372.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "58" begin = "10" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po373.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "58" begin = "10" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po374.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "59" begin = "11" end = "20"/>
      <explain kind = "Pre"
text = "DivByZero"/>
    </goal>
    <goal why_file="why/hd_snoob_po375.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "59" begin = "11" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po376.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "59" begin = "11" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po377.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "59" begin = "10" end = "30"/>
      <explain kind = "Pre"
text = "DivByZero"/>
    </goal>
    <goal why_file="why/hd_snoob_po378.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "59" begin = "10" end = "30"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po379.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "59" begin = "10" end = "30"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po380.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "60" begin = "10" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po381.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "60" begin = "10" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po382.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "53" begin = "9" end = "14"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po383.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "53" begin = "9" end = "14"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po384.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "53" begin = "9" end = "14"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po385.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "53" begin = "9" end = "14"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po386.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "53" begin = "9" end = "14"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po387.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "53" begin = "9" end = "14"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po388.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "53" begin = "9" end = "14"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Function pop">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/hd_snoob_po205.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "38" begin = "13" end = "19"/>
      <explain kind = "Pre"
text = "DivByZero"/>
    </goal>
    <goal why_file="why/hd_snoob_po206.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "38" begin = "13" end = "19"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po207.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "38" begin = "13" end = "19"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po208.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "38" begin = "12" end = "33"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po209.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "38" begin = "12" end = "33"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po210.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "38" begin = "7" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po211.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "38" begin = "7" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po212.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "39" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po213.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "39" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po214.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "39" begin = "28" end = "34"/>
      <explain kind = "Pre"
text = "DivByZero"/>
    </goal>
    <goal why_file="why/hd_snoob_po215.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "39" begin = "28" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po216.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "39" begin = "28" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po217.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "39" begin = "27" end = "48"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po218.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "39" begin = "27" end = "48"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po219.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "39" begin = "7" end = "49"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po220.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "39" begin = "7" end = "49"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po221.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "40" begin = "13" end = "19"/>
      <explain kind = "Pre"
text = "DivByZero"/>
    </goal>
    <goal why_file="why/hd_snoob_po222.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "40" begin = "13" end = "19"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po223.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "40" begin = "13" end = "19"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po224.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "40" begin = "8" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po225.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "40" begin = "8" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po226.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "40" begin = "7" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po227.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "40" begin = "7" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po228.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "41" begin = "12" end = "18"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po229.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "41" begin = "12" end = "18"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po230.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "41" begin = "7" end = "19"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po231.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "41" begin = "7" end = "19"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po232.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "42" begin = "12" end = "19"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po233.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "42" begin = "12" end = "19"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po234.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "42" begin = "7" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po235.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "42" begin = "7" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po236.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "43" begin = "10" end = "17"/>
      <explain kind = "Pre"
text = "DivByZero"/>
    </goal>
    <goal why_file="why/hd_snoob_po237.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "43" begin = "10" end = "17"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po238.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "43" begin = "10" end = "17"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po239.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "37" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po240.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "37" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po241.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "37" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po242.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "37" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po243.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "37" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po244.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "37" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po245.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "37" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Function ntz">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/hd_snoob_po164.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "17" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po165.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "17" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po166.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "17" begin = "35" end = "40"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po167.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "17" begin = "35" end = "40"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po168.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "17" begin = "46" end = "52"/>
      <explain kind = "Pre"
text = "DivByZero"/>
    </goal>
    <goal why_file="why/hd_snoob_po169.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "17" begin = "46" end = "52"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po170.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "17" begin = "46" end = "52"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po171.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "18" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po172.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "18" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po173.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "18" begin = "35" end = "40"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po174.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "18" begin = "35" end = "40"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po175.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "18" begin = "46" end = "52"/>
      <explain kind = "Pre"
text = "DivByZero"/>
    </goal>
    <goal why_file="why/hd_snoob_po176.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "18" begin = "46" end = "52"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po177.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "18" begin = "46" end = "52"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po178.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "19" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po179.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "19" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po180.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "19" begin = "35" end = "40"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po181.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "19" begin = "35" end = "40"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po182.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "19" begin = "46" end = "52"/>
      <explain kind = "Pre"
text = "DivByZero"/>
    </goal>
    <goal why_file="why/hd_snoob_po183.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "19" begin = "46" end = "52"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po184.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "19" begin = "46" end = "52"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po185.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "20" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po186.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "20" begin = "8" end = "22"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po187.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "20" begin = "35" end = "40"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po188.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "20" begin = "35" end = "40"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po189.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "20" begin = "46" end = "52"/>
      <explain kind = "Pre"
text = "DivByZero"/>
    </goal>
    <goal why_file="why/hd_snoob_po190.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "20" begin = "46" end = "52"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po191.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "20" begin = "46" end = "52"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po192.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "21" begin = "10" end = "11"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po193.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "21" begin = "10" end = "11"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po194.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "21" begin = "15" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po195.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "21" begin = "15" end = "20"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po196.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "21" begin = "10" end = "21"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po197.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "21" begin = "10" end = "21"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po198.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "12" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po199.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "12" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po200.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "12" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po201.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "12" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po202.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "12" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po203.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "12" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po204.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "12" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Function nlz">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/hd_snoob_po139.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "29" begin = "29" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po140.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "29" begin = "29" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po141.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "29" begin = "40" end = "46"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po142.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "29" begin = "40" end = "46"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po143.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "30" begin = "29" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po144.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "30" begin = "29" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po145.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "30" begin = "40" end = "46"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po146.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "30" begin = "40" end = "46"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po147.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "31" begin = "29" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po148.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "31" begin = "29" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po149.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "31" begin = "40" end = "46"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po150.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "31" begin = "40" end = "46"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po151.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "32" begin = "29" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po152.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "32" begin = "29" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po153.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "32" begin = "40" end = "46"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po154.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "32" begin = "40" end = "46"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po155.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "33" begin = "29" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po156.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "33" begin = "29" end = "34"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po157.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "24" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po158.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "24" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po159.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "24" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po160.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "24" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po161.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "24" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po162.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "24" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po163.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "24" begin = "4" end = "7"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Function next_set_of_n_elements">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/hd_snoob_po112.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "108" begin = "19" end = "21"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po113.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "108" begin = "19" end = "21"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po114.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "108" begin = "15" end = "21"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po115.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "108" begin = "15" end = "21"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po116.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "109" begin = "12" end = "24"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po117.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "109" begin = "12" end = "24"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po118.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "110" begin = "28" end = "35"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po119.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "110" begin = "28" end = "35"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po120.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "110" begin = "19" end = "35"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po121.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "110" begin = "19" end = "35"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po122.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "111" begin = "12" end = "33"/>
      <explain kind = "Pre"
text = "DivByZero"/>
    </goal>
    <goal why_file="why/hd_snoob_po123.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "111" begin = "12" end = "33"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po124.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "111" begin = "12" end = "33"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po125.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "111" begin = "11" end = "39"/>
      <explain kind = "Pre"
text = "DivByZero"/>
    </goal>
    <goal why_file="why/hd_snoob_po126.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "111" begin = "11" end = "39"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po127.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "111" begin = "11" end = "39"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po128.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "111" begin = "10" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po129.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "111" begin = "10" end = "44"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po130.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "112" begin = "10" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po131.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "112" begin = "10" end = "23"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po132.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "104" begin = "9" end = "31"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po133.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "104" begin = "9" end = "31"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po134.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "104" begin = "9" end = "31"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po135.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "104" begin = "9" end = "31"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po136.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "104" begin = "9" end = "31"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po137.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "104" begin = "9" end = "31"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po138.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "104" begin = "9" end = "31"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Function main">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/hd_snoob_po4.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "789" begin = "18" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po5.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "789" begin = "18" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po6.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "789" begin = "18" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po7.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "789" begin = "18" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po8.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "789" begin = "18" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po9.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "789" begin = "18" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po10.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "789" begin = "18" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po11.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "790" begin = "18" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po12.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "790" begin = "18" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po13.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "790" begin = "18" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po14.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "790" begin = "18" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po15.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "790" begin = "18" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po16.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "790" begin = "18" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po17.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "790" begin = "18" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po18.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "148" begin = "7" end = "38"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po19.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "148" begin = "7" end = "38"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po20.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "148" begin = "7" end = "38"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po21.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "148" begin = "7" end = "38"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po22.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "148" begin = "7" end = "38"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po23.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "148" begin = "7" end = "38"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po24.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "148" begin = "7" end = "38"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po25.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "799" begin = "18" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po26.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "799" begin = "18" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po27.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "799" begin = "18" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po28.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "799" begin = "18" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po29.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "799" begin = "18" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po30.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "799" begin = "18" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po31.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "799" begin = "18" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po32.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "800" begin = "18" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po33.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "800" begin = "18" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po34.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "800" begin = "18" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po35.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "800" begin = "18" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po36.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "800" begin = "18" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po37.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "800" begin = "18" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po38.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "800" begin = "18" end = "25"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po39.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "803" begin = "15" end = "23"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po40.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "803" begin = "15" end = "23"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po41.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "803" begin = "15" end = "23"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po42.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "803" begin = "15" end = "23"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po43.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "803" begin = "15" end = "23"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po44.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "803" begin = "15" end = "23"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po45.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "803" begin = "15" end = "23"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po46.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "156" begin = "8" end = "14"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po47.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "156" begin = "8" end = "14"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po48.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "156" begin = "7" end = "19"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po49.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "156" begin = "7" end = "19"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po50.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "825" begin = "27" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po51.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "825" begin = "27" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po52.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "825" begin = "27" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po53.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "825" begin = "27" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po54.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "825" begin = "27" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po55.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "825" begin = "27" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po56.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.jessie/hd_snoob.jc" line = "825" begin = "27" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po57.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "164" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po58.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "164" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po59.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "164" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po60.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "164" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po61.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "164" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po62.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "164" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po63.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "164" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po64.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "165" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po65.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "165" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po66.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "165" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po67.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "165" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po68.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "165" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po69.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "165" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po70.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "165" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po71.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "166" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po72.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "166" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po73.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "166" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po74.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "166" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po75.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "166" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po76.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "166" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po77.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "166" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po78.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "167" begin = "10" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po79.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "167" begin = "10" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po80.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "167" begin = "10" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po81.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "167" begin = "10" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po82.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "167" begin = "10" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po83.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "167" begin = "10" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po84.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "167" begin = "10" end = "35"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po85.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "168" begin = "17" end = "18"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po86.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "168" begin = "17" end = "18"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po87.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "168" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po88.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "168" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po89.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "168" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po90.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "168" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po91.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "168" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po92.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "168" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po93.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "168" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po94.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "168" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po95.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "168" begin = "10" end = "19"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/hd_snoob_po96.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "169" begin = "10" end = "18"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po97.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "169" begin = "10" end = "18"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po98.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "169" begin = "10" end = "18"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po99.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "169" begin = "10" end = "18"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po100.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "169" begin = "10" end = "18"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po101.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "169" begin = "10" end = "18"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po102.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "169" begin = "10" end = "18"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/hd_snoob_po103.why">
      <location file = "why/hd_snoob.why" line = "2886" begin = "46" end = "47"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/hd_snoob_po104.why">
      <location file = "why/hd_snoob.why" line = "2886" begin = "46" end = "47"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/hd_snoob_po105.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "139" begin = "4" end = "8"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po106.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "139" begin = "4" end = "8"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po107.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "139" begin = "4" end = "8"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po108.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "139" begin = "4" end = "8"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po109.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "139" begin = "4" end = "8"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po110.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "139" begin = "4" end = "8"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/hd_snoob_po111.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "139" begin = "4" end = "8"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
    <behavior name="Default behavior">
    <goal why_file="why/hd_snoob_po1.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "156" begin = "8" end = "14"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/hd_snoob_po2.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "156" begin = "8" end = "14"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/hd_snoob_po3.why">
      <location file = "PPCHOME/tests/jessie/hd_snoob.c" line = "156" begin = "8" end = "14"/>
      <explain kind = "Assert"/>
    </goal>
    </behavior>
  </function>
</project>
logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic div_int : int, int -> int

logic mod_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

logic bool_and : bool, bool -> bool

logic bool_or : bool, bool -> bool

logic bool_xor : bool, bool -> bool

logic bool_not : bool -> bool

axiom bool_and_def:
  (forall a:bool.
    (forall b:bool.
      ((bool_and(a, b) = true) <-> ((a = true) and (b = true)))))

axiom bool_or_def:
  (forall a:bool.
    (forall b:bool. ((bool_or(a, b) = true) <-> ((a = true) or (b = true)))))

axiom bool_xor_def:
  (forall a:bool. (forall b:bool. ((bool_xor(a, b) = true) <-> (a <> b))))

axiom bool_not_def: (forall a:bool. ((bool_not(a) = true) <-> (a = false)))

logic ite : bool, 'a1, 'a1 -> 'a1

axiom ite_true: (forall x:'a1. (forall y:'a1. (ite(true, x, y) = x)))

axiom ite_false: (forall x:'a1. (forall y:'a1. (ite(false, x, y) = y)))

logic lt_int_bool : int, int -> bool

logic le_int_bool : int, int -> bool

logic gt_int_bool : int, int -> bool

logic ge_int_bool : int, int -> bool

logic eq_int_bool : int, int -> bool

logic neq_int_bool : int, int -> bool

axiom lt_int_bool_axiom:
  (forall x:int. (forall y:int. ((lt_int_bool(x, y) = true) <-> (x < y))))

axiom le_int_bool_axiom:
  (forall x:int. (forall y:int. ((le_int_bool(x, y) = true) <-> (x <= y))))

axiom gt_int_bool_axiom:
  (forall x:int. (forall y:int. ((gt_int_bool(x, y) = true) <-> (x > y))))

axiom ge_int_bool_axiom:
  (forall x:int. (forall y:int. ((ge_int_bool(x, y) = true) <-> (x >= y))))

axiom eq_int_bool_axiom:
  (forall x:int. (forall y:int. ((eq_int_bool(x, y) = true) <-> (x = y))))

axiom neq_int_bool_axiom:
  (forall x:int. (forall y:int. ((neq_int_bool(x, y) = true) <-> (x <> y))))

logic abs_int : int -> int

axiom abs_int_pos: (forall x:int. ((x >= 0) -> (abs_int(x) = x)))

axiom abs_int_neg: (forall x:int. ((x <= 0) -> (abs_int(x) = (-x))))

logic int_max : int, int -> int

logic int_min : int, int -> int

axiom int_max_is_ge:
  (forall x:int.
    (forall y:int. ((int_max(x, y) >= x) and (int_max(x, y) >= y))))

axiom int_max_is_some:
  (forall x:int.
    (forall y:int. ((int_max(x, y) = x) or (int_max(x, y) = y))))

axiom int_min_is_le:
  (forall x:int.
    (forall y:int. ((int_min(x, y) <= x) and (int_min(x, y) <= y))))

axiom int_min_is_some:
  (forall x:int.
    (forall y:int. ((int_min(x, y) = x) or (int_min(x, y) = y))))

logic lt_real : real, real -> prop

logic le_real : real, real -> prop

logic gt_real : real, real -> prop

logic ge_real : real, real -> prop

logic eq_real : real, real -> prop

logic neq_real : real, real -> prop

logic add_real : real, real -> real

logic sub_real : real, real -> real

logic mul_real : real, real -> real

logic div_real : real, real -> real

logic neg_real : real -> real

logic real_of_int : int -> real

axiom real_of_int_zero: (real_of_int(0) = 0.0)

axiom real_of_int_one: (real_of_int(1) = 1.0)

axiom real_of_int_add:
  (forall x:int.
    (forall y:int.
      (real_of_int((x + y)) = (real_of_int(x) + real_of_int(y)))))

axiom real_of_int_sub:
  (forall x:int.
    (forall y:int.
      (real_of_int((x - y)) = (real_of_int(x) - real_of_int(y)))))

logic truncate_real_to_int : real -> int

axiom truncate_down_pos:
  (forall x:real.
    ((x >= 0.0) ->
     ((real_of_int(truncate_real_to_int(x)) <= x) and
      (x < real_of_int((truncate_real_to_int(x) + 1))))))

axiom truncate_up_neg:
  (forall x:real.
    ((x <= 0.0) ->
     ((real_of_int((truncate_real_to_int(x) - 1)) < x) and
      (x <= real_of_int(truncate_real_to_int(x))))))

logic floor_real_to_int : real -> int

logic ceil_real_to_int : real -> int

logic lt_real_bool : real, real -> bool

logic le_real_bool : real, real -> bool

logic gt_real_bool : real, real -> bool

logic ge_real_bool : real, real -> bool

logic eq_real_bool : real, real -> bool

logic neq_real_bool : real, real -> bool

axiom lt_real_bool_axiom:
  (forall x:real. (forall y:real. ((lt_real_bool(x, y) = true) <-> (x < y))))

axiom le_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((le_real_bool(x, y) = true) <-> (x <= y))))

axiom gt_real_bool_axiom:
  (forall x:real. (forall y:real. ((gt_real_bool(x, y) = true) <-> (x > y))))

axiom ge_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((ge_real_bool(x, y) = true) <-> (x >= y))))

axiom eq_real_bool_axiom:
  (forall x:real. (forall y:real. ((eq_real_bool(x, y) = true) <-> (x = y))))

axiom neq_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((neq_real_bool(x, y) = true) <-> (x <> y))))

logic real_max : real, real -> real

logic real_min : real, real -> real

axiom real_max_is_ge:
  (forall x:real.
    (forall y:real. ((real_max(x, y) >= x) and (real_max(x, y) >= y))))

axiom real_max_is_some:
  (forall x:real.
    (forall y:real. ((real_max(x, y) = x) or (real_max(x, y) = y))))

axiom real_min_is_le:
  (forall x:real.
    (forall y:real. ((real_min(x, y) <= x) and (real_min(x, y) <= y))))

axiom real_min_is_some:
  (forall x:real.
    (forall y:real. ((real_min(x, y) = x) or (real_min(x, y) = y))))

function sqr_real(x: real) : real = (x * x)

logic sqrt_real : real -> real

axiom sqrt_pos: (forall x:real. ((x >= 0.0) -> (sqrt_real(x) >= 0.0)))

axiom sqrt_sqr: (forall x:real. ((x >= 0.0) -> (sqr_real(sqrt_real(x)) = x)))

axiom sqr_sqrt: (forall x:real. ((x >= 0.0) -> (sqrt_real((x * x)) = x)))

logic pow_real : real, real -> real

logic abs_real : real -> real

axiom abs_real_pos:
  (forall x:real [abs_real(x)]. ((x >= 0.0) -> (abs_real(x) = x)))

axiom abs_real_neg:
  (forall x:real [abs_real(x)]. ((x <= 0.0) -> (abs_real(x) = (-x))))

logic exp : real -> real

logic log : real -> real

logic log10 : real -> real

axiom log_exp: (forall x:real. (log(exp(x)) = x))

axiom exp_log: (forall x:real. ((x > 0.0) -> (exp(log(x)) = x)))

logic cos : real -> real

logic sin : real -> real

logic tan : real -> real

logic pi : real

logic cosh : real -> real

logic sinh : real -> real

logic tanh : real -> real

logic acos : real -> real

logic asin : real -> real

logic atan : real -> real

logic atan2 : real, real -> real

logic hypot : real, real -> real

axiom prod_pos:
  (forall x:real.
    (forall y:real.
      ((((x > 0.0) and (y > 0.0)) -> ((x * y) > 0.0)) and
       (((x < 0.0) and (y < 0.0)) -> ((x * y) > 0.0)))))

axiom abs_minus: (forall x:real. (abs_real((-x)) = abs_real(x)))

type 't alloc_table

type 't pointer

type 't block

logic base_block : 'a1 pointer -> 'a1 block

logic offset_max : 'a1 alloc_table, 'a1 pointer -> int

logic offset_min : 'a1 alloc_table, 'a1 pointer -> int

predicate valid(a: 'a1 alloc_table, p: 'a1 pointer) =
  ((offset_min(a, p) <= 0) and (offset_max(a, p) >= 0))

predicate same_block(p: 'a1 pointer, q: 'a1 pointer) =
  (base_block(p) = base_block(q))

logic sub_pointer : 'a1 pointer, 'a1 pointer -> int

logic shift : 'a1 pointer, int -> 'a1 pointer

logic null : 'a1 pointer

logic pointer_address : 'a1 pointer -> unit pointer

logic absolute_address : int -> unit pointer

logic address : 'a1 pointer -> int

axiom address_injective:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. ((p = q) <-> (address(p) = address(q)))))

axiom address_null: (address(null) = 0)

axiom address_shift_lt:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) < address(shift(p, j))) <-> (i < j)))))

axiom address_shift_le:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) <= address(shift(p, j))) <-> (i <= j)))))

axiom shift_zero: (forall p:'a1 pointer [shift(p, 0)]. (shift(p, 0) = p))

axiom shift_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(shift(p, i), j)]. (shift(shift(p, i),
        j) = shift(p, (i + j))))))

axiom offset_max_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_max(a, shift(p, i)) = (offset_max(a, p) - i)))))

axiom offset_min_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_min(a, shift(p, i)) = (offset_min(a, p) - i)))))

axiom neq_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(p, i), shift(p, j)].
        ((i <> j) -> (shift(p, i) <> shift(p, j))))))

axiom null_not_valid: (forall a:'a1 alloc_table. (not valid(a, null)))

axiom null_pointer:
  (forall a:'a1 alloc_table.
    ((offset_min(a, null) >= 0) and (offset_max(a, null) <= (-2))))

logic eq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

logic neq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

axiom eq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer. ((eq_pointer_bool(p1, p2) = true) <-> (p1 = p2))))

axiom neq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer.
      ((neq_pointer_bool(p1, p2) = true) <-> (p1 <> p2))))

axiom same_block_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(p, shift(q, i))].
        (same_block(p, q) -> same_block(p, shift(q, i))))))

axiom same_block_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(shift(q, i), p)].
        (same_block(q, p) -> same_block(shift(q, i), p)))))

axiom sub_pointer_shift:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> (p = shift(q, sub_pointer(p, q))))))

axiom sub_pointer_self:
  (forall p:'a1 pointer [sub_pointer(p, p)]. (sub_pointer(p, p) = 0))

axiom sub_pointer_zero:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> ((sub_pointer(p, q) = 0) -> (p = q)))))

axiom sub_pointer_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(shift(p, i), q)]. (sub_pointer(shift(p, i),
        q) = (sub_pointer(p, q) + i)))))

axiom sub_pointer_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(p, shift(q, i))]. (sub_pointer(p, shift(q,
        i)) = (sub_pointer(p, q) - i)))))

type ('t, 'v) memory

logic select : ('a2, 'a1) memory, 'a2 pointer -> 'a1

logic store : ('a1, 'a2) memory, 'a1 pointer, 'a2 -> ('a1, 'a2) memory

axiom select_store_eq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 = p2) -> (select(store(m, p1, a), p2) = a))))))

axiom select_store_neq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 <> p2) -> (select(store(m, p1, a), p2) = select(m, p2)))))))

type 't pset

logic pset_empty : 'a1 pset

logic pset_singleton : 'a1 pointer -> 'a1 pset

logic pset_deref : ('a2, 'a1 pointer) memory, 'a2 pset -> 'a1 pset

logic pset_union : 'a1 pset, 'a1 pset -> 'a1 pset

logic pset_all : 'a1 pset -> 'a1 pset

logic pset_range : 'a1 pset, int, int -> 'a1 pset

logic pset_range_left : 'a1 pset, int -> 'a1 pset

logic pset_range_right : 'a1 pset, int -> 'a1 pset

logic in_pset : 'a1 pointer, 'a1 pset -> prop

logic valid_pset : 'a1 alloc_table, 'a1 pset -> prop

predicate pset_disjoint(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (not (in_pset(p, ps1) and in_pset(p, ps2))))

predicate pset_included(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (in_pset(p, ps1) -> in_pset(p, ps2)))

axiom pset_included_self: (forall ps:'a1 pset. pset_included(ps, ps))

axiom pset_included_range:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))].
            (((c <= a) and (b <= d)) -> pset_included(pset_range(ps, a, b),
             pset_range(ps, c, d))))))))

axiom pset_included_range_all:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))]. pset_included(pset_range(ps, a, b), pset_all(ps)))))))

axiom in_pset_empty: (forall p:'a1 pointer. (not in_pset(p, pset_empty)))

axiom in_pset_singleton:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. (in_pset(p, pset_singleton(q)) <-> (p = q))))

axiom in_pset_deref:
  (forall p:'a1 pointer.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (in_pset(p, pset_deref(m, q)) <->
         (exists r:'a2 pointer. (in_pset(r, q) and (p = select(m, r))))))))

axiom in_pset_all:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (in_pset(p, pset_all(q)) <->
       (exists i:int.
         (exists r:'a1 pointer. (in_pset(r, q) and (p = shift(r, i))))))))

axiom in_pset_range:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (forall b:int.
          (in_pset(p, pset_range(q, a, b)) <->
           (exists i:int.
             (exists r:'a1 pointer.
               ((a <= i) and
                ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))))

axiom in_pset_range_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall b:int.
        (in_pset(p, pset_range_left(q, b)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_range_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (in_pset(p, pset_range_right(q, a)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((a <= i) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_union:
  (forall p:'a1 pointer.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (in_pset(p, pset_union(s1, s2)) <->
         (in_pset(p, s1) or in_pset(p, s2))))))

axiom valid_pset_empty: (forall a:'a1 alloc_table. valid_pset(a, pset_empty))

axiom valid_pset_singleton:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (valid_pset(a, pset_singleton(p)) <-> valid(a, p))))

axiom valid_pset_deref:
  (forall a:'a1 alloc_table.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (valid_pset(a, pset_deref(m, q)) <->
         (forall r:'a2 pointer.
           (forall p:'a1 pointer.
             ((in_pset(r, q) and (p = select(m, r))) -> valid(a, p))))))))

axiom valid_pset_range:
  (forall a:'a1 alloc_table.
    (forall q:'a1 pset.
      (forall c:int.
        (forall d:int.
          (valid_pset(a, pset_range(q, c, d)) <->
           (forall i:int.
             (forall r:'a1 pointer.
               ((in_pset(r, q) and ((c <= i) and (i <= d))) -> valid(a,
                shift(r, i))))))))))

axiom valid_pset_union:
  (forall a:'a1 alloc_table.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (valid_pset(a, pset_union(s1, s2)) <->
         (valid_pset(a, s1) and valid_pset(a, s2))))))

predicate not_assigns(a: 'a1 alloc_table, m1: ('a1, 'a2) memory, m2: ('a1,
  'a2) memory, l: 'a1 pset) =
  (forall p:'a1 pointer.
    ((valid(a, p) and (not in_pset(p, l))) -> (select(m2, p) = select(m1, p))))

axiom not_assigns_refl:
  (forall a:'a1 alloc_table.
    (forall m:('a1, 'a2) memory.
      (forall l:'a1 pset. not_assigns(a, m, m, l))))

axiom not_assigns_trans:
  (forall a:'a1 alloc_table.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory.
          (forall l:'a1 pset [not_assigns(a, m1, m2, l), not_assigns(a, m1,
            m3, l)].
            (not_assigns(a, m1, m2, l) ->
             (not_assigns(a, m2, m3, l) -> not_assigns(a, m1, m3, l))))))))

logic full_separated : 'a1 pointer, 'a2 pointer -> prop

axiom full_separated_shift1:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(p, shift(q, i))))))

axiom full_separated_shift2:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift3:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift4:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(p, shift(q, i))))))

type 't tag_table

type 't tag_id

logic int_of_tag : 'a1 tag_id -> int

logic typeof : 'a1 tag_table, 'a1 pointer -> 'a1 tag_id

logic parenttag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag_bool : 'a1 tag_id, 'a1 tag_id -> bool

axiom subtag_bool_def:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id. ((subtag_bool(t1, t2) = true) <-> subtag(t1, t2))))

axiom subtag_refl: (forall t:'a1 tag_id. subtag(t, t))

axiom subtag_parent:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id.
      (forall t3:'a1 tag_id.
        (subtag(t1, t2) -> (parenttag(t2, t3) -> subtag(t1, t3))))))

predicate instanceof(a: 'a1 tag_table, p: 'a1 pointer, t: 'a1 tag_id) =
  subtag(typeof(a, p), t)

logic downcast : 'a1 tag_table, 'a1 pointer, 'a1 tag_id -> 'a1 pointer

axiom downcast_instanceof:
  (forall a:'a1 tag_table.
    (forall p:'a1 pointer.
      (forall s:'a1 tag_id. (instanceof(a, p, s) -> (downcast(a, p, s) = p)))))

logic bottom_tag : 'a1 tag_id

axiom bottom_tag_axiom: (forall t:'a1 tag_id. subtag(t, bottom_tag))

predicate root_tag(t: 'a1 tag_id) = parenttag(t, bottom_tag)

axiom root_subtag:
  (forall a:'a1 tag_id.
    (forall b:'a1 tag_id.
      (forall c:'a1 tag_id.
        (root_tag(a) ->
         (root_tag(b) -> ((a <> b) -> (subtag(c, a) -> (not subtag(c, b)))))))))

predicate fully_packed(tag_table: 'a1 tag_table, mutable: ('a1,
  'a1 tag_id) memory, this: 'a1 pointer) = (select(mutable,
  this) = typeof(tag_table, this))

logic bw_compl : int -> int

logic bw_and : int, int -> int

axiom bw_and_not_null:
  (forall a:int.
    (forall b:int. ((bw_and(a, b) <> 0) -> ((a <> 0) and (b <> 0)))))

logic bw_xor : int, int -> int

logic bw_or : int, int -> int

logic lsl : int, int -> int

axiom lsl_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsl(a, b)))))

axiom lsl_left_positive_monotone:
  (forall a1:int.
    (forall a2:int.
      (forall b:int.
        (((0 <= a1) and ((a1 <= a2) and (0 <= b))) -> (lsl(a1, b) <= lsl(a2,
         b))))))

logic lsr : int, int -> int

axiom lsr_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsr(a, b)))))

axiom lsr_left_positive_decreases:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(a, b) <= a))))

logic asr : int, int -> int

axiom asr_positive_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= asr(a, b)))))

axiom asr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) <= a))))

axiom asr_lsr_same_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) = lsr(a, b)))))

axiom lsl_of_lsr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsl(lsr(a, b), b) <= a))))

axiom lsr_of_lsl_identity_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(lsl(a, b), b) = a))))

logic alloc_extends : 'a1 alloc_table, 'a1 alloc_table -> prop

predicate alloc_fresh(a: 'a1 alloc_table, p: 'a1 pointer, n: int) =
  (forall i:int. (((0 <= i) and (i < n)) -> (not valid(a, shift(p, i)))))

axiom alloc_extends_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_min(a1, p) = offset_min(a2, p)))))))

axiom alloc_extends_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_max(a1, p) = offset_max(a2, p)))))))

axiom alloc_extends_not_assigns_empty:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory.
          (forall l:'a1 pset.
            (forall p:'a1 pointer.
              (forall n:int [alloc_extends(a1, a2), alloc_fresh(a1, p, n),
                not_assigns(a2, m1, m2, l)].
                ((alloc_extends(a1, a2) and
                  (alloc_fresh(a1, p, n) and
                   (not_assigns(a2, m1, m2, l) and pset_included(l,
                    pset_all(pset_singleton(p)))))) ->
                 not_assigns(a1, m1, m2, pset_empty)))))))))

logic alloc_extends_except : 'a1 alloc_table, 'a1 alloc_table,
'a1 pset -> prop

axiom alloc_extends_except_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_min(a1,
            p) = offset_min(a2, p))))))))

axiom alloc_extends_except_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_max(a1,
            p) = offset_max(a2, p))))))))

type 'a mybag

logic in_mybag : 'a1, 'a1 mybag -> prop

logic disj_mybag : 'a1 mybag, 'a1 mybag -> prop

axiom disj_sym:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag [disj_mybag(s1, s2)].
      (disj_mybag(s1, s2) -> disj_mybag(s2, s1))))

logic sub_mybag : 'a1 mybag, 'a1 mybag -> prop

axiom sub_refl:
  (forall sa:'a1 pointer mybag [sub_mybag(sa, sa)]. sub_mybag(sa, sa))

axiom sub_disj:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall s3:'a1 mybag [disj_mybag(s1, s2), sub_mybag(s2, s3)|
        disj_mybag(s1, s3), sub_mybag(s2, s3)].
        (disj_mybag(s1, s2) -> (sub_mybag(s2, s3) -> disj_mybag(s1, s3))))))

axiom sub_in:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall p:'a1 [in_mybag(p, s1), sub_mybag(s1, s2)| in_mybag(p, s2),
        sub_mybag(s1, s2)].
        ((not in_mybag(p, s2)) ->
         (sub_mybag(s1, s2) -> (not in_mybag(p, s1)))))))

logic frame_between : 'a1 pointer mybag, ('a1, 'a2) memory, ('a1,
'a2) memory -> prop

axiom frame_between_refl:
  (forall sa:'a1 pointer mybag.
    (forall m:('a1, 'a2) memory [frame_between(sa, m, m)]. frame_between(sa,
      m, m)))

axiom frame_between_gen:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall p:'a1 pointer.
          (forall v:'a2 [frame_between(sa, m1, store(m2, p, v))].
            (frame_between(sa, m1, m2) ->
             (in_mybag(p, sa) -> frame_between(sa, store(m1, p, v), m2))))))))

axiom frame_between_gen2:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory [frame_between(sa, m1, m2),
          frame_between(sa, m1, m3)| frame_between(sa, m2, m3),
          frame_between(sa, m1, m3)].
          (frame_between(sa, m1, m2) ->
           (frame_between(sa, m2, m3) -> frame_between(sa, m1, m3)))))))

axiom frame_between_gen_sub1:
  (forall s12:'a1 pointer mybag.
    (forall s23:'a1 pointer mybag.
      (forall s13:'a1 pointer mybag.
        (forall m1:('a1, 'a2) memory.
          (forall m2:('a1, 'a2) memory.
            (forall m3:('a1, 'a2) memory [frame_between(s12, m1, m2),
              frame_between(s13, m1, m3)].
              (sub_mybag(s12, s13) ->
               (frame_between(s12, m1, m2) ->
                (frame_between(s23, m2, m3) -> frame_between(s13, m1, m3))))))))))

axiom frame_between_gen_sub2:
  (forall s12:'a1 pointer mybag.
    (forall s23:'a1 pointer mybag.
      (forall s13:'a1 pointer mybag.
        (forall m1:('a1, 'a2) memory.
          (forall m2:('a1, 'a2) memory.
            (forall m3:('a1, 'a2) memory [frame_between(s23, m2, m3),
              frame_between(s13, m1, m3)].
              (frame_between(s12, m1, m2) ->
               (sub_mybag(s23, s13) ->
                (frame_between(s23, m2, m3) -> frame_between(s13, m1, m3))))))))))

axiom frame_between_pointer:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall p:'a1 pointer.
          (forall v:'a2 [frame_between(sa, m1, m2), select(m1, p)|
            frame_between(sa, m1, m2), select(m2, p)].
            (frame_between(sa, m1, m2) ->
             ((not in_mybag(p, sa)) -> (select(m1, p) = select(m2, p)))))))))

axiom frame_between_sub:
  (forall sa:'a1 pointer mybag.
    (forall sb:'a1 pointer mybag.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory [frame_between(sa, m1, m2),
          sub_mybag(sa, sb)].
          (frame_between(sa, m1, m2) ->
           (sub_mybag(sa, sb) -> frame_between(sb, m1, m2)))))))

type __string_Argument_must_be_an_integer_from_1_to_7___3

type __string_Need_exactly_one_argument__an_integer_from_1_to_7___4

type __string_n____d__2

type __string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1

type char_P

type char_xP

type int32

type int8

type padding

type uint16

type uint32

type unsigned_short_P

type void_P

logic __string_Argument_must_be_an_integer_from_1_to_7__ : char_P pointer

logic __string_Need_exactly_one_argument__an_integer_from_1_to_7__ : char_P pointer

logic __string_n____d_ : char_P pointer

logic __string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_ : char_P pointer

logic char_P_tag : char_P tag_id

axiom char_P_int: (int_of_tag(char_P_tag) = 1)

logic char_P_of_pointer_address : unit pointer -> char_P pointer

axiom char_P_of_pointer_address_of_pointer_addr:
  (forall p:char_P pointer.
    (p = char_P_of_pointer_address(pointer_address(p))))

axiom char_P_parenttag_bottom: parenttag(char_P_tag, bottom_tag)

axiom char_P_tags:
  (forall x:char_P pointer.
    (forall char_P_tag_table:char_P tag_table. instanceof(char_P_tag_table,
      x, char_P_tag)))

logic char_xP_tag : char_xP tag_id

axiom char_xP_int: (int_of_tag(char_xP_tag) = 1)

logic char_xP_of_pointer_address : unit pointer -> char_xP pointer

axiom char_xP_of_pointer_address_of_pointer_addr:
  (forall p:char_xP pointer.
    (p = char_xP_of_pointer_address(pointer_address(p))))

axiom char_xP_parenttag_bottom: parenttag(char_xP_tag, bottom_tag)

axiom char_xP_tags:
  (forall x:char_xP pointer.
    (forall char_xP_tag_table:char_xP tag_table.
      instanceof(char_xP_tag_table, x, char_xP_tag)))

logic integer_of_int32 : int32 -> int

predicate eq_int32(x: int32, y: int32) =
  (integer_of_int32(x) = integer_of_int32(y))

logic integer_of_int8 : int8 -> int

predicate eq_int8(x: int8, y: int8) =
  (integer_of_int8(x) = integer_of_int8(y))

logic integer_of_uint16 : uint16 -> int

predicate eq_uint16(x: uint16, y: uint16) =
  (integer_of_uint16(x) = integer_of_uint16(y))

logic integer_of_uint32 : uint32 -> int

predicate eq_uint32(x: uint32, y: uint32) =
  (integer_of_uint32(x) = integer_of_uint32(y))

logic int32_of_integer : int -> int32

axiom int32_coerce:
  (forall x:int.
    ((((-2147483648) <= x) and (x <= 2147483647)) ->
     (integer_of_int32(int32_of_integer(x)) = x)))

axiom int32_range:
  (forall x:int32.
    (((-2147483648) <= integer_of_int32(x)) and
     (integer_of_int32(x) <= 2147483647)))

logic int8_of_integer : int -> int8

axiom int8_coerce:
  (forall x:int.
    ((((-128) <= x) and (x <= 127)) ->
     (integer_of_int8(int8_of_integer(x)) = x)))

axiom int8_range:
  (forall x:int8.
    (((-128) <= integer_of_int8(x)) and (integer_of_int8(x) <= 127)))

predicate left_valid_struct_char_P(p: char_P pointer, a: int,
  char_P_alloc_table: char_P alloc_table) = (offset_min(char_P_alloc_table,
  p) <= a)

predicate left_valid_struct_char_xP(p: char_xP pointer, a: int,
  char_xP_alloc_table: char_xP alloc_table) =
  (offset_min(char_xP_alloc_table, p) <= a)

predicate left_valid_struct_unsigned_short_P(p: unsigned_short_P pointer,
  a: int, unsigned_short_P_alloc_table: unsigned_short_P alloc_table) =
  (offset_min(unsigned_short_P_alloc_table, p) <= a)

predicate left_valid_struct_void_P(p: void_P pointer, a: int,
  void_P_alloc_table: void_P alloc_table) = (offset_min(void_P_alloc_table,
  p) <= a)

function maximum(i_26: int, j_2: int) : int = ite(lt_int_bool(i_26, j_2),
  j_2, i_26)

logic memchr : char_P pointer, int, int, (char_P, int8) memory -> bool

axiom memchr_def:
  (forall char_P_char_M_s_7_at_L:(char_P, int8) memory.
    (forall s_0_0:char_P pointer.
      (forall c_0:int.
        (forall n_3:int.
          ((memchr(s_0_0, c_0, n_3, char_P_char_M_s_7_at_L) = true) <->
           (exists i_0:int32.
             ((0 <= integer_of_int32(i_0)) and
              ((integer_of_int32(i_0) < n_3) and
               (integer_of_int8(select(char_P_char_M_s_7_at_L, shift(s_0_0,
               integer_of_int32(i_0)))) = c_0)))))))))

logic memcmp : char_P pointer, char_P pointer, int, (char_P, int8) memory,
(char_P, int8) memory -> int

axiom memcmp_range:
  (forall char_P_char_M_s2_6_at_L:(char_P, int8) memory.
    (forall char_P_char_M_s1_5_at_L:(char_P, int8) memory.
      (forall s1_0_0:char_P pointer.
        (forall s2_0_0:char_P pointer.
          (forall n_0:int.
            ((((-2147483647) - 1) <= memcmp(s1_0_0, s2_0_0, n_0,
             char_P_char_M_s2_6_at_L, char_P_char_M_s1_5_at_L)) and
             (memcmp(s1_0_0, s2_0_0, n_0, char_P_char_M_s2_6_at_L,
             char_P_char_M_s1_5_at_L) <= 2147483647)))))))

logic strlen : char_P pointer, (char_P, int8) memory -> int

axiom memcmp_strlen_left:
  (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
    (forall s1_2:char_P pointer.
      (forall s2_2:char_P pointer.
        (forall n_6:int.
          (((memcmp(s1_2, s2_2, n_6, char_P_char_M_s_3_9_at_L,
            char_P_char_M_s_3_9_at_L) = 0) and (strlen(s1_2,
            char_P_char_M_s_3_9_at_L) < n_6)) ->
           (strlen(s1_2, char_P_char_M_s_3_9_at_L) = strlen(s2_2,
           char_P_char_M_s_3_9_at_L)))))))

axiom memcmp_strlen_right:
  (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
    (forall s1_3:char_P pointer.
      (forall s2_3:char_P pointer.
        (forall n_7:int.
          (((memcmp(s1_3, s2_3, n_7, char_P_char_M_s_3_9_at_L,
            char_P_char_M_s_3_9_at_L) = 0) and (strlen(s2_3,
            char_P_char_M_s_3_9_at_L) < n_7)) ->
           (strlen(s1_3, char_P_char_M_s_3_9_at_L) = strlen(s2_3,
           char_P_char_M_s_3_9_at_L)))))))

axiom memcmp_strlen_shift_left:
  (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
    (forall s1_4:char_P pointer.
      (forall s2_4:char_P pointer.
        (forall k_0:int.
          (forall n_8:int.
            (((memcmp(s1_4, shift(s2_4, k_0), n_8, char_P_char_M_s_3_9_at_L,
              char_P_char_M_s_3_9_at_L) = 0) and
              ((0 <= k_0) and (strlen(s1_4, char_P_char_M_s_3_9_at_L) < n_8))) ->
             ((0 <= strlen(s2_4, char_P_char_M_s_3_9_at_L)) and (strlen(s2_4,
              char_P_char_M_s_3_9_at_L) <= (k_0 + strlen(s1_4,
              char_P_char_M_s_3_9_at_L))))))))))

axiom memcmp_strlen_shift_right:
  (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
    (forall s1_5:char_P pointer.
      (forall s2_5:char_P pointer.
        (forall k_1:int.
          (forall n_9:int.
            (((memcmp(shift(s1_5, k_1), s2_5, n_9, char_P_char_M_s_3_9_at_L,
              char_P_char_M_s_3_9_at_L) = 0) and
              ((0 <= k_1) and (strlen(s2_5, char_P_char_M_s_3_9_at_L) < n_9))) ->
             ((0 <= strlen(s1_5, char_P_char_M_s_3_9_at_L)) and (strlen(s1_5,
              char_P_char_M_s_3_9_at_L) <= (k_1 + strlen(s2_5,
              char_P_char_M_s_3_9_at_L))))))))))

axiom memcmp_zero:
  (forall char_P_char_M_s2_6_at_L:(char_P, int8) memory.
    (forall char_P_char_M_s1_5_at_L:(char_P, int8) memory.
      (forall s1_1_0:char_P pointer.
        (forall s2_1_0:char_P pointer.
          (forall n_1:int.
            ((memcmp(s1_1_0, s2_1_0, n_1, char_P_char_M_s2_6_at_L,
             char_P_char_M_s1_5_at_L) = 0) <->
             (forall i:int.
               (((0 <= i) and (i < n_1)) ->
                (integer_of_int8(select(char_P_char_M_s1_5_at_L,
                shift(s1_1_0,
                i))) = integer_of_int8(select(char_P_char_M_s2_6_at_L,
                shift(s2_1_0, i))))))))))))

logic memset : char_P pointer, int, int, (char_P, int8) memory -> bool

axiom memset_def:
  (forall char_P_char_M_s_1_8_at_L:(char_P, int8) memory.
    (forall s_2:char_P pointer.
      (forall c_2:int.
        (forall n_5:int.
          ((memset(s_2, c_2, n_5, char_P_char_M_s_1_8_at_L) = true) <->
           (forall i_1:int.
             (((0 <= i_1) and (i_1 < n_5)) ->
              (integer_of_int8(select(char_P_char_M_s_1_8_at_L, shift(s_2,
              i_1))) = c_2))))))))

function minimum(i_25: int, j_1: int) : int = ite(lt_int_bool(i_25, j_1),
  i_25, j_1)

axiom no_assign_memchr_0:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int8) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s_7_at_L:(char_P, int8) memory.
          (forall n_2:int.
            (forall c:int.
              (forall s_0:char_P pointer.
                ((pset_disjoint(tmp, pset_range(pset_singleton(s_0), 0,
                  (n_2 - 1))) and not_assigns(tmpalloc,
                  char_P_char_M_s_7_at_L, tmpmem, tmp)) ->
                 (memchr(s_0, c, n_2, char_P_char_M_s_7_at_L) = memchr(s_0,
                 c, n_2, tmpmem))))))))))

axiom no_assign_memcmp_0:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int8) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s1_5_at_L:(char_P, int8) memory.
          (forall char_P_char_M_s2_6_at_L:(char_P, int8) memory.
            (forall n:int.
              (forall s2_1:char_P pointer.
                (forall s1_1:char_P pointer.
                  ((pset_disjoint(tmp, pset_range(pset_singleton(s2_1), 0,
                    (n - 1))) and not_assigns(tmpalloc,
                    char_P_char_M_s2_6_at_L, tmpmem, tmp)) ->
                   (memcmp(s1_1, s2_1, n, char_P_char_M_s2_6_at_L,
                   char_P_char_M_s1_5_at_L) = memcmp(s1_1, s2_1, n, tmpmem,
                   char_P_char_M_s1_5_at_L)))))))))))

axiom no_assign_memcmp_1:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int8) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s1_5_at_L:(char_P, int8) memory.
          (forall char_P_char_M_s2_6_at_L:(char_P, int8) memory.
            (forall n:int.
              (forall s2_1:char_P pointer.
                (forall s1_1:char_P pointer.
                  ((pset_disjoint(tmp, pset_range(pset_singleton(s1_1), 0,
                    (n - 1))) and not_assigns(tmpalloc,
                    char_P_char_M_s1_5_at_L, tmpmem, tmp)) ->
                   (memcmp(s1_1, s2_1, n, char_P_char_M_s2_6_at_L,
                   char_P_char_M_s1_5_at_L) = memcmp(s1_1, s2_1, n,
                   char_P_char_M_s2_6_at_L, tmpmem)))))))))))

axiom no_assign_memset_0:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int8) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s_1_8_at_L:(char_P, int8) memory.
          (forall n_4:int.
            (forall c_1:int.
              (forall s_1:char_P pointer.
                ((pset_disjoint(tmp, pset_range(pset_singleton(s_1), 0,
                  (n_4 - 1))) and not_assigns(tmpalloc,
                  char_P_char_M_s_1_8_at_L, tmpmem, tmp)) ->
                 (memset(s_1, c_1, n_4,
                 char_P_char_M_s_1_8_at_L) = memset(s_1, c_1, n_4, tmpmem))))))))))

logic strchr : char_P pointer, int, (char_P, int8) memory -> bool

axiom no_assign_strchr_0:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int8) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s_15_14_at_L:(char_P, int8) memory.
          (forall c_3:int.
            (forall s_15:char_P pointer.
              ((pset_disjoint(tmp, pset_range(pset_singleton(s_15), 0,
                strlen(s_15, char_P_char_M_s_15_14_at_L))) and
                not_assigns(tmpalloc, char_P_char_M_s_15_14_at_L, tmpmem,
                tmp)) ->
               (strchr(s_15, c_3, char_P_char_M_s_15_14_at_L) = strchr(s_15,
               c_3, tmpmem)))))))))

logic strcmp : char_P pointer, char_P pointer, (char_P, int8) memory,
(char_P, int8) memory -> int

axiom no_assign_strcmp_0:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int8) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s1_6_10_at_L:(char_P, int8) memory.
          (forall char_P_char_M_s2_6_11_at_L:(char_P, int8) memory.
            (forall s2_6:char_P pointer.
              (forall s1_6:char_P pointer.
                ((pset_disjoint(tmp, pset_range(pset_singleton(s2_6), 0,
                  strlen(s2_6, char_P_char_M_s2_6_11_at_L))) and
                  not_assigns(tmpalloc, char_P_char_M_s2_6_11_at_L, tmpmem,
                  tmp)) ->
                 (strcmp(s1_6, s2_6, char_P_char_M_s2_6_11_at_L,
                 char_P_char_M_s1_6_10_at_L) = strcmp(s1_6, s2_6, tmpmem,
                 char_P_char_M_s1_6_10_at_L))))))))))

axiom no_assign_strcmp_1:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int8) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s1_6_10_at_L:(char_P, int8) memory.
          (forall char_P_char_M_s2_6_11_at_L:(char_P, int8) memory.
            (forall s2_6:char_P pointer.
              (forall s1_6:char_P pointer.
                ((pset_disjoint(tmp, pset_range(pset_singleton(s1_6), 0,
                  strlen(s1_6, char_P_char_M_s1_6_10_at_L))) and
                  not_assigns(tmpalloc, char_P_char_M_s1_6_10_at_L, tmpmem,
                  tmp)) ->
                 (strcmp(s1_6, s2_6, char_P_char_M_s2_6_11_at_L,
                 char_P_char_M_s1_6_10_at_L) = strcmp(s1_6, s2_6,
                 char_P_char_M_s2_6_11_at_L, tmpmem))))))))))

axiom no_assign_strlen_0:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int8) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
          (forall s_3:char_P pointer.
            ((pset_disjoint(tmp, pset_range_right(pset_singleton(s_3),
              0)) and not_assigns(tmpalloc, char_P_char_M_s_3_9_at_L, tmpmem,
              tmp)) ->
             (strlen(s_3, char_P_char_M_s_3_9_at_L) = strlen(s_3, tmpmem))))))))

logic strncmp : char_P pointer, char_P pointer, int, (char_P, int8) memory,
(char_P, int8) memory -> int

axiom no_assign_strncmp_0:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int8) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s1_9_12_at_L:(char_P, int8) memory.
          (forall char_P_char_M_s2_9_13_at_L:(char_P, int8) memory.
            (forall n_10:int.
              (forall s2_9:char_P pointer.
                (forall s1_9:char_P pointer.
                  ((pset_disjoint(tmp, pset_range(pset_singleton(s2_9), 0,
                    (n_10 - 1))) and not_assigns(tmpalloc,
                    char_P_char_M_s2_9_13_at_L, tmpmem, tmp)) ->
                   (strncmp(s1_9, s2_9, n_10, char_P_char_M_s2_9_13_at_L,
                   char_P_char_M_s1_9_12_at_L) = strncmp(s1_9, s2_9, n_10,
                   tmpmem, char_P_char_M_s1_9_12_at_L)))))))))))

axiom no_assign_strncmp_1:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int8) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s1_9_12_at_L:(char_P, int8) memory.
          (forall char_P_char_M_s2_9_13_at_L:(char_P, int8) memory.
            (forall n_10:int.
              (forall s2_9:char_P pointer.
                (forall s1_9:char_P pointer.
                  ((pset_disjoint(tmp, pset_range(pset_singleton(s1_9), 0,
                    (n_10 - 1))) and not_assigns(tmpalloc,
                    char_P_char_M_s1_9_12_at_L, tmpmem, tmp)) ->
                   (strncmp(s1_9, s2_9, n_10, char_P_char_M_s2_9_13_at_L,
                   char_P_char_M_s1_9_12_at_L) = strncmp(s1_9, s2_9, n_10,
                   char_P_char_M_s2_9_13_at_L, tmpmem)))))))))))

logic wcslen : unsigned_short_P pointer, (unsigned_short_P,
uint16) memory -> int

logic wcscmp : unsigned_short_P pointer, unsigned_short_P pointer,
(unsigned_short_P, uint16) memory, (unsigned_short_P, uint16) memory -> int

axiom no_assign_wcscmp_0:
  (forall tmp:unsigned_short_P pset.
    (forall tmpmem:(unsigned_short_P, uint16) memory.
      (forall tmpalloc:unsigned_short_P alloc_table.
        (forall unsigned_short_P_unsigned_short_M_s1_11_16_at_L:(unsigned_short_P,
          uint16) memory.
          (forall unsigned_short_P_unsigned_short_M_s2_11_17_at_L:(unsigned_short_P,
            uint16) memory.
            (forall s2_11:unsigned_short_P pointer.
              (forall s1_11:unsigned_short_P pointer.
                ((pset_disjoint(tmp, pset_range(pset_singleton(s2_11), 0,
                  wcslen(s2_11,
                  unsigned_short_P_unsigned_short_M_s2_11_17_at_L))) and
                  not_assigns(tmpalloc,
                  unsigned_short_P_unsigned_short_M_s2_11_17_at_L, tmpmem,
                  tmp)) ->
                 (wcscmp(s1_11, s2_11,
                 unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
                 unsigned_short_P_unsigned_short_M_s1_11_16_at_L) = wcscmp(s1_11,
                 s2_11, tmpmem,
                 unsigned_short_P_unsigned_short_M_s1_11_16_at_L))))))))))

axiom no_assign_wcscmp_1:
  (forall tmp:unsigned_short_P pset.
    (forall tmpmem:(unsigned_short_P, uint16) memory.
      (forall tmpalloc:unsigned_short_P alloc_table.
        (forall unsigned_short_P_unsigned_short_M_s1_11_16_at_L:(unsigned_short_P,
          uint16) memory.
          (forall unsigned_short_P_unsigned_short_M_s2_11_17_at_L:(unsigned_short_P,
            uint16) memory.
            (forall s2_11:unsigned_short_P pointer.
              (forall s1_11:unsigned_short_P pointer.
                ((pset_disjoint(tmp, pset_range(pset_singleton(s1_11), 0,
                  wcslen(s1_11,
                  unsigned_short_P_unsigned_short_M_s1_11_16_at_L))) and
                  not_assigns(tmpalloc,
                  unsigned_short_P_unsigned_short_M_s1_11_16_at_L, tmpmem,
                  tmp)) ->
                 (wcscmp(s1_11, s2_11,
                 unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
                 unsigned_short_P_unsigned_short_M_s1_11_16_at_L) = wcscmp(s1_11,
                 s2_11, unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
                 tmpmem))))))))))

axiom no_assign_wcslen_0:
  (forall tmp:unsigned_short_P pset.
    (forall tmpmem:(unsigned_short_P, uint16) memory.
      (forall tmpalloc:unsigned_short_P alloc_table.
        (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:(unsigned_short_P,
          uint16) memory.
          (forall s_17:unsigned_short_P pointer.
            ((pset_disjoint(tmp, pset_range_right(pset_singleton(s_17),
              0)) and not_assigns(tmpalloc,
              unsigned_short_P_unsigned_short_M_s_17_15_at_L, tmpmem, tmp)) ->
             (wcslen(s_17,
             unsigned_short_P_unsigned_short_M_s_17_15_at_L) = wcslen(s_17,
             tmpmem))))))))

logic wcsncmp : unsigned_short_P pointer, unsigned_short_P pointer, int,
(unsigned_short_P, uint16) memory, (unsigned_short_P, uint16) memory -> int

axiom no_assign_wcsncmp_0:
  (forall tmp:unsigned_short_P pset.
    (forall tmpmem:(unsigned_short_P, uint16) memory.
      (forall tmpalloc:unsigned_short_P alloc_table.
        (forall unsigned_short_P_unsigned_short_M_s1_13_18_at_L:(unsigned_short_P,
          uint16) memory.
          (forall unsigned_short_P_unsigned_short_M_s2_13_19_at_L:(unsigned_short_P,
            uint16) memory.
            (forall n_12:int.
              (forall s2_13:unsigned_short_P pointer.
                (forall s1_13:unsigned_short_P pointer.
                  ((pset_disjoint(tmp, pset_range(pset_singleton(s2_13), 0,
                    (n_12 - 1))) and not_assigns(tmpalloc,
                    unsigned_short_P_unsigned_short_M_s2_13_19_at_L, tmpmem,
                    tmp)) ->
                   (wcsncmp(s1_13, s2_13, n_12,
                   unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
                   unsigned_short_P_unsigned_short_M_s1_13_18_at_L) = wcsncmp(s1_13,
                   s2_13, n_12, tmpmem,
                   unsigned_short_P_unsigned_short_M_s1_13_18_at_L)))))))))))

axiom no_assign_wcsncmp_1:
  (forall tmp:unsigned_short_P pset.
    (forall tmpmem:(unsigned_short_P, uint16) memory.
      (forall tmpalloc:unsigned_short_P alloc_table.
        (forall unsigned_short_P_unsigned_short_M_s1_13_18_at_L:(unsigned_short_P,
          uint16) memory.
          (forall unsigned_short_P_unsigned_short_M_s2_13_19_at_L:(unsigned_short_P,
            uint16) memory.
            (forall n_12:int.
              (forall s2_13:unsigned_short_P pointer.
                (forall s1_13:unsigned_short_P pointer.
                  ((pset_disjoint(tmp, pset_range(pset_singleton(s1_13), 0,
                    (n_12 - 1))) and not_assigns(tmpalloc,
                    unsigned_short_P_unsigned_short_M_s1_13_18_at_L, tmpmem,
                    tmp)) ->
                   (wcsncmp(s1_13, s2_13, n_12,
                   unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
                   unsigned_short_P_unsigned_short_M_s1_13_18_at_L) = wcsncmp(s1_13,
                   s2_13, n_12,
                   unsigned_short_P_unsigned_short_M_s2_13_19_at_L, tmpmem)))))))))))

axiom no_update_memchr_0:
  (forall tmp:char_P pointer.
    (forall tmpval:int8.
      (forall char_P_char_M_s_7_at_L:(char_P, int8) memory.
        (forall n_2:int.
          (forall c:int.
            (forall s_0:char_P pointer.
              ((not in_pset(tmp, pset_range(pset_singleton(s_0), 0,
               (n_2 - 1)))) -> (memchr(s_0, c, n_2,
               char_P_char_M_s_7_at_L) = memchr(s_0, c, n_2,
               store(char_P_char_M_s_7_at_L, tmp, tmpval))))))))))

axiom no_update_memcmp_0:
  (forall tmp:char_P pointer.
    (forall tmpval:int8.
      (forall char_P_char_M_s1_5_at_L:(char_P, int8) memory.
        (forall char_P_char_M_s2_6_at_L:(char_P, int8) memory.
          (forall n:int.
            (forall s2_1:char_P pointer.
              (forall s1_1:char_P pointer.
                ((not in_pset(tmp, pset_range(pset_singleton(s2_1), 0,
                 (n - 1)))) -> (memcmp(s1_1, s2_1, n,
                 char_P_char_M_s2_6_at_L,
                 char_P_char_M_s1_5_at_L) = memcmp(s1_1, s2_1, n,
                 store(char_P_char_M_s2_6_at_L, tmp, tmpval),
                 char_P_char_M_s1_5_at_L))))))))))

axiom no_update_memcmp_1:
  (forall tmp:char_P pointer.
    (forall tmpval:int8.
      (forall char_P_char_M_s1_5_at_L:(char_P, int8) memory.
        (forall char_P_char_M_s2_6_at_L:(char_P, int8) memory.
          (forall n:int.
            (forall s2_1:char_P pointer.
              (forall s1_1:char_P pointer.
                ((not in_pset(tmp, pset_range(pset_singleton(s1_1), 0,
                 (n - 1)))) -> (memcmp(s1_1, s2_1, n,
                 char_P_char_M_s2_6_at_L,
                 char_P_char_M_s1_5_at_L) = memcmp(s1_1, s2_1, n,
                 char_P_char_M_s2_6_at_L, store(char_P_char_M_s1_5_at_L, tmp,
                 tmpval)))))))))))

axiom no_update_memset_0:
  (forall tmp:char_P pointer.
    (forall tmpval:int8.
      (forall char_P_char_M_s_1_8_at_L:(char_P, int8) memory.
        (forall n_4:int.
          (forall c_1:int.
            (forall s_1:char_P pointer.
              ((not in_pset(tmp, pset_range(pset_singleton(s_1), 0,
               (n_4 - 1)))) -> (memset(s_1, c_1, n_4,
               char_P_char_M_s_1_8_at_L) = memset(s_1, c_1, n_4,
               store(char_P_char_M_s_1_8_at_L, tmp, tmpval))))))))))

axiom no_update_strchr_0:
  (forall tmp:char_P pointer.
    (forall tmpval:int8.
      (forall char_P_char_M_s_15_14_at_L:(char_P, int8) memory.
        (forall c_3:int.
          (forall s_15:char_P pointer.
            ((not in_pset(tmp, pset_range(pset_singleton(s_15), 0,
             strlen(s_15, char_P_char_M_s_15_14_at_L)))) -> (strchr(s_15,
             c_3, char_P_char_M_s_15_14_at_L) = strchr(s_15, c_3,
             store(char_P_char_M_s_15_14_at_L, tmp, tmpval)))))))))

axiom no_update_strcmp_0:
  (forall tmp:char_P pointer.
    (forall tmpval:int8.
      (forall char_P_char_M_s1_6_10_at_L:(char_P, int8) memory.
        (forall char_P_char_M_s2_6_11_at_L:(char_P, int8) memory.
          (forall s2_6:char_P pointer.
            (forall s1_6:char_P pointer.
              ((not in_pset(tmp, pset_range(pset_singleton(s2_6), 0,
               strlen(s2_6, char_P_char_M_s2_6_11_at_L)))) -> (strcmp(s1_6,
               s2_6, char_P_char_M_s2_6_11_at_L,
               char_P_char_M_s1_6_10_at_L) = strcmp(s1_6, s2_6,
               store(char_P_char_M_s2_6_11_at_L, tmp, tmpval),
               char_P_char_M_s1_6_10_at_L)))))))))

axiom no_update_strcmp_1:
  (forall tmp:char_P pointer.
    (forall tmpval:int8.
      (forall char_P_char_M_s1_6_10_at_L:(char_P, int8) memory.
        (forall char_P_char_M_s2_6_11_at_L:(char_P, int8) memory.
          (forall s2_6:char_P pointer.
            (forall s1_6:char_P pointer.
              ((not in_pset(tmp, pset_range(pset_singleton(s1_6), 0,
               strlen(s1_6, char_P_char_M_s1_6_10_at_L)))) -> (strcmp(s1_6,
               s2_6, char_P_char_M_s2_6_11_at_L,
               char_P_char_M_s1_6_10_at_L) = strcmp(s1_6, s2_6,
               char_P_char_M_s2_6_11_at_L, store(char_P_char_M_s1_6_10_at_L,
               tmp, tmpval))))))))))

axiom no_update_strlen_0:
  (forall tmp:char_P pointer.
    (forall tmpval:int8.
      (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
        (forall s_3:char_P pointer.
          ((not in_pset(tmp, pset_range_right(pset_singleton(s_3), 0))) ->
           (strlen(s_3, char_P_char_M_s_3_9_at_L) = strlen(s_3,
           store(char_P_char_M_s_3_9_at_L, tmp, tmpval))))))))

axiom no_update_strncmp_0:
  (forall tmp:char_P pointer.
    (forall tmpval:int8.
      (forall char_P_char_M_s1_9_12_at_L:(char_P, int8) memory.
        (forall char_P_char_M_s2_9_13_at_L:(char_P, int8) memory.
          (forall n_10:int.
            (forall s2_9:char_P pointer.
              (forall s1_9:char_P pointer.
                ((not in_pset(tmp, pset_range(pset_singleton(s2_9), 0,
                 (n_10 - 1)))) -> (strncmp(s1_9, s2_9, n_10,
                 char_P_char_M_s2_9_13_at_L,
                 char_P_char_M_s1_9_12_at_L) = strncmp(s1_9, s2_9, n_10,
                 store(char_P_char_M_s2_9_13_at_L, tmp, tmpval),
                 char_P_char_M_s1_9_12_at_L))))))))))

axiom no_update_strncmp_1:
  (forall tmp:char_P pointer.
    (forall tmpval:int8.
      (forall char_P_char_M_s1_9_12_at_L:(char_P, int8) memory.
        (forall char_P_char_M_s2_9_13_at_L:(char_P, int8) memory.
          (forall n_10:int.
            (forall s2_9:char_P pointer.
              (forall s1_9:char_P pointer.
                ((not in_pset(tmp, pset_range(pset_singleton(s1_9), 0,
                 (n_10 - 1)))) -> (strncmp(s1_9, s2_9, n_10,
                 char_P_char_M_s2_9_13_at_L,
                 char_P_char_M_s1_9_12_at_L) = strncmp(s1_9, s2_9, n_10,
                 char_P_char_M_s2_9_13_at_L,
                 store(char_P_char_M_s1_9_12_at_L, tmp, tmpval)))))))))))

axiom no_update_wcscmp_0:
  (forall tmp:unsigned_short_P pointer.
    (forall tmpval:uint16.
      (forall unsigned_short_P_unsigned_short_M_s1_11_16_at_L:(unsigned_short_P,
        uint16) memory.
        (forall unsigned_short_P_unsigned_short_M_s2_11_17_at_L:(unsigned_short_P,
          uint16) memory.
          (forall s2_11:unsigned_short_P pointer.
            (forall s1_11:unsigned_short_P pointer.
              ((not in_pset(tmp, pset_range(pset_singleton(s2_11), 0,
               wcslen(s2_11,
               unsigned_short_P_unsigned_short_M_s2_11_17_at_L)))) ->
               (wcscmp(s1_11, s2_11,
               unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
               unsigned_short_P_unsigned_short_M_s1_11_16_at_L) = wcscmp(s1_11,
               s2_11, store(unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
               tmp, tmpval),
               unsigned_short_P_unsigned_short_M_s1_11_16_at_L)))))))))

axiom no_update_wcscmp_1:
  (forall tmp:unsigned_short_P pointer.
    (forall tmpval:uint16.
      (forall unsigned_short_P_unsigned_short_M_s1_11_16_at_L:(unsigned_short_P,
        uint16) memory.
        (forall unsigned_short_P_unsigned_short_M_s2_11_17_at_L:(unsigned_short_P,
          uint16) memory.
          (forall s2_11:unsigned_short_P pointer.
            (forall s1_11:unsigned_short_P pointer.
              ((not in_pset(tmp, pset_range(pset_singleton(s1_11), 0,
               wcslen(s1_11,
               unsigned_short_P_unsigned_short_M_s1_11_16_at_L)))) ->
               (wcscmp(s1_11, s2_11,
               unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
               unsigned_short_P_unsigned_short_M_s1_11_16_at_L) = wcscmp(s1_11,
               s2_11, unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
               store(unsigned_short_P_unsigned_short_M_s1_11_16_at_L, tmp,
               tmpval))))))))))

axiom no_update_wcslen_0:
  (forall tmp:unsigned_short_P pointer.
    (forall tmpval:uint16.
      (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:(unsigned_short_P,
        uint16) memory.
        (forall s_17:unsigned_short_P pointer.
          ((not in_pset(tmp, pset_range_right(pset_singleton(s_17), 0))) ->
           (wcslen(s_17,
           unsigned_short_P_unsigned_short_M_s_17_15_at_L) = wcslen(s_17,
           store(unsigned_short_P_unsigned_short_M_s_17_15_at_L, tmp,
           tmpval))))))))

axiom no_update_wcsncmp_0:
  (forall tmp:unsigned_short_P pointer.
    (forall tmpval:uint16.
      (forall unsigned_short_P_unsigned_short_M_s1_13_18_at_L:(unsigned_short_P,
        uint16) memory.
        (forall unsigned_short_P_unsigned_short_M_s2_13_19_at_L:(unsigned_short_P,
          uint16) memory.
          (forall n_12:int.
            (forall s2_13:unsigned_short_P pointer.
              (forall s1_13:unsigned_short_P pointer.
                ((not in_pset(tmp, pset_range(pset_singleton(s2_13), 0,
                 (n_12 - 1)))) -> (wcsncmp(s1_13, s2_13, n_12,
                 unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
                 unsigned_short_P_unsigned_short_M_s1_13_18_at_L) = wcsncmp(s1_13,
                 s2_13, n_12,
                 store(unsigned_short_P_unsigned_short_M_s2_13_19_at_L, tmp,
                 tmpval), unsigned_short_P_unsigned_short_M_s1_13_18_at_L))))))))))

axiom no_update_wcsncmp_1:
  (forall tmp:unsigned_short_P pointer.
    (forall tmpval:uint16.
      (forall unsigned_short_P_unsigned_short_M_s1_13_18_at_L:(unsigned_short_P,
        uint16) memory.
        (forall unsigned_short_P_unsigned_short_M_s2_13_19_at_L:(unsigned_short_P,
          uint16) memory.
          (forall n_12:int.
            (forall s2_13:unsigned_short_P pointer.
              (forall s1_13:unsigned_short_P pointer.
                ((not in_pset(tmp, pset_range(pset_singleton(s1_13), 0,
                 (n_12 - 1)))) -> (wcsncmp(s1_13, s2_13, n_12,
                 unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
                 unsigned_short_P_unsigned_short_M_s1_13_18_at_L) = wcsncmp(s1_13,
                 s2_13, n_12,
                 unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
                 store(unsigned_short_P_unsigned_short_M_s1_13_18_at_L, tmp,
                 tmpval)))))))))))

axiom pointer_addr_of_char_P_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(char_P_of_pointer_address(p))))

axiom pointer_addr_of_char_xP_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(char_xP_of_pointer_address(p))))

logic unsigned_short_P_of_pointer_address : unit pointer -> unsigned_short_P pointer

axiom pointer_addr_of_unsigned_short_P_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(unsigned_short_P_of_pointer_address(p))))

logic void_P_of_pointer_address : unit pointer -> void_P pointer

axiom pointer_addr_of_void_P_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(void_P_of_pointer_address(p))))

predicate right_valid_struct_char_P(p: char_P pointer, b: int,
  char_P_alloc_table: char_P alloc_table) = (offset_max(char_P_alloc_table,
  p) >= b)

predicate right_valid_struct_char_xP(p: char_xP pointer, b: int,
  char_xP_alloc_table: char_xP alloc_table) =
  (offset_max(char_xP_alloc_table, p) >= b)

predicate right_valid_struct_unsigned_short_P(p: unsigned_short_P pointer,
  b: int, unsigned_short_P_alloc_table: unsigned_short_P alloc_table) =
  (offset_max(unsigned_short_P_alloc_table, p) >= b)

predicate right_valid_struct_void_P(p: void_P pointer, b: int,
  void_P_alloc_table: void_P alloc_table) = (offset_max(void_P_alloc_table,
  p) >= b)

axiom strchr_def:
  (forall char_P_char_M_s_15_14_at_L:(char_P, int8) memory.
    (forall s_16:char_P pointer.
      (forall c_4:int.
        ((strchr(s_16, c_4, char_P_char_M_s_15_14_at_L) = true) <->
         (exists i_13:int.
           ((0 <= i_13) and
            ((i_13 <= strlen(s_16, char_P_char_M_s_15_14_at_L)) and
             (integer_of_int8(select(char_P_char_M_s_15_14_at_L, shift(s_16,
             i_13))) = c_4))))))))

axiom strcmp_range:
  (forall char_P_char_M_s2_6_11_at_L:(char_P, int8) memory.
    (forall char_P_char_M_s1_6_10_at_L:(char_P, int8) memory.
      (forall s1_7:char_P pointer.
        (forall s2_7:char_P pointer.
          ((((-2147483647) - 1) <= strcmp(s1_7, s2_7,
           char_P_char_M_s2_6_11_at_L, char_P_char_M_s1_6_10_at_L)) and
           (strcmp(s1_7, s2_7, char_P_char_M_s2_6_11_at_L,
           char_P_char_M_s1_6_10_at_L) <= 2147483647))))))

axiom strcmp_zero:
  (forall char_P_char_M_s2_6_11_at_L:(char_P, int8) memory.
    (forall char_P_char_M_s1_6_10_at_L:(char_P, int8) memory.
      (forall s1_8:char_P pointer.
        (forall s2_8:char_P pointer.
          ((strcmp(s1_8, s2_8, char_P_char_M_s2_6_11_at_L,
           char_P_char_M_s1_6_10_at_L) = 0) <->
           ((strlen(s1_8, char_P_char_M_s1_6_10_at_L) = strlen(s2_8,
            char_P_char_M_s2_6_11_at_L)) and
            (forall i_11:int.
              (((0 <= i_11) and (i_11 <= strlen(s1_8,
                char_P_char_M_s1_6_10_at_L))) ->
               (integer_of_int8(select(char_P_char_M_s1_6_10_at_L,
               shift(s1_8,
               i_11))) = integer_of_int8(select(char_P_char_M_s2_6_11_at_L,
               shift(s2_8, i_11))))))))))))

predicate strict_valid_root_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) = a) and
   (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_root_char_xP(p: char_xP pointer, a: int, b: int,
  char_xP_alloc_table: char_xP alloc_table) =
  ((offset_min(char_xP_alloc_table, p) = a) and
   (offset_max(char_xP_alloc_table, p) = b))

predicate strict_valid_root_unsigned_short_P(p: unsigned_short_P pointer,
  a: int, b: int,
  unsigned_short_P_alloc_table: unsigned_short_P alloc_table) =
  ((offset_min(unsigned_short_P_alloc_table, p) = a) and
   (offset_max(unsigned_short_P_alloc_table, p) = b))

predicate strict_valid_root_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) = a) and
   (offset_max(void_P_alloc_table, p) = b))

predicate strict_valid_struct_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) = a) and
   (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_struct_char_xP(p: char_xP pointer, a: int, b: int,
  char_xP_alloc_table: char_xP alloc_table) =
  ((offset_min(char_xP_alloc_table, p) = a) and
   (offset_max(char_xP_alloc_table, p) = b))

predicate strict_valid_struct_unsigned_short_P(p: unsigned_short_P pointer,
  a: int, b: int,
  unsigned_short_P_alloc_table: unsigned_short_P alloc_table) =
  ((offset_min(unsigned_short_P_alloc_table, p) = a) and
   (offset_max(unsigned_short_P_alloc_table, p) = b))

predicate strict_valid_struct_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) = a) and
   (offset_max(void_P_alloc_table, p) = b))

axiom strlen_at_null:
  (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
    (forall s_8:char_P pointer.
      ((0 <= strlen(s_8, char_P_char_M_s_3_9_at_L)) ->
       (integer_of_int8(select(char_P_char_M_s_3_9_at_L, shift(s_8,
       strlen(s_8, char_P_char_M_s_3_9_at_L)))) = 0))))

axiom strlen_before_null:
  (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
    (forall s_7:char_P pointer.
      (forall i_4:int.
        (((0 <= i_4) and (i_4 < strlen(s_7, char_P_char_M_s_3_9_at_L))) ->
         (integer_of_int8(select(char_P_char_M_s_3_9_at_L, shift(s_7,
         i_4))) <> 0)))))

axiom strlen_create:
  (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
    (forall s_13:char_P pointer.
      (forall i_9:int.
        (((0 <= i_9) and
          ((i_9 <= 2147483647) and
           (integer_of_int8(select(char_P_char_M_s_3_9_at_L, shift(s_13,
           i_9))) = 0))) ->
         ((0 <= strlen(s_13, char_P_char_M_s_3_9_at_L)) and (strlen(s_13,
          char_P_char_M_s_3_9_at_L) <= i_9))))))

axiom strlen_create_shift:
  (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
    (forall s_14:char_P pointer.
      (forall i_10:int.
        (forall k:int.
          (((0 <= k) and
            ((k <= i_10) and
             ((i_10 <= 2147483647) and
              (integer_of_int8(select(char_P_char_M_s_3_9_at_L, shift(s_14,
              i_10))) = 0)))) ->
           ((0 <= strlen(shift(s_14, k), char_P_char_M_s_3_9_at_L)) and
            (strlen(shift(s_14, k), char_P_char_M_s_3_9_at_L) <= (i_10 - k))))))))

axiom strlen_neg:
  (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
    (forall s_5:char_P pointer.
      ((forall i_3:int.
         (((0 <= i_3) and (i_3 <= 2147483647)) ->
          (integer_of_int8(select(char_P_char_M_s_3_9_at_L, shift(s_5,
          i_3))) <> 0))) ->
       (strlen(s_5, char_P_char_M_s_3_9_at_L) < 0))))

axiom strlen_not_zero:
  (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
    (forall s_9:char_P pointer.
      (forall i_5:int.
        (((0 <= i_5) and
          ((i_5 <= strlen(s_9, char_P_char_M_s_3_9_at_L)) and
           (integer_of_int8(select(char_P_char_M_s_3_9_at_L, shift(s_9,
           i_5))) <> 0))) ->
         (i_5 < strlen(s_9, char_P_char_M_s_3_9_at_L))))))

axiom strlen_pos_or_null:
  (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
    (forall s_4:char_P pointer.
      (forall i_2:int.
        (((0 <= i_2) and
          ((i_2 <= 2147483647) and
           ((forall j:int.
              (((0 <= j) and (j < i_2)) ->
               (integer_of_int8(select(char_P_char_M_s_3_9_at_L, shift(s_4,
               j))) <> 0))) and
            (integer_of_int8(select(char_P_char_M_s_3_9_at_L, shift(s_4,
            i_2))) = 0)))) ->
         (strlen(s_4, char_P_char_M_s_3_9_at_L) = i_2)))))

axiom strlen_range:
  (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
    (forall s_6:char_P pointer. (strlen(s_6,
      char_P_char_M_s_3_9_at_L) <= 2147483647)))

axiom strlen_shift:
  (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
    (forall s_12:char_P pointer.
      (forall i_8:int.
        (((0 <= i_8) and (i_8 <= strlen(s_12, char_P_char_M_s_3_9_at_L))) ->
         (strlen(shift(s_12, i_8), char_P_char_M_s_3_9_at_L) = (strlen(s_12,
         char_P_char_M_s_3_9_at_L) - i_8))))))

axiom strlen_sup:
  (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
    (forall s_11:char_P pointer.
      (forall i_7:int.
        (((0 <= i_7) and (integer_of_int8(select(char_P_char_M_s_3_9_at_L,
          shift(s_11, i_7))) = 0)) ->
         ((0 <= strlen(s_11, char_P_char_M_s_3_9_at_L)) and (strlen(s_11,
          char_P_char_M_s_3_9_at_L) <= i_7))))))

axiom strlen_zero:
  (forall char_P_char_M_s_3_9_at_L:(char_P, int8) memory.
    (forall s_10:char_P pointer.
      (forall i_6:int.
        (((0 <= i_6) and
          ((i_6 <= strlen(s_10, char_P_char_M_s_3_9_at_L)) and
           (integer_of_int8(select(char_P_char_M_s_3_9_at_L, shift(s_10,
           i_6))) = 0))) ->
         (i_6 = strlen(s_10, char_P_char_M_s_3_9_at_L))))))

axiom strncmp_zero:
  (forall char_P_char_M_s2_9_13_at_L:(char_P, int8) memory.
    (forall char_P_char_M_s1_9_12_at_L:(char_P, int8) memory.
      (forall s1_10:char_P pointer.
        (forall s2_10:char_P pointer.
          (forall n_11:int.
            ((strncmp(s1_10, s2_10, n_11, char_P_char_M_s2_9_13_at_L,
             char_P_char_M_s1_9_12_at_L) = 0) <->
             (((strlen(s1_10, char_P_char_M_s1_9_12_at_L) < n_11) and
               (strcmp(s1_10, s2_10, char_P_char_M_s2_9_13_at_L,
               char_P_char_M_s1_9_12_at_L) = 0)) or
              (forall i_12:int.
                (((0 <= i_12) and (i_12 < n_11)) ->
                 (integer_of_int8(select(char_P_char_M_s1_9_12_at_L,
                 shift(s1_10,
                 i_12))) = integer_of_int8(select(char_P_char_M_s2_9_13_at_L,
                 shift(s2_10, i_12)))))))))))))

logic uint16_of_integer : int -> uint16

axiom uint16_coerce:
  (forall x:int.
    (((0 <= x) and (x <= 65535)) ->
     (integer_of_uint16(uint16_of_integer(x)) = x)))

axiom uint16_range:
  (forall x:uint16.
    ((0 <= integer_of_uint16(x)) and (integer_of_uint16(x) <= 65535)))

logic uint32_of_integer : int -> uint32

axiom uint32_coerce:
  (forall x:int.
    (((0 <= x) and (x <= 4294967295)) ->
     (integer_of_uint32(uint32_of_integer(x)) = x)))

axiom uint32_range:
  (forall x:uint32.
    ((0 <= integer_of_uint32(x)) and (integer_of_uint32(x) <= 4294967295)))

logic unsigned_short_P_tag : unsigned_short_P tag_id

axiom unsigned_short_P_int: (int_of_tag(unsigned_short_P_tag) = 1)

axiom unsigned_short_P_of_pointer_address_of_pointer_addr:
  (forall p:unsigned_short_P pointer.
    (p = unsigned_short_P_of_pointer_address(pointer_address(p))))

axiom unsigned_short_P_parenttag_bottom: parenttag(unsigned_short_P_tag,
  bottom_tag)

axiom unsigned_short_P_tags:
  (forall x:unsigned_short_P pointer.
    (forall unsigned_short_P_tag_table:unsigned_short_P tag_table.
      instanceof(unsigned_short_P_tag_table, x, unsigned_short_P_tag)))

predicate valid_string(s_28: char_P pointer,
  char_P_s_28_20_alloc_table_at_L: char_P alloc_table,
  char_P_char_M_s_28_20_at_L: (char_P, int8) memory) =
  ((0 <= strlen(s_28, char_P_char_M_s_28_20_at_L)) and
   ((offset_min(char_P_s_28_20_alloc_table_at_L, s_28) <= 0) and
    (offset_max(char_P_s_28_20_alloc_table_at_L, s_28) >= strlen(s_28,
    char_P_char_M_s_28_20_at_L))))

predicate valid___string_Argument_must_be_an_integer_from_1_to_7__(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table: char_P alloc_table,
  char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3: (char_P,
  int8) memory) =
  (valid_string(__string_Argument_must_be_an_integer_from_1_to_7__,
   char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
   char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3) and
   (strlen(__string_Argument_must_be_an_integer_from_1_to_7__,
   char_P_char_M___string_Argument_must_be_an_integer_from_1_to_7___3) = 41))

predicate valid___string_Argument_must_be_an_integer_from_1_to_7___0(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table: char_P alloc_table) =
  ((offset_min(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
   __string_Argument_must_be_an_integer_from_1_to_7__) <= 0) and
   (offset_max(char_P___string_Argument_must_be_an_integer_from_1_to_7___3_alloc_table,
   __string_Argument_must_be_an_integer_from_1_to_7__) >= 41))

predicate valid___string_Need_exactly_one_argument__an_integer_from_1_to_7__(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table: char_P alloc_table,
  char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4: (char_P,
  int8) memory) =
  (valid_string(__string_Need_exactly_one_argument__an_integer_from_1_to_7__,
   char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
   char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4) and
   (strlen(__string_Need_exactly_one_argument__an_integer_from_1_to_7__,
   char_P_char_M___string_Need_exactly_one_argument__an_integer_from_1_to_7___4) = 51))

predicate valid___string_Need_exactly_one_argument__an_integer_from_1_to_7___0(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table: char_P alloc_table) =
  ((offset_min(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
   __string_Need_exactly_one_argument__an_integer_from_1_to_7__) <= 0) and
   (offset_max(char_P___string_Need_exactly_one_argument__an_integer_from_1_to_7___4_alloc_table,
   __string_Need_exactly_one_argument__an_integer_from_1_to_7__) >= 51))

predicate valid___string_n____d_(char_P___string_n____d__2_alloc_table: char_P alloc_table,
  char_P_char_M___string_n____d__2: (char_P, int8) memory) =
  (valid_string(__string_n____d_, char_P___string_n____d__2_alloc_table,
   char_P_char_M___string_n____d__2) and (strlen(__string_n____d_,
   char_P_char_M___string_n____d__2) = 7))

predicate valid___string_n____d__0(char_P___string_n____d__2_alloc_table: char_P alloc_table) =
  ((offset_min(char_P___string_n____d__2_alloc_table,
   __string_n____d_) <= 0) and
   (offset_max(char_P___string_n____d__2_alloc_table, __string_n____d_) >= 7))

predicate valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table: char_P alloc_table,
  char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1: (char_P,
  int8) memory) =
  (valid_string(__string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_,
   char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
   char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1) and
   (strlen(__string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_,
   char_P_char_M___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1) = 49))

predicate valid___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__0(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table: char_P alloc_table) =
  ((offset_min(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
   __string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_) <= 0) and
   (offset_max(char_P___string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X__1_alloc_table,
   __string_x__y__z__u__v__w_____2X___2X___2X___2X___2X___2X_) >= 49))

predicate valid_bitvector_struct_char_P(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_char_xP(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_unsigned_short_P(p: unit pointer, a: int,
  b: int, bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_void_P(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_root_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) <= a) and
   (offset_max(char_P_alloc_table, p) >= b))

predicate valid_root_char_xP(p: char_xP pointer, a: int, b: int,
  char_xP_alloc_table: char_xP alloc_table) =
  ((offset_min(char_xP_alloc_table, p) <= a) and
   (offset_max(char_xP_alloc_table, p) >= b))

predicate valid_root_unsigned_short_P(p: unsigned_short_P pointer, a: int,
  b: int, unsigned_short_P_alloc_table: unsigned_short_P alloc_table) =
  ((offset_min(unsigned_short_P_alloc_table, p) <= a) and
   (offset_max(unsigned_short_P_alloc_table, p) >= b))

predicate valid_root_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) <= a) and
   (offset_max(void_P_alloc_table, p) >= b))

predicate valid_string_or_null(s_29: char_P pointer,
  char_P_s_29_21_alloc_table_at_L: char_P alloc_table,
  char_P_char_M_s_29_21_at_L: (char_P, int8) memory) =
  ((s_29 = null) or valid_string(s_29, char_P_s_29_21_alloc_table_at_L,
   char_P_char_M_s_29_21_at_L))

predicate valid_struct_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) <= a) and
   (offset_max(char_P_alloc_table, p) >= b))

predicate valid_struct_char_xP(p: char_xP pointer, a: int, b: int,
  char_xP_alloc_table: char_xP alloc_table) =
  ((offset_min(char_xP_alloc_table, p) <= a) and
   (offset_max(char_xP_alloc_table, p) >= b))

predicate valid_struct_unsigned_short_P(p: unsigned_short_P pointer, a: int,
  b: int, unsigned_short_P_alloc_table: unsigned_short_P alloc_table) =
  ((offset_min(unsigned_short_P_alloc_table, p) <= a) and
   (offset_max(unsigned_short_P_alloc_table, p) >= b))

predicate valid_struct_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) <= a) and
   (offset_max(void_P_alloc_table, p) >= b))

predicate valid_wstring(s_30: unsigned_short_P pointer,
  unsigned_short_P_s_30_22_alloc_table_at_L: unsigned_short_P alloc_table,
  unsigned_short_P_unsigned_short_M_s_30_22_at_L: (unsigned_short_P,
  uint16) memory) =
  ((0 <= wcslen(s_30, unsigned_short_P_unsigned_short_M_s_30_22_at_L)) and
   ((offset_min(unsigned_short_P_s_30_22_alloc_table_at_L, s_30) <= 0) and
    (offset_max(unsigned_short_P_s_30_22_alloc_table_at_L,
    s_30) >= wcslen(s_30, unsigned_short_P_unsigned_short_M_s_30_22_at_L))))

predicate valid_wstring_or_null(s_31: unsigned_short_P pointer,
  unsigned_short_P_s_31_23_alloc_table_at_L: unsigned_short_P alloc_table,
  unsigned_short_P_unsigned_short_M_s_31_23_at_L: (unsigned_short_P,
  uint16) memory) =
  ((s_31 = null) or valid_wstring(s_31,
   unsigned_short_P_s_31_23_alloc_table_at_L,
   unsigned_short_P_unsigned_short_M_s_31_23_at_L))

logic void_P_tag : void_P tag_id

axiom void_P_int: (int_of_tag(void_P_tag) = 1)

axiom void_P_of_pointer_address_of_pointer_addr:
  (forall p:void_P pointer.
    (p = void_P_of_pointer_address(pointer_address(p))))

axiom void_P_parenttag_bottom: parenttag(void_P_tag, bottom_tag)

axiom void_P_tags:
  (forall x:void_P pointer.
    (forall void_P_tag_table:void_P tag_table. instanceof(void_P_tag_table,
      x, void_P_tag)))

axiom wcscmp_zero:
  (forall unsigned_short_P_unsigned_short_M_s2_11_17_at_L:(unsigned_short_P,
    uint16) memory.
    (forall unsigned_short_P_unsigned_short_M_s1_11_16_at_L:(unsigned_short_P,
      uint16) memory.
      (forall s1_12:unsigned_short_P pointer.
        (forall s2_12:unsigned_short_P pointer.
          ((wcscmp(s1_12, s2_12,
           unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
           unsigned_short_P_unsigned_short_M_s1_11_16_at_L) = 0) <->
           ((wcslen(s1_12,
            unsigned_short_P_unsigned_short_M_s1_11_16_at_L) = wcslen(s2_12,
            unsigned_short_P_unsigned_short_M_s2_11_17_at_L)) and
            (forall i_23:int.
              (((0 <= i_23) and (i_23 <= wcslen(s1_12,
                unsigned_short_P_unsigned_short_M_s1_11_16_at_L))) ->
               (integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s1_11_16_at_L,
               shift(s1_12,
               i_23))) = integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s2_11_17_at_L,
               shift(s2_12, i_23))))))))))))

axiom wcslen_at_null:
  (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:(unsigned_short_P,
    uint16) memory.
    (forall s_21:unsigned_short_P pointer.
      ((0 <= wcslen(s_21, unsigned_short_P_unsigned_short_M_s_17_15_at_L)) ->
       (integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
       shift(s_21, wcslen(s_21,
       unsigned_short_P_unsigned_short_M_s_17_15_at_L)))) = 0))))

axiom wcslen_before_null:
  (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:(unsigned_short_P,
    uint16) memory.
    (forall s_20:unsigned_short_P pointer.
      (forall i_16:int32.
        (((0 <= integer_of_int32(i_16)) and
          (integer_of_int32(i_16) < wcslen(s_20,
          unsigned_short_P_unsigned_short_M_s_17_15_at_L))) ->
         (integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
         shift(s_20, integer_of_int32(i_16)))) <> 0)))))

axiom wcslen_create:
  (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:(unsigned_short_P,
    uint16) memory.
    (forall s_26:unsigned_short_P pointer.
      (forall i_21:int32.
        (((0 <= integer_of_int32(i_21)) and
          (integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
          shift(s_26, integer_of_int32(i_21)))) = 0)) ->
         ((0 <= wcslen(s_26,
          unsigned_short_P_unsigned_short_M_s_17_15_at_L)) and (wcslen(s_26,
          unsigned_short_P_unsigned_short_M_s_17_15_at_L) <= integer_of_int32(i_21)))))))

axiom wcslen_create_shift:
  (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:(unsigned_short_P,
    uint16) memory.
    (forall s_27:unsigned_short_P pointer.
      (forall i_22:int32.
        (forall k_2:int32.
          (((0 <= integer_of_int32(k_2)) and
            ((integer_of_int32(k_2) <= integer_of_int32(i_22)) and
             (integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
             shift(s_27, integer_of_int32(i_22)))) = 0))) ->
           ((0 <= wcslen(shift(s_27, integer_of_int32(k_2)),
            unsigned_short_P_unsigned_short_M_s_17_15_at_L)) and
            (wcslen(shift(s_27, integer_of_int32(k_2)),
            unsigned_short_P_unsigned_short_M_s_17_15_at_L) <= (integer_of_int32(i_22) - integer_of_int32(k_2)))))))))

axiom wcslen_neg:
  (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:(unsigned_short_P,
    uint16) memory.
    (forall s_19:unsigned_short_P pointer.
      ((forall i_15:int.
         ((0 <= i_15) ->
          (integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
          shift(s_19, i_15))) <> 0))) ->
       (wcslen(s_19, unsigned_short_P_unsigned_short_M_s_17_15_at_L) < 0))))

axiom wcslen_not_zero:
  (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:(unsigned_short_P,
    uint16) memory.
    (forall s_22:unsigned_short_P pointer.
      (forall i_17:int32.
        (((0 <= integer_of_int32(i_17)) and
          ((integer_of_int32(i_17) <= wcslen(s_22,
           unsigned_short_P_unsigned_short_M_s_17_15_at_L)) and
           (integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
           shift(s_22, integer_of_int32(i_17)))) <> 0))) ->
         (integer_of_int32(i_17) < wcslen(s_22,
         unsigned_short_P_unsigned_short_M_s_17_15_at_L))))))

axiom wcslen_pos_or_null:
  (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:(unsigned_short_P,
    uint16) memory.
    (forall s_18:unsigned_short_P pointer.
      (forall i_14:int.
        (((0 <= i_14) and
          ((forall j_0:int.
             (((0 <= j_0) and (j_0 < i_14)) ->
              (integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
              shift(s_18, j_0))) <> 0))) and
           (integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
           shift(s_18, i_14))) = 0))) ->
         (wcslen(s_18,
         unsigned_short_P_unsigned_short_M_s_17_15_at_L) = i_14)))))

axiom wcslen_shift:
  (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:(unsigned_short_P,
    uint16) memory.
    (forall s_25:unsigned_short_P pointer.
      (forall i_20:int32.
        (((0 <= integer_of_int32(i_20)) and
          (integer_of_int32(i_20) <= wcslen(s_25,
          unsigned_short_P_unsigned_short_M_s_17_15_at_L))) ->
         (wcslen(shift(s_25, integer_of_int32(i_20)),
         unsigned_short_P_unsigned_short_M_s_17_15_at_L) = (wcslen(s_25,
         unsigned_short_P_unsigned_short_M_s_17_15_at_L) - integer_of_int32(i_20)))))))

axiom wcslen_sup:
  (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:(unsigned_short_P,
    uint16) memory.
    (forall s_24:unsigned_short_P pointer.
      (forall i_19:int32.
        (((0 <= integer_of_int32(i_19)) and
          (integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
          shift(s_24, integer_of_int32(i_19)))) = 0)) ->
         ((0 <= wcslen(s_24,
          unsigned_short_P_unsigned_short_M_s_17_15_at_L)) and (wcslen(s_24,
          unsigned_short_P_unsigned_short_M_s_17_15_at_L) <= integer_of_int32(i_19)))))))

axiom wcslen_zero:
  (forall unsigned_short_P_unsigned_short_M_s_17_15_at_L:(unsigned_short_P,
    uint16) memory.
    (forall s_23:unsigned_short_P pointer.
      (forall i_18:int32.
        (((0 <= integer_of_int32(i_18)) and
          ((integer_of_int32(i_18) <= wcslen(s_23,
           unsigned_short_P_unsigned_short_M_s_17_15_at_L)) and
           (integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_17_15_at_L,
           shift(s_23, integer_of_int32(i_18)))) = 0))) ->
         (integer_of_int32(i_18) = wcslen(s_23,
         unsigned_short_P_unsigned_short_M_s_17_15_at_L))))))

axiom wcsncmp_zero:
  (forall unsigned_short_P_unsigned_short_M_s2_13_19_at_L:(unsigned_short_P,
    uint16) memory.
    (forall unsigned_short_P_unsigned_short_M_s1_13_18_at_L:(unsigned_short_P,
      uint16) memory.
      (forall s1_14:unsigned_short_P pointer.
        (forall s2_14:unsigned_short_P pointer.
          (forall n_13:int.
            ((wcsncmp(s1_14, s2_14, n_13,
             unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
             unsigned_short_P_unsigned_short_M_s1_13_18_at_L) = 0) <->
             (((wcslen(s1_14,
               unsigned_short_P_unsigned_short_M_s1_13_18_at_L) < n_13) and
               (wcscmp(s1_14, s2_14,
               unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
               unsigned_short_P_unsigned_short_M_s1_13_18_at_L) = 0)) or
              (forall i_24:int.
                (((0 <= i_24) and (i_24 < n_13)) ->
                 (integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s1_13_18_at_L,
                 shift(s1_14,
                 i_24))) = integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s2_13_19_at_L,
                 shift(s2_14, i_24)))))))))))))

