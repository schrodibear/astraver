Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -IFRAMAC_SHARE/libc -jessie -jessie-gen-only bts0291.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -IFRAMAC_SHARE/libc -dD bts0291.c"
[jessie] Starting Jessie translation
[jessie] Producing Jessie files in subdir bts0291.jessie
[jessie] File bts0291.jessie/bts0291.jc written.
[jessie] File bts0291.jessie/bts0291.cloc written.
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type int32 = -2147483648..2147483647

type int8 = -128..127

tag intP = {
  int32 intM: 32;
}

type intP = [intP]

tag charP = {
  int8 charM: 8;
}

type charP = [charP]

tag voidP = {
}

type voidP = [voidP]

unit foo(intP[..] x, charP[..] y)
  requires (C_8 : (((C_10 : (\offset_min(x) <= 0)) &&
                     (C_11 : (\offset_max(x) >= 0))) &&
                    ((C_13 : (\offset_min(y) <= 0)) &&
                      (C_14 : (\offset_max(y) >= 0)))));
behavior default:
  assigns x.intM,
  y.charM;
  ensures (C_5 : ((C_6 : (\at(y,Old).charM == 2)) &&
                   (C_7 : (\at(x,Old).intM == (- 1)))));
{  
   {  (C_2 : ((C_1 : x.intM) = -1));
      (C_4 : ((C_3 : y.charM) = 2));
      
      (return ())
   }
}

unit test1()
behavior default:
  ensures (C_21 : true);
{  
   (var intP[0] x_0);
   
   {  (C_16 : (x_0 = (C_15 : (new intP[1]))));
      (C_18 : foo(x_0, (C_17 : (x_0 :> charP[..]))));
      
      {  
         (assert for default: (C_19 : (2 == (- 1))));
         ()
      };
      
      {  (C_20 : (free(x_0)));
         
         (return ())
      }
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs bts0291.jessie/bts0291.cloc bts0291.jessie/bts0291.jc
