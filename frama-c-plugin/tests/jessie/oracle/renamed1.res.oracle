Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -jessie -jessie-gen-only renamed1.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -dD renamed1.c"
[jessie] Starting Jessie translation
[jessie] Producing Jessie files in subdir renamed1.jessie
[jessie] File renamed1.jessie/renamed1.jc written.
[jessie] File renamed1.jessie/renamed1.cloc written.
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type int32 = -2147483648..2147483647

type int8 = -128..127

tag float_P = {
  real float_M: 32;
}

type float_P = [float_P]

tag int_P = {
  int32 int_M: 32;
}

type int_P = [int_P]

tag char_P = {
  int8 char_M: 8;
}

type char_P = [char_P]

tag void_P = {
}

type void_P = [void_P]

unit __globinit_whole_program()
behavior default:
  assumes true;
  ensures (C_1 : true);
;

int32 Frama_C_entropy_source;

int32 Frama_C_interval(int32 min_0, int32 max_0)
behavior default:
  assumes true;
  assigns Frama_C_entropy_source;
  ensures (C_2 : true);
;

real Frama_C_float_interval(real min, real max)
behavior default:
  assumes true;
  assigns Frama_C_entropy_source;
  ensures (C_3 : true);
;

int32 F2(int32 V2)
behavior default:
  assumes true;
  ensures (C_6 : true);
{  
   (var int32 V1);
   
   {  (C_5 : (V1 = (C_4 : Frama_C_interval(0, 63))));
      
      (return V1)
   }
}

int32 F3(int32 V4)
behavior default:
  assumes true;
  ensures (C_9 : true);
{  
   (var int32 V3);
   
   {  (C_8 : (V3 = (C_7 : Frama_C_interval(0, 63))));
      
      (return V3)
   }
}

int32 F4(int32 V6)
behavior default:
  assumes true;
  ensures (C_12 : true);
{  
   (var int32 V5);
   
   {  (C_11 : (V5 = (C_10 : Frama_C_interval(0, 31))));
      
      (return V5)
   }
}

int32 G1;

int32 G2;

int_P[0..63] G3;

invariant valid_G3 :
((\offset_min(G3) <= 0) && (\offset_max(G3) >= 63))

int32 G4;

int32 G5;

int32 G6;

int32 F5(int32 V8)
behavior default:
  assumes true;
  ensures (C_19 : true);
{  
   (var int32 V7);
   
   {  
      {  
         (assert for default: (C_13 : (V8 >= 0)));
         
         (assert for default: (C_14 : (V8 < 32)));
         
         (assert for default: (C_15 : (1 <= (2147483647 >>> V8))));
         (C_18 : (V7 = (C_17 : ((C_16 : (1 << V8)) :> int32))))
      };
      
      (return V7)
   }
}

int32 G7;

float_P[0..63] G8;

invariant valid_G8 :
((\offset_min(G8) <= 0) && (\offset_max(G8) >= 63))

float_P[0..63] G9;

invariant valid_G9 :
((\offset_min(G9) <= 0) && (\offset_max(G9) >= 63))

float_P[0..63] G10;

invariant valid_G10 :
((\offset_min(G10) <= 0) && (\offset_max(G10) >= 63))

float_P[0..31] G11;

invariant valid_G11 :
((\offset_min(G11) <= 0) && (\offset_max(G11) >= 31))

int32 G12;

int_P[0..1999] G13;

invariant valid_G13 :
((\offset_min(G13) <= 0) && (\offset_max(G13) >= 1999))

int_P[..] ptr_bas_loc_ram;

int32 G15;

real G16;

real G17;

real G18;

real G19;

real G20;

real G21;

real G22;

int32 G23;

real G24;

real G25;

real G26;

real G27;

real G28;

real G29;

real G30;

real G31;

real G32;

int_P[..] G33;

int_P[..] G34;

unit F6()
behavior default:
  assumes true;
  ensures (C_100 : true);
{  
   (var real V9);
   
   (var real V10);
   
   (var real V11);
   
   (var real V12);
   
   (var real V13);
   
   (var real V14);
   
   (var real V15);
   
   (var real V16);
   
   (var real V17);
   
   (var int32 V18);
   
   (var int_P[..] ptr_bas_loc);
   
   (var int32 V20);
   
   (var int32 V21);
   
   (var int32 V22);
   
   (var int32 V23);
   
   {  (C_21 : (V18 = (C_20 : Frama_C_interval(2, 2000))));
      (C_23 : (G15 = (C_22 : Frama_C_interval(0, 11))));
      (C_24 : (ptr_bas_loc = G13));
      (C_25 : (G33 = ptr_bas_loc));
      (if (V18 >= 2) then 
      {  (C_35 : (G4 = (C_34 : ((C_33 : ((C_32 : ((C_31 : (V18 /
                                                            (C_30 : (
                                                            (C_29 : (G5 + 1)) :> int32)))) :> int32)) +
                                          1)) :> int32))));
         (C_37 : (V9 = (C_36 : (0.0 :> real))));
         (C_41 : (V10 = (C_40 : ((C_39 : (511.5 * (C_38 : (G20 :> real)))) :> real))));
         (C_45 : (V11 = (C_44 : ((C_43 : (511.5 * (C_42 : (G20 :> real)))) :> real))));
         (C_47 : (V12 = (C_46 : (0.0 :> real))));
         (C_49 : (V13 = (C_48 : (0.0 :> real))));
         (C_51 : (V14 = (C_50 : (0.0 :> real))));
         (C_53 : (V15 = (C_52 : (0.0 :> real))));
         (C_55 : (V20 = (C_54 : F2(G15))));
         (C_57 : (G18 = (C_56 : (G8 + V20).float_M)));
         (C_59 : (V21 = (C_58 : F3(G15))));
         (C_63 : (G16 = (C_62 : ((C_61 : (G9 + V21).float_M) /
                                  (C_60 : (G1 :> real))))));
         (C_65 : (V22 = (C_64 : F3(G15))));
         (C_67 : (G17 = (C_66 : (G10 + V22).float_M)));
         (C_69 : (V23 = (C_68 : F4(G15))));
         (C_71 : (G19 = (C_70 : (G11 + V23).float_M)));
         (C_76 : (G21 = (C_75 : ((C_74 : (1.0 /
                                           (C_73 : ((C_72 : (G16 :> real)) +
                                                     1.0)))) :> real))));
         (C_78 : (V16 = (C_77 : (G17 * G21))));
         (C_84 : (V17 = (C_83 : ((C_82 : ((C_81 : ((C_80 : (G16 :> real)) -
                                                    1.0)) *
                                           (C_79 : (G21 :> real)))) :> real))));
         (C_87 : (G22 = (C_86 : ((C_85 : (G18 * G16)) * G21))));
         (C_88 : (G23 = 0));
         (C_89 : (G24 = V9));
         (C_90 : (G25 = V10));
         (C_91 : (G26 = V11));
         (C_92 : (G27 = V12));
         (C_93 : (G28 = V13));
         (C_94 : (G29 = V14));
         (C_95 : (G30 = V15));
         (C_96 : (G31 = V16));
         (C_97 : (G32 = V17));
         (C_98 : (G12 = V18));
         (C_99 : (ptr_bas_loc_ram = ptr_bas_loc))
      } else 
      {  (C_27 : ((C_26 : (G3 + G15).int_M) = 0));
         (C_28 : (G4 = 0))
      });
      
      (return ())
   }
}

unit F7()
behavior default:
  assumes true;
  ensures (C_207 : true);
{  
   (var real V24);
   
   (var real V25);
   
   (var real V26);
   
   (var real V27);
   
   (var real V28);
   
   (var real V29);
   
   (var real V30);
   
   (var real V31);
   
   (var real V32);
   
   (var int32 V33);
   
   (var int32 V34);
   
   (var int32 V35);
   
   (var int_P[..] ptr_bas_loc_0);
   
   (var int32 V37);
   
   {  (if (G12 >= 2) then 
      {  (C_101 : (V24 = G24));
         (C_102 : (V25 = G25));
         (C_103 : (V26 = G26));
         (C_104 : (V27 = G27));
         (C_105 : (V28 = G28));
         (C_106 : (V29 = G29));
         (C_107 : (V30 = G30));
         (C_108 : (V31 = G31));
         (C_109 : (V32 = G32));
         (C_110 : (V33 = G12));
         (C_111 : (ptr_bas_loc_0 = ptr_bas_loc_ram));
         (C_116 : (V35 = (C_115 : ((C_114 : ((C_113 : ((C_112 : (G23 + G5)) :> int32)) -
                                              2)) :> int32))));
         (if (V35 >= (C_121 : ((C_120 : (V33 - 2)) :> int32))) then (C_119 : (V35 = 
                                                                    (C_118 : (
                                                                    (C_117 : 
                                                                    (V33 -
                                                                    2)) :> int32)))) else ());
         (C_122 : (V34 = G23));
         
         {  
            loop 
            while (true)
            {  
               {  (if (V34 <= V35) then () else 
                  (goto while_0_break));
                  (C_125 : (V24 = (C_124 : ((C_123 : ptr_bas_loc_0.int_M) :> real))));
                  (C_127 : (ptr_bas_loc_0 = (C_126 : (ptr_bas_loc_0 + 1))));
                  (C_133 : (V27 = (C_132 : ((C_131 : ((C_130 : (V24 - V26)) +
                                                       (C_129 : (V31 * V28)))) +
                                             (C_128 : (V32 * V29))))));
                  (if ((C_138 : (V27 :> real)) >= 0.0) then (C_137 : (V30 = 
                                                            (C_136 : 
                                                            (V30 +
                                                              V27)))) else 
                  (C_135 : (V30 = (C_134 : (V30 - V27)))));
                  (C_139 : (V26 = V25));
                  (C_140 : (V25 = V24));
                  (C_141 : (V29 = V28));
                  (C_142 : (V28 = V27));
                  (C_145 : (V34 = (C_144 : ((C_143 : (V34 + 1)) :> int32))))
               }
            };
            (while_0_break : ())
         };
         (if (V35 >= (C_206 : ((C_205 : (V33 - 2)) :> int32))) then 
         {  (C_162 : (V24 = (C_161 : ((C_160 : ptr_bas_loc_0.int_M) :> real))));
            (C_168 : (V27 = (C_167 : ((C_166 : ((C_165 : (V24 - V26)) +
                                                 (C_164 : (V31 * V28)))) +
                                       (C_163 : (V32 * V29))))));
            (if ((C_181 : (V27 :> real)) >= 0.0) then (C_180 : (V30 = 
                                                      (C_179 : ((C_178 : 
                                                                ((C_177 : 
                                                                 (2.0 *
                                                                   (C_176 : (V30 :> real)))) +
                                                                  (C_175 : (V27 :> real)))) :> real)))) else 
            (C_174 : (V30 = (C_173 : ((C_172 : ((C_171 : (2.0 *
                                                           (C_170 : (V30 :> real)))) -
                                                 (C_169 : (V27 :> real)))) :> real)))));
            (C_185 : (V30 = (C_184 : ((C_183 : ((C_182 : (G22 * G19)) * V30)) /
                                       G20))));
            (C_189 : (V30 = (C_188 : ((C_187 : ((C_186 : (V30 :> real)) *
                                                 64.0)) :> real))));
            (if ((C_196 : (V30 :> real)) <= 65535.0) then (C_195 : ((C_194 : 
                                                                    (G3 +
                                                                    G15).int_M) = 
                                                          (C_193 : ((C_192 : (V30 :> integer)) :> int32)))) else 
            (C_191 : ((C_190 : (G3 + G15).int_M) = 65535)));
            (C_198 : (V37 = (C_197 : F5(G15))));
            (C_201 : (G6 = (C_200 : ((C_199 : (G6 | V37)) :> int32))));
            (if (G6 != 0) then (C_203 : (G7 = 1)) else (C_202 : (G7 = 0)));
            (C_204 : (G34 = ptr_bas_loc_0))
         } else 
         {  (C_148 : (G23 = (C_147 : ((C_146 : (V35 + 1)) :> int32))));
            (C_149 : (G24 = V24));
            (C_150 : (G25 = V25));
            (C_151 : (G26 = V26));
            (C_152 : (G27 = V27));
            (C_153 : (G28 = V28));
            (C_154 : (G29 = V29));
            (C_155 : (G30 = V30));
            (C_156 : (G31 = V31));
            (C_157 : (G32 = V32));
            (C_158 : (G12 = V33));
            (C_159 : (ptr_bas_loc_ram = ptr_bas_loc_0))
         })
      } else ());
      
      (return ())
   }
}

unit main()
behavior default:
  assumes true;
  ensures (C_221 : true);
{  
   (var int32 V38);
   
   {  (C_208 : __globinit_whole_program());
      (C_212 : (G20 = (C_211 : Frama_C_float_interval((C_209 : (1.0 :> real)),
                                                      (C_210 : (1000.0 :> real))))));
      (C_214 : (G5 = (C_213 : Frama_C_interval(10, 2000))));
      (C_215 : F6());
      (C_216 : (V38 = 0));
      
      {  
         loop 
         while (true)
         {  
            {  (if (V38 < G4) then () else 
               (goto while_1_break));
               (C_217 : F7());
               (C_220 : (V38 = (C_219 : ((C_218 : (V38 + 1)) :> int32))))
            }
         };
         (while_1_break : ())
      };
      
      (return ())
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs renamed1.jessie/renamed1.cloc renamed1.jessie/renamed1.jc
type G10_4

type G11_5

type G13_6

type G3_1

type G8_2

type G9_3

type char_P

type float_P

type int32

type int8

type int_P

type padding

type void_P

logic G1:  -> int32

logic G10:  -> float_P pointer

logic G11:  -> float_P pointer

logic G13:  -> int_P pointer

logic G2:  -> int32

logic G3:  -> int_P pointer

logic G8:  -> float_P pointer

logic G9:  -> float_P pointer

exception Goto_while_0_break_exc of unit

exception Goto_while_1_break_exc of unit

exception Loop_continue_exc of unit

exception Loop_exit_exc of unit

exception Return_label_exc of unit

logic bitvector_of_char_P: char_P pointer -> bitvector

logic char_P_of_bitvector: bitvector -> char_P pointer

axiom bitvector_of_char_P_of_char_P_of_bitvector :
 (forall x:bitvector. (bitvector_of_char_P(char_P_of_bitvector(x)) = x))

logic bitvector_of_float_P: float_P pointer -> bitvector

logic float_P_of_bitvector: bitvector -> float_P pointer

axiom bitvector_of_float_P_of_float_P_of_bitvector :
 (forall x:bitvector. (bitvector_of_float_P(float_P_of_bitvector(x)) = x))

logic bitvector_of_int32: int32 -> bitvector

logic int32_of_bitvector: bitvector -> int32

axiom bitvector_of_int32_of_int32_of_bitvector :
 (forall x:bitvector. (bitvector_of_int32(int32_of_bitvector(x)) = x))

logic bitvector_of_int8: int8 -> bitvector

logic int8_of_bitvector: bitvector -> int8

axiom bitvector_of_int8_of_int8_of_bitvector :
 (forall x:bitvector. (bitvector_of_int8(int8_of_bitvector(x)) = x))

logic bitvector_of_int_P: int_P pointer -> bitvector

logic int_P_of_bitvector: bitvector -> int_P pointer

axiom bitvector_of_int_P_of_int_P_of_bitvector :
 (forall x:bitvector. (bitvector_of_int_P(int_P_of_bitvector(x)) = x))

logic bitvector_of_void_P: void_P pointer -> bitvector

logic void_P_of_bitvector: bitvector -> void_P pointer

axiom bitvector_of_void_P_of_void_P_of_bitvector :
 (forall x:bitvector. (bitvector_of_void_P(void_P_of_bitvector(x)) = x))

logic char_P_tag:  -> char_P tag_id

axiom char_P_int : (int_of_tag(char_P_tag) = (1))

axiom char_P_of_bitvector_of_bitvector_of_char_P :
 (forall x:char_P pointer. (char_P_of_bitvector(bitvector_of_char_P(x)) = x))

logic char_P_of_pointer_address: unit pointer -> char_P pointer

axiom char_P_of_pointer_address_of_pointer_addr :
 (forall p:char_P pointer.
  (p = char_P_of_pointer_address(pointer_address(p))))

axiom char_P_parenttag_bottom : parenttag(char_P_tag, bottom_tag)

axiom char_P_tags :
 (forall x:char_P pointer.
  (forall char_P_tag_table:char_P tag_table.
   instanceof(char_P_tag_table, x, char_P_tag)))

logic integer_of_int32: int32 -> int

predicate eq_int32(x:int32,
 y:int32) =
 eq_int(integer_of_int32(x), integer_of_int32(y))

logic integer_of_int8: int8 -> int

predicate eq_int8(x:int8,
 y:int8) =
 eq_int(integer_of_int8(x), integer_of_int8(y))

logic float_P_tag:  -> float_P tag_id

axiom float_P_int : (int_of_tag(float_P_tag) = (1))

axiom float_P_of_bitvector_of_bitvector_of_float_P :
 (forall x:float_P pointer.
  (float_P_of_bitvector(bitvector_of_float_P(x)) = x))

logic float_P_of_pointer_address: unit pointer -> float_P pointer

axiom float_P_of_pointer_address_of_pointer_addr :
 (forall p:float_P pointer.
  (p = float_P_of_pointer_address(pointer_address(p))))

axiom float_P_parenttag_bottom : parenttag(float_P_tag, bottom_tag)

axiom float_P_tags :
 (forall x:float_P pointer.
  (forall float_P_tag_table:float_P tag_table.
   instanceof(float_P_tag_table, x, float_P_tag)))

logic int32_of_integer: int -> int32

axiom int32_coerce :
 (forall x:int.
  ((le_int((-2147483648), x) and le_int(x, (2147483647))) ->
   eq_int(integer_of_int32(int32_of_integer(x)), x)))

axiom int32_of_bitvector_of_bitvector_of_int32 :
 (forall x:int32. eq_int32(int32_of_bitvector(bitvector_of_int32(x)), x))

axiom int32_range :
 (forall x:int32.
  (le_int((-2147483648), integer_of_int32(x))
  and le_int(integer_of_int32(x), (2147483647))))

logic int8_of_integer: int -> int8

axiom int8_coerce :
 (forall x:int.
  ((le_int((-128), x) and le_int(x, (127))) ->
   eq_int(integer_of_int8(int8_of_integer(x)), x)))

axiom int8_of_bitvector_of_bitvector_of_int8 :
 (forall x:int8. eq_int8(int8_of_bitvector(bitvector_of_int8(x)), x))

axiom int8_range :
 (forall x:int8.
  (le_int((-128), integer_of_int8(x)) and le_int(integer_of_int8(x), (127))))

logic int_P_tag:  -> int_P tag_id

axiom int_P_int : (int_of_tag(int_P_tag) = (1))

axiom int_P_of_bitvector_of_bitvector_of_int_P :
 (forall x:int_P pointer. (int_P_of_bitvector(bitvector_of_int_P(x)) = x))

logic int_P_of_pointer_address: unit pointer -> int_P pointer

axiom int_P_of_pointer_address_of_pointer_addr :
 (forall p:int_P pointer. (p = int_P_of_pointer_address(pointer_address(p))))

axiom int_P_parenttag_bottom : parenttag(int_P_tag, bottom_tag)

axiom int_P_tags :
 (forall x:int_P pointer.
  (forall int_P_tag_table:int_P tag_table.
   instanceof(int_P_tag_table, x, int_P_tag)))

predicate left_valid_struct_char_P(p:char_P pointer,
 a:int,
 char_P_alloc_table:char_P alloc_table) =
 (offset_min(char_P_alloc_table, p) <= a)

predicate left_valid_struct_float_P(p:float_P pointer,
 a:int,
 float_P_alloc_table:float_P alloc_table) =
 (offset_min(float_P_alloc_table, p) <= a)

predicate left_valid_struct_int_P(p:int_P pointer,
 a:int,
 int_P_alloc_table:int_P alloc_table) =
 (offset_min(int_P_alloc_table, p) <= a)

predicate left_valid_struct_void_P(p:void_P pointer,
 a:int,
 void_P_alloc_table:void_P alloc_table) =
 (offset_min(void_P_alloc_table, p) <= a)

axiom pointer_addr_of_char_P_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(char_P_of_pointer_address(p))))

axiom pointer_addr_of_float_P_of_pointer_address :
 (forall p:unit pointer.
  (p = pointer_address(float_P_of_pointer_address(p))))

axiom pointer_addr_of_int_P_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(int_P_of_pointer_address(p))))

logic void_P_of_pointer_address: unit pointer -> void_P pointer

axiom pointer_addr_of_void_P_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(void_P_of_pointer_address(p))))

predicate right_valid_struct_char_P(p:char_P pointer,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 (offset_max(char_P_alloc_table, p) >= b)

predicate right_valid_struct_float_P(p:float_P pointer,
 b:int,
 float_P_alloc_table:float_P alloc_table) =
 (offset_max(float_P_alloc_table, p) >= b)

predicate right_valid_struct_int_P(p:int_P pointer,
 b:int,
 int_P_alloc_table:int_P alloc_table) =
 (offset_max(int_P_alloc_table, p) >= b)

predicate right_valid_struct_void_P(p:void_P pointer,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 (offset_max(void_P_alloc_table, p) >= b)

predicate strict_valid_root_char_P(p:char_P pointer,
 a:int,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) = a)
 and (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_root_float_P(p:float_P pointer,
 a:int,
 b:int,
 float_P_alloc_table:float_P alloc_table) =
 ((offset_min(float_P_alloc_table, p) = a)
 and (offset_max(float_P_alloc_table, p) = b))

predicate strict_valid_root_int_P(p:int_P pointer,
 a:int,
 b:int,
 int_P_alloc_table:int_P alloc_table) =
 ((offset_min(int_P_alloc_table, p) = a)
 and (offset_max(int_P_alloc_table, p) = b))

predicate strict_valid_root_void_P(p:void_P pointer,
 a:int,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) = a)
 and (offset_max(void_P_alloc_table, p) = b))

predicate strict_valid_struct_char_P(p:char_P pointer,
 a:int,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) = a)
 and (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_struct_float_P(p:float_P pointer,
 a:int,
 b:int,
 float_P_alloc_table:float_P alloc_table) =
 ((offset_min(float_P_alloc_table, p) = a)
 and (offset_max(float_P_alloc_table, p) = b))

predicate strict_valid_struct_int_P(p:int_P pointer,
 a:int,
 b:int,
 int_P_alloc_table:int_P alloc_table) =
 ((offset_min(int_P_alloc_table, p) = a)
 and (offset_max(int_P_alloc_table, p) = b))

predicate strict_valid_struct_void_P(p:void_P pointer,
 a:int,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) = a)
 and (offset_max(void_P_alloc_table, p) = b))

predicate valid_G10(float_P_G10_4_alloc_table:float_P alloc_table) =
 (le_int(offset_min(float_P_G10_4_alloc_table, G10), (0))
 and ge_int(offset_max(float_P_G10_4_alloc_table, G10), (63)))

predicate valid_G11(float_P_G11_5_alloc_table:float_P alloc_table) =
 (le_int(offset_min(float_P_G11_5_alloc_table, G11), (0))
 and ge_int(offset_max(float_P_G11_5_alloc_table, G11), (31)))

predicate valid_G13(int_P_G13_6_alloc_table:int_P alloc_table) =
 (le_int(offset_min(int_P_G13_6_alloc_table, G13), (0))
 and ge_int(offset_max(int_P_G13_6_alloc_table, G13), (1999)))

predicate valid_G3(int_P_G3_1_alloc_table:int_P alloc_table) =
 (le_int(offset_min(int_P_G3_1_alloc_table, G3), (0))
 and ge_int(offset_max(int_P_G3_1_alloc_table, G3), (63)))

predicate valid_G8(float_P_G8_2_alloc_table:float_P alloc_table) =
 (le_int(offset_min(float_P_G8_2_alloc_table, G8), (0))
 and ge_int(offset_max(float_P_G8_2_alloc_table, G8), (63)))

predicate valid_G9(float_P_G9_3_alloc_table:float_P alloc_table) =
 (le_int(offset_min(float_P_G9_3_alloc_table, G9), (0))
 and ge_int(offset_max(float_P_G9_3_alloc_table, G9), (63)))

predicate valid_bitvector_struct_char_P(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_float_P(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_int_P(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_void_P(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_root_char_P(p:char_P pointer,
 a:int,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) <= a)
 and (offset_max(char_P_alloc_table, p) >= b))

predicate valid_root_float_P(p:float_P pointer,
 a:int,
 b:int,
 float_P_alloc_table:float_P alloc_table) =
 ((offset_min(float_P_alloc_table, p) <= a)
 and (offset_max(float_P_alloc_table, p) >= b))

predicate valid_root_int_P(p:int_P pointer,
 a:int,
 b:int,
 int_P_alloc_table:int_P alloc_table) =
 ((offset_min(int_P_alloc_table, p) <= a)
 and (offset_max(int_P_alloc_table, p) >= b))

predicate valid_root_void_P(p:void_P pointer,
 a:int,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) <= a)
 and (offset_max(void_P_alloc_table, p) >= b))

predicate valid_struct_char_P(p:char_P pointer,
 a:int,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) <= a)
 and (offset_max(char_P_alloc_table, p) >= b))

predicate valid_struct_float_P(p:float_P pointer,
 a:int,
 b:int,
 float_P_alloc_table:float_P alloc_table) =
 ((offset_min(float_P_alloc_table, p) <= a)
 and (offset_max(float_P_alloc_table, p) >= b))

predicate valid_struct_int_P(p:int_P pointer,
 a:int,
 b:int,
 int_P_alloc_table:int_P alloc_table) =
 ((offset_min(int_P_alloc_table, p) <= a)
 and (offset_max(int_P_alloc_table, p) >= b))

predicate valid_struct_void_P(p:void_P pointer,
 a:int,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) <= a)
 and (offset_max(void_P_alloc_table, p) >= b))

logic void_P_tag:  -> void_P tag_id

axiom void_P_int : (int_of_tag(void_P_tag) = (1))

axiom void_P_of_bitvector_of_bitvector_of_void_P :
 (forall x:void_P pointer. (void_P_of_bitvector(bitvector_of_void_P(x)) = x))

axiom void_P_of_pointer_address_of_pointer_addr :
 (forall p:void_P pointer.
  (p = void_P_of_pointer_address(pointer_address(p))))

axiom void_P_parenttag_bottom : parenttag(void_P_tag, bottom_tag)

axiom void_P_tags :
 (forall x:void_P pointer.
  (forall void_P_tag_table:void_P tag_table.
   instanceof(void_P_tag_table, x, void_P_tag)))

parameter int_P_G13_6_alloc_table : int_P alloc_table ref

parameter int_P_G3_1_alloc_table : int_P alloc_table ref

parameter float_P_G11_5_alloc_table : float_P alloc_table ref

parameter float_P_G10_4_alloc_table : float_P alloc_table ref

parameter float_P_G9_3_alloc_table : float_P alloc_table ref

parameter float_P_G8_2_alloc_table : float_P alloc_table ref

parameter Frama_C_entropy_source : int32 ref

parameter F2 :
 V2:int32 ->
  { } int32
  reads float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table
  writes Frama_C_entropy_source
  { (JC_192:
    ((JC_186: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_187: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_188: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_189: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_190: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_191: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter F2_requires :
 V2:int32 ->
  { (JC_167:
    ((JC_161: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_162: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_163: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_164: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_165: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_166: valid_G13(int_P_G13_6_alloc_table))))))))}
  int32
  reads float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table
  writes Frama_C_entropy_source
  { (JC_192:
    ((JC_186: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_187: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_188: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_189: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_190: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_191: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter F3 :
 V4:int32 ->
  { } int32
  reads float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table
  writes Frama_C_entropy_source
  { (JC_228:
    ((JC_222: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_223: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_224: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_225: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_226: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_227: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter F3_requires :
 V4:int32 ->
  { (JC_203:
    ((JC_197: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_198: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_199: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_200: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_201: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_202: valid_G13(int_P_G13_6_alloc_table))))))))}
  int32
  reads float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table
  writes Frama_C_entropy_source
  { (JC_228:
    ((JC_222: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_223: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_224: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_225: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_226: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_227: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter F4 :
 V6:int32 ->
  { } int32
  reads float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table
  writes Frama_C_entropy_source
  { (JC_264:
    ((JC_258: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_259: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_260: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_261: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_262: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_263: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter F4_requires :
 V6:int32 ->
  { (JC_239:
    ((JC_233: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_234: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_235: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_236: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_237: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_238: valid_G13(int_P_G13_6_alloc_table))))))))}
  int32
  reads float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table
  writes Frama_C_entropy_source
  { (JC_264:
    ((JC_258: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_259: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_260: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_261: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_262: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_263: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter F5 :
 V8:int32 ->
  { } int32
  reads float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table
  { (JC_300:
    ((JC_294: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_295: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_296: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_297: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_298: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_299: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter F5_requires :
 V8:int32 ->
  { (JC_275:
    ((JC_269: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_270: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_271: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_272: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_273: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_274: valid_G13(int_P_G13_6_alloc_table))))))))}
  int32
  reads float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table
  { (JC_300:
    ((JC_294: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_295: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_296: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_297: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_298: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_299: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter float_P_float_M_G11_5 : (float_P, real) memory ref

parameter float_P_float_M_G10_4 : (float_P, real) memory ref

parameter float_P_float_M_G9_3 : (float_P, real) memory ref

parameter float_P_float_M_G8_2 : (float_P, real) memory ref

parameter G21 : real ref

parameter G20 : real ref

parameter G18 : real ref

parameter G17 : real ref

parameter G16 : real ref

parameter G15 : int32 ref

parameter G5 : int32 ref

parameter int_P_int_M_G3_1 : (int_P, int32) memory ref

parameter G33 : int_P pointer ref

parameter G32 : real ref

parameter G31 : real ref

parameter G30 : real ref

parameter G29 : real ref

parameter G28 : real ref

parameter G27 : real ref

parameter G26 : real ref

parameter G25 : real ref

parameter G24 : real ref

parameter G23 : int32 ref

parameter G22 : real ref

parameter G19 : real ref

parameter ptr_bas_loc_ram : int_P pointer ref

parameter G12 : int32 ref

parameter G4 : int32 ref

parameter F6 :
 tt:unit ->
  { } unit
  reads G15,G16,G17,G18,G20,G21,G5,float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,float_P_float_M_G10_4,float_P_float_M_G11_5,float_P_float_M_G8_2,float_P_float_M_G9_3,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table
  writes Frama_C_entropy_source,G12,G15,G16,G17,G18,G19,G21,G22,G23,G24,G25,G26,G27,G28,G29,G30,G31,G32,G33,G4,int_P_int_M_G3_1,ptr_bas_loc_ram
  { (JC_340:
    ((JC_334: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_335: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_336: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_337: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_338: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_339: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter F6_requires :
 tt:unit ->
  { (JC_315:
    ((JC_309: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_310: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_311: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_312: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_313: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_314: valid_G13(int_P_G13_6_alloc_table))))))))}
  unit
  reads G15,G16,G17,G18,G20,G21,G5,float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,float_P_float_M_G10_4,float_P_float_M_G11_5,float_P_float_M_G8_2,float_P_float_M_G9_3,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table
  writes Frama_C_entropy_source,G12,G15,G16,G17,G18,G19,G21,G22,G23,G24,G25,G26,G27,G28,G29,G30,G31,G32,G33,G4,int_P_int_M_G3_1,ptr_bas_loc_ram
  { (JC_340:
    ((JC_334: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_335: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_336: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_337: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_338: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_339: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter int_P_int_M_G13_6 : (int_P, int32) memory ref

parameter G6 : int32 ref

parameter G34 : int_P pointer ref

parameter G7 : int32 ref

parameter F7 :
 tt:unit ->
  { } unit
  reads G12,G15,G19,G20,G22,G23,G24,G25,G26,G27,G28,G29,G30,G31,G32,G5,G6,float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table,int_P_int_M_G13_6,ptr_bas_loc_ram
  writes G12,G23,G24,G25,G26,G27,G28,G29,G30,G31,G32,G34,G6,G7,int_P_int_M_G3_1,ptr_bas_loc_ram
  { (JC_423:
    ((JC_417: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_418: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_419: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_420: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_421: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_422: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter F7_requires :
 tt:unit ->
  { (JC_398:
    ((JC_392: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_393: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_394: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_395: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_396: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_397: valid_G13(int_P_G13_6_alloc_table))))))))}
  unit
  reads G12,G15,G19,G20,G22,G23,G24,G25,G26,G27,G28,G29,G30,G31,G32,G5,G6,float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table,int_P_int_M_G13_6,ptr_bas_loc_ram
  writes G12,G23,G24,G25,G26,G27,G28,G29,G30,G31,G32,G34,G6,G7,int_P_int_M_G3_1,ptr_bas_loc_ram
  { (JC_423:
    ((JC_417: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_418: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_419: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_420: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_421: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_422: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter Frama_C_float_interval :
 min:real ->
  max:real ->
   { } real
   reads float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table
   writes Frama_C_entropy_source
   { (JC_160:
     ((JC_154: valid_G3(int_P_G3_1_alloc_table))
     and ((JC_155: valid_G8(float_P_G8_2_alloc_table))
         and ((JC_156: valid_G9(float_P_G9_3_alloc_table))
             and ((JC_157: valid_G10(float_P_G10_4_alloc_table))
                 and ((JC_158: valid_G11(float_P_G11_5_alloc_table))
                     and (JC_159: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter Frama_C_float_interval_requires :
 min:real ->
  max:real ->
   { (JC_133:
     ((JC_127: valid_G3(int_P_G3_1_alloc_table))
     and ((JC_128: valid_G8(float_P_G8_2_alloc_table))
         and ((JC_129: valid_G9(float_P_G9_3_alloc_table))
             and ((JC_130: valid_G10(float_P_G10_4_alloc_table))
                 and ((JC_131: valid_G11(float_P_G11_5_alloc_table))
                     and (JC_132: valid_G13(int_P_G13_6_alloc_table))))))))}
   real
   reads float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table
   writes Frama_C_entropy_source
   { (JC_160:
     ((JC_154: valid_G3(int_P_G3_1_alloc_table))
     and ((JC_155: valid_G8(float_P_G8_2_alloc_table))
         and ((JC_156: valid_G9(float_P_G9_3_alloc_table))
             and ((JC_157: valid_G10(float_P_G10_4_alloc_table))
                 and ((JC_158: valid_G11(float_P_G11_5_alloc_table))
                     and (JC_159: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter Frama_C_interval :
 min_0:int32 ->
  max_0:int32 ->
   { } int32
   reads float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table
   writes Frama_C_entropy_source
   { (JC_126:
     ((JC_120: valid_G3(int_P_G3_1_alloc_table))
     and ((JC_121: valid_G8(float_P_G8_2_alloc_table))
         and ((JC_122: valid_G9(float_P_G9_3_alloc_table))
             and ((JC_123: valid_G10(float_P_G10_4_alloc_table))
                 and ((JC_124: valid_G11(float_P_G11_5_alloc_table))
                     and (JC_125: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter Frama_C_interval_requires :
 min_0:int32 ->
  max_0:int32 ->
   { (JC_99:
     ((JC_93: valid_G3(int_P_G3_1_alloc_table))
     and ((JC_94: valid_G8(float_P_G8_2_alloc_table))
         and ((JC_95: valid_G9(float_P_G9_3_alloc_table))
             and ((JC_96: valid_G10(float_P_G10_4_alloc_table))
                 and ((JC_97: valid_G11(float_P_G11_5_alloc_table))
                     and (JC_98: valid_G13(int_P_G13_6_alloc_table))))))))}
   int32
   reads float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table
   writes Frama_C_entropy_source
   { (JC_126:
     ((JC_120: valid_G3(int_P_G3_1_alloc_table))
     and ((JC_121: valid_G8(float_P_G8_2_alloc_table))
         and ((JC_122: valid_G9(float_P_G9_3_alloc_table))
             and ((JC_123: valid_G10(float_P_G10_4_alloc_table))
                 and ((JC_124: valid_G11(float_P_G11_5_alloc_table))
                     and (JC_125: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter __globinit_whole_program :
 tt:unit ->
  { } unit
  reads float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table
  { (JC_92:
    ((JC_86: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_87: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_88: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_89: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_90: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_91: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter __globinit_whole_program_requires :
 tt:unit ->
  { (JC_67:
    ((JC_61: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_62: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_63: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_64: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_65: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_66: valid_G13(int_P_G13_6_alloc_table))))))))}
  unit
  reads float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table
  { (JC_92:
    ((JC_86: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_87: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_88: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_89: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_90: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_91: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter alloc_bitvector_struct_char_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_char_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_char_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_char_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_float_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_float_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_float_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_float_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_int_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_int_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_int_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_int_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_void_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_void_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_void_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_void_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter char_P_alloc_table : char_P alloc_table ref

parameter char_P_tag_table : char_P tag_table ref

parameter alloc_struct_char_P :
 n:int ->
  char_P_alloc_table:char_P alloc_table ref ->
   char_P_tag_table:char_P tag_table ref ->
    { } char_P pointer writes char_P_alloc_table,char_P_tag_table
    { (strict_valid_struct_char_P(result, (0), sub_int(n, (1)),
       char_P_alloc_table)
      and (alloc_extends(char_P_alloc_table@, char_P_alloc_table)
          and (alloc_fresh(char_P_alloc_table@, result, n)
              and instanceof(char_P_tag_table, result, char_P_tag)))) }

parameter alloc_struct_char_P_requires :
 n:int ->
  char_P_alloc_table:char_P alloc_table ref ->
   char_P_tag_table:char_P tag_table ref ->
    { ge_int(n, (0))} char_P pointer
    writes char_P_alloc_table,char_P_tag_table
    { (strict_valid_struct_char_P(result, (0), sub_int(n, (1)),
       char_P_alloc_table)
      and (alloc_extends(char_P_alloc_table@, char_P_alloc_table)
          and (alloc_fresh(char_P_alloc_table@, result, n)
              and instanceof(char_P_tag_table, result, char_P_tag)))) }

parameter float_P_alloc_table : float_P alloc_table ref

parameter float_P_tag_table : float_P tag_table ref

parameter alloc_struct_float_P :
 n:int ->
  float_P_alloc_table:float_P alloc_table ref ->
   float_P_tag_table:float_P tag_table ref ->
    { } float_P pointer writes float_P_alloc_table,float_P_tag_table
    { (strict_valid_struct_float_P(result, (0), sub_int(n, (1)),
       float_P_alloc_table)
      and (alloc_extends(float_P_alloc_table@, float_P_alloc_table)
          and (alloc_fresh(float_P_alloc_table@, result, n)
              and instanceof(float_P_tag_table, result, float_P_tag)))) }

parameter alloc_struct_float_P_requires :
 n:int ->
  float_P_alloc_table:float_P alloc_table ref ->
   float_P_tag_table:float_P tag_table ref ->
    { ge_int(n, (0))} float_P pointer
    writes float_P_alloc_table,float_P_tag_table
    { (strict_valid_struct_float_P(result, (0), sub_int(n, (1)),
       float_P_alloc_table)
      and (alloc_extends(float_P_alloc_table@, float_P_alloc_table)
          and (alloc_fresh(float_P_alloc_table@, result, n)
              and instanceof(float_P_tag_table, result, float_P_tag)))) }

parameter int_P_alloc_table : int_P alloc_table ref

parameter int_P_tag_table : int_P tag_table ref

parameter alloc_struct_int_P :
 n:int ->
  int_P_alloc_table:int_P alloc_table ref ->
   int_P_tag_table:int_P tag_table ref ->
    { } int_P pointer writes int_P_alloc_table,int_P_tag_table
    { (strict_valid_struct_int_P(result, (0), sub_int(n, (1)),
       int_P_alloc_table)
      and (alloc_extends(int_P_alloc_table@, int_P_alloc_table)
          and (alloc_fresh(int_P_alloc_table@, result, n)
              and instanceof(int_P_tag_table, result, int_P_tag)))) }

parameter alloc_struct_int_P_requires :
 n:int ->
  int_P_alloc_table:int_P alloc_table ref ->
   int_P_tag_table:int_P tag_table ref ->
    { ge_int(n, (0))} int_P pointer writes int_P_alloc_table,int_P_tag_table
    { (strict_valid_struct_int_P(result, (0), sub_int(n, (1)),
       int_P_alloc_table)
      and (alloc_extends(int_P_alloc_table@, int_P_alloc_table)
          and (alloc_fresh(int_P_alloc_table@, result, n)
              and instanceof(int_P_tag_table, result, int_P_tag)))) }

parameter void_P_alloc_table : void_P alloc_table ref

parameter void_P_tag_table : void_P tag_table ref

parameter alloc_struct_void_P :
 n:int ->
  void_P_alloc_table:void_P alloc_table ref ->
   void_P_tag_table:void_P tag_table ref ->
    { } void_P pointer writes void_P_alloc_table,void_P_tag_table
    { (strict_valid_struct_void_P(result, (0), sub_int(n, (1)),
       void_P_alloc_table)
      and (alloc_extends(void_P_alloc_table@, void_P_alloc_table)
          and (alloc_fresh(void_P_alloc_table@, result, n)
              and instanceof(void_P_tag_table, result, void_P_tag)))) }

parameter alloc_struct_void_P_requires :
 n:int ->
  void_P_alloc_table:void_P alloc_table ref ->
   void_P_tag_table:void_P tag_table ref ->
    { ge_int(n, (0))} void_P pointer
    writes void_P_alloc_table,void_P_tag_table
    { (strict_valid_struct_void_P(result, (0), sub_int(n, (1)),
       void_P_alloc_table)
      and (alloc_extends(void_P_alloc_table@, void_P_alloc_table)
          and (alloc_fresh(void_P_alloc_table@, result, n)
              and instanceof(void_P_tag_table, result, void_P_tag)))) }

parameter any_int32 : unit -> { } int32 { true }

parameter any_int8 : unit -> { } int8 { true }

parameter int32_of_integer_ :
 x:int ->
  { (le_int((-2147483648), x) and le_int(x, (2147483647)))} int32
  { eq_int(integer_of_int32(result), x) }

parameter int8_of_integer_ :
 x:int ->
  { (le_int((-128), x) and le_int(x, (127)))} int8
  { eq_int(integer_of_int8(result), x) }

parameter main :
 tt:unit ->
  { } unit
  reads G12,G15,G16,G17,G18,G19,G20,G21,G22,G23,G24,G25,G26,G27,G28,G29,G30,G31,G32,G4,G5,G6,float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,float_P_float_M_G10_4,float_P_float_M_G11_5,float_P_float_M_G8_2,float_P_float_M_G9_3,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table,int_P_int_M_G13_6,ptr_bas_loc_ram
  writes Frama_C_entropy_source,G12,G15,G16,G17,G18,G19,G20,G21,G22,G23,G24,G25,G26,G27,G28,G29,G30,G31,G32,G33,G34,G4,G5,G6,G7,int_P_int_M_G3_1,ptr_bas_loc_ram
  { (JC_491:
    ((JC_485: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_486: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_487: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_488: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_489: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_490: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter main_requires :
 tt:unit ->
  { (JC_466:
    ((JC_460: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_461: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_462: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_463: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_464: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_465: valid_G13(int_P_G13_6_alloc_table))))))))}
  unit
  reads G12,G15,G16,G17,G18,G19,G20,G21,G22,G23,G24,G25,G26,G27,G28,G29,G30,G31,G32,G4,G5,G6,float_P_G10_4_alloc_table,float_P_G11_5_alloc_table,float_P_G8_2_alloc_table,float_P_G9_3_alloc_table,float_P_float_M_G10_4,float_P_float_M_G11_5,float_P_float_M_G8_2,float_P_float_M_G9_3,int_P_G13_6_alloc_table,int_P_G3_1_alloc_table,int_P_int_M_G13_6,ptr_bas_loc_ram
  writes Frama_C_entropy_source,G12,G15,G16,G17,G18,G19,G20,G21,G22,G23,G24,G25,G26,G27,G28,G29,G30,G31,G32,G33,G34,G4,G5,G6,G7,int_P_int_M_G3_1,ptr_bas_loc_ram
  { (JC_491:
    ((JC_485: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_486: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_487: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_488: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_489: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_490: valid_G13(int_P_G13_6_alloc_table)))))))) }

parameter safe_int32_of_integer_ :
 x:int -> { } int32 { eq_int(integer_of_int32(result), x) }

parameter safe_int8_of_integer_ :
 x:int -> { } int8 { eq_int(integer_of_int8(result), x) }

let F2_ensures_default =
 fun (V2 : int32) ->
  { ((true = true)
    and (JC_175:
        ((JC_169: valid_G3(int_P_G3_1_alloc_table))
        and ((JC_170: valid_G8(float_P_G8_2_alloc_table))
            and ((JC_171: valid_G9(float_P_G9_3_alloc_table))
                and ((JC_172: valid_G10(float_P_G10_4_alloc_table))
                    and ((JC_173: valid_G11(float_P_G11_5_alloc_table))
                        and (JC_174: valid_G13(int_P_G13_6_alloc_table))))))))) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let V1 = ref (any_int32 void) in
     (C_5:
     begin
       (let jessie_8 = (V1 := (C_4:
                              (JC_196:
                              ((Frama_C_interval (safe_int32_of_integer_ (0))) 
                               (safe_int32_of_integer_ (63)))))) in
       void);
      (return := !V1);
      (raise Return)
     end));
    absurd 
   end
   with
   Return ->
   !return end))
  { (JC_177: true) }

let F2_safety =
 fun (V2 : int32) ->
  { (JC_175:
    ((JC_169: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_170: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_171: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_172: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_173: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_174: valid_G13(int_P_G13_6_alloc_table)))))))) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let V1 = ref (any_int32 void) in
     (C_5:
     begin
       (let jessie_7 = (V1 := (C_4:
                              (JC_194:
                              ((Frama_C_interval_requires (safe_int32_of_integer_ (0))) 
                               (safe_int32_of_integer_ (63)))))) in
       void);
      (return := !V1);
      (raise Return)
     end));
    absurd 
   end
   with
   Return ->
   !return end))
  { (JC_185:
    ((JC_179: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_180: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_181: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_182: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_183: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_184: valid_G13(int_P_G13_6_alloc_table)))))))) }

let F3_ensures_default =
 fun (V4 : int32) ->
  { ((true = true)
    and (JC_211:
        ((JC_205: valid_G3(int_P_G3_1_alloc_table))
        and ((JC_206: valid_G8(float_P_G8_2_alloc_table))
            and ((JC_207: valid_G9(float_P_G9_3_alloc_table))
                and ((JC_208: valid_G10(float_P_G10_4_alloc_table))
                    and ((JC_209: valid_G11(float_P_G11_5_alloc_table))
                        and (JC_210: valid_G13(int_P_G13_6_alloc_table))))))))) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let V3 = ref (any_int32 void) in
     (C_8:
     begin
       (let jessie_10 = (V3 := (C_7:
                               (JC_232:
                               ((Frama_C_interval (safe_int32_of_integer_ (0))) 
                                (safe_int32_of_integer_ (63)))))) in
       void);
      (return := !V3);
      (raise Return)
     end));
    absurd 
   end
   with
   Return ->
   !return end))
  { (JC_213: true) }

let F3_safety =
 fun (V4 : int32) ->
  { (JC_211:
    ((JC_205: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_206: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_207: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_208: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_209: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_210: valid_G13(int_P_G13_6_alloc_table)))))))) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let V3 = ref (any_int32 void) in
     (C_8:
     begin
       (let jessie_9 = (V3 := (C_7:
                              (JC_230:
                              ((Frama_C_interval_requires (safe_int32_of_integer_ (0))) 
                               (safe_int32_of_integer_ (63)))))) in
       void);
      (return := !V3);
      (raise Return)
     end));
    absurd 
   end
   with
   Return ->
   !return end))
  { (JC_221:
    ((JC_215: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_216: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_217: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_218: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_219: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_220: valid_G13(int_P_G13_6_alloc_table)))))))) }

let F4_ensures_default =
 fun (V6 : int32) ->
  { ((true = true)
    and (JC_247:
        ((JC_241: valid_G3(int_P_G3_1_alloc_table))
        and ((JC_242: valid_G8(float_P_G8_2_alloc_table))
            and ((JC_243: valid_G9(float_P_G9_3_alloc_table))
                and ((JC_244: valid_G10(float_P_G10_4_alloc_table))
                    and ((JC_245: valid_G11(float_P_G11_5_alloc_table))
                        and (JC_246: valid_G13(int_P_G13_6_alloc_table))))))))) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let V5 = ref (any_int32 void) in
     (C_11:
     begin
       (let jessie_12 = (V5 := (C_10:
                               (JC_268:
                               ((Frama_C_interval (safe_int32_of_integer_ (0))) 
                                (safe_int32_of_integer_ (31)))))) in
       void);
      (return := !V5);
      (raise Return)
     end));
    absurd 
   end
   with
   Return ->
   !return end))
  { (JC_249: true) }

let F4_safety =
 fun (V6 : int32) ->
  { (JC_247:
    ((JC_241: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_242: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_243: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_244: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_245: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_246: valid_G13(int_P_G13_6_alloc_table)))))))) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let V5 = ref (any_int32 void) in
     (C_11:
     begin
       (let jessie_11 = (V5 := (C_10:
                               (JC_266:
                               ((Frama_C_interval_requires (safe_int32_of_integer_ (0))) 
                                (safe_int32_of_integer_ (31)))))) in
       void);
      (return := !V5);
      (raise Return)
     end));
    absurd 
   end
   with
   Return ->
   !return end))
  { (JC_257:
    ((JC_251: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_252: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_253: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_254: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_255: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_256: valid_G13(int_P_G13_6_alloc_table)))))))) }

let F5_ensures_default =
 fun (V8 : int32) ->
  { ((true = true)
    and (JC_283:
        ((JC_277: valid_G3(int_P_G3_1_alloc_table))
        and ((JC_278: valid_G8(float_P_G8_2_alloc_table))
            and ((JC_279: valid_G9(float_P_G9_3_alloc_table))
                and ((JC_280: valid_G10(float_P_G10_4_alloc_table))
                    and ((JC_281: valid_G11(float_P_G11_5_alloc_table))
                        and (JC_282: valid_G13(int_P_G13_6_alloc_table))))))))) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let V7 = ref (any_int32 void) in
     begin
       (let jessie_14 = begin
                          (assert
                          { (JC_306: ge_int(integer_of_int32(V8), (0))) };
                          void);
                         (assert
                         { (JC_307: lt_int(integer_of_int32(V8), (32))) };
                         void);
                         (assert
                         { (JC_308:
                           le_int((1),
                           asr((2147483647), integer_of_int32(V8)))) };
                         void);
                         (C_18:
                         begin
                           (V7 := (C_17:
                                  (safe_int32_of_integer_ (C_16:
                                                          ((lsl (1)) 
                                                           (integer_of_int32 V8))))));
                          !V7
                         end)
                        end in
       void);
      (return := !V7);
      (raise Return)
     end);
    absurd 
   end
   with
   Return ->
   !return end))
  { (JC_285: true) }

let F5_safety =
 fun (V8 : int32) ->
  { (JC_283:
    ((JC_277: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_278: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_279: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_280: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_281: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_282: valid_G13(int_P_G13_6_alloc_table)))))))) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let V7 = ref (any_int32 void) in
     begin
       (let jessie_13 = begin
                          [ { } unit
                            { (JC_301: ge_int(integer_of_int32(V8), (0))) } ];
                         [ { } unit
                           { (JC_302: lt_int(integer_of_int32(V8), (32))) } ];
                         [ { } unit
                           { (JC_303:
                             le_int((1),
                             asr((2147483647), integer_of_int32(V8)))) } ];
                         (C_18:
                         begin
                           (V7 := (C_17:
                                  (JC_305:
                                  (int32_of_integer_ (C_16:
                                                     ((lsl (1)) (integer_of_int32 V8)))))));
                          !V7
                         end)
                        end in
       void);
      (return := !V7);
      (raise Return)
     end);
    absurd 
   end
   with
   Return ->
   !return end))
  { (JC_293:
    ((JC_287: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_288: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_289: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_290: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_291: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_292: valid_G13(int_P_G13_6_alloc_table)))))))) }

let F6_ensures_default =
 fun (tt : unit) ->
  { ((true = true)
    and (JC_323:
        ((JC_317: valid_G3(int_P_G3_1_alloc_table))
        and ((JC_318: valid_G8(float_P_G8_2_alloc_table))
            and ((JC_319: valid_G9(float_P_G9_3_alloc_table))
                and ((JC_320: valid_G10(float_P_G10_4_alloc_table))
                    and ((JC_321: valid_G11(float_P_G11_5_alloc_table))
                        and (JC_322: valid_G13(int_P_G13_6_alloc_table))))))))) }
  (init:
  try
   begin
     (let V9 = ref (any_real void) in
     (let V10 = ref (any_real void) in
     (let V11 = ref (any_real void) in
     (let V12 = ref (any_real void) in
     (let V13 = ref (any_real void) in
     (let V14 = ref (any_real void) in
     (let V15 = ref (any_real void) in
     (let V16 = ref (any_real void) in
     (let V17 = ref (any_real void) in
     (let V18 = ref (any_int32 void) in
     (let ptr_bas_loc = ref (any_pointer void) in
     (let V20 = ref (any_int32 void) in
     (let V21 = ref (any_int32 void) in
     (let V22 = ref (any_int32 void) in
     (let V23 = ref (any_int32 void) in
     (C_21:
     begin
       (let jessie_60 = (V18 := (C_20:
                                (JC_375:
                                ((Frama_C_interval (safe_int32_of_integer_ (2))) 
                                 (safe_int32_of_integer_ (2000)))))) in
       void);
      (C_23:
      begin
        (let jessie_61 = (G15 := (C_22:
                                 (JC_377:
                                 ((Frama_C_interval (safe_int32_of_integer_ (0))) 
                                  (safe_int32_of_integer_ (11)))))) in
        void);
       (C_24:
       begin
         (let jessie_63 = (ptr_bas_loc := G13) in void);
        (C_25:
        begin
          (let jessie_65 = (G33 := !ptr_bas_loc) in void);
         (if ((ge_int_ (integer_of_int32 !V18)) (2))
         then
          (let jessie_98 = (C_35:
                           begin
                             (let jessie_66 = (G4 := (C_34:
                                                     (safe_int32_of_integer_ 
                                                      (C_33:
                                                      ((add_int (integer_of_int32 
                                                                 (C_32:
                                                                 (safe_int32_of_integer_ 
                                                                  (C_31:
                                                                  (JC_379:
                                                                  ((div_int 
                                                                    (integer_of_int32 !V18)) 
                                                                   (integer_of_int32 
                                                                    (C_30:
                                                                    (safe_int32_of_integer_ 
                                                                    (C_29:
                                                                    ((add_int 
                                                                    (integer_of_int32 !G5)) (1))))))))))))) (1)))))) in
                             void);
                            (C_37:
                            begin
                              (let jessie_67 = (V9 := (C_36: 0.0)) in void);
                             (C_41:
                             begin
                               (let jessie_68 = (V10 := (C_40:
                                                        ((mul_real 511.5) 
                                                         (C_38:
                                                         !G20)))) in
                               void);
                              (C_45:
                              begin
                                (let jessie_69 = (V11 := (C_44:
                                                         ((mul_real 511.5) 
                                                          (C_42:
                                                          !G20)))) in
                                void);
                               (C_47:
                               begin
                                 (let jessie_70 = (V12 := (C_46: 0.0)) in
                                 void);
                                (C_49:
                                begin
                                  (let jessie_71 = (V13 := (C_48: 0.0)) in
                                  void);
                                 (C_51:
                                 begin
                                   (let jessie_72 = (V14 := (C_50: 0.0)) in
                                   void);
                                  (C_53:
                                  begin
                                    (let jessie_73 = (V15 := (C_52: 0.0)) in
                                    void);
                                   (C_55:
                                   begin
                                     (let jessie_74 = (V20 := (C_54:
                                                              (JC_381:
                                                              (F2 !G15)))) in
                                     void);
                                    (C_57:
                                    begin
                                      (let jessie_75 = (G18 := (C_56:
                                                               ((safe_acc_ !float_P_float_M_G8_2) 
                                                                ((shift G8) 
                                                                 (integer_of_int32 !V20))))) in
                                      void);
                                     (C_59:
                                     begin
                                       (let jessie_76 = (V21 := (C_58:
                                                                (JC_383:
                                                                (F3 !G15)))) in
                                       void);
                                      (C_63:
                                      begin
                                        (let jessie_77 = (G16 := (C_62:
                                                                 (JC_385:
                                                                 ((div_real 
                                                                   (C_61:
                                                                   ((safe_acc_ !float_P_float_M_G9_3) 
                                                                    ((shift G9) 
                                                                    (integer_of_int32 !V21))))) 
                                                                  (C_60:
                                                                  (real_of_int 
                                                                   (integer_of_int32 G1))))))) in
                                        void);
                                       (C_65:
                                       begin
                                         (let jessie_78 = (V22 := (C_64:
                                                                  (JC_387:
                                                                  (F3 !G15)))) in
                                         void);
                                        (C_67:
                                        begin
                                          (let jessie_79 = (G17 := (C_66:
                                                                   ((safe_acc_ !float_P_float_M_G10_4) 
                                                                    ((shift G10) 
                                                                    (integer_of_int32 !V22))))) in
                                          void);
                                         (C_69:
                                         begin
                                           (let jessie_80 = (V23 := (C_68:
                                                                    (JC_389:
                                                                    (F4 !G15)))) in
                                           void);
                                          (C_71:
                                          begin
                                            (let jessie_81 = (G19 := 
                                                              (C_70:
                                                              ((safe_acc_ !float_P_float_M_G11_5) 
                                                               ((shift G11) 
                                                                (integer_of_int32 !V23))))) in
                                            void);
                                           (C_76:
                                           begin
                                             (let jessie_82 = (G21 := 
                                                               (C_75:
                                                               (JC_391:
                                                               ((div_real 1.0) 
                                                                (C_73:
                                                                ((add_real 
                                                                  (C_72:
                                                                  !G16)) 1.0)))))) in
                                             void);
                                            (C_78:
                                            begin
                                              (let jessie_83 = (V16 := 
                                                                (C_77:
                                                                ((mul_real !G17) !G21))) in
                                              void);
                                             (C_84:
                                             begin
                                               (let jessie_84 = (V17 := 
                                                                 (C_83:
                                                                 ((mul_real 
                                                                   (C_81:
                                                                   ((sub_real 
                                                                    (C_80:
                                                                    !G16)) 1.0))) 
                                                                  (C_79:
                                                                  !G21)))) in
                                               void);
                                              (C_87:
                                              begin
                                                (let jessie_85 = (G22 := 
                                                                  (C_86:
                                                                  ((mul_real 
                                                                    (C_85:
                                                                    ((mul_real !G18) !G16))) !G21))) in
                                                void);
                                               (C_88:
                                               begin
                                                 (let jessie_86 = (G23 := 
                                                                   (safe_int32_of_integer_ (0))) in
                                                 void);
                                                (C_89:
                                                begin
                                                  (let jessie_87 = (G24 := !V9) in
                                                  void);
                                                 (C_90:
                                                 begin
                                                   (let jessie_88 = (G25 := !V10) in
                                                   void);
                                                  (C_91:
                                                  begin
                                                    (let jessie_89 = 
                                                    (G26 := !V11) in
                                                    void);
                                                   (C_92:
                                                   begin
                                                     (let jessie_90 = 
                                                     (G27 := !V12) in
                                                     void);
                                                    (C_93:
                                                    begin
                                                      (let jessie_91 = 
                                                      (G28 := !V13) in
                                                      void);
                                                     (C_94:
                                                     begin
                                                       (let jessie_92 = 
                                                       (G29 := !V14) in
                                                       void);
                                                      (C_95:
                                                      begin
                                                        (let jessie_93 = 
                                                        (G30 := !V15) in
                                                        void);
                                                       (C_96:
                                                       begin
                                                         (let jessie_94 = 
                                                         (G31 := !V16) in
                                                         void);
                                                        (C_97:
                                                        begin
                                                          (let jessie_95 = 
                                                          (G32 := !V17) in
                                                          void);
                                                         (C_98:
                                                         begin
                                                           (let jessie_96 = 
                                                           (G12 := !V18) in
                                                           void);
                                                          (C_99:
                                                          begin
                                                            (ptr_bas_loc_ram := !ptr_bas_loc);
                                                           !ptr_bas_loc_ram
                                                          end)
                                                         end)
                                                        end)
                                                       end)
                                                      end)
                                                     end)
                                                    end)
                                                   end)
                                                  end)
                                                 end)
                                                end)
                                               end)
                                              end)
                                             end)
                                            end)
                                           end)
                                          end)
                                         end)
                                        end)
                                       end)
                                      end)
                                     end)
                                    end)
                                   end)
                                  end)
                                 end)
                                end)
                               end)
                              end)
                             end)
                            end)
                           end) in
          void)
         else
          (let jessie_104 = (C_27:
                            begin
                              (let jessie_103 = (let jessie_99 = (safe_int32_of_integer_ (0)) in
                                                (let jessie_102 = ((shift G3) 
                                                                   (integer_of_int32 !G15)) in
                                                (((safe_upd_ int_P_int_M_G3_1) jessie_102) jessie_99))) in
                              void);
                             (C_28:
                             begin
                               (G4 := (safe_int32_of_integer_ (0))); !G4
                             end)
                            end) in
          void));
         (raise Return)
        end)
       end)
      end)
     end))))))))))))))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_325: true) }

let F6_safety =
 fun (tt : unit) ->
  { (JC_323:
    ((JC_317: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_318: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_319: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_320: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_321: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_322: valid_G13(int_P_G13_6_alloc_table)))))))) }
  (init:
  try
   begin
     (let V9 = ref (any_real void) in
     (let V10 = ref (any_real void) in
     (let V11 = ref (any_real void) in
     (let V12 = ref (any_real void) in
     (let V13 = ref (any_real void) in
     (let V14 = ref (any_real void) in
     (let V15 = ref (any_real void) in
     (let V16 = ref (any_real void) in
     (let V17 = ref (any_real void) in
     (let V18 = ref (any_int32 void) in
     (let ptr_bas_loc = ref (any_pointer void) in
     (let V20 = ref (any_int32 void) in
     (let V21 = ref (any_int32 void) in
     (let V22 = ref (any_int32 void) in
     (let V23 = ref (any_int32 void) in
     (C_21:
     begin
       (let jessie_15 = (V18 := (C_20:
                                (JC_342:
                                ((Frama_C_interval_requires (safe_int32_of_integer_ (2))) 
                                 (safe_int32_of_integer_ (2000)))))) in
       void);
      (C_23:
      begin
        (let jessie_16 = (G15 := (C_22:
                                 (JC_344:
                                 ((Frama_C_interval_requires (safe_int32_of_integer_ (0))) 
                                  (safe_int32_of_integer_ (11)))))) in
        void);
       (C_24:
       begin
         (let jessie_18 = (ptr_bas_loc := G13) in void);
        (C_25:
        begin
          (let jessie_20 = (G33 := !ptr_bas_loc) in void);
         (if ((ge_int_ (integer_of_int32 !V18)) (2))
         then
          (let jessie_53 = (C_35:
                           begin
                             (let jessie_21 = (G4 := (C_34:
                                                     (JC_352:
                                                     (int32_of_integer_ 
                                                      (C_33:
                                                      ((add_int (integer_of_int32 
                                                                 (C_32:
                                                                 (JC_351:
                                                                 (int32_of_integer_ 
                                                                  (C_31:
                                                                  (JC_350:
                                                                  ((div_int_ 
                                                                    (integer_of_int32 !V18)) 
                                                                   (integer_of_int32 
                                                                    (C_30:
                                                                    (JC_349:
                                                                    (int32_of_integer_ 
                                                                    (C_29:
                                                                    ((add_int 
                                                                    (integer_of_int32 !G5)) (1))))))))))))))) (1))))))) in
                             void);
                            (C_37:
                            begin
                              (let jessie_22 = (V9 := (C_36: 0.0)) in void);
                             (C_41:
                             begin
                               (let jessie_23 = (V10 := (C_40:
                                                        ((mul_real 511.5) 
                                                         (C_38:
                                                         !G20)))) in
                               void);
                              (C_45:
                              begin
                                (let jessie_24 = (V11 := (C_44:
                                                         ((mul_real 511.5) 
                                                          (C_42:
                                                          !G20)))) in
                                void);
                               (C_47:
                               begin
                                 (let jessie_25 = (V12 := (C_46: 0.0)) in
                                 void);
                                (C_49:
                                begin
                                  (let jessie_26 = (V13 := (C_48: 0.0)) in
                                  void);
                                 (C_51:
                                 begin
                                   (let jessie_27 = (V14 := (C_50: 0.0)) in
                                   void);
                                  (C_53:
                                  begin
                                    (let jessie_28 = (V15 := (C_52: 0.0)) in
                                    void);
                                   (C_55:
                                   begin
                                     (let jessie_29 = (V20 := (C_54:
                                                              (JC_354:
                                                              (F2_requires !G15)))) in
                                     void);
                                    (C_57:
                                    begin
                                      (let jessie_30 = (G18 := (C_56:
                                                               (JC_356:
                                                               ((((offset_acc_ !float_P_G8_2_alloc_table) !float_P_float_M_G8_2) G8) 
                                                                (integer_of_int32 !V20))))) in
                                      void);
                                     (C_59:
                                     begin
                                       (let jessie_31 = (V21 := (C_58:
                                                                (JC_358:
                                                                (F3_requires !G15)))) in
                                       void);
                                      (C_63:
                                      begin
                                        (let jessie_32 = (G16 := (C_62:
                                                                 (JC_362:
                                                                 ((div_real_ 
                                                                   (C_61:
                                                                   (JC_361:
                                                                   ((((offset_acc_ !float_P_G9_3_alloc_table) !float_P_float_M_G9_3) G9) 
                                                                    (integer_of_int32 !V21))))) 
                                                                  (C_60:
                                                                  (real_of_int 
                                                                   (integer_of_int32 G1))))))) in
                                        void);
                                       (C_65:
                                       begin
                                         (let jessie_33 = (V22 := (C_64:
                                                                  (JC_364:
                                                                  (F3_requires !G15)))) in
                                         void);
                                        (C_67:
                                        begin
                                          (let jessie_34 = (G17 := (C_66:
                                                                   (JC_366:
                                                                   ((((offset_acc_ !float_P_G10_4_alloc_table) !float_P_float_M_G10_4) G10) 
                                                                    (integer_of_int32 !V22))))) in
                                          void);
                                         (C_69:
                                         begin
                                           (let jessie_35 = (V23 := (C_68:
                                                                    (JC_368:
                                                                    (F4_requires !G15)))) in
                                           void);
                                          (C_71:
                                          begin
                                            (let jessie_36 = (G19 := 
                                                              (C_70:
                                                              (JC_370:
                                                              ((((offset_acc_ !float_P_G11_5_alloc_table) !float_P_float_M_G11_5) G11) 
                                                               (integer_of_int32 !V23))))) in
                                            void);
                                           (C_76:
                                           begin
                                             (let jessie_37 = (G21 := 
                                                               (C_75:
                                                               (JC_372:
                                                               ((div_real_ 1.0) 
                                                                (C_73:
                                                                ((add_real 
                                                                  (C_72:
                                                                  !G16)) 1.0)))))) in
                                             void);
                                            (C_78:
                                            begin
                                              (let jessie_38 = (V16 := 
                                                                (C_77:
                                                                ((mul_real !G17) !G21))) in
                                              void);
                                             (C_84:
                                             begin
                                               (let jessie_39 = (V17 := 
                                                                 (C_83:
                                                                 ((mul_real 
                                                                   (C_81:
                                                                   ((sub_real 
                                                                    (C_80:
                                                                    !G16)) 1.0))) 
                                                                  (C_79:
                                                                  !G21)))) in
                                               void);
                                              (C_87:
                                              begin
                                                (let jessie_40 = (G22 := 
                                                                  (C_86:
                                                                  ((mul_real 
                                                                    (C_85:
                                                                    ((mul_real !G18) !G16))) !G21))) in
                                                void);
                                               (C_88:
                                               begin
                                                 (let jessie_41 = (G23 := 
                                                                   (safe_int32_of_integer_ (0))) in
                                                 void);
                                                (C_89:
                                                begin
                                                  (let jessie_42 = (G24 := !V9) in
                                                  void);
                                                 (C_90:
                                                 begin
                                                   (let jessie_43 = (G25 := !V10) in
                                                   void);
                                                  (C_91:
                                                  begin
                                                    (let jessie_44 = 
                                                    (G26 := !V11) in
                                                    void);
                                                   (C_92:
                                                   begin
                                                     (let jessie_45 = 
                                                     (G27 := !V12) in
                                                     void);
                                                    (C_93:
                                                    begin
                                                      (let jessie_46 = 
                                                      (G28 := !V13) in
                                                      void);
                                                     (C_94:
                                                     begin
                                                       (let jessie_47 = 
                                                       (G29 := !V14) in
                                                       void);
                                                      (C_95:
                                                      begin
                                                        (let jessie_48 = 
                                                        (G30 := !V15) in
                                                        void);
                                                       (C_96:
                                                       begin
                                                         (let jessie_49 = 
                                                         (G31 := !V16) in
                                                         void);
                                                        (C_97:
                                                        begin
                                                          (let jessie_50 = 
                                                          (G32 := !V17) in
                                                          void);
                                                         (C_98:
                                                         begin
                                                           (let jessie_51 = 
                                                           (G12 := !V18) in
                                                           void);
                                                          (C_99:
                                                          begin
                                                            (ptr_bas_loc_ram := !ptr_bas_loc);
                                                           !ptr_bas_loc_ram
                                                          end)
                                                         end)
                                                        end)
                                                       end)
                                                      end)
                                                     end)
                                                    end)
                                                   end)
                                                  end)
                                                 end)
                                                end)
                                               end)
                                              end)
                                             end)
                                            end)
                                           end)
                                          end)
                                         end)
                                        end)
                                       end)
                                      end)
                                     end)
                                    end)
                                   end)
                                  end)
                                 end)
                                end)
                               end)
                              end)
                             end)
                            end)
                           end) in
          void)
         else
          (let jessie_59 = (C_27:
                           begin
                             (let jessie_58 = (let jessie_54 = (safe_int32_of_integer_ (0)) in
                                              (let jessie_55 = G3 in
                                              (let jessie_56 = (integer_of_int32 !G15) in
                                              (let jessie_57 = ((shift jessie_55) jessie_56) in
                                              (JC_373:
                                              (((((offset_upd_ !int_P_G3_1_alloc_table) int_P_int_M_G3_1) jessie_55) jessie_56) jessie_54)))))) in
                             void);
                            (C_28:
                            begin
                              (G4 := (safe_int32_of_integer_ (0))); !G4
                            end)
                           end) in
          void));
         (raise Return)
        end)
       end)
      end)
     end))))))))))))))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_333:
    ((JC_327: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_328: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_329: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_330: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_331: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_332: valid_G13(int_P_G13_6_alloc_table)))))))) }

let F7_ensures_default =
 fun (tt : unit) ->
  { ((true = true)
    and (JC_406:
        ((JC_400: valid_G3(int_P_G3_1_alloc_table))
        and ((JC_401: valid_G8(float_P_G8_2_alloc_table))
            and ((JC_402: valid_G9(float_P_G9_3_alloc_table))
                and ((JC_403: valid_G10(float_P_G10_4_alloc_table))
                    and ((JC_404: valid_G11(float_P_G11_5_alloc_table))
                        and (JC_405: valid_G13(int_P_G13_6_alloc_table))))))))) }
  (init:
  try
   begin
     (let V24 = ref (any_real void) in
     (let V25 = ref (any_real void) in
     (let V26 = ref (any_real void) in
     (let V27 = ref (any_real void) in
     (let V28 = ref (any_real void) in
     (let V29 = ref (any_real void) in
     (let V30 = ref (any_real void) in
     (let V31 = ref (any_real void) in
     (let V32 = ref (any_real void) in
     (let V33 = ref (any_int32 void) in
     (let V34 = ref (any_int32 void) in
     (let V35 = ref (any_int32 void) in
     (let ptr_bas_loc_0 = ref (any_pointer void) in
     (let V37 = ref (any_int32 void) in
     begin
       (if ((ge_int_ (integer_of_int32 !G12)) (2))
       then
        (let jessie_222 = (C_101:
                          begin
                            (let jessie_164 = (V24 := !G24) in void);
                           (C_102:
                           begin
                             (let jessie_165 = (V25 := !G25) in void);
                            (C_103:
                            begin
                              (let jessie_166 = (V26 := !G26) in void);
                             (C_104:
                             begin
                               (let jessie_167 = (V27 := !G27) in void);
                              (C_105:
                              begin
                                (let jessie_168 = (V28 := !G28) in void);
                               (C_106:
                               begin
                                 (let jessie_169 = (V29 := !G29) in void);
                                (C_107:
                                begin
                                  (let jessie_170 = (V30 := !G30) in void);
                                 (C_108:
                                 begin
                                   (let jessie_171 = (V31 := !G31) in void);
                                  (C_109:
                                  begin
                                    (let jessie_172 = (V32 := !G32) in void);
                                   (C_110:
                                   begin
                                     (let jessie_173 = (V33 := !G12) in void);
                                    (C_111:
                                    begin
                                      (let jessie_175 = (ptr_bas_loc_0 := !ptr_bas_loc_ram) in
                                      void);
                                     (C_116:
                                     begin
                                       (let jessie_176 = (V35 := (C_115:
                                                                 (safe_int32_of_integer_ 
                                                                  (C_114:
                                                                  ((sub_int 
                                                                    (integer_of_int32 
                                                                    (C_113:
                                                                    (safe_int32_of_integer_ 
                                                                    (C_112:
                                                                    ((add_int 
                                                                    (integer_of_int32 !G23)) 
                                                                    (integer_of_int32 !G5))))))) (2)))))) in
                                       void);
                                      (if ((ge_int_ (integer_of_int32 !V35)) 
                                           (integer_of_int32 (C_121:
                                                             (safe_int32_of_integer_ 
                                                              (C_120:
                                                              ((sub_int 
                                                                (integer_of_int32 !V33)) (2)))))))
                                      then
                                       (C_119:
                                       (let jessie_177 = (V35 := (C_118:
                                                                 (safe_int32_of_integer_ 
                                                                  (C_117:
                                                                  ((sub_int 
                                                                    (integer_of_int32 !V33)) (2)))))) in
                                       void))
                                      else void);
                                      (C_122:
                                      begin
                                        (let jessie_178 = (V34 := !G23) in
                                        void);
                                       try
                                        (let jessie_191 = begin
                                                            (loop_2:
                                                            while true do
                                                            { invariant
                                                                (JC_454:
                                                                true)
                                                               }
                                                             begin
                                                               [ { } unit
                                                                 { true } ];
                                                              try
                                                               (let jessie_190 = 
                                                               begin
                                                                 (let jessie_189 = 
                                                                 begin
                                                                   (if 
                                                                   ((le_int_ 
                                                                    (integer_of_int32 !V34)) 
                                                                    (integer_of_int32 !V35))
                                                                   then void
                                                                   else
                                                                    (let jessie_179 = 
                                                                    (raise
                                                                    (Goto_while_0_break_exc
                                                                    void)) in
                                                                    void));
                                                                  (C_125:
                                                                  begin
                                                                    (let jessie_180 = 
                                                                    (V24 := 
                                                                    (C_124:
                                                                    (real_of_int 
                                                                    (integer_of_int32 
                                                                    (C_123:
                                                                    ((safe_acc_ !int_P_int_M_G13_6) !ptr_bas_loc_0)))))) in
                                                                    void);
                                                                   (C_127:
                                                                   begin
                                                                     
                                                                    (let jessie_182 = 
                                                                    (ptr_bas_loc_0 := 
                                                                    (C_126:
                                                                    ((shift !ptr_bas_loc_0) (1)))) in
                                                                    void);
                                                                    (C_133:
                                                                    begin
                                                                      
                                                                    (let jessie_183 = 
                                                                    (V27 := 
                                                                    (C_132:
                                                                    ((add_real 
                                                                    (C_131:
                                                                    ((add_real 
                                                                    (C_130:
                                                                    ((sub_real !V24) !V26))) 
                                                                    (C_129:
                                                                    ((mul_real !V31) !V28))))) 
                                                                    (C_128:
                                                                    ((mul_real !V32) !V29))))) in
                                                                    void);
                                                                    (let jessie_184 = 
                                                                    (if 
                                                                    ((ge_real_ 
                                                                    (C_138:
                                                                    !V27)) 0.0)
                                                                    then
                                                                    (C_137:
                                                                    begin
                                                                      
                                                                    (V30 := 
                                                                    (C_136:
                                                                    ((add_real !V30) !V27)));
                                                                    !V30
                                                                    end)
                                                                    else
                                                                    (C_135:
                                                                    begin
                                                                      
                                                                    (V30 := 
                                                                    (C_134:
                                                                    ((sub_real !V30) !V27)));
                                                                    !V30
                                                                    end)) in
                                                                    void);
                                                                    (C_139:
                                                                    begin
                                                                      
                                                                    (let jessie_185 = 
                                                                    (V26 := !V25) in
                                                                    void);
                                                                    (C_140:
                                                                    begin
                                                                      
                                                                    (let jessie_186 = 
                                                                    (V25 := !V24) in
                                                                    void);
                                                                    (C_141:
                                                                    begin
                                                                      
                                                                    (let jessie_187 = 
                                                                    (V29 := !V28) in
                                                                    void);
                                                                    (C_142:
                                                                    begin
                                                                      
                                                                    (let jessie_188 = 
                                                                    (V28 := !V27) in
                                                                    void);
                                                                    (C_145:
                                                                    begin
                                                                      
                                                                    (V34 := 
                                                                    (C_144:
                                                                    (safe_int32_of_integer_ 
                                                                    (C_143:
                                                                    ((add_int 
                                                                    (integer_of_int32 !V34)) (1))))));
                                                                    !V34
                                                                    end)
                                                                    end)
                                                                    end)
                                                                    end)
                                                                    end)
                                                                    end)
                                                                   end)
                                                                  end)
                                                                 end in
                                                                 void);
                                                                (raise
                                                                 (Loop_continue_exc
                                                                 void))
                                                               end in
                                                               void)
                                                               with
                                                               Loop_continue_exc jessie_3 ->
                                                               void end
                                                             end
                                                            done);
                                                           (raise
                                                            (Goto_while_0_break_exc
                                                            void))
                                                          end in
                                        void)
                                        with
                                        Goto_while_0_break_exc jessie_1 ->
                                        (while_0_break: void) end;
                                       (if ((ge_int_ (integer_of_int32 !V35)) 
                                            (integer_of_int32 (C_206:
                                                              (safe_int32_of_integer_ 
                                                               (C_205:
                                                               ((sub_int 
                                                                 (integer_of_int32 !V33)) (2)))))))
                                       then
                                        (C_162:
                                        begin
                                          (let jessie_192 = (V24 := (C_161:
                                                                    (real_of_int 
                                                                    (integer_of_int32 
                                                                    (C_160:
                                                                    ((safe_acc_ !int_P_int_M_G13_6) !ptr_bas_loc_0)))))) in
                                          void);
                                         (C_168:
                                         begin
                                           (let jessie_193 = (V27 := 
                                                              (C_167:
                                                              ((add_real 
                                                                (C_166:
                                                                ((add_real 
                                                                  (C_165:
                                                                  ((sub_real !V24) !V26))) 
                                                                 (C_164:
                                                                 ((mul_real !V31) !V28))))) 
                                                               (C_163:
                                                               ((mul_real !V32) !V29))))) in
                                           void);
                                          (let jessie_194 = (if ((ge_real_ 
                                                                  (C_181:
                                                                  !V27)) 0.0)
                                                            then
                                                             (C_180:
                                                             begin
                                                               (V30 := 
                                                                (C_179:
                                                                ((add_real 
                                                                  (C_177:
                                                                  ((mul_real 2.0) 
                                                                   (C_176:
                                                                   !V30)))) 
                                                                 (C_175:
                                                                 !V27))));
                                                              !V30
                                                             end)
                                                            else
                                                             (C_174:
                                                             begin
                                                               (V30 := 
                                                                (C_173:
                                                                ((sub_real 
                                                                  (C_171:
                                                                  ((mul_real 2.0) 
                                                                   (C_170:
                                                                   !V30)))) 
                                                                 (C_169:
                                                                 !V27))));
                                                              !V30
                                                             end)) in
                                          void);
                                          (C_185:
                                          begin
                                            (let jessie_195 = (V30 := 
                                                               (C_184:
                                                               (JC_457:
                                                               ((div_real 
                                                                 (C_183:
                                                                 ((mul_real 
                                                                   (C_182:
                                                                   ((mul_real !G22) !G19))) !V30))) !G20)))) in
                                            void);
                                           (C_189:
                                           begin
                                             (let jessie_196 = (V30 := 
                                                                (C_188:
                                                                ((mul_real 
                                                                  (C_186:
                                                                  !V30)) 64.0))) in
                                             void);
                                            (let jessie_205 = (if ((le_real_ 
                                                                    (C_196:
                                                                    !V30)) 65535.0)
                                                              then
                                                               (C_195:
                                                               (let jessie_197 = 
                                                               (C_193:
                                                               (safe_int32_of_integer_ 
                                                                (C_192:
                                                                (int_of_real !V30)))) in
                                                               (let jessie_200 = 
                                                               ((shift G3) 
                                                                (integer_of_int32 !G15)) in
                                                               begin
                                                                 (((safe_upd_ int_P_int_M_G3_1) jessie_200) jessie_197);
                                                                jessie_197
                                                               end)))
                                                              else
                                                               (C_191:
                                                               (let jessie_201 = 
                                                               (safe_int32_of_integer_ (65535)) in
                                                               (let jessie_204 = 
                                                               ((shift G3) 
                                                                (integer_of_int32 !G15)) in
                                                               begin
                                                                 (((safe_upd_ int_P_int_M_G3_1) jessie_204) jessie_201);
                                                                jessie_201
                                                               end)))) in
                                            void);
                                            (C_198:
                                            begin
                                              (let jessie_206 = (V37 := 
                                                                 (C_197:
                                                                 (JC_459:
                                                                 (F5 !G15)))) in
                                              void);
                                             (C_201:
                                             begin
                                               (let jessie_207 = (G6 := 
                                                                  (C_200:
                                                                  (safe_int32_of_integer_ 
                                                                   (C_199:
                                                                   ((bw_or 
                                                                    (integer_of_int32 !G6)) 
                                                                    (integer_of_int32 !V37)))))) in
                                               void);
                                              (let jessie_208 = (if ((neq_int_ 
                                                                    (integer_of_int32 !G6)) (0))
                                                                then
                                                                 (C_203:
                                                                 begin
                                                                   (G7 := 
                                                                    (safe_int32_of_integer_ (1)));
                                                                  !G7
                                                                 end)
                                                                else
                                                                 (C_202:
                                                                 begin
                                                                   (G7 := 
                                                                    (safe_int32_of_integer_ (0)));
                                                                  !G7
                                                                 end)) in
                                              void);
                                              (C_204:
                                              begin
                                                (G34 := !ptr_bas_loc_0); !G34
                                              end)
                                             end)
                                            end)
                                           end)
                                          end)
                                         end)
                                        end)
                                       else
                                        (C_148:
                                        begin
                                          (let jessie_210 = (G23 := (C_147:
                                                                    (safe_int32_of_integer_ 
                                                                    (C_146:
                                                                    ((add_int 
                                                                    (integer_of_int32 !V35)) (1)))))) in
                                          void);
                                         (C_149:
                                         begin
                                           (let jessie_211 = (G24 := !V24) in
                                           void);
                                          (C_150:
                                          begin
                                            (let jessie_212 = (G25 := !V25) in
                                            void);
                                           (C_151:
                                           begin
                                             (let jessie_213 = (G26 := !V26) in
                                             void);
                                            (C_152:
                                            begin
                                              (let jessie_214 = (G27 := !V27) in
                                              void);
                                             (C_153:
                                             begin
                                               (let jessie_215 = (G28 := !V28) in
                                               void);
                                              (C_154:
                                              begin
                                                (let jessie_216 = (G29 := !V29) in
                                                void);
                                               (C_155:
                                               begin
                                                 (let jessie_217 = (G30 := !V30) in
                                                 void);
                                                (C_156:
                                                begin
                                                  (let jessie_218 = (G31 := !V31) in
                                                  void);
                                                 (C_157:
                                                 begin
                                                   (let jessie_219 = 
                                                   (G32 := !V32) in
                                                   void);
                                                  (C_158:
                                                  begin
                                                    (let jessie_220 = 
                                                    (G12 := !V33) in
                                                    void);
                                                   (C_159:
                                                   begin
                                                     (ptr_bas_loc_ram := !ptr_bas_loc_0);
                                                    !ptr_bas_loc_ram
                                                   end)
                                                  end)
                                                 end)
                                                end)
                                               end)
                                              end)
                                             end)
                                            end)
                                           end)
                                          end)
                                         end)
                                        end))
                                      end)
                                     end)
                                    end)
                                   end)
                                  end)
                                 end)
                                end)
                               end)
                              end)
                             end)
                            end)
                           end)
                          end) in
        void)
       else void);
      (raise Return)
     end))))))))))))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_408: true) }

let F7_safety =
 fun (tt : unit) ->
  { (JC_406:
    ((JC_400: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_401: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_402: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_403: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_404: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_405: valid_G13(int_P_G13_6_alloc_table)))))))) }
  (init:
  try
   begin
     (let V24 = ref (any_real void) in
     (let V25 = ref (any_real void) in
     (let V26 = ref (any_real void) in
     (let V27 = ref (any_real void) in
     (let V28 = ref (any_real void) in
     (let V29 = ref (any_real void) in
     (let V30 = ref (any_real void) in
     (let V31 = ref (any_real void) in
     (let V32 = ref (any_real void) in
     (let V33 = ref (any_int32 void) in
     (let V34 = ref (any_int32 void) in
     (let V35 = ref (any_int32 void) in
     (let ptr_bas_loc_0 = ref (any_pointer void) in
     (let V37 = ref (any_int32 void) in
     begin
       (if ((ge_int_ (integer_of_int32 !G12)) (2))
       then
        (let jessie_163 = (C_101:
                          begin
                            (let jessie_105 = (V24 := !G24) in void);
                           (C_102:
                           begin
                             (let jessie_106 = (V25 := !G25) in void);
                            (C_103:
                            begin
                              (let jessie_107 = (V26 := !G26) in void);
                             (C_104:
                             begin
                               (let jessie_108 = (V27 := !G27) in void);
                              (C_105:
                              begin
                                (let jessie_109 = (V28 := !G28) in void);
                               (C_106:
                               begin
                                 (let jessie_110 = (V29 := !G29) in void);
                                (C_107:
                                begin
                                  (let jessie_111 = (V30 := !G30) in void);
                                 (C_108:
                                 begin
                                   (let jessie_112 = (V31 := !G31) in void);
                                  (C_109:
                                  begin
                                    (let jessie_113 = (V32 := !G32) in void);
                                   (C_110:
                                   begin
                                     (let jessie_114 = (V33 := !G12) in void);
                                    (C_111:
                                    begin
                                      (let jessie_116 = (ptr_bas_loc_0 := !ptr_bas_loc_ram) in
                                      void);
                                     (C_116:
                                     begin
                                       (let jessie_117 = (V35 := (C_115:
                                                                 (JC_427:
                                                                 (int32_of_integer_ 
                                                                  (C_114:
                                                                  ((sub_int 
                                                                    (integer_of_int32 
                                                                    (C_113:
                                                                    (JC_426:
                                                                    (int32_of_integer_ 
                                                                    (C_112:
                                                                    ((add_int 
                                                                    (integer_of_int32 !G23)) 
                                                                    (integer_of_int32 !G5)))))))) (2))))))) in
                                       void);
                                      (if ((ge_int_ (integer_of_int32 !V35)) 
                                           (integer_of_int32 (C_121:
                                                             (JC_428:
                                                             (int32_of_integer_ 
                                                              (C_120:
                                                              ((sub_int 
                                                                (integer_of_int32 !V33)) (2))))))))
                                      then
                                       (C_119:
                                       (let jessie_118 = (V35 := (C_118:
                                                                 (JC_430:
                                                                 (int32_of_integer_ 
                                                                  (C_117:
                                                                  ((sub_int 
                                                                    (integer_of_int32 !V33)) (2))))))) in
                                       void))
                                      else void);
                                      (C_122:
                                      begin
                                        (let jessie_119 = (V34 := !G23) in
                                        void);
                                       try
                                        (let jessie_132 = begin
                                                            (loop_1:
                                                            while true do
                                                            { invariant
                                                                (JC_432:
                                                                true)
                                                               }
                                                             begin
                                                               [ { } unit
                                                                 { true } ];
                                                              try
                                                               (let jessie_131 = 
                                                               begin
                                                                 (let jessie_130 = 
                                                                 begin
                                                                   (if 
                                                                   ((le_int_ 
                                                                    (integer_of_int32 !V34)) 
                                                                    (integer_of_int32 !V35))
                                                                   then void
                                                                   else
                                                                    (let jessie_120 = 
                                                                    (raise
                                                                    (Goto_while_0_break_exc
                                                                    void)) in
                                                                    void));
                                                                  (C_125:
                                                                  begin
                                                                    (let jessie_121 = 
                                                                    (V24 := 
                                                                    (C_124:
                                                                    (real_of_int 
                                                                    (integer_of_int32 
                                                                    (C_123:
                                                                    (JC_435:
                                                                    (((acc_ !int_P_G13_6_alloc_table) !int_P_int_M_G13_6) !ptr_bas_loc_0))))))) in
                                                                    void);
                                                                   (C_127:
                                                                   begin
                                                                     
                                                                    (let jessie_123 = 
                                                                    (ptr_bas_loc_0 := 
                                                                    (C_126:
                                                                    ((shift !ptr_bas_loc_0) (1)))) in
                                                                    void);
                                                                    (C_133:
                                                                    begin
                                                                      
                                                                    (let jessie_124 = 
                                                                    (V27 := 
                                                                    (C_132:
                                                                    ((add_real 
                                                                    (C_131:
                                                                    ((add_real 
                                                                    (C_130:
                                                                    ((sub_real !V24) !V26))) 
                                                                    (C_129:
                                                                    ((mul_real !V31) !V28))))) 
                                                                    (C_128:
                                                                    ((mul_real !V32) !V29))))) in
                                                                    void);
                                                                    (let jessie_125 = 
                                                                    (if 
                                                                    ((ge_real_ 
                                                                    (C_138:
                                                                    !V27)) 0.0)
                                                                    then
                                                                    (C_137:
                                                                    begin
                                                                      
                                                                    (V30 := 
                                                                    (C_136:
                                                                    ((add_real !V30) !V27)));
                                                                    !V30
                                                                    end)
                                                                    else
                                                                    (C_135:
                                                                    begin
                                                                      
                                                                    (V30 := 
                                                                    (C_134:
                                                                    ((sub_real !V30) !V27)));
                                                                    !V30
                                                                    end)) in
                                                                    void);
                                                                    (C_139:
                                                                    begin
                                                                      
                                                                    (let jessie_126 = 
                                                                    (V26 := !V25) in
                                                                    void);
                                                                    (C_140:
                                                                    begin
                                                                      
                                                                    (let jessie_127 = 
                                                                    (V25 := !V24) in
                                                                    void);
                                                                    (C_141:
                                                                    begin
                                                                      
                                                                    (let jessie_128 = 
                                                                    (V29 := !V28) in
                                                                    void);
                                                                    (C_142:
                                                                    begin
                                                                      
                                                                    (let jessie_129 = 
                                                                    (V28 := !V27) in
                                                                    void);
                                                                    (C_145:
                                                                    begin
                                                                      
                                                                    (V34 := 
                                                                    (C_144:
                                                                    (JC_437:
                                                                    (int32_of_integer_ 
                                                                    (C_143:
                                                                    ((add_int 
                                                                    (integer_of_int32 !V34)) (1)))))));
                                                                    !V34
                                                                    end)
                                                                    end)
                                                                    end)
                                                                    end)
                                                                    end)
                                                                    end)
                                                                   end)
                                                                  end)
                                                                 end in
                                                                 void);
                                                                (raise
                                                                 (Loop_continue_exc
                                                                 void))
                                                               end in
                                                               void)
                                                               with
                                                               Loop_continue_exc jessie_3 ->
                                                               void end
                                                             end
                                                            done);
                                                           (raise
                                                            (Goto_while_0_break_exc
                                                            void))
                                                          end in
                                        void)
                                        with
                                        Goto_while_0_break_exc jessie_1 ->
                                        (while_0_break: void) end;
                                       (if ((ge_int_ (integer_of_int32 !V35)) 
                                            (integer_of_int32 (C_206:
                                                              (JC_438:
                                                              (int32_of_integer_ 
                                                               (C_205:
                                                               ((sub_int 
                                                                 (integer_of_int32 !V33)) (2))))))))
                                       then
                                        (C_162:
                                        begin
                                          (let jessie_133 = (V24 := (C_161:
                                                                    (real_of_int 
                                                                    (integer_of_int32 
                                                                    (C_160:
                                                                    (JC_440:
                                                                    (((acc_ !int_P_G13_6_alloc_table) !int_P_int_M_G13_6) !ptr_bas_loc_0))))))) in
                                          void);
                                         (C_168:
                                         begin
                                           (let jessie_134 = (V27 := 
                                                              (C_167:
                                                              ((add_real 
                                                                (C_166:
                                                                ((add_real 
                                                                  (C_165:
                                                                  ((sub_real !V24) !V26))) 
                                                                 (C_164:
                                                                 ((mul_real !V31) !V28))))) 
                                                               (C_163:
                                                               ((mul_real !V32) !V29))))) in
                                           void);
                                          (let jessie_135 = (if ((ge_real_ 
                                                                  (C_181:
                                                                  !V27)) 0.0)
                                                            then
                                                             (C_180:
                                                             begin
                                                               (V30 := 
                                                                (C_179:
                                                                ((add_real 
                                                                  (C_177:
                                                                  ((mul_real 2.0) 
                                                                   (C_176:
                                                                   !V30)))) 
                                                                 (C_175:
                                                                 !V27))));
                                                              !V30
                                                             end)
                                                            else
                                                             (C_174:
                                                             begin
                                                               (V30 := 
                                                                (C_173:
                                                                ((sub_real 
                                                                  (C_171:
                                                                  ((mul_real 2.0) 
                                                                   (C_170:
                                                                   !V30)))) 
                                                                 (C_169:
                                                                 !V27))));
                                                              !V30
                                                             end)) in
                                          void);
                                          (C_185:
                                          begin
                                            (let jessie_136 = (V30 := 
                                                               (C_184:
                                                               (JC_442:
                                                               ((div_real_ 
                                                                 (C_183:
                                                                 ((mul_real 
                                                                   (C_182:
                                                                   ((mul_real !G22) !G19))) !V30))) !G20)))) in
                                            void);
                                           (C_189:
                                           begin
                                             (let jessie_137 = (V30 := 
                                                                (C_188:
                                                                ((mul_real 
                                                                  (C_186:
                                                                  !V30)) 64.0))) in
                                             void);
                                            (let jessie_146 = (if ((le_real_ 
                                                                    (C_196:
                                                                    !V30)) 65535.0)
                                                              then
                                                               (C_195:
                                                               (let jessie_138 = 
                                                               (C_193:
                                                               (JC_444:
                                                               (int32_of_integer_ 
                                                                (C_192:
                                                                (int_of_real !V30))))) in
                                                               (let jessie_139 = G3 in
                                                               (let jessie_140 = 
                                                               (integer_of_int32 !G15) in
                                                               (let jessie_141 = 
                                                               ((shift jessie_139) jessie_140) in
                                                               begin
                                                                 (JC_445:
                                                                 (((((offset_upd_ !int_P_G3_1_alloc_table) int_P_int_M_G3_1) jessie_139) jessie_140) jessie_138));
                                                                jessie_138
                                                               end)))))
                                                              else
                                                               (C_191:
                                                               (let jessie_142 = 
                                                               (safe_int32_of_integer_ (65535)) in
                                                               (let jessie_143 = G3 in
                                                               (let jessie_144 = 
                                                               (integer_of_int32 !G15) in
                                                               (let jessie_145 = 
                                                               ((shift jessie_143) jessie_144) in
                                                               begin
                                                                 (JC_446:
                                                                 (((((offset_upd_ !int_P_G3_1_alloc_table) int_P_int_M_G3_1) jessie_143) jessie_144) jessie_142));
                                                                jessie_142
                                                               end)))))) in
                                            void);
                                            (C_198:
                                            begin
                                              (let jessie_147 = (V37 := 
                                                                 (C_197:
                                                                 (JC_448:
                                                                 (F5_requires !G15)))) in
                                              void);
                                             (C_201:
                                             begin
                                               (let jessie_148 = (G6 := 
                                                                  (C_200:
                                                                  (JC_450:
                                                                  (int32_of_integer_ 
                                                                   (C_199:
                                                                   ((bw_or 
                                                                    (integer_of_int32 !G6)) 
                                                                    (integer_of_int32 !V37))))))) in
                                               void);
                                              (let jessie_149 = (if ((neq_int_ 
                                                                    (integer_of_int32 !G6)) (0))
                                                                then
                                                                 (C_203:
                                                                 begin
                                                                   (G7 := 
                                                                    (safe_int32_of_integer_ (1)));
                                                                  !G7
                                                                 end)
                                                                else
                                                                 (C_202:
                                                                 begin
                                                                   (G7 := 
                                                                    (safe_int32_of_integer_ (0)));
                                                                  !G7
                                                                 end)) in
                                              void);
                                              (C_204:
                                              begin
                                                (G34 := !ptr_bas_loc_0); !G34
                                              end)
                                             end)
                                            end)
                                           end)
                                          end)
                                         end)
                                        end)
                                       else
                                        (C_148:
                                        begin
                                          (let jessie_151 = (G23 := (C_147:
                                                                    (JC_452:
                                                                    (int32_of_integer_ 
                                                                    (C_146:
                                                                    ((add_int 
                                                                    (integer_of_int32 !V35)) (1))))))) in
                                          void);
                                         (C_149:
                                         begin
                                           (let jessie_152 = (G24 := !V24) in
                                           void);
                                          (C_150:
                                          begin
                                            (let jessie_153 = (G25 := !V25) in
                                            void);
                                           (C_151:
                                           begin
                                             (let jessie_154 = (G26 := !V26) in
                                             void);
                                            (C_152:
                                            begin
                                              (let jessie_155 = (G27 := !V27) in
                                              void);
                                             (C_153:
                                             begin
                                               (let jessie_156 = (G28 := !V28) in
                                               void);
                                              (C_154:
                                              begin
                                                (let jessie_157 = (G29 := !V29) in
                                                void);
                                               (C_155:
                                               begin
                                                 (let jessie_158 = (G30 := !V30) in
                                                 void);
                                                (C_156:
                                                begin
                                                  (let jessie_159 = (G31 := !V31) in
                                                  void);
                                                 (C_157:
                                                 begin
                                                   (let jessie_160 = 
                                                   (G32 := !V32) in
                                                   void);
                                                  (C_158:
                                                  begin
                                                    (let jessie_161 = 
                                                    (G12 := !V33) in
                                                    void);
                                                   (C_159:
                                                   begin
                                                     (ptr_bas_loc_ram := !ptr_bas_loc_0);
                                                    !ptr_bas_loc_ram
                                                   end)
                                                  end)
                                                 end)
                                                end)
                                               end)
                                              end)
                                             end)
                                            end)
                                           end)
                                          end)
                                         end)
                                        end))
                                      end)
                                     end)
                                    end)
                                   end)
                                  end)
                                 end)
                                end)
                               end)
                              end)
                             end)
                            end)
                           end)
                          end) in
        void)
       else void);
      (raise Return)
     end))))))))))))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_416:
    ((JC_410: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_411: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_412: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_413: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_414: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_415: valid_G13(int_P_G13_6_alloc_table)))))))) }

let main_ensures_default =
 fun (tt : unit) ->
  { ((true = true)
    and (JC_474:
        ((JC_468: valid_G3(int_P_G3_1_alloc_table))
        and ((JC_469: valid_G8(float_P_G8_2_alloc_table))
            and ((JC_470: valid_G9(float_P_G9_3_alloc_table))
                and ((JC_471: valid_G10(float_P_G10_4_alloc_table))
                    and ((JC_472: valid_G11(float_P_G11_5_alloc_table))
                        and (JC_473: valid_G13(int_P_G13_6_alloc_table))))))))) }
  (init:
  try
   begin
     (let V38 = ref (any_int32 void) in
     (C_208:
     begin
       (JC_504: (__globinit_whole_program void));
      (C_212:
      begin
        (let jessie_230 = (G20 := (C_211:
                                  (JC_506:
                                  ((Frama_C_float_interval (C_209: 1.0)) 
                                   (C_210:
                                   1000.0))))) in
        void);
       (C_214:
       begin
         (let jessie_231 = (G5 := (C_213:
                                  (JC_508:
                                  ((Frama_C_interval (safe_int32_of_integer_ (10))) 
                                   (safe_int32_of_integer_ (2000)))))) in
         void);
        (C_215:
        begin
          (JC_509: (F6 void));
         (C_216:
         begin
           (let jessie_232 = (V38 := (safe_int32_of_integer_ (0))) in void);
          try
           (let jessie_236 = begin
                               (loop_4:
                               while true do
                               { invariant (JC_511: true)  }
                                begin
                                  [ { } unit { true } ];
                                 try
                                  (let jessie_235 = begin
                                                      (let jessie_234 = 
                                                      begin
                                                        (if ((lt_int_ 
                                                              (integer_of_int32 !V38)) 
                                                             (integer_of_int32 !G4))
                                                        then void
                                                        else
                                                         (let jessie_233 = 
                                                         (raise
                                                          (Goto_while_1_break_exc
                                                          void)) in
                                                         void));
                                                       (C_217:
                                                       begin
                                                         (JC_513: (F7 void));
                                                        (C_220:
                                                        begin
                                                          (V38 := (C_219:
                                                                  (safe_int32_of_integer_ 
                                                                   (C_218:
                                                                   ((add_int 
                                                                    (integer_of_int32 !V38)) (1))))));
                                                         !V38
                                                        end)
                                                       end)
                                                      end in
                                                      void);
                                                     (raise
                                                      (Loop_continue_exc
                                                      void))
                                                    end in
                                  void)
                                  with
                                  Loop_continue_exc jessie_6 ->
                                  void end
                                end
                               done);
                              (raise (Goto_while_1_break_exc void))
                             end in
           void)
           with
           Goto_while_1_break_exc jessie_4 ->
           (while_1_break: void) end;
          (raise Return)
         end)
        end)
       end)
      end)
     end));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_476: true) }

let main_safety =
 fun (tt : unit) ->
  { (JC_474:
    ((JC_468: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_469: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_470: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_471: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_472: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_473: valid_G13(int_P_G13_6_alloc_table)))))))) }
  (init:
  try
   begin
     (let V38 = ref (any_int32 void) in
     (C_208:
     begin
       (JC_492: (__globinit_whole_program_requires void));
      (C_212:
      begin
        (let jessie_223 = (G20 := (C_211:
                                  (JC_494:
                                  ((Frama_C_float_interval_requires (C_209:
                                                                    1.0)) 
                                   (C_210:
                                   1000.0))))) in
        void);
       (C_214:
       begin
         (let jessie_224 = (G5 := (C_213:
                                  (JC_496:
                                  ((Frama_C_interval_requires (safe_int32_of_integer_ (10))) 
                                   (safe_int32_of_integer_ (2000)))))) in
         void);
        (C_215:
        begin
          (JC_497: (F6_requires void));
         (C_216:
         begin
           (let jessie_225 = (V38 := (safe_int32_of_integer_ (0))) in void);
          try
           (let jessie_229 = begin
                               (loop_3:
                               while true do
                               { invariant (JC_499: true)  }
                                begin
                                  [ { } unit { true } ];
                                 try
                                  (let jessie_228 = begin
                                                      (let jessie_227 = 
                                                      begin
                                                        (if ((lt_int_ 
                                                              (integer_of_int32 !V38)) 
                                                             (integer_of_int32 !G4))
                                                        then void
                                                        else
                                                         (let jessie_226 = 
                                                         (raise
                                                          (Goto_while_1_break_exc
                                                          void)) in
                                                         void));
                                                       (C_217:
                                                       begin
                                                         (JC_501:
                                                         (F7_requires void));
                                                        (C_220:
                                                        begin
                                                          (V38 := (C_219:
                                                                  (JC_503:
                                                                  (int32_of_integer_ 
                                                                   (C_218:
                                                                   ((add_int 
                                                                    (integer_of_int32 !V38)) (1)))))));
                                                         !V38
                                                        end)
                                                       end)
                                                      end in
                                                      void);
                                                     (raise
                                                      (Loop_continue_exc
                                                      void))
                                                    end in
                                  void)
                                  with
                                  Loop_continue_exc jessie_6 ->
                                  void end
                                end
                               done);
                              (raise (Goto_while_1_break_exc void))
                             end in
           void)
           with
           Goto_while_1_break_exc jessie_4 ->
           (while_1_break: void) end;
          (raise Return)
         end)
        end)
       end)
      end)
     end));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_484:
    ((JC_478: valid_G3(int_P_G3_1_alloc_table))
    and ((JC_479: valid_G8(float_P_G8_2_alloc_table))
        and ((JC_480: valid_G9(float_P_G9_3_alloc_table))
            and ((JC_481: valid_G10(float_P_G10_4_alloc_table))
                and ((JC_482: valid_G11(float_P_G11_5_alloc_table))
                    and (JC_483: valid_G13(int_P_G13_6_alloc_table)))))))) }


WHYLIB=WHYHOME/lib WHYEXEC=WHYHOME/bin/why.opt GWHYEXEC=WHYHOME/bin/gwhy.opt make --quiet -C renamed1.jessie --quiet -f renamed1.makefile project
why --project [...] why/renamed1.why
<project name="renamed1" context="why/renamed1_ctx.why">
  <function name="Function main">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/renamed1_po132.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "40" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po133.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "40" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po134.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "40" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po135.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "40" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po136.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "40" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po137.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "55" begin = "5" end = "27"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po138.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "55" begin = "5" end = "27"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po139.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "55" begin = "5" end = "27"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po140.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "55" begin = "5" end = "27"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po141.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "55" begin = "5" end = "27"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po142.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po143.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po144.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po145.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po146.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po147.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "278" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po148.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "278" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po149.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "278" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po150.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "278" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po151.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "278" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po152.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "339" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po153.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "339" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po154.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "339" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po155.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "339" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po156.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "339" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po157.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po158.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po159.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "439" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po160.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "439" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po161.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "439" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po162.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "439" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po163.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "439" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    </behavior>
  </function>
  <function name="Function F7">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/renamed1_po95.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po96.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po97.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po98.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po99.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po100.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po101.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po102.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po103.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po104.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po105.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po106.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po107.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po108.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po109.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po110.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po111.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po112.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po113.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po114.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po115.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po116.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po117.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po118.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "51" begin = "3" end = "5"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po119.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "51" begin = "3" end = "5"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po120.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "51" begin = "3" end = "5"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po121.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "51" begin = "3" end = "5"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po122.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "51" begin = "3" end = "5"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po123.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po124.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po125.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po126.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po127.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "339" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po128.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "339" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po129.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "339" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po130.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "339" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po131.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "339" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    </behavior>
  </function>
  <function name="Function F6">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/renamed1_po41.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po42.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po43.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po44.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po45.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po46.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po47.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po48.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po49.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po50.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po51.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po52.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po53.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po54.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po55.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po56.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po57.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po58.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "24" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po59.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "24" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po60.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "24" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po61.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "24" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po62.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "24" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po63.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po64.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po65.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "31" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po66.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "31" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po67.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "31" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po68.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "31" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po69.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "31" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po70.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po71.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po72.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po73.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "31" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po74.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "31" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po75.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "31" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po76.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "31" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po77.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "31" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po78.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po79.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po80.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "38" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po81.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "38" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po82.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "38" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po83.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "38" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po84.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "38" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po85.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po86.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po87.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po88.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po89.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po90.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "278" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po91.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "278" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po92.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "278" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po93.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "278" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po94.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "278" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    </behavior>
  </function>
  <function name="Function F5">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/renamed1_po34.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po35.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po36.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "51" begin = "3" end = "5"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po37.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "51" begin = "3" end = "5"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po38.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "51" begin = "3" end = "5"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po39.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "51" begin = "3" end = "5"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po40.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "51" begin = "3" end = "5"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    </behavior>
    <behavior name="Default behavior">
    <goal why_file="why/renamed1_po31.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "54" begin = "3" end = "5"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po32.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "54" begin = "3" end = "5"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po33.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "54" begin = "3" end = "5"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    </behavior>
  </function>
  <function name="Function F4">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/renamed1_po21.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po22.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po23.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po24.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po25.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po26.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "38" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po27.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "38" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po28.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "38" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po29.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "38" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po30.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "38" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    </behavior>
  </function>
  <function name="Function F3">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/renamed1_po11.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po12.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po13.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po14.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po15.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po16.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "31" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po17.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "31" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po18.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "31" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po19.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "31" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po20.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "31" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    </behavior>
  </function>
  <function name="Function F2">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/renamed1_po1.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po2.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po3.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po4.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po5.why">
      <location file = "PPCHOME/tests/jessie/renamed1.jessie/renamed1.jc" line = "48" begin = "6" end = "22"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po6.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "24" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po7.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "24" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po8.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "24" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po9.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "24" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/renamed1_po10.why">
      <location file = "PPCHOME/tests/jessie/renamed1.c" line = "24" begin = "4" end = "6"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    </behavior>
  </function>
</project>
logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic div_int : int, int -> int

logic mod_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

logic bool_and : bool, bool -> bool

logic bool_or : bool, bool -> bool

logic bool_xor : bool, bool -> bool

logic bool_not : bool -> bool

axiom bool_and_def:
  (forall a:bool.
    (forall b:bool.
      ((bool_and(a, b) = true) <-> ((a = true) and (b = true)))))

axiom bool_or_def:
  (forall a:bool.
    (forall b:bool. ((bool_or(a, b) = true) <-> ((a = true) or (b = true)))))

axiom bool_xor_def:
  (forall a:bool. (forall b:bool. ((bool_xor(a, b) = true) <-> (a <> b))))

axiom bool_not_def: (forall a:bool. ((bool_not(a) = true) <-> (a = false)))

logic ite : bool, 'a1, 'a1 -> 'a1

axiom ite_true: (forall x:'a1. (forall y:'a1. (ite(true, x, y) = x)))

axiom ite_false: (forall x:'a1. (forall y:'a1. (ite(false, x, y) = y)))

logic lt_int_bool : int, int -> bool

logic le_int_bool : int, int -> bool

logic gt_int_bool : int, int -> bool

logic ge_int_bool : int, int -> bool

logic eq_int_bool : int, int -> bool

logic neq_int_bool : int, int -> bool

axiom lt_int_bool_axiom:
  (forall x:int. (forall y:int. ((lt_int_bool(x, y) = true) <-> (x < y))))

axiom le_int_bool_axiom:
  (forall x:int. (forall y:int. ((le_int_bool(x, y) = true) <-> (x <= y))))

axiom gt_int_bool_axiom:
  (forall x:int. (forall y:int. ((gt_int_bool(x, y) = true) <-> (x > y))))

axiom ge_int_bool_axiom:
  (forall x:int. (forall y:int. ((ge_int_bool(x, y) = true) <-> (x >= y))))

axiom eq_int_bool_axiom:
  (forall x:int. (forall y:int. ((eq_int_bool(x, y) = true) <-> (x = y))))

axiom neq_int_bool_axiom:
  (forall x:int. (forall y:int. ((neq_int_bool(x, y) = true) <-> (x <> y))))

logic abs_int : int -> int

axiom abs_int_pos: (forall x:int. ((x >= 0) -> (abs_int(x) = x)))

axiom abs_int_neg: (forall x:int. ((x <= 0) -> (abs_int(x) = (-x))))

logic int_max : int, int -> int

logic int_min : int, int -> int

axiom int_max_is_ge:
  (forall x:int.
    (forall y:int. ((int_max(x, y) >= x) and (int_max(x, y) >= y))))

axiom int_max_is_some:
  (forall x:int.
    (forall y:int. ((int_max(x, y) = x) or (int_max(x, y) = y))))

axiom int_min_is_le:
  (forall x:int.
    (forall y:int. ((int_min(x, y) <= x) and (int_min(x, y) <= y))))

axiom int_min_is_some:
  (forall x:int.
    (forall y:int. ((int_min(x, y) = x) or (int_min(x, y) = y))))

logic lt_real : real, real -> prop

logic le_real : real, real -> prop

logic gt_real : real, real -> prop

logic ge_real : real, real -> prop

logic eq_real : real, real -> prop

logic neq_real : real, real -> prop

logic add_real : real, real -> real

logic sub_real : real, real -> real

logic mul_real : real, real -> real

logic div_real : real, real -> real

logic neg_real : real -> real

logic real_of_int : int -> real

logic int_of_real : real -> int

logic lt_real_bool : real, real -> bool

logic le_real_bool : real, real -> bool

logic gt_real_bool : real, real -> bool

logic ge_real_bool : real, real -> bool

logic eq_real_bool : real, real -> bool

logic neq_real_bool : real, real -> bool

axiom lt_real_bool_axiom:
  (forall x:real. (forall y:real. ((lt_real_bool(x, y) = true) <-> (x < y))))

axiom le_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((le_real_bool(x, y) = true) <-> (x <= y))))

axiom gt_real_bool_axiom:
  (forall x:real. (forall y:real. ((gt_real_bool(x, y) = true) <-> (x > y))))

axiom ge_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((ge_real_bool(x, y) = true) <-> (x >= y))))

axiom eq_real_bool_axiom:
  (forall x:real. (forall y:real. ((eq_real_bool(x, y) = true) <-> (x = y))))

axiom neq_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((neq_real_bool(x, y) = true) <-> (x <> y))))

logic real_max : real, real -> real

logic real_min : real, real -> real

axiom real_max_is_ge:
  (forall x:real.
    (forall y:real. ((real_max(x, y) >= x) and (real_max(x, y) >= y))))

axiom real_max_is_some:
  (forall x:real.
    (forall y:real. ((real_max(x, y) = x) or (real_max(x, y) = y))))

axiom real_min_is_le:
  (forall x:real.
    (forall y:real. ((real_min(x, y) <= x) and (real_min(x, y) <= y))))

axiom real_min_is_some:
  (forall x:real.
    (forall y:real. ((real_min(x, y) = x) or (real_min(x, y) = y))))

logic sqrt_real : real -> real

logic pow_real : real, real -> real

logic abs_real : real -> real

axiom abs_real_pos:
  (forall x:real [abs_real(x)]. ((x >= 0.0) -> (abs_real(x) = x)))

axiom abs_real_neg:
  (forall x:real [abs_real(x)]. ((x <= 0.0) -> (abs_real(x) = (-x))))

logic exp : real -> real

logic log : real -> real

logic log10 : real -> real

axiom log_exp: (forall x:real. (log(exp(x)) = x))

logic cos : real -> real

logic sin : real -> real

logic tan : real -> real

logic cosh : real -> real

logic sinh : real -> real

logic tanh : real -> real

logic acos : real -> real

logic asin : real -> real

logic atan : real -> real

logic atan2 : real, real -> real

logic hypot : real, real -> real

axiom prod_pos:
  (forall x:real.
    (forall y:real.
      ((((x > 0.0) and (y > 0.0)) -> ((x * y) > 0.0)) and
       (((x < 0.0) and (y < 0.0)) -> ((x * y) > 0.0)))))

axiom abs_minus: (forall x:real. (abs_real((-x)) = abs_real(x)))

type 't alloc_table

type 't pointer

type 't block

logic base_block : 'a1 pointer -> 'a1 block

logic pointer_address : 'a1 pointer -> unit pointer

logic absolute_address : int -> unit pointer

logic address : 'a1 pointer -> int

logic offset_max : 'a1 alloc_table, 'a1 pointer -> int

logic offset_min : 'a1 alloc_table, 'a1 pointer -> int

predicate valid(a: 'a1 alloc_table, p: 'a1 pointer) =
  ((offset_min(a, p) <= 0) and (offset_max(a, p) >= 0))

predicate same_block(p: 'a1 pointer, q: 'a1 pointer) =
  (base_block(p) = base_block(q))

logic sub_pointer : 'a1 pointer, 'a1 pointer -> int

logic shift : 'a1 pointer, int -> 'a1 pointer

logic null :  -> 'a1 pointer

axiom address_injective:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. ((p = q) <-> (address(p) = address(q)))))

axiom address_null: (address(null) = 0)

axiom address_positive: (forall p:'a1 pointer. (0 <= address(p)))

axiom address_shift_lt:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) < address(shift(p, j))) <-> (i < j)))))

axiom address_shift_le:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) <= address(shift(p, j))) <-> (i <= j)))))

axiom shift_zero: (forall p:'a1 pointer [shift(p, 0)]. (shift(p, 0) = p))

axiom shift_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(shift(p, i), j)]. (shift(shift(p, i),
        j) = shift(p, (i + j))))))

axiom offset_max_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_max(a, shift(p, i)) = (offset_max(a, p) - i)))))

axiom offset_min_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_min(a, shift(p, i)) = (offset_min(a, p) - i)))))

axiom neq_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(p, i), shift(p, j)].
        ((i <> j) -> (shift(p, i) <> shift(p, j))))))

axiom null_not_valid: (forall a:'a1 alloc_table. (not valid(a, null)))

axiom null_pointer:
  (forall a:'a1 alloc_table.
    ((offset_min(a, null) >= 0) and (offset_max(a, null) <= (-2))))

logic eq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

logic neq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

axiom eq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer. ((eq_pointer_bool(p1, p2) = true) <-> (p1 = p2))))

axiom neq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer.
      ((neq_pointer_bool(p1, p2) = true) <-> (p1 <> p2))))

axiom same_block_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(p, shift(q, i))].
        (same_block(p, q) -> same_block(p, shift(q, i))))))

axiom same_block_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(shift(q, i), p)].
        (same_block(q, p) -> same_block(shift(q, i), p)))))

axiom sub_pointer_shift:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> (p = shift(q, sub_pointer(p, q))))))

axiom sub_pointer_self:
  (forall p:'a1 pointer [sub_pointer(p, p)]. (sub_pointer(p, p) = 0))

axiom sub_pointer_zero:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> ((sub_pointer(p, q) = 0) -> (p = q)))))

axiom sub_pointer_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(shift(p, i), q)]. (sub_pointer(shift(p, i),
        q) = (sub_pointer(p, q) + i)))))

axiom sub_pointer_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(p, shift(q, i))]. (sub_pointer(p, shift(q,
        i)) = (sub_pointer(p, q) - i)))))

type ('t, 'v) memory

logic select : ('a2, 'a1) memory, 'a2 pointer -> 'a1

logic store : ('a1, 'a2) memory, 'a1 pointer, 'a2 -> ('a1, 'a2) memory

axiom select_store_eq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 = p2) -> (select(store(m, p1, a), p2) = a))))))

axiom select_store_neq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 <> p2) -> (select(store(m, p1, a), p2) = select(m, p2)))))))

type 't pset

logic pset_empty :  -> 'a1 pset

logic pset_singleton : 'a1 pointer -> 'a1 pset

logic pset_deref : ('a2, 'a1 pointer) memory, 'a2 pset -> 'a1 pset

logic pset_union : 'a1 pset, 'a1 pset -> 'a1 pset

logic pset_all : 'a1 pset -> 'a1 pset

logic pset_range : 'a1 pset, int, int -> 'a1 pset

logic pset_range_left : 'a1 pset, int -> 'a1 pset

logic pset_range_right : 'a1 pset, int -> 'a1 pset

logic in_pset : 'a1 pointer, 'a1 pset -> prop

logic valid_pset : 'a1 alloc_table, 'a1 pset -> prop

predicate pset_disjoint(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (not (in_pset(p, ps1) and in_pset(p, ps2))))

predicate pset_included(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (in_pset(p, ps1) -> in_pset(p, ps2)))

axiom pset_included_self: (forall ps:'a1 pset. pset_included(ps, ps))

axiom pset_included_range:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))].
            (((c <= a) and (b <= d)) -> pset_included(pset_range(ps, a, b),
             pset_range(ps, c, d))))))))

axiom pset_included_range_all:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))]. pset_included(pset_range(ps, a, b), pset_all(ps)))))))

axiom in_pset_empty: (forall p:'a1 pointer. (not in_pset(p, pset_empty)))

axiom in_pset_singleton:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. (in_pset(p, pset_singleton(q)) <-> (p = q))))

axiom in_pset_deref:
  (forall p:'a1 pointer.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (in_pset(p, pset_deref(m, q)) <->
         (exists r:'a2 pointer. (in_pset(r, q) and (p = select(m, r))))))))

axiom in_pset_all:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (in_pset(p, pset_all(q)) <->
       (exists i:int.
         (exists r:'a1 pointer. (in_pset(r, q) and (p = shift(r, i))))))))

axiom in_pset_range:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (forall b:int.
          (in_pset(p, pset_range(q, a, b)) <->
           (exists i:int.
             (exists r:'a1 pointer.
               ((a <= i) and
                ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))))

axiom in_pset_range_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall b:int.
        (in_pset(p, pset_range_left(q, b)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_range_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (in_pset(p, pset_range_right(q, a)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((a <= i) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_union:
  (forall p:'a1 pointer.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (in_pset(p, pset_union(s1, s2)) <->
         (in_pset(p, s1) or in_pset(p, s2))))))

axiom valid_pset_empty: (forall a:'a1 alloc_table. valid_pset(a, pset_empty))

axiom valid_pset_singleton:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (valid_pset(a, pset_singleton(p)) <-> valid(a, p))))

axiom valid_pset_deref:
  (forall a:'a1 alloc_table.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (valid_pset(a, pset_deref(m, q)) <->
         (forall r:'a2 pointer.
           (forall p:'a1 pointer.
             ((in_pset(r, q) and (p = select(m, r))) -> valid(a, p))))))))

axiom valid_pset_range:
  (forall a:'a1 alloc_table.
    (forall q:'a1 pset.
      (forall c:int.
        (forall d:int.
          (valid_pset(a, pset_range(q, c, d)) <->
           (forall i:int.
             (forall r:'a1 pointer.
               ((in_pset(r, q) and ((c <= i) and (i <= d))) -> valid(a,
                shift(r, i))))))))))

axiom valid_pset_union:
  (forall a:'a1 alloc_table.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (valid_pset(a, pset_union(s1, s2)) <->
         (valid_pset(a, s1) and valid_pset(a, s2))))))

predicate not_assigns(a: 'a1 alloc_table, m1: ('a1, 'a2) memory, m2: ('a1,
  'a2) memory, l: 'a1 pset) =
  (forall p:'a1 pointer.
    ((valid(a, p) and (not in_pset(p, l))) -> (select(m2, p) = select(m1, p))))

axiom not_assigns_refl:
  (forall a:'a1 alloc_table.
    (forall m:('a1, 'a2) memory.
      (forall l:'a1 pset. not_assigns(a, m, m, l))))

axiom not_assigns_trans:
  (forall a:'a1 alloc_table.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory.
          (forall l:'a1 pset [not_assigns(a, m1, m2, l), not_assigns(a, m1,
            m3, l)].
            (not_assigns(a, m1, m2, l) ->
             (not_assigns(a, m2, m3, l) -> not_assigns(a, m1, m3, l))))))))

logic full_separated : 'a1 pointer, 'a2 pointer -> prop

axiom full_separated_shift1:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(p, shift(q, i))))))

axiom full_separated_shift2:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift3:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift4:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(p, shift(q, i))))))

type 't tag_table

type 't tag_id

logic int_of_tag : 'a1 tag_id -> int

logic typeof : 'a1 tag_table, 'a1 pointer -> 'a1 tag_id

logic parenttag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag_bool : 'a1 tag_id, 'a1 tag_id -> bool

axiom subtag_bool_def:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id. ((subtag_bool(t1, t2) = true) <-> subtag(t1, t2))))

axiom subtag_refl: (forall t:'a1 tag_id. subtag(t, t))

axiom subtag_parent:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id.
      (forall t3:'a1 tag_id.
        (subtag(t1, t2) -> (parenttag(t2, t3) -> subtag(t1, t3))))))

predicate instanceof(a: 'a1 tag_table, p: 'a1 pointer, t: 'a1 tag_id) =
  subtag(typeof(a, p), t)

logic downcast : 'a1 tag_table, 'a1 pointer, 'a1 tag_id -> 'a1 pointer

axiom downcast_instanceof:
  (forall a:'a1 tag_table.
    (forall p:'a1 pointer.
      (forall s:'a1 tag_id. (instanceof(a, p, s) -> (downcast(a, p, s) = p)))))

logic bottom_tag :  -> 'a1 tag_id

axiom bottom_tag_axiom: (forall t:'a1 tag_id. subtag(t, bottom_tag))

predicate root_tag(t: 'a1 tag_id) = parenttag(t, bottom_tag)

axiom root_subtag:
  (forall a:'a1 tag_id.
    (forall b:'a1 tag_id.
      (forall c:'a1 tag_id.
        (root_tag(a) ->
         (root_tag(b) -> ((a <> b) -> (subtag(c, a) -> (not subtag(c, b)))))))))

predicate fully_packed(tag_table: 'a1 tag_table, mutable: ('a1,
  'a1 tag_id) memory, this: 'a1 pointer) = (select(mutable,
  this) = typeof(tag_table, this))

logic bw_compl : int -> int

logic bw_and : int, int -> int

axiom bw_and_not_null:
  (forall a:int.
    (forall b:int. ((bw_and(a, b) <> 0) -> ((a <> 0) and (b <> 0)))))

logic bw_xor : int, int -> int

logic bw_or : int, int -> int

logic lsl : int, int -> int

axiom lsl_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsl(a, b)))))

axiom lsl_left_positive_monotone:
  (forall a1:int.
    (forall a2:int.
      (forall b:int.
        (((0 <= a1) and ((a1 <= a2) and (0 <= b))) -> (lsl(a1, b) <= lsl(a2,
         b))))))

logic lsr : int, int -> int

axiom lsr_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsr(a, b)))))

axiom lsr_left_positive_decreases:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(a, b) <= a))))

logic asr : int, int -> int

axiom asr_positive_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= asr(a, b)))))

axiom asr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) <= a))))

axiom asr_lsr_same_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) = lsr(a, b)))))

axiom lsl_of_lsr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsl(lsr(a, b), b) <= a))))

axiom lsr_of_lsl_identity_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(lsl(a, b), b) = a))))

logic alloc_extends : 'a1 alloc_table, 'a1 alloc_table -> prop

predicate alloc_fresh(a: 'a1 alloc_table, p: 'a1 pointer, n: int) =
  (forall i:int. (((0 <= i) and (i < n)) -> (not valid(a, shift(p, i)))))

axiom alloc_extends_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_min(a1, p) = offset_min(a2, p)))))))

axiom alloc_extends_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_max(a1, p) = offset_max(a2, p)))))))

axiom alloc_extends_not_assigns_empty:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory.
          (forall l:'a1 pset.
            (forall p:'a1 pointer.
              (forall n:int [alloc_extends(a1, a2), alloc_fresh(a1, p, n),
                not_assigns(a2, m1, m2, l)].
                ((alloc_extends(a1, a2) and
                  (alloc_fresh(a1, p, n) and
                   (not_assigns(a2, m1, m2, l) and pset_included(l,
                    pset_all(pset_singleton(p)))))) ->
                 not_assigns(a1, m1, m2, pset_empty)))))))))

logic alloc_extends_except : 'a1 alloc_table, 'a1 alloc_table,
'a1 pset -> prop

axiom alloc_extends_except_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_min(a1,
            p) = offset_min(a2, p))))))))

axiom alloc_extends_except_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_max(a1,
            p) = offset_max(a2, p))))))))

type bitvector

logic concat_bitvector : bitvector, bitvector -> bitvector

logic offset_min_bytes : 'a1 alloc_table, 'a1 pointer, int -> int

logic offset_max_bytes : 'a1 alloc_table, 'a1 pointer, int -> int

axiom offset_min_bytes_def:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall s:int [offset_min_bytes(a, p, s)].
        ((0 < s) ->
         ((offset_min(a, p) <= (s * offset_min_bytes(a, p, s))) and
          (((s * offset_min_bytes(a, p, s)) - s) < offset_min(a, p)))))))

axiom offset_max_bytes_def:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall s:int [offset_max_bytes(a, p, s)].
        ((0 < s) ->
         (((((s * offset_max_bytes(a, p, s)) + s) - 1) <= offset_max(a,
          p)) and (offset_max(a, p) < ((((s * offset_max_bytes(a, p,
          s)) + s) + s) - 1)))))))

logic extract_bytes : bitvector, int, int -> bitvector

logic replace_bytes : bitvector, int, int, bitvector -> bitvector

axiom select_store_eq_union:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector [extract_bytes(replace_bytes(v1, o1, s1,
              v2), o2, s2)].
              (((o1 = o2) and (s1 = s2)) -> (extract_bytes(replace_bytes(v1,
               o1, s1, v2), o2, s2) = v2))))))))

axiom select_store_neq_union:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector [extract_bytes(replace_bytes(v1, o1, s1,
              v2), o2, s2)].
              ((((o2 + s2) <= o1) or ((o1 + s2) <= o2)) ->
               (extract_bytes(replace_bytes(v1, o1, s1, v2), o2,
               s2) = extract_bytes(v1, o2, s2)))))))))

axiom concat_replace_bytes_up:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector.
              (forall v3:bitvector [replace_bytes(replace_bytes(v1, o1, s1,
                v2), o2, s2, v3)].
                (((o1 + s1) = o2) -> (replace_bytes(replace_bytes(v1, o1, s1,
                 v2), o2, s2, v3) = replace_bytes(v1, o1, (s1 + s2),
                 concat_bitvector(v2, v3)))))))))))

axiom concat_replace_bytes_down:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector.
              (forall v3:bitvector [replace_bytes(replace_bytes(v1, o1, s1,
                v2), o2, s2, v3)].
                (((o2 + s2) = o1) -> (replace_bytes(replace_bytes(v1, o1, s1,
                 v2), o2, s2, v3) = replace_bytes(v1, o2, (s1 + s2),
                 concat_bitvector(v3, v2)))))))))))

axiom concat_extract_bytes:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v:bitvector [concat_bitvector(extract_bytes(v, o1, s1),
            extract_bytes(v, o2, s2))].
            (((o1 + s1) = o2) -> (concat_bitvector(extract_bytes(v, o1, s1),
             extract_bytes(v, o2, s2)) = extract_bytes(v, o1, (s1 + s2)))))))))

logic select_bytes : ('a1, bitvector) memory, 'a1 pointer, int,
int -> bitvector

logic store_bytes : ('a1, bitvector) memory, 'a1 pointer, int, int,
bitvector -> ('a1, bitvector) memory

axiom select_store_eq_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall o1:int.
          (forall s1:int.
            (forall o2:int.
              (forall s2:int.
                (forall v:bitvector [select_bytes(store_bytes(m, p1, o1, s1,
                  v), p2, o2, s2)].
                  (((p1 = p2) and ((o1 = o2) and (s1 = s2))) ->
                   (select_bytes(store_bytes(m, p1, o1, s1, v), p2, o2,
                   s2) = v))))))))))

axiom select_store_neq_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall o1:int.
          (forall s1:int.
            (forall o2:int.
              (forall s2:int.
                (forall v:bitvector [select_bytes(store_bytes(m, p1, o1, s1,
                  v), p2, o2, s2)].
                  (pset_disjoint(pset_range(pset_singleton(p1), o1,
                   (o1 + s1)), pset_range(pset_singleton(p2), o2,
                   (o2 + s2))) -> (select_bytes(store_bytes(m, p1, o1, s1,
                   v), p2, o2, s2) = select_bytes(m, p2, o2, s2)))))))))))

axiom shift_store_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall i:int.
        (forall o:int.
          (forall s:int.
            (forall v:bitvector [store_bytes(m, shift(p, i), o, s, v)].
              (store_bytes(m, shift(p, i), o, s, v) = store_bytes(m, p,
              (o + i), s, v))))))))

axiom shift_select_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall i:int.
        (forall o:int.
          (forall s:int.
            (forall v:bitvector [select_bytes(m, shift(p, i), o, s)].
              (select_bytes(m, shift(p, i), o, s) = select_bytes(m, p,
              (o + i), s))))))))

axiom concat_store_bytes_up:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall o1:int.
        (forall s1:int.
          (forall o2:int.
            (forall s2:int.
              (forall v1:bitvector.
                (forall v2:bitvector [store_bytes(store_bytes(m, p, o1, s1,
                  v1), p, o2, s2, v2)].
                  (((o1 + s1) = o2) -> (store_bytes(store_bytes(m, p, o1, s1,
                   v1), p, o2, s2, v2) = store_bytes(m, p, o1, (s1 + s2),
                   concat_bitvector(v1, v2))))))))))))

axiom concat_store_bytes_down:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall o1:int.
        (forall s1:int.
          (forall o2:int.
            (forall s2:int.
              (forall v1:bitvector.
                (forall v2:bitvector [store_bytes(store_bytes(m, p, o1, s1,
                  v1), p, o2, s2, v2)].
                  (((o2 + s2) = o1) -> (store_bytes(store_bytes(m, p, o1, s1,
                   v1), p, o2, s2, v2) = store_bytes(m, p, o2, (s1 + s2),
                   concat_bitvector(v2, v1))))))))))))

axiom concat_select_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall o1:int.
        (forall s1:int.
          (forall o2:int.
            (forall s2:int [concat_bitvector(select_bytes(m, p, o1, s1),
              select_bytes(m, p, o2, s2))].
              (((o1 + s1) = o2) -> (concat_bitvector(select_bytes(m, p, o1,
               s1), select_bytes(m, p, o2, s2)) = select_bytes(m, p, o1,
               (s1 + s2))))))))))

logic real_of_bitvector : bitvector -> real

type G10_4

type G11_5

type G13_6

type G3_1

type G8_2

type G9_3

type char_P

type float_P

type int32

type int8

type int_P

type padding

type void_P

logic G1 :  -> int32

logic G10 :  -> float_P pointer

logic G11 :  -> float_P pointer

logic G13 :  -> int_P pointer

logic G2 :  -> int32

logic G3 :  -> int_P pointer

logic G8 :  -> float_P pointer

logic G9 :  -> float_P pointer

logic bitvector_of_char_P : char_P pointer -> bitvector

logic char_P_of_bitvector : bitvector -> char_P pointer

axiom bitvector_of_char_P_of_char_P_of_bitvector:
  (forall x:bitvector. (bitvector_of_char_P(char_P_of_bitvector(x)) = x))

logic bitvector_of_float_P : float_P pointer -> bitvector

logic float_P_of_bitvector : bitvector -> float_P pointer

axiom bitvector_of_float_P_of_float_P_of_bitvector:
  (forall x:bitvector. (bitvector_of_float_P(float_P_of_bitvector(x)) = x))

logic bitvector_of_int32 : int32 -> bitvector

logic int32_of_bitvector : bitvector -> int32

axiom bitvector_of_int32_of_int32_of_bitvector:
  (forall x:bitvector. (bitvector_of_int32(int32_of_bitvector(x)) = x))

logic bitvector_of_int8 : int8 -> bitvector

logic int8_of_bitvector : bitvector -> int8

axiom bitvector_of_int8_of_int8_of_bitvector:
  (forall x:bitvector. (bitvector_of_int8(int8_of_bitvector(x)) = x))

logic bitvector_of_int_P : int_P pointer -> bitvector

logic int_P_of_bitvector : bitvector -> int_P pointer

axiom bitvector_of_int_P_of_int_P_of_bitvector:
  (forall x:bitvector. (bitvector_of_int_P(int_P_of_bitvector(x)) = x))

logic bitvector_of_void_P : void_P pointer -> bitvector

logic void_P_of_bitvector : bitvector -> void_P pointer

axiom bitvector_of_void_P_of_void_P_of_bitvector:
  (forall x:bitvector. (bitvector_of_void_P(void_P_of_bitvector(x)) = x))

logic char_P_tag :  -> char_P tag_id

axiom char_P_int: (int_of_tag(char_P_tag) = 1)

axiom char_P_of_bitvector_of_bitvector_of_char_P:
  (forall x:char_P pointer.
    (char_P_of_bitvector(bitvector_of_char_P(x)) = x))

logic char_P_of_pointer_address : unit pointer -> char_P pointer

axiom char_P_of_pointer_address_of_pointer_addr:
  (forall p:char_P pointer.
    (p = char_P_of_pointer_address(pointer_address(p))))

axiom char_P_parenttag_bottom: parenttag(char_P_tag, bottom_tag)

axiom char_P_tags:
  (forall x:char_P pointer.
    (forall char_P_tag_table:char_P tag_table. instanceof(char_P_tag_table,
      x, char_P_tag)))

logic integer_of_int32 : int32 -> int

predicate eq_int32(x: int32, y: int32) =
  (integer_of_int32(x) = integer_of_int32(y))

logic integer_of_int8 : int8 -> int

predicate eq_int8(x: int8, y: int8) =
  (integer_of_int8(x) = integer_of_int8(y))

logic float_P_tag :  -> float_P tag_id

axiom float_P_int: (int_of_tag(float_P_tag) = 1)

axiom float_P_of_bitvector_of_bitvector_of_float_P:
  (forall x:float_P pointer.
    (float_P_of_bitvector(bitvector_of_float_P(x)) = x))

logic float_P_of_pointer_address : unit pointer -> float_P pointer

axiom float_P_of_pointer_address_of_pointer_addr:
  (forall p:float_P pointer.
    (p = float_P_of_pointer_address(pointer_address(p))))

axiom float_P_parenttag_bottom: parenttag(float_P_tag, bottom_tag)

axiom float_P_tags:
  (forall x:float_P pointer.
    (forall float_P_tag_table:float_P tag_table.
      instanceof(float_P_tag_table, x, float_P_tag)))

logic int32_of_integer : int -> int32

axiom int32_coerce:
  (forall x:int.
    ((((-2147483648) <= x) and (x <= 2147483647)) ->
     (integer_of_int32(int32_of_integer(x)) = x)))

axiom int32_of_bitvector_of_bitvector_of_int32:
  (forall x:int32. eq_int32(int32_of_bitvector(bitvector_of_int32(x)), x))

axiom int32_range:
  (forall x:int32.
    (((-2147483648) <= integer_of_int32(x)) and
     (integer_of_int32(x) <= 2147483647)))

logic int8_of_integer : int -> int8

axiom int8_coerce:
  (forall x:int.
    ((((-128) <= x) and (x <= 127)) ->
     (integer_of_int8(int8_of_integer(x)) = x)))

axiom int8_of_bitvector_of_bitvector_of_int8:
  (forall x:int8. eq_int8(int8_of_bitvector(bitvector_of_int8(x)), x))

axiom int8_range:
  (forall x:int8.
    (((-128) <= integer_of_int8(x)) and (integer_of_int8(x) <= 127)))

logic int_P_tag :  -> int_P tag_id

axiom int_P_int: (int_of_tag(int_P_tag) = 1)

axiom int_P_of_bitvector_of_bitvector_of_int_P:
  (forall x:int_P pointer. (int_P_of_bitvector(bitvector_of_int_P(x)) = x))

logic int_P_of_pointer_address : unit pointer -> int_P pointer

axiom int_P_of_pointer_address_of_pointer_addr:
  (forall p:int_P pointer.
    (p = int_P_of_pointer_address(pointer_address(p))))

axiom int_P_parenttag_bottom: parenttag(int_P_tag, bottom_tag)

axiom int_P_tags:
  (forall x:int_P pointer.
    (forall int_P_tag_table:int_P tag_table. instanceof(int_P_tag_table, x,
      int_P_tag)))

predicate left_valid_struct_char_P(p: char_P pointer, a: int,
  char_P_alloc_table: char_P alloc_table) = (offset_min(char_P_alloc_table,
  p) <= a)

predicate left_valid_struct_float_P(p: float_P pointer, a: int,
  float_P_alloc_table: float_P alloc_table) =
  (offset_min(float_P_alloc_table, p) <= a)

predicate left_valid_struct_int_P(p: int_P pointer, a: int,
  int_P_alloc_table: int_P alloc_table) = (offset_min(int_P_alloc_table,
  p) <= a)

predicate left_valid_struct_void_P(p: void_P pointer, a: int,
  void_P_alloc_table: void_P alloc_table) = (offset_min(void_P_alloc_table,
  p) <= a)

axiom pointer_addr_of_char_P_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(char_P_of_pointer_address(p))))

axiom pointer_addr_of_float_P_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(float_P_of_pointer_address(p))))

axiom pointer_addr_of_int_P_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(int_P_of_pointer_address(p))))

logic void_P_of_pointer_address : unit pointer -> void_P pointer

axiom pointer_addr_of_void_P_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(void_P_of_pointer_address(p))))

predicate right_valid_struct_char_P(p: char_P pointer, b: int,
  char_P_alloc_table: char_P alloc_table) = (offset_max(char_P_alloc_table,
  p) >= b)

predicate right_valid_struct_float_P(p: float_P pointer, b: int,
  float_P_alloc_table: float_P alloc_table) =
  (offset_max(float_P_alloc_table, p) >= b)

predicate right_valid_struct_int_P(p: int_P pointer, b: int,
  int_P_alloc_table: int_P alloc_table) = (offset_max(int_P_alloc_table,
  p) >= b)

predicate right_valid_struct_void_P(p: void_P pointer, b: int,
  void_P_alloc_table: void_P alloc_table) = (offset_max(void_P_alloc_table,
  p) >= b)

predicate strict_valid_root_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) = a) and
   (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_root_float_P(p: float_P pointer, a: int, b: int,
  float_P_alloc_table: float_P alloc_table) =
  ((offset_min(float_P_alloc_table, p) = a) and
   (offset_max(float_P_alloc_table, p) = b))

predicate strict_valid_root_int_P(p: int_P pointer, a: int, b: int,
  int_P_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_alloc_table, p) = a) and (offset_max(int_P_alloc_table,
   p) = b))

predicate strict_valid_root_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) = a) and
   (offset_max(void_P_alloc_table, p) = b))

predicate strict_valid_struct_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) = a) and
   (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_struct_float_P(p: float_P pointer, a: int, b: int,
  float_P_alloc_table: float_P alloc_table) =
  ((offset_min(float_P_alloc_table, p) = a) and
   (offset_max(float_P_alloc_table, p) = b))

predicate strict_valid_struct_int_P(p: int_P pointer, a: int, b: int,
  int_P_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_alloc_table, p) = a) and (offset_max(int_P_alloc_table,
   p) = b))

predicate strict_valid_struct_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) = a) and
   (offset_max(void_P_alloc_table, p) = b))

predicate valid_G10(float_P_G10_4_alloc_table: float_P alloc_table) =
  ((offset_min(float_P_G10_4_alloc_table, G10) <= 0) and
   (offset_max(float_P_G10_4_alloc_table, G10) >= 63))

predicate valid_G11(float_P_G11_5_alloc_table: float_P alloc_table) =
  ((offset_min(float_P_G11_5_alloc_table, G11) <= 0) and
   (offset_max(float_P_G11_5_alloc_table, G11) >= 31))

predicate valid_G13(int_P_G13_6_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_G13_6_alloc_table, G13) <= 0) and
   (offset_max(int_P_G13_6_alloc_table, G13) >= 1999))

predicate valid_G3(int_P_G3_1_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_G3_1_alloc_table, G3) <= 0) and
   (offset_max(int_P_G3_1_alloc_table, G3) >= 63))

predicate valid_G8(float_P_G8_2_alloc_table: float_P alloc_table) =
  ((offset_min(float_P_G8_2_alloc_table, G8) <= 0) and
   (offset_max(float_P_G8_2_alloc_table, G8) >= 63))

predicate valid_G9(float_P_G9_3_alloc_table: float_P alloc_table) =
  ((offset_min(float_P_G9_3_alloc_table, G9) <= 0) and
   (offset_max(float_P_G9_3_alloc_table, G9) >= 63))

predicate valid_bitvector_struct_char_P(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_float_P(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_int_P(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_void_P(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_root_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) <= a) and
   (offset_max(char_P_alloc_table, p) >= b))

predicate valid_root_float_P(p: float_P pointer, a: int, b: int,
  float_P_alloc_table: float_P alloc_table) =
  ((offset_min(float_P_alloc_table, p) <= a) and
   (offset_max(float_P_alloc_table, p) >= b))

predicate valid_root_int_P(p: int_P pointer, a: int, b: int,
  int_P_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_alloc_table, p) <= a) and (offset_max(int_P_alloc_table,
   p) >= b))

predicate valid_root_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) <= a) and
   (offset_max(void_P_alloc_table, p) >= b))

predicate valid_struct_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) <= a) and
   (offset_max(char_P_alloc_table, p) >= b))

predicate valid_struct_float_P(p: float_P pointer, a: int, b: int,
  float_P_alloc_table: float_P alloc_table) =
  ((offset_min(float_P_alloc_table, p) <= a) and
   (offset_max(float_P_alloc_table, p) >= b))

predicate valid_struct_int_P(p: int_P pointer, a: int, b: int,
  int_P_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_alloc_table, p) <= a) and (offset_max(int_P_alloc_table,
   p) >= b))

predicate valid_struct_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) <= a) and
   (offset_max(void_P_alloc_table, p) >= b))

logic void_P_tag :  -> void_P tag_id

axiom void_P_int: (int_of_tag(void_P_tag) = 1)

axiom void_P_of_bitvector_of_bitvector_of_void_P:
  (forall x:void_P pointer.
    (void_P_of_bitvector(bitvector_of_void_P(x)) = x))

axiom void_P_of_pointer_address_of_pointer_addr:
  (forall p:void_P pointer.
    (p = void_P_of_pointer_address(pointer_address(p))))

axiom void_P_parenttag_bottom: parenttag(void_P_tag, bottom_tag)

axiom void_P_tags:
  (forall x:void_P pointer.
    (forall void_P_tag_table:void_P tag_table. instanceof(void_P_tag_table,
      x, void_P_tag)))

