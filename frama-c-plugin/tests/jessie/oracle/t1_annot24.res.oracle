Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -jessie -jessie-gen-only t1_annot24.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -dD t1_annot24.c"
[jessie] Starting Jessie translation
[jessie] Producing Jessie files in subdir t1_annot24.jessie
[jessie] File t1_annot24.jessie/t1_annot24.jc written.
[jessie] File t1_annot24.jessie/t1_annot24.cloc written.
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type int32 = -2147483648..2147483647

type int8 = -128..127

tag int_P = {
  int32 int_M: 32;
}

type int_P = [int_P]

tag char_P = {
  int8 char_M: 8;
}

type char_P = [char_P]

tag void_P = {
}

type void_P = [void_P]

unit __globinit_whole_program()
behavior default:
  assumes true;
  ensures (C_1 : true);
;

type buch_ListOper = 0..2

type Buch_OpStatusList = 0..1

int32 status;

int32 rr;

invariant inv :
((0 <= rr) && (rr <= 5000))

int_P[0..1] buch_CurStates;

invariant valid_buch_CurStates :
((\offset_min(buch_CurStates) <= 0) && (\offset_max(buch_CurStates) >= 1))

int_P[0..2] buch_CurTrans;

invariant valid_buch_CurTrans :
((\offset_min(buch_CurTrans) <= 0) && (\offset_max(buch_CurTrans) >= 2))

int_P[0..1] buch_CurStates_old;

invariant valid_buch_CurStates_old :
((\offset_min(buch_CurStates_old) <= 0) &&
  (\offset_max(buch_CurStates_old) >= 1))

int_P[0..2] buch_CurTrans_tmp;

invariant valid_buch_CurTrans_tmp :
((\offset_min(buch_CurTrans_tmp) <= 0) &&
  (\offset_max(buch_CurTrans_tmp) >= 2))

invariant Buch_Ranges_Validity :
(((\offset_min(buch_CurTrans) <= 0) && (\offset_max(buch_CurTrans) >= 2)) &&
  (((\offset_min(buch_CurTrans_tmp) <= 0) &&
     (\offset_max(buch_CurTrans_tmp) >= 2)) &&
    (((\offset_min(buch_CurStates) <= 0) &&
       (\offset_max(buch_CurStates) >= 1)) &&
      ((\offset_min(buch_CurStates_old) <= 0) &&
        (\offset_max(buch_CurStates_old) >= 1)))))

invariant Buch_Arrays_Coherence :
(\forall integer _buch_i;
  (((0 <= _buch_i) && (_buch_i < 3)) ==>
    ((buch_CurTrans + _buch_i).int_M == (buch_CurTrans_tmp + _buch_i).int_M)))

int_P[0..1] buch_AcceptStates;

invariant valid_buch_AcceptStates :
((\offset_min(buch_AcceptStates) <= 0) &&
  (\offset_max(buch_AcceptStates) >= 1))

invariant Buch_acc_Ranges_Validity :
((\offset_min(buch_AcceptStates) <= 0) &&
  (\offset_max(buch_AcceptStates) >= 1))

buch_ListOper buch_CurOperation;

Buch_OpStatusList buch_CurOpStatus;

axiomatic Automata {

  logic integer buch_Trans_Start(integer tr)
   
  axiom buch_Trans_Start0 :
  (buch_Trans_Start(0) == 0)
   
  axiom buch_Trans_Start1 :
  (buch_Trans_Start(1) == 0)
   
  axiom buch_Trans_Start2 :
  (buch_Trans_Start(2) == 1)
   
  logic integer buch_Trans_Stop(integer tr_0)
   
  axiom buch_Trans_Stop0 :
  (buch_Trans_Stop(0) == 0)
   
  axiom buch_Trans_Stop1 :
  (buch_Trans_Stop(1) == 1)
   
  axiom buch_Trans_Stop2 :
  (buch_Trans_Stop(2) == 1)
  
}

logic buch_Trans_Cond_param{L}(integer _buch_numTrans, integer _buch_op,
                               integer _buch_status) =
(((_buch_numTrans == 0) ==> (status == 0)) &&
  ((_buch_numTrans == 1) ==> ((_buch_op == 2) && (_buch_status == 1))))

logic buch_Trans_Cond{L}(integer _buch_numTrans_0) =
buch_Trans_Cond_param{L}(_buch_numTrans_0, buch_CurOperation,
                         buch_CurOpStatus)

invariant _Buch_st_reach_1 :
(\forall integer _buch_st;
  ((((0 <= _buch_st) && (_buch_st < 2)) &&
     (\forall integer _buch_tr;
       (((0 <= _buch_tr) && (_buch_tr < 3)) ==>
         (((buch_CurTrans + _buch_tr).int_M == 0) ||
           ((buch_Trans_Stop(_buch_tr) != _buch_st) ||
             ((! buch_Trans_Cond{Here}(_buch_tr)) ||
               ((buch_CurStates_old + buch_Trans_Start(_buch_tr)).int_M == 0))))))) ==>
    ((buch_CurStates + _buch_st).int_M == 0)))

invariant _Buch_st_reach_2 :
(\forall integer _buch_st_0;
  ((((0 <= _buch_st_0) && (_buch_st_0 < 2)) &&
     ((buch_CurStates + _buch_st_0).int_M == 0)) ==>
    (\forall integer _buch_tr_0;
      (((0 <= _buch_tr_0) && (_buch_tr_0 < 3)) ==>
        (((buch_CurTrans + _buch_tr_0).int_M == 0) ||
          ((buch_Trans_Stop(_buch_tr_0) != _buch_st_0) ||
            ((! buch_Trans_Cond{Here}(_buch_tr_0)) ||
              ((buch_CurStates_old + buch_Trans_Start(_buch_tr_0)).int_M ==
                0))))))))

invariant _Buch_st_reach_3 :
(\forall integer _buch_st_1;
  ((((0 <= _buch_st_1) && (_buch_st_1 < 2)) &&
     ((buch_CurStates + _buch_st_1).int_M != 0)) ==>
    (\exists integer _buch_tr_1;
      (((0 <= _buch_tr_1) && (_buch_tr_1 < 3)) &&
        (((buch_CurTrans + _buch_tr_1).int_M != 0) &&
          (buch_Trans_Cond{Here}(_buch_tr_1) &&
            ((buch_Trans_Stop(_buch_tr_1) == _buch_st_1) &&
              ((buch_CurStates_old + buch_Trans_Start(_buch_tr_1)).int_M !=
                0))))))))

invariant _Buch_tr_cross_1 :
(\forall integer _buch_tr_2;
  ((((0 <= _buch_tr_2) && (_buch_tr_2 < 3)) &&
     ((buch_CurTrans + _buch_tr_2).int_M != 0)) ==>
    (buch_Trans_Cond{Here}(_buch_tr_2) &&
      (((buch_CurStates_old + buch_Trans_Start(_buch_tr_2)).int_M != 0) &&
        ((buch_CurStates + buch_Trans_Stop(_buch_tr_2)).int_M != 0)))))

invariant _Buch_tr_cross_2 :
(\forall integer _buch_tr_3;
  ((((0 <= _buch_tr_3) && (_buch_tr_3 < 3)) &&
     (((buch_CurStates_old + buch_Trans_Start(_buch_tr_3)).int_M != 0) &&
       buch_Trans_Cond{Here}(_buch_tr_3))) ==>
    (((buch_CurTrans + _buch_tr_3).int_M != 0) &&
      ((buch_CurStates + buch_Trans_Stop(_buch_tr_3)).int_M != 0))))

invariant _Buch_tr_cross_3 :
(\forall integer _buch_tr_4;
  ((((0 <= _buch_tr_4) && (_buch_tr_4 < 3)) &&
     (((buch_CurStates_old + buch_Trans_Start(_buch_tr_4)).int_M != 0) ||
       (! buch_Trans_Cond{Here}(_buch_tr_4)))) ==>
    ((buch_CurTrans + _buch_tr_4).int_M != 0)))

unit fake()
  requires (C_49 : (0 == (buch_CurTrans + 1).int_M));
  requires (C_50 : ((0 != (buch_CurTrans + 0).int_M) ||
                     (0 != (buch_CurTrans + 2).int_M)));
  requires (C_51 : true);
  requires (C_52 : ((0 != (buch_CurStates + 0).int_M) ||
                     (0 != (buch_CurStates + 1).int_M)));
  requires (C_53 : (rr < 5000));
behavior default:
  assumes true;
  ensures (C_54 : true);
behavior Buchi_property_behavior:
  assumes true;
  ensures (C_55 : ((C_56 : (0 == (buch_CurTrans + 1).int_M)) &&
                    ((C_58 : ((0 != (buch_CurTrans + 0).int_M) ||
                               (0 != (buch_CurTrans + 2).int_M))) &&
                      ((C_60 : true) &&
                        (C_61 : ((0 != (buch_CurStates + 0).int_M) ||
                                  (0 != (buch_CurStates + 1).int_M)))))));
behavior j:
  assumes true;
  ensures (C_62 : (rr < 5001));
{  
   (var int32 tmp);
   
   (var int32 tmp_0);
   
   (var int32 tmp_1);
   
   {  (C_4 : (rr = (C_3 : ((C_2 : (rr + 1)) :> int32))));
      (C_5 : (buch_CurOperation = 0));
      (C_6 : (buch_CurOpStatus = 1));
      (C_9 : ((C_8 : (buch_CurStates_old + 0).int_M) = (C_7 : (buch_CurStates +
                                                                0).int_M)));
      (C_12 : ((C_11 : (buch_CurStates_old + 1).int_M) = (C_10 : (buch_CurStates +
                                                                   1).int_M)));
      (C_15 : ((C_14 : (buch_CurTrans_tmp + 0).int_M) = (C_13 : (buch_CurTrans +
                                                                  0).int_M)));
      (C_18 : ((C_17 : (buch_CurTrans_tmp + 1).int_M) = (C_16 : (buch_CurTrans +
                                                                  1).int_M)));
      (C_21 : ((C_20 : (buch_CurTrans_tmp + 2).int_M) = (C_19 : (buch_CurTrans +
                                                                  2).int_M)));
      (if (status == 0) then (if ((C_25 : (buch_CurStates_old + 0).int_M) !=
                                   0) then (C_24 : (tmp = 1)) else (C_23 : (tmp = 0))) else 
      (C_22 : (tmp = 0)));
      (C_27 : ((C_26 : (buch_CurStates + 0).int_M) = tmp));
      (C_31 : ((C_30 : (buch_CurStates + 1).int_M) = (C_29 : ((if ((C_28 : 
                                                                   (buch_CurStates_old +
                                                                    1).int_M) !=
                                                                    0) then 1 else 0) :> int32))));
      (if (status == 0) then (if ((C_37 : (buch_CurStates_old + 0).int_M) !=
                                   0) then (if ((C_36 : (buch_CurStates + 0).int_M) !=
                                                 0) then (C_35 : (tmp_0 = 1)) else 
                                           (C_34 : (tmp_0 = 0))) else 
                             (C_33 : (tmp_0 = 0))) else (C_32 : (tmp_0 = 0)));
      (C_39 : ((C_38 : (buch_CurTrans + 0).int_M) = tmp_0));
      (C_41 : ((C_40 : (buch_CurTrans + 1).int_M) = 0));
      (if ((C_46 : (buch_CurStates_old + 1).int_M) != 0) then (if ((C_45 : 
                                                                   (buch_CurStates +
                                                                    1).int_M) !=
                                                                    0) then 
                                                              (C_44 : (tmp_1 = 1)) else 
                                                              (C_43 : (tmp_1 = 0))) else 
      (C_42 : (tmp_1 = 0)));
      (C_48 : ((C_47 : (buch_CurTrans + 2).int_M) = tmp_1));
      
      (return ())
   }
}

unit op()
  requires (C_116 : (0 == (buch_CurTrans + 1).int_M));
  requires (C_117 : ((0 != (buch_CurTrans + 0).int_M) ||
                      (0 != (buch_CurTrans + 2).int_M)));
  requires (C_118 : true);
  requires (C_119 : ((0 != (buch_CurStates + 0).int_M) ||
                      (0 != (buch_CurStates + 1).int_M)));
behavior default:
  assumes true;
  ensures (C_120 : true);
behavior Buchi_property_behavior:
  assumes true;
  ensures (C_121 : ((C_122 : (0 == (buch_CurTrans + 1).int_M)) &&
                     ((C_124 : ((0 != (buch_CurTrans + 0).int_M) ||
                                 (0 != (buch_CurTrans + 2).int_M))) &&
                       ((C_126 : true) &&
                         (C_127 : ((0 != (buch_CurStates + 0).int_M) ||
                                    (0 != (buch_CurStates + 1).int_M)))))));
{  
   (var int32 tmp_0_0);
   
   (var int32 tmp_0_1);
   
   (var int32 tmp_1_0);
   
   (var int32 tmp_2);
   
   (var int32 tmp_3);
   
   {  (C_63 : (status = 1));
      (C_64 : (buch_CurOperation = 2));
      (C_65 : (buch_CurOpStatus = 1));
      (C_68 : ((C_67 : (buch_CurStates_old + 0).int_M) = (C_66 : (buch_CurStates +
                                                                   0).int_M)));
      (C_71 : ((C_70 : (buch_CurStates_old + 1).int_M) = (C_69 : (buch_CurStates +
                                                                   1).int_M)));
      (C_74 : ((C_73 : (buch_CurTrans_tmp + 0).int_M) = (C_72 : (buch_CurTrans +
                                                                  0).int_M)));
      (C_77 : ((C_76 : (buch_CurTrans_tmp + 1).int_M) = (C_75 : (buch_CurTrans +
                                                                  1).int_M)));
      (C_80 : ((C_79 : (buch_CurTrans_tmp + 2).int_M) = (C_78 : (buch_CurTrans +
                                                                  2).int_M)));
      (if (status == 0) then (if ((C_84 : (buch_CurStates_old + 0).int_M) !=
                                   0) then (C_83 : (tmp_0_0 = 1)) else 
                             (C_82 : (tmp_0_0 = 0))) else (C_81 : (tmp_0_0 = 0)));
      (C_86 : ((C_85 : (buch_CurStates + 0).int_M) = tmp_0_0));
      (if ((C_91 : (buch_CurStates_old + 0).int_M) != 0) then (C_90 : (tmp_0_1 = 1)) else 
      (if ((C_89 : (buch_CurStates_old + 1).int_M) != 0) then (C_88 : (tmp_0_1 = 1)) else 
      (C_87 : (tmp_0_1 = 0))));
      (C_93 : ((C_92 : (buch_CurStates + 1).int_M) = tmp_0_1));
      (if (status == 0) then (if ((C_99 : (buch_CurStates_old + 0).int_M) !=
                                   0) then (if ((C_98 : (buch_CurStates + 0).int_M) !=
                                                 0) then (C_97 : (tmp_1_0 = 1)) else 
                                           (C_96 : (tmp_1_0 = 0))) else 
                             (C_95 : (tmp_1_0 = 0))) else (C_94 : (tmp_1_0 = 0)));
      (C_101 : ((C_100 : (buch_CurTrans + 0).int_M) = tmp_1_0));
      (if ((C_106 : (buch_CurStates_old + 0).int_M) != 0) then (if ((C_105 : 
                                                                    (buch_CurStates +
                                                                    1).int_M) !=
                                                                    0) then 
                                                               (C_104 : (tmp_2 = 1)) else 
                                                               (C_103 : (tmp_2 = 0))) else 
      (C_102 : (tmp_2 = 0)));
      (C_108 : ((C_107 : (buch_CurTrans + 1).int_M) = tmp_2));
      (if ((C_113 : (buch_CurStates_old + 1).int_M) != 0) then (if ((C_112 : 
                                                                    (buch_CurStates +
                                                                    1).int_M) !=
                                                                    0) then 
                                                               (C_111 : (tmp_3 = 1)) else 
                                                               (C_110 : (tmp_3 = 0))) else 
      (C_109 : (tmp_3 = 0)));
      (C_115 : ((C_114 : (buch_CurTrans + 2).int_M) = tmp_3));
      
      (return ())
   }
}

int32 main()
  requires (C_180 : (0 == (buch_CurTrans + 1).int_M));
  requires (C_181 : ((0 != (buch_CurTrans + 0).int_M) ||
                      (0 != (buch_CurTrans + 2).int_M)));
  requires (C_182 : true);
  requires (C_183 : ((0 != (buch_CurStates + 0).int_M) ||
                      (0 != (buch_CurStates + 1).int_M)));
behavior default:
  assumes true;
  ensures (C_184 : true);
behavior Buchi_property_behavior:
  assumes true;
  ensures (C_185 : ((C_186 : (0 == (buch_CurTrans + 1).int_M)) &&
                     ((C_188 : ((0 != (buch_CurTrans + 0).int_M) ||
                                 (0 != (buch_CurTrans + 2).int_M))) &&
                       ((C_190 : true) &&
                         (C_191 : ((0 != (buch_CurStates + 0).int_M) ||
                                    (0 != (buch_CurStates + 1).int_M)))))));
{  
   (var int32 __retres);
   
   (var int32 tmp_0_2);
   
   (var int32 tmp_0_3);
   
   (var int32 tmp_1_1);
   
   {  (C_128 : __globinit_whole_program());
      (if (rr < 5000) then 
      {  (C_129 : (buch_CurOperation = 0));
         (C_130 : (buch_CurOpStatus = 0));
         (C_131 : fake())
      } else ());
      (C_132 : (buch_CurOperation = 2));
      (C_133 : (buch_CurOpStatus = 0));
      (C_134 : op());
      (C_135 : (__retres = 1));
      (C_136 : (buch_CurOperation = 1));
      (C_137 : (buch_CurOpStatus = 1));
      (C_140 : ((C_139 : (buch_CurStates_old + 0).int_M) = (C_138 : (buch_CurStates +
                                                                    0).int_M)));
      (C_143 : ((C_142 : (buch_CurStates_old + 1).int_M) = (C_141 : (buch_CurStates +
                                                                    1).int_M)));
      (C_146 : ((C_145 : (buch_CurTrans_tmp + 0).int_M) = (C_144 : (buch_CurTrans +
                                                                    0).int_M)));
      (C_149 : ((C_148 : (buch_CurTrans_tmp + 1).int_M) = (C_147 : (buch_CurTrans +
                                                                    1).int_M)));
      (C_152 : ((C_151 : (buch_CurTrans_tmp + 2).int_M) = (C_150 : (buch_CurTrans +
                                                                    2).int_M)));
      (if (status == 0) then (if ((C_156 : (buch_CurStates_old + 0).int_M) !=
                                   0) then (C_155 : (tmp_0_2 = 1)) else 
                             (C_154 : (tmp_0_2 = 0))) else (C_153 : (tmp_0_2 = 0)));
      (C_158 : ((C_157 : (buch_CurStates + 0).int_M) = tmp_0_2));
      (C_162 : ((C_161 : (buch_CurStates + 1).int_M) = (C_160 : ((if 
                                                                 ((C_159 : 
                                                                  (buch_CurStates_old +
                                                                    1).int_M) !=
                                                                   0) then 1 else 0) :> int32))));
      (if (status == 0) then (if ((C_168 : (buch_CurStates_old + 0).int_M) !=
                                   0) then (if ((C_167 : (buch_CurStates + 0).int_M) !=
                                                 0) then (C_166 : (tmp_0_3 = 1)) else 
                                           (C_165 : (tmp_0_3 = 0))) else 
                             (C_164 : (tmp_0_3 = 0))) else (C_163 : (tmp_0_3 = 0)));
      (C_170 : ((C_169 : (buch_CurTrans + 0).int_M) = tmp_0_3));
      (C_172 : ((C_171 : (buch_CurTrans + 1).int_M) = 0));
      (if ((C_177 : (buch_CurStates_old + 1).int_M) != 0) then (if ((C_176 : 
                                                                    (buch_CurStates +
                                                                    1).int_M) !=
                                                                    0) then 
                                                               (C_175 : (tmp_1_1 = 1)) else 
                                                               (C_174 : (tmp_1_1 = 0))) else 
      (C_173 : (tmp_1_1 = 0)));
      (C_179 : ((C_178 : (buch_CurTrans + 2).int_M) = tmp_1_1));
      
      (return __retres)
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs t1_annot24.jessie/t1_annot24.cloc t1_annot24.jessie/t1_annot24.jc
type Buch_OpStatusList

type buch_AcceptStates_5

type buch_CurStates_1

type buch_CurStates_old_3

type buch_CurTrans_2

type buch_CurTrans_tmp_4

type buch_ListOper

type char_P

type int32

type int8

type int_P

type padding

type void_P

logic integer_of_int32: int32 -> int

logic buch_CurTrans:  -> int_P pointer

logic buch_CurTrans_tmp:  -> int_P pointer

predicate Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4:(int_P, int32) memory,
 int_P_int_M_buch_CurTrans_2:(int_P, int32) memory) =
 (forall _buch_i:int.
  ((le_int((0), _buch_i) and lt_int(_buch_i, (3))) ->
   eq_int(integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                           shift(buch_CurTrans, _buch_i))),
   integer_of_int32(select(int_P_int_M_buch_CurTrans_tmp_4,
                    shift(buch_CurTrans_tmp, _buch_i))))))

logic integer_of_Buch_OpStatusList: Buch_OpStatusList -> int

logic Buch_OpStatusList_of_integer: int -> Buch_OpStatusList

axiom Buch_OpStatusList_coerce :
 (forall x:int.
  ((le_int((0), x) and le_int(x, (1))) ->
   eq_int(integer_of_Buch_OpStatusList(Buch_OpStatusList_of_integer(x)), x)))

logic Buch_OpStatusList_of_bitvector: bitvector -> Buch_OpStatusList

predicate eq_Buch_OpStatusList(x:Buch_OpStatusList,
 y:Buch_OpStatusList) =
 eq_int(integer_of_Buch_OpStatusList(x), integer_of_Buch_OpStatusList(y))

logic bitvector_of_Buch_OpStatusList: Buch_OpStatusList -> bitvector

axiom Buch_OpStatusList_of_bitvector_of_bitvector_of_Buch_OpStatusList :
 (forall x:Buch_OpStatusList.
  eq_Buch_OpStatusList(Buch_OpStatusList_of_bitvector(bitvector_of_Buch_OpStatusList(x)),
  x))

axiom Buch_OpStatusList_range :
 (forall x:Buch_OpStatusList.
  (le_int((0), integer_of_Buch_OpStatusList(x))
  and le_int(integer_of_Buch_OpStatusList(x), (1))))

logic buch_CurStates:  -> int_P pointer

logic buch_CurStates_old:  -> int_P pointer

predicate Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table:int_P alloc_table,
 int_P_buch_CurStates_old_3_alloc_table:int_P alloc_table,
 int_P_buch_CurTrans_2_alloc_table:int_P alloc_table,
 int_P_buch_CurStates_1_alloc_table:int_P alloc_table) =
 (le_int(offset_min(int_P_buch_CurTrans_2_alloc_table, buch_CurTrans), (0))
 and (ge_int(offset_max(int_P_buch_CurTrans_2_alloc_table, buch_CurTrans),
      (2))
     and (le_int(offset_min(int_P_buch_CurTrans_tmp_4_alloc_table,
                 buch_CurTrans_tmp),
          (0))
         and (ge_int(offset_max(int_P_buch_CurTrans_tmp_4_alloc_table,
                     buch_CurTrans_tmp),
              (2))
             and (le_int(offset_min(int_P_buch_CurStates_1_alloc_table,
                         buch_CurStates),
                  (0))
                 and (ge_int(offset_max(int_P_buch_CurStates_1_alloc_table,
                             buch_CurStates),
                      (1))
                     and (le_int(offset_min(int_P_buch_CurStates_old_3_alloc_table,
                                 buch_CurStates_old),
                          (0))
                         and ge_int(offset_max(int_P_buch_CurStates_old_3_alloc_table,
                                    buch_CurStates_old),
                             (1)))))))))

logic buch_AcceptStates:  -> int_P pointer

predicate Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table:int_P alloc_table) =
 (le_int(offset_min(int_P_buch_AcceptStates_5_alloc_table, buch_AcceptStates),
  (0))
 and ge_int(offset_max(int_P_buch_AcceptStates_5_alloc_table,
            buch_AcceptStates),
     (1)))

exception Loop_continue_exc of unit

exception Loop_exit_exc of unit

exception Return_label_exc of unit

logic buch_Trans_Stop: int -> int

predicate buch_Trans_Cond_param(_buch_numTrans:int,
 _buch_op:int,
 _buch_status:int,
 status_at_L:int32) =
 ((eq_int(_buch_numTrans, (0)) -> eq_int(integer_of_int32(status_at_L), (0)))
 and (eq_int(_buch_numTrans, (1)) ->
      (eq_int(_buch_op, (2)) and eq_int(_buch_status, (1)))))

logic integer_of_buch_ListOper: buch_ListOper -> int

predicate buch_Trans_Cond(_buch_numTrans_0:int,
 buch_CurOpStatus_at_L:Buch_OpStatusList,
 buch_CurOperation_at_L:buch_ListOper,
 status_at_L:int32) =
 buch_Trans_Cond_param(_buch_numTrans_0,
 integer_of_buch_ListOper(buch_CurOperation_at_L),
 integer_of_Buch_OpStatusList(buch_CurOpStatus_at_L), status_at_L)

logic buch_Trans_Start: int -> int

predicate _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3:(int_P, int32) memory,
 int_P_int_M_buch_CurTrans_2:(int_P, int32) memory,
 int_P_int_M_buch_CurStates_1:(int_P, int32) memory,
 buch_CurOpStatus:Buch_OpStatusList,
 buch_CurOperation:buch_ListOper,
 status:int32) =
 (forall _buch_st:int.
  ((le_int((0), _buch_st)
   and (lt_int(_buch_st, (2))
       and (forall _buch_tr:int.
            ((le_int((0), _buch_tr) and lt_int(_buch_tr, (3))) ->
             (eq_int(integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                      shift(buch_CurTrans, _buch_tr))),
              (0))
             or (neq_int(buch_Trans_Stop(_buch_tr), _buch_st)
                or ((not buch_Trans_Cond(_buch_tr, buch_CurOpStatus,
                         buch_CurOperation, status))
                   or eq_int(integer_of_int32(select(int_P_int_M_buch_CurStates_old_3,
                                              shift(buch_CurStates_old,
                                              buch_Trans_Start(_buch_tr)))),
                      (0))))))))) ->
   eq_int(integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                           shift(buch_CurStates, _buch_st))),
   (0))))

predicate _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3:(int_P, int32) memory,
 int_P_int_M_buch_CurTrans_2:(int_P, int32) memory,
 int_P_int_M_buch_CurStates_1:(int_P, int32) memory,
 buch_CurOpStatus:Buch_OpStatusList,
 buch_CurOperation:buch_ListOper,
 status:int32) =
 (forall _buch_st_0:int.
  ((le_int((0), _buch_st_0)
   and (lt_int(_buch_st_0, (2))
       and eq_int(integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                   shift(buch_CurStates, _buch_st_0))),
           (0)))) ->
   (forall _buch_tr_0:int.
    ((le_int((0), _buch_tr_0) and lt_int(_buch_tr_0, (3))) ->
     (eq_int(integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                              shift(buch_CurTrans, _buch_tr_0))),
      (0))
     or (neq_int(buch_Trans_Stop(_buch_tr_0), _buch_st_0)
        or ((not buch_Trans_Cond(_buch_tr_0, buch_CurOpStatus,
                 buch_CurOperation, status))
           or eq_int(integer_of_int32(select(int_P_int_M_buch_CurStates_old_3,
                                      shift(buch_CurStates_old,
                                      buch_Trans_Start(_buch_tr_0)))),
              (0)))))))))

predicate _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3:(int_P, int32) memory,
 int_P_int_M_buch_CurTrans_2:(int_P, int32) memory,
 int_P_int_M_buch_CurStates_1:(int_P, int32) memory,
 buch_CurOpStatus:Buch_OpStatusList,
 buch_CurOperation:buch_ListOper,
 status:int32) =
 (forall _buch_st_1:int.
  ((le_int((0), _buch_st_1)
   and (lt_int(_buch_st_1, (2))
       and neq_int(integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                    shift(buch_CurStates, _buch_st_1))),
           (0)))) ->
   (exists _buch_tr_1:int.
    (le_int((0), _buch_tr_1)
    and (lt_int(_buch_tr_1, (3))
        and (neq_int(integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                      shift(buch_CurTrans, _buch_tr_1))),
             (0))
            and (buch_Trans_Cond(_buch_tr_1, buch_CurOpStatus,
                 buch_CurOperation, status)
                and (eq_int(buch_Trans_Stop(_buch_tr_1), _buch_st_1)
                    and neq_int(integer_of_int32(select(int_P_int_M_buch_CurStates_old_3,
                                                 shift(buch_CurStates_old,
                                                 buch_Trans_Start(_buch_tr_1)))),
                        (0))))))))))

predicate _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3:(int_P, int32) memory,
 int_P_int_M_buch_CurTrans_2:(int_P, int32) memory,
 int_P_int_M_buch_CurStates_1:(int_P, int32) memory,
 buch_CurOpStatus:Buch_OpStatusList,
 buch_CurOperation:buch_ListOper,
 status:int32) =
 (forall _buch_tr_2:int.
  ((le_int((0), _buch_tr_2)
   and (lt_int(_buch_tr_2, (3))
       and neq_int(integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                    shift(buch_CurTrans, _buch_tr_2))),
           (0)))) ->
   (buch_Trans_Cond(_buch_tr_2, buch_CurOpStatus, buch_CurOperation, status)
   and (neq_int(integer_of_int32(select(int_P_int_M_buch_CurStates_old_3,
                                 shift(buch_CurStates_old,
                                 buch_Trans_Start(_buch_tr_2)))),
        (0))
       and neq_int(integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                    shift(buch_CurStates,
                                    buch_Trans_Stop(_buch_tr_2)))),
           (0))))))

predicate _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3:(int_P, int32) memory,
 int_P_int_M_buch_CurTrans_2:(int_P, int32) memory,
 int_P_int_M_buch_CurStates_1:(int_P, int32) memory,
 buch_CurOpStatus:Buch_OpStatusList,
 buch_CurOperation:buch_ListOper,
 status:int32) =
 (forall _buch_tr_3:int.
  ((le_int((0), _buch_tr_3)
   and (lt_int(_buch_tr_3, (3))
       and (neq_int(integer_of_int32(select(int_P_int_M_buch_CurStates_old_3,
                                     shift(buch_CurStates_old,
                                     buch_Trans_Start(_buch_tr_3)))),
            (0))
           and buch_Trans_Cond(_buch_tr_3, buch_CurOpStatus,
               buch_CurOperation, status)))) ->
   (neq_int(integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                             shift(buch_CurTrans, _buch_tr_3))),
    (0))
   and neq_int(integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                shift(buch_CurStates,
                                buch_Trans_Stop(_buch_tr_3)))),
       (0)))))

predicate _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3:(int_P, int32) memory,
 int_P_int_M_buch_CurTrans_2:(int_P, int32) memory,
 buch_CurOpStatus:Buch_OpStatusList,
 buch_CurOperation:buch_ListOper,
 status:int32) =
 (forall _buch_tr_4:int.
  ((le_int((0), _buch_tr_4)
   and (lt_int(_buch_tr_4, (3))
       and (neq_int(integer_of_int32(select(int_P_int_M_buch_CurStates_old_3,
                                     shift(buch_CurStates_old,
                                     buch_Trans_Start(_buch_tr_4)))),
            (0))
           or (not buch_Trans_Cond(_buch_tr_4, buch_CurOpStatus,
                   buch_CurOperation, status))))) ->
   neq_int(integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                            shift(buch_CurTrans, _buch_tr_4))),
   (0))))

axiom bitvector_of_Buch_OpStatusList_of_Buch_OpStatusList_of_bitvector :
 (forall x:bitvector.
  (bitvector_of_Buch_OpStatusList(Buch_OpStatusList_of_bitvector(x)) = x))

logic bitvector_of_buch_ListOper: buch_ListOper -> bitvector

logic buch_ListOper_of_bitvector: bitvector -> buch_ListOper

axiom bitvector_of_buch_ListOper_of_buch_ListOper_of_bitvector :
 (forall x:bitvector.
  (bitvector_of_buch_ListOper(buch_ListOper_of_bitvector(x)) = x))

logic bitvector_of_char_P: char_P pointer -> bitvector

logic char_P_of_bitvector: bitvector -> char_P pointer

axiom bitvector_of_char_P_of_char_P_of_bitvector :
 (forall x:bitvector. (bitvector_of_char_P(char_P_of_bitvector(x)) = x))

logic bitvector_of_int32: int32 -> bitvector

logic int32_of_bitvector: bitvector -> int32

axiom bitvector_of_int32_of_int32_of_bitvector :
 (forall x:bitvector. (bitvector_of_int32(int32_of_bitvector(x)) = x))

logic bitvector_of_int8: int8 -> bitvector

logic int8_of_bitvector: bitvector -> int8

axiom bitvector_of_int8_of_int8_of_bitvector :
 (forall x:bitvector. (bitvector_of_int8(int8_of_bitvector(x)) = x))

logic bitvector_of_int_P: int_P pointer -> bitvector

logic int_P_of_bitvector: bitvector -> int_P pointer

axiom bitvector_of_int_P_of_int_P_of_bitvector :
 (forall x:bitvector. (bitvector_of_int_P(int_P_of_bitvector(x)) = x))

logic bitvector_of_void_P: void_P pointer -> bitvector

logic void_P_of_bitvector: bitvector -> void_P pointer

axiom bitvector_of_void_P_of_void_P_of_bitvector :
 (forall x:bitvector. (bitvector_of_void_P(void_P_of_bitvector(x)) = x))

logic buch_ListOper_of_integer: int -> buch_ListOper

axiom buch_ListOper_coerce :
 (forall x:int.
  ((le_int((0), x) and le_int(x, (2))) ->
   eq_int(integer_of_buch_ListOper(buch_ListOper_of_integer(x)), x)))

predicate eq_buch_ListOper(x:buch_ListOper,
 y:buch_ListOper) =
 eq_int(integer_of_buch_ListOper(x), integer_of_buch_ListOper(y))

axiom buch_ListOper_of_bitvector_of_bitvector_of_buch_ListOper :
 (forall x:buch_ListOper.
  eq_buch_ListOper(buch_ListOper_of_bitvector(bitvector_of_buch_ListOper(x)),
  x))

axiom buch_ListOper_range :
 (forall x:buch_ListOper.
  (le_int((0), integer_of_buch_ListOper(x))
  and le_int(integer_of_buch_ListOper(x), (2))))

axiom buch_Trans_Start0 : eq_int(buch_Trans_Start((0)), (0))

axiom buch_Trans_Start1 : eq_int(buch_Trans_Start((1)), (0))

axiom buch_Trans_Start2 : eq_int(buch_Trans_Start((2)), (1))

axiom buch_Trans_Stop0 : eq_int(buch_Trans_Stop((0)), (0))

axiom buch_Trans_Stop1 : eq_int(buch_Trans_Stop((1)), (1))

axiom buch_Trans_Stop2 : eq_int(buch_Trans_Stop((2)), (1))

logic char_P_tag:  -> char_P tag_id

axiom char_P_int : (int_of_tag(char_P_tag) = (1))

axiom char_P_of_bitvector_of_bitvector_of_char_P :
 (forall x:char_P pointer. (char_P_of_bitvector(bitvector_of_char_P(x)) = x))

logic char_P_of_pointer_address: unit pointer -> char_P pointer

axiom char_P_of_pointer_address_of_pointer_addr :
 (forall p:char_P pointer.
  (p = char_P_of_pointer_address(pointer_address(p))))

axiom char_P_parenttag_bottom : parenttag(char_P_tag, bottom_tag)

axiom char_P_tags :
 (forall x:char_P pointer.
  (forall char_P_tag_table:char_P tag_table.
   instanceof(char_P_tag_table, x, char_P_tag)))

predicate eq_int32(x:int32,
 y:int32) =
 eq_int(integer_of_int32(x), integer_of_int32(y))

logic integer_of_int8: int8 -> int

predicate eq_int8(x:int8,
 y:int8) =
 eq_int(integer_of_int8(x), integer_of_int8(y))

logic int32_of_integer: int -> int32

axiom int32_coerce :
 (forall x:int.
  ((le_int((-2147483648), x) and le_int(x, (2147483647))) ->
   eq_int(integer_of_int32(int32_of_integer(x)), x)))

axiom int32_of_bitvector_of_bitvector_of_int32 :
 (forall x:int32. eq_int32(int32_of_bitvector(bitvector_of_int32(x)), x))

axiom int32_range :
 (forall x:int32.
  (le_int((-2147483648), integer_of_int32(x))
  and le_int(integer_of_int32(x), (2147483647))))

logic int8_of_integer: int -> int8

axiom int8_coerce :
 (forall x:int.
  ((le_int((-128), x) and le_int(x, (127))) ->
   eq_int(integer_of_int8(int8_of_integer(x)), x)))

axiom int8_of_bitvector_of_bitvector_of_int8 :
 (forall x:int8. eq_int8(int8_of_bitvector(bitvector_of_int8(x)), x))

axiom int8_range :
 (forall x:int8.
  (le_int((-128), integer_of_int8(x)) and le_int(integer_of_int8(x), (127))))

logic int_P_tag:  -> int_P tag_id

axiom int_P_int : (int_of_tag(int_P_tag) = (1))

axiom int_P_of_bitvector_of_bitvector_of_int_P :
 (forall x:int_P pointer. (int_P_of_bitvector(bitvector_of_int_P(x)) = x))

logic int_P_of_pointer_address: unit pointer -> int_P pointer

axiom int_P_of_pointer_address_of_pointer_addr :
 (forall p:int_P pointer. (p = int_P_of_pointer_address(pointer_address(p))))

axiom int_P_parenttag_bottom : parenttag(int_P_tag, bottom_tag)

axiom int_P_tags :
 (forall x:int_P pointer.
  (forall int_P_tag_table:int_P tag_table.
   instanceof(int_P_tag_table, x, int_P_tag)))

predicate inv(rr:int32) =
 (le_int((0), integer_of_int32(rr)) and le_int(integer_of_int32(rr), (5000)))

predicate left_valid_struct_char_P(p:char_P pointer,
 a:int,
 char_P_alloc_table:char_P alloc_table) =
 (offset_min(char_P_alloc_table, p) <= a)

predicate left_valid_struct_int_P(p:int_P pointer,
 a:int,
 int_P_alloc_table:int_P alloc_table) =
 (offset_min(int_P_alloc_table, p) <= a)

predicate left_valid_struct_void_P(p:void_P pointer,
 a:int,
 void_P_alloc_table:void_P alloc_table) =
 (offset_min(void_P_alloc_table, p) <= a)

axiom pointer_addr_of_char_P_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(char_P_of_pointer_address(p))))

axiom pointer_addr_of_int_P_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(int_P_of_pointer_address(p))))

logic void_P_of_pointer_address: unit pointer -> void_P pointer

axiom pointer_addr_of_void_P_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(void_P_of_pointer_address(p))))

predicate right_valid_struct_char_P(p:char_P pointer,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 (offset_max(char_P_alloc_table, p) >= b)

predicate right_valid_struct_int_P(p:int_P pointer,
 b:int,
 int_P_alloc_table:int_P alloc_table) =
 (offset_max(int_P_alloc_table, p) >= b)

predicate right_valid_struct_void_P(p:void_P pointer,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 (offset_max(void_P_alloc_table, p) >= b)

predicate strict_valid_root_char_P(p:char_P pointer,
 a:int,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) = a)
 and (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_root_int_P(p:int_P pointer,
 a:int,
 b:int,
 int_P_alloc_table:int_P alloc_table) =
 ((offset_min(int_P_alloc_table, p) = a)
 and (offset_max(int_P_alloc_table, p) = b))

predicate strict_valid_root_void_P(p:void_P pointer,
 a:int,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) = a)
 and (offset_max(void_P_alloc_table, p) = b))

predicate strict_valid_struct_char_P(p:char_P pointer,
 a:int,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) = a)
 and (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_struct_int_P(p:int_P pointer,
 a:int,
 b:int,
 int_P_alloc_table:int_P alloc_table) =
 ((offset_min(int_P_alloc_table, p) = a)
 and (offset_max(int_P_alloc_table, p) = b))

predicate strict_valid_struct_void_P(p:void_P pointer,
 a:int,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) = a)
 and (offset_max(void_P_alloc_table, p) = b))

predicate valid_bitvector_struct_char_P(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_int_P(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_void_P(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table:int_P alloc_table) =
 (le_int(offset_min(int_P_buch_AcceptStates_5_alloc_table, buch_AcceptStates),
  (0))
 and ge_int(offset_max(int_P_buch_AcceptStates_5_alloc_table,
            buch_AcceptStates),
     (1)))

predicate valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table:int_P alloc_table) =
 (le_int(offset_min(int_P_buch_CurStates_1_alloc_table, buch_CurStates), (0))
 and ge_int(offset_max(int_P_buch_CurStates_1_alloc_table, buch_CurStates),
     (1)))

predicate valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table:int_P alloc_table) =
 (le_int(offset_min(int_P_buch_CurStates_old_3_alloc_table,
         buch_CurStates_old),
  (0))
 and ge_int(offset_max(int_P_buch_CurStates_old_3_alloc_table,
            buch_CurStates_old),
     (1)))

predicate valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table:int_P alloc_table) =
 (le_int(offset_min(int_P_buch_CurTrans_2_alloc_table, buch_CurTrans), (0))
 and ge_int(offset_max(int_P_buch_CurTrans_2_alloc_table, buch_CurTrans),
     (2)))

predicate valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table:int_P alloc_table) =
 (le_int(offset_min(int_P_buch_CurTrans_tmp_4_alloc_table, buch_CurTrans_tmp),
  (0))
 and ge_int(offset_max(int_P_buch_CurTrans_tmp_4_alloc_table,
            buch_CurTrans_tmp),
     (2)))

predicate valid_root_char_P(p:char_P pointer,
 a:int,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) <= a)
 and (offset_max(char_P_alloc_table, p) >= b))

predicate valid_root_int_P(p:int_P pointer,
 a:int,
 b:int,
 int_P_alloc_table:int_P alloc_table) =
 ((offset_min(int_P_alloc_table, p) <= a)
 and (offset_max(int_P_alloc_table, p) >= b))

predicate valid_root_void_P(p:void_P pointer,
 a:int,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) <= a)
 and (offset_max(void_P_alloc_table, p) >= b))

predicate valid_struct_char_P(p:char_P pointer,
 a:int,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) <= a)
 and (offset_max(char_P_alloc_table, p) >= b))

predicate valid_struct_int_P(p:int_P pointer,
 a:int,
 b:int,
 int_P_alloc_table:int_P alloc_table) =
 ((offset_min(int_P_alloc_table, p) <= a)
 and (offset_max(int_P_alloc_table, p) >= b))

predicate valid_struct_void_P(p:void_P pointer,
 a:int,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) <= a)
 and (offset_max(void_P_alloc_table, p) >= b))

logic void_P_tag:  -> void_P tag_id

axiom void_P_int : (int_of_tag(void_P_tag) = (1))

axiom void_P_of_bitvector_of_bitvector_of_void_P :
 (forall x:void_P pointer. (void_P_of_bitvector(bitvector_of_void_P(x)) = x))

axiom void_P_of_pointer_address_of_pointer_addr :
 (forall p:void_P pointer.
  (p = void_P_of_pointer_address(pointer_address(p))))

axiom void_P_parenttag_bottom : parenttag(void_P_tag, bottom_tag)

axiom void_P_tags :
 (forall x:void_P pointer.
  (forall void_P_tag_table:void_P tag_table.
   instanceof(void_P_tag_table, x, void_P_tag)))

parameter Buch_OpStatusList_of_integer_ :
 x:int ->
  { (le_int((0), x) and le_int(x, (1)))} Buch_OpStatusList
  { eq_int(integer_of_Buch_OpStatusList(result), x) }

parameter int_P_buch_AcceptStates_5_alloc_table : int_P alloc_table ref

parameter int_P_buch_CurTrans_tmp_4_alloc_table : int_P alloc_table ref

parameter int_P_buch_CurStates_old_3_alloc_table : int_P alloc_table ref

parameter int_P_buch_CurTrans_2_alloc_table : int_P alloc_table ref

parameter int_P_buch_CurStates_1_alloc_table : int_P alloc_table ref

parameter int_P_int_M_buch_CurTrans_tmp_4 : (int_P, int32) memory ref

parameter int_P_int_M_buch_CurStates_old_3 : (int_P, int32) memory ref

parameter int_P_int_M_buch_CurTrans_2 : (int_P, int32) memory ref

parameter int_P_int_M_buch_CurStates_1 : (int_P, int32) memory ref

parameter buch_CurOpStatus : Buch_OpStatusList ref

parameter buch_CurOperation : buch_ListOper ref

parameter rr : int32 ref

parameter status : int32 ref

parameter __globinit_whole_program :
 tt:unit ->
  { } unit
  reads buch_CurOpStatus,buch_CurOperation,int_P_buch_AcceptStates_5_alloc_table,int_P_buch_CurStates_1_alloc_table,int_P_buch_CurStates_old_3_alloc_table,int_P_buch_CurTrans_2_alloc_table,int_P_buch_CurTrans_tmp_4_alloc_table,int_P_int_M_buch_CurStates_1,int_P_int_M_buch_CurStates_old_3,int_P_int_M_buch_CurTrans_2,int_P_int_M_buch_CurTrans_tmp_4,rr,status
  { (JC_128:
    ((JC_113: inv(rr))
    and ((JC_114: valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
        and ((JC_115: valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
            and ((JC_116:
                 valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                and ((JC_117:
                     valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                    and ((JC_118:
                         Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                         int_P_buch_CurStates_old_3_alloc_table,
                         int_P_buch_CurTrans_2_alloc_table,
                         int_P_buch_CurStates_1_alloc_table))
                        and ((JC_119:
                             Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                             int_P_int_M_buch_CurTrans_2))
                            and ((JC_120:
                                 valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                and ((JC_121:
                                     Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                    and ((JC_122:
                                         _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                         int_P_int_M_buch_CurTrans_2,
                                         int_P_int_M_buch_CurStates_1,
                                         buch_CurOpStatus, buch_CurOperation,
                                         status))
                                        and ((JC_123:
                                             _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                             int_P_int_M_buch_CurTrans_2,
                                             int_P_int_M_buch_CurStates_1,
                                             buch_CurOpStatus,
                                             buch_CurOperation, status))
                                            and ((JC_124:
                                                 _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_125:
                                                     _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_126:
                                                         _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and (JC_127:
                                                            _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                            int_P_int_M_buch_CurTrans_2,
                                                            buch_CurOpStatus,
                                                            buch_CurOperation,
                                                            status))))))))))))))))) }

parameter __globinit_whole_program_requires :
 tt:unit ->
  { (JC_76:
    ((JC_61: inv(rr))
    and ((JC_62: valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
        and ((JC_63: valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
            and ((JC_64:
                 valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                and ((JC_65:
                     valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                    and ((JC_66:
                         Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                         int_P_buch_CurStates_old_3_alloc_table,
                         int_P_buch_CurTrans_2_alloc_table,
                         int_P_buch_CurStates_1_alloc_table))
                        and ((JC_67:
                             Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                             int_P_int_M_buch_CurTrans_2))
                            and ((JC_68:
                                 valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                and ((JC_69:
                                     Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                    and ((JC_70:
                                         _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                         int_P_int_M_buch_CurTrans_2,
                                         int_P_int_M_buch_CurStates_1,
                                         buch_CurOpStatus, buch_CurOperation,
                                         status))
                                        and ((JC_71:
                                             _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                             int_P_int_M_buch_CurTrans_2,
                                             int_P_int_M_buch_CurStates_1,
                                             buch_CurOpStatus,
                                             buch_CurOperation, status))
                                            and ((JC_72:
                                                 _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_73:
                                                     _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_74:
                                                         _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and (JC_75:
                                                            _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                            int_P_int_M_buch_CurTrans_2,
                                                            buch_CurOpStatus,
                                                            buch_CurOperation,
                                                            status)))))))))))))))))}
  unit
  reads buch_CurOpStatus,buch_CurOperation,int_P_buch_AcceptStates_5_alloc_table,int_P_buch_CurStates_1_alloc_table,int_P_buch_CurStates_old_3_alloc_table,int_P_buch_CurTrans_2_alloc_table,int_P_buch_CurTrans_tmp_4_alloc_table,int_P_int_M_buch_CurStates_1,int_P_int_M_buch_CurStates_old_3,int_P_int_M_buch_CurTrans_2,int_P_int_M_buch_CurTrans_tmp_4,rr,status
  { (JC_128:
    ((JC_113: inv(rr))
    and ((JC_114: valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
        and ((JC_115: valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
            and ((JC_116:
                 valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                and ((JC_117:
                     valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                    and ((JC_118:
                         Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                         int_P_buch_CurStates_old_3_alloc_table,
                         int_P_buch_CurTrans_2_alloc_table,
                         int_P_buch_CurStates_1_alloc_table))
                        and ((JC_119:
                             Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                             int_P_int_M_buch_CurTrans_2))
                            and ((JC_120:
                                 valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                and ((JC_121:
                                     Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                    and ((JC_122:
                                         _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                         int_P_int_M_buch_CurTrans_2,
                                         int_P_int_M_buch_CurStates_1,
                                         buch_CurOpStatus, buch_CurOperation,
                                         status))
                                        and ((JC_123:
                                             _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                             int_P_int_M_buch_CurTrans_2,
                                             int_P_int_M_buch_CurStates_1,
                                             buch_CurOpStatus,
                                             buch_CurOperation, status))
                                            and ((JC_124:
                                                 _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_125:
                                                     _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_126:
                                                         _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and (JC_127:
                                                            _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                            int_P_int_M_buch_CurTrans_2,
                                                            buch_CurOpStatus,
                                                            buch_CurOperation,
                                                            status))))))))))))))))) }

parameter alloc_bitvector_struct_char_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_char_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_char_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_char_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_int_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_int_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_int_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_int_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_void_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_void_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_void_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_void_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter char_P_alloc_table : char_P alloc_table ref

parameter char_P_tag_table : char_P tag_table ref

parameter alloc_struct_char_P :
 n:int ->
  char_P_alloc_table:char_P alloc_table ref ->
   char_P_tag_table:char_P tag_table ref ->
    { } char_P pointer writes char_P_alloc_table,char_P_tag_table
    { (strict_valid_struct_char_P(result, (0), sub_int(n, (1)),
       char_P_alloc_table)
      and (alloc_extends(char_P_alloc_table@, char_P_alloc_table)
          and (alloc_fresh(char_P_alloc_table@, result, n)
              and instanceof(char_P_tag_table, result, char_P_tag)))) }

parameter alloc_struct_char_P_requires :
 n:int ->
  char_P_alloc_table:char_P alloc_table ref ->
   char_P_tag_table:char_P tag_table ref ->
    { ge_int(n, (0))} char_P pointer
    writes char_P_alloc_table,char_P_tag_table
    { (strict_valid_struct_char_P(result, (0), sub_int(n, (1)),
       char_P_alloc_table)
      and (alloc_extends(char_P_alloc_table@, char_P_alloc_table)
          and (alloc_fresh(char_P_alloc_table@, result, n)
              and instanceof(char_P_tag_table, result, char_P_tag)))) }

parameter int_P_alloc_table : int_P alloc_table ref

parameter int_P_tag_table : int_P tag_table ref

parameter alloc_struct_int_P :
 n:int ->
  int_P_alloc_table:int_P alloc_table ref ->
   int_P_tag_table:int_P tag_table ref ->
    { } int_P pointer writes int_P_alloc_table,int_P_tag_table
    { (strict_valid_struct_int_P(result, (0), sub_int(n, (1)),
       int_P_alloc_table)
      and (alloc_extends(int_P_alloc_table@, int_P_alloc_table)
          and (alloc_fresh(int_P_alloc_table@, result, n)
              and instanceof(int_P_tag_table, result, int_P_tag)))) }

parameter alloc_struct_int_P_requires :
 n:int ->
  int_P_alloc_table:int_P alloc_table ref ->
   int_P_tag_table:int_P tag_table ref ->
    { ge_int(n, (0))} int_P pointer writes int_P_alloc_table,int_P_tag_table
    { (strict_valid_struct_int_P(result, (0), sub_int(n, (1)),
       int_P_alloc_table)
      and (alloc_extends(int_P_alloc_table@, int_P_alloc_table)
          and (alloc_fresh(int_P_alloc_table@, result, n)
              and instanceof(int_P_tag_table, result, int_P_tag)))) }

parameter void_P_alloc_table : void_P alloc_table ref

parameter void_P_tag_table : void_P tag_table ref

parameter alloc_struct_void_P :
 n:int ->
  void_P_alloc_table:void_P alloc_table ref ->
   void_P_tag_table:void_P tag_table ref ->
    { } void_P pointer writes void_P_alloc_table,void_P_tag_table
    { (strict_valid_struct_void_P(result, (0), sub_int(n, (1)),
       void_P_alloc_table)
      and (alloc_extends(void_P_alloc_table@, void_P_alloc_table)
          and (alloc_fresh(void_P_alloc_table@, result, n)
              and instanceof(void_P_tag_table, result, void_P_tag)))) }

parameter alloc_struct_void_P_requires :
 n:int ->
  void_P_alloc_table:void_P alloc_table ref ->
   void_P_tag_table:void_P tag_table ref ->
    { ge_int(n, (0))} void_P pointer
    writes void_P_alloc_table,void_P_tag_table
    { (strict_valid_struct_void_P(result, (0), sub_int(n, (1)),
       void_P_alloc_table)
      and (alloc_extends(void_P_alloc_table@, void_P_alloc_table)
          and (alloc_fresh(void_P_alloc_table@, result, n)
              and instanceof(void_P_tag_table, result, void_P_tag)))) }

parameter any_Buch_OpStatusList : unit -> { } Buch_OpStatusList { true }

parameter any_buch_ListOper : unit -> { } buch_ListOper { true }

parameter any_int32 : unit -> { } int32 { true }

parameter any_int8 : unit -> { } int8 { true }

parameter buch_ListOper_of_integer_ :
 x:int ->
  { (le_int((0), x) and le_int(x, (2)))} buch_ListOper
  { eq_int(integer_of_buch_ListOper(result), x) }

parameter fake :
 tt:unit ->
  { } unit
  reads buch_CurOpStatus,buch_CurOperation,int_P_buch_AcceptStates_5_alloc_table,int_P_buch_CurStates_1_alloc_table,int_P_buch_CurStates_old_3_alloc_table,int_P_buch_CurTrans_2_alloc_table,int_P_buch_CurTrans_tmp_4_alloc_table,int_P_int_M_buch_CurStates_1,int_P_int_M_buch_CurStates_old_3,int_P_int_M_buch_CurTrans_2,int_P_int_M_buch_CurTrans_tmp_4,rr,status
  writes buch_CurOpStatus,buch_CurOperation,int_P_int_M_buch_CurStates_1,int_P_int_M_buch_CurStates_old_3,int_P_int_M_buch_CurTrans_2,int_P_int_M_buch_CurTrans_tmp_4,rr
  { ((JC_206:
     ((JC_191: inv(rr))
     and ((JC_192: valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
         and ((JC_193:
              valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
             and ((JC_194:
                  valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                 and ((JC_195:
                      valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                     and ((JC_196:
                          Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                          int_P_buch_CurStates_old_3_alloc_table,
                          int_P_buch_CurTrans_2_alloc_table,
                          int_P_buch_CurStates_1_alloc_table))
                         and ((JC_197:
                              Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                              int_P_int_M_buch_CurTrans_2))
                             and ((JC_198:
                                  valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                 and ((JC_199:
                                      Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                     and ((JC_200:
                                          _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                          int_P_int_M_buch_CurTrans_2,
                                          int_P_int_M_buch_CurStates_1,
                                          buch_CurOpStatus,
                                          buch_CurOperation, status))
                                         and ((JC_201:
                                              _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                              int_P_int_M_buch_CurTrans_2,
                                              int_P_int_M_buch_CurStates_1,
                                              buch_CurOpStatus,
                                              buch_CurOperation, status))
                                             and ((JC_202:
                                                  _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                  int_P_int_M_buch_CurTrans_2,
                                                  int_P_int_M_buch_CurStates_1,
                                                  buch_CurOpStatus,
                                                  buch_CurOperation, status))
                                                 and ((JC_203:
                                                      _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                      int_P_int_M_buch_CurTrans_2,
                                                      int_P_int_M_buch_CurStates_1,
                                                      buch_CurOpStatus,
                                                      buch_CurOperation,
                                                      status))
                                                     and ((JC_204:
                                                          _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                          int_P_int_M_buch_CurTrans_2,
                                                          int_P_int_M_buch_CurStates_1,
                                                          buch_CurOpStatus,
                                                          buch_CurOperation,
                                                          status))
                                                         and (JC_205:
                                                             _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status)))))))))))))))))
    and (((true = true) ->
          (JC_282:
          ((JC_266: lt_int(integer_of_int32(rr), (5001)))
          and ((JC_267: inv(rr))
              and ((JC_268:
                   valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
                  and ((JC_269:
                       valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                      and ((JC_270:
                           valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                          and ((JC_271:
                               valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                              and ((JC_272:
                                   Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                                   int_P_buch_CurStates_old_3_alloc_table,
                                   int_P_buch_CurTrans_2_alloc_table,
                                   int_P_buch_CurStates_1_alloc_table))
                                  and ((JC_273:
                                       Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                       int_P_int_M_buch_CurTrans_2))
                                      and ((JC_274:
                                           valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                          and ((JC_275:
                                               Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                              and ((JC_276:
                                                   _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                                   int_P_int_M_buch_CurTrans_2,
                                                   int_P_int_M_buch_CurStates_1,
                                                   buch_CurOpStatus,
                                                   buch_CurOperation, status))
                                                  and ((JC_277:
                                                       _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                       int_P_int_M_buch_CurTrans_2,
                                                       int_P_int_M_buch_CurStates_1,
                                                       buch_CurOpStatus,
                                                       buch_CurOperation,
                                                       status))
                                                      and ((JC_278:
                                                           _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                           int_P_int_M_buch_CurTrans_2,
                                                           int_P_int_M_buch_CurStates_1,
                                                           buch_CurOpStatus,
                                                           buch_CurOperation,
                                                           status))
                                                          and ((JC_279:
                                                               _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                               int_P_int_M_buch_CurTrans_2,
                                                               int_P_int_M_buch_CurStates_1,
                                                               buch_CurOpStatus,
                                                               buch_CurOperation,
                                                               status))
                                                              and ((JC_280:
                                                                   _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                                   int_P_int_M_buch_CurTrans_2,
                                                                   int_P_int_M_buch_CurStates_1,
                                                                   buch_CurOpStatus,
                                                                   buch_CurOperation,
                                                                   status))
                                                                  and 
                                                                  (JC_281:
                                                                  _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                  int_P_int_M_buch_CurTrans_2,
                                                                  buch_CurOpStatus,
                                                                  buch_CurOperation,
                                                                  status)))))))))))))))))))
        and ((true = true) ->
             (JC_248:
             ((JC_232:
              ((JC_228:
               eq_int((0),
               integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                shift(buch_CurTrans, (1))))))
              and ((JC_229:
                   (neq_int((0),
                    integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                     shift(buch_CurTrans, (0)))))
                   or neq_int((0),
                      integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                       shift(buch_CurTrans, (2)))))))
                  and ((JC_230: (true = true))
                      and (JC_231:
                          (neq_int((0),
                           integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                            shift(buch_CurStates, (0)))))
                          or neq_int((0),
                             integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                              shift(buch_CurStates, (1)))))))))))
             and ((JC_233: inv(rr))
                 and ((JC_234:
                      valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
                     and ((JC_235:
                          valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                         and ((JC_236:
                              valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                             and ((JC_237:
                                  valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                                 and ((JC_238:
                                      Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                                      int_P_buch_CurStates_old_3_alloc_table,
                                      int_P_buch_CurTrans_2_alloc_table,
                                      int_P_buch_CurStates_1_alloc_table))
                                     and ((JC_239:
                                          Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                          int_P_int_M_buch_CurTrans_2))
                                         and ((JC_240:
                                              valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                             and ((JC_241:
                                                  Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                                 and ((JC_242:
                                                      _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                                      int_P_int_M_buch_CurTrans_2,
                                                      int_P_int_M_buch_CurStates_1,
                                                      buch_CurOpStatus,
                                                      buch_CurOperation,
                                                      status))
                                                     and ((JC_243:
                                                          _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                          int_P_int_M_buch_CurTrans_2,
                                                          int_P_int_M_buch_CurStates_1,
                                                          buch_CurOpStatus,
                                                          buch_CurOperation,
                                                          status))
                                                         and ((JC_244:
                                                              _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                              int_P_int_M_buch_CurTrans_2,
                                                              int_P_int_M_buch_CurStates_1,
                                                              buch_CurOpStatus,
                                                              buch_CurOperation,
                                                              status))
                                                             and ((JC_245:
                                                                  _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                                  int_P_int_M_buch_CurTrans_2,
                                                                  int_P_int_M_buch_CurStates_1,
                                                                  buch_CurOpStatus,
                                                                  buch_CurOperation,
                                                                  status))
                                                                 and 
                                                                 ((JC_246:
                                                                  _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                                  int_P_int_M_buch_CurTrans_2,
                                                                  int_P_int_M_buch_CurStates_1,
                                                                  buch_CurOpStatus,
                                                                  buch_CurOperation,
                                                                  status))
                                                                 and 
                                                                 (JC_247:
                                                                 _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                 int_P_int_M_buch_CurTrans_2,
                                                                 buch_CurOpStatus,
                                                                 buch_CurOperation,
                                                                 status))))))))))))))))))))) }

parameter fake_requires :
 tt:unit ->
  { (JC_149:
    (((JC_129:
      eq_int((0),
      integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                       shift(buch_CurTrans, (1))))))
     and ((JC_130:
          (neq_int((0),
           integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                            shift(buch_CurTrans, (0)))))
          or neq_int((0),
             integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                              shift(buch_CurTrans, (2)))))))
         and ((JC_131: (true = true))
             and ((JC_132:
                  (neq_int((0),
                   integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                    shift(buch_CurStates, (0)))))
                  or neq_int((0),
                     integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                      shift(buch_CurStates, (1)))))))
                 and (JC_133: lt_int(integer_of_int32(rr), (5000)))))))
    and ((JC_134: inv(rr))
        and ((JC_135:
             valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
            and ((JC_136:
                 valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                and ((JC_137:
                     valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                    and ((JC_138:
                         valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                        and ((JC_139:
                             Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                             int_P_buch_CurStates_old_3_alloc_table,
                             int_P_buch_CurTrans_2_alloc_table,
                             int_P_buch_CurStates_1_alloc_table))
                            and ((JC_140:
                                 Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                 int_P_int_M_buch_CurTrans_2))
                                and ((JC_141:
                                     valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                    and ((JC_142:
                                         Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_143:
                                             _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                             int_P_int_M_buch_CurTrans_2,
                                             int_P_int_M_buch_CurStates_1,
                                             buch_CurOpStatus,
                                             buch_CurOperation, status))
                                            and ((JC_144:
                                                 _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_145:
                                                     _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_146:
                                                         _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_147:
                                                             _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and (JC_148:
                                                                _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                int_P_int_M_buch_CurTrans_2,
                                                                buch_CurOpStatus,
                                                                buch_CurOperation,
                                                                status))))))))))))))))))}
  unit
  reads buch_CurOpStatus,buch_CurOperation,int_P_buch_AcceptStates_5_alloc_table,int_P_buch_CurStates_1_alloc_table,int_P_buch_CurStates_old_3_alloc_table,int_P_buch_CurTrans_2_alloc_table,int_P_buch_CurTrans_tmp_4_alloc_table,int_P_int_M_buch_CurStates_1,int_P_int_M_buch_CurStates_old_3,int_P_int_M_buch_CurTrans_2,int_P_int_M_buch_CurTrans_tmp_4,rr,status
  writes buch_CurOpStatus,buch_CurOperation,int_P_int_M_buch_CurStates_1,int_P_int_M_buch_CurStates_old_3,int_P_int_M_buch_CurTrans_2,int_P_int_M_buch_CurTrans_tmp_4,rr
  { ((JC_206:
     ((JC_191: inv(rr))
     and ((JC_192: valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
         and ((JC_193:
              valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
             and ((JC_194:
                  valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                 and ((JC_195:
                      valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                     and ((JC_196:
                          Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                          int_P_buch_CurStates_old_3_alloc_table,
                          int_P_buch_CurTrans_2_alloc_table,
                          int_P_buch_CurStates_1_alloc_table))
                         and ((JC_197:
                              Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                              int_P_int_M_buch_CurTrans_2))
                             and ((JC_198:
                                  valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                 and ((JC_199:
                                      Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                     and ((JC_200:
                                          _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                          int_P_int_M_buch_CurTrans_2,
                                          int_P_int_M_buch_CurStates_1,
                                          buch_CurOpStatus,
                                          buch_CurOperation, status))
                                         and ((JC_201:
                                              _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                              int_P_int_M_buch_CurTrans_2,
                                              int_P_int_M_buch_CurStates_1,
                                              buch_CurOpStatus,
                                              buch_CurOperation, status))
                                             and ((JC_202:
                                                  _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                  int_P_int_M_buch_CurTrans_2,
                                                  int_P_int_M_buch_CurStates_1,
                                                  buch_CurOpStatus,
                                                  buch_CurOperation, status))
                                                 and ((JC_203:
                                                      _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                      int_P_int_M_buch_CurTrans_2,
                                                      int_P_int_M_buch_CurStates_1,
                                                      buch_CurOpStatus,
                                                      buch_CurOperation,
                                                      status))
                                                     and ((JC_204:
                                                          _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                          int_P_int_M_buch_CurTrans_2,
                                                          int_P_int_M_buch_CurStates_1,
                                                          buch_CurOpStatus,
                                                          buch_CurOperation,
                                                          status))
                                                         and (JC_205:
                                                             _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status)))))))))))))))))
    and (((true = true) ->
          (JC_282:
          ((JC_266: lt_int(integer_of_int32(rr), (5001)))
          and ((JC_267: inv(rr))
              and ((JC_268:
                   valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
                  and ((JC_269:
                       valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                      and ((JC_270:
                           valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                          and ((JC_271:
                               valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                              and ((JC_272:
                                   Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                                   int_P_buch_CurStates_old_3_alloc_table,
                                   int_P_buch_CurTrans_2_alloc_table,
                                   int_P_buch_CurStates_1_alloc_table))
                                  and ((JC_273:
                                       Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                       int_P_int_M_buch_CurTrans_2))
                                      and ((JC_274:
                                           valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                          and ((JC_275:
                                               Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                              and ((JC_276:
                                                   _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                                   int_P_int_M_buch_CurTrans_2,
                                                   int_P_int_M_buch_CurStates_1,
                                                   buch_CurOpStatus,
                                                   buch_CurOperation, status))
                                                  and ((JC_277:
                                                       _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                       int_P_int_M_buch_CurTrans_2,
                                                       int_P_int_M_buch_CurStates_1,
                                                       buch_CurOpStatus,
                                                       buch_CurOperation,
                                                       status))
                                                      and ((JC_278:
                                                           _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                           int_P_int_M_buch_CurTrans_2,
                                                           int_P_int_M_buch_CurStates_1,
                                                           buch_CurOpStatus,
                                                           buch_CurOperation,
                                                           status))
                                                          and ((JC_279:
                                                               _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                               int_P_int_M_buch_CurTrans_2,
                                                               int_P_int_M_buch_CurStates_1,
                                                               buch_CurOpStatus,
                                                               buch_CurOperation,
                                                               status))
                                                              and ((JC_280:
                                                                   _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                                   int_P_int_M_buch_CurTrans_2,
                                                                   int_P_int_M_buch_CurStates_1,
                                                                   buch_CurOpStatus,
                                                                   buch_CurOperation,
                                                                   status))
                                                                  and 
                                                                  (JC_281:
                                                                  _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                  int_P_int_M_buch_CurTrans_2,
                                                                  buch_CurOpStatus,
                                                                  buch_CurOperation,
                                                                  status)))))))))))))))))))
        and ((true = true) ->
             (JC_248:
             ((JC_232:
              ((JC_228:
               eq_int((0),
               integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                shift(buch_CurTrans, (1))))))
              and ((JC_229:
                   (neq_int((0),
                    integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                     shift(buch_CurTrans, (0)))))
                   or neq_int((0),
                      integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                       shift(buch_CurTrans, (2)))))))
                  and ((JC_230: (true = true))
                      and (JC_231:
                          (neq_int((0),
                           integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                            shift(buch_CurStates, (0)))))
                          or neq_int((0),
                             integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                              shift(buch_CurStates, (1)))))))))))
             and ((JC_233: inv(rr))
                 and ((JC_234:
                      valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
                     and ((JC_235:
                          valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                         and ((JC_236:
                              valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                             and ((JC_237:
                                  valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                                 and ((JC_238:
                                      Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                                      int_P_buch_CurStates_old_3_alloc_table,
                                      int_P_buch_CurTrans_2_alloc_table,
                                      int_P_buch_CurStates_1_alloc_table))
                                     and ((JC_239:
                                          Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                          int_P_int_M_buch_CurTrans_2))
                                         and ((JC_240:
                                              valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                             and ((JC_241:
                                                  Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                                 and ((JC_242:
                                                      _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                                      int_P_int_M_buch_CurTrans_2,
                                                      int_P_int_M_buch_CurStates_1,
                                                      buch_CurOpStatus,
                                                      buch_CurOperation,
                                                      status))
                                                     and ((JC_243:
                                                          _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                          int_P_int_M_buch_CurTrans_2,
                                                          int_P_int_M_buch_CurStates_1,
                                                          buch_CurOpStatus,
                                                          buch_CurOperation,
                                                          status))
                                                         and ((JC_244:
                                                              _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                              int_P_int_M_buch_CurTrans_2,
                                                              int_P_int_M_buch_CurStates_1,
                                                              buch_CurOpStatus,
                                                              buch_CurOperation,
                                                              status))
                                                             and ((JC_245:
                                                                  _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                                  int_P_int_M_buch_CurTrans_2,
                                                                  int_P_int_M_buch_CurStates_1,
                                                                  buch_CurOpStatus,
                                                                  buch_CurOperation,
                                                                  status))
                                                                 and 
                                                                 ((JC_246:
                                                                  _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                                  int_P_int_M_buch_CurTrans_2,
                                                                  int_P_int_M_buch_CurStates_1,
                                                                  buch_CurOpStatus,
                                                                  buch_CurOperation,
                                                                  status))
                                                                 and 
                                                                 (JC_247:
                                                                 _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                 int_P_int_M_buch_CurTrans_2,
                                                                 buch_CurOpStatus,
                                                                 buch_CurOperation,
                                                                 status))))))))))))))))))))) }

parameter int32_of_integer_ :
 x:int ->
  { (le_int((-2147483648), x) and le_int(x, (2147483647)))} int32
  { eq_int(integer_of_int32(result), x) }

parameter int8_of_integer_ :
 x:int ->
  { (le_int((-128), x) and le_int(x, (127)))} int8
  { eq_int(integer_of_int8(result), x) }

parameter main :
 tt:unit ->
  { } int32
  reads buch_CurOpStatus,buch_CurOperation,int_P_buch_AcceptStates_5_alloc_table,int_P_buch_CurStates_1_alloc_table,int_P_buch_CurStates_old_3_alloc_table,int_P_buch_CurTrans_2_alloc_table,int_P_buch_CurTrans_tmp_4_alloc_table,int_P_int_M_buch_CurStates_1,int_P_int_M_buch_CurStates_old_3,int_P_int_M_buch_CurTrans_2,int_P_int_M_buch_CurTrans_tmp_4,rr,status
  writes buch_CurOpStatus,buch_CurOperation,int_P_int_M_buch_CurStates_1,int_P_int_M_buch_CurStates_old_3,int_P_int_M_buch_CurTrans_2,int_P_int_M_buch_CurTrans_tmp_4,rr,status
  { ((JC_480:
     ((JC_465: inv(rr))
     and ((JC_466: valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
         and ((JC_467:
              valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
             and ((JC_468:
                  valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                 and ((JC_469:
                      valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                     and ((JC_470:
                          Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                          int_P_buch_CurStates_old_3_alloc_table,
                          int_P_buch_CurTrans_2_alloc_table,
                          int_P_buch_CurStates_1_alloc_table))
                         and ((JC_471:
                              Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                              int_P_int_M_buch_CurTrans_2))
                             and ((JC_472:
                                  valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                 and ((JC_473:
                                      Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                     and ((JC_474:
                                          _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                          int_P_int_M_buch_CurTrans_2,
                                          int_P_int_M_buch_CurStates_1,
                                          buch_CurOpStatus,
                                          buch_CurOperation, status))
                                         and ((JC_475:
                                              _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                              int_P_int_M_buch_CurTrans_2,
                                              int_P_int_M_buch_CurStates_1,
                                              buch_CurOpStatus,
                                              buch_CurOperation, status))
                                             and ((JC_476:
                                                  _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                  int_P_int_M_buch_CurTrans_2,
                                                  int_P_int_M_buch_CurStates_1,
                                                  buch_CurOpStatus,
                                                  buch_CurOperation, status))
                                                 and ((JC_477:
                                                      _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                      int_P_int_M_buch_CurTrans_2,
                                                      int_P_int_M_buch_CurStates_1,
                                                      buch_CurOpStatus,
                                                      buch_CurOperation,
                                                      status))
                                                     and ((JC_478:
                                                          _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                          int_P_int_M_buch_CurTrans_2,
                                                          int_P_int_M_buch_CurStates_1,
                                                          buch_CurOpStatus,
                                                          buch_CurOperation,
                                                          status))
                                                         and (JC_479:
                                                             _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status)))))))))))))))))
    and ((true = true) ->
         (JC_522:
         ((JC_506:
          ((JC_502:
           eq_int((0),
           integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                            shift(buch_CurTrans, (1))))))
          and ((JC_503:
               (neq_int((0),
                integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                 shift(buch_CurTrans, (0)))))
               or neq_int((0),
                  integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                   shift(buch_CurTrans, (2)))))))
              and ((JC_504: (true = true))
                  and (JC_505:
                      (neq_int((0),
                       integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                        shift(buch_CurStates, (0)))))
                      or neq_int((0),
                         integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                          shift(buch_CurStates, (1)))))))))))
         and ((JC_507: inv(rr))
             and ((JC_508:
                  valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
                 and ((JC_509:
                      valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                     and ((JC_510:
                          valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                         and ((JC_511:
                              valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                             and ((JC_512:
                                  Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                                  int_P_buch_CurStates_old_3_alloc_table,
                                  int_P_buch_CurTrans_2_alloc_table,
                                  int_P_buch_CurStates_1_alloc_table))
                                 and ((JC_513:
                                      Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                      int_P_int_M_buch_CurTrans_2))
                                     and ((JC_514:
                                          valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                         and ((JC_515:
                                              Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                             and ((JC_516:
                                                  _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                                  int_P_int_M_buch_CurTrans_2,
                                                  int_P_int_M_buch_CurStates_1,
                                                  buch_CurOpStatus,
                                                  buch_CurOperation, status))
                                                 and ((JC_517:
                                                      _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                      int_P_int_M_buch_CurTrans_2,
                                                      int_P_int_M_buch_CurStates_1,
                                                      buch_CurOpStatus,
                                                      buch_CurOperation,
                                                      status))
                                                     and ((JC_518:
                                                          _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                          int_P_int_M_buch_CurTrans_2,
                                                          int_P_int_M_buch_CurStates_1,
                                                          buch_CurOpStatus,
                                                          buch_CurOperation,
                                                          status))
                                                         and ((JC_519:
                                                              _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                              int_P_int_M_buch_CurTrans_2,
                                                              int_P_int_M_buch_CurStates_1,
                                                              buch_CurOpStatus,
                                                              buch_CurOperation,
                                                              status))
                                                             and ((JC_520:
                                                                  _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                                  int_P_int_M_buch_CurTrans_2,
                                                                  int_P_int_M_buch_CurStates_1,
                                                                  buch_CurOpStatus,
                                                                  buch_CurOperation,
                                                                  status))
                                                                 and 
                                                                 (JC_521:
                                                                 _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                 int_P_int_M_buch_CurTrans_2,
                                                                 buch_CurOpStatus,
                                                                 buch_CurOperation,
                                                                 status)))))))))))))))))))) }

parameter main_requires :
 tt:unit ->
  { (JC_424:
    (((JC_405:
      eq_int((0),
      integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                       shift(buch_CurTrans, (1))))))
     and ((JC_406:
          (neq_int((0),
           integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                            shift(buch_CurTrans, (0)))))
          or neq_int((0),
             integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                              shift(buch_CurTrans, (2)))))))
         and ((JC_407: (true = true))
             and (JC_408:
                 (neq_int((0),
                  integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                   shift(buch_CurStates, (0)))))
                 or neq_int((0),
                    integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                     shift(buch_CurStates, (1))))))))))
    and ((JC_409: inv(rr))
        and ((JC_410:
             valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
            and ((JC_411:
                 valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                and ((JC_412:
                     valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                    and ((JC_413:
                         valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                        and ((JC_414:
                             Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                             int_P_buch_CurStates_old_3_alloc_table,
                             int_P_buch_CurTrans_2_alloc_table,
                             int_P_buch_CurStates_1_alloc_table))
                            and ((JC_415:
                                 Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                 int_P_int_M_buch_CurTrans_2))
                                and ((JC_416:
                                     valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                    and ((JC_417:
                                         Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_418:
                                             _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                             int_P_int_M_buch_CurTrans_2,
                                             int_P_int_M_buch_CurStates_1,
                                             buch_CurOpStatus,
                                             buch_CurOperation, status))
                                            and ((JC_419:
                                                 _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_420:
                                                     _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_421:
                                                         _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_422:
                                                             _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and (JC_423:
                                                                _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                int_P_int_M_buch_CurTrans_2,
                                                                buch_CurOpStatus,
                                                                buch_CurOperation,
                                                                status))))))))))))))))))}
  int32
  reads buch_CurOpStatus,buch_CurOperation,int_P_buch_AcceptStates_5_alloc_table,int_P_buch_CurStates_1_alloc_table,int_P_buch_CurStates_old_3_alloc_table,int_P_buch_CurTrans_2_alloc_table,int_P_buch_CurTrans_tmp_4_alloc_table,int_P_int_M_buch_CurStates_1,int_P_int_M_buch_CurStates_old_3,int_P_int_M_buch_CurTrans_2,int_P_int_M_buch_CurTrans_tmp_4,rr,status
  writes buch_CurOpStatus,buch_CurOperation,int_P_int_M_buch_CurStates_1,int_P_int_M_buch_CurStates_old_3,int_P_int_M_buch_CurTrans_2,int_P_int_M_buch_CurTrans_tmp_4,rr,status
  { ((JC_480:
     ((JC_465: inv(rr))
     and ((JC_466: valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
         and ((JC_467:
              valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
             and ((JC_468:
                  valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                 and ((JC_469:
                      valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                     and ((JC_470:
                          Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                          int_P_buch_CurStates_old_3_alloc_table,
                          int_P_buch_CurTrans_2_alloc_table,
                          int_P_buch_CurStates_1_alloc_table))
                         and ((JC_471:
                              Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                              int_P_int_M_buch_CurTrans_2))
                             and ((JC_472:
                                  valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                 and ((JC_473:
                                      Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                     and ((JC_474:
                                          _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                          int_P_int_M_buch_CurTrans_2,
                                          int_P_int_M_buch_CurStates_1,
                                          buch_CurOpStatus,
                                          buch_CurOperation, status))
                                         and ((JC_475:
                                              _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                              int_P_int_M_buch_CurTrans_2,
                                              int_P_int_M_buch_CurStates_1,
                                              buch_CurOpStatus,
                                              buch_CurOperation, status))
                                             and ((JC_476:
                                                  _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                  int_P_int_M_buch_CurTrans_2,
                                                  int_P_int_M_buch_CurStates_1,
                                                  buch_CurOpStatus,
                                                  buch_CurOperation, status))
                                                 and ((JC_477:
                                                      _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                      int_P_int_M_buch_CurTrans_2,
                                                      int_P_int_M_buch_CurStates_1,
                                                      buch_CurOpStatus,
                                                      buch_CurOperation,
                                                      status))
                                                     and ((JC_478:
                                                          _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                          int_P_int_M_buch_CurTrans_2,
                                                          int_P_int_M_buch_CurStates_1,
                                                          buch_CurOpStatus,
                                                          buch_CurOperation,
                                                          status))
                                                         and (JC_479:
                                                             _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status)))))))))))))))))
    and ((true = true) ->
         (JC_522:
         ((JC_506:
          ((JC_502:
           eq_int((0),
           integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                            shift(buch_CurTrans, (1))))))
          and ((JC_503:
               (neq_int((0),
                integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                 shift(buch_CurTrans, (0)))))
               or neq_int((0),
                  integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                   shift(buch_CurTrans, (2)))))))
              and ((JC_504: (true = true))
                  and (JC_505:
                      (neq_int((0),
                       integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                        shift(buch_CurStates, (0)))))
                      or neq_int((0),
                         integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                          shift(buch_CurStates, (1)))))))))))
         and ((JC_507: inv(rr))
             and ((JC_508:
                  valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
                 and ((JC_509:
                      valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                     and ((JC_510:
                          valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                         and ((JC_511:
                              valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                             and ((JC_512:
                                  Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                                  int_P_buch_CurStates_old_3_alloc_table,
                                  int_P_buch_CurTrans_2_alloc_table,
                                  int_P_buch_CurStates_1_alloc_table))
                                 and ((JC_513:
                                      Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                      int_P_int_M_buch_CurTrans_2))
                                     and ((JC_514:
                                          valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                         and ((JC_515:
                                              Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                             and ((JC_516:
                                                  _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                                  int_P_int_M_buch_CurTrans_2,
                                                  int_P_int_M_buch_CurStates_1,
                                                  buch_CurOpStatus,
                                                  buch_CurOperation, status))
                                                 and ((JC_517:
                                                      _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                      int_P_int_M_buch_CurTrans_2,
                                                      int_P_int_M_buch_CurStates_1,
                                                      buch_CurOpStatus,
                                                      buch_CurOperation,
                                                      status))
                                                     and ((JC_518:
                                                          _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                          int_P_int_M_buch_CurTrans_2,
                                                          int_P_int_M_buch_CurStates_1,
                                                          buch_CurOpStatus,
                                                          buch_CurOperation,
                                                          status))
                                                         and ((JC_519:
                                                              _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                              int_P_int_M_buch_CurTrans_2,
                                                              int_P_int_M_buch_CurStates_1,
                                                              buch_CurOpStatus,
                                                              buch_CurOperation,
                                                              status))
                                                             and ((JC_520:
                                                                  _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                                  int_P_int_M_buch_CurTrans_2,
                                                                  int_P_int_M_buch_CurStates_1,
                                                                  buch_CurOpStatus,
                                                                  buch_CurOperation,
                                                                  status))
                                                                 and 
                                                                 (JC_521:
                                                                 _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                 int_P_int_M_buch_CurTrans_2,
                                                                 buch_CurOpStatus,
                                                                 buch_CurOperation,
                                                                 status)))))))))))))))))))) }

parameter op :
 tt:unit ->
  { } unit
  reads buch_CurOpStatus,buch_CurOperation,int_P_buch_AcceptStates_5_alloc_table,int_P_buch_CurStates_1_alloc_table,int_P_buch_CurStates_old_3_alloc_table,int_P_buch_CurTrans_2_alloc_table,int_P_buch_CurTrans_tmp_4_alloc_table,int_P_int_M_buch_CurStates_1,int_P_int_M_buch_CurStates_old_3,int_P_int_M_buch_CurTrans_2,int_P_int_M_buch_CurTrans_tmp_4,rr,status
  writes buch_CurOpStatus,buch_CurOperation,int_P_int_M_buch_CurStates_1,int_P_int_M_buch_CurStates_old_3,int_P_int_M_buch_CurTrans_2,int_P_int_M_buch_CurTrans_tmp_4,status
  { ((JC_362:
     ((JC_347: inv(rr))
     and ((JC_348: valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
         and ((JC_349:
              valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
             and ((JC_350:
                  valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                 and ((JC_351:
                      valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                     and ((JC_352:
                          Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                          int_P_buch_CurStates_old_3_alloc_table,
                          int_P_buch_CurTrans_2_alloc_table,
                          int_P_buch_CurStates_1_alloc_table))
                         and ((JC_353:
                              Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                              int_P_int_M_buch_CurTrans_2))
                             and ((JC_354:
                                  valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                 and ((JC_355:
                                      Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                     and ((JC_356:
                                          _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                          int_P_int_M_buch_CurTrans_2,
                                          int_P_int_M_buch_CurStates_1,
                                          buch_CurOpStatus,
                                          buch_CurOperation, status))
                                         and ((JC_357:
                                              _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                              int_P_int_M_buch_CurTrans_2,
                                              int_P_int_M_buch_CurStates_1,
                                              buch_CurOpStatus,
                                              buch_CurOperation, status))
                                             and ((JC_358:
                                                  _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                  int_P_int_M_buch_CurTrans_2,
                                                  int_P_int_M_buch_CurStates_1,
                                                  buch_CurOpStatus,
                                                  buch_CurOperation, status))
                                                 and ((JC_359:
                                                      _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                      int_P_int_M_buch_CurTrans_2,
                                                      int_P_int_M_buch_CurStates_1,
                                                      buch_CurOpStatus,
                                                      buch_CurOperation,
                                                      status))
                                                     and ((JC_360:
                                                          _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                          int_P_int_M_buch_CurTrans_2,
                                                          int_P_int_M_buch_CurStates_1,
                                                          buch_CurOpStatus,
                                                          buch_CurOperation,
                                                          status))
                                                         and (JC_361:
                                                             _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status)))))))))))))))))
    and ((true = true) ->
         (JC_404:
         ((JC_388:
          ((JC_384:
           eq_int((0),
           integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                            shift(buch_CurTrans, (1))))))
          and ((JC_385:
               (neq_int((0),
                integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                 shift(buch_CurTrans, (0)))))
               or neq_int((0),
                  integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                   shift(buch_CurTrans, (2)))))))
              and ((JC_386: (true = true))
                  and (JC_387:
                      (neq_int((0),
                       integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                        shift(buch_CurStates, (0)))))
                      or neq_int((0),
                         integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                          shift(buch_CurStates, (1)))))))))))
         and ((JC_389: inv(rr))
             and ((JC_390:
                  valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
                 and ((JC_391:
                      valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                     and ((JC_392:
                          valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                         and ((JC_393:
                              valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                             and ((JC_394:
                                  Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                                  int_P_buch_CurStates_old_3_alloc_table,
                                  int_P_buch_CurTrans_2_alloc_table,
                                  int_P_buch_CurStates_1_alloc_table))
                                 and ((JC_395:
                                      Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                      int_P_int_M_buch_CurTrans_2))
                                     and ((JC_396:
                                          valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                         and ((JC_397:
                                              Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                             and ((JC_398:
                                                  _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                                  int_P_int_M_buch_CurTrans_2,
                                                  int_P_int_M_buch_CurStates_1,
                                                  buch_CurOpStatus,
                                                  buch_CurOperation, status))
                                                 and ((JC_399:
                                                      _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                      int_P_int_M_buch_CurTrans_2,
                                                      int_P_int_M_buch_CurStates_1,
                                                      buch_CurOpStatus,
                                                      buch_CurOperation,
                                                      status))
                                                     and ((JC_400:
                                                          _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                          int_P_int_M_buch_CurTrans_2,
                                                          int_P_int_M_buch_CurStates_1,
                                                          buch_CurOpStatus,
                                                          buch_CurOperation,
                                                          status))
                                                         and ((JC_401:
                                                              _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                              int_P_int_M_buch_CurTrans_2,
                                                              int_P_int_M_buch_CurStates_1,
                                                              buch_CurOpStatus,
                                                              buch_CurOperation,
                                                              status))
                                                             and ((JC_402:
                                                                  _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                                  int_P_int_M_buch_CurTrans_2,
                                                                  int_P_int_M_buch_CurStates_1,
                                                                  buch_CurOpStatus,
                                                                  buch_CurOperation,
                                                                  status))
                                                                 and 
                                                                 (JC_403:
                                                                 _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                 int_P_int_M_buch_CurTrans_2,
                                                                 buch_CurOpStatus,
                                                                 buch_CurOperation,
                                                                 status)))))))))))))))))))) }

parameter op_requires :
 tt:unit ->
  { (JC_306:
    (((JC_287:
      eq_int((0),
      integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                       shift(buch_CurTrans, (1))))))
     and ((JC_288:
          (neq_int((0),
           integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                            shift(buch_CurTrans, (0)))))
          or neq_int((0),
             integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                              shift(buch_CurTrans, (2)))))))
         and ((JC_289: (true = true))
             and (JC_290:
                 (neq_int((0),
                  integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                   shift(buch_CurStates, (0)))))
                 or neq_int((0),
                    integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                     shift(buch_CurStates, (1))))))))))
    and ((JC_291: inv(rr))
        and ((JC_292:
             valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
            and ((JC_293:
                 valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                and ((JC_294:
                     valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                    and ((JC_295:
                         valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                        and ((JC_296:
                             Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                             int_P_buch_CurStates_old_3_alloc_table,
                             int_P_buch_CurTrans_2_alloc_table,
                             int_P_buch_CurStates_1_alloc_table))
                            and ((JC_297:
                                 Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                 int_P_int_M_buch_CurTrans_2))
                                and ((JC_298:
                                     valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                    and ((JC_299:
                                         Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_300:
                                             _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                             int_P_int_M_buch_CurTrans_2,
                                             int_P_int_M_buch_CurStates_1,
                                             buch_CurOpStatus,
                                             buch_CurOperation, status))
                                            and ((JC_301:
                                                 _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_302:
                                                     _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_303:
                                                         _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_304:
                                                             _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and (JC_305:
                                                                _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                int_P_int_M_buch_CurTrans_2,
                                                                buch_CurOpStatus,
                                                                buch_CurOperation,
                                                                status))))))))))))))))))}
  unit
  reads buch_CurOpStatus,buch_CurOperation,int_P_buch_AcceptStates_5_alloc_table,int_P_buch_CurStates_1_alloc_table,int_P_buch_CurStates_old_3_alloc_table,int_P_buch_CurTrans_2_alloc_table,int_P_buch_CurTrans_tmp_4_alloc_table,int_P_int_M_buch_CurStates_1,int_P_int_M_buch_CurStates_old_3,int_P_int_M_buch_CurTrans_2,int_P_int_M_buch_CurTrans_tmp_4,rr,status
  writes buch_CurOpStatus,buch_CurOperation,int_P_int_M_buch_CurStates_1,int_P_int_M_buch_CurStates_old_3,int_P_int_M_buch_CurTrans_2,int_P_int_M_buch_CurTrans_tmp_4,status
  { ((JC_362:
     ((JC_347: inv(rr))
     and ((JC_348: valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
         and ((JC_349:
              valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
             and ((JC_350:
                  valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                 and ((JC_351:
                      valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                     and ((JC_352:
                          Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                          int_P_buch_CurStates_old_3_alloc_table,
                          int_P_buch_CurTrans_2_alloc_table,
                          int_P_buch_CurStates_1_alloc_table))
                         and ((JC_353:
                              Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                              int_P_int_M_buch_CurTrans_2))
                             and ((JC_354:
                                  valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                 and ((JC_355:
                                      Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                     and ((JC_356:
                                          _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                          int_P_int_M_buch_CurTrans_2,
                                          int_P_int_M_buch_CurStates_1,
                                          buch_CurOpStatus,
                                          buch_CurOperation, status))
                                         and ((JC_357:
                                              _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                              int_P_int_M_buch_CurTrans_2,
                                              int_P_int_M_buch_CurStates_1,
                                              buch_CurOpStatus,
                                              buch_CurOperation, status))
                                             and ((JC_358:
                                                  _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                  int_P_int_M_buch_CurTrans_2,
                                                  int_P_int_M_buch_CurStates_1,
                                                  buch_CurOpStatus,
                                                  buch_CurOperation, status))
                                                 and ((JC_359:
                                                      _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                      int_P_int_M_buch_CurTrans_2,
                                                      int_P_int_M_buch_CurStates_1,
                                                      buch_CurOpStatus,
                                                      buch_CurOperation,
                                                      status))
                                                     and ((JC_360:
                                                          _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                          int_P_int_M_buch_CurTrans_2,
                                                          int_P_int_M_buch_CurStates_1,
                                                          buch_CurOpStatus,
                                                          buch_CurOperation,
                                                          status))
                                                         and (JC_361:
                                                             _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status)))))))))))))))))
    and ((true = true) ->
         (JC_404:
         ((JC_388:
          ((JC_384:
           eq_int((0),
           integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                            shift(buch_CurTrans, (1))))))
          and ((JC_385:
               (neq_int((0),
                integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                 shift(buch_CurTrans, (0)))))
               or neq_int((0),
                  integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                   shift(buch_CurTrans, (2)))))))
              and ((JC_386: (true = true))
                  and (JC_387:
                      (neq_int((0),
                       integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                        shift(buch_CurStates, (0)))))
                      or neq_int((0),
                         integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                          shift(buch_CurStates, (1)))))))))))
         and ((JC_389: inv(rr))
             and ((JC_390:
                  valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
                 and ((JC_391:
                      valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                     and ((JC_392:
                          valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                         and ((JC_393:
                              valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                             and ((JC_394:
                                  Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                                  int_P_buch_CurStates_old_3_alloc_table,
                                  int_P_buch_CurTrans_2_alloc_table,
                                  int_P_buch_CurStates_1_alloc_table))
                                 and ((JC_395:
                                      Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                      int_P_int_M_buch_CurTrans_2))
                                     and ((JC_396:
                                          valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                         and ((JC_397:
                                              Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                             and ((JC_398:
                                                  _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                                  int_P_int_M_buch_CurTrans_2,
                                                  int_P_int_M_buch_CurStates_1,
                                                  buch_CurOpStatus,
                                                  buch_CurOperation, status))
                                                 and ((JC_399:
                                                      _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                      int_P_int_M_buch_CurTrans_2,
                                                      int_P_int_M_buch_CurStates_1,
                                                      buch_CurOpStatus,
                                                      buch_CurOperation,
                                                      status))
                                                     and ((JC_400:
                                                          _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                          int_P_int_M_buch_CurTrans_2,
                                                          int_P_int_M_buch_CurStates_1,
                                                          buch_CurOpStatus,
                                                          buch_CurOperation,
                                                          status))
                                                         and ((JC_401:
                                                              _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                              int_P_int_M_buch_CurTrans_2,
                                                              int_P_int_M_buch_CurStates_1,
                                                              buch_CurOpStatus,
                                                              buch_CurOperation,
                                                              status))
                                                             and ((JC_402:
                                                                  _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                                  int_P_int_M_buch_CurTrans_2,
                                                                  int_P_int_M_buch_CurStates_1,
                                                                  buch_CurOpStatus,
                                                                  buch_CurOperation,
                                                                  status))
                                                                 and 
                                                                 (JC_403:
                                                                 _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                 int_P_int_M_buch_CurTrans_2,
                                                                 buch_CurOpStatus,
                                                                 buch_CurOperation,
                                                                 status)))))))))))))))))))) }

parameter safe_Buch_OpStatusList_of_integer_ :
 x:int ->
  { } Buch_OpStatusList { eq_int(integer_of_Buch_OpStatusList(result), x) }

parameter safe_buch_ListOper_of_integer_ :
 x:int -> { } buch_ListOper { eq_int(integer_of_buch_ListOper(result), x) }

parameter safe_int32_of_integer_ :
 x:int -> { } int32 { eq_int(integer_of_int32(result), x) }

parameter safe_int8_of_integer_ :
 x:int -> { } int8 { eq_int(integer_of_int8(result), x) }

let fake_ensures_Buchi_property_behavior =
 fun (tt : unit) ->
  { ((true = true)
    and (JC_171:
        (((JC_151:
          eq_int((0),
          integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                           shift(buch_CurTrans, (1))))))
         and ((JC_152:
              (neq_int((0),
               integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                shift(buch_CurTrans, (0)))))
              or neq_int((0),
                 integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                  shift(buch_CurTrans, (2)))))))
             and ((JC_153: (true = true))
                 and ((JC_154:
                      (neq_int((0),
                       integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                        shift(buch_CurStates, (0)))))
                      or neq_int((0),
                         integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                          shift(buch_CurStates, (1)))))))
                     and (JC_155: lt_int(integer_of_int32(rr), (5000)))))))
        and ((JC_156: inv(rr))
            and ((JC_157:
                 valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
                and ((JC_158:
                     valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                    and ((JC_159:
                         valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                        and ((JC_160:
                             valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                            and ((JC_161:
                                 Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                                 int_P_buch_CurStates_old_3_alloc_table,
                                 int_P_buch_CurTrans_2_alloc_table,
                                 int_P_buch_CurStates_1_alloc_table))
                                and ((JC_162:
                                     Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                     int_P_int_M_buch_CurTrans_2))
                                    and ((JC_163:
                                         valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_164:
                                             Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                            and ((JC_165:
                                                 _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_166:
                                                     _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_167:
                                                         _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_168:
                                                             _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and ((JC_169:
                                                                 _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                                 int_P_int_M_buch_CurTrans_2,
                                                                 int_P_int_M_buch_CurStates_1,
                                                                 buch_CurOpStatus,
                                                                 buch_CurOperation,
                                                                 status))
                                                                and (JC_170:
                                                                    _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                    int_P_int_M_buch_CurTrans_2,
                                                                    buch_CurOpStatus,
                                                                    buch_CurOperation,
                                                                    status))))))))))))))))))) }
  (init:
  try
   begin
     (let tmp = ref (any_int32 void) in
     (let tmp_0 = ref (any_int32 void) in
     (let tmp_1 = ref (any_int32 void) in
     (C_4:
     begin
       (let jessie_121 = (rr := (C_3:
                                (safe_int32_of_integer_ (C_2:
                                                        ((add_int (integer_of_int32 !rr)) (1)))))) in
       void);
      (C_5:
      begin
        (let jessie_122 = (buch_CurOperation := (safe_buch_ListOper_of_integer_ (0))) in
        void);
       (C_6:
       begin
         (let jessie_123 = (buch_CurOpStatus := (safe_Buch_OpStatusList_of_integer_ (1))) in
         void);
        (C_9:
        begin
          (let jessie_128 = (let jessie_124 = (C_7:
                                              ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                               ((shift buch_CurStates) (0)))) in
                            (let jessie_127 = ((shift buch_CurStates_old) (0)) in
                            (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_127) jessie_124))) in
          void);
         (C_12:
         begin
           (let jessie_133 = (let jessie_129 = (C_10:
                                               ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                ((shift buch_CurStates) (1)))) in
                             (let jessie_132 = ((shift buch_CurStates_old) (1)) in
                             (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_132) jessie_129))) in
           void);
          (C_15:
          begin
            (let jessie_138 = (let jessie_134 = (C_13:
                                                ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                 ((shift buch_CurTrans) (0)))) in
                              (let jessie_137 = ((shift buch_CurTrans_tmp) (0)) in
                              (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_137) jessie_134))) in
            void);
           (C_18:
           begin
             (let jessie_143 = (let jessie_139 = (C_16:
                                                 ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                  ((shift buch_CurTrans) (1)))) in
                               (let jessie_142 = ((shift buch_CurTrans_tmp) (1)) in
                               (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_142) jessie_139))) in
             void);
            (C_21:
            begin
              (let jessie_148 = (let jessie_144 = (C_19:
                                                  ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                   ((shift buch_CurTrans) (2)))) in
                                (let jessie_147 = ((shift buch_CurTrans_tmp) (2)) in
                                (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_147) jessie_144))) in
              void);
             (if ((eq_int_ (integer_of_int32 !status)) (0))
             then
              (let jessie_149 = (if ((neq_int_ (integer_of_int32 (C_25:
                                                                 ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                  ((shift buch_CurStates_old) (0)))))) (0))
                                then
                                 (C_24:
                                 begin
                                   (tmp := (safe_int32_of_integer_ (1)));
                                  !tmp
                                 end)
                                else
                                 (C_23:
                                 begin
                                   (tmp := (safe_int32_of_integer_ (0)));
                                  !tmp
                                 end)) in
              void)
             else
              (C_22:
              (let jessie_150 = (tmp := (safe_int32_of_integer_ (0))) in
              void)));
             (C_27:
             begin
               (let jessie_155 = (let jessie_151 = !tmp in
                                 (let jessie_154 = ((shift buch_CurStates) (0)) in
                                 (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_154) jessie_151))) in
               void);
              (C_31:
              begin
                (let jessie_160 = (let jessie_156 = (C_29:
                                                    (safe_int32_of_integer_ 
                                                     (if ((neq_int_ (integer_of_int32 
                                                                    (C_28:
                                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                    ((shift buch_CurStates_old) (1)))))) (0))
                                                     then (1)
                                                     else (0)))) in
                                  (let jessie_159 = ((shift buch_CurStates) (1)) in
                                  (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_159) jessie_156))) in
                void);
               (if ((eq_int_ (integer_of_int32 !status)) (0))
               then
                (if ((neq_int_ (integer_of_int32 (C_37:
                                                 ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                  ((shift buch_CurStates_old) (0)))))) (0))
                then
                 (let jessie_161 = (if ((neq_int_ (integer_of_int32 (C_36:
                                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                                    ((shift buch_CurStates) (0)))))) (0))
                                   then
                                    (C_35:
                                    begin
                                      (tmp_0 := (safe_int32_of_integer_ (1)));
                                     !tmp_0
                                    end)
                                   else
                                    (C_34:
                                    begin
                                      (tmp_0 := (safe_int32_of_integer_ (0)));
                                     !tmp_0
                                    end)) in
                 void)
                else
                 (C_33:
                 (let jessie_162 = (tmp_0 := (safe_int32_of_integer_ (0))) in
                 void)))
               else
                (C_32:
                (let jessie_163 = (tmp_0 := (safe_int32_of_integer_ (0))) in
                void)));
               (C_39:
               begin
                 (let jessie_168 = (let jessie_164 = !tmp_0 in
                                   (let jessie_167 = ((shift buch_CurTrans) (0)) in
                                   (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_167) jessie_164))) in
                 void);
                (C_41:
                begin
                  (let jessie_173 = (let jessie_169 = (safe_int32_of_integer_ (0)) in
                                    (let jessie_172 = ((shift buch_CurTrans) (1)) in
                                    (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_172) jessie_169))) in
                  void);
                 (if ((neq_int_ (integer_of_int32 (C_46:
                                                  ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                   ((shift buch_CurStates_old) (1)))))) (0))
                 then
                  (let jessie_174 = (if ((neq_int_ (integer_of_int32 
                                                    (C_45:
                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                     ((shift buch_CurStates) (1)))))) (0))
                                    then
                                     (C_44:
                                     begin
                                       (tmp_1 := (safe_int32_of_integer_ (1)));
                                      !tmp_1
                                     end)
                                    else
                                     (C_43:
                                     begin
                                       (tmp_1 := (safe_int32_of_integer_ (0)));
                                      !tmp_1
                                     end)) in
                  void)
                 else
                  (C_42:
                  (let jessie_175 = (tmp_1 := (safe_int32_of_integer_ (0))) in
                  void)));
                 (C_48:
                 begin
                   (let jessie_180 = (let jessie_176 = !tmp_1 in
                                     (let jessie_179 = ((shift buch_CurTrans) (2)) in
                                     (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_179) jessie_176))) in
                   void);
                  (raise Return)
                 end)
                end)
               end)
              end)
             end)
            end)
           end)
          end)
         end)
        end)
       end)
      end)
     end))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_227:
    ((JC_211:
     ((JC_207:
      eq_int((0),
      integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                       shift(buch_CurTrans, (1))))))
     and ((JC_208:
          (neq_int((0),
           integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                            shift(buch_CurTrans, (0)))))
          or neq_int((0),
             integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                              shift(buch_CurTrans, (2)))))))
         and ((JC_209: (true = true))
             and (JC_210:
                 (neq_int((0),
                  integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                   shift(buch_CurStates, (0)))))
                 or neq_int((0),
                    integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                     shift(buch_CurStates, (1)))))))))))
    and ((JC_212: inv(rr))
        and ((JC_213:
             valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
            and ((JC_214:
                 valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                and ((JC_215:
                     valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                    and ((JC_216:
                         valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                        and ((JC_217:
                             Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                             int_P_buch_CurStates_old_3_alloc_table,
                             int_P_buch_CurTrans_2_alloc_table,
                             int_P_buch_CurStates_1_alloc_table))
                            and ((JC_218:
                                 Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                 int_P_int_M_buch_CurTrans_2))
                                and ((JC_219:
                                     valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                    and ((JC_220:
                                         Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_221:
                                             _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                             int_P_int_M_buch_CurTrans_2,
                                             int_P_int_M_buch_CurStates_1,
                                             buch_CurOpStatus,
                                             buch_CurOperation, status))
                                            and ((JC_222:
                                                 _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_223:
                                                     _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_224:
                                                         _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_225:
                                                             _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and (JC_226:
                                                                _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                int_P_int_M_buch_CurTrans_2,
                                                                buch_CurOpStatus,
                                                                buch_CurOperation,
                                                                status)))))))))))))))))) }

let fake_ensures_default =
 fun (tt : unit) ->
  { ((true = true)
    and (JC_171:
        (((JC_151:
          eq_int((0),
          integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                           shift(buch_CurTrans, (1))))))
         and ((JC_152:
              (neq_int((0),
               integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                shift(buch_CurTrans, (0)))))
              or neq_int((0),
                 integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                  shift(buch_CurTrans, (2)))))))
             and ((JC_153: (true = true))
                 and ((JC_154:
                      (neq_int((0),
                       integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                        shift(buch_CurStates, (0)))))
                      or neq_int((0),
                         integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                          shift(buch_CurStates, (1)))))))
                     and (JC_155: lt_int(integer_of_int32(rr), (5000)))))))
        and ((JC_156: inv(rr))
            and ((JC_157:
                 valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
                and ((JC_158:
                     valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                    and ((JC_159:
                         valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                        and ((JC_160:
                             valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                            and ((JC_161:
                                 Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                                 int_P_buch_CurStates_old_3_alloc_table,
                                 int_P_buch_CurTrans_2_alloc_table,
                                 int_P_buch_CurStates_1_alloc_table))
                                and ((JC_162:
                                     Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                     int_P_int_M_buch_CurTrans_2))
                                    and ((JC_163:
                                         valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_164:
                                             Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                            and ((JC_165:
                                                 _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_166:
                                                     _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_167:
                                                         _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_168:
                                                             _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and ((JC_169:
                                                                 _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                                 int_P_int_M_buch_CurTrans_2,
                                                                 int_P_int_M_buch_CurStates_1,
                                                                 buch_CurOpStatus,
                                                                 buch_CurOperation,
                                                                 status))
                                                                and (JC_170:
                                                                    _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                    int_P_int_M_buch_CurTrans_2,
                                                                    buch_CurOpStatus,
                                                                    buch_CurOperation,
                                                                    status))))))))))))))))))) }
  (init:
  try
   begin
     (let tmp = ref (any_int32 void) in
     (let tmp_0 = ref (any_int32 void) in
     (let tmp_1 = ref (any_int32 void) in
     (C_4:
     begin
       (let jessie_61 = (rr := (C_3:
                               (safe_int32_of_integer_ (C_2:
                                                       ((add_int (integer_of_int32 !rr)) (1)))))) in
       void);
      (C_5:
      begin
        (let jessie_62 = (buch_CurOperation := (safe_buch_ListOper_of_integer_ (0))) in
        void);
       (C_6:
       begin
         (let jessie_63 = (buch_CurOpStatus := (safe_Buch_OpStatusList_of_integer_ (1))) in
         void);
        (C_9:
        begin
          (let jessie_68 = (let jessie_64 = (C_7:
                                            ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                             ((shift buch_CurStates) (0)))) in
                           (let jessie_67 = ((shift buch_CurStates_old) (0)) in
                           (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_67) jessie_64))) in
          void);
         (C_12:
         begin
           (let jessie_73 = (let jessie_69 = (C_10:
                                             ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                              ((shift buch_CurStates) (1)))) in
                            (let jessie_72 = ((shift buch_CurStates_old) (1)) in
                            (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_72) jessie_69))) in
           void);
          (C_15:
          begin
            (let jessie_78 = (let jessie_74 = (C_13:
                                              ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                               ((shift buch_CurTrans) (0)))) in
                             (let jessie_77 = ((shift buch_CurTrans_tmp) (0)) in
                             (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_77) jessie_74))) in
            void);
           (C_18:
           begin
             (let jessie_83 = (let jessie_79 = (C_16:
                                               ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                ((shift buch_CurTrans) (1)))) in
                              (let jessie_82 = ((shift buch_CurTrans_tmp) (1)) in
                              (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_82) jessie_79))) in
             void);
            (C_21:
            begin
              (let jessie_88 = (let jessie_84 = (C_19:
                                                ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                 ((shift buch_CurTrans) (2)))) in
                               (let jessie_87 = ((shift buch_CurTrans_tmp) (2)) in
                               (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_87) jessie_84))) in
              void);
             (if ((eq_int_ (integer_of_int32 !status)) (0))
             then
              (let jessie_89 = (if ((neq_int_ (integer_of_int32 (C_25:
                                                                ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                 ((shift buch_CurStates_old) (0)))))) (0))
                               then
                                (C_24:
                                begin
                                  (tmp := (safe_int32_of_integer_ (1))); !tmp
                                end)
                               else
                                (C_23:
                                begin
                                  (tmp := (safe_int32_of_integer_ (0))); !tmp
                                end)) in
              void)
             else
              (C_22:
              (let jessie_90 = (tmp := (safe_int32_of_integer_ (0))) in void)));
             (C_27:
             begin
               (let jessie_95 = (let jessie_91 = !tmp in
                                (let jessie_94 = ((shift buch_CurStates) (0)) in
                                (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_94) jessie_91))) in
               void);
              (C_31:
              begin
                (let jessie_100 = (let jessie_96 = (C_29:
                                                   (safe_int32_of_integer_ 
                                                    (if ((neq_int_ (integer_of_int32 
                                                                    (C_28:
                                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                    ((shift buch_CurStates_old) (1)))))) (0))
                                                    then (1)
                                                    else (0)))) in
                                  (let jessie_99 = ((shift buch_CurStates) (1)) in
                                  (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_99) jessie_96))) in
                void);
               (if ((eq_int_ (integer_of_int32 !status)) (0))
               then
                (if ((neq_int_ (integer_of_int32 (C_37:
                                                 ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                  ((shift buch_CurStates_old) (0)))))) (0))
                then
                 (let jessie_101 = (if ((neq_int_ (integer_of_int32 (C_36:
                                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                                    ((shift buch_CurStates) (0)))))) (0))
                                   then
                                    (C_35:
                                    begin
                                      (tmp_0 := (safe_int32_of_integer_ (1)));
                                     !tmp_0
                                    end)
                                   else
                                    (C_34:
                                    begin
                                      (tmp_0 := (safe_int32_of_integer_ (0)));
                                     !tmp_0
                                    end)) in
                 void)
                else
                 (C_33:
                 (let jessie_102 = (tmp_0 := (safe_int32_of_integer_ (0))) in
                 void)))
               else
                (C_32:
                (let jessie_103 = (tmp_0 := (safe_int32_of_integer_ (0))) in
                void)));
               (C_39:
               begin
                 (let jessie_108 = (let jessie_104 = !tmp_0 in
                                   (let jessie_107 = ((shift buch_CurTrans) (0)) in
                                   (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_107) jessie_104))) in
                 void);
                (C_41:
                begin
                  (let jessie_113 = (let jessie_109 = (safe_int32_of_integer_ (0)) in
                                    (let jessie_112 = ((shift buch_CurTrans) (1)) in
                                    (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_112) jessie_109))) in
                  void);
                 (if ((neq_int_ (integer_of_int32 (C_46:
                                                  ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                   ((shift buch_CurStates_old) (1)))))) (0))
                 then
                  (let jessie_114 = (if ((neq_int_ (integer_of_int32 
                                                    (C_45:
                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                     ((shift buch_CurStates) (1)))))) (0))
                                    then
                                     (C_44:
                                     begin
                                       (tmp_1 := (safe_int32_of_integer_ (1)));
                                      !tmp_1
                                     end)
                                    else
                                     (C_43:
                                     begin
                                       (tmp_1 := (safe_int32_of_integer_ (0)));
                                      !tmp_1
                                     end)) in
                  void)
                 else
                  (C_42:
                  (let jessie_115 = (tmp_1 := (safe_int32_of_integer_ (0))) in
                  void)));
                 (C_48:
                 begin
                   (let jessie_120 = (let jessie_116 = !tmp_1 in
                                     (let jessie_119 = ((shift buch_CurTrans) (2)) in
                                     (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_119) jessie_116))) in
                   void);
                  (raise Return)
                 end)
                end)
               end)
              end)
             end)
            end)
           end)
          end)
         end)
        end)
       end)
      end)
     end))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_173: true) }

let fake_ensures_j =
 fun (tt : unit) ->
  { ((true = true)
    and (JC_171:
        (((JC_151:
          eq_int((0),
          integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                           shift(buch_CurTrans, (1))))))
         and ((JC_152:
              (neq_int((0),
               integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                shift(buch_CurTrans, (0)))))
              or neq_int((0),
                 integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                  shift(buch_CurTrans, (2)))))))
             and ((JC_153: (true = true))
                 and ((JC_154:
                      (neq_int((0),
                       integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                        shift(buch_CurStates, (0)))))
                      or neq_int((0),
                         integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                          shift(buch_CurStates, (1)))))))
                     and (JC_155: lt_int(integer_of_int32(rr), (5000)))))))
        and ((JC_156: inv(rr))
            and ((JC_157:
                 valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
                and ((JC_158:
                     valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                    and ((JC_159:
                         valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                        and ((JC_160:
                             valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                            and ((JC_161:
                                 Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                                 int_P_buch_CurStates_old_3_alloc_table,
                                 int_P_buch_CurTrans_2_alloc_table,
                                 int_P_buch_CurStates_1_alloc_table))
                                and ((JC_162:
                                     Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                     int_P_int_M_buch_CurTrans_2))
                                    and ((JC_163:
                                         valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_164:
                                             Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                            and ((JC_165:
                                                 _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_166:
                                                     _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_167:
                                                         _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_168:
                                                             _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and ((JC_169:
                                                                 _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                                 int_P_int_M_buch_CurTrans_2,
                                                                 int_P_int_M_buch_CurStates_1,
                                                                 buch_CurOpStatus,
                                                                 buch_CurOperation,
                                                                 status))
                                                                and (JC_170:
                                                                    _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                    int_P_int_M_buch_CurTrans_2,
                                                                    buch_CurOpStatus,
                                                                    buch_CurOperation,
                                                                    status))))))))))))))))))) }
  (init:
  try
   begin
     (let tmp = ref (any_int32 void) in
     (let tmp_0 = ref (any_int32 void) in
     (let tmp_1 = ref (any_int32 void) in
     (C_4:
     begin
       (let jessie_181 = (rr := (C_3:
                                (safe_int32_of_integer_ (C_2:
                                                        ((add_int (integer_of_int32 !rr)) (1)))))) in
       void);
      (C_5:
      begin
        (let jessie_182 = (buch_CurOperation := (safe_buch_ListOper_of_integer_ (0))) in
        void);
       (C_6:
       begin
         (let jessie_183 = (buch_CurOpStatus := (safe_Buch_OpStatusList_of_integer_ (1))) in
         void);
        (C_9:
        begin
          (let jessie_188 = (let jessie_184 = (C_7:
                                              ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                               ((shift buch_CurStates) (0)))) in
                            (let jessie_187 = ((shift buch_CurStates_old) (0)) in
                            (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_187) jessie_184))) in
          void);
         (C_12:
         begin
           (let jessie_193 = (let jessie_189 = (C_10:
                                               ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                ((shift buch_CurStates) (1)))) in
                             (let jessie_192 = ((shift buch_CurStates_old) (1)) in
                             (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_192) jessie_189))) in
           void);
          (C_15:
          begin
            (let jessie_198 = (let jessie_194 = (C_13:
                                                ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                 ((shift buch_CurTrans) (0)))) in
                              (let jessie_197 = ((shift buch_CurTrans_tmp) (0)) in
                              (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_197) jessie_194))) in
            void);
           (C_18:
           begin
             (let jessie_203 = (let jessie_199 = (C_16:
                                                 ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                  ((shift buch_CurTrans) (1)))) in
                               (let jessie_202 = ((shift buch_CurTrans_tmp) (1)) in
                               (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_202) jessie_199))) in
             void);
            (C_21:
            begin
              (let jessie_208 = (let jessie_204 = (C_19:
                                                  ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                   ((shift buch_CurTrans) (2)))) in
                                (let jessie_207 = ((shift buch_CurTrans_tmp) (2)) in
                                (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_207) jessie_204))) in
              void);
             (if ((eq_int_ (integer_of_int32 !status)) (0))
             then
              (let jessie_209 = (if ((neq_int_ (integer_of_int32 (C_25:
                                                                 ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                  ((shift buch_CurStates_old) (0)))))) (0))
                                then
                                 (C_24:
                                 begin
                                   (tmp := (safe_int32_of_integer_ (1)));
                                  !tmp
                                 end)
                                else
                                 (C_23:
                                 begin
                                   (tmp := (safe_int32_of_integer_ (0)));
                                  !tmp
                                 end)) in
              void)
             else
              (C_22:
              (let jessie_210 = (tmp := (safe_int32_of_integer_ (0))) in
              void)));
             (C_27:
             begin
               (let jessie_215 = (let jessie_211 = !tmp in
                                 (let jessie_214 = ((shift buch_CurStates) (0)) in
                                 (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_214) jessie_211))) in
               void);
              (C_31:
              begin
                (let jessie_220 = (let jessie_216 = (C_29:
                                                    (safe_int32_of_integer_ 
                                                     (if ((neq_int_ (integer_of_int32 
                                                                    (C_28:
                                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                    ((shift buch_CurStates_old) (1)))))) (0))
                                                     then (1)
                                                     else (0)))) in
                                  (let jessie_219 = ((shift buch_CurStates) (1)) in
                                  (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_219) jessie_216))) in
                void);
               (if ((eq_int_ (integer_of_int32 !status)) (0))
               then
                (if ((neq_int_ (integer_of_int32 (C_37:
                                                 ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                  ((shift buch_CurStates_old) (0)))))) (0))
                then
                 (let jessie_221 = (if ((neq_int_ (integer_of_int32 (C_36:
                                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                                    ((shift buch_CurStates) (0)))))) (0))
                                   then
                                    (C_35:
                                    begin
                                      (tmp_0 := (safe_int32_of_integer_ (1)));
                                     !tmp_0
                                    end)
                                   else
                                    (C_34:
                                    begin
                                      (tmp_0 := (safe_int32_of_integer_ (0)));
                                     !tmp_0
                                    end)) in
                 void)
                else
                 (C_33:
                 (let jessie_222 = (tmp_0 := (safe_int32_of_integer_ (0))) in
                 void)))
               else
                (C_32:
                (let jessie_223 = (tmp_0 := (safe_int32_of_integer_ (0))) in
                void)));
               (C_39:
               begin
                 (let jessie_228 = (let jessie_224 = !tmp_0 in
                                   (let jessie_227 = ((shift buch_CurTrans) (0)) in
                                   (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_227) jessie_224))) in
                 void);
                (C_41:
                begin
                  (let jessie_233 = (let jessie_229 = (safe_int32_of_integer_ (0)) in
                                    (let jessie_232 = ((shift buch_CurTrans) (1)) in
                                    (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_232) jessie_229))) in
                  void);
                 (if ((neq_int_ (integer_of_int32 (C_46:
                                                  ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                   ((shift buch_CurStates_old) (1)))))) (0))
                 then
                  (let jessie_234 = (if ((neq_int_ (integer_of_int32 
                                                    (C_45:
                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                     ((shift buch_CurStates) (1)))))) (0))
                                    then
                                     (C_44:
                                     begin
                                       (tmp_1 := (safe_int32_of_integer_ (1)));
                                      !tmp_1
                                     end)
                                    else
                                     (C_43:
                                     begin
                                       (tmp_1 := (safe_int32_of_integer_ (0)));
                                      !tmp_1
                                     end)) in
                  void)
                 else
                  (C_42:
                  (let jessie_235 = (tmp_1 := (safe_int32_of_integer_ (0))) in
                  void)));
                 (C_48:
                 begin
                   (let jessie_240 = (let jessie_236 = !tmp_1 in
                                     (let jessie_239 = ((shift buch_CurTrans) (2)) in
                                     (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_239) jessie_236))) in
                   void);
                  (raise Return)
                 end)
                end)
               end)
              end)
             end)
            end)
           end)
          end)
         end)
        end)
       end)
      end)
     end))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_265:
    ((JC_249: lt_int(integer_of_int32(rr), (5001)))
    and ((JC_250: inv(rr))
        and ((JC_251:
             valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
            and ((JC_252:
                 valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                and ((JC_253:
                     valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                    and ((JC_254:
                         valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                        and ((JC_255:
                             Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                             int_P_buch_CurStates_old_3_alloc_table,
                             int_P_buch_CurTrans_2_alloc_table,
                             int_P_buch_CurStates_1_alloc_table))
                            and ((JC_256:
                                 Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                 int_P_int_M_buch_CurTrans_2))
                                and ((JC_257:
                                     valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                    and ((JC_258:
                                         Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_259:
                                             _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                             int_P_int_M_buch_CurTrans_2,
                                             int_P_int_M_buch_CurStates_1,
                                             buch_CurOpStatus,
                                             buch_CurOperation, status))
                                            and ((JC_260:
                                                 _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_261:
                                                     _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_262:
                                                         _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_263:
                                                             _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and (JC_264:
                                                                _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                int_P_int_M_buch_CurTrans_2,
                                                                buch_CurOpStatus,
                                                                buch_CurOperation,
                                                                status)))))))))))))))))) }

let fake_safety =
 fun (tt : unit) ->
  { (JC_171:
    (((JC_151:
      eq_int((0),
      integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                       shift(buch_CurTrans, (1))))))
     and ((JC_152:
          (neq_int((0),
           integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                            shift(buch_CurTrans, (0)))))
          or neq_int((0),
             integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                              shift(buch_CurTrans, (2)))))))
         and ((JC_153: (true = true))
             and ((JC_154:
                  (neq_int((0),
                   integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                    shift(buch_CurStates, (0)))))
                  or neq_int((0),
                     integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                      shift(buch_CurStates, (1)))))))
                 and (JC_155: lt_int(integer_of_int32(rr), (5000)))))))
    and ((JC_156: inv(rr))
        and ((JC_157:
             valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
            and ((JC_158:
                 valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                and ((JC_159:
                     valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                    and ((JC_160:
                         valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                        and ((JC_161:
                             Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                             int_P_buch_CurStates_old_3_alloc_table,
                             int_P_buch_CurTrans_2_alloc_table,
                             int_P_buch_CurStates_1_alloc_table))
                            and ((JC_162:
                                 Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                 int_P_int_M_buch_CurTrans_2))
                                and ((JC_163:
                                     valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                    and ((JC_164:
                                         Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_165:
                                             _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                             int_P_int_M_buch_CurTrans_2,
                                             int_P_int_M_buch_CurStates_1,
                                             buch_CurOpStatus,
                                             buch_CurOperation, status))
                                            and ((JC_166:
                                                 _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_167:
                                                     _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_168:
                                                         _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_169:
                                                             _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and (JC_170:
                                                                _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                int_P_int_M_buch_CurTrans_2,
                                                                buch_CurOpStatus,
                                                                buch_CurOperation,
                                                                status)))))))))))))))))) }
  (init:
  try
   begin
     (let tmp = ref (any_int32 void) in
     (let tmp_0 = ref (any_int32 void) in
     (let tmp_1 = ref (any_int32 void) in
     (C_4:
     begin
       (let jessie_1 = (rr := (C_3:
                              (JC_284:
                              (int32_of_integer_ (C_2:
                                                 ((add_int (integer_of_int32 !rr)) (1))))))) in
       void);
      (C_5:
      begin
        (let jessie_2 = (buch_CurOperation := (safe_buch_ListOper_of_integer_ (0))) in
        void);
       (C_6:
       begin
         (let jessie_3 = (buch_CurOpStatus := (safe_Buch_OpStatusList_of_integer_ (1))) in
         void);
        (C_9:
        begin
          (let jessie_8 = (let jessie_4 = (C_7:
                                          ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                           ((shift buch_CurStates) (0)))) in
                          (let jessie_7 = ((shift buch_CurStates_old) (0)) in
                          (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_7) jessie_4))) in
          void);
         (C_12:
         begin
           (let jessie_13 = (let jessie_9 = (C_10:
                                            ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                             ((shift buch_CurStates) (1)))) in
                            (let jessie_12 = ((shift buch_CurStates_old) (1)) in
                            (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_12) jessie_9))) in
           void);
          (C_15:
          begin
            (let jessie_18 = (let jessie_14 = (C_13:
                                              ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                               ((shift buch_CurTrans) (0)))) in
                             (let jessie_17 = ((shift buch_CurTrans_tmp) (0)) in
                             (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_17) jessie_14))) in
            void);
           (C_18:
           begin
             (let jessie_23 = (let jessie_19 = (C_16:
                                               ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                ((shift buch_CurTrans) (1)))) in
                              (let jessie_22 = ((shift buch_CurTrans_tmp) (1)) in
                              (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_22) jessie_19))) in
             void);
            (C_21:
            begin
              (let jessie_28 = (let jessie_24 = (C_19:
                                                ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                 ((shift buch_CurTrans) (2)))) in
                               (let jessie_27 = ((shift buch_CurTrans_tmp) (2)) in
                               (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_27) jessie_24))) in
              void);
             (if ((eq_int_ (integer_of_int32 !status)) (0))
             then
              (let jessie_29 = (if ((neq_int_ (integer_of_int32 (C_25:
                                                                ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                 ((shift buch_CurStates_old) (0)))))) (0))
                               then
                                (C_24:
                                begin
                                  (tmp := (safe_int32_of_integer_ (1))); !tmp
                                end)
                               else
                                (C_23:
                                begin
                                  (tmp := (safe_int32_of_integer_ (0))); !tmp
                                end)) in
              void)
             else
              (C_22:
              (let jessie_30 = (tmp := (safe_int32_of_integer_ (0))) in void)));
             (C_27:
             begin
               (let jessie_35 = (let jessie_31 = !tmp in
                                (let jessie_34 = ((shift buch_CurStates) (0)) in
                                (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_34) jessie_31))) in
               void);
              (C_31:
              begin
                (let jessie_40 = (let jessie_36 = (C_29:
                                                  (JC_286:
                                                  (int32_of_integer_ 
                                                   (if ((neq_int_ (integer_of_int32 
                                                                   (C_28:
                                                                   ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                    ((shift buch_CurStates_old) (1)))))) (0))
                                                   then (1)
                                                   else (0))))) in
                                 (let jessie_39 = ((shift buch_CurStates) (1)) in
                                 (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_39) jessie_36))) in
                void);
               (if ((eq_int_ (integer_of_int32 !status)) (0))
               then
                (if ((neq_int_ (integer_of_int32 (C_37:
                                                 ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                  ((shift buch_CurStates_old) (0)))))) (0))
                then
                 (let jessie_41 = (if ((neq_int_ (integer_of_int32 (C_36:
                                                                   ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                                    ((shift buch_CurStates) (0)))))) (0))
                                  then
                                   (C_35:
                                   begin
                                     (tmp_0 := (safe_int32_of_integer_ (1)));
                                    !tmp_0
                                   end)
                                  else
                                   (C_34:
                                   begin
                                     (tmp_0 := (safe_int32_of_integer_ (0)));
                                    !tmp_0
                                   end)) in
                 void)
                else
                 (C_33:
                 (let jessie_42 = (tmp_0 := (safe_int32_of_integer_ (0))) in
                 void)))
               else
                (C_32:
                (let jessie_43 = (tmp_0 := (safe_int32_of_integer_ (0))) in
                void)));
               (C_39:
               begin
                 (let jessie_48 = (let jessie_44 = !tmp_0 in
                                  (let jessie_47 = ((shift buch_CurTrans) (0)) in
                                  (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_47) jessie_44))) in
                 void);
                (C_41:
                begin
                  (let jessie_53 = (let jessie_49 = (safe_int32_of_integer_ (0)) in
                                   (let jessie_52 = ((shift buch_CurTrans) (1)) in
                                   (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_52) jessie_49))) in
                  void);
                 (if ((neq_int_ (integer_of_int32 (C_46:
                                                  ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                   ((shift buch_CurStates_old) (1)))))) (0))
                 then
                  (let jessie_54 = (if ((neq_int_ (integer_of_int32 (C_45:
                                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                                    ((shift buch_CurStates) (1)))))) (0))
                                   then
                                    (C_44:
                                    begin
                                      (tmp_1 := (safe_int32_of_integer_ (1)));
                                     !tmp_1
                                    end)
                                   else
                                    (C_43:
                                    begin
                                      (tmp_1 := (safe_int32_of_integer_ (0)));
                                     !tmp_1
                                    end)) in
                  void)
                 else
                  (C_42:
                  (let jessie_55 = (tmp_1 := (safe_int32_of_integer_ (0))) in
                  void)));
                 (C_48:
                 begin
                   (let jessie_60 = (let jessie_56 = !tmp_1 in
                                    (let jessie_59 = ((shift buch_CurTrans) (2)) in
                                    (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_59) jessie_56))) in
                   void);
                  (raise Return)
                 end)
                end)
               end)
              end)
             end)
            end)
           end)
          end)
         end)
        end)
       end)
      end)
     end))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_190:
    ((JC_175: inv(rr))
    and ((JC_176: valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
        and ((JC_177: valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
            and ((JC_178:
                 valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                and ((JC_179:
                     valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                    and ((JC_180:
                         Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                         int_P_buch_CurStates_old_3_alloc_table,
                         int_P_buch_CurTrans_2_alloc_table,
                         int_P_buch_CurStates_1_alloc_table))
                        and ((JC_181:
                             Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                             int_P_int_M_buch_CurTrans_2))
                            and ((JC_182:
                                 valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                and ((JC_183:
                                     Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                    and ((JC_184:
                                         _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                         int_P_int_M_buch_CurTrans_2,
                                         int_P_int_M_buch_CurStates_1,
                                         buch_CurOpStatus, buch_CurOperation,
                                         status))
                                        and ((JC_185:
                                             _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                             int_P_int_M_buch_CurTrans_2,
                                             int_P_int_M_buch_CurStates_1,
                                             buch_CurOpStatus,
                                             buch_CurOperation, status))
                                            and ((JC_186:
                                                 _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_187:
                                                     _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_188:
                                                         _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and (JC_189:
                                                            _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                            int_P_int_M_buch_CurTrans_2,
                                                            buch_CurOpStatus,
                                                            buch_CurOperation,
                                                            status))))))))))))))))) }

let main_ensures_Buchi_property_behavior =
 fun (tt : unit) ->
  { ((true = true)
    and (JC_445:
        (((JC_426:
          eq_int((0),
          integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                           shift(buch_CurTrans, (1))))))
         and ((JC_427:
              (neq_int((0),
               integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                shift(buch_CurTrans, (0)))))
              or neq_int((0),
                 integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                  shift(buch_CurTrans, (2)))))))
             and ((JC_428: (true = true))
                 and (JC_429:
                     (neq_int((0),
                      integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                       shift(buch_CurStates, (0)))))
                     or neq_int((0),
                        integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                         shift(buch_CurStates, (1))))))))))
        and ((JC_430: inv(rr))
            and ((JC_431:
                 valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
                and ((JC_432:
                     valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                    and ((JC_433:
                         valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                        and ((JC_434:
                             valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                            and ((JC_435:
                                 Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                                 int_P_buch_CurStates_old_3_alloc_table,
                                 int_P_buch_CurTrans_2_alloc_table,
                                 int_P_buch_CurStates_1_alloc_table))
                                and ((JC_436:
                                     Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                     int_P_int_M_buch_CurTrans_2))
                                    and ((JC_437:
                                         valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_438:
                                             Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                            and ((JC_439:
                                                 _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_440:
                                                     _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_441:
                                                         _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_442:
                                                             _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and ((JC_443:
                                                                 _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                                 int_P_int_M_buch_CurTrans_2,
                                                                 int_P_int_M_buch_CurStates_1,
                                                                 buch_CurOpStatus,
                                                                 buch_CurOperation,
                                                                 status))
                                                                and (JC_444:
                                                                    _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                    int_P_int_M_buch_CurTrans_2,
                                                                    buch_CurOpStatus,
                                                                    buch_CurOperation,
                                                                    status))))))))))))))))))) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let __retres = ref (any_int32 void) in
     (let tmp_0_2 = ref (any_int32 void) in
     (let tmp_0_3 = ref (any_int32 void) in
     (let tmp_1_1 = ref (any_int32 void) in
     (C_128:
     begin
       (JC_531: (__globinit_whole_program void));
      (if ((lt_int_ (integer_of_int32 !rr)) (5000))
      then
       (C_129:
       begin
         (let jessie_561 = (buch_CurOperation := (safe_buch_ListOper_of_integer_ (0))) in
         void);
        (C_130:
        begin
          (let jessie_562 = (buch_CurOpStatus := (safe_Buch_OpStatusList_of_integer_ (0))) in
          void);
         (C_131: (JC_532: (fake void)))
        end)
       end)
      else void);
      (C_132:
      begin
        (let jessie_563 = (buch_CurOperation := (safe_buch_ListOper_of_integer_ (2))) in
        void);
       (C_133:
       begin
         (let jessie_564 = (buch_CurOpStatus := (safe_Buch_OpStatusList_of_integer_ (0))) in
         void);
        (C_134:
        begin
          (JC_533: (op void));
         (C_135:
         begin
           (let jessie_565 = (__retres := (safe_int32_of_integer_ (1))) in
           void);
          (C_136:
          begin
            (let jessie_566 = (buch_CurOperation := (safe_buch_ListOper_of_integer_ (1))) in
            void);
           (C_137:
           begin
             (let jessie_567 = (buch_CurOpStatus := (safe_Buch_OpStatusList_of_integer_ (1))) in
             void);
            (C_140:
            begin
              (let jessie_572 = (let jessie_568 = (C_138:
                                                  ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                   ((shift buch_CurStates) (0)))) in
                                (let jessie_571 = ((shift buch_CurStates_old) (0)) in
                                (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_571) jessie_568))) in
              void);
             (C_143:
             begin
               (let jessie_577 = (let jessie_573 = (C_141:
                                                   ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                    ((shift buch_CurStates) (1)))) in
                                 (let jessie_576 = ((shift buch_CurStates_old) (1)) in
                                 (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_576) jessie_573))) in
               void);
              (C_146:
              begin
                (let jessie_582 = (let jessie_578 = (C_144:
                                                    ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                     ((shift buch_CurTrans) (0)))) in
                                  (let jessie_581 = ((shift buch_CurTrans_tmp) (0)) in
                                  (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_581) jessie_578))) in
                void);
               (C_149:
               begin
                 (let jessie_587 = (let jessie_583 = (C_147:
                                                     ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                      ((shift buch_CurTrans) (1)))) in
                                   (let jessie_586 = ((shift buch_CurTrans_tmp) (1)) in
                                   (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_586) jessie_583))) in
                 void);
                (C_152:
                begin
                  (let jessie_592 = (let jessie_588 = (C_150:
                                                      ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                       ((shift buch_CurTrans) (2)))) in
                                    (let jessie_591 = ((shift buch_CurTrans_tmp) (2)) in
                                    (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_591) jessie_588))) in
                  void);
                 (if ((eq_int_ (integer_of_int32 !status)) (0))
                 then
                  (let jessie_593 = (if ((neq_int_ (integer_of_int32 
                                                    (C_156:
                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                     ((shift buch_CurStates_old) (0)))))) (0))
                                    then
                                     (C_155:
                                     begin
                                       (tmp_0_2 := (safe_int32_of_integer_ (1)));
                                      !tmp_0_2
                                     end)
                                    else
                                     (C_154:
                                     begin
                                       (tmp_0_2 := (safe_int32_of_integer_ (0)));
                                      !tmp_0_2
                                     end)) in
                  void)
                 else
                  (C_153:
                  (let jessie_594 = (tmp_0_2 := (safe_int32_of_integer_ (0))) in
                  void)));
                 (C_158:
                 begin
                   (let jessie_599 = (let jessie_595 = !tmp_0_2 in
                                     (let jessie_598 = ((shift buch_CurStates) (0)) in
                                     (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_598) jessie_595))) in
                   void);
                  (C_162:
                  begin
                    (let jessie_604 = (let jessie_600 = (C_160:
                                                        (safe_int32_of_integer_ 
                                                         (if ((neq_int_ 
                                                               (integer_of_int32 
                                                                (C_159:
                                                                ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                 ((shift buch_CurStates_old) (1)))))) (0))
                                                         then (1)
                                                         else (0)))) in
                                      (let jessie_603 = ((shift buch_CurStates) (1)) in
                                      (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_603) jessie_600))) in
                    void);
                   (if ((eq_int_ (integer_of_int32 !status)) (0))
                   then
                    (if ((neq_int_ (integer_of_int32 (C_168:
                                                     ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                      ((shift buch_CurStates_old) (0)))))) (0))
                    then
                     (let jessie_605 = (if ((neq_int_ (integer_of_int32 
                                                       (C_167:
                                                       ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                        ((shift buch_CurStates) (0)))))) (0))
                                       then
                                        (C_166:
                                        begin
                                          (tmp_0_3 := (safe_int32_of_integer_ (1)));
                                         !tmp_0_3
                                        end)
                                       else
                                        (C_165:
                                        begin
                                          (tmp_0_3 := (safe_int32_of_integer_ (0)));
                                         !tmp_0_3
                                        end)) in
                     void)
                    else
                     (C_164:
                     (let jessie_606 = (tmp_0_3 := (safe_int32_of_integer_ (0))) in
                     void)))
                   else
                    (C_163:
                    (let jessie_607 = (tmp_0_3 := (safe_int32_of_integer_ (0))) in
                    void)));
                   (C_170:
                   begin
                     (let jessie_612 = (let jessie_608 = !tmp_0_3 in
                                       (let jessie_611 = ((shift buch_CurTrans) (0)) in
                                       (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_611) jessie_608))) in
                     void);
                    (C_172:
                    begin
                      (let jessie_617 = (let jessie_613 = (safe_int32_of_integer_ (0)) in
                                        (let jessie_616 = ((shift buch_CurTrans) (1)) in
                                        (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_616) jessie_613))) in
                      void);
                     (if ((neq_int_ (integer_of_int32 (C_177:
                                                      ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                       ((shift buch_CurStates_old) (1)))))) (0))
                     then
                      (let jessie_618 = (if ((neq_int_ (integer_of_int32 
                                                        (C_176:
                                                        ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                         ((shift buch_CurStates) (1)))))) (0))
                                        then
                                         (C_175:
                                         begin
                                           (tmp_1_1 := (safe_int32_of_integer_ (1)));
                                          !tmp_1_1
                                         end)
                                        else
                                         (C_174:
                                         begin
                                           (tmp_1_1 := (safe_int32_of_integer_ (0)));
                                          !tmp_1_1
                                         end)) in
                      void)
                     else
                      (C_173:
                      (let jessie_619 = (tmp_1_1 := (safe_int32_of_integer_ (0))) in
                      void)));
                     (C_179:
                     begin
                       (let jessie_624 = (let jessie_620 = !tmp_1_1 in
                                         (let jessie_623 = ((shift buch_CurTrans) (2)) in
                                         (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_623) jessie_620))) in
                       void);
                      (return := !__retres);
                      (raise Return)
                     end)
                    end)
                   end)
                  end)
                 end)
                end)
               end)
              end)
             end)
            end)
           end)
          end)
         end)
        end)
       end)
      end)
     end)))));
    absurd 
   end
   with
   Return ->
   !return end))
  { (JC_501:
    ((JC_485:
     ((JC_481:
      eq_int((0),
      integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                       shift(buch_CurTrans, (1))))))
     and ((JC_482:
          (neq_int((0),
           integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                            shift(buch_CurTrans, (0)))))
          or neq_int((0),
             integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                              shift(buch_CurTrans, (2)))))))
         and ((JC_483: (true = true))
             and (JC_484:
                 (neq_int((0),
                  integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                   shift(buch_CurStates, (0)))))
                 or neq_int((0),
                    integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                     shift(buch_CurStates, (1)))))))))))
    and ((JC_486: inv(rr))
        and ((JC_487:
             valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
            and ((JC_488:
                 valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                and ((JC_489:
                     valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                    and ((JC_490:
                         valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                        and ((JC_491:
                             Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                             int_P_buch_CurStates_old_3_alloc_table,
                             int_P_buch_CurTrans_2_alloc_table,
                             int_P_buch_CurStates_1_alloc_table))
                            and ((JC_492:
                                 Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                 int_P_int_M_buch_CurTrans_2))
                                and ((JC_493:
                                     valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                    and ((JC_494:
                                         Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_495:
                                             _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                             int_P_int_M_buch_CurTrans_2,
                                             int_P_int_M_buch_CurStates_1,
                                             buch_CurOpStatus,
                                             buch_CurOperation, status))
                                            and ((JC_496:
                                                 _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_497:
                                                     _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_498:
                                                         _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_499:
                                                             _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and (JC_500:
                                                                _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                int_P_int_M_buch_CurTrans_2,
                                                                buch_CurOpStatus,
                                                                buch_CurOperation,
                                                                status)))))))))))))))))) }

let main_ensures_default =
 fun (tt : unit) ->
  { ((true = true)
    and (JC_445:
        (((JC_426:
          eq_int((0),
          integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                           shift(buch_CurTrans, (1))))))
         and ((JC_427:
              (neq_int((0),
               integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                shift(buch_CurTrans, (0)))))
              or neq_int((0),
                 integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                  shift(buch_CurTrans, (2)))))))
             and ((JC_428: (true = true))
                 and (JC_429:
                     (neq_int((0),
                      integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                       shift(buch_CurStates, (0)))))
                     or neq_int((0),
                        integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                         shift(buch_CurStates, (1))))))))))
        and ((JC_430: inv(rr))
            and ((JC_431:
                 valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
                and ((JC_432:
                     valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                    and ((JC_433:
                         valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                        and ((JC_434:
                             valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                            and ((JC_435:
                                 Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                                 int_P_buch_CurStates_old_3_alloc_table,
                                 int_P_buch_CurTrans_2_alloc_table,
                                 int_P_buch_CurStates_1_alloc_table))
                                and ((JC_436:
                                     Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                     int_P_int_M_buch_CurTrans_2))
                                    and ((JC_437:
                                         valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_438:
                                             Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                            and ((JC_439:
                                                 _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_440:
                                                     _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_441:
                                                         _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_442:
                                                             _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and ((JC_443:
                                                                 _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                                 int_P_int_M_buch_CurTrans_2,
                                                                 int_P_int_M_buch_CurStates_1,
                                                                 buch_CurOpStatus,
                                                                 buch_CurOperation,
                                                                 status))
                                                                and (JC_444:
                                                                    _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                    int_P_int_M_buch_CurTrans_2,
                                                                    buch_CurOpStatus,
                                                                    buch_CurOperation,
                                                                    status))))))))))))))))))) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let __retres = ref (any_int32 void) in
     (let tmp_0_2 = ref (any_int32 void) in
     (let tmp_0_3 = ref (any_int32 void) in
     (let tmp_1_1 = ref (any_int32 void) in
     (C_128:
     begin
       (JC_528: (__globinit_whole_program void));
      (if ((lt_int_ (integer_of_int32 !rr)) (5000))
      then
       (C_129:
       begin
         (let jessie_497 = (buch_CurOperation := (safe_buch_ListOper_of_integer_ (0))) in
         void);
        (C_130:
        begin
          (let jessie_498 = (buch_CurOpStatus := (safe_Buch_OpStatusList_of_integer_ (0))) in
          void);
         (C_131: (JC_529: (fake void)))
        end)
       end)
      else void);
      (C_132:
      begin
        (let jessie_499 = (buch_CurOperation := (safe_buch_ListOper_of_integer_ (2))) in
        void);
       (C_133:
       begin
         (let jessie_500 = (buch_CurOpStatus := (safe_Buch_OpStatusList_of_integer_ (0))) in
         void);
        (C_134:
        begin
          (JC_530: (op void));
         (C_135:
         begin
           (let jessie_501 = (__retres := (safe_int32_of_integer_ (1))) in
           void);
          (C_136:
          begin
            (let jessie_502 = (buch_CurOperation := (safe_buch_ListOper_of_integer_ (1))) in
            void);
           (C_137:
           begin
             (let jessie_503 = (buch_CurOpStatus := (safe_Buch_OpStatusList_of_integer_ (1))) in
             void);
            (C_140:
            begin
              (let jessie_508 = (let jessie_504 = (C_138:
                                                  ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                   ((shift buch_CurStates) (0)))) in
                                (let jessie_507 = ((shift buch_CurStates_old) (0)) in
                                (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_507) jessie_504))) in
              void);
             (C_143:
             begin
               (let jessie_513 = (let jessie_509 = (C_141:
                                                   ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                    ((shift buch_CurStates) (1)))) in
                                 (let jessie_512 = ((shift buch_CurStates_old) (1)) in
                                 (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_512) jessie_509))) in
               void);
              (C_146:
              begin
                (let jessie_518 = (let jessie_514 = (C_144:
                                                    ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                     ((shift buch_CurTrans) (0)))) in
                                  (let jessie_517 = ((shift buch_CurTrans_tmp) (0)) in
                                  (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_517) jessie_514))) in
                void);
               (C_149:
               begin
                 (let jessie_523 = (let jessie_519 = (C_147:
                                                     ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                      ((shift buch_CurTrans) (1)))) in
                                   (let jessie_522 = ((shift buch_CurTrans_tmp) (1)) in
                                   (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_522) jessie_519))) in
                 void);
                (C_152:
                begin
                  (let jessie_528 = (let jessie_524 = (C_150:
                                                      ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                       ((shift buch_CurTrans) (2)))) in
                                    (let jessie_527 = ((shift buch_CurTrans_tmp) (2)) in
                                    (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_527) jessie_524))) in
                  void);
                 (if ((eq_int_ (integer_of_int32 !status)) (0))
                 then
                  (let jessie_529 = (if ((neq_int_ (integer_of_int32 
                                                    (C_156:
                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                     ((shift buch_CurStates_old) (0)))))) (0))
                                    then
                                     (C_155:
                                     begin
                                       (tmp_0_2 := (safe_int32_of_integer_ (1)));
                                      !tmp_0_2
                                     end)
                                    else
                                     (C_154:
                                     begin
                                       (tmp_0_2 := (safe_int32_of_integer_ (0)));
                                      !tmp_0_2
                                     end)) in
                  void)
                 else
                  (C_153:
                  (let jessie_530 = (tmp_0_2 := (safe_int32_of_integer_ (0))) in
                  void)));
                 (C_158:
                 begin
                   (let jessie_535 = (let jessie_531 = !tmp_0_2 in
                                     (let jessie_534 = ((shift buch_CurStates) (0)) in
                                     (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_534) jessie_531))) in
                   void);
                  (C_162:
                  begin
                    (let jessie_540 = (let jessie_536 = (C_160:
                                                        (safe_int32_of_integer_ 
                                                         (if ((neq_int_ 
                                                               (integer_of_int32 
                                                                (C_159:
                                                                ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                 ((shift buch_CurStates_old) (1)))))) (0))
                                                         then (1)
                                                         else (0)))) in
                                      (let jessie_539 = ((shift buch_CurStates) (1)) in
                                      (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_539) jessie_536))) in
                    void);
                   (if ((eq_int_ (integer_of_int32 !status)) (0))
                   then
                    (if ((neq_int_ (integer_of_int32 (C_168:
                                                     ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                      ((shift buch_CurStates_old) (0)))))) (0))
                    then
                     (let jessie_541 = (if ((neq_int_ (integer_of_int32 
                                                       (C_167:
                                                       ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                        ((shift buch_CurStates) (0)))))) (0))
                                       then
                                        (C_166:
                                        begin
                                          (tmp_0_3 := (safe_int32_of_integer_ (1)));
                                         !tmp_0_3
                                        end)
                                       else
                                        (C_165:
                                        begin
                                          (tmp_0_3 := (safe_int32_of_integer_ (0)));
                                         !tmp_0_3
                                        end)) in
                     void)
                    else
                     (C_164:
                     (let jessie_542 = (tmp_0_3 := (safe_int32_of_integer_ (0))) in
                     void)))
                   else
                    (C_163:
                    (let jessie_543 = (tmp_0_3 := (safe_int32_of_integer_ (0))) in
                    void)));
                   (C_170:
                   begin
                     (let jessie_548 = (let jessie_544 = !tmp_0_3 in
                                       (let jessie_547 = ((shift buch_CurTrans) (0)) in
                                       (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_547) jessie_544))) in
                     void);
                    (C_172:
                    begin
                      (let jessie_553 = (let jessie_549 = (safe_int32_of_integer_ (0)) in
                                        (let jessie_552 = ((shift buch_CurTrans) (1)) in
                                        (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_552) jessie_549))) in
                      void);
                     (if ((neq_int_ (integer_of_int32 (C_177:
                                                      ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                       ((shift buch_CurStates_old) (1)))))) (0))
                     then
                      (let jessie_554 = (if ((neq_int_ (integer_of_int32 
                                                        (C_176:
                                                        ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                         ((shift buch_CurStates) (1)))))) (0))
                                        then
                                         (C_175:
                                         begin
                                           (tmp_1_1 := (safe_int32_of_integer_ (1)));
                                          !tmp_1_1
                                         end)
                                        else
                                         (C_174:
                                         begin
                                           (tmp_1_1 := (safe_int32_of_integer_ (0)));
                                          !tmp_1_1
                                         end)) in
                      void)
                     else
                      (C_173:
                      (let jessie_555 = (tmp_1_1 := (safe_int32_of_integer_ (0))) in
                      void)));
                     (C_179:
                     begin
                       (let jessie_560 = (let jessie_556 = !tmp_1_1 in
                                         (let jessie_559 = ((shift buch_CurTrans) (2)) in
                                         (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_559) jessie_556))) in
                       void);
                      (return := !__retres);
                      (raise Return)
                     end)
                    end)
                   end)
                  end)
                 end)
                end)
               end)
              end)
             end)
            end)
           end)
          end)
         end)
        end)
       end)
      end)
     end)))));
    absurd 
   end
   with
   Return ->
   !return end))
  { (JC_447: true) }

let main_safety =
 fun (tt : unit) ->
  { (JC_445:
    (((JC_426:
      eq_int((0),
      integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                       shift(buch_CurTrans, (1))))))
     and ((JC_427:
          (neq_int((0),
           integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                            shift(buch_CurTrans, (0)))))
          or neq_int((0),
             integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                              shift(buch_CurTrans, (2)))))))
         and ((JC_428: (true = true))
             and (JC_429:
                 (neq_int((0),
                  integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                   shift(buch_CurStates, (0)))))
                 or neq_int((0),
                    integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                     shift(buch_CurStates, (1))))))))))
    and ((JC_430: inv(rr))
        and ((JC_431:
             valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
            and ((JC_432:
                 valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                and ((JC_433:
                     valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                    and ((JC_434:
                         valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                        and ((JC_435:
                             Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                             int_P_buch_CurStates_old_3_alloc_table,
                             int_P_buch_CurTrans_2_alloc_table,
                             int_P_buch_CurStates_1_alloc_table))
                            and ((JC_436:
                                 Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                 int_P_int_M_buch_CurTrans_2))
                                and ((JC_437:
                                     valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                    and ((JC_438:
                                         Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_439:
                                             _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                             int_P_int_M_buch_CurTrans_2,
                                             int_P_int_M_buch_CurStates_1,
                                             buch_CurOpStatus,
                                             buch_CurOperation, status))
                                            and ((JC_440:
                                                 _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_441:
                                                     _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_442:
                                                         _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_443:
                                                             _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and (JC_444:
                                                                _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                int_P_int_M_buch_CurTrans_2,
                                                                buch_CurOpStatus,
                                                                buch_CurOperation,
                                                                status)))))))))))))))))) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let __retres = ref (any_int32 void) in
     (let tmp_0_2 = ref (any_int32 void) in
     (let tmp_0_3 = ref (any_int32 void) in
     (let tmp_1_1 = ref (any_int32 void) in
     (C_128:
     begin
       (JC_523: (__globinit_whole_program_requires void));
      (if ((lt_int_ (integer_of_int32 !rr)) (5000))
      then
       (C_129:
       begin
         (let jessie_433 = (buch_CurOperation := (safe_buch_ListOper_of_integer_ (0))) in
         void);
        (C_130:
        begin
          (let jessie_434 = (buch_CurOpStatus := (safe_Buch_OpStatusList_of_integer_ (0))) in
          void);
         (C_131: (JC_524: (fake_requires void)))
        end)
       end)
      else void);
      (C_132:
      begin
        (let jessie_435 = (buch_CurOperation := (safe_buch_ListOper_of_integer_ (2))) in
        void);
       (C_133:
       begin
         (let jessie_436 = (buch_CurOpStatus := (safe_Buch_OpStatusList_of_integer_ (0))) in
         void);
        (C_134:
        begin
          (JC_525: (op_requires void));
         (C_135:
         begin
           (let jessie_437 = (__retres := (safe_int32_of_integer_ (1))) in
           void);
          (C_136:
          begin
            (let jessie_438 = (buch_CurOperation := (safe_buch_ListOper_of_integer_ (1))) in
            void);
           (C_137:
           begin
             (let jessie_439 = (buch_CurOpStatus := (safe_Buch_OpStatusList_of_integer_ (1))) in
             void);
            (C_140:
            begin
              (let jessie_444 = (let jessie_440 = (C_138:
                                                  ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                   ((shift buch_CurStates) (0)))) in
                                (let jessie_443 = ((shift buch_CurStates_old) (0)) in
                                (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_443) jessie_440))) in
              void);
             (C_143:
             begin
               (let jessie_449 = (let jessie_445 = (C_141:
                                                   ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                    ((shift buch_CurStates) (1)))) in
                                 (let jessie_448 = ((shift buch_CurStates_old) (1)) in
                                 (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_448) jessie_445))) in
               void);
              (C_146:
              begin
                (let jessie_454 = (let jessie_450 = (C_144:
                                                    ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                     ((shift buch_CurTrans) (0)))) in
                                  (let jessie_453 = ((shift buch_CurTrans_tmp) (0)) in
                                  (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_453) jessie_450))) in
                void);
               (C_149:
               begin
                 (let jessie_459 = (let jessie_455 = (C_147:
                                                     ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                      ((shift buch_CurTrans) (1)))) in
                                   (let jessie_458 = ((shift buch_CurTrans_tmp) (1)) in
                                   (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_458) jessie_455))) in
                 void);
                (C_152:
                begin
                  (let jessie_464 = (let jessie_460 = (C_150:
                                                      ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                       ((shift buch_CurTrans) (2)))) in
                                    (let jessie_463 = ((shift buch_CurTrans_tmp) (2)) in
                                    (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_463) jessie_460))) in
                  void);
                 (if ((eq_int_ (integer_of_int32 !status)) (0))
                 then
                  (let jessie_465 = (if ((neq_int_ (integer_of_int32 
                                                    (C_156:
                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                     ((shift buch_CurStates_old) (0)))))) (0))
                                    then
                                     (C_155:
                                     begin
                                       (tmp_0_2 := (safe_int32_of_integer_ (1)));
                                      !tmp_0_2
                                     end)
                                    else
                                     (C_154:
                                     begin
                                       (tmp_0_2 := (safe_int32_of_integer_ (0)));
                                      !tmp_0_2
                                     end)) in
                  void)
                 else
                  (C_153:
                  (let jessie_466 = (tmp_0_2 := (safe_int32_of_integer_ (0))) in
                  void)));
                 (C_158:
                 begin
                   (let jessie_471 = (let jessie_467 = !tmp_0_2 in
                                     (let jessie_470 = ((shift buch_CurStates) (0)) in
                                     (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_470) jessie_467))) in
                   void);
                  (C_162:
                  begin
                    (let jessie_476 = (let jessie_472 = (C_160:
                                                        (JC_527:
                                                        (int32_of_integer_ 
                                                         (if ((neq_int_ 
                                                               (integer_of_int32 
                                                                (C_159:
                                                                ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                 ((shift buch_CurStates_old) (1)))))) (0))
                                                         then (1)
                                                         else (0))))) in
                                      (let jessie_475 = ((shift buch_CurStates) (1)) in
                                      (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_475) jessie_472))) in
                    void);
                   (if ((eq_int_ (integer_of_int32 !status)) (0))
                   then
                    (if ((neq_int_ (integer_of_int32 (C_168:
                                                     ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                      ((shift buch_CurStates_old) (0)))))) (0))
                    then
                     (let jessie_477 = (if ((neq_int_ (integer_of_int32 
                                                       (C_167:
                                                       ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                        ((shift buch_CurStates) (0)))))) (0))
                                       then
                                        (C_166:
                                        begin
                                          (tmp_0_3 := (safe_int32_of_integer_ (1)));
                                         !tmp_0_3
                                        end)
                                       else
                                        (C_165:
                                        begin
                                          (tmp_0_3 := (safe_int32_of_integer_ (0)));
                                         !tmp_0_3
                                        end)) in
                     void)
                    else
                     (C_164:
                     (let jessie_478 = (tmp_0_3 := (safe_int32_of_integer_ (0))) in
                     void)))
                   else
                    (C_163:
                    (let jessie_479 = (tmp_0_3 := (safe_int32_of_integer_ (0))) in
                    void)));
                   (C_170:
                   begin
                     (let jessie_484 = (let jessie_480 = !tmp_0_3 in
                                       (let jessie_483 = ((shift buch_CurTrans) (0)) in
                                       (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_483) jessie_480))) in
                     void);
                    (C_172:
                    begin
                      (let jessie_489 = (let jessie_485 = (safe_int32_of_integer_ (0)) in
                                        (let jessie_488 = ((shift buch_CurTrans) (1)) in
                                        (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_488) jessie_485))) in
                      void);
                     (if ((neq_int_ (integer_of_int32 (C_177:
                                                      ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                       ((shift buch_CurStates_old) (1)))))) (0))
                     then
                      (let jessie_490 = (if ((neq_int_ (integer_of_int32 
                                                        (C_176:
                                                        ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                         ((shift buch_CurStates) (1)))))) (0))
                                        then
                                         (C_175:
                                         begin
                                           (tmp_1_1 := (safe_int32_of_integer_ (1)));
                                          !tmp_1_1
                                         end)
                                        else
                                         (C_174:
                                         begin
                                           (tmp_1_1 := (safe_int32_of_integer_ (0)));
                                          !tmp_1_1
                                         end)) in
                      void)
                     else
                      (C_173:
                      (let jessie_491 = (tmp_1_1 := (safe_int32_of_integer_ (0))) in
                      void)));
                     (C_179:
                     begin
                       (let jessie_496 = (let jessie_492 = !tmp_1_1 in
                                         (let jessie_495 = ((shift buch_CurTrans) (2)) in
                                         (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_495) jessie_492))) in
                       void);
                      (return := !__retres);
                      (raise Return)
                     end)
                    end)
                   end)
                  end)
                 end)
                end)
               end)
              end)
             end)
            end)
           end)
          end)
         end)
        end)
       end)
      end)
     end)))));
    absurd 
   end
   with
   Return ->
   !return end))
  { (JC_464:
    ((JC_449: inv(rr))
    and ((JC_450: valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
        and ((JC_451: valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
            and ((JC_452:
                 valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                and ((JC_453:
                     valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                    and ((JC_454:
                         Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                         int_P_buch_CurStates_old_3_alloc_table,
                         int_P_buch_CurTrans_2_alloc_table,
                         int_P_buch_CurStates_1_alloc_table))
                        and ((JC_455:
                             Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                             int_P_int_M_buch_CurTrans_2))
                            and ((JC_456:
                                 valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                and ((JC_457:
                                     Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                    and ((JC_458:
                                         _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                         int_P_int_M_buch_CurTrans_2,
                                         int_P_int_M_buch_CurStates_1,
                                         buch_CurOpStatus, buch_CurOperation,
                                         status))
                                        and ((JC_459:
                                             _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                             int_P_int_M_buch_CurTrans_2,
                                             int_P_int_M_buch_CurStates_1,
                                             buch_CurOpStatus,
                                             buch_CurOperation, status))
                                            and ((JC_460:
                                                 _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_461:
                                                     _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_462:
                                                         _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and (JC_463:
                                                            _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                            int_P_int_M_buch_CurTrans_2,
                                                            buch_CurOpStatus,
                                                            buch_CurOperation,
                                                            status))))))))))))))))) }

let op_ensures_Buchi_property_behavior =
 fun (tt : unit) ->
  { ((true = true)
    and (JC_327:
        (((JC_308:
          eq_int((0),
          integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                           shift(buch_CurTrans, (1))))))
         and ((JC_309:
              (neq_int((0),
               integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                shift(buch_CurTrans, (0)))))
              or neq_int((0),
                 integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                  shift(buch_CurTrans, (2)))))))
             and ((JC_310: (true = true))
                 and (JC_311:
                     (neq_int((0),
                      integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                       shift(buch_CurStates, (0)))))
                     or neq_int((0),
                        integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                         shift(buch_CurStates, (1))))))))))
        and ((JC_312: inv(rr))
            and ((JC_313:
                 valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
                and ((JC_314:
                     valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                    and ((JC_315:
                         valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                        and ((JC_316:
                             valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                            and ((JC_317:
                                 Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                                 int_P_buch_CurStates_old_3_alloc_table,
                                 int_P_buch_CurTrans_2_alloc_table,
                                 int_P_buch_CurStates_1_alloc_table))
                                and ((JC_318:
                                     Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                     int_P_int_M_buch_CurTrans_2))
                                    and ((JC_319:
                                         valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_320:
                                             Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                            and ((JC_321:
                                                 _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_322:
                                                     _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_323:
                                                         _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_324:
                                                             _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and ((JC_325:
                                                                 _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                                 int_P_int_M_buch_CurTrans_2,
                                                                 int_P_int_M_buch_CurStates_1,
                                                                 buch_CurOpStatus,
                                                                 buch_CurOperation,
                                                                 status))
                                                                and (JC_326:
                                                                    _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                    int_P_int_M_buch_CurTrans_2,
                                                                    buch_CurOpStatus,
                                                                    buch_CurOperation,
                                                                    status))))))))))))))))))) }
  (init:
  try
   begin
     (let tmp_0_0 = ref (any_int32 void) in
     (let tmp_0_1 = ref (any_int32 void) in
     (let tmp_1_0 = ref (any_int32 void) in
     (let tmp_2 = ref (any_int32 void) in
     (let tmp_3 = ref (any_int32 void) in
     (C_63:
     begin
       (let jessie_369 = (status := (safe_int32_of_integer_ (1))) in void);
      (C_64:
      begin
        (let jessie_370 = (buch_CurOperation := (safe_buch_ListOper_of_integer_ (2))) in
        void);
       (C_65:
       begin
         (let jessie_371 = (buch_CurOpStatus := (safe_Buch_OpStatusList_of_integer_ (1))) in
         void);
        (C_68:
        begin
          (let jessie_376 = (let jessie_372 = (C_66:
                                              ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                               ((shift buch_CurStates) (0)))) in
                            (let jessie_375 = ((shift buch_CurStates_old) (0)) in
                            (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_375) jessie_372))) in
          void);
         (C_71:
         begin
           (let jessie_381 = (let jessie_377 = (C_69:
                                               ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                ((shift buch_CurStates) (1)))) in
                             (let jessie_380 = ((shift buch_CurStates_old) (1)) in
                             (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_380) jessie_377))) in
           void);
          (C_74:
          begin
            (let jessie_386 = (let jessie_382 = (C_72:
                                                ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                 ((shift buch_CurTrans) (0)))) in
                              (let jessie_385 = ((shift buch_CurTrans_tmp) (0)) in
                              (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_385) jessie_382))) in
            void);
           (C_77:
           begin
             (let jessie_391 = (let jessie_387 = (C_75:
                                                 ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                  ((shift buch_CurTrans) (1)))) in
                               (let jessie_390 = ((shift buch_CurTrans_tmp) (1)) in
                               (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_390) jessie_387))) in
             void);
            (C_80:
            begin
              (let jessie_396 = (let jessie_392 = (C_78:
                                                  ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                   ((shift buch_CurTrans) (2)))) in
                                (let jessie_395 = ((shift buch_CurTrans_tmp) (2)) in
                                (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_395) jessie_392))) in
              void);
             (if ((eq_int_ (integer_of_int32 !status)) (0))
             then
              (let jessie_397 = (if ((neq_int_ (integer_of_int32 (C_84:
                                                                 ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                  ((shift buch_CurStates_old) (0)))))) (0))
                                then
                                 (C_83:
                                 begin
                                   (tmp_0_0 := (safe_int32_of_integer_ (1)));
                                  !tmp_0_0
                                 end)
                                else
                                 (C_82:
                                 begin
                                   (tmp_0_0 := (safe_int32_of_integer_ (0)));
                                  !tmp_0_0
                                 end)) in
              void)
             else
              (C_81:
              (let jessie_398 = (tmp_0_0 := (safe_int32_of_integer_ (0))) in
              void)));
             (C_86:
             begin
               (let jessie_403 = (let jessie_399 = !tmp_0_0 in
                                 (let jessie_402 = ((shift buch_CurStates) (0)) in
                                 (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_402) jessie_399))) in
               void);
              (if ((neq_int_ (integer_of_int32 (C_91:
                                               ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                ((shift buch_CurStates_old) (0)))))) (0))
              then
               (C_90:
               (let jessie_404 = (tmp_0_1 := (safe_int32_of_integer_ (1))) in
               void))
              else
               (let jessie_405 = (if ((neq_int_ (integer_of_int32 (C_89:
                                                                  ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                   ((shift buch_CurStates_old) (1)))))) (0))
                                 then
                                  (C_88:
                                  begin
                                    (tmp_0_1 := (safe_int32_of_integer_ (1)));
                                   !tmp_0_1
                                  end)
                                 else
                                  (C_87:
                                  begin
                                    (tmp_0_1 := (safe_int32_of_integer_ (0)));
                                   !tmp_0_1
                                  end)) in
               void));
              (C_93:
              begin
                (let jessie_410 = (let jessie_406 = !tmp_0_1 in
                                  (let jessie_409 = ((shift buch_CurStates) (1)) in
                                  (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_409) jessie_406))) in
                void);
               (if ((eq_int_ (integer_of_int32 !status)) (0))
               then
                (if ((neq_int_ (integer_of_int32 (C_99:
                                                 ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                  ((shift buch_CurStates_old) (0)))))) (0))
                then
                 (let jessie_411 = (if ((neq_int_ (integer_of_int32 (C_98:
                                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                                    ((shift buch_CurStates) (0)))))) (0))
                                   then
                                    (C_97:
                                    begin
                                      (tmp_1_0 := (safe_int32_of_integer_ (1)));
                                     !tmp_1_0
                                    end)
                                   else
                                    (C_96:
                                    begin
                                      (tmp_1_0 := (safe_int32_of_integer_ (0)));
                                     !tmp_1_0
                                    end)) in
                 void)
                else
                 (C_95:
                 (let jessie_412 = (tmp_1_0 := (safe_int32_of_integer_ (0))) in
                 void)))
               else
                (C_94:
                (let jessie_413 = (tmp_1_0 := (safe_int32_of_integer_ (0))) in
                void)));
               (C_101:
               begin
                 (let jessie_418 = (let jessie_414 = !tmp_1_0 in
                                   (let jessie_417 = ((shift buch_CurTrans) (0)) in
                                   (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_417) jessie_414))) in
                 void);
                (if ((neq_int_ (integer_of_int32 (C_106:
                                                 ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                  ((shift buch_CurStates_old) (0)))))) (0))
                then
                 (let jessie_419 = (if ((neq_int_ (integer_of_int32 (C_105:
                                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                                    ((shift buch_CurStates) (1)))))) (0))
                                   then
                                    (C_104:
                                    begin
                                      (tmp_2 := (safe_int32_of_integer_ (1)));
                                     !tmp_2
                                    end)
                                   else
                                    (C_103:
                                    begin
                                      (tmp_2 := (safe_int32_of_integer_ (0)));
                                     !tmp_2
                                    end)) in
                 void)
                else
                 (C_102:
                 (let jessie_420 = (tmp_2 := (safe_int32_of_integer_ (0))) in
                 void)));
                (C_108:
                begin
                  (let jessie_425 = (let jessie_421 = !tmp_2 in
                                    (let jessie_424 = ((shift buch_CurTrans) (1)) in
                                    (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_424) jessie_421))) in
                  void);
                 (if ((neq_int_ (integer_of_int32 (C_113:
                                                  ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                   ((shift buch_CurStates_old) (1)))))) (0))
                 then
                  (let jessie_426 = (if ((neq_int_ (integer_of_int32 
                                                    (C_112:
                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                     ((shift buch_CurStates) (1)))))) (0))
                                    then
                                     (C_111:
                                     begin
                                       (tmp_3 := (safe_int32_of_integer_ (1)));
                                      !tmp_3
                                     end)
                                    else
                                     (C_110:
                                     begin
                                       (tmp_3 := (safe_int32_of_integer_ (0)));
                                      !tmp_3
                                     end)) in
                  void)
                 else
                  (C_109:
                  (let jessie_427 = (tmp_3 := (safe_int32_of_integer_ (0))) in
                  void)));
                 (C_115:
                 begin
                   (let jessie_432 = (let jessie_428 = !tmp_3 in
                                     (let jessie_431 = ((shift buch_CurTrans) (2)) in
                                     (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_431) jessie_428))) in
                   void);
                  (raise Return)
                 end)
                end)
               end)
              end)
             end)
            end)
           end)
          end)
         end)
        end)
       end)
      end)
     end))))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_383:
    ((JC_367:
     ((JC_363:
      eq_int((0),
      integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                       shift(buch_CurTrans, (1))))))
     and ((JC_364:
          (neq_int((0),
           integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                            shift(buch_CurTrans, (0)))))
          or neq_int((0),
             integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                              shift(buch_CurTrans, (2)))))))
         and ((JC_365: (true = true))
             and (JC_366:
                 (neq_int((0),
                  integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                   shift(buch_CurStates, (0)))))
                 or neq_int((0),
                    integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                     shift(buch_CurStates, (1)))))))))))
    and ((JC_368: inv(rr))
        and ((JC_369:
             valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
            and ((JC_370:
                 valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                and ((JC_371:
                     valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                    and ((JC_372:
                         valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                        and ((JC_373:
                             Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                             int_P_buch_CurStates_old_3_alloc_table,
                             int_P_buch_CurTrans_2_alloc_table,
                             int_P_buch_CurStates_1_alloc_table))
                            and ((JC_374:
                                 Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                 int_P_int_M_buch_CurTrans_2))
                                and ((JC_375:
                                     valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                    and ((JC_376:
                                         Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_377:
                                             _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                             int_P_int_M_buch_CurTrans_2,
                                             int_P_int_M_buch_CurStates_1,
                                             buch_CurOpStatus,
                                             buch_CurOperation, status))
                                            and ((JC_378:
                                                 _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_379:
                                                     _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_380:
                                                         _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_381:
                                                             _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and (JC_382:
                                                                _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                int_P_int_M_buch_CurTrans_2,
                                                                buch_CurOpStatus,
                                                                buch_CurOperation,
                                                                status)))))))))))))))))) }

let op_ensures_default =
 fun (tt : unit) ->
  { ((true = true)
    and (JC_327:
        (((JC_308:
          eq_int((0),
          integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                           shift(buch_CurTrans, (1))))))
         and ((JC_309:
              (neq_int((0),
               integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                shift(buch_CurTrans, (0)))))
              or neq_int((0),
                 integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                                  shift(buch_CurTrans, (2)))))))
             and ((JC_310: (true = true))
                 and (JC_311:
                     (neq_int((0),
                      integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                       shift(buch_CurStates, (0)))))
                     or neq_int((0),
                        integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                         shift(buch_CurStates, (1))))))))))
        and ((JC_312: inv(rr))
            and ((JC_313:
                 valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
                and ((JC_314:
                     valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                    and ((JC_315:
                         valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                        and ((JC_316:
                             valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                            and ((JC_317:
                                 Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                                 int_P_buch_CurStates_old_3_alloc_table,
                                 int_P_buch_CurTrans_2_alloc_table,
                                 int_P_buch_CurStates_1_alloc_table))
                                and ((JC_318:
                                     Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                     int_P_int_M_buch_CurTrans_2))
                                    and ((JC_319:
                                         valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_320:
                                             Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                            and ((JC_321:
                                                 _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_322:
                                                     _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_323:
                                                         _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_324:
                                                             _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and ((JC_325:
                                                                 _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                                 int_P_int_M_buch_CurTrans_2,
                                                                 int_P_int_M_buch_CurStates_1,
                                                                 buch_CurOpStatus,
                                                                 buch_CurOperation,
                                                                 status))
                                                                and (JC_326:
                                                                    _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                    int_P_int_M_buch_CurTrans_2,
                                                                    buch_CurOpStatus,
                                                                    buch_CurOperation,
                                                                    status))))))))))))))))))) }
  (init:
  try
   begin
     (let tmp_0_0 = ref (any_int32 void) in
     (let tmp_0_1 = ref (any_int32 void) in
     (let tmp_1_0 = ref (any_int32 void) in
     (let tmp_2 = ref (any_int32 void) in
     (let tmp_3 = ref (any_int32 void) in
     (C_63:
     begin
       (let jessie_305 = (status := (safe_int32_of_integer_ (1))) in void);
      (C_64:
      begin
        (let jessie_306 = (buch_CurOperation := (safe_buch_ListOper_of_integer_ (2))) in
        void);
       (C_65:
       begin
         (let jessie_307 = (buch_CurOpStatus := (safe_Buch_OpStatusList_of_integer_ (1))) in
         void);
        (C_68:
        begin
          (let jessie_312 = (let jessie_308 = (C_66:
                                              ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                               ((shift buch_CurStates) (0)))) in
                            (let jessie_311 = ((shift buch_CurStates_old) (0)) in
                            (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_311) jessie_308))) in
          void);
         (C_71:
         begin
           (let jessie_317 = (let jessie_313 = (C_69:
                                               ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                ((shift buch_CurStates) (1)))) in
                             (let jessie_316 = ((shift buch_CurStates_old) (1)) in
                             (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_316) jessie_313))) in
           void);
          (C_74:
          begin
            (let jessie_322 = (let jessie_318 = (C_72:
                                                ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                 ((shift buch_CurTrans) (0)))) in
                              (let jessie_321 = ((shift buch_CurTrans_tmp) (0)) in
                              (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_321) jessie_318))) in
            void);
           (C_77:
           begin
             (let jessie_327 = (let jessie_323 = (C_75:
                                                 ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                  ((shift buch_CurTrans) (1)))) in
                               (let jessie_326 = ((shift buch_CurTrans_tmp) (1)) in
                               (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_326) jessie_323))) in
             void);
            (C_80:
            begin
              (let jessie_332 = (let jessie_328 = (C_78:
                                                  ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                   ((shift buch_CurTrans) (2)))) in
                                (let jessie_331 = ((shift buch_CurTrans_tmp) (2)) in
                                (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_331) jessie_328))) in
              void);
             (if ((eq_int_ (integer_of_int32 !status)) (0))
             then
              (let jessie_333 = (if ((neq_int_ (integer_of_int32 (C_84:
                                                                 ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                  ((shift buch_CurStates_old) (0)))))) (0))
                                then
                                 (C_83:
                                 begin
                                   (tmp_0_0 := (safe_int32_of_integer_ (1)));
                                  !tmp_0_0
                                 end)
                                else
                                 (C_82:
                                 begin
                                   (tmp_0_0 := (safe_int32_of_integer_ (0)));
                                  !tmp_0_0
                                 end)) in
              void)
             else
              (C_81:
              (let jessie_334 = (tmp_0_0 := (safe_int32_of_integer_ (0))) in
              void)));
             (C_86:
             begin
               (let jessie_339 = (let jessie_335 = !tmp_0_0 in
                                 (let jessie_338 = ((shift buch_CurStates) (0)) in
                                 (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_338) jessie_335))) in
               void);
              (if ((neq_int_ (integer_of_int32 (C_91:
                                               ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                ((shift buch_CurStates_old) (0)))))) (0))
              then
               (C_90:
               (let jessie_340 = (tmp_0_1 := (safe_int32_of_integer_ (1))) in
               void))
              else
               (let jessie_341 = (if ((neq_int_ (integer_of_int32 (C_89:
                                                                  ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                   ((shift buch_CurStates_old) (1)))))) (0))
                                 then
                                  (C_88:
                                  begin
                                    (tmp_0_1 := (safe_int32_of_integer_ (1)));
                                   !tmp_0_1
                                  end)
                                 else
                                  (C_87:
                                  begin
                                    (tmp_0_1 := (safe_int32_of_integer_ (0)));
                                   !tmp_0_1
                                  end)) in
               void));
              (C_93:
              begin
                (let jessie_346 = (let jessie_342 = !tmp_0_1 in
                                  (let jessie_345 = ((shift buch_CurStates) (1)) in
                                  (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_345) jessie_342))) in
                void);
               (if ((eq_int_ (integer_of_int32 !status)) (0))
               then
                (if ((neq_int_ (integer_of_int32 (C_99:
                                                 ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                  ((shift buch_CurStates_old) (0)))))) (0))
                then
                 (let jessie_347 = (if ((neq_int_ (integer_of_int32 (C_98:
                                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                                    ((shift buch_CurStates) (0)))))) (0))
                                   then
                                    (C_97:
                                    begin
                                      (tmp_1_0 := (safe_int32_of_integer_ (1)));
                                     !tmp_1_0
                                    end)
                                   else
                                    (C_96:
                                    begin
                                      (tmp_1_0 := (safe_int32_of_integer_ (0)));
                                     !tmp_1_0
                                    end)) in
                 void)
                else
                 (C_95:
                 (let jessie_348 = (tmp_1_0 := (safe_int32_of_integer_ (0))) in
                 void)))
               else
                (C_94:
                (let jessie_349 = (tmp_1_0 := (safe_int32_of_integer_ (0))) in
                void)));
               (C_101:
               begin
                 (let jessie_354 = (let jessie_350 = !tmp_1_0 in
                                   (let jessie_353 = ((shift buch_CurTrans) (0)) in
                                   (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_353) jessie_350))) in
                 void);
                (if ((neq_int_ (integer_of_int32 (C_106:
                                                 ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                  ((shift buch_CurStates_old) (0)))))) (0))
                then
                 (let jessie_355 = (if ((neq_int_ (integer_of_int32 (C_105:
                                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                                    ((shift buch_CurStates) (1)))))) (0))
                                   then
                                    (C_104:
                                    begin
                                      (tmp_2 := (safe_int32_of_integer_ (1)));
                                     !tmp_2
                                    end)
                                   else
                                    (C_103:
                                    begin
                                      (tmp_2 := (safe_int32_of_integer_ (0)));
                                     !tmp_2
                                    end)) in
                 void)
                else
                 (C_102:
                 (let jessie_356 = (tmp_2 := (safe_int32_of_integer_ (0))) in
                 void)));
                (C_108:
                begin
                  (let jessie_361 = (let jessie_357 = !tmp_2 in
                                    (let jessie_360 = ((shift buch_CurTrans) (1)) in
                                    (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_360) jessie_357))) in
                  void);
                 (if ((neq_int_ (integer_of_int32 (C_113:
                                                  ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                   ((shift buch_CurStates_old) (1)))))) (0))
                 then
                  (let jessie_362 = (if ((neq_int_ (integer_of_int32 
                                                    (C_112:
                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                     ((shift buch_CurStates) (1)))))) (0))
                                    then
                                     (C_111:
                                     begin
                                       (tmp_3 := (safe_int32_of_integer_ (1)));
                                      !tmp_3
                                     end)
                                    else
                                     (C_110:
                                     begin
                                       (tmp_3 := (safe_int32_of_integer_ (0)));
                                      !tmp_3
                                     end)) in
                  void)
                 else
                  (C_109:
                  (let jessie_363 = (tmp_3 := (safe_int32_of_integer_ (0))) in
                  void)));
                 (C_115:
                 begin
                   (let jessie_368 = (let jessie_364 = !tmp_3 in
                                     (let jessie_367 = ((shift buch_CurTrans) (2)) in
                                     (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_367) jessie_364))) in
                   void);
                  (raise Return)
                 end)
                end)
               end)
              end)
             end)
            end)
           end)
          end)
         end)
        end)
       end)
      end)
     end))))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_329: true) }

let op_safety =
 fun (tt : unit) ->
  { (JC_327:
    (((JC_308:
      eq_int((0),
      integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                       shift(buch_CurTrans, (1))))))
     and ((JC_309:
          (neq_int((0),
           integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                            shift(buch_CurTrans, (0)))))
          or neq_int((0),
             integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
                              shift(buch_CurTrans, (2)))))))
         and ((JC_310: (true = true))
             and (JC_311:
                 (neq_int((0),
                  integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                   shift(buch_CurStates, (0)))))
                 or neq_int((0),
                    integer_of_int32(select(int_P_int_M_buch_CurStates_1,
                                     shift(buch_CurStates, (1))))))))))
    and ((JC_312: inv(rr))
        and ((JC_313:
             valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
            and ((JC_314:
                 valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
                and ((JC_315:
                     valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                    and ((JC_316:
                         valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                        and ((JC_317:
                             Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                             int_P_buch_CurStates_old_3_alloc_table,
                             int_P_buch_CurTrans_2_alloc_table,
                             int_P_buch_CurStates_1_alloc_table))
                            and ((JC_318:
                                 Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                                 int_P_int_M_buch_CurTrans_2))
                                and ((JC_319:
                                     valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                    and ((JC_320:
                                         Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                        and ((JC_321:
                                             _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                             int_P_int_M_buch_CurTrans_2,
                                             int_P_int_M_buch_CurStates_1,
                                             buch_CurOpStatus,
                                             buch_CurOperation, status))
                                            and ((JC_322:
                                                 _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_323:
                                                     _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_324:
                                                         _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and ((JC_325:
                                                             _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                             int_P_int_M_buch_CurTrans_2,
                                                             int_P_int_M_buch_CurStates_1,
                                                             buch_CurOpStatus,
                                                             buch_CurOperation,
                                                             status))
                                                            and (JC_326:
                                                                _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                                int_P_int_M_buch_CurTrans_2,
                                                                buch_CurOpStatus,
                                                                buch_CurOperation,
                                                                status)))))))))))))))))) }
  (init:
  try
   begin
     (let tmp_0_0 = ref (any_int32 void) in
     (let tmp_0_1 = ref (any_int32 void) in
     (let tmp_1_0 = ref (any_int32 void) in
     (let tmp_2 = ref (any_int32 void) in
     (let tmp_3 = ref (any_int32 void) in
     (C_63:
     begin
       (let jessie_241 = (status := (safe_int32_of_integer_ (1))) in void);
      (C_64:
      begin
        (let jessie_242 = (buch_CurOperation := (safe_buch_ListOper_of_integer_ (2))) in
        void);
       (C_65:
       begin
         (let jessie_243 = (buch_CurOpStatus := (safe_Buch_OpStatusList_of_integer_ (1))) in
         void);
        (C_68:
        begin
          (let jessie_248 = (let jessie_244 = (C_66:
                                              ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                               ((shift buch_CurStates) (0)))) in
                            (let jessie_247 = ((shift buch_CurStates_old) (0)) in
                            (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_247) jessie_244))) in
          void);
         (C_71:
         begin
           (let jessie_253 = (let jessie_249 = (C_69:
                                               ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                ((shift buch_CurStates) (1)))) in
                             (let jessie_252 = ((shift buch_CurStates_old) (1)) in
                             (((safe_upd_ int_P_int_M_buch_CurStates_old_3) jessie_252) jessie_249))) in
           void);
          (C_74:
          begin
            (let jessie_258 = (let jessie_254 = (C_72:
                                                ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                 ((shift buch_CurTrans) (0)))) in
                              (let jessie_257 = ((shift buch_CurTrans_tmp) (0)) in
                              (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_257) jessie_254))) in
            void);
           (C_77:
           begin
             (let jessie_263 = (let jessie_259 = (C_75:
                                                 ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                  ((shift buch_CurTrans) (1)))) in
                               (let jessie_262 = ((shift buch_CurTrans_tmp) (1)) in
                               (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_262) jessie_259))) in
             void);
            (C_80:
            begin
              (let jessie_268 = (let jessie_264 = (C_78:
                                                  ((safe_acc_ !int_P_int_M_buch_CurTrans_2) 
                                                   ((shift buch_CurTrans) (2)))) in
                                (let jessie_267 = ((shift buch_CurTrans_tmp) (2)) in
                                (((safe_upd_ int_P_int_M_buch_CurTrans_tmp_4) jessie_267) jessie_264))) in
              void);
             (if ((eq_int_ (integer_of_int32 !status)) (0))
             then
              (let jessie_269 = (if ((neq_int_ (integer_of_int32 (C_84:
                                                                 ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                  ((shift buch_CurStates_old) (0)))))) (0))
                                then
                                 (C_83:
                                 begin
                                   (tmp_0_0 := (safe_int32_of_integer_ (1)));
                                  !tmp_0_0
                                 end)
                                else
                                 (C_82:
                                 begin
                                   (tmp_0_0 := (safe_int32_of_integer_ (0)));
                                  !tmp_0_0
                                 end)) in
              void)
             else
              (C_81:
              (let jessie_270 = (tmp_0_0 := (safe_int32_of_integer_ (0))) in
              void)));
             (C_86:
             begin
               (let jessie_275 = (let jessie_271 = !tmp_0_0 in
                                 (let jessie_274 = ((shift buch_CurStates) (0)) in
                                 (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_274) jessie_271))) in
               void);
              (if ((neq_int_ (integer_of_int32 (C_91:
                                               ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                ((shift buch_CurStates_old) (0)))))) (0))
              then
               (C_90:
               (let jessie_276 = (tmp_0_1 := (safe_int32_of_integer_ (1))) in
               void))
              else
               (let jessie_277 = (if ((neq_int_ (integer_of_int32 (C_89:
                                                                  ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                                   ((shift buch_CurStates_old) (1)))))) (0))
                                 then
                                  (C_88:
                                  begin
                                    (tmp_0_1 := (safe_int32_of_integer_ (1)));
                                   !tmp_0_1
                                  end)
                                 else
                                  (C_87:
                                  begin
                                    (tmp_0_1 := (safe_int32_of_integer_ (0)));
                                   !tmp_0_1
                                  end)) in
               void));
              (C_93:
              begin
                (let jessie_282 = (let jessie_278 = !tmp_0_1 in
                                  (let jessie_281 = ((shift buch_CurStates) (1)) in
                                  (((safe_upd_ int_P_int_M_buch_CurStates_1) jessie_281) jessie_278))) in
                void);
               (if ((eq_int_ (integer_of_int32 !status)) (0))
               then
                (if ((neq_int_ (integer_of_int32 (C_99:
                                                 ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                  ((shift buch_CurStates_old) (0)))))) (0))
                then
                 (let jessie_283 = (if ((neq_int_ (integer_of_int32 (C_98:
                                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                                    ((shift buch_CurStates) (0)))))) (0))
                                   then
                                    (C_97:
                                    begin
                                      (tmp_1_0 := (safe_int32_of_integer_ (1)));
                                     !tmp_1_0
                                    end)
                                   else
                                    (C_96:
                                    begin
                                      (tmp_1_0 := (safe_int32_of_integer_ (0)));
                                     !tmp_1_0
                                    end)) in
                 void)
                else
                 (C_95:
                 (let jessie_284 = (tmp_1_0 := (safe_int32_of_integer_ (0))) in
                 void)))
               else
                (C_94:
                (let jessie_285 = (tmp_1_0 := (safe_int32_of_integer_ (0))) in
                void)));
               (C_101:
               begin
                 (let jessie_290 = (let jessie_286 = !tmp_1_0 in
                                   (let jessie_289 = ((shift buch_CurTrans) (0)) in
                                   (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_289) jessie_286))) in
                 void);
                (if ((neq_int_ (integer_of_int32 (C_106:
                                                 ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                  ((shift buch_CurStates_old) (0)))))) (0))
                then
                 (let jessie_291 = (if ((neq_int_ (integer_of_int32 (C_105:
                                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                                    ((shift buch_CurStates) (1)))))) (0))
                                   then
                                    (C_104:
                                    begin
                                      (tmp_2 := (safe_int32_of_integer_ (1)));
                                     !tmp_2
                                    end)
                                   else
                                    (C_103:
                                    begin
                                      (tmp_2 := (safe_int32_of_integer_ (0)));
                                     !tmp_2
                                    end)) in
                 void)
                else
                 (C_102:
                 (let jessie_292 = (tmp_2 := (safe_int32_of_integer_ (0))) in
                 void)));
                (C_108:
                begin
                  (let jessie_297 = (let jessie_293 = !tmp_2 in
                                    (let jessie_296 = ((shift buch_CurTrans) (1)) in
                                    (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_296) jessie_293))) in
                  void);
                 (if ((neq_int_ (integer_of_int32 (C_113:
                                                  ((safe_acc_ !int_P_int_M_buch_CurStates_old_3) 
                                                   ((shift buch_CurStates_old) (1)))))) (0))
                 then
                  (let jessie_298 = (if ((neq_int_ (integer_of_int32 
                                                    (C_112:
                                                    ((safe_acc_ !int_P_int_M_buch_CurStates_1) 
                                                     ((shift buch_CurStates) (1)))))) (0))
                                    then
                                     (C_111:
                                     begin
                                       (tmp_3 := (safe_int32_of_integer_ (1)));
                                      !tmp_3
                                     end)
                                    else
                                     (C_110:
                                     begin
                                       (tmp_3 := (safe_int32_of_integer_ (0)));
                                      !tmp_3
                                     end)) in
                  void)
                 else
                  (C_109:
                  (let jessie_299 = (tmp_3 := (safe_int32_of_integer_ (0))) in
                  void)));
                 (C_115:
                 begin
                   (let jessie_304 = (let jessie_300 = !tmp_3 in
                                     (let jessie_303 = ((shift buch_CurTrans) (2)) in
                                     (((safe_upd_ int_P_int_M_buch_CurTrans_2) jessie_303) jessie_300))) in
                   void);
                  (raise Return)
                 end)
                end)
               end)
              end)
             end)
            end)
           end)
          end)
         end)
        end)
       end)
      end)
     end))))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_346:
    ((JC_331: inv(rr))
    and ((JC_332: valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table))
        and ((JC_333: valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table))
            and ((JC_334:
                 valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table))
                and ((JC_335:
                     valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table))
                    and ((JC_336:
                         Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table,
                         int_P_buch_CurStates_old_3_alloc_table,
                         int_P_buch_CurTrans_2_alloc_table,
                         int_P_buch_CurStates_1_alloc_table))
                        and ((JC_337:
                             Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4,
                             int_P_int_M_buch_CurTrans_2))
                            and ((JC_338:
                                 valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table))
                                and ((JC_339:
                                     Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table))
                                    and ((JC_340:
                                         _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3,
                                         int_P_int_M_buch_CurTrans_2,
                                         int_P_int_M_buch_CurStates_1,
                                         buch_CurOpStatus, buch_CurOperation,
                                         status))
                                        and ((JC_341:
                                             _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3,
                                             int_P_int_M_buch_CurTrans_2,
                                             int_P_int_M_buch_CurStates_1,
                                             buch_CurOpStatus,
                                             buch_CurOperation, status))
                                            and ((JC_342:
                                                 _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3,
                                                 int_P_int_M_buch_CurTrans_2,
                                                 int_P_int_M_buch_CurStates_1,
                                                 buch_CurOpStatus,
                                                 buch_CurOperation, status))
                                                and ((JC_343:
                                                     _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3,
                                                     int_P_int_M_buch_CurTrans_2,
                                                     int_P_int_M_buch_CurStates_1,
                                                     buch_CurOpStatus,
                                                     buch_CurOperation,
                                                     status))
                                                    and ((JC_344:
                                                         _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3,
                                                         int_P_int_M_buch_CurTrans_2,
                                                         int_P_int_M_buch_CurStates_1,
                                                         buch_CurOpStatus,
                                                         buch_CurOperation,
                                                         status))
                                                        and (JC_345:
                                                            _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3,
                                                            int_P_int_M_buch_CurTrans_2,
                                                            buch_CurOpStatus,
                                                            buch_CurOperation,
                                                            status))))))))))))))))) }


WHYLIB=WHYHOME/lib WHYEXEC=WHYHOME/bin/why.opt GWHYEXEC=WHYHOME/bin/gwhy.opt make --quiet -C t1_annot24.jessie --quiet -f t1_annot24.makefile project
why --project [...] why/t1_annot24.why
<project name="t1_annot24" context="why/t1_annot24_ctx.why">
  <function name="Function op">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/t1_annot24_po158.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po159.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po160.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po161.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po162.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po163.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po164.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po165.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po166.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po167.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po168.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po169.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po170.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po171.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po172.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    </behavior>
    <behavior name="Normal behavior `Buchi_property_behavior'">
    <goal why_file="why/t1_annot24_po140.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "220" begin = "14" end = "37"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po141.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "221" begin = "14" end = "66"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po142.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "223" begin = "14" end = "68"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po143.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po144.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po145.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po146.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po147.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po148.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po149.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po150.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po151.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po152.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po153.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po154.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po155.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po156.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po157.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    </behavior>
  </function>
  <function name="Function main">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/t1_annot24_po72.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.jessie/t1_annot24.jc" line = "34" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po73.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.jessie/t1_annot24.jc" line = "34" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po74.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.jessie/t1_annot24.jc" line = "34" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po75.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.jessie/t1_annot24.jc" line = "34" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po76.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.jessie/t1_annot24.jc" line = "34" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po77.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.jessie/t1_annot24.jc" line = "34" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po78.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.jessie/t1_annot24.jc" line = "34" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po79.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.jessie/t1_annot24.jc" line = "34" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po80.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.jessie/t1_annot24.jc" line = "34" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po81.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.jessie/t1_annot24.jc" line = "34" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po82.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.jessie/t1_annot24.jc" line = "34" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po83.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.jessie/t1_annot24.jc" line = "34" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po84.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.jessie/t1_annot24.jc" line = "34" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po85.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.jessie/t1_annot24.jc" line = "34" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po86.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.jessie/t1_annot24.jc" line = "34" begin = "5" end = "29"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po87.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "181" begin = "13" end = "36"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po88.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "182" begin = "13" end = "65"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po89.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "184" begin = "13" end = "67"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po90.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po91.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po92.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po93.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po94.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po95.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po96.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po97.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po98.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po99.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po100.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po101.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po102.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po103.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po104.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po105.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "215" begin = "13" end = "36"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po106.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "216" begin = "13" end = "65"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po107.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "218" begin = "13" end = "67"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po108.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po109.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po110.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po111.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po112.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po113.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po114.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po115.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po116.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po117.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po118.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po119.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po120.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po121.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po122.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "225" begin = "5" end = "7"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po123.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po124.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po125.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po126.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po127.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po128.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po129.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po130.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po131.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po132.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po133.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po134.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po135.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po136.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po137.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po138.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po139.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    </behavior>
    <behavior name="Normal behavior `Buchi_property_behavior'">
    <goal why_file="why/t1_annot24_po54.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "250" begin = "14" end = "37"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po55.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "251" begin = "14" end = "66"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po56.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "253" begin = "14" end = "68"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po57.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po58.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po59.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po60.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po61.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po62.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po63.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po64.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po65.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po66.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po67.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po68.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po69.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po70.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po71.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "255" begin = "4" end = "8"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    </behavior>
  </function>
  <function name="Function fake">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/t1_annot24_po35.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po36.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po37.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po38.why">
      <location file = "" line = "0" begin = "0" end = "0"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po39.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po40.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po41.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po42.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po43.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po44.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po45.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po46.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po47.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po48.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po49.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po50.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po51.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po52.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po53.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    </behavior>
    <behavior name="Normal behavior `j'">
    <goal why_file="why/t1_annot24_po19.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "193" begin = "14" end = "25"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po20.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po21.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po22.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po23.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po24.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po25.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po26.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po27.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po28.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po29.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po30.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po31.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po32.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po33.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po34.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    </behavior>
    <behavior name="Normal behavior `Buchi_property_behavior'">
    <goal why_file="why/t1_annot24_po1.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "187" begin = "14" end = "37"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po2.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "188" begin = "14" end = "66"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po3.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "190" begin = "14" end = "68"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po4.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po5.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po6.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po7.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po8.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po9.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po10.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po11.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po12.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po13.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po14.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po15.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po16.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po17.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    <goal why_file="why/t1_annot24_po18.why">
      <location file = "PPCHOME/tests/jessie/t1_annot24.c" line = "195" begin = "5" end = "9"/>
      <explain kind = "Other"
text = "unexplained assertion"/>
    </goal>
    </behavior>
  </function>
</project>
logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic div_int : int, int -> int

logic mod_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

logic bool_and : bool, bool -> bool

logic bool_or : bool, bool -> bool

logic bool_xor : bool, bool -> bool

logic bool_not : bool -> bool

axiom bool_and_def:
  (forall a:bool.
    (forall b:bool.
      ((bool_and(a, b) = true) <-> ((a = true) and (b = true)))))

axiom bool_or_def:
  (forall a:bool.
    (forall b:bool. ((bool_or(a, b) = true) <-> ((a = true) or (b = true)))))

axiom bool_xor_def:
  (forall a:bool. (forall b:bool. ((bool_xor(a, b) = true) <-> (a <> b))))

axiom bool_not_def: (forall a:bool. ((bool_not(a) = true) <-> (a = false)))

logic ite : bool, 'a1, 'a1 -> 'a1

axiom ite_true: (forall x:'a1. (forall y:'a1. (ite(true, x, y) = x)))

axiom ite_false: (forall x:'a1. (forall y:'a1. (ite(false, x, y) = y)))

logic lt_int_bool : int, int -> bool

logic le_int_bool : int, int -> bool

logic gt_int_bool : int, int -> bool

logic ge_int_bool : int, int -> bool

logic eq_int_bool : int, int -> bool

logic neq_int_bool : int, int -> bool

axiom lt_int_bool_axiom:
  (forall x:int. (forall y:int. ((lt_int_bool(x, y) = true) <-> (x < y))))

axiom le_int_bool_axiom:
  (forall x:int. (forall y:int. ((le_int_bool(x, y) = true) <-> (x <= y))))

axiom gt_int_bool_axiom:
  (forall x:int. (forall y:int. ((gt_int_bool(x, y) = true) <-> (x > y))))

axiom ge_int_bool_axiom:
  (forall x:int. (forall y:int. ((ge_int_bool(x, y) = true) <-> (x >= y))))

axiom eq_int_bool_axiom:
  (forall x:int. (forall y:int. ((eq_int_bool(x, y) = true) <-> (x = y))))

axiom neq_int_bool_axiom:
  (forall x:int. (forall y:int. ((neq_int_bool(x, y) = true) <-> (x <> y))))

logic abs_int : int -> int

axiom abs_int_pos: (forall x:int. ((x >= 0) -> (abs_int(x) = x)))

axiom abs_int_neg: (forall x:int. ((x <= 0) -> (abs_int(x) = (-x))))

logic int_max : int, int -> int

logic int_min : int, int -> int

axiom int_max_is_ge:
  (forall x:int.
    (forall y:int. ((int_max(x, y) >= x) and (int_max(x, y) >= y))))

axiom int_max_is_some:
  (forall x:int.
    (forall y:int. ((int_max(x, y) = x) or (int_max(x, y) = y))))

axiom int_min_is_le:
  (forall x:int.
    (forall y:int. ((int_min(x, y) <= x) and (int_min(x, y) <= y))))

axiom int_min_is_some:
  (forall x:int.
    (forall y:int. ((int_min(x, y) = x) or (int_min(x, y) = y))))

logic lt_real : real, real -> prop

logic le_real : real, real -> prop

logic gt_real : real, real -> prop

logic ge_real : real, real -> prop

logic eq_real : real, real -> prop

logic neq_real : real, real -> prop

logic add_real : real, real -> real

logic sub_real : real, real -> real

logic mul_real : real, real -> real

logic div_real : real, real -> real

logic neg_real : real -> real

logic real_of_int : int -> real

logic int_of_real : real -> int

logic lt_real_bool : real, real -> bool

logic le_real_bool : real, real -> bool

logic gt_real_bool : real, real -> bool

logic ge_real_bool : real, real -> bool

logic eq_real_bool : real, real -> bool

logic neq_real_bool : real, real -> bool

axiom lt_real_bool_axiom:
  (forall x:real. (forall y:real. ((lt_real_bool(x, y) = true) <-> (x < y))))

axiom le_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((le_real_bool(x, y) = true) <-> (x <= y))))

axiom gt_real_bool_axiom:
  (forall x:real. (forall y:real. ((gt_real_bool(x, y) = true) <-> (x > y))))

axiom ge_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((ge_real_bool(x, y) = true) <-> (x >= y))))

axiom eq_real_bool_axiom:
  (forall x:real. (forall y:real. ((eq_real_bool(x, y) = true) <-> (x = y))))

axiom neq_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((neq_real_bool(x, y) = true) <-> (x <> y))))

logic real_max : real, real -> real

logic real_min : real, real -> real

axiom real_max_is_ge:
  (forall x:real.
    (forall y:real. ((real_max(x, y) >= x) and (real_max(x, y) >= y))))

axiom real_max_is_some:
  (forall x:real.
    (forall y:real. ((real_max(x, y) = x) or (real_max(x, y) = y))))

axiom real_min_is_le:
  (forall x:real.
    (forall y:real. ((real_min(x, y) <= x) and (real_min(x, y) <= y))))

axiom real_min_is_some:
  (forall x:real.
    (forall y:real. ((real_min(x, y) = x) or (real_min(x, y) = y))))

logic sqrt_real : real -> real

logic pow_real : real, real -> real

logic abs_real : real -> real

axiom abs_real_pos:
  (forall x:real [abs_real(x)]. ((x >= 0.0) -> (abs_real(x) = x)))

axiom abs_real_neg:
  (forall x:real [abs_real(x)]. ((x <= 0.0) -> (abs_real(x) = (-x))))

logic exp : real -> real

logic log : real -> real

logic log10 : real -> real

axiom log_exp: (forall x:real. (log(exp(x)) = x))

logic cos : real -> real

logic sin : real -> real

logic tan : real -> real

logic cosh : real -> real

logic sinh : real -> real

logic tanh : real -> real

logic acos : real -> real

logic asin : real -> real

logic atan : real -> real

logic atan2 : real, real -> real

logic hypot : real, real -> real

axiom prod_pos:
  (forall x:real.
    (forall y:real.
      ((((x > 0.0) and (y > 0.0)) -> ((x * y) > 0.0)) and
       (((x < 0.0) and (y < 0.0)) -> ((x * y) > 0.0)))))

axiom abs_minus: (forall x:real. (abs_real((-x)) = abs_real(x)))

type 't alloc_table

type 't pointer

type 't block

logic base_block : 'a1 pointer -> 'a1 block

logic pointer_address : 'a1 pointer -> unit pointer

logic absolute_address : int -> unit pointer

logic address : 'a1 pointer -> int

logic offset_max : 'a1 alloc_table, 'a1 pointer -> int

logic offset_min : 'a1 alloc_table, 'a1 pointer -> int

predicate valid(a: 'a1 alloc_table, p: 'a1 pointer) =
  ((offset_min(a, p) <= 0) and (offset_max(a, p) >= 0))

predicate same_block(p: 'a1 pointer, q: 'a1 pointer) =
  (base_block(p) = base_block(q))

logic sub_pointer : 'a1 pointer, 'a1 pointer -> int

logic shift : 'a1 pointer, int -> 'a1 pointer

logic null :  -> 'a1 pointer

axiom address_injective:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. ((p = q) <-> (address(p) = address(q)))))

axiom address_null: (address(null) = 0)

axiom address_positive: (forall p:'a1 pointer. (0 <= address(p)))

axiom address_shift_lt:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) < address(shift(p, j))) <-> (i < j)))))

axiom address_shift_le:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) <= address(shift(p, j))) <-> (i <= j)))))

axiom shift_zero: (forall p:'a1 pointer [shift(p, 0)]. (shift(p, 0) = p))

axiom shift_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(shift(p, i), j)]. (shift(shift(p, i),
        j) = shift(p, (i + j))))))

axiom offset_max_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_max(a, shift(p, i)) = (offset_max(a, p) - i)))))

axiom offset_min_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_min(a, shift(p, i)) = (offset_min(a, p) - i)))))

axiom neq_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(p, i), shift(p, j)].
        ((i <> j) -> (shift(p, i) <> shift(p, j))))))

axiom null_not_valid: (forall a:'a1 alloc_table. (not valid(a, null)))

axiom null_pointer:
  (forall a:'a1 alloc_table.
    ((offset_min(a, null) >= 0) and (offset_max(a, null) <= (-2))))

logic eq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

logic neq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

axiom eq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer. ((eq_pointer_bool(p1, p2) = true) <-> (p1 = p2))))

axiom neq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer.
      ((neq_pointer_bool(p1, p2) = true) <-> (p1 <> p2))))

axiom same_block_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(p, shift(q, i))].
        (same_block(p, q) -> same_block(p, shift(q, i))))))

axiom same_block_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(shift(q, i), p)].
        (same_block(q, p) -> same_block(shift(q, i), p)))))

axiom sub_pointer_shift:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> (p = shift(q, sub_pointer(p, q))))))

axiom sub_pointer_self:
  (forall p:'a1 pointer [sub_pointer(p, p)]. (sub_pointer(p, p) = 0))

axiom sub_pointer_zero:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> ((sub_pointer(p, q) = 0) -> (p = q)))))

axiom sub_pointer_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(shift(p, i), q)]. (sub_pointer(shift(p, i),
        q) = (sub_pointer(p, q) + i)))))

axiom sub_pointer_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(p, shift(q, i))]. (sub_pointer(p, shift(q,
        i)) = (sub_pointer(p, q) - i)))))

type ('t, 'v) memory

logic select : ('a2, 'a1) memory, 'a2 pointer -> 'a1

logic store : ('a1, 'a2) memory, 'a1 pointer, 'a2 -> ('a1, 'a2) memory

axiom select_store_eq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 = p2) -> (select(store(m, p1, a), p2) = a))))))

axiom select_store_neq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 <> p2) -> (select(store(m, p1, a), p2) = select(m, p2)))))))

type 't pset

logic pset_empty :  -> 'a1 pset

logic pset_singleton : 'a1 pointer -> 'a1 pset

logic pset_deref : ('a2, 'a1 pointer) memory, 'a2 pset -> 'a1 pset

logic pset_union : 'a1 pset, 'a1 pset -> 'a1 pset

logic pset_all : 'a1 pset -> 'a1 pset

logic pset_range : 'a1 pset, int, int -> 'a1 pset

logic pset_range_left : 'a1 pset, int -> 'a1 pset

logic pset_range_right : 'a1 pset, int -> 'a1 pset

logic in_pset : 'a1 pointer, 'a1 pset -> prop

logic valid_pset : 'a1 alloc_table, 'a1 pset -> prop

predicate pset_disjoint(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (not (in_pset(p, ps1) and in_pset(p, ps2))))

predicate pset_included(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (in_pset(p, ps1) -> in_pset(p, ps2)))

axiom pset_included_self: (forall ps:'a1 pset. pset_included(ps, ps))

axiom pset_included_range:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))].
            (((c <= a) and (b <= d)) -> pset_included(pset_range(ps, a, b),
             pset_range(ps, c, d))))))))

axiom pset_included_range_all:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))]. pset_included(pset_range(ps, a, b), pset_all(ps)))))))

axiom in_pset_empty: (forall p:'a1 pointer. (not in_pset(p, pset_empty)))

axiom in_pset_singleton:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. (in_pset(p, pset_singleton(q)) <-> (p = q))))

axiom in_pset_deref:
  (forall p:'a1 pointer.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (in_pset(p, pset_deref(m, q)) <->
         (exists r:'a2 pointer. (in_pset(r, q) and (p = select(m, r))))))))

axiom in_pset_all:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (in_pset(p, pset_all(q)) <->
       (exists i:int.
         (exists r:'a1 pointer. (in_pset(r, q) and (p = shift(r, i))))))))

axiom in_pset_range:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (forall b:int.
          (in_pset(p, pset_range(q, a, b)) <->
           (exists i:int.
             (exists r:'a1 pointer.
               ((a <= i) and
                ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))))

axiom in_pset_range_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall b:int.
        (in_pset(p, pset_range_left(q, b)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_range_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (in_pset(p, pset_range_right(q, a)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((a <= i) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_union:
  (forall p:'a1 pointer.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (in_pset(p, pset_union(s1, s2)) <->
         (in_pset(p, s1) or in_pset(p, s2))))))

axiom valid_pset_empty: (forall a:'a1 alloc_table. valid_pset(a, pset_empty))

axiom valid_pset_singleton:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (valid_pset(a, pset_singleton(p)) <-> valid(a, p))))

axiom valid_pset_deref:
  (forall a:'a1 alloc_table.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (valid_pset(a, pset_deref(m, q)) <->
         (forall r:'a2 pointer.
           (forall p:'a1 pointer.
             ((in_pset(r, q) and (p = select(m, r))) -> valid(a, p))))))))

axiom valid_pset_range:
  (forall a:'a1 alloc_table.
    (forall q:'a1 pset.
      (forall c:int.
        (forall d:int.
          (valid_pset(a, pset_range(q, c, d)) <->
           (forall i:int.
             (forall r:'a1 pointer.
               ((in_pset(r, q) and ((c <= i) and (i <= d))) -> valid(a,
                shift(r, i))))))))))

axiom valid_pset_union:
  (forall a:'a1 alloc_table.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (valid_pset(a, pset_union(s1, s2)) <->
         (valid_pset(a, s1) and valid_pset(a, s2))))))

predicate not_assigns(a: 'a1 alloc_table, m1: ('a1, 'a2) memory, m2: ('a1,
  'a2) memory, l: 'a1 pset) =
  (forall p:'a1 pointer.
    ((valid(a, p) and (not in_pset(p, l))) -> (select(m2, p) = select(m1, p))))

axiom not_assigns_refl:
  (forall a:'a1 alloc_table.
    (forall m:('a1, 'a2) memory.
      (forall l:'a1 pset. not_assigns(a, m, m, l))))

axiom not_assigns_trans:
  (forall a:'a1 alloc_table.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory.
          (forall l:'a1 pset [not_assigns(a, m1, m2, l), not_assigns(a, m1,
            m3, l)].
            (not_assigns(a, m1, m2, l) ->
             (not_assigns(a, m2, m3, l) -> not_assigns(a, m1, m3, l))))))))

logic full_separated : 'a1 pointer, 'a2 pointer -> prop

axiom full_separated_shift1:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(p, shift(q, i))))))

axiom full_separated_shift2:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift3:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift4:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(p, shift(q, i))))))

type 't tag_table

type 't tag_id

logic int_of_tag : 'a1 tag_id -> int

logic typeof : 'a1 tag_table, 'a1 pointer -> 'a1 tag_id

logic parenttag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag_bool : 'a1 tag_id, 'a1 tag_id -> bool

axiom subtag_bool_def:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id. ((subtag_bool(t1, t2) = true) <-> subtag(t1, t2))))

axiom subtag_refl: (forall t:'a1 tag_id. subtag(t, t))

axiom subtag_parent:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id.
      (forall t3:'a1 tag_id.
        (subtag(t1, t2) -> (parenttag(t2, t3) -> subtag(t1, t3))))))

predicate instanceof(a: 'a1 tag_table, p: 'a1 pointer, t: 'a1 tag_id) =
  subtag(typeof(a, p), t)

logic downcast : 'a1 tag_table, 'a1 pointer, 'a1 tag_id -> 'a1 pointer

axiom downcast_instanceof:
  (forall a:'a1 tag_table.
    (forall p:'a1 pointer.
      (forall s:'a1 tag_id. (instanceof(a, p, s) -> (downcast(a, p, s) = p)))))

logic bottom_tag :  -> 'a1 tag_id

axiom bottom_tag_axiom: (forall t:'a1 tag_id. subtag(t, bottom_tag))

predicate root_tag(t: 'a1 tag_id) = parenttag(t, bottom_tag)

axiom root_subtag:
  (forall a:'a1 tag_id.
    (forall b:'a1 tag_id.
      (forall c:'a1 tag_id.
        (root_tag(a) ->
         (root_tag(b) -> ((a <> b) -> (subtag(c, a) -> (not subtag(c, b)))))))))

predicate fully_packed(tag_table: 'a1 tag_table, mutable: ('a1,
  'a1 tag_id) memory, this: 'a1 pointer) = (select(mutable,
  this) = typeof(tag_table, this))

logic bw_compl : int -> int

logic bw_and : int, int -> int

axiom bw_and_not_null:
  (forall a:int.
    (forall b:int. ((bw_and(a, b) <> 0) -> ((a <> 0) and (b <> 0)))))

logic bw_xor : int, int -> int

logic bw_or : int, int -> int

logic lsl : int, int -> int

axiom lsl_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsl(a, b)))))

axiom lsl_left_positive_monotone:
  (forall a1:int.
    (forall a2:int.
      (forall b:int.
        (((0 <= a1) and ((a1 <= a2) and (0 <= b))) -> (lsl(a1, b) <= lsl(a2,
         b))))))

logic lsr : int, int -> int

axiom lsr_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsr(a, b)))))

axiom lsr_left_positive_decreases:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(a, b) <= a))))

logic asr : int, int -> int

axiom asr_positive_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= asr(a, b)))))

axiom asr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) <= a))))

axiom asr_lsr_same_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) = lsr(a, b)))))

axiom lsl_of_lsr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsl(lsr(a, b), b) <= a))))

axiom lsr_of_lsl_identity_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(lsl(a, b), b) = a))))

logic alloc_extends : 'a1 alloc_table, 'a1 alloc_table -> prop

predicate alloc_fresh(a: 'a1 alloc_table, p: 'a1 pointer, n: int) =
  (forall i:int. (((0 <= i) and (i < n)) -> (not valid(a, shift(p, i)))))

axiom alloc_extends_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_min(a1, p) = offset_min(a2, p)))))))

axiom alloc_extends_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_max(a1, p) = offset_max(a2, p)))))))

axiom alloc_extends_not_assigns_empty:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory.
          (forall l:'a1 pset.
            (forall p:'a1 pointer.
              (forall n:int [alloc_extends(a1, a2), alloc_fresh(a1, p, n),
                not_assigns(a2, m1, m2, l)].
                ((alloc_extends(a1, a2) and
                  (alloc_fresh(a1, p, n) and
                   (not_assigns(a2, m1, m2, l) and pset_included(l,
                    pset_all(pset_singleton(p)))))) ->
                 not_assigns(a1, m1, m2, pset_empty)))))))))

logic alloc_extends_except : 'a1 alloc_table, 'a1 alloc_table,
'a1 pset -> prop

axiom alloc_extends_except_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_min(a1,
            p) = offset_min(a2, p))))))))

axiom alloc_extends_except_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_max(a1,
            p) = offset_max(a2, p))))))))

type bitvector

logic concat_bitvector : bitvector, bitvector -> bitvector

logic offset_min_bytes : 'a1 alloc_table, 'a1 pointer, int -> int

logic offset_max_bytes : 'a1 alloc_table, 'a1 pointer, int -> int

axiom offset_min_bytes_def:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall s:int [offset_min_bytes(a, p, s)].
        ((0 < s) ->
         ((offset_min(a, p) <= (s * offset_min_bytes(a, p, s))) and
          (((s * offset_min_bytes(a, p, s)) - s) < offset_min(a, p)))))))

axiom offset_max_bytes_def:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall s:int [offset_max_bytes(a, p, s)].
        ((0 < s) ->
         (((((s * offset_max_bytes(a, p, s)) + s) - 1) <= offset_max(a,
          p)) and (offset_max(a, p) < ((((s * offset_max_bytes(a, p,
          s)) + s) + s) - 1)))))))

logic extract_bytes : bitvector, int, int -> bitvector

logic replace_bytes : bitvector, int, int, bitvector -> bitvector

axiom select_store_eq_union:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector [extract_bytes(replace_bytes(v1, o1, s1,
              v2), o2, s2)].
              (((o1 = o2) and (s1 = s2)) -> (extract_bytes(replace_bytes(v1,
               o1, s1, v2), o2, s2) = v2))))))))

axiom select_store_neq_union:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector [extract_bytes(replace_bytes(v1, o1, s1,
              v2), o2, s2)].
              ((((o2 + s2) <= o1) or ((o1 + s2) <= o2)) ->
               (extract_bytes(replace_bytes(v1, o1, s1, v2), o2,
               s2) = extract_bytes(v1, o2, s2)))))))))

axiom concat_replace_bytes_up:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector.
              (forall v3:bitvector [replace_bytes(replace_bytes(v1, o1, s1,
                v2), o2, s2, v3)].
                (((o1 + s1) = o2) -> (replace_bytes(replace_bytes(v1, o1, s1,
                 v2), o2, s2, v3) = replace_bytes(v1, o1, (s1 + s2),
                 concat_bitvector(v2, v3)))))))))))

axiom concat_replace_bytes_down:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector.
              (forall v3:bitvector [replace_bytes(replace_bytes(v1, o1, s1,
                v2), o2, s2, v3)].
                (((o2 + s2) = o1) -> (replace_bytes(replace_bytes(v1, o1, s1,
                 v2), o2, s2, v3) = replace_bytes(v1, o2, (s1 + s2),
                 concat_bitvector(v3, v2)))))))))))

axiom concat_extract_bytes:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v:bitvector [concat_bitvector(extract_bytes(v, o1, s1),
            extract_bytes(v, o2, s2))].
            (((o1 + s1) = o2) -> (concat_bitvector(extract_bytes(v, o1, s1),
             extract_bytes(v, o2, s2)) = extract_bytes(v, o1, (s1 + s2)))))))))

logic select_bytes : ('a1, bitvector) memory, 'a1 pointer, int,
int -> bitvector

logic store_bytes : ('a1, bitvector) memory, 'a1 pointer, int, int,
bitvector -> ('a1, bitvector) memory

axiom select_store_eq_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall o1:int.
          (forall s1:int.
            (forall o2:int.
              (forall s2:int.
                (forall v:bitvector [select_bytes(store_bytes(m, p1, o1, s1,
                  v), p2, o2, s2)].
                  (((p1 = p2) and ((o1 = o2) and (s1 = s2))) ->
                   (select_bytes(store_bytes(m, p1, o1, s1, v), p2, o2,
                   s2) = v))))))))))

axiom select_store_neq_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall o1:int.
          (forall s1:int.
            (forall o2:int.
              (forall s2:int.
                (forall v:bitvector [select_bytes(store_bytes(m, p1, o1, s1,
                  v), p2, o2, s2)].
                  (pset_disjoint(pset_range(pset_singleton(p1), o1,
                   (o1 + s1)), pset_range(pset_singleton(p2), o2,
                   (o2 + s2))) -> (select_bytes(store_bytes(m, p1, o1, s1,
                   v), p2, o2, s2) = select_bytes(m, p2, o2, s2)))))))))))

axiom shift_store_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall i:int.
        (forall o:int.
          (forall s:int.
            (forall v:bitvector [store_bytes(m, shift(p, i), o, s, v)].
              (store_bytes(m, shift(p, i), o, s, v) = store_bytes(m, p,
              (o + i), s, v))))))))

axiom shift_select_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall i:int.
        (forall o:int.
          (forall s:int.
            (forall v:bitvector [select_bytes(m, shift(p, i), o, s)].
              (select_bytes(m, shift(p, i), o, s) = select_bytes(m, p,
              (o + i), s))))))))

axiom concat_store_bytes_up:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall o1:int.
        (forall s1:int.
          (forall o2:int.
            (forall s2:int.
              (forall v1:bitvector.
                (forall v2:bitvector [store_bytes(store_bytes(m, p, o1, s1,
                  v1), p, o2, s2, v2)].
                  (((o1 + s1) = o2) -> (store_bytes(store_bytes(m, p, o1, s1,
                   v1), p, o2, s2, v2) = store_bytes(m, p, o1, (s1 + s2),
                   concat_bitvector(v1, v2))))))))))))

axiom concat_store_bytes_down:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall o1:int.
        (forall s1:int.
          (forall o2:int.
            (forall s2:int.
              (forall v1:bitvector.
                (forall v2:bitvector [store_bytes(store_bytes(m, p, o1, s1,
                  v1), p, o2, s2, v2)].
                  (((o2 + s2) = o1) -> (store_bytes(store_bytes(m, p, o1, s1,
                   v1), p, o2, s2, v2) = store_bytes(m, p, o2, (s1 + s2),
                   concat_bitvector(v2, v1))))))))))))

axiom concat_select_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall o1:int.
        (forall s1:int.
          (forall o2:int.
            (forall s2:int [concat_bitvector(select_bytes(m, p, o1, s1),
              select_bytes(m, p, o2, s2))].
              (((o1 + s1) = o2) -> (concat_bitvector(select_bytes(m, p, o1,
               s1), select_bytes(m, p, o2, s2)) = select_bytes(m, p, o1,
               (s1 + s2))))))))))

type Buch_OpStatusList

type buch_AcceptStates_5

type buch_CurStates_1

type buch_CurStates_old_3

type buch_CurTrans_2

type buch_CurTrans_tmp_4

type buch_ListOper

type char_P

type int32

type int8

type int_P

type padding

type void_P

logic integer_of_int32 : int32 -> int

logic buch_CurTrans :  -> int_P pointer

logic buch_CurTrans_tmp :  -> int_P pointer

predicate Buch_Arrays_Coherence(int_P_int_M_buch_CurTrans_tmp_4: (int_P,
  int32) memory, int_P_int_M_buch_CurTrans_2: (int_P, int32) memory) =
  (forall _buch_i:int.
    (((0 <= _buch_i) and (_buch_i < 3)) ->
     (integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
     shift(buch_CurTrans,
     _buch_i))) = integer_of_int32(select(int_P_int_M_buch_CurTrans_tmp_4,
     shift(buch_CurTrans_tmp, _buch_i))))))

logic integer_of_Buch_OpStatusList : Buch_OpStatusList -> int

logic Buch_OpStatusList_of_integer : int -> Buch_OpStatusList

axiom Buch_OpStatusList_coerce:
  (forall x:int.
    (((0 <= x) and (x <= 1)) ->
     (integer_of_Buch_OpStatusList(Buch_OpStatusList_of_integer(x)) = x)))

logic Buch_OpStatusList_of_bitvector : bitvector -> Buch_OpStatusList

predicate eq_Buch_OpStatusList(x: Buch_OpStatusList, y: Buch_OpStatusList) =
  (integer_of_Buch_OpStatusList(x) = integer_of_Buch_OpStatusList(y))

logic bitvector_of_Buch_OpStatusList : Buch_OpStatusList -> bitvector

axiom Buch_OpStatusList_of_bitvector_of_bitvector_of_Buch_OpStatusList:
  (forall x:Buch_OpStatusList.
    eq_Buch_OpStatusList(Buch_OpStatusList_of_bitvector(bitvector_of_Buch_OpStatusList(x)),
    x))

axiom Buch_OpStatusList_range:
  (forall x:Buch_OpStatusList.
    ((0 <= integer_of_Buch_OpStatusList(x)) and
     (integer_of_Buch_OpStatusList(x) <= 1)))

logic buch_CurStates :  -> int_P pointer

logic buch_CurStates_old :  -> int_P pointer

predicate Buch_Ranges_Validity(int_P_buch_CurTrans_tmp_4_alloc_table: int_P alloc_table,
  int_P_buch_CurStates_old_3_alloc_table: int_P alloc_table,
  int_P_buch_CurTrans_2_alloc_table: int_P alloc_table,
  int_P_buch_CurStates_1_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_buch_CurTrans_2_alloc_table, buch_CurTrans) <= 0) and
   ((offset_max(int_P_buch_CurTrans_2_alloc_table, buch_CurTrans) >= 2) and
    ((offset_min(int_P_buch_CurTrans_tmp_4_alloc_table,
     buch_CurTrans_tmp) <= 0) and
     ((offset_max(int_P_buch_CurTrans_tmp_4_alloc_table,
      buch_CurTrans_tmp) >= 2) and
      ((offset_min(int_P_buch_CurStates_1_alloc_table,
       buch_CurStates) <= 0) and
       ((offset_max(int_P_buch_CurStates_1_alloc_table,
        buch_CurStates) >= 1) and
        ((offset_min(int_P_buch_CurStates_old_3_alloc_table,
         buch_CurStates_old) <= 0) and
         (offset_max(int_P_buch_CurStates_old_3_alloc_table,
         buch_CurStates_old) >= 1))))))))

logic buch_AcceptStates :  -> int_P pointer

predicate Buch_acc_Ranges_Validity(int_P_buch_AcceptStates_5_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_buch_AcceptStates_5_alloc_table,
   buch_AcceptStates) <= 0) and
   (offset_max(int_P_buch_AcceptStates_5_alloc_table,
   buch_AcceptStates) >= 1))

logic buch_Trans_Stop : int -> int

predicate buch_Trans_Cond_param(_buch_numTrans: int, _buch_op: int,
  _buch_status: int, status_at_L: int32) =
  (((_buch_numTrans = 0) -> (integer_of_int32(status_at_L) = 0)) and
   ((_buch_numTrans = 1) -> ((_buch_op = 2) and (_buch_status = 1))))

logic integer_of_buch_ListOper : buch_ListOper -> int

predicate buch_Trans_Cond(_buch_numTrans_0: int,
  buch_CurOpStatus_at_L: Buch_OpStatusList,
  buch_CurOperation_at_L: buch_ListOper, status_at_L: int32) =
  buch_Trans_Cond_param(_buch_numTrans_0,
  integer_of_buch_ListOper(buch_CurOperation_at_L),
  integer_of_Buch_OpStatusList(buch_CurOpStatus_at_L), status_at_L)

logic buch_Trans_Start : int -> int

predicate _Buch_st_reach_1(int_P_int_M_buch_CurStates_old_3: (int_P,
  int32) memory, int_P_int_M_buch_CurTrans_2: (int_P, int32) memory,
  int_P_int_M_buch_CurStates_1: (int_P, int32) memory,
  buch_CurOpStatus: Buch_OpStatusList, buch_CurOperation: buch_ListOper,
  status: int32) =
  (forall _buch_st:int.
    (((0 <= _buch_st) and
      ((_buch_st < 2) and
       (forall _buch_tr:int.
         (((0 <= _buch_tr) and (_buch_tr < 3)) ->
          ((integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
           shift(buch_CurTrans, _buch_tr))) = 0) or
           ((buch_Trans_Stop(_buch_tr) <> _buch_st) or
            ((not buch_Trans_Cond(_buch_tr, buch_CurOpStatus,
             buch_CurOperation, status)) or
             (integer_of_int32(select(int_P_int_M_buch_CurStates_old_3,
             shift(buch_CurStates_old, buch_Trans_Start(_buch_tr)))) = 0)))))))) ->
     (integer_of_int32(select(int_P_int_M_buch_CurStates_1,
     shift(buch_CurStates, _buch_st))) = 0)))

predicate _Buch_st_reach_2(int_P_int_M_buch_CurStates_old_3: (int_P,
  int32) memory, int_P_int_M_buch_CurTrans_2: (int_P, int32) memory,
  int_P_int_M_buch_CurStates_1: (int_P, int32) memory,
  buch_CurOpStatus: Buch_OpStatusList, buch_CurOperation: buch_ListOper,
  status: int32) =
  (forall _buch_st_0:int.
    (((0 <= _buch_st_0) and
      ((_buch_st_0 < 2) and
       (integer_of_int32(select(int_P_int_M_buch_CurStates_1,
       shift(buch_CurStates, _buch_st_0))) = 0))) ->
     (forall _buch_tr_0:int.
       (((0 <= _buch_tr_0) and (_buch_tr_0 < 3)) ->
        ((integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
         shift(buch_CurTrans, _buch_tr_0))) = 0) or
         ((buch_Trans_Stop(_buch_tr_0) <> _buch_st_0) or
          ((not buch_Trans_Cond(_buch_tr_0, buch_CurOpStatus,
           buch_CurOperation, status)) or
           (integer_of_int32(select(int_P_int_M_buch_CurStates_old_3,
           shift(buch_CurStates_old, buch_Trans_Start(_buch_tr_0)))) = 0))))))))

predicate _Buch_st_reach_3(int_P_int_M_buch_CurStates_old_3: (int_P,
  int32) memory, int_P_int_M_buch_CurTrans_2: (int_P, int32) memory,
  int_P_int_M_buch_CurStates_1: (int_P, int32) memory,
  buch_CurOpStatus: Buch_OpStatusList, buch_CurOperation: buch_ListOper,
  status: int32) =
  (forall _buch_st_1:int.
    (((0 <= _buch_st_1) and
      ((_buch_st_1 < 2) and
       (integer_of_int32(select(int_P_int_M_buch_CurStates_1,
       shift(buch_CurStates, _buch_st_1))) <> 0))) ->
     (exists _buch_tr_1:int.
       ((0 <= _buch_tr_1) and
        ((_buch_tr_1 < 3) and
         ((integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
          shift(buch_CurTrans, _buch_tr_1))) <> 0) and
          (buch_Trans_Cond(_buch_tr_1, buch_CurOpStatus, buch_CurOperation,
           status) and
           ((buch_Trans_Stop(_buch_tr_1) = _buch_st_1) and
            (integer_of_int32(select(int_P_int_M_buch_CurStates_old_3,
            shift(buch_CurStates_old, buch_Trans_Start(_buch_tr_1)))) <> 0)))))))))

predicate _Buch_tr_cross_1(int_P_int_M_buch_CurStates_old_3: (int_P,
  int32) memory, int_P_int_M_buch_CurTrans_2: (int_P, int32) memory,
  int_P_int_M_buch_CurStates_1: (int_P, int32) memory,
  buch_CurOpStatus: Buch_OpStatusList, buch_CurOperation: buch_ListOper,
  status: int32) =
  (forall _buch_tr_2:int.
    (((0 <= _buch_tr_2) and
      ((_buch_tr_2 < 3) and
       (integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
       shift(buch_CurTrans, _buch_tr_2))) <> 0))) ->
     (buch_Trans_Cond(_buch_tr_2, buch_CurOpStatus, buch_CurOperation,
      status) and
      ((integer_of_int32(select(int_P_int_M_buch_CurStates_old_3,
       shift(buch_CurStates_old, buch_Trans_Start(_buch_tr_2)))) <> 0) and
       (integer_of_int32(select(int_P_int_M_buch_CurStates_1,
       shift(buch_CurStates, buch_Trans_Stop(_buch_tr_2)))) <> 0)))))

predicate _Buch_tr_cross_2(int_P_int_M_buch_CurStates_old_3: (int_P,
  int32) memory, int_P_int_M_buch_CurTrans_2: (int_P, int32) memory,
  int_P_int_M_buch_CurStates_1: (int_P, int32) memory,
  buch_CurOpStatus: Buch_OpStatusList, buch_CurOperation: buch_ListOper,
  status: int32) =
  (forall _buch_tr_3:int.
    (((0 <= _buch_tr_3) and
      ((_buch_tr_3 < 3) and
       ((integer_of_int32(select(int_P_int_M_buch_CurStates_old_3,
        shift(buch_CurStates_old, buch_Trans_Start(_buch_tr_3)))) <> 0) and
        buch_Trans_Cond(_buch_tr_3, buch_CurOpStatus, buch_CurOperation,
        status)))) ->
     ((integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
      shift(buch_CurTrans, _buch_tr_3))) <> 0) and
      (integer_of_int32(select(int_P_int_M_buch_CurStates_1,
      shift(buch_CurStates, buch_Trans_Stop(_buch_tr_3)))) <> 0))))

predicate _Buch_tr_cross_3(int_P_int_M_buch_CurStates_old_3: (int_P,
  int32) memory, int_P_int_M_buch_CurTrans_2: (int_P, int32) memory,
  buch_CurOpStatus: Buch_OpStatusList, buch_CurOperation: buch_ListOper,
  status: int32) =
  (forall _buch_tr_4:int.
    (((0 <= _buch_tr_4) and
      ((_buch_tr_4 < 3) and
       ((integer_of_int32(select(int_P_int_M_buch_CurStates_old_3,
        shift(buch_CurStates_old, buch_Trans_Start(_buch_tr_4)))) <> 0) or
        (not buch_Trans_Cond(_buch_tr_4, buch_CurOpStatus, buch_CurOperation,
        status))))) ->
     (integer_of_int32(select(int_P_int_M_buch_CurTrans_2,
     shift(buch_CurTrans, _buch_tr_4))) <> 0)))

axiom bitvector_of_Buch_OpStatusList_of_Buch_OpStatusList_of_bitvector:
  (forall x:bitvector.
    (bitvector_of_Buch_OpStatusList(Buch_OpStatusList_of_bitvector(x)) = x))

logic bitvector_of_buch_ListOper : buch_ListOper -> bitvector

logic buch_ListOper_of_bitvector : bitvector -> buch_ListOper

axiom bitvector_of_buch_ListOper_of_buch_ListOper_of_bitvector:
  (forall x:bitvector.
    (bitvector_of_buch_ListOper(buch_ListOper_of_bitvector(x)) = x))

logic bitvector_of_char_P : char_P pointer -> bitvector

logic char_P_of_bitvector : bitvector -> char_P pointer

axiom bitvector_of_char_P_of_char_P_of_bitvector:
  (forall x:bitvector. (bitvector_of_char_P(char_P_of_bitvector(x)) = x))

logic bitvector_of_int32 : int32 -> bitvector

logic int32_of_bitvector : bitvector -> int32

axiom bitvector_of_int32_of_int32_of_bitvector:
  (forall x:bitvector. (bitvector_of_int32(int32_of_bitvector(x)) = x))

logic bitvector_of_int8 : int8 -> bitvector

logic int8_of_bitvector : bitvector -> int8

axiom bitvector_of_int8_of_int8_of_bitvector:
  (forall x:bitvector. (bitvector_of_int8(int8_of_bitvector(x)) = x))

logic bitvector_of_int_P : int_P pointer -> bitvector

logic int_P_of_bitvector : bitvector -> int_P pointer

axiom bitvector_of_int_P_of_int_P_of_bitvector:
  (forall x:bitvector. (bitvector_of_int_P(int_P_of_bitvector(x)) = x))

logic bitvector_of_void_P : void_P pointer -> bitvector

logic void_P_of_bitvector : bitvector -> void_P pointer

axiom bitvector_of_void_P_of_void_P_of_bitvector:
  (forall x:bitvector. (bitvector_of_void_P(void_P_of_bitvector(x)) = x))

logic buch_ListOper_of_integer : int -> buch_ListOper

axiom buch_ListOper_coerce:
  (forall x:int.
    (((0 <= x) and (x <= 2)) ->
     (integer_of_buch_ListOper(buch_ListOper_of_integer(x)) = x)))

predicate eq_buch_ListOper(x: buch_ListOper, y: buch_ListOper) =
  (integer_of_buch_ListOper(x) = integer_of_buch_ListOper(y))

axiom buch_ListOper_of_bitvector_of_bitvector_of_buch_ListOper:
  (forall x:buch_ListOper.
    eq_buch_ListOper(buch_ListOper_of_bitvector(bitvector_of_buch_ListOper(x)),
    x))

axiom buch_ListOper_range:
  (forall x:buch_ListOper.
    ((0 <= integer_of_buch_ListOper(x)) and
     (integer_of_buch_ListOper(x) <= 2)))

axiom buch_Trans_Start0: (buch_Trans_Start(0) = 0)

axiom buch_Trans_Start1: (buch_Trans_Start(1) = 0)

axiom buch_Trans_Start2: (buch_Trans_Start(2) = 1)

axiom buch_Trans_Stop0: (buch_Trans_Stop(0) = 0)

axiom buch_Trans_Stop1: (buch_Trans_Stop(1) = 1)

axiom buch_Trans_Stop2: (buch_Trans_Stop(2) = 1)

logic char_P_tag :  -> char_P tag_id

axiom char_P_int: (int_of_tag(char_P_tag) = 1)

axiom char_P_of_bitvector_of_bitvector_of_char_P:
  (forall x:char_P pointer.
    (char_P_of_bitvector(bitvector_of_char_P(x)) = x))

logic char_P_of_pointer_address : unit pointer -> char_P pointer

axiom char_P_of_pointer_address_of_pointer_addr:
  (forall p:char_P pointer.
    (p = char_P_of_pointer_address(pointer_address(p))))

axiom char_P_parenttag_bottom: parenttag(char_P_tag, bottom_tag)

axiom char_P_tags:
  (forall x:char_P pointer.
    (forall char_P_tag_table:char_P tag_table. instanceof(char_P_tag_table,
      x, char_P_tag)))

predicate eq_int32(x: int32, y: int32) =
  (integer_of_int32(x) = integer_of_int32(y))

logic integer_of_int8 : int8 -> int

predicate eq_int8(x: int8, y: int8) =
  (integer_of_int8(x) = integer_of_int8(y))

logic int32_of_integer : int -> int32

axiom int32_coerce:
  (forall x:int.
    ((((-2147483648) <= x) and (x <= 2147483647)) ->
     (integer_of_int32(int32_of_integer(x)) = x)))

axiom int32_of_bitvector_of_bitvector_of_int32:
  (forall x:int32. eq_int32(int32_of_bitvector(bitvector_of_int32(x)), x))

axiom int32_range:
  (forall x:int32.
    (((-2147483648) <= integer_of_int32(x)) and
     (integer_of_int32(x) <= 2147483647)))

logic int8_of_integer : int -> int8

axiom int8_coerce:
  (forall x:int.
    ((((-128) <= x) and (x <= 127)) ->
     (integer_of_int8(int8_of_integer(x)) = x)))

axiom int8_of_bitvector_of_bitvector_of_int8:
  (forall x:int8. eq_int8(int8_of_bitvector(bitvector_of_int8(x)), x))

axiom int8_range:
  (forall x:int8.
    (((-128) <= integer_of_int8(x)) and (integer_of_int8(x) <= 127)))

logic int_P_tag :  -> int_P tag_id

axiom int_P_int: (int_of_tag(int_P_tag) = 1)

axiom int_P_of_bitvector_of_bitvector_of_int_P:
  (forall x:int_P pointer. (int_P_of_bitvector(bitvector_of_int_P(x)) = x))

logic int_P_of_pointer_address : unit pointer -> int_P pointer

axiom int_P_of_pointer_address_of_pointer_addr:
  (forall p:int_P pointer.
    (p = int_P_of_pointer_address(pointer_address(p))))

axiom int_P_parenttag_bottom: parenttag(int_P_tag, bottom_tag)

axiom int_P_tags:
  (forall x:int_P pointer.
    (forall int_P_tag_table:int_P tag_table. instanceof(int_P_tag_table, x,
      int_P_tag)))

predicate inv(rr: int32) =
  ((0 <= integer_of_int32(rr)) and (integer_of_int32(rr) <= 5000))

predicate left_valid_struct_char_P(p: char_P pointer, a: int,
  char_P_alloc_table: char_P alloc_table) = (offset_min(char_P_alloc_table,
  p) <= a)

predicate left_valid_struct_int_P(p: int_P pointer, a: int,
  int_P_alloc_table: int_P alloc_table) = (offset_min(int_P_alloc_table,
  p) <= a)

predicate left_valid_struct_void_P(p: void_P pointer, a: int,
  void_P_alloc_table: void_P alloc_table) = (offset_min(void_P_alloc_table,
  p) <= a)

axiom pointer_addr_of_char_P_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(char_P_of_pointer_address(p))))

axiom pointer_addr_of_int_P_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(int_P_of_pointer_address(p))))

logic void_P_of_pointer_address : unit pointer -> void_P pointer

axiom pointer_addr_of_void_P_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(void_P_of_pointer_address(p))))

predicate right_valid_struct_char_P(p: char_P pointer, b: int,
  char_P_alloc_table: char_P alloc_table) = (offset_max(char_P_alloc_table,
  p) >= b)

predicate right_valid_struct_int_P(p: int_P pointer, b: int,
  int_P_alloc_table: int_P alloc_table) = (offset_max(int_P_alloc_table,
  p) >= b)

predicate right_valid_struct_void_P(p: void_P pointer, b: int,
  void_P_alloc_table: void_P alloc_table) = (offset_max(void_P_alloc_table,
  p) >= b)

predicate strict_valid_root_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) = a) and
   (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_root_int_P(p: int_P pointer, a: int, b: int,
  int_P_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_alloc_table, p) = a) and (offset_max(int_P_alloc_table,
   p) = b))

predicate strict_valid_root_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) = a) and
   (offset_max(void_P_alloc_table, p) = b))

predicate strict_valid_struct_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) = a) and
   (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_struct_int_P(p: int_P pointer, a: int, b: int,
  int_P_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_alloc_table, p) = a) and (offset_max(int_P_alloc_table,
   p) = b))

predicate strict_valid_struct_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) = a) and
   (offset_max(void_P_alloc_table, p) = b))

predicate valid_bitvector_struct_char_P(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_int_P(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_void_P(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_buch_AcceptStates(int_P_buch_AcceptStates_5_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_buch_AcceptStates_5_alloc_table,
   buch_AcceptStates) <= 0) and
   (offset_max(int_P_buch_AcceptStates_5_alloc_table,
   buch_AcceptStates) >= 1))

predicate valid_buch_CurStates(int_P_buch_CurStates_1_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_buch_CurStates_1_alloc_table, buch_CurStates) <= 0) and
   (offset_max(int_P_buch_CurStates_1_alloc_table, buch_CurStates) >= 1))

predicate valid_buch_CurStates_old(int_P_buch_CurStates_old_3_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_buch_CurStates_old_3_alloc_table,
   buch_CurStates_old) <= 0) and
   (offset_max(int_P_buch_CurStates_old_3_alloc_table,
   buch_CurStates_old) >= 1))

predicate valid_buch_CurTrans(int_P_buch_CurTrans_2_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_buch_CurTrans_2_alloc_table, buch_CurTrans) <= 0) and
   (offset_max(int_P_buch_CurTrans_2_alloc_table, buch_CurTrans) >= 2))

predicate valid_buch_CurTrans_tmp(int_P_buch_CurTrans_tmp_4_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_buch_CurTrans_tmp_4_alloc_table,
   buch_CurTrans_tmp) <= 0) and
   (offset_max(int_P_buch_CurTrans_tmp_4_alloc_table,
   buch_CurTrans_tmp) >= 2))

predicate valid_root_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) <= a) and
   (offset_max(char_P_alloc_table, p) >= b))

predicate valid_root_int_P(p: int_P pointer, a: int, b: int,
  int_P_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_alloc_table, p) <= a) and (offset_max(int_P_alloc_table,
   p) >= b))

predicate valid_root_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) <= a) and
   (offset_max(void_P_alloc_table, p) >= b))

predicate valid_struct_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) <= a) and
   (offset_max(char_P_alloc_table, p) >= b))

predicate valid_struct_int_P(p: int_P pointer, a: int, b: int,
  int_P_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_alloc_table, p) <= a) and (offset_max(int_P_alloc_table,
   p) >= b))

predicate valid_struct_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) <= a) and
   (offset_max(void_P_alloc_table, p) >= b))

logic void_P_tag :  -> void_P tag_id

axiom void_P_int: (int_of_tag(void_P_tag) = 1)

axiom void_P_of_bitvector_of_bitvector_of_void_P:
  (forall x:void_P pointer.
    (void_P_of_bitvector(bitvector_of_void_P(x)) = x))

axiom void_P_of_pointer_address_of_pointer_addr:
  (forall p:void_P pointer.
    (p = void_P_of_pointer_address(pointer_address(p))))

axiom void_P_parenttag_bottom: parenttag(void_P_tag, bottom_tag)

axiom void_P_tags:
  (forall x:void_P pointer.
    (forall void_P_tag_table:void_P tag_table. instanceof(void_P_tag_table,
      x, void_P_tag)))

