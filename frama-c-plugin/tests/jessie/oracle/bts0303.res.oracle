Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -IFRAMAC_SHARE/libc -add-symbolic-path PPCHOME:PPCHOME -jessie -jessie-gen-only bts0303.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -IFRAMAC_SHARE/libc -dD PPCHOME/tests/jessie/bts0303.c"
PPCHOME/tests/jessie/bts0303.c:28:[kernel] warning: Variable-sized local variable a
[jessie] Starting Jessie translation
PPCHOME/tests/jessie/bts0303.c:26:[kernel] warning: Neither code nor specification for function __builtin_alloca, generating default assigns from the prototype
[jessie] Producing Jessie files in subdir bts0303.jessie
[jessie] File bts0303.jessie/bts0303.jc written.
[jessie] File bts0303.jessie/bts0303.cloc written.
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type uint8 = 0..255

type uint32 = 0..4294967295

type int8 = -128..127

type int32 = -2147483648..2147483647

tag intP = {
  int32 intM: 32;
}

type intP = [intP]

tag unsigned_charP = {
  uint8 unsigned_charM: 8;
}

type unsigned_charP = [unsigned_charP]

tag charP = {
  int8 charM: 8;
}

type charP = [charP]

tag voidP = {
}

type voidP = [voidP]

charP[..] __builtin_alloca(uint32 unnamed)
behavior default:
  assigns \nothing;
  ensures (_C_1 : true);
;

unit Swap(intP[..] p, intP[..] q)
  requires (_C_12 : (((_C_14 : (\offset_min(p) <= 0)) &&
                       (_C_15 : (\offset_max(p) >= 0))) &&
                      ((_C_17 : (\offset_min(q) <= 0)) &&
                        (_C_18 : (\offset_max(q) >= 0)))));
behavior default:
  assigns p.intM,
  q.intM;
  ensures (_C_9 : ((_C_10 : (\at(p,Old).intM == \at(q.intM,Old))) &&
                    (_C_11 : (\at(q,Old).intM == \at(p.intM,Old)))));
{  
   (var int32 temp);
   
   {  (_C_3 : (temp = (_C_2 : p.intM)));
      (_C_6 : ((_C_5 : p.intM) = (_C_4 : q.intM)));
      (_C_8 : ((_C_7 : q.intM) = temp));
      
      (return ())
   }
}

unit Foo()
behavior default:
  ensures (_C_42 : true);
{  
   (var int32 n_1);
   
   (var intP[..] a);
   
   (var uint32 __lengthofa);
   
   (var int32 i);
   
   {  (_C_19 : (n_1 = 10));
      
      {  (_C_21 : (__lengthofa = (_C_20 : (n_1 :> uint32))));
         (_C_27 : (let __cil_tmp =
                  (_C_24 : __builtin_alloca((_C_23 : ((_C_22 : (4 *
                                                                 __lengthofa)) :> uint32))))
                  in (_C_26 : (a = (_C_25 : (__cil_tmp :> intP[..]))))))
      };
      (_C_28 : (i = 0));
      
      loop 
      while (true)
      {  
         {  (if (i < n_1) then () else 
            (goto while_0_break));
            (_C_31 : ((_C_30 : (_C_29 : (a + i)).intM) = 0));
            (_C_34 : (i = (_C_33 : ((_C_32 : (i + 1)) :> int32))))
         }
      };
      (while_0_break : ());
      (_C_35 : (i = 1));
      
      loop 
      behavior default:
        
        assigns (a + [0..(n_1 - 1)]).intM;
      while (true)
      {  
         {  (if (i < n_1) then () else 
            (goto while_1_break));
            (_C_38 : Swap((_C_36 : (a + i)), (_C_37 : (a + 0))));
            (_C_41 : (i = (_C_40 : ((_C_39 : (i + 1)) :> int32))))
         }
      };
      (while_1_break : ());
      
      (return ())
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs bts0303.jessie/bts0303.cloc bts0303.jessie/bts0303.jc
