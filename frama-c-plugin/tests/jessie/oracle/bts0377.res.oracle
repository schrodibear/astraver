Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -IFRAMAC_SHARE/libc -jessie -jessie-gen-only bts0377.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -IFRAMAC_SHARE/libc -dD bts0377.c"
[jessie] Starting Jessie translation
[jessie] Producing Jessie files in subdir bts0377.jessie
[jessie] File bts0377.jessie/bts0377.jc written.
[jessie] File bts0377.jessie/bts0377.cloc written.
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type int8 = -128..127

tag doubleP = {
  double doubleM: 64;
}

type doubleP = [doubleP]

tag charP = {
  int8 charM: 8;
}

type charP = [charP]

tag voidP = {
}

type voidP = [voidP]

unit f()
behavior default:
  ensures (C_205 : true);
{  
   (var doubleP[0..99] t);
   
   {  (C_2 : (t = (C_1 : (new doubleP[100]))));
      (C_4 : ((C_3 : (t + 0).doubleM) = (0. :> double)));
      (C_6 : ((C_5 : (t + 1).doubleM) = (1. :> double)));
      (C_8 : ((C_7 : (t + 2).doubleM) = (2. :> double)));
      (C_10 : ((C_9 : (t + 3).doubleM) = (3. :> double)));
      (C_12 : ((C_11 : (t + 4).doubleM) = (4. :> double)));
      (C_14 : ((C_13 : (t + 5).doubleM) = (5. :> double)));
      (C_16 : ((C_15 : (t + 6).doubleM) = (6. :> double)));
      (C_18 : ((C_17 : (t + 7).doubleM) = (7. :> double)));
      (C_20 : ((C_19 : (t + 8).doubleM) = (8. :> double)));
      (C_22 : ((C_21 : (t + 9).doubleM) = (9. :> double)));
      (C_24 : ((C_23 : (t + 10).doubleM) = (0. :> double)));
      (C_26 : ((C_25 : (t + 11).doubleM) = (1. :> double)));
      (C_28 : ((C_27 : (t + 12).doubleM) = (2. :> double)));
      (C_30 : ((C_29 : (t + 13).doubleM) = (3. :> double)));
      (C_32 : ((C_31 : (t + 14).doubleM) = (4. :> double)));
      (C_34 : ((C_33 : (t + 15).doubleM) = (5. :> double)));
      (C_36 : ((C_35 : (t + 16).doubleM) = (6. :> double)));
      (C_38 : ((C_37 : (t + 17).doubleM) = (7. :> double)));
      (C_40 : ((C_39 : (t + 18).doubleM) = (8. :> double)));
      (C_42 : ((C_41 : (t + 19).doubleM) = (9. :> double)));
      (C_44 : ((C_43 : (t + 20).doubleM) = (0. :> double)));
      (C_46 : ((C_45 : (t + 21).doubleM) = (1. :> double)));
      (C_48 : ((C_47 : (t + 22).doubleM) = (2. :> double)));
      (C_50 : ((C_49 : (t + 23).doubleM) = (3. :> double)));
      (C_52 : ((C_51 : (t + 24).doubleM) = (4. :> double)));
      (C_54 : ((C_53 : (t + 25).doubleM) = (5. :> double)));
      (C_56 : ((C_55 : (t + 26).doubleM) = (6. :> double)));
      (C_58 : ((C_57 : (t + 27).doubleM) = (7. :> double)));
      (C_60 : ((C_59 : (t + 28).doubleM) = (8. :> double)));
      (C_62 : ((C_61 : (t + 29).doubleM) = (9. :> double)));
      (C_64 : ((C_63 : (t + 30).doubleM) = (0. :> double)));
      (C_66 : ((C_65 : (t + 31).doubleM) = (1. :> double)));
      (C_68 : ((C_67 : (t + 32).doubleM) = (2. :> double)));
      (C_70 : ((C_69 : (t + 33).doubleM) = (3. :> double)));
      (C_72 : ((C_71 : (t + 34).doubleM) = (4. :> double)));
      (C_74 : ((C_73 : (t + 35).doubleM) = (5. :> double)));
      (C_76 : ((C_75 : (t + 36).doubleM) = (6. :> double)));
      (C_78 : ((C_77 : (t + 37).doubleM) = (7. :> double)));
      (C_80 : ((C_79 : (t + 38).doubleM) = (8. :> double)));
      (C_82 : ((C_81 : (t + 39).doubleM) = (9. :> double)));
      (C_84 : ((C_83 : (t + 40).doubleM) = (0. :> double)));
      (C_86 : ((C_85 : (t + 41).doubleM) = (1. :> double)));
      (C_88 : ((C_87 : (t + 42).doubleM) = (2. :> double)));
      (C_90 : ((C_89 : (t + 43).doubleM) = (3. :> double)));
      (C_92 : ((C_91 : (t + 44).doubleM) = (4. :> double)));
      (C_94 : ((C_93 : (t + 45).doubleM) = (5. :> double)));
      (C_96 : ((C_95 : (t + 46).doubleM) = (6. :> double)));
      (C_98 : ((C_97 : (t + 47).doubleM) = (7. :> double)));
      (C_100 : ((C_99 : (t + 48).doubleM) = (8. :> double)));
      (C_102 : ((C_101 : (t + 49).doubleM) = (9. :> double)));
      (C_104 : ((C_103 : (t + 50).doubleM) = (0. :> double)));
      (C_106 : ((C_105 : (t + 51).doubleM) = (1. :> double)));
      (C_108 : ((C_107 : (t + 52).doubleM) = (2. :> double)));
      (C_110 : ((C_109 : (t + 53).doubleM) = (3. :> double)));
      (C_112 : ((C_111 : (t + 54).doubleM) = (4. :> double)));
      (C_114 : ((C_113 : (t + 55).doubleM) = (5. :> double)));
      (C_116 : ((C_115 : (t + 56).doubleM) = (6. :> double)));
      (C_118 : ((C_117 : (t + 57).doubleM) = (7. :> double)));
      (C_120 : ((C_119 : (t + 58).doubleM) = (8. :> double)));
      (C_122 : ((C_121 : (t + 59).doubleM) = (9. :> double)));
      (C_124 : ((C_123 : (t + 60).doubleM) = (0. :> double)));
      (C_126 : ((C_125 : (t + 61).doubleM) = (1. :> double)));
      (C_128 : ((C_127 : (t + 62).doubleM) = (2. :> double)));
      (C_130 : ((C_129 : (t + 63).doubleM) = (3. :> double)));
      (C_132 : ((C_131 : (t + 64).doubleM) = (4. :> double)));
      (C_134 : ((C_133 : (t + 65).doubleM) = (5. :> double)));
      (C_136 : ((C_135 : (t + 66).doubleM) = (6. :> double)));
      (C_138 : ((C_137 : (t + 67).doubleM) = (7. :> double)));
      (C_140 : ((C_139 : (t + 68).doubleM) = (8. :> double)));
      (C_142 : ((C_141 : (t + 69).doubleM) = (9. :> double)));
      (C_144 : ((C_143 : (t + 70).doubleM) = (0. :> double)));
      (C_146 : ((C_145 : (t + 71).doubleM) = (1. :> double)));
      (C_148 : ((C_147 : (t + 72).doubleM) = (2. :> double)));
      (C_150 : ((C_149 : (t + 73).doubleM) = (3. :> double)));
      (C_152 : ((C_151 : (t + 74).doubleM) = (4. :> double)));
      (C_154 : ((C_153 : (t + 75).doubleM) = (5. :> double)));
      (C_156 : ((C_155 : (t + 76).doubleM) = (6. :> double)));
      (C_158 : ((C_157 : (t + 77).doubleM) = (7. :> double)));
      (C_160 : ((C_159 : (t + 78).doubleM) = (8. :> double)));
      (C_162 : ((C_161 : (t + 79).doubleM) = (9. :> double)));
      (C_164 : ((C_163 : (t + 80).doubleM) = (0. :> double)));
      (C_166 : ((C_165 : (t + 81).doubleM) = (1. :> double)));
      (C_168 : ((C_167 : (t + 82).doubleM) = (2. :> double)));
      (C_170 : ((C_169 : (t + 83).doubleM) = (3. :> double)));
      (C_172 : ((C_171 : (t + 84).doubleM) = (4. :> double)));
      (C_174 : ((C_173 : (t + 85).doubleM) = (5. :> double)));
      (C_176 : ((C_175 : (t + 86).doubleM) = (6. :> double)));
      (C_178 : ((C_177 : (t + 87).doubleM) = (7. :> double)));
      (C_180 : ((C_179 : (t + 88).doubleM) = (8. :> double)));
      (C_182 : ((C_181 : (t + 89).doubleM) = (9. :> double)));
      (C_184 : ((C_183 : (t + 90).doubleM) = (0. :> double)));
      (C_186 : ((C_185 : (t + 91).doubleM) = (1. :> double)));
      (C_188 : ((C_187 : (t + 92).doubleM) = (2. :> double)));
      (C_190 : ((C_189 : (t + 93).doubleM) = (3. :> double)));
      (C_192 : ((C_191 : (t + 94).doubleM) = (4. :> double)));
      (C_194 : ((C_193 : (t + 95).doubleM) = (5. :> double)));
      (C_196 : ((C_195 : (t + 96).doubleM) = (6. :> double)));
      (C_198 : ((C_197 : (t + 97).doubleM) = (7. :> double)));
      (C_200 : ((C_199 : (t + 98).doubleM) = (8. :> double)));
      (C_202 : ((C_201 : (t + 99).doubleM) = (9. :> double)));
      
      {  
         (assert for default: (C_203 : (((t + 0).doubleM :> real) == 0.)));
         ()
      };
      
      {  (C_204 : (free(t)));
         
         (return ())
      }
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs bts0377.jessie/bts0377.cloc bts0377.jessie/bts0377.jc
type charP

type doubleP

type int8

type padding

type voidP

logic charP_tag:  -> charP tag_id

axiom charP_int : (int_of_tag(charP_tag) = (1))

logic charP_of_pointer_address: unit pointer -> charP pointer

axiom charP_of_pointer_address_of_pointer_addr :
 (forall p:charP pointer. (p = charP_of_pointer_address(pointer_address(p))))

axiom charP_parenttag_bottom : parenttag(charP_tag, bottom_tag)

axiom charP_tags :
 (forall x:charP pointer.
  (forall charP_tag_table:charP tag_table.
   instanceof(charP_tag_table, x, charP_tag)))

logic doubleP_tag:  -> doubleP tag_id

axiom doubleP_int : (int_of_tag(doubleP_tag) = (1))

logic doubleP_of_pointer_address: unit pointer -> doubleP pointer

axiom doubleP_of_pointer_address_of_pointer_addr :
 (forall p:doubleP pointer.
  (p = doubleP_of_pointer_address(pointer_address(p))))

axiom doubleP_parenttag_bottom : parenttag(doubleP_tag, bottom_tag)

axiom doubleP_tags :
 (forall x:doubleP pointer.
  (forall doubleP_tag_table:doubleP tag_table.
   instanceof(doubleP_tag_table, x, doubleP_tag)))

logic integer_of_int8: int8 -> int

predicate eq_int8(x:int8, y:int8) =
 eq_int(integer_of_int8(x), integer_of_int8(y))

logic int8_of_integer: int -> int8

axiom int8_coerce :
 (forall x:int.
  ((le_int((-128), x) and le_int(x, (127))) ->
   eq_int(integer_of_int8(int8_of_integer(x)), x)))

axiom int8_extensionality :
 (forall x:int8.
  (forall y:int8[eq_int(integer_of_int8(x), integer_of_int8(y))].
   (eq_int(integer_of_int8(x), integer_of_int8(y)) -> (x = y))))

axiom int8_range :
 (forall x:int8.
  (le_int((-128), integer_of_int8(x)) and le_int(integer_of_int8(x), (127))))

predicate left_valid_struct_charP(p:charP pointer, a:int,
 charP_alloc_table:charP alloc_table) =
 (offset_min(charP_alloc_table, p) <= a)

predicate left_valid_struct_doubleP(p:doubleP pointer, a:int,
 doubleP_alloc_table:doubleP alloc_table) =
 (offset_min(doubleP_alloc_table, p) <= a)

predicate left_valid_struct_voidP(p:voidP pointer, a:int,
 voidP_alloc_table:voidP alloc_table) =
 (offset_min(voidP_alloc_table, p) <= a)

axiom pointer_addr_of_charP_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(charP_of_pointer_address(p))))

axiom pointer_addr_of_doubleP_of_pointer_address :
 (forall p:unit pointer.
  (p = pointer_address(doubleP_of_pointer_address(p))))

logic voidP_of_pointer_address: unit pointer -> voidP pointer

axiom pointer_addr_of_voidP_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(voidP_of_pointer_address(p))))

predicate right_valid_struct_charP(p:charP pointer, b:int,
 charP_alloc_table:charP alloc_table) =
 (offset_max(charP_alloc_table, p) >= b)

predicate right_valid_struct_doubleP(p:doubleP pointer, b:int,
 doubleP_alloc_table:doubleP alloc_table) =
 (offset_max(doubleP_alloc_table, p) >= b)

predicate right_valid_struct_voidP(p:voidP pointer, b:int,
 voidP_alloc_table:voidP alloc_table) =
 (offset_max(voidP_alloc_table, p) >= b)

predicate strict_valid_root_charP(p:charP pointer, a:int, b:int,
 charP_alloc_table:charP alloc_table) =
 ((offset_min(charP_alloc_table, p) = a)
 and (offset_max(charP_alloc_table, p) = b))

predicate strict_valid_root_doubleP(p:doubleP pointer, a:int, b:int,
 doubleP_alloc_table:doubleP alloc_table) =
 ((offset_min(doubleP_alloc_table, p) = a)
 and (offset_max(doubleP_alloc_table, p) = b))

predicate strict_valid_root_voidP(p:voidP pointer, a:int, b:int,
 voidP_alloc_table:voidP alloc_table) =
 ((offset_min(voidP_alloc_table, p) = a)
 and (offset_max(voidP_alloc_table, p) = b))

predicate strict_valid_struct_charP(p:charP pointer, a:int, b:int,
 charP_alloc_table:charP alloc_table) =
 ((offset_min(charP_alloc_table, p) = a)
 and (offset_max(charP_alloc_table, p) = b))

predicate strict_valid_struct_doubleP(p:doubleP pointer, a:int, b:int,
 doubleP_alloc_table:doubleP alloc_table) =
 ((offset_min(doubleP_alloc_table, p) = a)
 and (offset_max(doubleP_alloc_table, p) = b))

predicate strict_valid_struct_voidP(p:voidP pointer, a:int, b:int,
 voidP_alloc_table:voidP alloc_table) =
 ((offset_min(voidP_alloc_table, p) = a)
 and (offset_max(voidP_alloc_table, p) = b))

predicate valid_root_charP(p:charP pointer, a:int, b:int,
 charP_alloc_table:charP alloc_table) =
 ((offset_min(charP_alloc_table, p) <= a)
 and (offset_max(charP_alloc_table, p) >= b))

predicate valid_root_doubleP(p:doubleP pointer, a:int, b:int,
 doubleP_alloc_table:doubleP alloc_table) =
 ((offset_min(doubleP_alloc_table, p) <= a)
 and (offset_max(doubleP_alloc_table, p) >= b))

predicate valid_root_voidP(p:voidP pointer, a:int, b:int,
 voidP_alloc_table:voidP alloc_table) =
 ((offset_min(voidP_alloc_table, p) <= a)
 and (offset_max(voidP_alloc_table, p) >= b))

predicate valid_struct_charP(p:charP pointer, a:int, b:int,
 charP_alloc_table:charP alloc_table) =
 ((offset_min(charP_alloc_table, p) <= a)
 and (offset_max(charP_alloc_table, p) >= b))

predicate valid_struct_doubleP(p:doubleP pointer, a:int, b:int,
 doubleP_alloc_table:doubleP alloc_table) =
 ((offset_min(doubleP_alloc_table, p) <= a)
 and (offset_max(doubleP_alloc_table, p) >= b))

predicate valid_struct_voidP(p:voidP pointer, a:int, b:int,
 voidP_alloc_table:voidP alloc_table) =
 ((offset_min(voidP_alloc_table, p) <= a)
 and (offset_max(voidP_alloc_table, p) >= b))

logic voidP_tag:  -> voidP tag_id

axiom voidP_int : (int_of_tag(voidP_tag) = (1))

axiom voidP_of_pointer_address_of_pointer_addr :
 (forall p:voidP pointer. (p = voidP_of_pointer_address(pointer_address(p))))

axiom voidP_parenttag_bottom : parenttag(voidP_tag, bottom_tag)

axiom voidP_tags :
 (forall x:voidP pointer.
  (forall voidP_tag_table:voidP tag_table.
   instanceof(voidP_tag_table, x, voidP_tag)))

exception Loop_continue_exc of unit

exception Loop_exit_exc of unit

exception Return_label_exc of unit

parameter charP_alloc_table : charP alloc_table ref

parameter charP_tag_table : charP tag_table ref

parameter alloc_struct_charP :
 n:int ->
  charP_alloc_table:charP alloc_table ref ->
   charP_tag_table:charP tag_table ref ->
    { } charP pointer writes charP_alloc_table,charP_tag_table
    { (strict_valid_struct_charP(result, (0), sub_int(n, (1)),
       charP_alloc_table)
      and (alloc_extends(charP_alloc_table@, charP_alloc_table)
          and (alloc_fresh(charP_alloc_table@, result, n)
              and instanceof(charP_tag_table, result, charP_tag)))) }

parameter alloc_struct_charP_requires :
 n:int ->
  charP_alloc_table:charP alloc_table ref ->
   charP_tag_table:charP tag_table ref ->
    { ge_int(n, (0))} charP pointer writes charP_alloc_table,charP_tag_table
    { (strict_valid_struct_charP(result, (0), sub_int(n, (1)),
       charP_alloc_table)
      and (alloc_extends(charP_alloc_table@, charP_alloc_table)
          and (alloc_fresh(charP_alloc_table@, result, n)
              and instanceof(charP_tag_table, result, charP_tag)))) }

parameter doubleP_alloc_table : doubleP alloc_table ref

parameter doubleP_tag_table : doubleP tag_table ref

parameter alloc_struct_doubleP :
 n:int ->
  doubleP_alloc_table:doubleP alloc_table ref ->
   doubleP_tag_table:doubleP tag_table ref ->
    { } doubleP pointer writes doubleP_alloc_table,doubleP_tag_table
    { (strict_valid_struct_doubleP(result, (0), sub_int(n, (1)),
       doubleP_alloc_table)
      and (alloc_extends(doubleP_alloc_table@, doubleP_alloc_table)
          and (alloc_fresh(doubleP_alloc_table@, result, n)
              and instanceof(doubleP_tag_table, result, doubleP_tag)))) }

parameter alloc_struct_doubleP_requires :
 n:int ->
  doubleP_alloc_table:doubleP alloc_table ref ->
   doubleP_tag_table:doubleP tag_table ref ->
    { ge_int(n, (0))} doubleP pointer
    writes doubleP_alloc_table,doubleP_tag_table
    { (strict_valid_struct_doubleP(result, (0), sub_int(n, (1)),
       doubleP_alloc_table)
      and (alloc_extends(doubleP_alloc_table@, doubleP_alloc_table)
          and (alloc_fresh(doubleP_alloc_table@, result, n)
              and instanceof(doubleP_tag_table, result, doubleP_tag)))) }

parameter voidP_alloc_table : voidP alloc_table ref

parameter voidP_tag_table : voidP tag_table ref

parameter alloc_struct_voidP :
 n:int ->
  voidP_alloc_table:voidP alloc_table ref ->
   voidP_tag_table:voidP tag_table ref ->
    { } voidP pointer writes voidP_alloc_table,voidP_tag_table
    { (strict_valid_struct_voidP(result, (0), sub_int(n, (1)),
       voidP_alloc_table)
      and (alloc_extends(voidP_alloc_table@, voidP_alloc_table)
          and (alloc_fresh(voidP_alloc_table@, result, n)
              and instanceof(voidP_tag_table, result, voidP_tag)))) }

parameter alloc_struct_voidP_requires :
 n:int ->
  voidP_alloc_table:voidP alloc_table ref ->
   voidP_tag_table:voidP tag_table ref ->
    { ge_int(n, (0))} voidP pointer writes voidP_alloc_table,voidP_tag_table
    { (strict_valid_struct_voidP(result, (0), sub_int(n, (1)),
       voidP_alloc_table)
      and (alloc_extends(voidP_alloc_table@, voidP_alloc_table)
          and (alloc_fresh(voidP_alloc_table@, result, n)
              and instanceof(voidP_tag_table, result, voidP_tag)))) }

parameter any_int8 : unit -> { } int8 { true }

parameter f : tt:unit -> { } unit { true }

parameter f_requires : tt:unit -> { } unit { true }

parameter int8_of_integer_ :
 x:int ->
  { (le_int((-128), x) and le_int(x, (127)))} int8
  { eq_int(integer_of_int8(result), x) }

parameter safe_int8_of_integer_ :
 x:int -> { } int8 { eq_int(integer_of_int8(result), x) }

let f_ensures_default =
 fun (tt : unit) ->
  { (JC_<somenum>: true) }
  (init:
  try
   begin
     (let doubleP_doubleM_t_1 = ref (any_memory void) in
     (let doubleP_t_1_tag_table = ref (any_tag_table void) in
     (let doubleP_t_1_alloc_table = ref (any_alloc_table void) in
     (let t = ref (any_pointer void) in
     (C_2:
     (C_4:
     (C_6:
     (C_8:
     (C_10:
     (C_12:
     (C_14:
     (C_16:
     (C_18:
     (C_20:
     (C_22:
     (C_24:
     (C_26:
     (C_28:
     (C_30:
     (C_32:
     (C_34:
     (C_36:
     (C_38:
     (C_40:
     (C_42:
     (C_44:
     (C_46:
     (C_48:
     (C_50:
     (C_52:
     (C_54:
     (C_56:
     (C_58:
     (C_60:
     (C_62:
     (C_64:
     (C_66:
     (C_68:
     (C_70:
     (C_72:
     (C_74:
     (C_76:
     (C_78:
     (C_80:
     (C_82:
     (C_84:
     (C_86:
     (C_88:
     (C_90:
     (C_92:
     (C_94:
     (C_96:
     (C_98:
     (C_100:
     (C_102:
     (C_104:
     (C_106:
     (C_108:
     (C_110:
     (C_112:
     (C_114:
     (C_116:
     (C_118:
     (C_120:
     (C_122:
     (C_124:
     (C_126:
     (C_128:
     (C_130:
     (C_132:
     (C_134:
     (C_136:
     (C_138:
     (C_140:
     (C_142:
     (C_144:
     (C_146:
     (C_148:
     (C_150:
     (C_152:
     (C_154:
     (C_156:
     (C_158:
     (C_160:
     (C_162:
     (C_164:
     (C_166:
     (C_168:
     (C_170:
     (C_172:
     (C_174:
     (C_176:
     (C_178:
     (C_180:
     (C_182:
     (C_184:
     (C_186:
     (C_188:
     (C_190:
     (C_192:
     (C_194:
     (C_196:
     (C_198:
     (C_200:
     (C_202:
     (C_204:
     begin
       (let jessie_<somenum> =
       (t := (C_1:
             (JC_<somenum>:
             (((alloc_struct_doubleP (100)) doubleP_t_1_alloc_table) doubleP_t_1_tag_table)))) in
       void);
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (1) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (2) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (3) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (4) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (5) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (6) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (7) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (8) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (9) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (10) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (11) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (12) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (13) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (14) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (15) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (16) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (17) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (18) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (19) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (20) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (21) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (22) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (23) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (24) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (25) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (26) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (27) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (28) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (29) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (30) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (31) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (32) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (33) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (34) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (35) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (36) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (37) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (38) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (39) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (40) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (41) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (42) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (43) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (44) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (45) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (46) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (47) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (48) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (49) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (50) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (51) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (52) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (53) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (54) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (55) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (56) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (57) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (58) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (59) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (60) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (61) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (62) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (63) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (64) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (65) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (66) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (67) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (68) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (69) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (70) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (71) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (72) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (73) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (74) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (75) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (76) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (77) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (78) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (79) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (80) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (81) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (82) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (83) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (84) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (85) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (86) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (87) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (88) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (89) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (90) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (91) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (92) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (93) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (94) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (95) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (96) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (97) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (98) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (99) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      [ { } unit reads doubleP_doubleM_t_1,doubleP_t_1_alloc_table
        writes doubleP_doubleM_t_1
        { (not_assigns(doubleP_t_1_alloc_table, doubleP_doubleM_t_1@,
           doubleP_doubleM_t_1,
           pset_range(pset_singleton(jessie_<somenum>), (0), (99)))
          and ((select(doubleP_doubleM_t_1, shift(jessie_<somenum>, (0))) = jessie_<somenum>)
              and ((select(doubleP_doubleM_t_1, shift(jessie_<somenum>, (1))) = jessie_<somenum>)
                  and ((select(doubleP_doubleM_t_1, shift(jessie_<somenum>, (2))) = jessie_<somenum>)
                      and ((select(doubleP_doubleM_t_1,
                            shift(jessie_<somenum>, (3))) = jessie_<somenum>)
                          and ((select(doubleP_doubleM_t_1,
                                shift(jessie_<somenum>, (4))) = jessie_<somenum>)
                              and ((select(doubleP_doubleM_t_1,
                                    shift(jessie_<somenum>, (5))) = jessie_<somenum>)
                                  and ((select(doubleP_doubleM_t_1,
                                        shift(jessie_<somenum>, (6))) = jessie_<somenum>)
                                      and ((select(doubleP_doubleM_t_1,
                                            shift(jessie_<somenum>, (7))) = jessie_<somenum>)
                                          and ((select(doubleP_doubleM_t_1,
                                                shift(jessie_<somenum>, (8))) = jessie_<somenum>)
                                              and ((select(doubleP_doubleM_t_1,
                                                    shift(jessie_<somenum>, (9))) = jessie_<somenum>)
                                                  and ((select(doubleP_doubleM_t_1,
                                                        shift(jessie_<somenum>,
                                                        (10))) = jessie_<somenum>)
                                                      and ((select(doubleP_doubleM_t_1,
                                                            shift(jessie_<somenum>,
                                                            (11))) = jessie_<somenum>)
                                                          and ((select(doubleP_doubleM_t_1,
                                                                shift(jessie_<somenum>,
                                                                (12))) = jessie_<somenum>)
                                                              and ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (13))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (14))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (15))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (16))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (17))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (18))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (19))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (20))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (21))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (22))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (23))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (24))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (25))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (26))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (27))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (28))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (29))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (30))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (31))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (32))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (33))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (34))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (35))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (36))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (37))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (38))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (39))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (40))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (41))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (42))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (43))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (44))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (45))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (46))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (47))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (48))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (49))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (50))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (51))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (52))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (53))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (54))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (55))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (56))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (57))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (58))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (59))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (60))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (61))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (62))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (63))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (64))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (65))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (66))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (67))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (68))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (69))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (70))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (71))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (72))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (73))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (74))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (75))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (76))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (77))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (78))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (79))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (80))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (81))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (82))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (83))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (84))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (85))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (86))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (87))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (88))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (89))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (90))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (91))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (92))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (93))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (94))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (95))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (96))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (97))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (98))) = jessie_<somenum>)
                                                                  and 
                                                                  (select(doubleP_doubleM_t_1,
                                                                   shift(jessie_<somenum>,
                                                                   (99))) = jessie_<somenum>))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) } ]))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
      (assert
      { (JC_<somenum>:
        (double_value(select(doubleP_doubleM_t_1, shift(t, (0)))) = 0.)) };
      void); void; ((safe_free_parameter doubleP_t_1_alloc_table) !t);
      (raise Return) end))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
    (raise Return) end with Return -> void end) { (JC_<somenum>: true) }

let f_safety =
 fun (tt : unit) ->
  { (JC_<somenum>: true) }
  (init:
  try
   begin
     (let doubleP_doubleM_t_1 = ref (any_memory void) in
     (let doubleP_t_1_tag_table = ref (any_tag_table void) in
     (let doubleP_t_1_alloc_table = ref (any_alloc_table void) in
     (let t = ref (any_pointer void) in
     (C_2:
     (C_4:
     (C_6:
     (C_8:
     (C_10:
     (C_12:
     (C_14:
     (C_16:
     (C_18:
     (C_20:
     (C_22:
     (C_24:
     (C_26:
     (C_28:
     (C_30:
     (C_32:
     (C_34:
     (C_36:
     (C_38:
     (C_40:
     (C_42:
     (C_44:
     (C_46:
     (C_48:
     (C_50:
     (C_52:
     (C_54:
     (C_56:
     (C_58:
     (C_60:
     (C_62:
     (C_64:
     (C_66:
     (C_68:
     (C_70:
     (C_72:
     (C_74:
     (C_76:
     (C_78:
     (C_80:
     (C_82:
     (C_84:
     (C_86:
     (C_88:
     (C_90:
     (C_92:
     (C_94:
     (C_96:
     (C_98:
     (C_100:
     (C_102:
     (C_104:
     (C_106:
     (C_108:
     (C_110:
     (C_112:
     (C_114:
     (C_116:
     (C_118:
     (C_120:
     (C_122:
     (C_124:
     (C_126:
     (C_128:
     (C_130:
     (C_132:
     (C_134:
     (C_136:
     (C_138:
     (C_140:
     (C_142:
     (C_144:
     (C_146:
     (C_148:
     (C_150:
     (C_152:
     (C_154:
     (C_156:
     (C_158:
     (C_160:
     (C_162:
     (C_164:
     (C_166:
     (C_168:
     (C_170:
     (C_172:
     (C_174:
     (C_176:
     (C_178:
     (C_180:
     (C_182:
     (C_184:
     (C_186:
     (C_188:
     (C_190:
     (C_192:
     (C_194:
     (C_196:
     (C_198:
     (C_200:
     (C_202:
     (C_204:
     begin
       (let jessie_<somenum> =
       (t := (let jessie_<somenum> =
             (C_1:
             (JC_<somenum>:
             (((alloc_struct_doubleP_requires (100)) doubleP_t_1_alloc_table) doubleP_t_1_tag_table))) in
             (JC_<somenum>:
             (assert
             { ge_int(offset_max(doubleP_t_1_alloc_table, jessie_<somenum>), (99)) };
             jessie_<somenum>)))) in void);
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (1) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (2) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (3) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (4) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (5) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (6) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (7) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (8) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (9) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (10) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (11) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (12) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (13) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (14) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (15) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (16) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (17) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (18) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (19) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (20) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (21) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (22) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (23) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (24) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (25) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (26) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (27) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (28) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (29) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (30) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (31) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (32) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (33) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (34) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (35) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (36) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (37) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (38) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (39) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (40) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (41) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (42) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (43) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (44) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (45) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (46) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (47) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (48) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (49) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (50) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (51) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (52) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (53) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (54) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (55) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (56) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (57) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (58) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (59) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (60) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (61) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (62) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (63) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (64) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (65) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (66) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (67) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (68) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (69) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (70) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (71) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (72) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (73) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (74) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (75) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (76) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (77) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (78) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (79) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (80) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (81) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (82) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (83) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (84) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (85) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (86) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (87) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (88) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (89) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 0.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (90) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 1.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (91) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 2.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (92) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 3.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (93) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 4.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (94) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 5.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (95) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 6.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (96) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 7.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (97) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 8.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (98) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      (let jessie_<somenum> = (double_of_real_exact 9.) in
      (let jessie_<somenum> = !t in
      (let jessie_<somenum> = (99) in
      (let jessie_<somenum> = ((shift jessie_<somenum>) jessie_<somenum>) in
      [ { } unit reads doubleP_doubleM_t_1,doubleP_t_1_alloc_table
        writes doubleP_doubleM_t_1
        { (not_assigns(doubleP_t_1_alloc_table, doubleP_doubleM_t_1@,
           doubleP_doubleM_t_1,
           pset_range(pset_singleton(jessie_<somenum>), (0), (99)))
          and ((select(doubleP_doubleM_t_1, shift(jessie_<somenum>, (0))) = jessie_<somenum>)
              and ((select(doubleP_doubleM_t_1, shift(jessie_<somenum>, (1))) = jessie_<somenum>)
                  and ((select(doubleP_doubleM_t_1, shift(jessie_<somenum>, (2))) = jessie_<somenum>)
                      and ((select(doubleP_doubleM_t_1, shift(jessie_<somenum>, (3))) = jessie_<somenum>)
                          and ((select(doubleP_doubleM_t_1,
                                shift(jessie_<somenum>, (4))) = jessie_<somenum>)
                              and ((select(doubleP_doubleM_t_1,
                                    shift(jessie_<somenum>, (5))) = jessie_<somenum>)
                                  and ((select(doubleP_doubleM_t_1,
                                        shift(jessie_<somenum>, (6))) = jessie_<somenum>)
                                      and ((select(doubleP_doubleM_t_1,
                                            shift(jessie_<somenum>, (7))) = jessie_<somenum>)
                                          and ((select(doubleP_doubleM_t_1,
                                                shift(jessie_<somenum>, (8))) = jessie_<somenum>)
                                              and ((select(doubleP_doubleM_t_1,
                                                    shift(jessie_<somenum>, (9))) = jessie_<somenum>)
                                                  and ((select(doubleP_doubleM_t_1,
                                                        shift(jessie_<somenum>, (10))) = jessie_<somenum>)
                                                      and ((select(doubleP_doubleM_t_1,
                                                            shift(jessie_<somenum>,
                                                            (11))) = jessie_<somenum>)
                                                          and ((select(doubleP_doubleM_t_1,
                                                                shift(jessie_<somenum>,
                                                                (12))) = jessie_<somenum>)
                                                              and ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (13))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (14))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (15))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (16))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (17))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (18))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (19))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (20))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (21))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (22))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (23))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (24))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (25))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (26))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (27))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (28))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (29))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (30))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (31))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (32))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (33))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (34))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (35))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (36))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (37))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (38))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (39))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (40))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (41))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (42))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (43))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (44))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (45))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (46))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (47))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (48))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (49))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (50))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (51))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (52))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (53))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (54))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (55))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (56))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (57))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (58))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (59))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (60))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (61))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (62))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (63))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (64))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (65))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (66))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (67))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (68))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (69))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (70))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (71))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (72))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (73))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (74))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (75))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (76))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (77))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (78))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (79))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (80))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (81))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (82))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (83))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (84))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (85))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (86))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (87))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (88))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (89))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (90))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (91))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (92))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (93))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (94))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (95))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (96))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (97))) = jessie_<somenum>)
                                                                  and 
                                                                  ((select(doubleP_doubleM_t_1,
                                                                    shift(jessie_<somenum>,
                                                                    (98))) = jessie_<somenum>)
                                                                  and 
                                                                  (select(doubleP_doubleM_t_1,
                                                                   shift(jessie_<somenum>,
                                                                   (99))) = jessie_<somenum>))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) } ]))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
      [ { } unit reads doubleP_doubleM_t_1,t
        { (JC_<somenum>:
          (double_value(select(doubleP_doubleM_t_1, shift(t, (0)))) = 0.)) } ];
      void; ((free_parameter doubleP_t_1_alloc_table) !t); (raise Return) end))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
    (raise Return) end with Return -> void end) { true }


WHYLIB=WHYHOME/lib WHYEXEC=WHYHOME/bin/why.opt GWHYEXEC=WHYHOME/bin/gwhy.opt make --quiet -C bts0377.jessie --quiet -f bts0377.makefile project
why --project [...] why/bts0377.why
<project name="bts0377" context="why/bts0377_ctx.why">
  <function name="Function f">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="default behavior">
    <goal why_file="why/bts0377_po1.why">
      <location file = "PPCHOME/tests/jessie/bts0377.c" line = "21" begin = "12" end = "20"/>
      <explain kind = "Assert"/>
    </goal>
    </behavior>
    <behavior name="Safety">
    <goal why_file="why/bts0377_po2.why">
      <location file = "PPCHOME/tests/jessie/bts0377.c" line = "9" begin = "8" end = "9"/>
      <explain kind = "Pre"
text = "AllocSize"/>
    </goal>
    <goal why_file="why/bts0377_po3.why">
      <location file = "why/bts0377.why" line = "1295" begin = "15" end = "74"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/bts0377_po4.why">
      <location file = "why/bts0377.why" line = "2074" begin = "13" end = "56"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    </behavior>
  </function>
</project>
logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

logic bool_and : bool, bool -> bool

logic bool_or : bool, bool -> bool

logic bool_xor : bool, bool -> bool

logic bool_not : bool -> bool

axiom bool_and_def:
  (forall a:bool.
    (forall b:bool.
      ((bool_and(a, b) = true) <-> ((a = true) and (b = true)))))

axiom bool_or_def:
  (forall a:bool.
    (forall b:bool. ((bool_or(a, b) = true) <-> ((a = true) or (b = true)))))

axiom bool_xor_def:
  (forall a:bool. (forall b:bool. ((bool_xor(a, b) = true) <-> (a <> b))))

axiom bool_not_def: (forall a:bool. ((bool_not(a) = true) <-> (a = false)))

logic ite : bool, 'a1, 'a1 -> 'a1

axiom ite_true: (forall x:'a1. (forall y:'a1. (ite(true, x, y) = x)))

axiom ite_false: (forall x:'a1. (forall y:'a1. (ite(false, x, y) = y)))

logic lt_int_bool : int, int -> bool

logic le_int_bool : int, int -> bool

logic gt_int_bool : int, int -> bool

logic ge_int_bool : int, int -> bool

logic eq_int_bool : int, int -> bool

logic neq_int_bool : int, int -> bool

axiom lt_int_bool_axiom:
  (forall x:int. (forall y:int. ((lt_int_bool(x, y) = true) <-> (x < y))))

axiom le_int_bool_axiom:
  (forall x:int. (forall y:int. ((le_int_bool(x, y) = true) <-> (x <= y))))

axiom gt_int_bool_axiom:
  (forall x:int. (forall y:int. ((gt_int_bool(x, y) = true) <-> (x > y))))

axiom ge_int_bool_axiom:
  (forall x:int. (forall y:int. ((ge_int_bool(x, y) = true) <-> (x >= y))))

axiom eq_int_bool_axiom:
  (forall x:int. (forall y:int. ((eq_int_bool(x, y) = true) <-> (x = y))))

axiom neq_int_bool_axiom:
  (forall x:int. (forall y:int. ((neq_int_bool(x, y) = true) <-> (x <> y))))

logic abs_int : int -> int

axiom abs_int_pos: (forall x:int. ((x >= 0) -> (abs_int(x) = x)))

axiom abs_int_neg: (forall x:int. ((x <= 0) -> (abs_int(x) = (-x))))

logic int_max : int, int -> int

logic int_min : int, int -> int

axiom int_max_is_ge:
  (forall x:int.
    (forall y:int. ((int_max(x, y) >= x) and (int_max(x, y) >= y))))

axiom int_max_is_some:
  (forall x:int.
    (forall y:int. ((int_max(x, y) = x) or (int_max(x, y) = y))))

axiom int_min_is_le:
  (forall x:int.
    (forall y:int. ((int_min(x, y) <= x) and (int_min(x, y) <= y))))

axiom int_min_is_some:
  (forall x:int.
    (forall y:int. ((int_min(x, y) = x) or (int_min(x, y) = y))))

logic lt_real : real, real -> prop

logic le_real : real, real -> prop

logic gt_real : real, real -> prop

logic ge_real : real, real -> prop

logic eq_real : real, real -> prop

logic neq_real : real, real -> prop

logic add_real : real, real -> real

logic sub_real : real, real -> real

logic mul_real : real, real -> real

logic div_real : real, real -> real

logic neg_real : real -> real

logic real_of_int : int -> real

axiom real_of_int_zero: (real_of_int(0) = 0.0)

axiom real_of_int_one: (real_of_int(1) = 1.0)

axiom real_of_int_add:
  (forall x:int.
    (forall y:int.
      (real_of_int((x + y)) = (real_of_int(x) + real_of_int(y)))))

axiom real_of_int_sub:
  (forall x:int.
    (forall y:int.
      (real_of_int((x - y)) = (real_of_int(x) - real_of_int(y)))))

logic truncate_real_to_int : real -> int

axiom truncate_down_pos:
  (forall x:real.
    ((x >= 0.0) ->
     ((real_of_int(truncate_real_to_int(x)) <= x) and
      (x < real_of_int((truncate_real_to_int(x) + 1))))))

axiom truncate_up_neg:
  (forall x:real.
    ((x <= 0.0) ->
     ((real_of_int((truncate_real_to_int(x) - 1)) < x) and
      (x <= real_of_int(truncate_real_to_int(x))))))

logic floor_real_to_int : real -> int

logic ceil_real_to_int : real -> int

logic lt_real_bool : real, real -> bool

logic le_real_bool : real, real -> bool

logic gt_real_bool : real, real -> bool

logic ge_real_bool : real, real -> bool

logic eq_real_bool : real, real -> bool

logic neq_real_bool : real, real -> bool

axiom lt_real_bool_axiom:
  (forall x:real. (forall y:real. ((lt_real_bool(x, y) = true) <-> (x < y))))

axiom le_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((le_real_bool(x, y) = true) <-> (x <= y))))

axiom gt_real_bool_axiom:
  (forall x:real. (forall y:real. ((gt_real_bool(x, y) = true) <-> (x > y))))

axiom ge_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((ge_real_bool(x, y) = true) <-> (x >= y))))

axiom eq_real_bool_axiom:
  (forall x:real. (forall y:real. ((eq_real_bool(x, y) = true) <-> (x = y))))

axiom neq_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((neq_real_bool(x, y) = true) <-> (x <> y))))

logic real_max : real, real -> real

logic real_min : real, real -> real

axiom real_max_is_ge:
  (forall x:real.
    (forall y:real. ((real_max(x, y) >= x) and (real_max(x, y) >= y))))

axiom real_max_is_some:
  (forall x:real.
    (forall y:real. ((real_max(x, y) = x) or (real_max(x, y) = y))))

axiom real_min_is_le:
  (forall x:real.
    (forall y:real. ((real_min(x, y) <= x) and (real_min(x, y) <= y))))

axiom real_min_is_some:
  (forall x:real.
    (forall y:real. ((real_min(x, y) = x) or (real_min(x, y) = y))))

function sqr_real(x: real) : real = (x * x)

logic sqrt_real : real -> real

axiom sqrt_pos: (forall x:real. ((x >= 0.0) -> (sqrt_real(x) >= 0.0)))

axiom sqrt_sqr: (forall x:real. ((x >= 0.0) -> (sqr_real(sqrt_real(x)) = x)))

axiom sqr_sqrt: (forall x:real. ((x >= 0.0) -> (sqrt_real((x * x)) = x)))

logic pow_real : real, real -> real

logic abs_real : real -> real

axiom abs_real_pos:
  (forall x:real [abs_real(x)]. ((x >= 0.0) -> (abs_real(x) = x)))

axiom abs_real_neg:
  (forall x:real [abs_real(x)]. ((x <= 0.0) -> (abs_real(x) = (-x))))

logic exp : real -> real

logic log : real -> real

logic log10 : real -> real

axiom log_exp: (forall x:real. (log(exp(x)) = x))

axiom exp_log: (forall x:real. ((x > 0.0) -> (exp(log(x)) = x)))

logic cos : real -> real

logic sin : real -> real

logic tan : real -> real

logic pi : real

logic cosh : real -> real

logic sinh : real -> real

logic tanh : real -> real

logic acos : real -> real

logic asin : real -> real

logic atan : real -> real

logic atan2 : real, real -> real

logic hypot : real, real -> real

axiom prod_pos:
  (forall x:real.
    (forall y:real.
      ((((x > 0.0) and (y > 0.0)) -> ((x * y) > 0.0)) and
       (((x < 0.0) and (y < 0.0)) -> ((x * y) > 0.0)))))

axiom abs_minus: (forall x:real. (abs_real((-x)) = abs_real(x)))

logic computer_div : int, int -> int

logic computer_mod : int, int -> int

logic math_div : int, int -> int

logic math_mod : int, int -> int

axiom math_div_mod:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> (x = ((y * math_div(x, y)) + math_mod(x, y))))))

axiom math_mod_bound:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> ((0 <= math_mod(x, y)) and (math_mod(x, y) < abs_int(y))))))

axiom computer_div_mod:
  (forall x:int.
    (forall y:int [computer_div(x, y), computer_mod(x, y)].
      ((y <> 0) -> (x = ((y * computer_div(x, y)) + computer_mod(x, y))))))

axiom computer_div_bound:
  (forall x:int.
    (forall y:int.
      (((x >= 0) and (y > 0)) ->
       ((0 <= computer_div(x, y)) and (computer_div(x, y) <= x)))))

axiom computer_mod_bound:
  (forall x:int.
    (forall y:int. ((y <> 0) -> (abs_int(computer_mod(x, y)) < abs_int(y)))))

axiom computer_mod_sign_pos:
  (forall x:int.
    (forall y:int. (((x >= 0) and (y <> 0)) -> (computer_mod(x, y) >= 0))))

axiom computer_mod_sign_neg:
  (forall x:int.
    (forall y:int. (((x <= 0) and (y <> 0)) -> (computer_mod(x, y) <= 0))))

axiom computer_rounds_toward_zero:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> (abs_int((computer_div(x, y) * y)) <= abs_int(x)))))

type 't alloc_table

type 't pointer

type 't block

logic base_block : 'a1 pointer -> 'a1 block

logic offset_max : 'a1 alloc_table, 'a1 pointer -> int

logic offset_min : 'a1 alloc_table, 'a1 pointer -> int

predicate valid(a: 'a1 alloc_table, p: 'a1 pointer) =
  ((offset_min(a, p) <= 0) and (offset_max(a, p) >= 0))

predicate same_block(p: 'a1 pointer, q: 'a1 pointer) =
  (base_block(p) = base_block(q))

logic sub_pointer : 'a1 pointer, 'a1 pointer -> int

logic shift : 'a1 pointer, int -> 'a1 pointer

logic null : 'a1 pointer

logic pointer_address : 'a1 pointer -> unit pointer

logic absolute_address : int -> unit pointer

logic address : 'a1 pointer -> int

axiom address_injective:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. ((p = q) <-> (address(p) = address(q)))))

axiom address_null: (address(null) = 0)

axiom address_shift_lt:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) < address(shift(p, j))) <-> (i < j)))))

axiom address_shift_le:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) <= address(shift(p, j))) <-> (i <= j)))))

axiom shift_zero: (forall p:'a1 pointer [shift(p, 0)]. (shift(p, 0) = p))

axiom shift_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(shift(p, i), j)]. (shift(shift(p, i),
        j) = shift(p, (i + j))))))

axiom offset_max_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_max(a, shift(p, i)) = (offset_max(a, p) - i)))))

axiom offset_min_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_min(a, shift(p, i)) = (offset_min(a, p) - i)))))

axiom neq_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(p, i), shift(p, j)].
        ((i <> j) -> (shift(p, i) <> shift(p, j))))))

axiom null_not_valid: (forall a:'a1 alloc_table. (not valid(a, null)))

axiom null_pointer:
  (forall a:'a1 alloc_table.
    ((offset_min(a, null) >= 0) and (offset_max(a, null) <= (-2))))

logic eq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

logic neq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

axiom eq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer. ((eq_pointer_bool(p1, p2) = true) <-> (p1 = p2))))

axiom neq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer.
      ((neq_pointer_bool(p1, p2) = true) <-> (p1 <> p2))))

axiom same_block_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(p, shift(q, i))].
        (same_block(p, q) -> same_block(p, shift(q, i))))))

axiom same_block_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(shift(q, i), p)].
        (same_block(q, p) -> same_block(shift(q, i), p)))))

axiom sub_pointer_shift:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> (p = shift(q, sub_pointer(p, q))))))

axiom sub_pointer_self:
  (forall p:'a1 pointer [sub_pointer(p, p)]. (sub_pointer(p, p) = 0))

axiom sub_pointer_zero:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> ((sub_pointer(p, q) = 0) -> (p = q)))))

axiom sub_pointer_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(shift(p, i), q)]. (sub_pointer(shift(p, i),
        q) = (sub_pointer(p, q) + i)))))

axiom sub_pointer_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(p, shift(q, i))]. (sub_pointer(p, shift(q,
        i)) = (sub_pointer(p, q) - i)))))

type ('t, 'v) memory

logic select : ('a2, 'a1) memory, 'a2 pointer -> 'a1

logic store : ('a1, 'a2) memory, 'a1 pointer, 'a2 -> ('a1, 'a2) memory

axiom select_store_eq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 = p2) -> (select(store(m, p1, a), p2) = a))))))

axiom select_store_neq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 <> p2) -> (select(store(m, p1, a), p2) = select(m, p2)))))))

type 't pset

logic pset_empty : 'a1 pset

logic pset_singleton : 'a1 pointer -> 'a1 pset

logic pset_deref : ('a2, 'a1 pointer) memory, 'a2 pset -> 'a1 pset

logic pset_union : 'a1 pset, 'a1 pset -> 'a1 pset

logic pset_all : 'a1 pset -> 'a1 pset

logic pset_range : 'a1 pset, int, int -> 'a1 pset

logic pset_range_left : 'a1 pset, int -> 'a1 pset

logic pset_range_right : 'a1 pset, int -> 'a1 pset

logic in_pset : 'a1 pointer, 'a1 pset -> prop

logic valid_pset : 'a1 alloc_table, 'a1 pset -> prop

predicate pset_disjoint(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (not (in_pset(p, ps1) and in_pset(p, ps2))))

predicate pset_included(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (in_pset(p, ps1) -> in_pset(p, ps2)))

axiom pset_included_self: (forall ps:'a1 pset. pset_included(ps, ps))

axiom pset_included_range:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))].
            (((c <= a) and (b <= d)) -> pset_included(pset_range(ps, a, b),
             pset_range(ps, c, d))))))))

axiom pset_included_range_all:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))]. pset_included(pset_range(ps, a, b), pset_all(ps)))))))

axiom in_pset_empty: (forall p:'a1 pointer. (not in_pset(p, pset_empty)))

axiom in_pset_singleton:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. (in_pset(p, pset_singleton(q)) <-> (p = q))))

axiom in_pset_deref:
  (forall p:'a1 pointer.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (in_pset(p, pset_deref(m, q)) <->
         (exists r:'a2 pointer. (in_pset(r, q) and (p = select(m, r))))))))

axiom in_pset_all:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (in_pset(p, pset_all(q)) <->
       (exists i:int.
         (exists r:'a1 pointer. (in_pset(r, q) and (p = shift(r, i))))))))

axiom in_pset_range:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (forall b:int.
          (in_pset(p, pset_range(q, a, b)) <->
           (exists i:int.
             (exists r:'a1 pointer.
               ((a <= i) and
                ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))))

axiom in_pset_range_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall b:int.
        (in_pset(p, pset_range_left(q, b)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_range_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (in_pset(p, pset_range_right(q, a)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((a <= i) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_union:
  (forall p:'a1 pointer.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (in_pset(p, pset_union(s1, s2)) <->
         (in_pset(p, s1) or in_pset(p, s2))))))

axiom valid_pset_empty: (forall a:'a1 alloc_table. valid_pset(a, pset_empty))

axiom valid_pset_singleton:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (valid_pset(a, pset_singleton(p)) <-> valid(a, p))))

axiom valid_pset_deref:
  (forall a:'a1 alloc_table.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (valid_pset(a, pset_deref(m, q)) <->
         (forall r:'a2 pointer.
           (forall p:'a1 pointer.
             ((in_pset(r, q) and (p = select(m, r))) -> valid(a, p))))))))

axiom valid_pset_range:
  (forall a:'a1 alloc_table.
    (forall q:'a1 pset.
      (forall c:int.
        (forall d:int.
          (valid_pset(a, pset_range(q, c, d)) <->
           (forall i:int.
             (forall r:'a1 pointer.
               ((in_pset(r, q) and ((c <= i) and (i <= d))) -> valid(a,
                shift(r, i))))))))))

axiom valid_pset_union:
  (forall a:'a1 alloc_table.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (valid_pset(a, pset_union(s1, s2)) <->
         (valid_pset(a, s1) and valid_pset(a, s2))))))

predicate not_assigns(a: 'a1 alloc_table, m1: ('a1, 'a2) memory, m2: ('a1,
  'a2) memory, l: 'a1 pset) =
  (forall p:'a1 pointer.
    ((valid(a, p) and (not in_pset(p, l))) -> (select(m2, p) = select(m1, p))))

axiom not_assigns_refl:
  (forall a:'a1 alloc_table.
    (forall m:('a1, 'a2) memory.
      (forall l:'a1 pset. not_assigns(a, m, m, l))))

axiom not_assigns_trans:
  (forall a:'a1 alloc_table.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory.
          (forall l:'a1 pset [not_assigns(a, m1, m2, l), not_assigns(a, m1,
            m3, l)].
            (not_assigns(a, m1, m2, l) ->
             (not_assigns(a, m2, m3, l) -> not_assigns(a, m1, m3, l))))))))

logic full_separated : 'a1 pointer, 'a2 pointer -> prop

axiom full_separated_shift1:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(p, shift(q, i))))))

axiom full_separated_shift2:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift3:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift4:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(p, shift(q, i))))))

type 't tag_table

type 't tag_id

logic int_of_tag : 'a1 tag_id -> int

logic typeof : 'a1 tag_table, 'a1 pointer -> 'a1 tag_id

logic parenttag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag_bool : 'a1 tag_id, 'a1 tag_id -> bool

axiom subtag_bool_def:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id. ((subtag_bool(t1, t2) = true) <-> subtag(t1, t2))))

axiom subtag_refl: (forall t:'a1 tag_id. subtag(t, t))

axiom subtag_parent:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id.
      (forall t3:'a1 tag_id.
        (subtag(t1, t2) -> (parenttag(t2, t3) -> subtag(t1, t3))))))

predicate instanceof(a: 'a1 tag_table, p: 'a1 pointer, t: 'a1 tag_id) =
  subtag(typeof(a, p), t)

logic downcast : 'a1 tag_table, 'a1 pointer, 'a1 tag_id -> 'a1 pointer

axiom downcast_instanceof:
  (forall a:'a1 tag_table.
    (forall p:'a1 pointer.
      (forall s:'a1 tag_id. (instanceof(a, p, s) -> (downcast(a, p, s) = p)))))

logic bottom_tag : 'a1 tag_id

axiom bottom_tag_axiom: (forall t:'a1 tag_id. subtag(t, bottom_tag))

predicate root_tag(t: 'a1 tag_id) = parenttag(t, bottom_tag)

axiom root_subtag:
  (forall a:'a1 tag_id.
    (forall b:'a1 tag_id.
      (forall c:'a1 tag_id.
        (root_tag(a) ->
         (root_tag(b) -> ((a <> b) -> (subtag(c, a) -> (not subtag(c, b)))))))))

predicate fully_packed(tag_table: 'a1 tag_table, mutable: ('a1,
  'a1 tag_id) memory, this: 'a1 pointer) = (select(mutable,
  this) = typeof(tag_table, this))

logic bw_compl : int -> int

logic bw_and : int, int -> int

axiom bw_and_not_null:
  (forall a:int.
    (forall b:int. ((bw_and(a, b) <> 0) -> ((a <> 0) and (b <> 0)))))

logic bw_xor : int, int -> int

logic bw_or : int, int -> int

logic lsl : int, int -> int

axiom lsl_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsl(a, b)))))

axiom lsl_left_positive_monotone:
  (forall a1:int.
    (forall a2:int.
      (forall b:int.
        (((0 <= a1) and ((a1 <= a2) and (0 <= b))) -> (lsl(a1, b) <= lsl(a2,
         b))))))

logic lsr : int, int -> int

axiom lsr_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsr(a, b)))))

axiom lsr_left_positive_decreases:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(a, b) <= a))))

logic asr : int, int -> int

axiom asr_positive_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= asr(a, b)))))

axiom asr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) <= a))))

axiom asr_lsr_same_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) = lsr(a, b)))))

axiom lsl_of_lsr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsl(lsr(a, b), b) <= a))))

axiom lsr_of_lsl_identity_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(lsl(a, b), b) = a))))

logic alloc_extends : 'a1 alloc_table, 'a1 alloc_table -> prop

predicate alloc_fresh(a: 'a1 alloc_table, p: 'a1 pointer, n: int) =
  (forall i:int. (((0 <= i) and (i < n)) -> (not valid(a, shift(p, i)))))

axiom alloc_extends_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_min(a1, p) = offset_min(a2, p)))))))

axiom alloc_extends_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_max(a1, p) = offset_max(a2, p)))))))

axiom alloc_extends_not_assigns_empty:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory.
          (forall l:'a1 pset.
            (forall p:'a1 pointer.
              (forall n:int [alloc_extends(a1, a2), alloc_fresh(a1, p, n),
                not_assigns(a2, m1, m2, l)].
                ((alloc_extends(a1, a2) and
                  (alloc_fresh(a1, p, n) and
                   (not_assigns(a2, m1, m2, l) and pset_included(l,
                    pset_all(pset_singleton(p)))))) ->
                 not_assigns(a1, m1, m2, pset_empty)))))))))

logic alloc_extends_except : 'a1 alloc_table, 'a1 alloc_table,
'a1 pset -> prop

axiom alloc_extends_except_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_min(a1,
            p) = offset_min(a2, p))))))))

axiom alloc_extends_except_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_max(a1,
            p) = offset_max(a2, p))))))))

type 'a mybag

logic in_mybag : 'a1, 'a1 mybag -> prop

logic disj_mybag : 'a1 mybag, 'a1 mybag -> prop

axiom disj_sym:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag [disj_mybag(s1, s2)].
      (disj_mybag(s1, s2) -> disj_mybag(s2, s1))))

logic sub_mybag : 'a1 mybag, 'a1 mybag -> prop

axiom sub_refl:
  (forall sa:'a1 pointer mybag [sub_mybag(sa, sa)]. sub_mybag(sa, sa))

axiom sub_disj:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall s3:'a1 mybag [disj_mybag(s1, s2), sub_mybag(s2, s3)|
        disj_mybag(s1, s3), sub_mybag(s2, s3)].
        (disj_mybag(s1, s3) -> (sub_mybag(s2, s3) -> disj_mybag(s1, s2))))))

axiom sub_in:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall p:'a1 [in_mybag(p, s1), sub_mybag(s1, s2)| in_mybag(p, s2),
        sub_mybag(s1, s2)].
        ((not in_mybag(p, s2)) ->
         (sub_mybag(s1, s2) -> (not in_mybag(p, s1)))))))

axiom sub_sub:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall s3:'a1 mybag [sub_mybag(s1, s3), sub_mybag(s2, s3)|
        sub_mybag(s1, s3), sub_mybag(s1, s2)].
        (sub_mybag(s1, s2) -> (sub_mybag(s2, s3) -> sub_mybag(s1, s3))))))

logic frame_between : 'a1 pointer mybag, ('a1, 'a2) memory, ('a1,
'a2) memory -> prop

axiom frame_between_refl:
  (forall sa:'a1 pointer mybag.
    (forall m:('a1, 'a2) memory [frame_between(sa, m, m)]. frame_between(sa,
      m, m)))

axiom frame_between_gen:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall p:'a1 pointer.
          (forall v:'a2 [frame_between(sa, m1, store(m2, p, v))].
            (frame_between(sa, m1, m2) ->
             (in_mybag(p, sa) -> frame_between(sa, store(m1, p, v), m2))))))))

axiom frame_between_gen2:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory [frame_between(sa, m1, m2),
          frame_between(sa, m1, m3)| frame_between(sa, m2, m3),
          frame_between(sa, m1, m3)].
          (frame_between(sa, m1, m2) ->
           (frame_between(sa, m2, m3) -> frame_between(sa, m1, m3)))))))

axiom frame_between_gen_sub1:
  (forall s12:'a1 pointer mybag.
    (forall s23:'a1 pointer mybag.
      (forall s13:'a1 pointer mybag.
        (forall m1:('a1, 'a2) memory.
          (forall m2:('a1, 'a2) memory.
            (forall m3:('a1, 'a2) memory [frame_between(s12, m1, m2),
              frame_between(s13, m1, m3)].
              (sub_mybag(s12, s13) ->
               (frame_between(s12, m1, m2) ->
                (frame_between(s23, m2, m3) -> frame_between(s13, m1, m3))))))))))

axiom frame_between_gen_sub2:
  (forall s12:'a1 pointer mybag.
    (forall s23:'a1 pointer mybag.
      (forall s13:'a1 pointer mybag.
        (forall m1:('a1, 'a2) memory.
          (forall m2:('a1, 'a2) memory.
            (forall m3:('a1, 'a2) memory [frame_between(s23, m2, m3),
              frame_between(s13, m1, m3)].
              (frame_between(s12, m1, m2) ->
               (sub_mybag(s23, s13) ->
                (frame_between(s23, m2, m3) -> frame_between(s13, m1, m3))))))))))

axiom frame_between_pointer:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall p:'a1 pointer.
          (forall v:'a2 [frame_between(sa, m1, m2), select(m1, p)|
            frame_between(sa, m1, m2), select(m2, p)].
            (frame_between(sa, m1, m2) ->
             ((not in_mybag(p, sa)) -> (select(m1, p) = select(m2, p)))))))))

axiom frame_between_sub:
  (forall sa:'a1 pointer mybag.
    (forall sb:'a1 pointer mybag.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory [frame_between(sa, m1, m2),
          sub_mybag(sa, sb)].
          (frame_between(sa, m1, m2) ->
           (sub_mybag(sa, sb) -> frame_between(sb, m1, m2)))))))

type mode =
  | nearest_even
  | to_zero
  | up
  | down
  | nearest_away

type double

logic round_double : mode, real -> real

logic round_double_logic : mode, real -> double

logic double_value : double -> real

logic double_exact : double -> real

logic double_model : double -> real

function double_round_error(x: double) : real =
  abs_real((double_value(x) - double_exact(x)))

function double_total_error(x: double) : real =
  abs_real((double_value(x) - double_model(x)))

function max_double() : real = 0x1.FFFFFFFFFFFFFp1023

predicate no_overflow_double(m: mode, x: real) = (abs_real(round_double(m,
  x)) <= max_double)

axiom bounded_real_no_overflow_double:
  (forall m:mode.
    (forall x:real.
      ((abs_real(x) <= max_double) -> no_overflow_double(m, x))))

axiom round_double_monotonic:
  (forall x:real.
    (forall y:real.
      (forall m:mode.
        ((x <= y) -> (round_double(m, x) <= round_double(m, y))))))

axiom exact_round_double_for_integers:
  (forall i:int.
    (forall m:mode.
      ((((-9007199254740992) <= i) and (i <= 9007199254740992)) ->
       (round_double(m, real_of_int(i)) = real_of_int(i)))))

axiom exact_round_double_for_doubles:
  (forall x:double.
    (forall m:mode. (round_double(m, double_value(x)) = double_value(x))))

axiom round_double_idempotent:
  (forall m1:mode.
    (forall m2:mode.
      (forall x:real. (round_double(m1, round_double(m2,
        x)) = round_double(m2, x)))))

axiom round_down_double_neg:
  (forall x:real. (round_double(down, (-x)) = (-round_double(up, x))))

axiom round_up_double_neg:
  (forall x:real. (round_double(up, (-x)) = (-round_double(down, x))))

axiom round_double_down_le: (forall x:real. (round_double(down, x) <= x))

axiom round_up_double_ge: (forall x:real. (round_double(up, x) >= x))

type single

logic round_single : mode, real -> real

logic round_single_logic : mode, real -> single

logic single_value : single -> real

logic single_exact : single -> real

logic single_model : single -> real

function single_round_error(x: single) : real =
  abs_real((single_value(x) - single_exact(x)))

function single_total_error(x: single) : real =
  abs_real((single_value(x) - single_model(x)))

function max_single() : real = 0x1.FFFFFEp127

predicate no_overflow_single(m: mode, x: real) = (abs_real(round_single(m,
  x)) <= max_single)

axiom bounded_real_no_overflow_single:
  (forall m:mode.
    (forall x:real.
      ((abs_real(x) <= max_single) -> no_overflow_single(m, x))))

axiom round_single_monotonic:
  (forall x:real.
    (forall y:real.
      (forall m:mode.
        ((x <= y) -> (round_single(m, x) <= round_single(m, y))))))

axiom exact_round_single_for_integers:
  (forall i:int.
    (forall m:mode.
      ((((-16777216) <= i) and (i <= 16777216)) -> (round_single(m,
       real_of_int(i)) = real_of_int(i)))))

axiom exact_round_single_for_singles:
  (forall x:single.
    (forall m:mode. (round_single(m, single_value(x)) = single_value(x))))

axiom round_single_idempotent:
  (forall m1:mode.
    (forall m2:mode.
      (forall x:real. (round_single(m1, round_single(m2,
        x)) = round_single(m2, x)))))

axiom round_down_single_neg:
  (forall x:real. (round_single(down, (-x)) = (-round_single(up, x))))

axiom round_up_single_neg:
  (forall x:real. (round_single(up, (-x)) = (-round_single(down, x))))

axiom round_single_down_le: (forall x:real. (round_single(down, x) <= x))

axiom round_up_single_ge: (forall x:real. (round_single(up, x) >= x))

axiom single_value_is_bounded:
  (forall x:single. (abs_real(single_value(x)) <= max_single))

axiom double_value_is_bounded:
  (forall x:double. (abs_real(double_value(x)) <= max_double))

predicate single_of_real_post(m: mode, x: real, res: single) =
  ((single_value(res) = round_single(m, x)) and
   ((single_exact(res) = x) and (single_model(res) = x)))

predicate single_of_double_post(m: mode, x: double, res: single) =
  ((single_value(res) = round_single(m, double_value(x))) and
   ((single_exact(res) = double_exact(x)) and
    (single_model(res) = double_model(x))))

predicate add_single_post(m: mode, x: single, y: single, res: single) =
  ((single_value(res) = round_single(m,
   (single_value(x) + single_value(y)))) and
   ((single_exact(res) = (single_exact(x) + single_exact(y))) and
    (single_model(res) = (single_model(x) + single_model(y)))))

predicate sub_single_post(m: mode, x: single, y: single, res: single) =
  ((single_value(res) = round_single(m,
   (single_value(x) - single_value(y)))) and
   ((single_exact(res) = (single_exact(x) - single_exact(y))) and
    (single_model(res) = (single_model(x) - single_model(y)))))

predicate mul_single_post(m: mode, x: single, y: single, res: single) =
  ((single_value(res) = round_single(m,
   (single_value(x) * single_value(y)))) and
   ((single_exact(res) = (single_exact(x) * single_exact(y))) and
    (single_model(res) = (single_model(x) * single_model(y)))))

predicate div_single_post(m: mode, x: single, y: single, res: single) =
  ((single_value(res) = round_single(m, div_real(single_value(x),
   single_value(y)))) and
   ((single_exact(res) = div_real(single_exact(x), single_exact(y))) and
    (single_model(res) = div_real(single_model(x), single_model(y)))))

predicate sqrt_single_post(m: mode, x: single, res: single) =
  ((single_value(res) = round_single(m, sqrt_real(single_value(x)))) and
   ((single_exact(res) = sqrt_real(single_exact(x))) and
    (single_model(res) = sqrt_real(single_model(x)))))

predicate neg_single_post(x: single, res: single) =
  ((single_value(res) = (-single_value(x))) and
   ((single_exact(res) = (-single_exact(x))) and
    (single_model(res) = (-single_model(x)))))

predicate abs_single_post(x: single, res: single) =
  ((single_value(res) = abs_real(single_value(x))) and
   ((single_exact(res) = abs_real(single_exact(x))) and
    (single_model(res) = abs_real(single_model(x)))))

predicate double_of_real_post(m: mode, x: real, res: double) =
  ((double_value(res) = round_double(m, x)) and
   ((double_exact(res) = x) and (double_model(res) = x)))

predicate double_of_single_post(x: single, res: double) =
  ((double_value(res) = single_value(x)) and
   ((double_exact(res) = single_exact(x)) and
    (double_model(res) = single_model(x))))

predicate add_double_post(m: mode, x: double, y: double, res: double) =
  ((double_value(res) = round_double(m,
   (double_value(x) + double_value(y)))) and
   ((double_exact(res) = (double_exact(x) + double_exact(y))) and
    (double_model(res) = (double_model(x) + double_model(y)))))

predicate sub_double_post(m: mode, x: double, y: double, res: double) =
  ((double_value(res) = round_double(m,
   (double_value(x) - double_value(y)))) and
   ((double_exact(res) = (double_exact(x) - double_exact(y))) and
    (double_model(res) = (double_model(x) - double_model(y)))))

predicate mul_double_post(m: mode, x: double, y: double, res: double) =
  ((double_value(res) = round_double(m,
   (double_value(x) * double_value(y)))) and
   ((double_exact(res) = (double_exact(x) * double_exact(y))) and
    (double_model(res) = (double_model(x) * double_model(y)))))

predicate div_double_post(m: mode, x: double, y: double, res: double) =
  ((double_value(res) = round_double(m, div_real(double_value(x),
   double_value(y)))) and
   ((double_exact(res) = div_real(double_exact(x), double_exact(y))) and
    (double_model(res) = div_real(double_model(x), double_model(y)))))

predicate sqrt_double_post(m: mode, x: double, res: double) =
  ((double_value(res) = round_double(m, sqrt_real(double_value(x)))) and
   ((double_exact(res) = sqrt_real(double_exact(x))) and
    (double_model(res) = sqrt_real(double_model(x)))))

predicate neg_double_post(x: double, res: double) =
  ((double_value(res) = (-double_value(x))) and
   ((double_exact(res) = (-double_exact(x))) and
    (double_model(res) = (-double_model(x)))))

predicate abs_double_post(x: double, res: double) =
  ((double_value(res) = abs_real(double_value(x))) and
   ((double_exact(res) = abs_real(double_exact(x))) and
    (double_model(res) = abs_real(double_model(x)))))

type charP

type doubleP

type int8

type padding

type voidP

logic charP_tag : charP tag_id

axiom charP_int: (int_of_tag(charP_tag) = 1)

logic charP_of_pointer_address : unit pointer -> charP pointer

axiom charP_of_pointer_address_of_pointer_addr:
  (forall p:charP pointer.
    (p = charP_of_pointer_address(pointer_address(p))))

axiom charP_parenttag_bottom: parenttag(charP_tag, bottom_tag)

axiom charP_tags:
  (forall x:charP pointer.
    (forall charP_tag_table:charP tag_table. instanceof(charP_tag_table, x,
      charP_tag)))

logic doubleP_tag : doubleP tag_id

axiom doubleP_int: (int_of_tag(doubleP_tag) = 1)

logic doubleP_of_pointer_address : unit pointer -> doubleP pointer

axiom doubleP_of_pointer_address_of_pointer_addr:
  (forall p:doubleP pointer.
    (p = doubleP_of_pointer_address(pointer_address(p))))

axiom doubleP_parenttag_bottom: parenttag(doubleP_tag, bottom_tag)

axiom doubleP_tags:
  (forall x:doubleP pointer.
    (forall doubleP_tag_table:doubleP tag_table.
      instanceof(doubleP_tag_table, x, doubleP_tag)))

logic integer_of_int8 : int8 -> int

predicate eq_int8(x: int8, y: int8) =
  (integer_of_int8(x) = integer_of_int8(y))

logic int8_of_integer : int -> int8

axiom int8_coerce:
  (forall x:int.
    ((((-128) <= x) and (x <= 127)) ->
     (integer_of_int8(int8_of_integer(x)) = x)))

axiom int8_extensionality:
  (forall x:int8.
    (forall y:int8 [(integer_of_int8(x) = integer_of_int8(y))].
      ((integer_of_int8(x) = integer_of_int8(y)) -> (x = y))))

axiom int8_range:
  (forall x:int8.
    (((-128) <= integer_of_int8(x)) and (integer_of_int8(x) <= 127)))

predicate left_valid_struct_charP(p: charP pointer, a: int,
  charP_alloc_table: charP alloc_table) = (offset_min(charP_alloc_table,
  p) <= a)

predicate left_valid_struct_doubleP(p: doubleP pointer, a: int,
  doubleP_alloc_table: doubleP alloc_table) =
  (offset_min(doubleP_alloc_table, p) <= a)

predicate left_valid_struct_voidP(p: voidP pointer, a: int,
  voidP_alloc_table: voidP alloc_table) = (offset_min(voidP_alloc_table,
  p) <= a)

axiom pointer_addr_of_charP_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(charP_of_pointer_address(p))))

axiom pointer_addr_of_doubleP_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(doubleP_of_pointer_address(p))))

logic voidP_of_pointer_address : unit pointer -> voidP pointer

axiom pointer_addr_of_voidP_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(voidP_of_pointer_address(p))))

predicate right_valid_struct_charP(p: charP pointer, b: int,
  charP_alloc_table: charP alloc_table) = (offset_max(charP_alloc_table,
  p) >= b)

predicate right_valid_struct_doubleP(p: doubleP pointer, b: int,
  doubleP_alloc_table: doubleP alloc_table) =
  (offset_max(doubleP_alloc_table, p) >= b)

predicate right_valid_struct_voidP(p: voidP pointer, b: int,
  voidP_alloc_table: voidP alloc_table) = (offset_max(voidP_alloc_table,
  p) >= b)

predicate strict_valid_root_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) = a) and (offset_max(charP_alloc_table,
   p) = b))

predicate strict_valid_root_doubleP(p: doubleP pointer, a: int, b: int,
  doubleP_alloc_table: doubleP alloc_table) =
  ((offset_min(doubleP_alloc_table, p) = a) and
   (offset_max(doubleP_alloc_table, p) = b))

predicate strict_valid_root_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) = a) and (offset_max(voidP_alloc_table,
   p) = b))

predicate strict_valid_struct_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) = a) and (offset_max(charP_alloc_table,
   p) = b))

predicate strict_valid_struct_doubleP(p: doubleP pointer, a: int, b: int,
  doubleP_alloc_table: doubleP alloc_table) =
  ((offset_min(doubleP_alloc_table, p) = a) and
   (offset_max(doubleP_alloc_table, p) = b))

predicate strict_valid_struct_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) = a) and (offset_max(voidP_alloc_table,
   p) = b))

predicate valid_root_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) <= a) and (offset_max(charP_alloc_table,
   p) >= b))

predicate valid_root_doubleP(p: doubleP pointer, a: int, b: int,
  doubleP_alloc_table: doubleP alloc_table) =
  ((offset_min(doubleP_alloc_table, p) <= a) and
   (offset_max(doubleP_alloc_table, p) >= b))

predicate valid_root_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) <= a) and (offset_max(voidP_alloc_table,
   p) >= b))

predicate valid_struct_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) <= a) and (offset_max(charP_alloc_table,
   p) >= b))

predicate valid_struct_doubleP(p: doubleP pointer, a: int, b: int,
  doubleP_alloc_table: doubleP alloc_table) =
  ((offset_min(doubleP_alloc_table, p) <= a) and
   (offset_max(doubleP_alloc_table, p) >= b))

predicate valid_struct_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) <= a) and (offset_max(voidP_alloc_table,
   p) >= b))

logic voidP_tag : voidP tag_id

axiom voidP_int: (int_of_tag(voidP_tag) = 1)

axiom voidP_of_pointer_address_of_pointer_addr:
  (forall p:voidP pointer.
    (p = voidP_of_pointer_address(pointer_address(p))))

axiom voidP_parenttag_bottom: parenttag(voidP_tag, bottom_tag)

axiom voidP_tags:
  (forall x:voidP pointer.
    (forall voidP_tag_table:voidP tag_table. instanceof(voidP_tag_table, x,
      voidP_tag)))

