Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -jessie -jessie-gen-only bts0041-bis.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -dD bts0041-bis.c"
[jessie] Starting Jessie translation
[jessie] Producing Jessie files in subdir bts0041-bis.jessie
[jessie] File bts0041-bis.jessie/bts0041-bis.jc written.
[jessie] File bts0041-bis.jessie/bts0041-bis.cloc written.
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

tag char_xP = {
  char_P[..] char_xM: 32;
}

type char_xP = [char_xP]

tag int_P = {
  integer int_M: 32;
}

type int_P = [int_P]

tag unsigned_short_P = {
  integer unsigned_short_M: 16;
}

type unsigned_short_P = [unsigned_short_P]

tag char_P = {
  integer char_M: 8;
}

type char_P = [char_P]

tag void_P = {
}

type void_P = [void_P]

invariant valid___string_something :
(valid_string(__string_something) && (strlen(__string_something) == 9))

char_P[0..9] __string_something;

invariant valid___string_something_0 :
((\offset_min(__string_something) <= 0) &&
  (\offset_max(__string_something) >= 9))

axiomatic MemCmp {

  logic integer memcmp{L}(char_P[..] s1, char_P[..] s2, integer n)
  reads (s1 + [0..(n - 1)]).char_M, (s2 + [0..(n - 1)]).char_M;
   
  axiom memcmp_range{L} :
  (\forall char_P[..] s1_0;
    (\forall char_P[..] s2_0;
      (\forall integer n_0;
        ((((- 2147483647) - 1) <= memcmp{L}(s1_0, s2_0, n_0)) &&
          (memcmp{L}(s1_0, s2_0, n_0) <= 2147483647)))))
   
  axiom memcmp_zero{L} :
  (\forall char_P[..] s1_1;
    (\forall char_P[..] s2_1;
      (\forall integer n_1;
        ((memcmp{L}(s1_1, s2_1, n_1) == 0) <==>
          (\forall integer i;
            (((0 <= i) && (i < n_1)) ==>
              ((s1_1 + i).char_M == (s2_1 + i).char_M)))))))
  
}

axiomatic MemChr {

  logic boolean memchr{L}(char_P[..] s, integer c, integer n_2)
  reads (s + [0..(n_2 - 1)]).char_M;
   
  axiom memchr_def{L} :
  (\forall char_P[..] s_0;
    (\forall integer c_0;
      (\forall integer n_3;
        ((memchr{L}(s_0, c_0, n_3) == true) <==>
          (\exists integer i_0;
            (((0 <= i_0) && (i_0 < n_3)) && ((s_0 + i_0).char_M == c_0)))))))
  
}

axiomatic MemSet {

  logic boolean memset{L}(char_P[..] s_1, integer c_1, integer n_4)
  reads (s_1 + [0..(n_4 - 1)]).char_M;
   
  axiom memset_def{L} :
  (\forall char_P[..] s_2;
    (\forall integer c_2;
      (\forall integer n_5;
        ((memset{L}(s_2, c_2, n_5) == true) <==>
          (\forall integer i_1;
            (((0 <= i_1) && (i_1 < n_5)) ==> ((s_2 + i_1).char_M == c_2)))))))
  
}

axiomatic StrLen {

  logic integer strlen{L}(char_P[..] s_3) reads (s_3 + [0..]).char_M;
   
  axiom strlen_pos_or_null{L} :
  (\forall char_P[..] s_4;
    (\forall integer i_2;
      (((((0 <= i_2) && (i_2 <= 2147483647)) &&
          (\forall integer j;
            (((0 <= j) && (j < i_2)) ==> ((s_4 + j).char_M != 0)))) &&
         ((s_4 + i_2).char_M == 0)) ==>
        (strlen{L}(s_4) == i_2))))
   
  axiom strlen_neg{L} :
  (\forall char_P[..] s_5;
    ((\forall integer i_3;
       (((0 <= i_3) && (i_3 <= 2147483647)) ==> ((s_5 + i_3).char_M != 0))) ==>
      (strlen{L}(s_5) < 0)))
   
  axiom strlen_range{L} :
  (\forall char_P[..] s_6;
    (strlen{L}(s_6) <= 2147483647))
   
  axiom strlen_before_null{L} :
  (\forall char_P[..] s_7;
    (\forall integer i_4;
      (((0 <= i_4) && (i_4 < strlen{L}(s_7))) ==> ((s_7 + i_4).char_M != 0))))
   
  axiom strlen_at_null{L} :
  (\forall char_P[..] s_8;
    ((0 <= strlen{L}(s_8)) ==> ((s_8 + strlen{L}(s_8)).char_M == 0)))
   
  axiom strlen_not_zero{L} :
  (\forall char_P[..] s_9;
    (\forall integer i_5;
      ((((0 <= i_5) && (i_5 <= strlen{L}(s_9))) && ((s_9 + i_5).char_M != 0)) ==>
        (i_5 < strlen{L}(s_9)))))
   
  axiom strlen_zero{L} :
  (\forall char_P[..] s_10;
    (\forall integer i_6;
      ((((0 <= i_6) && (i_6 <= strlen{L}(s_10))) &&
         ((s_10 + i_6).char_M == 0)) ==>
        (i_6 == strlen{L}(s_10)))))
   
  axiom strlen_sup{L} :
  (\forall char_P[..] s_11;
    (\forall integer i_7;
      (((0 <= i_7) && ((s_11 + i_7).char_M == 0)) ==>
        ((0 <= strlen{L}(s_11)) && (strlen{L}(s_11) <= i_7)))))
   
  axiom strlen_shift{L} :
  (\forall char_P[..] s_12;
    (\forall integer i_8;
      (((0 <= i_8) && (i_8 <= strlen{L}(s_12))) ==>
        (strlen{L}((s_12 + i_8)) == (strlen{L}(s_12) - i_8)))))
   
  axiom strlen_create{L} :
  (\forall char_P[..] s_13;
    (\forall integer i_9;
      ((((0 <= i_9) && (i_9 <= 2147483647)) && ((s_13 + i_9).char_M == 0)) ==>
        ((0 <= strlen{L}(s_13)) && (strlen{L}(s_13) <= i_9)))))
   
  axiom strlen_create_shift{L} :
  (\forall char_P[..] s_14;
    (\forall integer i_10;
      (\forall integer k;
        ((((0 <= k) && ((k <= i_10) && (i_10 <= 2147483647))) &&
           ((s_14 + i_10).char_M == 0)) ==>
          ((0 <= strlen{L}((s_14 + k))) &&
            (strlen{L}((s_14 + k)) <= (i_10 - k)))))))
   
  axiom memcmp_strlen_left{L} :
  (\forall char_P[..] s1_2;
    (\forall char_P[..] s2_2;
      (\forall integer n_6;
        (((memcmp{L}(s1_2, s2_2, n_6) == 0) && (strlen{L}(s1_2) < n_6)) ==>
          (strlen{L}(s1_2) == strlen{L}(s2_2))))))
   
  axiom memcmp_strlen_right{L} :
  (\forall char_P[..] s1_3;
    (\forall char_P[..] s2_3;
      (\forall integer n_7;
        (((memcmp{L}(s1_3, s2_3, n_7) == 0) && (strlen{L}(s2_3) < n_7)) ==>
          (strlen{L}(s1_3) == strlen{L}(s2_3))))))
   
  axiom memcmp_strlen_shift_left{L} :
  (\forall char_P[..] s1_4;
    (\forall char_P[..] s2_4;
      (\forall integer k_0;
        (\forall integer n_8;
          ((((memcmp{L}(s1_4, (s2_4 + k_0), n_8) == 0) && (0 <= k_0)) &&
             (strlen{L}(s1_4) < n_8)) ==>
            ((0 <= strlen{L}(s2_4)) &&
              (strlen{L}(s2_4) <= (k_0 + strlen{L}(s1_4)))))))))
   
  axiom memcmp_strlen_shift_right{L} :
  (\forall char_P[..] s1_5;
    (\forall char_P[..] s2_5;
      (\forall integer k_1;
        (\forall integer n_9;
          ((((memcmp{L}((s1_5 + k_1), s2_5, n_9) == 0) && (0 <= k_1)) &&
             (strlen{L}(s2_5) < n_9)) ==>
            ((0 <= strlen{L}(s1_5)) &&
              (strlen{L}(s1_5) <= (k_1 + strlen{L}(s2_5)))))))))
  
}

axiomatic StrCmp {

  logic integer strcmp{L}(char_P[..] s1_6, char_P[..] s2_6)
  reads (s1_6 + [0..strlen{L}(s1_6)]).char_M,
  (s2_6 + [0..strlen{L}(s2_6)]).char_M;
   
  axiom strcmp_range{L} :
  (\forall char_P[..] s1_7;
    (\forall char_P[..] s2_7;
      ((((- 2147483647) - 1) <= strcmp{L}(s1_7, s2_7)) &&
        (strcmp{L}(s1_7, s2_7) <= 2147483647))))
   
  axiom strcmp_zero{L} :
  (\forall char_P[..] s1_8;
    (\forall char_P[..] s2_8;
      ((strcmp{L}(s1_8, s2_8) == 0) <==>
        ((strlen{L}(s1_8) == strlen{L}(s2_8)) &&
          (\forall integer i_11;
            (((0 <= i_11) && (i_11 <= strlen{L}(s1_8))) ==>
              ((s1_8 + i_11).char_M == (s2_8 + i_11).char_M)))))))
  
}

axiomatic StrNCmp {

  logic integer strncmp{L}(char_P[..] s1_9, char_P[..] s2_9, integer n_10)
  reads (s1_9 + [0..(n_10 - 1)]).char_M, (s2_9 + [0..(n_10 - 1)]).char_M;
   
  axiom strncmp_zero{L} :
  (\forall char_P[..] s1_10;
    (\forall char_P[..] s2_10;
      (\forall integer n_11;
        ((strncmp{L}(s1_10, s2_10, n_11) == 0) <==>
          (((strlen{L}(s1_10) < n_11) && (strcmp{L}(s1_10, s2_10) == 0)) ||
            (\forall integer i_12;
              (((0 <= i_12) && (i_12 < n_11)) ==>
                ((s1_10 + i_12).char_M == (s2_10 + i_12).char_M))))))))
  
}

axiomatic StrChr {

  logic boolean strchr{L}(char_P[..] s_15, integer c_3)
  reads (s_15 + [0..strlen{L}(s_15)]).char_M;
   
  axiom strchr_def{L} :
  (\forall char_P[..] s_16;
    (\forall integer c_4;
      ((strchr{L}(s_16, c_4) == true) <==>
        (\exists integer i_13;
          (((0 <= i_13) && (i_13 <= strlen{L}(s_16))) &&
            ((s_16 + i_13).char_M == c_4))))))
  
}

axiomatic WcsLen {

  logic integer wcslen{L}(unsigned_short_P[..] s_17)
  reads (s_17 + [0..]).unsigned_short_M;
   
  axiom wcslen_pos_or_null{L} :
  (\forall unsigned_short_P[..] s_18;
    (\forall integer i_14;
      ((((0 <= i_14) &&
          (\forall integer j_0;
            (((0 <= j_0) && (j_0 < i_14)) ==>
              ((s_18 + j_0).unsigned_short_M != 0)))) &&
         ((s_18 + i_14).unsigned_short_M == 0)) ==>
        (wcslen{L}(s_18) == i_14))))
   
  axiom wcslen_neg{L} :
  (\forall unsigned_short_P[..] s_19;
    ((\forall integer i_15;
       ((0 <= i_15) ==> ((s_19 + i_15).unsigned_short_M != 0))) ==>
      (wcslen{L}(s_19) < 0)))
   
  axiom wcslen_before_null{L} :
  (\forall unsigned_short_P[..] s_20;
    (\forall integer i_16;
      (((0 <= i_16) && (i_16 < wcslen{L}(s_20))) ==>
        ((s_20 + i_16).unsigned_short_M != 0))))
   
  axiom wcslen_at_null{L} :
  (\forall unsigned_short_P[..] s_21;
    ((0 <= wcslen{L}(s_21)) ==>
      ((s_21 + wcslen{L}(s_21)).unsigned_short_M == 0)))
   
  axiom wcslen_not_zero{L} :
  (\forall unsigned_short_P[..] s_22;
    (\forall integer i_17;
      ((((0 <= i_17) && (i_17 <= wcslen{L}(s_22))) &&
         ((s_22 + i_17).unsigned_short_M != 0)) ==>
        (i_17 < wcslen{L}(s_22)))))
   
  axiom wcslen_zero{L} :
  (\forall unsigned_short_P[..] s_23;
    (\forall integer i_18;
      ((((0 <= i_18) && (i_18 <= wcslen{L}(s_23))) &&
         ((s_23 + i_18).unsigned_short_M == 0)) ==>
        (i_18 == wcslen{L}(s_23)))))
   
  axiom wcslen_sup{L} :
  (\forall unsigned_short_P[..] s_24;
    (\forall integer i_19;
      (((0 <= i_19) && ((s_24 + i_19).unsigned_short_M == 0)) ==>
        ((0 <= wcslen{L}(s_24)) && (wcslen{L}(s_24) <= i_19)))))
   
  axiom wcslen_shift{L} :
  (\forall unsigned_short_P[..] s_25;
    (\forall integer i_20;
      (((0 <= i_20) && (i_20 <= wcslen{L}(s_25))) ==>
        (wcslen{L}((s_25 + i_20)) == (wcslen{L}(s_25) - i_20)))))
   
  axiom wcslen_create{L} :
  (\forall unsigned_short_P[..] s_26;
    (\forall integer i_21;
      (((0 <= i_21) && ((s_26 + i_21).unsigned_short_M == 0)) ==>
        ((0 <= wcslen{L}(s_26)) && (wcslen{L}(s_26) <= i_21)))))
   
  axiom wcslen_create_shift{L} :
  (\forall unsigned_short_P[..] s_27;
    (\forall integer i_22;
      (\forall integer k_2;
        ((((0 <= k_2) && (k_2 <= i_22)) &&
           ((s_27 + i_22).unsigned_short_M == 0)) ==>
          ((0 <= wcslen{L}((s_27 + k_2))) &&
            (wcslen{L}((s_27 + k_2)) <= (i_22 - k_2)))))))
  
}

axiomatic WcsCmp {

  logic integer wcscmp{L}(unsigned_short_P[..] s1_11,
                          unsigned_short_P[..] s2_11)
  reads (s1_11 + [0..wcslen{L}(s1_11)]).unsigned_short_M,
  (s2_11 + [0..wcslen{L}(s2_11)]).unsigned_short_M;
   
  axiom wcscmp_zero{L} :
  (\forall unsigned_short_P[..] s1_12;
    (\forall unsigned_short_P[..] s2_12;
      ((wcscmp{L}(s1_12, s2_12) == 0) <==>
        ((wcslen{L}(s1_12) == wcslen{L}(s2_12)) &&
          (\forall integer i_23;
            (((0 <= i_23) && (i_23 <= wcslen{L}(s1_12))) ==>
              ((s1_12 + i_23).unsigned_short_M ==
                (s2_12 + i_23).unsigned_short_M)))))))
  
}

axiomatic WcsNCmp {

  logic integer wcsncmp{L}(unsigned_short_P[..] s1_13,
                           unsigned_short_P[..] s2_13, integer n_12)
  reads (s1_13 + [0..(n_12 - 1)]).unsigned_short_M,
  (s2_13 + [0..(n_12 - 1)]).unsigned_short_M;
   
  axiom wcsncmp_zero{L} :
  (\forall unsigned_short_P[..] s1_14;
    (\forall unsigned_short_P[..] s2_14;
      (\forall integer n_13;
        ((wcsncmp{L}(s1_14, s2_14, n_13) == 0) <==>
          (((wcslen{L}(s1_14) < n_13) && (wcscmp{L}(s1_14, s2_14) == 0)) ||
            (\forall integer i_24;
              (((0 <= i_24) && (i_24 < n_13)) ==>
                ((s1_14 + i_24).unsigned_short_M ==
                  (s2_14 + i_24).unsigned_short_M))))))))
  
}

logic integer minimum(integer i_25, integer j_1) =
(if (i_25 < j_1) then i_25 else j_1)

logic integer maximum(integer i_26, integer j_2) =
(if (i_26 < j_2) then j_2 else i_26)

predicate valid_string{L}(char_P[..] s_28) =
((0 <= strlen{L}(s_28)) &&
  ((\offset_min(s_28) <= 0) && (\offset_max(s_28) >= strlen{L}(s_28))))

predicate valid_string_or_null{L}(char_P[..] s_29) =
((s_29 == null) || valid_string{L}(s_29))

predicate valid_wstring{L}(unsigned_short_P[..] s_30) =
((0 <= wcslen{L}(s_30)) &&
  ((\offset_min(s_30) <= 0) && (\offset_max(s_30) >= wcslen{L}(s_30))))

predicate valid_wstring_or_null{L}(unsigned_short_P[..] s_31) =
((s_31 == null) || valid_wstring{L}(s_31))

char_P[..] strndup(char_P[..] s, integer n)
  requires (C_10 : valid_string{Here}(s));
behavior default:
  assigns \nothing;
  ensures (C_1 : (((((C_5 : (\offset_min(\result) <= 0)) &&
                      (C_6 : (\offset_max(\result) >=
                               minimum(strlen{Here}(\at(s,Old)), \at(n,Old))))) &&
                     (C_7 : valid_string{Here}(\result))) &&
                    (C_8 : (strlen{Here}(\result) <= \at(n,Old)))) &&
                   (C_9 : (strncmp{Here}(\result, \at(s,Old), \at(n,Old)) ==
                            0))));
;

int_P[0..11] a;

invariant valid_a :
((\offset_min(a) <= 0) && (\offset_max(a) >= 11))

char_xP[0..11] c;

invariant valid_c :
((\offset_min(c) <= 0) && (\offset_max(c) >= 11))

unit assign_int()
behavior default:
  assigns (a + [..]).int_M;
  ensures (C_19 : true);
{  
   (var integer i);
   
   {  (C_11 : (i = 0));
      
      {  
         loop 
         behavior default:
           
           assigns (a + [..]).int_M;
         behavior default:
           invariant (C_12 : ((C_13 : (0 <= i)) && (C_14 : (i <= 12))));
         while (true)
         {  
            {  (if (i < 12) then () else 
               (goto while_0_break));
               
               {  (C_16 : ((C_15 : (a + i).int_M) = 0x45))
               };
               (C_18 : (i = (C_17 : (i + 1))))
            }
         };
         (while_0_break : ())
      };
      
      (return ())
   }
}

unit assign_char()
behavior default:
  assigns (c + [..]).char_xM;
  ensures (C_29 : true);
{  
   (var integer i_0);
   
   {  (C_20 : (i_0 = 0));
      
      {  
         loop 
         behavior default:
           
           assigns (c + [..]).char_xM;
         behavior default:
           invariant (C_21 : ((C_22 : (0 <= i_0)) && (C_23 : (i_0 <= 12))));
         while (true)
         {  
            {  (if (i_0 < 12) then () else 
               (goto while_1_break));
               
               {  (C_26 : ((C_25 : (c + i_0).char_xM) = (C_24 : strndup(
                                                        __string_something,
                                                        12))))
               };
               (C_28 : (i_0 = (C_27 : (i_0 + 1))))
            }
         };
         (while_1_break : ())
      };
      
      (return ())
   }
}

unit main()
behavior default:
  assigns (a + [..]).int_M,
  (c + [..]).char_xM;
  ensures (C_32 : true);
{  
   {  (C_30 : assign_int());
      (C_31 : assign_char());
      
      (return ())
   }
}

unit foo(int_P[..] a_0, integer aLength)
  requires (C_41 : ((C_42 : (\offset_min(a_0) <= 0)) &&
                     (C_43 : (\offset_max(a_0) >= (aLength - 1)))));
behavior default:
  assigns (a_0 + [..]).int_M;
  ensures (C_40 : true);
{  
   (var integer j);
   
   {  (C_33 : (j = 0));
      
      {  
         loop 
         behavior default:
           
           assigns (a_0 + [..]).int_M;
         behavior default:
           invariant (C_34 : (0 <= j));
         while (true)
         {  
            {  (if (j < aLength) then () else 
               (goto while_2_break));
               
               {  (C_37 : ((C_36 : (C_35 : (a_0 + j)).int_M) = 0))
               };
               (C_39 : (j = (C_38 : (j + 1))))
            }
         };
         (while_2_break : ())
      };
      
      (return ())
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs bts0041-bis.jessie/bts0041-bis.cloc bts0041-bis.jessie/bts0041-bis.jc
type __string_something_1

type a_2

type c_3

type c_75

type char_P

type char_xP

type int_P

type padding

type unsigned_short_P

type void_P

exception Goto_while_0_break_exc of unit

exception Goto_while_1_break_exc of unit

exception Goto_while_2_break_exc of unit

exception Loop_continue_exc of unit

exception Loop_exit_exc of unit

exception Return_label_exc of unit

logic __string_something:  -> char_P pointer

logic a:  -> int_P pointer

logic c:  -> char_xP pointer

logic char_P_tag:  -> char_P tag_id

axiom char_P_int : (int_of_tag(char_P_tag) = (1))

logic char_P_of_pointer_address: unit pointer -> char_P pointer

axiom char_P_of_pointer_address_of_pointer_addr :
 (forall p:char_P pointer.
  (p = char_P_of_pointer_address(pointer_address(p))))

axiom char_P_parenttag_bottom : parenttag(char_P_tag, bottom_tag)

axiom char_P_tags :
 (forall x:char_P pointer.
  (forall char_P_tag_table:char_P tag_table.
   instanceof(char_P_tag_table, x, char_P_tag)))

logic char_xP_tag:  -> char_xP tag_id

axiom char_xP_int : (int_of_tag(char_xP_tag) = (1))

logic char_xP_of_pointer_address: unit pointer -> char_xP pointer

axiom char_xP_of_pointer_address_of_pointer_addr :
 (forall p:char_xP pointer.
  (p = char_xP_of_pointer_address(pointer_address(p))))

axiom char_xP_parenttag_bottom : parenttag(char_xP_tag, bottom_tag)

axiom char_xP_tags :
 (forall x:char_xP pointer.
  (forall char_xP_tag_table:char_xP tag_table.
   instanceof(char_xP_tag_table, x, char_xP_tag)))

logic int_P_tag:  -> int_P tag_id

axiom int_P_int : (int_of_tag(int_P_tag) = (1))

logic int_P_of_pointer_address: unit pointer -> int_P pointer

axiom int_P_of_pointer_address_of_pointer_addr :
 (forall p:int_P pointer. (p = int_P_of_pointer_address(pointer_address(p))))

axiom int_P_parenttag_bottom : parenttag(int_P_tag, bottom_tag)

axiom int_P_tags :
 (forall x:int_P pointer.
  (forall int_P_tag_table:int_P tag_table.
   instanceof(int_P_tag_table, x, int_P_tag)))

predicate left_valid_struct_char_P(p:char_P pointer, a:int,
 char_P_alloc_table:char_P alloc_table) =
 (offset_min(char_P_alloc_table, p) <= a)

predicate left_valid_struct_char_xP(p:char_xP pointer, a:int,
 char_xP_alloc_table:char_xP alloc_table) =
 (offset_min(char_xP_alloc_table, p) <= a)

predicate left_valid_struct_int_P(p:int_P pointer, a:int,
 int_P_alloc_table:int_P alloc_table) =
 (offset_min(int_P_alloc_table, p) <= a)

predicate left_valid_struct_unsigned_short_P(p:unsigned_short_P pointer,
 a:int, unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 (offset_min(unsigned_short_P_alloc_table, p) <= a)

predicate left_valid_struct_void_P(p:void_P pointer, a:int,
 void_P_alloc_table:void_P alloc_table) =
 (offset_min(void_P_alloc_table, p) <= a)

function maximum(i_26:int, j_2:int) : int =
 (if lt_int_bool(i_26, j_2) then j_2 else i_26)

logic memchr: char_P pointer, int, int, (char_P, int) memory -> bool

axiom memchr_def :
 (forall char_P_char_M_s_6_at_L:(char_P, int) memory.
  (forall s_0_0:char_P pointer.
   (forall c_0_0:int.
    (forall n_3:int.
     (eq_bool(memchr(s_0_0, c_0_0, n_3, char_P_char_M_s_6_at_L), true)
     <-> (exists i_0:int.
          (le_int((0), i_0)
          and (lt_int(i_0, n_3)
              and eq_int(select(char_P_char_M_s_6_at_L, shift(s_0_0, i_0)),
                  c_0_0)))))))))

logic memcmp: char_P pointer, char_P pointer, int, (char_P, int) memory,
 (char_P, int) memory -> int

axiom memcmp_range :
 (forall char_P_char_M_s2_5_at_L:(char_P, int) memory.
  (forall char_P_char_M_s1_4_at_L:(char_P, int) memory.
   (forall s1_0:char_P pointer.
    (forall s2_0:char_P pointer.
     (forall n_0_0:int.
      (le_int(sub_int(neg_int((2147483647)), (1)),
       memcmp(s1_0, s2_0, n_0_0, char_P_char_M_s2_5_at_L,
       char_P_char_M_s1_4_at_L))
      and le_int(memcmp(s1_0, s2_0, n_0_0, char_P_char_M_s2_5_at_L,
                 char_P_char_M_s1_4_at_L),
          (2147483647))))))))

logic strlen: char_P pointer, (char_P, int) memory -> int

axiom memcmp_strlen_left :
 (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
  (forall s1_2:char_P pointer.
   (forall s2_2:char_P pointer.
    (forall n_6:int.
     ((eq_int(memcmp(s1_2, s2_2, n_6, char_P_char_M_s_3_8_at_L,
              char_P_char_M_s_3_8_at_L),
       (0))
      and lt_int(strlen(s1_2, char_P_char_M_s_3_8_at_L), n_6)) ->
      eq_int(strlen(s1_2, char_P_char_M_s_3_8_at_L),
      strlen(s2_2, char_P_char_M_s_3_8_at_L)))))))

axiom memcmp_strlen_right :
 (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
  (forall s1_3:char_P pointer.
   (forall s2_3:char_P pointer.
    (forall n_7:int.
     ((eq_int(memcmp(s1_3, s2_3, n_7, char_P_char_M_s_3_8_at_L,
              char_P_char_M_s_3_8_at_L),
       (0))
      and lt_int(strlen(s2_3, char_P_char_M_s_3_8_at_L), n_7)) ->
      eq_int(strlen(s1_3, char_P_char_M_s_3_8_at_L),
      strlen(s2_3, char_P_char_M_s_3_8_at_L)))))))

axiom memcmp_strlen_shift_left :
 (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
  (forall s1_4:char_P pointer.
   (forall s2_4:char_P pointer.
    (forall k_0:int.
     (forall n_8:int.
      ((eq_int(memcmp(s1_4, shift(s2_4, k_0), n_8, char_P_char_M_s_3_8_at_L,
               char_P_char_M_s_3_8_at_L),
        (0))
       and (le_int((0), k_0)
           and lt_int(strlen(s1_4, char_P_char_M_s_3_8_at_L), n_8))) ->
       (le_int((0), strlen(s2_4, char_P_char_M_s_3_8_at_L))
       and le_int(strlen(s2_4, char_P_char_M_s_3_8_at_L),
           add_int(k_0, strlen(s1_4, char_P_char_M_s_3_8_at_L))))))))))

axiom memcmp_strlen_shift_right :
 (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
  (forall s1_5:char_P pointer.
   (forall s2_5:char_P pointer.
    (forall k_1:int.
     (forall n_9:int.
      ((eq_int(memcmp(shift(s1_5, k_1), s2_5, n_9, char_P_char_M_s_3_8_at_L,
               char_P_char_M_s_3_8_at_L),
        (0))
       and (le_int((0), k_1)
           and lt_int(strlen(s2_5, char_P_char_M_s_3_8_at_L), n_9))) ->
       (le_int((0), strlen(s1_5, char_P_char_M_s_3_8_at_L))
       and le_int(strlen(s1_5, char_P_char_M_s_3_8_at_L),
           add_int(k_1, strlen(s2_5, char_P_char_M_s_3_8_at_L))))))))))

axiom memcmp_zero :
 (forall char_P_char_M_s2_5_at_L:(char_P, int) memory.
  (forall char_P_char_M_s1_4_at_L:(char_P, int) memory.
   (forall s1_1:char_P pointer.
    (forall s2_1:char_P pointer.
     (forall n_1:int.
      (eq_int(memcmp(s1_1, s2_1, n_1, char_P_char_M_s2_5_at_L,
              char_P_char_M_s1_4_at_L),
       (0))
      <-> (forall i:int.
           ((le_int((0), i) and lt_int(i, n_1)) ->
            eq_int(select(char_P_char_M_s1_4_at_L, shift(s1_1, i)),
            select(char_P_char_M_s2_5_at_L, shift(s2_1, i)))))))))))

logic memset: char_P pointer, int, int, (char_P, int) memory -> bool

axiom memset_def :
 (forall char_P_char_M_s_1_7_at_L:(char_P, int) memory.
  (forall s_2:char_P pointer.
   (forall c_2:int.
    (forall n_5:int.
     (eq_bool(memset(s_2, c_2, n_5, char_P_char_M_s_1_7_at_L), true)
     <-> (forall i_1:int.
          ((le_int((0), i_1) and lt_int(i_1, n_5)) ->
           eq_int(select(char_P_char_M_s_1_7_at_L, shift(s_2, i_1)), c_2))))))))

function minimum(i_25:int, j_1:int) : int =
 (if lt_int_bool(i_25, j_1) then i_25 else j_1)

axiom no_assign_memchr_0 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s_6_at_L:(char_P, int) memory.
     (forall n_2:int.
      (forall c_0:int.
       (forall s:char_P pointer.
        ((pset_disjoint(tmp,
          pset_range(pset_singleton(s), (0), sub_int(n_2, (1))))
         and not_assigns(tmpalloc, char_P_char_M_s_6_at_L, tmpmem, tmp)) ->
         (memchr(s, c_0, n_2, char_P_char_M_s_6_at_L) = memchr(s, c_0, n_2,
                                                        tmpmem))))))))))

axiom no_assign_memcmp_0 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s1_4_at_L:(char_P, int) memory.
     (forall char_P_char_M_s2_5_at_L:(char_P, int) memory.
      (forall n:int.
       (forall s2:char_P pointer.
        (forall s1:char_P pointer.
         ((pset_disjoint(tmp,
           pset_range(pset_singleton(s2), (0), sub_int(n, (1))))
          and not_assigns(tmpalloc, char_P_char_M_s2_5_at_L, tmpmem, tmp)) ->
          (memcmp(s1, s2, n, char_P_char_M_s2_5_at_L,
           char_P_char_M_s1_4_at_L) = memcmp(s1, s2, n, tmpmem,
                                      char_P_char_M_s1_4_at_L)))))))))))

axiom no_assign_memcmp_1 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s1_4_at_L:(char_P, int) memory.
     (forall char_P_char_M_s2_5_at_L:(char_P, int) memory.
      (forall n:int.
       (forall s2:char_P pointer.
        (forall s1:char_P pointer.
         ((pset_disjoint(tmp,
           pset_range(pset_singleton(s1), (0), sub_int(n, (1))))
          and not_assigns(tmpalloc, char_P_char_M_s1_4_at_L, tmpmem, tmp)) ->
          (memcmp(s1, s2, n, char_P_char_M_s2_5_at_L,
           char_P_char_M_s1_4_at_L) = memcmp(s1, s2, n,
                                      char_P_char_M_s2_5_at_L, tmpmem)))))))))))

axiom no_assign_memset_0 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s_1_7_at_L:(char_P, int) memory.
     (forall n_4:int.
      (forall c_1:int.
       (forall s_1:char_P pointer.
        ((pset_disjoint(tmp,
          pset_range(pset_singleton(s_1), (0), sub_int(n_4, (1))))
         and not_assigns(tmpalloc, char_P_char_M_s_1_7_at_L, tmpmem, tmp)) ->
         (memset(s_1, c_1, n_4, char_P_char_M_s_1_7_at_L) = memset(s_1, c_1,
                                                            n_4, tmpmem))))))))))

logic strchr: char_P pointer, int, (char_P, int) memory -> bool

axiom no_assign_strchr_0 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s_15_13_at_L:(char_P, int) memory.
     (forall c_3:int.
      (forall s_15:char_P pointer.
       ((pset_disjoint(tmp,
         pset_range(pset_singleton(s_15), (0),
         strlen(s_15, char_P_char_M_s_15_13_at_L)))
        and not_assigns(tmpalloc, char_P_char_M_s_15_13_at_L, tmpmem, tmp)) ->
        (strchr(s_15, c_3, char_P_char_M_s_15_13_at_L) = strchr(s_15, c_3,
                                                         tmpmem)))))))))

logic strcmp: char_P pointer, char_P pointer, (char_P, int) memory,
 (char_P, int) memory -> int

axiom no_assign_strcmp_0 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s1_6_9_at_L:(char_P, int) memory.
     (forall char_P_char_M_s2_6_10_at_L:(char_P, int) memory.
      (forall s2_6:char_P pointer.
       (forall s1_6:char_P pointer.
        ((pset_disjoint(tmp,
          pset_range(pset_singleton(s2_6), (0),
          strlen(s2_6, char_P_char_M_s2_6_10_at_L)))
         and not_assigns(tmpalloc, char_P_char_M_s2_6_10_at_L, tmpmem, tmp)) ->
         (strcmp(s1_6, s2_6, char_P_char_M_s2_6_10_at_L,
          char_P_char_M_s1_6_9_at_L) = strcmp(s1_6, s2_6, tmpmem,
                                       char_P_char_M_s1_6_9_at_L))))))))))

axiom no_assign_strcmp_1 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s1_6_9_at_L:(char_P, int) memory.
     (forall char_P_char_M_s2_6_10_at_L:(char_P, int) memory.
      (forall s2_6:char_P pointer.
       (forall s1_6:char_P pointer.
        ((pset_disjoint(tmp,
          pset_range(pset_singleton(s1_6), (0),
          strlen(s1_6, char_P_char_M_s1_6_9_at_L)))
         and not_assigns(tmpalloc, char_P_char_M_s1_6_9_at_L, tmpmem, tmp)) ->
         (strcmp(s1_6, s2_6, char_P_char_M_s2_6_10_at_L,
          char_P_char_M_s1_6_9_at_L) = strcmp(s1_6, s2_6,
                                       char_P_char_M_s2_6_10_at_L, tmpmem))))))))))

axiom no_assign_strlen_0 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
     (forall s_3:char_P pointer.
      ((pset_disjoint(tmp, pset_range_right(pset_singleton(s_3), (0)))
       and not_assigns(tmpalloc, char_P_char_M_s_3_8_at_L, tmpmem, tmp)) ->
       (strlen(s_3, char_P_char_M_s_3_8_at_L) = strlen(s_3, tmpmem))))))))

logic strncmp: char_P pointer, char_P pointer, int, (char_P, int) memory,
 (char_P, int) memory -> int

axiom no_assign_strncmp_0 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s1_9_11_at_L:(char_P, int) memory.
     (forall char_P_char_M_s2_9_12_at_L:(char_P, int) memory.
      (forall n_10:int.
       (forall s2_9:char_P pointer.
        (forall s1_9:char_P pointer.
         ((pset_disjoint(tmp,
           pset_range(pset_singleton(s2_9), (0), sub_int(n_10, (1))))
          and not_assigns(tmpalloc, char_P_char_M_s2_9_12_at_L, tmpmem, tmp)) ->
          (strncmp(s1_9, s2_9, n_10, char_P_char_M_s2_9_12_at_L,
           char_P_char_M_s1_9_11_at_L) = strncmp(s1_9, s2_9, n_10, tmpmem,
                                         char_P_char_M_s1_9_11_at_L)))))))))))

axiom no_assign_strncmp_1 :
 (forall tmp:char_P pset.
  (forall tmpmem:(char_P, int) memory.
   (forall tmpalloc:char_P alloc_table.
    (forall char_P_char_M_s1_9_11_at_L:(char_P, int) memory.
     (forall char_P_char_M_s2_9_12_at_L:(char_P, int) memory.
      (forall n_10:int.
       (forall s2_9:char_P pointer.
        (forall s1_9:char_P pointer.
         ((pset_disjoint(tmp,
           pset_range(pset_singleton(s1_9), (0), sub_int(n_10, (1))))
          and not_assigns(tmpalloc, char_P_char_M_s1_9_11_at_L, tmpmem, tmp)) ->
          (strncmp(s1_9, s2_9, n_10, char_P_char_M_s2_9_12_at_L,
           char_P_char_M_s1_9_11_at_L) = strncmp(s1_9, s2_9, n_10,
                                         char_P_char_M_s2_9_12_at_L, tmpmem)))))))))))

logic wcslen: unsigned_short_P pointer, (unsigned_short_P, int) memory -> int

logic wcscmp: unsigned_short_P pointer, unsigned_short_P pointer,
 (unsigned_short_P, int) memory, (unsigned_short_P, int) memory -> int

axiom no_assign_wcscmp_0 :
 (forall tmp:unsigned_short_P pset.
  (forall tmpmem:(unsigned_short_P, int) memory.
   (forall tmpalloc:unsigned_short_P alloc_table.
    (forall unsigned_short_P_unsigned_short_M_s1_11_15_at_L:
     (unsigned_short_P, int) memory.
     (forall unsigned_short_P_unsigned_short_M_s2_11_16_at_L:
      (unsigned_short_P, int) memory.
      (forall s2_11:unsigned_short_P pointer.
       (forall s1_11:unsigned_short_P pointer.
        ((pset_disjoint(tmp,
          pset_range(pset_singleton(s2_11), (0),
          wcslen(s2_11, unsigned_short_P_unsigned_short_M_s2_11_16_at_L)))
         and not_assigns(tmpalloc,
             unsigned_short_P_unsigned_short_M_s2_11_16_at_L, tmpmem, tmp)) ->
         (wcscmp(s1_11, s2_11,
          unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
          unsigned_short_P_unsigned_short_M_s1_11_15_at_L) = wcscmp(s1_11,
                                                             s2_11, tmpmem,
                                                             unsigned_short_P_unsigned_short_M_s1_11_15_at_L))))))))))

axiom no_assign_wcscmp_1 :
 (forall tmp:unsigned_short_P pset.
  (forall tmpmem:(unsigned_short_P, int) memory.
   (forall tmpalloc:unsigned_short_P alloc_table.
    (forall unsigned_short_P_unsigned_short_M_s1_11_15_at_L:
     (unsigned_short_P, int) memory.
     (forall unsigned_short_P_unsigned_short_M_s2_11_16_at_L:
      (unsigned_short_P, int) memory.
      (forall s2_11:unsigned_short_P pointer.
       (forall s1_11:unsigned_short_P pointer.
        ((pset_disjoint(tmp,
          pset_range(pset_singleton(s1_11), (0),
          wcslen(s1_11, unsigned_short_P_unsigned_short_M_s1_11_15_at_L)))
         and not_assigns(tmpalloc,
             unsigned_short_P_unsigned_short_M_s1_11_15_at_L, tmpmem, tmp)) ->
         (wcscmp(s1_11, s2_11,
          unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
          unsigned_short_P_unsigned_short_M_s1_11_15_at_L) = wcscmp(s1_11,
                                                             s2_11,
                                                             unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
                                                             tmpmem))))))))))

axiom no_assign_wcslen_0 :
 (forall tmp:unsigned_short_P pset.
  (forall tmpmem:(unsigned_short_P, int) memory.
   (forall tmpalloc:unsigned_short_P alloc_table.
    (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:
     (unsigned_short_P, int) memory.
     (forall s_17:unsigned_short_P pointer.
      ((pset_disjoint(tmp, pset_range_right(pset_singleton(s_17), (0)))
       and not_assigns(tmpalloc,
           unsigned_short_P_unsigned_short_M_s_17_14_at_L, tmpmem, tmp)) ->
       (wcslen(s_17, unsigned_short_P_unsigned_short_M_s_17_14_at_L) = 
       wcslen(s_17, tmpmem))))))))

logic wcsncmp: unsigned_short_P pointer, unsigned_short_P pointer, int,
 (unsigned_short_P, int) memory, (unsigned_short_P, int) memory -> int

axiom no_assign_wcsncmp_0 :
 (forall tmp:unsigned_short_P pset.
  (forall tmpmem:(unsigned_short_P, int) memory.
   (forall tmpalloc:unsigned_short_P alloc_table.
    (forall unsigned_short_P_unsigned_short_M_s1_13_17_at_L:
     (unsigned_short_P, int) memory.
     (forall unsigned_short_P_unsigned_short_M_s2_13_18_at_L:
      (unsigned_short_P, int) memory.
      (forall n_12:int.
       (forall s2_13:unsigned_short_P pointer.
        (forall s1_13:unsigned_short_P pointer.
         ((pset_disjoint(tmp,
           pset_range(pset_singleton(s2_13), (0), sub_int(n_12, (1))))
          and not_assigns(tmpalloc,
              unsigned_short_P_unsigned_short_M_s2_13_18_at_L, tmpmem, tmp)) ->
          (wcsncmp(s1_13, s2_13, n_12,
           unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
           unsigned_short_P_unsigned_short_M_s1_13_17_at_L) = wcsncmp(s1_13,
                                                              s2_13, n_12,
                                                              tmpmem,
                                                              unsigned_short_P_unsigned_short_M_s1_13_17_at_L)))))))))))

axiom no_assign_wcsncmp_1 :
 (forall tmp:unsigned_short_P pset.
  (forall tmpmem:(unsigned_short_P, int) memory.
   (forall tmpalloc:unsigned_short_P alloc_table.
    (forall unsigned_short_P_unsigned_short_M_s1_13_17_at_L:
     (unsigned_short_P, int) memory.
     (forall unsigned_short_P_unsigned_short_M_s2_13_18_at_L:
      (unsigned_short_P, int) memory.
      (forall n_12:int.
       (forall s2_13:unsigned_short_P pointer.
        (forall s1_13:unsigned_short_P pointer.
         ((pset_disjoint(tmp,
           pset_range(pset_singleton(s1_13), (0), sub_int(n_12, (1))))
          and not_assigns(tmpalloc,
              unsigned_short_P_unsigned_short_M_s1_13_17_at_L, tmpmem, tmp)) ->
          (wcsncmp(s1_13, s2_13, n_12,
           unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
           unsigned_short_P_unsigned_short_M_s1_13_17_at_L) = wcsncmp(s1_13,
                                                              s2_13, n_12,
                                                              unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
                                                              tmpmem)))))))))))

axiom no_update_memchr_0 :
 (forall tmp:char_P pointer.
  (forall tmpval:int.
   (forall char_P_char_M_s_6_at_L:(char_P, int) memory.
    (forall n_2:int.
     (forall c_0:int.
      (forall s:char_P pointer.
       ((not in_pset(tmp,
             pset_range(pset_singleton(s), (0), sub_int(n_2, (1))))) ->
        (memchr(s, c_0, n_2, char_P_char_M_s_6_at_L) = memchr(s, c_0, n_2,
                                                       store(char_P_char_M_s_6_at_L,
                                                       tmp, tmpval))))))))))

axiom no_update_memcmp_0 :
 (forall tmp:char_P pointer.
  (forall tmpval:int.
   (forall char_P_char_M_s1_4_at_L:(char_P, int) memory.
    (forall char_P_char_M_s2_5_at_L:(char_P, int) memory.
     (forall n:int.
      (forall s2:char_P pointer.
       (forall s1:char_P pointer.
        ((not in_pset(tmp,
              pset_range(pset_singleton(s2), (0), sub_int(n, (1))))) ->
         (memcmp(s1, s2, n, char_P_char_M_s2_5_at_L, char_P_char_M_s1_4_at_L) = 
         memcmp(s1, s2, n, store(char_P_char_M_s2_5_at_L, tmp, tmpval),
         char_P_char_M_s1_4_at_L))))))))))

axiom no_update_memcmp_1 :
 (forall tmp:char_P pointer.
  (forall tmpval:int.
   (forall char_P_char_M_s1_4_at_L:(char_P, int) memory.
    (forall char_P_char_M_s2_5_at_L:(char_P, int) memory.
     (forall n:int.
      (forall s2:char_P pointer.
       (forall s1:char_P pointer.
        ((not in_pset(tmp,
              pset_range(pset_singleton(s1), (0), sub_int(n, (1))))) ->
         (memcmp(s1, s2, n, char_P_char_M_s2_5_at_L, char_P_char_M_s1_4_at_L) = 
         memcmp(s1, s2, n, char_P_char_M_s2_5_at_L,
         store(char_P_char_M_s1_4_at_L, tmp, tmpval)))))))))))

axiom no_update_memset_0 :
 (forall tmp:char_P pointer.
  (forall tmpval:int.
   (forall char_P_char_M_s_1_7_at_L:(char_P, int) memory.
    (forall n_4:int.
     (forall c_1:int.
      (forall s_1:char_P pointer.
       ((not in_pset(tmp,
             pset_range(pset_singleton(s_1), (0), sub_int(n_4, (1))))) ->
        (memset(s_1, c_1, n_4, char_P_char_M_s_1_7_at_L) = memset(s_1, c_1,
                                                           n_4,
                                                           store(char_P_char_M_s_1_7_at_L,
                                                           tmp, tmpval))))))))))

axiom no_update_strchr_0 :
 (forall tmp:char_P pointer.
  (forall tmpval:int.
   (forall char_P_char_M_s_15_13_at_L:(char_P, int) memory.
    (forall c_3:int.
     (forall s_15:char_P pointer.
      ((not in_pset(tmp,
            pset_range(pset_singleton(s_15), (0),
            strlen(s_15, char_P_char_M_s_15_13_at_L)))) ->
       (strchr(s_15, c_3, char_P_char_M_s_15_13_at_L) = strchr(s_15, c_3,
                                                        store(char_P_char_M_s_15_13_at_L,
                                                        tmp, tmpval)))))))))

axiom no_update_strcmp_0 :
 (forall tmp:char_P pointer.
  (forall tmpval:int.
   (forall char_P_char_M_s1_6_9_at_L:(char_P, int) memory.
    (forall char_P_char_M_s2_6_10_at_L:(char_P, int) memory.
     (forall s2_6:char_P pointer.
      (forall s1_6:char_P pointer.
       ((not in_pset(tmp,
             pset_range(pset_singleton(s2_6), (0),
             strlen(s2_6, char_P_char_M_s2_6_10_at_L)))) ->
        (strcmp(s1_6, s2_6, char_P_char_M_s2_6_10_at_L,
         char_P_char_M_s1_6_9_at_L) = strcmp(s1_6, s2_6,
                                      store(char_P_char_M_s2_6_10_at_L, tmp,
                                      tmpval), char_P_char_M_s1_6_9_at_L)))))))))

axiom no_update_strcmp_1 :
 (forall tmp:char_P pointer.
  (forall tmpval:int.
   (forall char_P_char_M_s1_6_9_at_L:(char_P, int) memory.
    (forall char_P_char_M_s2_6_10_at_L:(char_P, int) memory.
     (forall s2_6:char_P pointer.
      (forall s1_6:char_P pointer.
       ((not in_pset(tmp,
             pset_range(pset_singleton(s1_6), (0),
             strlen(s1_6, char_P_char_M_s1_6_9_at_L)))) ->
        (strcmp(s1_6, s2_6, char_P_char_M_s2_6_10_at_L,
         char_P_char_M_s1_6_9_at_L) = strcmp(s1_6, s2_6,
                                      char_P_char_M_s2_6_10_at_L,
                                      store(char_P_char_M_s1_6_9_at_L, tmp,
                                      tmpval))))))))))

axiom no_update_strlen_0 :
 (forall tmp:char_P pointer.
  (forall tmpval:int.
   (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
    (forall s_3:char_P pointer.
     ((not in_pset(tmp, pset_range_right(pset_singleton(s_3), (0)))) ->
      (strlen(s_3, char_P_char_M_s_3_8_at_L) = strlen(s_3,
                                               store(char_P_char_M_s_3_8_at_L,
                                               tmp, tmpval))))))))

axiom no_update_strncmp_0 :
 (forall tmp:char_P pointer.
  (forall tmpval:int.
   (forall char_P_char_M_s1_9_11_at_L:(char_P, int) memory.
    (forall char_P_char_M_s2_9_12_at_L:(char_P, int) memory.
     (forall n_10:int.
      (forall s2_9:char_P pointer.
       (forall s1_9:char_P pointer.
        ((not in_pset(tmp,
              pset_range(pset_singleton(s2_9), (0), sub_int(n_10, (1))))) ->
         (strncmp(s1_9, s2_9, n_10, char_P_char_M_s2_9_12_at_L,
          char_P_char_M_s1_9_11_at_L) = strncmp(s1_9, s2_9, n_10,
                                        store(char_P_char_M_s2_9_12_at_L,
                                        tmp, tmpval),
                                        char_P_char_M_s1_9_11_at_L))))))))))

axiom no_update_strncmp_1 :
 (forall tmp:char_P pointer.
  (forall tmpval:int.
   (forall char_P_char_M_s1_9_11_at_L:(char_P, int) memory.
    (forall char_P_char_M_s2_9_12_at_L:(char_P, int) memory.
     (forall n_10:int.
      (forall s2_9:char_P pointer.
       (forall s1_9:char_P pointer.
        ((not in_pset(tmp,
              pset_range(pset_singleton(s1_9), (0), sub_int(n_10, (1))))) ->
         (strncmp(s1_9, s2_9, n_10, char_P_char_M_s2_9_12_at_L,
          char_P_char_M_s1_9_11_at_L) = strncmp(s1_9, s2_9, n_10,
                                        char_P_char_M_s2_9_12_at_L,
                                        store(char_P_char_M_s1_9_11_at_L,
                                        tmp, tmpval)))))))))))

axiom no_update_wcscmp_0 :
 (forall tmp:unsigned_short_P pointer.
  (forall tmpval:int.
   (forall unsigned_short_P_unsigned_short_M_s1_11_15_at_L:
    (unsigned_short_P, int) memory.
    (forall unsigned_short_P_unsigned_short_M_s2_11_16_at_L:
     (unsigned_short_P, int) memory.
     (forall s2_11:unsigned_short_P pointer.
      (forall s1_11:unsigned_short_P pointer.
       ((not in_pset(tmp,
             pset_range(pset_singleton(s2_11), (0),
             wcslen(s2_11, unsigned_short_P_unsigned_short_M_s2_11_16_at_L)))) ->
        (wcscmp(s1_11, s2_11,
         unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
         unsigned_short_P_unsigned_short_M_s1_11_15_at_L) = wcscmp(s1_11,
                                                            s2_11,
                                                            store(unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
                                                            tmp, tmpval),
                                                            unsigned_short_P_unsigned_short_M_s1_11_15_at_L)))))))))

axiom no_update_wcscmp_1 :
 (forall tmp:unsigned_short_P pointer.
  (forall tmpval:int.
   (forall unsigned_short_P_unsigned_short_M_s1_11_15_at_L:
    (unsigned_short_P, int) memory.
    (forall unsigned_short_P_unsigned_short_M_s2_11_16_at_L:
     (unsigned_short_P, int) memory.
     (forall s2_11:unsigned_short_P pointer.
      (forall s1_11:unsigned_short_P pointer.
       ((not in_pset(tmp,
             pset_range(pset_singleton(s1_11), (0),
             wcslen(s1_11, unsigned_short_P_unsigned_short_M_s1_11_15_at_L)))) ->
        (wcscmp(s1_11, s2_11,
         unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
         unsigned_short_P_unsigned_short_M_s1_11_15_at_L) = wcscmp(s1_11,
                                                            s2_11,
                                                            unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
                                                            store(unsigned_short_P_unsigned_short_M_s1_11_15_at_L,
                                                            tmp, tmpval))))))))))

axiom no_update_wcslen_0 :
 (forall tmp:unsigned_short_P pointer.
  (forall tmpval:int.
   (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:
    (unsigned_short_P, int) memory.
    (forall s_17:unsigned_short_P pointer.
     ((not in_pset(tmp, pset_range_right(pset_singleton(s_17), (0)))) ->
      (wcslen(s_17, unsigned_short_P_unsigned_short_M_s_17_14_at_L) = 
      wcslen(s_17,
      store(unsigned_short_P_unsigned_short_M_s_17_14_at_L, tmp, tmpval))))))))

axiom no_update_wcsncmp_0 :
 (forall tmp:unsigned_short_P pointer.
  (forall tmpval:int.
   (forall unsigned_short_P_unsigned_short_M_s1_13_17_at_L:
    (unsigned_short_P, int) memory.
    (forall unsigned_short_P_unsigned_short_M_s2_13_18_at_L:
     (unsigned_short_P, int) memory.
     (forall n_12:int.
      (forall s2_13:unsigned_short_P pointer.
       (forall s1_13:unsigned_short_P pointer.
        ((not in_pset(tmp,
              pset_range(pset_singleton(s2_13), (0), sub_int(n_12, (1))))) ->
         (wcsncmp(s1_13, s2_13, n_12,
          unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
          unsigned_short_P_unsigned_short_M_s1_13_17_at_L) = wcsncmp(s1_13,
                                                             s2_13, n_12,
                                                             store(unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
                                                             tmp, tmpval),
                                                             unsigned_short_P_unsigned_short_M_s1_13_17_at_L))))))))))

axiom no_update_wcsncmp_1 :
 (forall tmp:unsigned_short_P pointer.
  (forall tmpval:int.
   (forall unsigned_short_P_unsigned_short_M_s1_13_17_at_L:
    (unsigned_short_P, int) memory.
    (forall unsigned_short_P_unsigned_short_M_s2_13_18_at_L:
     (unsigned_short_P, int) memory.
     (forall n_12:int.
      (forall s2_13:unsigned_short_P pointer.
       (forall s1_13:unsigned_short_P pointer.
        ((not in_pset(tmp,
              pset_range(pset_singleton(s1_13), (0), sub_int(n_12, (1))))) ->
         (wcsncmp(s1_13, s2_13, n_12,
          unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
          unsigned_short_P_unsigned_short_M_s1_13_17_at_L) = wcsncmp(s1_13,
                                                             s2_13, n_12,
                                                             unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
                                                             store(unsigned_short_P_unsigned_short_M_s1_13_17_at_L,
                                                             tmp, tmpval)))))))))))

axiom pointer_addr_of_char_P_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(char_P_of_pointer_address(p))))

axiom pointer_addr_of_char_xP_of_pointer_address :
 (forall p:unit pointer.
  (p = pointer_address(char_xP_of_pointer_address(p))))

axiom pointer_addr_of_int_P_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(int_P_of_pointer_address(p))))

logic unsigned_short_P_of_pointer_address: unit pointer -> unsigned_short_P pointer

axiom pointer_addr_of_unsigned_short_P_of_pointer_address :
 (forall p:unit pointer.
  (p = pointer_address(unsigned_short_P_of_pointer_address(p))))

logic void_P_of_pointer_address: unit pointer -> void_P pointer

axiom pointer_addr_of_void_P_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(void_P_of_pointer_address(p))))

predicate right_valid_struct_char_P(p:char_P pointer, b:int,
 char_P_alloc_table:char_P alloc_table) =
 (offset_max(char_P_alloc_table, p) >= b)

predicate right_valid_struct_char_xP(p:char_xP pointer, b:int,
 char_xP_alloc_table:char_xP alloc_table) =
 (offset_max(char_xP_alloc_table, p) >= b)

predicate right_valid_struct_int_P(p:int_P pointer, b:int,
 int_P_alloc_table:int_P alloc_table) =
 (offset_max(int_P_alloc_table, p) >= b)

predicate right_valid_struct_unsigned_short_P(p:unsigned_short_P pointer,
 b:int, unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 (offset_max(unsigned_short_P_alloc_table, p) >= b)

predicate right_valid_struct_void_P(p:void_P pointer, b:int,
 void_P_alloc_table:void_P alloc_table) =
 (offset_max(void_P_alloc_table, p) >= b)

axiom strchr_def :
 (forall char_P_char_M_s_15_13_at_L:(char_P, int) memory.
  (forall s_16:char_P pointer.
   (forall c_4:int.
    (eq_bool(strchr(s_16, c_4, char_P_char_M_s_15_13_at_L), true)
    <-> (exists i_13:int.
         (le_int((0), i_13)
         and (le_int(i_13, strlen(s_16, char_P_char_M_s_15_13_at_L))
             and eq_int(select(char_P_char_M_s_15_13_at_L, shift(s_16, i_13)),
                 c_4))))))))

axiom strcmp_range :
 (forall char_P_char_M_s2_6_10_at_L:(char_P, int) memory.
  (forall char_P_char_M_s1_6_9_at_L:(char_P, int) memory.
   (forall s1_7:char_P pointer.
    (forall s2_7:char_P pointer.
     (le_int(sub_int(neg_int((2147483647)), (1)),
      strcmp(s1_7, s2_7, char_P_char_M_s2_6_10_at_L,
      char_P_char_M_s1_6_9_at_L))
     and le_int(strcmp(s1_7, s2_7, char_P_char_M_s2_6_10_at_L,
                char_P_char_M_s1_6_9_at_L),
         (2147483647)))))))

axiom strcmp_zero :
 (forall char_P_char_M_s2_6_10_at_L:(char_P, int) memory.
  (forall char_P_char_M_s1_6_9_at_L:(char_P, int) memory.
   (forall s1_8:char_P pointer.
    (forall s2_8:char_P pointer.
     (eq_int(strcmp(s1_8, s2_8, char_P_char_M_s2_6_10_at_L,
             char_P_char_M_s1_6_9_at_L),
      (0))
     <-> (eq_int(strlen(s1_8, char_P_char_M_s1_6_9_at_L),
          strlen(s2_8, char_P_char_M_s2_6_10_at_L))
         and (forall i_11:int.
              ((le_int((0), i_11)
               and le_int(i_11, strlen(s1_8, char_P_char_M_s1_6_9_at_L))) ->
               eq_int(select(char_P_char_M_s1_6_9_at_L, shift(s1_8, i_11)),
               select(char_P_char_M_s2_6_10_at_L, shift(s2_8, i_11)))))))))))

predicate strict_valid_root_char_P(p:char_P pointer, a:int, b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) = a)
 and (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_root_char_xP(p:char_xP pointer, a:int, b:int,
 char_xP_alloc_table:char_xP alloc_table) =
 ((offset_min(char_xP_alloc_table, p) = a)
 and (offset_max(char_xP_alloc_table, p) = b))

predicate strict_valid_root_int_P(p:int_P pointer, a:int, b:int,
 int_P_alloc_table:int_P alloc_table) =
 ((offset_min(int_P_alloc_table, p) = a)
 and (offset_max(int_P_alloc_table, p) = b))

predicate strict_valid_root_unsigned_short_P(p:unsigned_short_P pointer,
 a:int, b:int, unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 ((offset_min(unsigned_short_P_alloc_table, p) = a)
 and (offset_max(unsigned_short_P_alloc_table, p) = b))

predicate strict_valid_root_void_P(p:void_P pointer, a:int, b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) = a)
 and (offset_max(void_P_alloc_table, p) = b))

predicate strict_valid_struct_char_P(p:char_P pointer, a:int, b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) = a)
 and (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_struct_char_xP(p:char_xP pointer, a:int, b:int,
 char_xP_alloc_table:char_xP alloc_table) =
 ((offset_min(char_xP_alloc_table, p) = a)
 and (offset_max(char_xP_alloc_table, p) = b))

predicate strict_valid_struct_int_P(p:int_P pointer, a:int, b:int,
 int_P_alloc_table:int_P alloc_table) =
 ((offset_min(int_P_alloc_table, p) = a)
 and (offset_max(int_P_alloc_table, p) = b))

predicate strict_valid_struct_unsigned_short_P(p:unsigned_short_P pointer,
 a:int, b:int, unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 ((offset_min(unsigned_short_P_alloc_table, p) = a)
 and (offset_max(unsigned_short_P_alloc_table, p) = b))

predicate strict_valid_struct_void_P(p:void_P pointer, a:int, b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) = a)
 and (offset_max(void_P_alloc_table, p) = b))

axiom strlen_at_null :
 (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
  (forall s_8:char_P pointer.
   (le_int((0), strlen(s_8, char_P_char_M_s_3_8_at_L)) ->
    eq_int(select(char_P_char_M_s_3_8_at_L,
           shift(s_8, strlen(s_8, char_P_char_M_s_3_8_at_L))),
    (0)))))

axiom strlen_before_null :
 (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
  (forall s_7:char_P pointer.
   (forall i_4:int.
    ((le_int((0), i_4)
     and lt_int(i_4, strlen(s_7, char_P_char_M_s_3_8_at_L))) ->
     neq_int(select(char_P_char_M_s_3_8_at_L, shift(s_7, i_4)), (0))))))

axiom strlen_create :
 (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
  (forall s_13:char_P pointer.
   (forall i_9:int.
    ((le_int((0), i_9)
     and (le_int(i_9, (2147483647))
         and eq_int(select(char_P_char_M_s_3_8_at_L, shift(s_13, i_9)), (0)))) ->
     (le_int((0), strlen(s_13, char_P_char_M_s_3_8_at_L))
     and le_int(strlen(s_13, char_P_char_M_s_3_8_at_L), i_9))))))

axiom strlen_create_shift :
 (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
  (forall s_14:char_P pointer.
   (forall i_10:int.
    (forall k:int.
     ((le_int((0), k)
      and (le_int(k, i_10)
          and (le_int(i_10, (2147483647))
              and eq_int(select(char_P_char_M_s_3_8_at_L, shift(s_14, i_10)),
                  (0))))) ->
      (le_int((0), strlen(shift(s_14, k), char_P_char_M_s_3_8_at_L))
      and le_int(strlen(shift(s_14, k), char_P_char_M_s_3_8_at_L),
          sub_int(i_10, k))))))))

axiom strlen_neg :
 (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
  (forall s_5:char_P pointer.
   ((forall i_3:int.
     ((le_int((0), i_3) and le_int(i_3, (2147483647))) ->
      neq_int(select(char_P_char_M_s_3_8_at_L, shift(s_5, i_3)), (0)))) ->
    lt_int(strlen(s_5, char_P_char_M_s_3_8_at_L), (0)))))

axiom strlen_not_zero :
 (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
  (forall s_9:char_P pointer.
   (forall i_5:int.
    ((le_int((0), i_5)
     and (le_int(i_5, strlen(s_9, char_P_char_M_s_3_8_at_L))
         and neq_int(select(char_P_char_M_s_3_8_at_L, shift(s_9, i_5)), (0)))) ->
     lt_int(i_5, strlen(s_9, char_P_char_M_s_3_8_at_L))))))

axiom strlen_pos_or_null :
 (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
  (forall s_4:char_P pointer.
   (forall i_2:int.
    ((le_int((0), i_2)
     and (le_int(i_2, (2147483647))
         and ((forall j:int.
               ((le_int((0), j) and lt_int(j, i_2)) ->
                neq_int(select(char_P_char_M_s_3_8_at_L, shift(s_4, j)), (0))))
             and eq_int(select(char_P_char_M_s_3_8_at_L, shift(s_4, i_2)),
                 (0))))) ->
     eq_int(strlen(s_4, char_P_char_M_s_3_8_at_L), i_2)))))

axiom strlen_range :
 (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
  (forall s_6:char_P pointer.
   le_int(strlen(s_6, char_P_char_M_s_3_8_at_L), (2147483647))))

axiom strlen_shift :
 (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
  (forall s_12:char_P pointer.
   (forall i_8:int.
    ((le_int((0), i_8)
     and le_int(i_8, strlen(s_12, char_P_char_M_s_3_8_at_L))) ->
     eq_int(strlen(shift(s_12, i_8), char_P_char_M_s_3_8_at_L),
     sub_int(strlen(s_12, char_P_char_M_s_3_8_at_L), i_8))))))

axiom strlen_sup :
 (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
  (forall s_11:char_P pointer.
   (forall i_7:int.
    ((le_int((0), i_7)
     and eq_int(select(char_P_char_M_s_3_8_at_L, shift(s_11, i_7)), (0))) ->
     (le_int((0), strlen(s_11, char_P_char_M_s_3_8_at_L))
     and le_int(strlen(s_11, char_P_char_M_s_3_8_at_L), i_7))))))

axiom strlen_zero :
 (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
  (forall s_10:char_P pointer.
   (forall i_6:int.
    ((le_int((0), i_6)
     and (le_int(i_6, strlen(s_10, char_P_char_M_s_3_8_at_L))
         and eq_int(select(char_P_char_M_s_3_8_at_L, shift(s_10, i_6)), (0)))) ->
     eq_int(i_6, strlen(s_10, char_P_char_M_s_3_8_at_L))))))

axiom strncmp_zero :
 (forall char_P_char_M_s2_9_12_at_L:(char_P, int) memory.
  (forall char_P_char_M_s1_9_11_at_L:(char_P, int) memory.
   (forall s1_10:char_P pointer.
    (forall s2_10:char_P pointer.
     (forall n_11:int.
      (eq_int(strncmp(s1_10, s2_10, n_11, char_P_char_M_s2_9_12_at_L,
              char_P_char_M_s1_9_11_at_L),
       (0))
      <-> ((lt_int(strlen(s1_10, char_P_char_M_s1_9_11_at_L), n_11)
           and eq_int(strcmp(s1_10, s2_10, char_P_char_M_s2_9_12_at_L,
                      char_P_char_M_s1_9_11_at_L),
               (0)))
          or (forall i_12:int.
              ((le_int((0), i_12) and lt_int(i_12, n_11)) ->
               eq_int(select(char_P_char_M_s1_9_11_at_L, shift(s1_10, i_12)),
               select(char_P_char_M_s2_9_12_at_L, shift(s2_10, i_12))))))))))))

logic unsigned_short_P_tag:  -> unsigned_short_P tag_id

axiom unsigned_short_P_int : (int_of_tag(unsigned_short_P_tag) = (1))

axiom unsigned_short_P_of_pointer_address_of_pointer_addr :
 (forall p:unsigned_short_P pointer.
  (p = unsigned_short_P_of_pointer_address(pointer_address(p))))

axiom unsigned_short_P_parenttag_bottom :
 parenttag(unsigned_short_P_tag, bottom_tag)

axiom unsigned_short_P_tags :
 (forall x:unsigned_short_P pointer.
  (forall unsigned_short_P_tag_table:unsigned_short_P tag_table.
   instanceof(unsigned_short_P_tag_table, x, unsigned_short_P_tag)))

predicate valid_string(s_28:char_P pointer,
 char_P_s_28_19_alloc_table_at_L:char_P alloc_table,
 char_P_char_M_s_28_19_at_L:(char_P, int) memory) =
 (le_int((0), strlen(s_28, char_P_char_M_s_28_19_at_L))
 and (le_int(offset_min(char_P_s_28_19_alloc_table_at_L, s_28), (0))
     and ge_int(offset_max(char_P_s_28_19_alloc_table_at_L, s_28),
         strlen(s_28, char_P_char_M_s_28_19_at_L))))

predicate valid___string_something(char_P___string_something_1_alloc_table:char_P alloc_table,
 char_P_char_M___string_something_1:(char_P, int) memory) =
 (valid_string(__string_something, char_P___string_something_1_alloc_table,
  char_P_char_M___string_something_1)
 and eq_int(strlen(__string_something, char_P_char_M___string_something_1),
     (9)))

predicate valid___string_something_0(char_P___string_something_1_alloc_table:char_P alloc_table) =
 (le_int(offset_min(char_P___string_something_1_alloc_table,
         __string_something),
  (0))
 and ge_int(offset_max(char_P___string_something_1_alloc_table,
            __string_something),
     (9)))

predicate valid_a(int_P_a_2_alloc_table:int_P alloc_table) =
 (le_int(offset_min(int_P_a_2_alloc_table, a), (0))
 and ge_int(offset_max(int_P_a_2_alloc_table, a), (11)))

predicate valid_bitvector_struct_char_P(p:unit pointer, a:int, b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_char_xP(p:unit pointer, a:int, b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_int_P(p:unit pointer, a:int, b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_unsigned_short_P(p:unit pointer, a:int,
 b:int, bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_void_P(p:unit pointer, a:int, b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_c(char_xP_c_3_alloc_table:char_xP alloc_table) =
 (le_int(offset_min(char_xP_c_3_alloc_table, c), (0))
 and ge_int(offset_max(char_xP_c_3_alloc_table, c), (11)))

predicate valid_root_char_P(p:char_P pointer, a:int, b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) <= a)
 and (offset_max(char_P_alloc_table, p) >= b))

predicate valid_root_char_xP(p:char_xP pointer, a:int, b:int,
 char_xP_alloc_table:char_xP alloc_table) =
 ((offset_min(char_xP_alloc_table, p) <= a)
 and (offset_max(char_xP_alloc_table, p) >= b))

predicate valid_root_int_P(p:int_P pointer, a:int, b:int,
 int_P_alloc_table:int_P alloc_table) =
 ((offset_min(int_P_alloc_table, p) <= a)
 and (offset_max(int_P_alloc_table, p) >= b))

predicate valid_root_unsigned_short_P(p:unsigned_short_P pointer, a:int,
 b:int, unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 ((offset_min(unsigned_short_P_alloc_table, p) <= a)
 and (offset_max(unsigned_short_P_alloc_table, p) >= b))

predicate valid_root_void_P(p:void_P pointer, a:int, b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) <= a)
 and (offset_max(void_P_alloc_table, p) >= b))

predicate valid_string_or_null(s_29:char_P pointer,
 char_P_s_29_20_alloc_table_at_L:char_P alloc_table,
 char_P_char_M_s_29_20_at_L:(char_P, int) memory) =
 ((s_29 = null)
 or valid_string(s_29, char_P_s_29_20_alloc_table_at_L,
    char_P_char_M_s_29_20_at_L))

predicate valid_struct_char_P(p:char_P pointer, a:int, b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) <= a)
 and (offset_max(char_P_alloc_table, p) >= b))

predicate valid_struct_char_xP(p:char_xP pointer, a:int, b:int,
 char_xP_alloc_table:char_xP alloc_table) =
 ((offset_min(char_xP_alloc_table, p) <= a)
 and (offset_max(char_xP_alloc_table, p) >= b))

predicate valid_struct_int_P(p:int_P pointer, a:int, b:int,
 int_P_alloc_table:int_P alloc_table) =
 ((offset_min(int_P_alloc_table, p) <= a)
 and (offset_max(int_P_alloc_table, p) >= b))

predicate valid_struct_unsigned_short_P(p:unsigned_short_P pointer, a:int,
 b:int, unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 ((offset_min(unsigned_short_P_alloc_table, p) <= a)
 and (offset_max(unsigned_short_P_alloc_table, p) >= b))

predicate valid_struct_void_P(p:void_P pointer, a:int, b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) <= a)
 and (offset_max(void_P_alloc_table, p) >= b))

predicate valid_wstring(s_30:unsigned_short_P pointer,
 unsigned_short_P_s_30_21_alloc_table_at_L:unsigned_short_P alloc_table,
 unsigned_short_P_unsigned_short_M_s_30_21_at_L:(unsigned_short_P, int) memory) =
 (le_int((0), wcslen(s_30, unsigned_short_P_unsigned_short_M_s_30_21_at_L))
 and (le_int(offset_min(unsigned_short_P_s_30_21_alloc_table_at_L, s_30),
      (0))
     and ge_int(offset_max(unsigned_short_P_s_30_21_alloc_table_at_L, s_30),
         wcslen(s_30, unsigned_short_P_unsigned_short_M_s_30_21_at_L))))

predicate valid_wstring_or_null(s_31:unsigned_short_P pointer,
 unsigned_short_P_s_31_22_alloc_table_at_L:unsigned_short_P alloc_table,
 unsigned_short_P_unsigned_short_M_s_31_22_at_L:(unsigned_short_P, int) memory) =
 ((s_31 = null)
 or valid_wstring(s_31, unsigned_short_P_s_31_22_alloc_table_at_L,
    unsigned_short_P_unsigned_short_M_s_31_22_at_L))

logic void_P_tag:  -> void_P tag_id

axiom void_P_int : (int_of_tag(void_P_tag) = (1))

axiom void_P_of_pointer_address_of_pointer_addr :
 (forall p:void_P pointer.
  (p = void_P_of_pointer_address(pointer_address(p))))

axiom void_P_parenttag_bottom : parenttag(void_P_tag, bottom_tag)

axiom void_P_tags :
 (forall x:void_P pointer.
  (forall void_P_tag_table:void_P tag_table.
   instanceof(void_P_tag_table, x, void_P_tag)))

axiom wcscmp_zero :
 (forall unsigned_short_P_unsigned_short_M_s2_11_16_at_L:
  (unsigned_short_P, int) memory.
  (forall unsigned_short_P_unsigned_short_M_s1_11_15_at_L:
   (unsigned_short_P, int) memory.
   (forall s1_12:unsigned_short_P pointer.
    (forall s2_12:unsigned_short_P pointer.
     (eq_int(wcscmp(s1_12, s2_12,
             unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
             unsigned_short_P_unsigned_short_M_s1_11_15_at_L),
      (0))
     <-> (eq_int(wcslen(s1_12,
                 unsigned_short_P_unsigned_short_M_s1_11_15_at_L),
          wcslen(s2_12, unsigned_short_P_unsigned_short_M_s2_11_16_at_L))
         and (forall i_23:int.
              ((le_int((0), i_23)
               and le_int(i_23,
                   wcslen(s1_12,
                   unsigned_short_P_unsigned_short_M_s1_11_15_at_L))) ->
               eq_int(select(unsigned_short_P_unsigned_short_M_s1_11_15_at_L,
                      shift(s1_12, i_23)),
               select(unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
               shift(s2_12, i_23)))))))))))

axiom wcslen_at_null :
 (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:
  (unsigned_short_P, int) memory.
  (forall s_21:unsigned_short_P pointer.
   (le_int((0), wcslen(s_21, unsigned_short_P_unsigned_short_M_s_17_14_at_L)) ->
    eq_int(select(unsigned_short_P_unsigned_short_M_s_17_14_at_L,
           shift(s_21,
           wcslen(s_21, unsigned_short_P_unsigned_short_M_s_17_14_at_L))),
    (0)))))

axiom wcslen_before_null :
 (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:
  (unsigned_short_P, int) memory.
  (forall s_20:unsigned_short_P pointer.
   (forall i_16:int.
    ((le_int((0), i_16)
     and lt_int(i_16,
         wcslen(s_20, unsigned_short_P_unsigned_short_M_s_17_14_at_L))) ->
     neq_int(select(unsigned_short_P_unsigned_short_M_s_17_14_at_L,
             shift(s_20, i_16)),
     (0))))))

axiom wcslen_create :
 (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:
  (unsigned_short_P, int) memory.
  (forall s_26:unsigned_short_P pointer.
   (forall i_21:int.
    ((le_int((0), i_21)
     and eq_int(select(unsigned_short_P_unsigned_short_M_s_17_14_at_L,
                shift(s_26, i_21)),
         (0))) ->
     (le_int((0),
      wcslen(s_26, unsigned_short_P_unsigned_short_M_s_17_14_at_L))
     and le_int(wcslen(s_26, unsigned_short_P_unsigned_short_M_s_17_14_at_L),
         i_21))))))

axiom wcslen_create_shift :
 (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:
  (unsigned_short_P, int) memory.
  (forall s_27:unsigned_short_P pointer.
   (forall i_22:int.
    (forall k_2:int.
     ((le_int((0), k_2)
      and (le_int(k_2, i_22)
          and eq_int(select(unsigned_short_P_unsigned_short_M_s_17_14_at_L,
                     shift(s_27, i_22)),
              (0)))) ->
      (le_int((0),
       wcslen(shift(s_27, k_2),
       unsigned_short_P_unsigned_short_M_s_17_14_at_L))
      and le_int(wcslen(shift(s_27, k_2),
                 unsigned_short_P_unsigned_short_M_s_17_14_at_L),
          sub_int(i_22, k_2))))))))

axiom wcslen_neg :
 (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:
  (unsigned_short_P, int) memory.
  (forall s_19:unsigned_short_P pointer.
   ((forall i_15:int.
     (le_int((0), i_15) ->
      neq_int(select(unsigned_short_P_unsigned_short_M_s_17_14_at_L,
              shift(s_19, i_15)),
      (0)))) ->
    lt_int(wcslen(s_19, unsigned_short_P_unsigned_short_M_s_17_14_at_L), (0)))))

axiom wcslen_not_zero :
 (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:
  (unsigned_short_P, int) memory.
  (forall s_22:unsigned_short_P pointer.
   (forall i_17:int.
    ((le_int((0), i_17)
     and (le_int(i_17,
          wcslen(s_22, unsigned_short_P_unsigned_short_M_s_17_14_at_L))
         and neq_int(select(unsigned_short_P_unsigned_short_M_s_17_14_at_L,
                     shift(s_22, i_17)),
             (0)))) ->
     lt_int(i_17,
     wcslen(s_22, unsigned_short_P_unsigned_short_M_s_17_14_at_L))))))

axiom wcslen_pos_or_null :
 (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:
  (unsigned_short_P, int) memory.
  (forall s_18:unsigned_short_P pointer.
   (forall i_14:int.
    ((le_int((0), i_14)
     and ((forall j_0:int.
           ((le_int((0), j_0) and lt_int(j_0, i_14)) ->
            neq_int(select(unsigned_short_P_unsigned_short_M_s_17_14_at_L,
                    shift(s_18, j_0)),
            (0))))
         and eq_int(select(unsigned_short_P_unsigned_short_M_s_17_14_at_L,
                    shift(s_18, i_14)),
             (0)))) ->
     eq_int(wcslen(s_18, unsigned_short_P_unsigned_short_M_s_17_14_at_L),
     i_14)))))

axiom wcslen_shift :
 (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:
  (unsigned_short_P, int) memory.
  (forall s_25:unsigned_short_P pointer.
   (forall i_20:int.
    ((le_int((0), i_20)
     and le_int(i_20,
         wcslen(s_25, unsigned_short_P_unsigned_short_M_s_17_14_at_L))) ->
     eq_int(wcslen(shift(s_25, i_20),
            unsigned_short_P_unsigned_short_M_s_17_14_at_L),
     sub_int(wcslen(s_25, unsigned_short_P_unsigned_short_M_s_17_14_at_L),
     i_20))))))

axiom wcslen_sup :
 (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:
  (unsigned_short_P, int) memory.
  (forall s_24:unsigned_short_P pointer.
   (forall i_19:int.
    ((le_int((0), i_19)
     and eq_int(select(unsigned_short_P_unsigned_short_M_s_17_14_at_L,
                shift(s_24, i_19)),
         (0))) ->
     (le_int((0),
      wcslen(s_24, unsigned_short_P_unsigned_short_M_s_17_14_at_L))
     and le_int(wcslen(s_24, unsigned_short_P_unsigned_short_M_s_17_14_at_L),
         i_19))))))

axiom wcslen_zero :
 (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:
  (unsigned_short_P, int) memory.
  (forall s_23:unsigned_short_P pointer.
   (forall i_18:int.
    ((le_int((0), i_18)
     and (le_int(i_18,
          wcslen(s_23, unsigned_short_P_unsigned_short_M_s_17_14_at_L))
         and eq_int(select(unsigned_short_P_unsigned_short_M_s_17_14_at_L,
                    shift(s_23, i_18)),
             (0)))) ->
     eq_int(i_18,
     wcslen(s_23, unsigned_short_P_unsigned_short_M_s_17_14_at_L))))))

axiom wcsncmp_zero :
 (forall unsigned_short_P_unsigned_short_M_s2_13_18_at_L:
  (unsigned_short_P, int) memory.
  (forall unsigned_short_P_unsigned_short_M_s1_13_17_at_L:
   (unsigned_short_P, int) memory.
   (forall s1_14:unsigned_short_P pointer.
    (forall s2_14:unsigned_short_P pointer.
     (forall n_13:int.
      (eq_int(wcsncmp(s1_14, s2_14, n_13,
              unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
              unsigned_short_P_unsigned_short_M_s1_13_17_at_L),
       (0))
      <-> ((lt_int(wcslen(s1_14,
                   unsigned_short_P_unsigned_short_M_s1_13_17_at_L),
            n_13)
           and eq_int(wcscmp(s1_14, s2_14,
                      unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
                      unsigned_short_P_unsigned_short_M_s1_13_17_at_L),
               (0)))
          or (forall i_24:int.
              ((le_int((0), i_24) and lt_int(i_24, n_13)) ->
               eq_int(select(unsigned_short_P_unsigned_short_M_s1_13_17_at_L,
                      shift(s1_14, i_24)),
               select(unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
               shift(s2_14, i_24))))))))))))

parameter alloc_bitvector_struct_char_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_char_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_char_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_char_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_char_xP :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_char_xP(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_char_xP_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_char_xP(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_int_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_int_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_int_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_int_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_unsigned_short_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_unsigned_short_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_unsigned_short_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_unsigned_short_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_void_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_void_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_void_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_void_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter char_P_alloc_table : char_P alloc_table ref

parameter char_P_tag_table : char_P tag_table ref

parameter alloc_struct_char_P :
 n:int ->
  char_P_alloc_table:char_P alloc_table ref ->
   char_P_tag_table:char_P tag_table ref ->
    { } char_P pointer writes char_P_alloc_table,char_P_tag_table
    { (strict_valid_struct_char_P(result, (0), sub_int(n, (1)),
       char_P_alloc_table)
      and (alloc_extends(char_P_alloc_table@, char_P_alloc_table)
          and (alloc_fresh(char_P_alloc_table@, result, n)
              and instanceof(char_P_tag_table, result, char_P_tag)))) }

parameter alloc_struct_char_P_requires :
 n:int ->
  char_P_alloc_table:char_P alloc_table ref ->
   char_P_tag_table:char_P tag_table ref ->
    { ge_int(n, (0))} char_P pointer
    writes char_P_alloc_table,char_P_tag_table
    { (strict_valid_struct_char_P(result, (0), sub_int(n, (1)),
       char_P_alloc_table)
      and (alloc_extends(char_P_alloc_table@, char_P_alloc_table)
          and (alloc_fresh(char_P_alloc_table@, result, n)
              and instanceof(char_P_tag_table, result, char_P_tag)))) }

parameter char_xP_alloc_table : char_xP alloc_table ref

parameter char_xP_tag_table : char_xP tag_table ref

parameter alloc_struct_char_xP :
 n:int ->
  char_xP_alloc_table:char_xP alloc_table ref ->
   char_xP_tag_table:char_xP tag_table ref ->
    { } char_xP pointer writes char_xP_alloc_table,char_xP_tag_table
    { (strict_valid_struct_char_xP(result, (0), sub_int(n, (1)),
       char_xP_alloc_table)
      and (alloc_extends(char_xP_alloc_table@, char_xP_alloc_table)
          and (alloc_fresh(char_xP_alloc_table@, result, n)
              and instanceof(char_xP_tag_table, result, char_xP_tag)))) }

parameter alloc_struct_char_xP_requires :
 n:int ->
  char_xP_alloc_table:char_xP alloc_table ref ->
   char_xP_tag_table:char_xP tag_table ref ->
    { ge_int(n, (0))} char_xP pointer
    writes char_xP_alloc_table,char_xP_tag_table
    { (strict_valid_struct_char_xP(result, (0), sub_int(n, (1)),
       char_xP_alloc_table)
      and (alloc_extends(char_xP_alloc_table@, char_xP_alloc_table)
          and (alloc_fresh(char_xP_alloc_table@, result, n)
              and instanceof(char_xP_tag_table, result, char_xP_tag)))) }

parameter int_P_alloc_table : int_P alloc_table ref

parameter int_P_tag_table : int_P tag_table ref

parameter alloc_struct_int_P :
 n:int ->
  int_P_alloc_table:int_P alloc_table ref ->
   int_P_tag_table:int_P tag_table ref ->
    { } int_P pointer writes int_P_alloc_table,int_P_tag_table
    { (strict_valid_struct_int_P(result, (0), sub_int(n, (1)),
       int_P_alloc_table)
      and (alloc_extends(int_P_alloc_table@, int_P_alloc_table)
          and (alloc_fresh(int_P_alloc_table@, result, n)
              and instanceof(int_P_tag_table, result, int_P_tag)))) }

parameter alloc_struct_int_P_requires :
 n:int ->
  int_P_alloc_table:int_P alloc_table ref ->
   int_P_tag_table:int_P tag_table ref ->
    { ge_int(n, (0))} int_P pointer writes int_P_alloc_table,int_P_tag_table
    { (strict_valid_struct_int_P(result, (0), sub_int(n, (1)),
       int_P_alloc_table)
      and (alloc_extends(int_P_alloc_table@, int_P_alloc_table)
          and (alloc_fresh(int_P_alloc_table@, result, n)
              and instanceof(int_P_tag_table, result, int_P_tag)))) }

parameter unsigned_short_P_alloc_table : unsigned_short_P alloc_table ref

parameter unsigned_short_P_tag_table : unsigned_short_P tag_table ref

parameter alloc_struct_unsigned_short_P :
 n:int ->
  unsigned_short_P_alloc_table:unsigned_short_P alloc_table ref ->
   unsigned_short_P_tag_table:unsigned_short_P tag_table ref ->
    { } unsigned_short_P pointer
    writes unsigned_short_P_alloc_table,unsigned_short_P_tag_table
    { (strict_valid_struct_unsigned_short_P(result, (0), sub_int(n, (1)),
       unsigned_short_P_alloc_table)
      and (alloc_extends(unsigned_short_P_alloc_table@,
           unsigned_short_P_alloc_table)
          and (alloc_fresh(unsigned_short_P_alloc_table@, result, n)
              and instanceof(unsigned_short_P_tag_table, result,
                  unsigned_short_P_tag)))) }

parameter alloc_struct_unsigned_short_P_requires :
 n:int ->
  unsigned_short_P_alloc_table:unsigned_short_P alloc_table ref ->
   unsigned_short_P_tag_table:unsigned_short_P tag_table ref ->
    { ge_int(n, (0))} unsigned_short_P pointer
    writes unsigned_short_P_alloc_table,unsigned_short_P_tag_table
    { (strict_valid_struct_unsigned_short_P(result, (0), sub_int(n, (1)),
       unsigned_short_P_alloc_table)
      and (alloc_extends(unsigned_short_P_alloc_table@,
           unsigned_short_P_alloc_table)
          and (alloc_fresh(unsigned_short_P_alloc_table@, result, n)
              and instanceof(unsigned_short_P_tag_table, result,
                  unsigned_short_P_tag)))) }

parameter void_P_alloc_table : void_P alloc_table ref

parameter void_P_tag_table : void_P tag_table ref

parameter alloc_struct_void_P :
 n:int ->
  void_P_alloc_table:void_P alloc_table ref ->
   void_P_tag_table:void_P tag_table ref ->
    { } void_P pointer writes void_P_alloc_table,void_P_tag_table
    { (strict_valid_struct_void_P(result, (0), sub_int(n, (1)),
       void_P_alloc_table)
      and (alloc_extends(void_P_alloc_table@, void_P_alloc_table)
          and (alloc_fresh(void_P_alloc_table@, result, n)
              and instanceof(void_P_tag_table, result, void_P_tag)))) }

parameter alloc_struct_void_P_requires :
 n:int ->
  void_P_alloc_table:void_P alloc_table ref ->
   void_P_tag_table:void_P tag_table ref ->
    { ge_int(n, (0))} void_P pointer
    writes void_P_alloc_table,void_P_tag_table
    { (strict_valid_struct_void_P(result, (0), sub_int(n, (1)),
       void_P_alloc_table)
      and (alloc_extends(void_P_alloc_table@, void_P_alloc_table)
          and (alloc_fresh(void_P_alloc_table@, result, n)
              and instanceof(void_P_tag_table, result, void_P_tag)))) }

parameter int_P_a_2_alloc_table : int_P alloc_table ref

parameter char_xP_c_3_alloc_table : char_xP alloc_table ref

parameter char_P_c_75_alloc_table : char_P alloc_table ref

parameter char_P___string_something_1_alloc_table : char_P alloc_table ref

parameter char_P_char_M_c_75 : (char_P, int) memory ref

parameter char_P_char_M___string_something_1 : (char_P, int) memory ref

parameter char_xP_char_xM_c_3 : (char_xP, char_P pointer) memory ref

parameter assign_char :
 tt:unit ->
  { } unit
  reads char_P___string_something_1_alloc_table,char_P_c_75_alloc_table,char_P_char_M___string_something_1,char_P_char_M_c_75,char_xP_c_3_alloc_table,int_P_a_2_alloc_table
  writes char_xP_char_xM_c_3
  { ((JC_123:
     ((JC_119:
      valid___string_something(char_P___string_something_1_alloc_table,
      char_P_char_M___string_something_1))
     and ((JC_120:
          valid___string_something_0(char_P___string_something_1_alloc_table))
         and ((JC_121: valid_a(int_P_a_2_alloc_table))
             and (JC_122: valid_c(char_xP_c_3_alloc_table))))))
    and (JC_113:
        not_assigns(char_xP_c_3_alloc_table@, char_xP_char_xM_c_3@,
        char_xP_char_xM_c_3, pset_all(pset_singleton(c@))))) }

parameter assign_char_requires :
 tt:unit ->
  { (JC_102:
    ((JC_98:
     valid___string_something(char_P___string_something_1_alloc_table,
     char_P_char_M___string_something_1))
    and ((JC_99:
         valid___string_something_0(char_P___string_something_1_alloc_table))
        and ((JC_100: valid_a(int_P_a_2_alloc_table))
            and (JC_101: valid_c(char_xP_c_3_alloc_table))))))}
  unit
  reads char_P___string_something_1_alloc_table,char_P_c_75_alloc_table,char_P_char_M___string_something_1,char_P_char_M_c_75,char_xP_c_3_alloc_table,int_P_a_2_alloc_table
  writes char_xP_char_xM_c_3
  { ((JC_123:
     ((JC_119:
      valid___string_something(char_P___string_something_1_alloc_table,
      char_P_char_M___string_something_1))
     and ((JC_120:
          valid___string_something_0(char_P___string_something_1_alloc_table))
         and ((JC_121: valid_a(int_P_a_2_alloc_table))
             and (JC_122: valid_c(char_xP_c_3_alloc_table))))))
    and (JC_113:
        not_assigns(char_xP_c_3_alloc_table@, char_xP_char_xM_c_3@,
        char_xP_char_xM_c_3, pset_all(pset_singleton(c@))))) }

parameter int_P_int_M_a_2 : (int_P, int) memory ref

parameter assign_int :
 tt:unit ->
  { } unit
  reads char_P___string_something_1_alloc_table,char_P_char_M___string_something_1,char_xP_c_3_alloc_table,int_P_a_2_alloc_table
  writes int_P_int_M_a_2
  { ((JC_84:
     ((JC_80:
      valid___string_something(char_P___string_something_1_alloc_table,
      char_P_char_M___string_something_1))
     and ((JC_81:
          valid___string_something_0(char_P___string_something_1_alloc_table))
         and ((JC_82: valid_a(int_P_a_2_alloc_table))
             and (JC_83: valid_c(char_xP_c_3_alloc_table))))))
    and (JC_74:
        not_assigns(int_P_a_2_alloc_table@, int_P_int_M_a_2@,
        int_P_int_M_a_2, pset_all(pset_singleton(a@))))) }

parameter assign_int_requires :
 tt:unit ->
  { (JC_63:
    ((JC_59:
     valid___string_something(char_P___string_something_1_alloc_table,
     char_P_char_M___string_something_1))
    and ((JC_60:
         valid___string_something_0(char_P___string_something_1_alloc_table))
        and ((JC_61: valid_a(int_P_a_2_alloc_table))
            and (JC_62: valid_c(char_xP_c_3_alloc_table))))))}
  unit
  reads char_P___string_something_1_alloc_table,char_P_char_M___string_something_1,char_xP_c_3_alloc_table,int_P_a_2_alloc_table
  writes int_P_int_M_a_2
  { ((JC_84:
     ((JC_80:
      valid___string_something(char_P___string_something_1_alloc_table,
      char_P_char_M___string_something_1))
     and ((JC_81:
          valid___string_something_0(char_P___string_something_1_alloc_table))
         and ((JC_82: valid_a(int_P_a_2_alloc_table))
             and (JC_83: valid_c(char_xP_c_3_alloc_table))))))
    and (JC_74:
        not_assigns(int_P_a_2_alloc_table@, int_P_int_M_a_2@,
        int_P_int_M_a_2, pset_all(pset_singleton(a@))))) }

parameter foo :
 a_0:int_P pointer ->
  aLength:int ->
   int_P_int_M_a_0_26:(int_P, int) memory ref ->
    int_P_a_0_26_alloc_table:int_P alloc_table ->
     { } unit
     reads char_P___string_something_1_alloc_table,char_P_char_M___string_something_1,char_xP_c_3_alloc_table,int_P_a_2_alloc_table
     writes int_P_int_M_a_0_26
     { ((JC_204:
        ((JC_200:
         valid___string_something(char_P___string_something_1_alloc_table,
         char_P_char_M___string_something_1))
        and ((JC_201:
             valid___string_something_0(char_P___string_something_1_alloc_table))
            and ((JC_202: valid_a(int_P_a_2_alloc_table))
                and (JC_203: valid_c(char_xP_c_3_alloc_table))))))
       and (JC_194:
           not_assigns(int_P_a_0_26_alloc_table@, int_P_int_M_a_0_26@,
           int_P_int_M_a_0_26, pset_all(pset_singleton(a_0@))))) }

parameter foo_requires :
 a_0:int_P pointer ->
  aLength:int ->
   int_P_int_M_a_0_26:(int_P, int) memory ref ->
    int_P_a_0_26_alloc_table:int_P alloc_table ->
     { (JC_180:
       ((JC_175:
        ((JC_173: le_int(offset_min(int_P_a_0_26_alloc_table, a_0), (0)))
        and (JC_174:
            ge_int(offset_max(int_P_a_0_26_alloc_table, a_0),
            sub_int(aLength, (1))))))
       and ((JC_176:
            valid___string_something(char_P___string_something_1_alloc_table,
            char_P_char_M___string_something_1))
           and ((JC_177:
                valid___string_something_0(char_P___string_something_1_alloc_table))
               and ((JC_178: valid_a(int_P_a_2_alloc_table))
                   and (JC_179: valid_c(char_xP_c_3_alloc_table)))))))}
     unit
     reads char_P___string_something_1_alloc_table,char_P_char_M___string_something_1,char_xP_c_3_alloc_table,int_P_a_2_alloc_table
     writes int_P_int_M_a_0_26
     { ((JC_204:
        ((JC_200:
         valid___string_something(char_P___string_something_1_alloc_table,
         char_P_char_M___string_something_1))
        and ((JC_201:
             valid___string_something_0(char_P___string_something_1_alloc_table))
            and ((JC_202: valid_a(int_P_a_2_alloc_table))
                and (JC_203: valid_c(char_xP_c_3_alloc_table))))))
       and (JC_194:
           not_assigns(int_P_a_0_26_alloc_table@, int_P_int_M_a_0_26@,
           int_P_int_M_a_0_26, pset_all(pset_singleton(a_0@))))) }

parameter main :
 tt:unit ->
  { } unit
  reads char_P___string_something_1_alloc_table,char_P_c_75_alloc_table,char_P_char_M___string_something_1,char_P_char_M_c_75,char_xP_c_3_alloc_table,int_P_a_2_alloc_table
  writes char_xP_char_xM_c_3,int_P_int_M_a_2
  { ((JC_168:
     ((JC_164:
      valid___string_something(char_P___string_something_1_alloc_table,
      char_P_char_M___string_something_1))
     and ((JC_165:
          valid___string_something_0(char_P___string_something_1_alloc_table))
         and ((JC_166: valid_a(int_P_a_2_alloc_table))
             and (JC_167: valid_c(char_xP_c_3_alloc_table))))))
    and (JC_158:
        ((JC_156:
         not_assigns(char_xP_c_3_alloc_table@, char_xP_char_xM_c_3@,
         char_xP_char_xM_c_3, pset_all(pset_singleton(c@))))
        and (JC_157:
            not_assigns(int_P_a_2_alloc_table@, int_P_int_M_a_2@,
            int_P_int_M_a_2, pset_all(pset_singleton(a@))))))) }

parameter main_requires :
 tt:unit ->
  { (JC_143:
    ((JC_139:
     valid___string_something(char_P___string_something_1_alloc_table,
     char_P_char_M___string_something_1))
    and ((JC_140:
         valid___string_something_0(char_P___string_something_1_alloc_table))
        and ((JC_141: valid_a(int_P_a_2_alloc_table))
            and (JC_142: valid_c(char_xP_c_3_alloc_table))))))}
  unit
  reads char_P___string_something_1_alloc_table,char_P_c_75_alloc_table,char_P_char_M___string_something_1,char_P_char_M_c_75,char_xP_c_3_alloc_table,int_P_a_2_alloc_table
  writes char_xP_char_xM_c_3,int_P_int_M_a_2
  { ((JC_168:
     ((JC_164:
      valid___string_something(char_P___string_something_1_alloc_table,
      char_P_char_M___string_something_1))
     and ((JC_165:
          valid___string_something_0(char_P___string_something_1_alloc_table))
         and ((JC_166: valid_a(int_P_a_2_alloc_table))
             and (JC_167: valid_c(char_xP_c_3_alloc_table))))))
    and (JC_158:
        ((JC_156:
         not_assigns(char_xP_c_3_alloc_table@, char_xP_char_xM_c_3@,
         char_xP_char_xM_c_3, pset_all(pset_singleton(c@))))
        and (JC_157:
            not_assigns(int_P_a_2_alloc_table@, int_P_int_M_a_2@,
            int_P_int_M_a_2, pset_all(pset_singleton(a@))))))) }

parameter strndup :
 s_0:char_P pointer ->
  n_0:int ->
   char_P_result_24_alloc_table:char_P alloc_table ->
    char_P_s_23_alloc_table:char_P alloc_table ->
     char_P_char_M_result_24:(char_P, int) memory ->
      char_P_char_M_s_23:(char_P, int) memory ->
       { } char_P pointer
       reads char_P___string_something_1_alloc_table,char_P_char_M___string_something_1,char_xP_c_3_alloc_table,int_P_a_2_alloc_table
       { ((JC_58:
          ((JC_54:
           valid___string_something(char_P___string_something_1_alloc_table,
           char_P_char_M___string_something_1))
          and ((JC_55:
               valid___string_something_0(char_P___string_something_1_alloc_table))
              and ((JC_56: valid_a(int_P_a_2_alloc_table))
                  and (JC_57: valid_c(char_xP_c_3_alloc_table))))))
         and (JC_47:
             ((JC_42:
              le_int(offset_min(char_P_result_24_alloc_table, result), (0)))
             and ((JC_43:
                  ge_int(offset_max(char_P_result_24_alloc_table, result),
                  minimum(strlen(s_0@, char_P_char_M_s_23), n_0@)))
                 and ((JC_44:
                      valid_string(result, char_P_result_24_alloc_table,
                      char_P_char_M_result_24))
                     and ((JC_45:
                          le_int(strlen(result, char_P_char_M_result_24),
                          n_0@))
                         and (JC_46:
                             eq_int(strncmp(result, s_0@, n_0@,
                                    char_P_char_M_s_23,
                                    char_P_char_M_result_24),
                             (0))))))))) }

parameter strndup_requires :
 s_0:char_P pointer ->
  n_0:int ->
   char_P_result_24_alloc_table:char_P alloc_table ->
    char_P_s_23_alloc_table:char_P alloc_table ->
     char_P_char_M_result_24:(char_P, int) memory ->
      char_P_char_M_s_23:(char_P, int) memory ->
       { (JC_26:
         ((JC_21:
          valid_string(s_0, char_P_s_23_alloc_table, char_P_char_M_s_23))
         and ((JC_22:
              valid___string_something(char_P___string_something_1_alloc_table,
              char_P_char_M___string_something_1))
             and ((JC_23:
                  valid___string_something_0(char_P___string_something_1_alloc_table))
                 and ((JC_24: valid_a(int_P_a_2_alloc_table))
                     and (JC_25: valid_c(char_xP_c_3_alloc_table)))))))}
       char_P pointer
       reads char_P___string_something_1_alloc_table,char_P_char_M___string_something_1,char_xP_c_3_alloc_table,int_P_a_2_alloc_table
       { ((JC_58:
          ((JC_54:
           valid___string_something(char_P___string_something_1_alloc_table,
           char_P_char_M___string_something_1))
          and ((JC_55:
               valid___string_something_0(char_P___string_something_1_alloc_table))
              and ((JC_56: valid_a(int_P_a_2_alloc_table))
                  and (JC_57: valid_c(char_xP_c_3_alloc_table))))))
         and (JC_47:
             ((JC_42:
              le_int(offset_min(char_P_result_24_alloc_table, result), (0)))
             and ((JC_43:
                  ge_int(offset_max(char_P_result_24_alloc_table, result),
                  minimum(strlen(s_0@, char_P_char_M_s_23), n_0@)))
                 and ((JC_44:
                      valid_string(result, char_P_result_24_alloc_table,
                      char_P_char_M_result_24))
                     and ((JC_45:
                          le_int(strlen(result, char_P_char_M_result_24),
                          n_0@))
                         and (JC_46:
                             eq_int(strncmp(result, s_0@, n_0@,
                                    char_P_char_M_s_23,
                                    char_P_char_M_result_24),
                             (0))))))))) }

let assign_char_ensures_default =
 fun (tt : unit) ->
  { (JC_108:
    ((JC_104:
     valid___string_something(char_P___string_something_1_alloc_table,
     char_P_char_M___string_something_1))
    and ((JC_105:
         valid___string_something_0(char_P___string_something_1_alloc_table))
        and ((JC_106: valid_a(int_P_a_2_alloc_table))
            and (JC_107: valid_c(char_xP_c_3_alloc_table)))))) }
  (init:
  try
   begin
     (let i_0_0 = ref (any_int void) in
     (C_20:
     begin
       (let jessie_52 = (i_0_0 := (0)) in void);
      try
       (let jessie_65 =
       begin
         (loop_4:
         while true do
         { invariant
             ((JC_134:
              ((JC_132: le_int((0), i_0_0))
              and (JC_133: le_int(i_0_0, (12)))))
             and ((JC_136:
                  not_assigns(char_xP_c_3_alloc_table@loop_4,
                  char_xP_char_xM_c_3@loop_4, char_xP_char_xM_c_3,
                  pset_all(pset_singleton(c))))
                 and (JC_137:
                     not_assigns(char_xP_c_3_alloc_table@init,
                     char_xP_char_xM_c_3@init, char_xP_char_xM_c_3,
                     pset_all(pset_singleton(c@init))))))  }
          begin
            [ { } unit { true } ];
           try
            (let jessie_64 =
            begin
              (let jessie_63 =
              begin
                (if ((lt_int_ !i_0_0) (12)) then void
                else
                 (let jessie_53 = (raise (Goto_while_1_break_exc void)) in
                 void));
               (let jessie_61 =
               (C_26:
               (let jessie_57 =
               (C_24:
               (let jessie_56 = __string_something in
               (let jessie_55 = (12) in
               (JC_138:
               ((((((strndup jessie_56) jessie_55) !char_P_c_75_alloc_table) !char_P___string_something_1_alloc_table) !char_P_char_M_c_75) !char_P_char_M___string_something_1))))) in
               (let jessie_60 = ((shift c) !i_0_0) in
               begin
                 (((safe_upd_ char_xP_char_xM_c_3) jessie_60) jessie_57);
                jessie_57 end))) in void);
               (C_28:
               begin   (i_0_0 := (C_27: ((add_int !i_0_0) (1)))); !i_0_0 end)
              end in void); (raise (Loop_continue_exc void)) end in void)
            with Loop_continue_exc jessie_6 -> void end end done);
        (raise (Goto_while_1_break_exc void)) end in void) with
       Goto_while_1_break_exc jessie_4 -> (while_1_break: void) end;
      (raise Return) end)); (raise Return) end with Return -> void end)
  { (JC_111:
    not_assigns(char_xP_c_3_alloc_table@, char_xP_char_xM_c_3@,
    char_xP_char_xM_c_3, pset_all(pset_singleton(c@)))) }

let assign_char_safety =
 fun (tt : unit) ->
  { (JC_108:
    ((JC_104:
     valid___string_something(char_P___string_something_1_alloc_table,
     char_P_char_M___string_something_1))
    and ((JC_105:
         valid___string_something_0(char_P___string_something_1_alloc_table))
        and ((JC_106: valid_a(int_P_a_2_alloc_table))
            and (JC_107: valid_c(char_xP_c_3_alloc_table)))))) }
  (init:
  try
   begin
     (let i_0_0 = ref (any_int void) in
     (C_20:
     begin
       (let jessie_37 = (i_0_0 := (0)) in void);
      try
       (let jessie_50 =
       begin
         (loop_3:
         while true do
         { invariant (JC_128: true) variant (0) }
          begin
            [ { } unit reads i_0_0
              { (JC_126:
                ((JC_124: le_int((0), i_0_0))
                and (JC_125: le_int(i_0_0, (12))))) } ];
           try
            (let jessie_49 =
            begin
              (let jessie_48 =
              begin
                (if ((lt_int_ !i_0_0) (12)) then void
                else
                 (let jessie_38 = (raise (Goto_while_1_break_exc void)) in
                 void));
               (let jessie_46 =
               (C_26:
               (let jessie_42 =
               (C_24:
               (let jessie_41 = __string_something in
               (let jessie_40 = (12) in
               (JC_130:
               ((((((strndup_requires jessie_41) jessie_40) !char_P_c_75_alloc_table) !char_P___string_something_1_alloc_table) !char_P_char_M_c_75) !char_P_char_M___string_something_1))))) in
               (let jessie_43 = c in
               (let jessie_44 = !i_0_0 in
               (let jessie_45 = ((shift jessie_43) jessie_44) in
               begin
                 (JC_131:
                 (((((offset_upd_ !char_xP_c_3_alloc_table) char_xP_char_xM_c_3) jessie_43) jessie_44) jessie_42));
                jessie_42 end))))) in void);
               (C_28:
               begin   (i_0_0 := (C_27: ((add_int !i_0_0) (1)))); !i_0_0 end)
              end in void); (raise (Loop_continue_exc void)) end in void)
            with Loop_continue_exc jessie_6 -> void end end done);
        (raise (Goto_while_1_break_exc void)) end in void) with
       Goto_while_1_break_exc jessie_4 -> (while_1_break: void) end;
      (raise Return) end)); (raise Return) end with Return -> void end)
  { (JC_118:
    ((JC_114:
     valid___string_something(char_P___string_something_1_alloc_table,
     char_P_char_M___string_something_1))
    and ((JC_115:
         valid___string_something_0(char_P___string_something_1_alloc_table))
        and ((JC_116: valid_a(int_P_a_2_alloc_table))
            and (JC_117: valid_c(char_xP_c_3_alloc_table)))))) }

let assign_int_ensures_default =
 fun (tt : unit) ->
  { (JC_69:
    ((JC_65:
     valid___string_something(char_P___string_something_1_alloc_table,
     char_P_char_M___string_something_1))
    and ((JC_66:
         valid___string_something_0(char_P___string_something_1_alloc_table))
        and ((JC_67: valid_a(int_P_a_2_alloc_table))
            and (JC_68: valid_c(char_xP_c_3_alloc_table)))))) }
  (init:
  try
   begin
     (let i_27 = ref (any_int void) in
     (C_11:
     begin
       (let jessie_24 = (i_27 := (0)) in void);
      try
       (let jessie_35 =
       begin
         (loop_2:
         while true do
         { invariant
             ((JC_94:
              ((JC_92: le_int((0), i_27)) and (JC_93: le_int(i_27, (12)))))
             and ((JC_96:
                  not_assigns(int_P_a_2_alloc_table@loop_2,
                  int_P_int_M_a_2@loop_2, int_P_int_M_a_2,
                  pset_all(pset_singleton(a))))
                 and (JC_97:
                     not_assigns(int_P_a_2_alloc_table@init,
                     int_P_int_M_a_2@init, int_P_int_M_a_2,
                     pset_all(pset_singleton(a@init))))))  }
          begin
            [ { } unit { true } ];
           try
            (let jessie_34 =
            begin
              (let jessie_33 =
              begin
                (if ((lt_int_ !i_27) (12)) then void
                else
                 (let jessie_25 = (raise (Goto_while_0_break_exc void)) in
                 void));
               (let jessie_31 =
               (C_16:
               (let jessie_27 = (69) in
               (let jessie_30 = ((shift a) !i_27) in
               begin
                 (((safe_upd_ int_P_int_M_a_2) jessie_30) jessie_27);
                jessie_27 end))) in void);
               (C_18:
               begin   (i_27 := (C_17: ((add_int !i_27) (1)))); !i_27 end)
              end in void); (raise (Loop_continue_exc void)) end in void)
            with Loop_continue_exc jessie_3 -> void end end done);
        (raise (Goto_while_0_break_exc void)) end in void) with
       Goto_while_0_break_exc jessie_1 -> (while_0_break: void) end;
      (raise Return) end)); (raise Return) end with Return -> void end)
  { (JC_72:
    not_assigns(int_P_a_2_alloc_table@, int_P_int_M_a_2@, int_P_int_M_a_2,
    pset_all(pset_singleton(a@)))) }

let assign_int_safety =
 fun (tt : unit) ->
  { (JC_69:
    ((JC_65:
     valid___string_something(char_P___string_something_1_alloc_table,
     char_P_char_M___string_something_1))
    and ((JC_66:
         valid___string_something_0(char_P___string_something_1_alloc_table))
        and ((JC_67: valid_a(int_P_a_2_alloc_table))
            and (JC_68: valid_c(char_xP_c_3_alloc_table)))))) }
  (init:
  try
   begin
     (let i_27 = ref (any_int void) in
     (C_11:
     begin
       (let jessie_11 = (i_27 := (0)) in void);
      try
       (let jessie_22 =
       begin
         (loop_1:
         while true do
         { invariant (JC_89: true) variant (0) }
          begin
            [ { } unit reads i_27
              { (JC_87:
                ((JC_85: le_int((0), i_27)) and (JC_86: le_int(i_27, (12))))) } ];
           try
            (let jessie_21 =
            begin
              (let jessie_20 =
              begin
                (if ((lt_int_ !i_27) (12)) then void
                else
                 (let jessie_12 = (raise (Goto_while_0_break_exc void)) in
                 void));
               (let jessie_18 =
               (C_16:
               (let jessie_14 = (69) in
               (let jessie_15 = a in
               (let jessie_16 = !i_27 in
               (let jessie_17 = ((shift jessie_15) jessie_16) in
               begin
                 (JC_91:
                 (((((offset_upd_ !int_P_a_2_alloc_table) int_P_int_M_a_2) jessie_15) jessie_16) jessie_14));
                jessie_14 end))))) in void);
               (C_18:
               begin   (i_27 := (C_17: ((add_int !i_27) (1)))); !i_27 end)
              end in void); (raise (Loop_continue_exc void)) end in void)
            with Loop_continue_exc jessie_3 -> void end end done);
        (raise (Goto_while_0_break_exc void)) end in void) with
       Goto_while_0_break_exc jessie_1 -> (while_0_break: void) end;
      (raise Return) end)); (raise Return) end with Return -> void end)
  { (JC_79:
    ((JC_75:
     valid___string_something(char_P___string_something_1_alloc_table,
     char_P_char_M___string_something_1))
    and ((JC_76:
         valid___string_something_0(char_P___string_something_1_alloc_table))
        and ((JC_77: valid_a(int_P_a_2_alloc_table))
            and (JC_78: valid_c(char_xP_c_3_alloc_table)))))) }

let foo_ensures_default =
 fun (a_0 : int_P pointer) (aLength : int) (int_P_int_M_a_0_26 : (int_P, int) memory ref) (int_P_a_0_26_alloc_table : int_P alloc_table) ->
  { (JC_189:
    ((JC_184:
     ((JC_182: le_int(offset_min(int_P_a_0_26_alloc_table, a_0), (0)))
     and (JC_183:
         ge_int(offset_max(int_P_a_0_26_alloc_table, a_0),
         sub_int(aLength, (1))))))
    and ((JC_185:
         valid___string_something(char_P___string_something_1_alloc_table,
         char_P_char_M___string_something_1))
        and ((JC_186:
             valid___string_something_0(char_P___string_something_1_alloc_table))
            and ((JC_187: valid_a(int_P_a_2_alloc_table))
                and (JC_188: valid_c(char_xP_c_3_alloc_table))))))) }
  (init:
  try
   begin
     (let j_3 = ref (any_int void) in
     (C_33:
     begin
       (let jessie_80 = (j_3 := (0)) in void);
      try
       (let jessie_91 =
       begin
         (loop_6:
         while true do
         { invariant
             ((JC_210: le_int((0), j_3))
             and ((JC_212:
                  not_assigns(int_P_a_0_26_alloc_table@loop_6,
                  int_P_int_M_a_0_26@loop_6, int_P_int_M_a_0_26,
                  pset_all(pset_singleton(a_0))))
                 and (JC_213:
                     not_assigns(int_P_a_0_26_alloc_table@init,
                     int_P_int_M_a_0_26@init, int_P_int_M_a_0_26,
                     pset_all(pset_singleton(a_0@init))))))  }
          begin
            [ { } unit { true } ];
           try
            (let jessie_90 =
            begin
              (let jessie_89 =
              begin
                (if ((lt_int_ !j_3) aLength) then void
                else
                 (let jessie_81 = (raise (Goto_while_2_break_exc void)) in
                 void));
               (let jessie_87 =
               (C_37:
               (let jessie_83 = (0) in
               (let jessie_86 = (C_35: ((shift a_0) !j_3)) in
               begin
                 (((safe_upd_ int_P_int_M_a_0_26) jessie_86) jessie_83);
                jessie_83 end))) in void);
               (C_39:
               begin   (j_3 := (C_38: ((add_int !j_3) (1)))); !j_3 end) end in
              void); (raise (Loop_continue_exc void)) end in void) with
            Loop_continue_exc jessie_9 -> void end end done);
        (raise (Goto_while_2_break_exc void)) end in void) with
       Goto_while_2_break_exc jessie_7 -> (while_2_break: void) end;
      (raise Return) end)); (raise Return) end with Return -> void end)
  { (JC_192:
    not_assigns(int_P_a_0_26_alloc_table@, int_P_int_M_a_0_26@,
    int_P_int_M_a_0_26, pset_all(pset_singleton(a_0@)))) }

let foo_safety =
 fun (a_0 : int_P pointer) (aLength : int) (int_P_int_M_a_0_26 : (int_P, int) memory ref) (int_P_a_0_26_alloc_table : int_P alloc_table) ->
  { (JC_189:
    ((JC_184:
     ((JC_182: le_int(offset_min(int_P_a_0_26_alloc_table, a_0), (0)))
     and (JC_183:
         ge_int(offset_max(int_P_a_0_26_alloc_table, a_0),
         sub_int(aLength, (1))))))
    and ((JC_185:
         valid___string_something(char_P___string_something_1_alloc_table,
         char_P_char_M___string_something_1))
        and ((JC_186:
             valid___string_something_0(char_P___string_something_1_alloc_table))
            and ((JC_187: valid_a(int_P_a_2_alloc_table))
                and (JC_188: valid_c(char_xP_c_3_alloc_table))))))) }
  (init:
  try
   begin
     (let j_3 = ref (any_int void) in
     (C_33:
     begin
       (let jessie_67 = (j_3 := (0)) in void);
      try
       (let jessie_78 =
       begin
         (loop_5:
         while true do
         { invariant (JC_207: true) variant (0) }
          begin
            [ { } unit reads j_3 { (JC_205: le_int((0), j_3)) } ];
           try
            (let jessie_77 =
            begin
              (let jessie_76 =
              begin
                (if ((lt_int_ !j_3) aLength) then void
                else
                 (let jessie_68 = (raise (Goto_while_2_break_exc void)) in
                 void));
               (let jessie_74 =
               (C_37:
               (let jessie_70 = (0) in
               (let jessie_71 = a_0 in
               (let jessie_72 = !j_3 in
               (let jessie_73 = ((shift jessie_71) jessie_72) in
               begin
                 (JC_209:
                 (((((offset_upd_ int_P_a_0_26_alloc_table) int_P_int_M_a_0_26) jessie_71) jessie_72) jessie_70));
                jessie_70 end))))) in void);
               (C_39:
               begin   (j_3 := (C_38: ((add_int !j_3) (1)))); !j_3 end) end in
              void); (raise (Loop_continue_exc void)) end in void) with
            Loop_continue_exc jessie_9 -> void end end done);
        (raise (Goto_while_2_break_exc void)) end in void) with
       Goto_while_2_break_exc jessie_7 -> (while_2_break: void) end;
      (raise Return) end)); (raise Return) end with Return -> void end)
  { (JC_199:
    ((JC_195:
     valid___string_something(char_P___string_something_1_alloc_table,
     char_P_char_M___string_something_1))
    and ((JC_196:
         valid___string_something_0(char_P___string_something_1_alloc_table))
        and ((JC_197: valid_a(int_P_a_2_alloc_table))
            and (JC_198: valid_c(char_xP_c_3_alloc_table)))))) }

let main_ensures_default =
 fun (tt : unit) ->
  { (JC_149:
    ((JC_145:
     valid___string_something(char_P___string_something_1_alloc_table,
     char_P_char_M___string_something_1))
    and ((JC_146:
         valid___string_something_0(char_P___string_something_1_alloc_table))
        and ((JC_147: valid_a(int_P_a_2_alloc_table))
            and (JC_148: valid_c(char_xP_c_3_alloc_table)))))) }
  (init:
  try
   begin
     (C_30:
     begin
       (JC_171: (assign_int void));
      (C_31: begin   (JC_172: (assign_char void)); (raise Return) end) end);
    (raise Return) end with Return -> void end)
  { (JC_154:
    ((JC_152:
     not_assigns(char_xP_c_3_alloc_table@, char_xP_char_xM_c_3@,
     char_xP_char_xM_c_3, pset_all(pset_singleton(c@))))
    and (JC_153:
        not_assigns(int_P_a_2_alloc_table@, int_P_int_M_a_2@,
        int_P_int_M_a_2, pset_all(pset_singleton(a@)))))) }

let main_safety =
 fun (tt : unit) ->
  { (JC_149:
    ((JC_145:
     valid___string_something(char_P___string_something_1_alloc_table,
     char_P_char_M___string_something_1))
    and ((JC_146:
         valid___string_something_0(char_P___string_something_1_alloc_table))
        and ((JC_147: valid_a(int_P_a_2_alloc_table))
            and (JC_148: valid_c(char_xP_c_3_alloc_table)))))) }
  (init:
  try
   begin
     (C_30:
     begin
       (JC_169: (assign_int_requires void));
      (C_31:
      begin   (JC_170: (assign_char_requires void)); (raise Return) end) end);
    (raise Return) end with Return -> void end)
  { (JC_163:
    ((JC_159:
     valid___string_something(char_P___string_something_1_alloc_table,
     char_P_char_M___string_something_1))
    and ((JC_160:
         valid___string_something_0(char_P___string_something_1_alloc_table))
        and ((JC_161: valid_a(int_P_a_2_alloc_table))
            and (JC_162: valid_c(char_xP_c_3_alloc_table)))))) }


WHYLIB=WHYHOME/lib WHYEXEC=WHYHOME/bin/why.opt GWHYEXEC=WHYHOME/bin/gwhy.opt make --quiet -C bts0041-bis.jessie --quiet -f bts0041-bis.makefile project
why --project [...] why/bts0041-bis.why
<project name="bts0041-bis" context="why/bts0041-bis_ctx.why">
  <function name="Function main">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/bts0041-bis_po54.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "497" begin = "14" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0041-bis_po55.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "497" begin = "14" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0041-bis_po56.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "497" begin = "14" end = "26"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0041-bis_po57.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "498" begin = "14" end = "27"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0041-bis_po58.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "498" begin = "14" end = "27"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0041-bis_po59.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "498" begin = "14" end = "27"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0041-bis_po60.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "51" begin = "5" end = "9"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0041-bis_po61.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "51" begin = "5" end = "9"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0041-bis_po62.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "51" begin = "5" end = "9"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
    <behavior name="Default behavior">
    <goal why_file="why/bts0041-bis_po52.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "51" begin = "5" end = "9"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0041-bis_po53.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "51" begin = "5" end = "9"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Function foo">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/bts0041-bis_po44.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "527" begin = "27" end = "64"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0041-bis_po45.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "527" begin = "27" end = "64"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0041-bis_po46.why">
      <location file = "why/bts0041-bis.why" line = "2185" begin = "45" end = "46"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/bts0041-bis_po47.why">
      <location file = "why/bts0041-bis.why" line = "2185" begin = "45" end = "46"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/bts0041-bis_po48.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "61" begin = "5" end = "8"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0041-bis_po49.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "61" begin = "5" end = "8"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0041-bis_po50.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "61" begin = "5" end = "8"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0041-bis_po51.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "61" begin = "5" end = "8"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
    <behavior name="Default behavior">
    <goal why_file="why/bts0041-bis_po37.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "64" begin = "21" end = "27"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0041-bis_po38.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "516" begin = "9" end = "452"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0041-bis_po39.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "516" begin = "9" end = "452"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0041-bis_po40.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "64" begin = "21" end = "27"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0041-bis_po41.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "516" begin = "9" end = "452"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0041-bis_po42.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "516" begin = "9" end = "452"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0041-bis_po43.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "61" begin = "5" end = "8"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Function assign_int">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/bts0041-bis_po30.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "444" begin = "27" end = "56"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0041-bis_po31.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "444" begin = "27" end = "56"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0041-bis_po32.why">
      <location file = "why/bts0041-bis.why" line = "2052" begin = "44" end = "45"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/bts0041-bis_po33.why">
      <location file = "why/bts0041-bis.why" line = "2052" begin = "44" end = "45"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/bts0041-bis_po34.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "22" begin = "5" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0041-bis_po35.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "22" begin = "5" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0041-bis_po36.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "22" begin = "5" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
    <behavior name="Default behavior">
    <goal why_file="why/bts0041-bis_po21.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "26" begin = "21" end = "27"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0041-bis_po22.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "26" begin = "31" end = "38"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0041-bis_po23.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "433" begin = "9" end = "470"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0041-bis_po24.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "433" begin = "9" end = "470"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0041-bis_po25.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "26" begin = "21" end = "27"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0041-bis_po26.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "26" begin = "31" end = "38"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0041-bis_po27.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "433" begin = "9" end = "470"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0041-bis_po28.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "433" begin = "9" end = "470"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0041-bis_po29.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "22" begin = "5" end = "15"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Function assign_char">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/bts0041-bis_po10.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "44" begin = "4" end = "5"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0041-bis_po11.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "44" begin = "4" end = "5"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0041-bis_po12.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "44" begin = "4" end = "5"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0041-bis_po13.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "44" begin = "4" end = "5"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/bts0041-bis_po14.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "477" begin = "27" end = "209"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0041-bis_po15.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "477" begin = "27" end = "209"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/bts0041-bis_po16.why">
      <location file = "why/bts0041-bis.why" line = "1922" begin = "45" end = "46"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/bts0041-bis_po17.why">
      <location file = "why/bts0041-bis.why" line = "1922" begin = "45" end = "46"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/bts0041-bis_po18.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "36" begin = "5" end = "16"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0041-bis_po19.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "36" begin = "5" end = "16"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/bts0041-bis_po20.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "36" begin = "5" end = "16"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
    <behavior name="Default behavior">
    <goal why_file="why/bts0041-bis_po1.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "40" begin = "21" end = "27"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0041-bis_po2.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "40" begin = "31" end = "38"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0041-bis_po3.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "466" begin = "9" end = "635"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0041-bis_po4.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "466" begin = "9" end = "635"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/bts0041-bis_po5.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "40" begin = "21" end = "27"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0041-bis_po6.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "40" begin = "31" end = "38"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0041-bis_po7.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "466" begin = "9" end = "635"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0041-bis_po8.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.jessie/bts0041-bis.jc" line = "466" begin = "9" end = "635"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/bts0041-bis_po9.why">
      <location file = "PPCHOME/tests/jessie/bts0041-bis.c" line = "36" begin = "5" end = "16"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
</project>
logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic div_int : int, int -> int

logic mod_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

logic bool_and : bool, bool -> bool

logic bool_or : bool, bool -> bool

logic bool_xor : bool, bool -> bool

logic bool_not : bool -> bool

axiom bool_and_def:
  (forall a:bool.
    (forall b:bool.
      ((bool_and(a, b) = true) <-> ((a = true) and (b = true)))))

axiom bool_or_def:
  (forall a:bool.
    (forall b:bool. ((bool_or(a, b) = true) <-> ((a = true) or (b = true)))))

axiom bool_xor_def:
  (forall a:bool. (forall b:bool. ((bool_xor(a, b) = true) <-> (a <> b))))

axiom bool_not_def: (forall a:bool. ((bool_not(a) = true) <-> (a = false)))

logic ite : bool, 'a1, 'a1 -> 'a1

axiom ite_true: (forall x:'a1. (forall y:'a1. (ite(true, x, y) = x)))

axiom ite_false: (forall x:'a1. (forall y:'a1. (ite(false, x, y) = y)))

logic lt_int_bool : int, int -> bool

logic le_int_bool : int, int -> bool

logic gt_int_bool : int, int -> bool

logic ge_int_bool : int, int -> bool

logic eq_int_bool : int, int -> bool

logic neq_int_bool : int, int -> bool

axiom lt_int_bool_axiom:
  (forall x:int. (forall y:int. ((lt_int_bool(x, y) = true) <-> (x < y))))

axiom le_int_bool_axiom:
  (forall x:int. (forall y:int. ((le_int_bool(x, y) = true) <-> (x <= y))))

axiom gt_int_bool_axiom:
  (forall x:int. (forall y:int. ((gt_int_bool(x, y) = true) <-> (x > y))))

axiom ge_int_bool_axiom:
  (forall x:int. (forall y:int. ((ge_int_bool(x, y) = true) <-> (x >= y))))

axiom eq_int_bool_axiom:
  (forall x:int. (forall y:int. ((eq_int_bool(x, y) = true) <-> (x = y))))

axiom neq_int_bool_axiom:
  (forall x:int. (forall y:int. ((neq_int_bool(x, y) = true) <-> (x <> y))))

logic abs_int : int -> int

axiom abs_int_pos: (forall x:int. ((x >= 0) -> (abs_int(x) = x)))

axiom abs_int_neg: (forall x:int. ((x <= 0) -> (abs_int(x) = (-x))))

logic int_max : int, int -> int

logic int_min : int, int -> int

axiom int_max_is_ge:
  (forall x:int.
    (forall y:int. ((int_max(x, y) >= x) and (int_max(x, y) >= y))))

axiom int_max_is_some:
  (forall x:int.
    (forall y:int. ((int_max(x, y) = x) or (int_max(x, y) = y))))

axiom int_min_is_le:
  (forall x:int.
    (forall y:int. ((int_min(x, y) <= x) and (int_min(x, y) <= y))))

axiom int_min_is_some:
  (forall x:int.
    (forall y:int. ((int_min(x, y) = x) or (int_min(x, y) = y))))

logic lt_real : real, real -> prop

logic le_real : real, real -> prop

logic gt_real : real, real -> prop

logic ge_real : real, real -> prop

logic eq_real : real, real -> prop

logic neq_real : real, real -> prop

logic add_real : real, real -> real

logic sub_real : real, real -> real

logic mul_real : real, real -> real

logic div_real : real, real -> real

logic neg_real : real -> real

logic real_of_int : int -> real

axiom real_of_int_zero: (real_of_int(0) = 0.0)

axiom real_of_int_one: (real_of_int(1) = 1.0)

axiom real_of_int_add:
  (forall x:int.
    (forall y:int.
      (real_of_int((x + y)) = (real_of_int(x) + real_of_int(y)))))

axiom real_of_int_sub:
  (forall x:int.
    (forall y:int.
      (real_of_int((x - y)) = (real_of_int(x) - real_of_int(y)))))

logic truncate_real_to_int : real -> int

axiom truncate_down_pos:
  (forall x:real.
    ((x >= 0.0) ->
     ((real_of_int(truncate_real_to_int(x)) <= x) and
      (x < real_of_int((truncate_real_to_int(x) + 1))))))

axiom truncate_up_neg:
  (forall x:real.
    ((x <= 0.0) ->
     ((real_of_int((truncate_real_to_int(x) - 1)) < x) and
      (x <= real_of_int(truncate_real_to_int(x))))))

logic floor_real_to_int : real -> int

logic ceil_real_to_int : real -> int

logic lt_real_bool : real, real -> bool

logic le_real_bool : real, real -> bool

logic gt_real_bool : real, real -> bool

logic ge_real_bool : real, real -> bool

logic eq_real_bool : real, real -> bool

logic neq_real_bool : real, real -> bool

axiom lt_real_bool_axiom:
  (forall x:real. (forall y:real. ((lt_real_bool(x, y) = true) <-> (x < y))))

axiom le_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((le_real_bool(x, y) = true) <-> (x <= y))))

axiom gt_real_bool_axiom:
  (forall x:real. (forall y:real. ((gt_real_bool(x, y) = true) <-> (x > y))))

axiom ge_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((ge_real_bool(x, y) = true) <-> (x >= y))))

axiom eq_real_bool_axiom:
  (forall x:real. (forall y:real. ((eq_real_bool(x, y) = true) <-> (x = y))))

axiom neq_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((neq_real_bool(x, y) = true) <-> (x <> y))))

logic real_max : real, real -> real

logic real_min : real, real -> real

axiom real_max_is_ge:
  (forall x:real.
    (forall y:real. ((real_max(x, y) >= x) and (real_max(x, y) >= y))))

axiom real_max_is_some:
  (forall x:real.
    (forall y:real. ((real_max(x, y) = x) or (real_max(x, y) = y))))

axiom real_min_is_le:
  (forall x:real.
    (forall y:real. ((real_min(x, y) <= x) and (real_min(x, y) <= y))))

axiom real_min_is_some:
  (forall x:real.
    (forall y:real. ((real_min(x, y) = x) or (real_min(x, y) = y))))

function sqr_real(x: real) : real = (x * x)

logic sqrt_real : real -> real

axiom sqrt_pos: (forall x:real. ((x >= 0.0) -> (sqrt_real(x) >= 0.0)))

axiom sqrt_sqr: (forall x:real. ((x >= 0.0) -> (sqr_real(sqrt_real(x)) = x)))

axiom sqr_sqrt: (forall x:real. ((x >= 0.0) -> (sqrt_real((x * x)) = x)))

logic pow_real : real, real -> real

logic abs_real : real -> real

axiom abs_real_pos:
  (forall x:real [abs_real(x)]. ((x >= 0.0) -> (abs_real(x) = x)))

axiom abs_real_neg:
  (forall x:real [abs_real(x)]. ((x <= 0.0) -> (abs_real(x) = (-x))))

logic exp : real -> real

logic log : real -> real

logic log10 : real -> real

axiom log_exp: (forall x:real. (log(exp(x)) = x))

axiom exp_log: (forall x:real. ((x > 0.0) -> (exp(log(x)) = x)))

logic cos : real -> real

logic sin : real -> real

logic tan : real -> real

logic pi : real

logic cosh : real -> real

logic sinh : real -> real

logic tanh : real -> real

logic acos : real -> real

logic asin : real -> real

logic atan : real -> real

logic atan2 : real, real -> real

logic hypot : real, real -> real

axiom prod_pos:
  (forall x:real.
    (forall y:real.
      ((((x > 0.0) and (y > 0.0)) -> ((x * y) > 0.0)) and
       (((x < 0.0) and (y < 0.0)) -> ((x * y) > 0.0)))))

axiom abs_minus: (forall x:real. (abs_real((-x)) = abs_real(x)))

type 't alloc_table

type 't pointer

type 't block

logic base_block : 'a1 pointer -> 'a1 block

logic offset_max : 'a1 alloc_table, 'a1 pointer -> int

logic offset_min : 'a1 alloc_table, 'a1 pointer -> int

predicate valid(a: 'a1 alloc_table, p: 'a1 pointer) =
  ((offset_min(a, p) <= 0) and (offset_max(a, p) >= 0))

predicate same_block(p: 'a1 pointer, q: 'a1 pointer) =
  (base_block(p) = base_block(q))

logic sub_pointer : 'a1 pointer, 'a1 pointer -> int

logic shift : 'a1 pointer, int -> 'a1 pointer

logic null : 'a1 pointer

logic pointer_address : 'a1 pointer -> unit pointer

logic absolute_address : int -> unit pointer

logic address : 'a1 pointer -> int

axiom address_injective:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. ((p = q) <-> (address(p) = address(q)))))

axiom address_null: (address(null) = 0)

axiom address_shift_lt:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) < address(shift(p, j))) <-> (i < j)))))

axiom address_shift_le:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) <= address(shift(p, j))) <-> (i <= j)))))

axiom shift_zero: (forall p:'a1 pointer [shift(p, 0)]. (shift(p, 0) = p))

axiom shift_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(shift(p, i), j)]. (shift(shift(p, i),
        j) = shift(p, (i + j))))))

axiom offset_max_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_max(a, shift(p, i)) = (offset_max(a, p) - i)))))

axiom offset_min_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_min(a, shift(p, i)) = (offset_min(a, p) - i)))))

axiom neq_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(p, i), shift(p, j)].
        ((i <> j) -> (shift(p, i) <> shift(p, j))))))

axiom null_not_valid: (forall a:'a1 alloc_table. (not valid(a, null)))

axiom null_pointer:
  (forall a:'a1 alloc_table.
    ((offset_min(a, null) >= 0) and (offset_max(a, null) <= (-2))))

logic eq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

logic neq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

axiom eq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer. ((eq_pointer_bool(p1, p2) = true) <-> (p1 = p2))))

axiom neq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer.
      ((neq_pointer_bool(p1, p2) = true) <-> (p1 <> p2))))

axiom same_block_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(p, shift(q, i))].
        (same_block(p, q) -> same_block(p, shift(q, i))))))

axiom same_block_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(shift(q, i), p)].
        (same_block(q, p) -> same_block(shift(q, i), p)))))

axiom sub_pointer_shift:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> (p = shift(q, sub_pointer(p, q))))))

axiom sub_pointer_self:
  (forall p:'a1 pointer [sub_pointer(p, p)]. (sub_pointer(p, p) = 0))

axiom sub_pointer_zero:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> ((sub_pointer(p, q) = 0) -> (p = q)))))

axiom sub_pointer_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(shift(p, i), q)]. (sub_pointer(shift(p, i),
        q) = (sub_pointer(p, q) + i)))))

axiom sub_pointer_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(p, shift(q, i))]. (sub_pointer(p, shift(q,
        i)) = (sub_pointer(p, q) - i)))))

type ('t, 'v) memory

logic select : ('a2, 'a1) memory, 'a2 pointer -> 'a1

logic store : ('a1, 'a2) memory, 'a1 pointer, 'a2 -> ('a1, 'a2) memory

axiom select_store_eq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 = p2) -> (select(store(m, p1, a), p2) = a))))))

axiom select_store_neq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 <> p2) -> (select(store(m, p1, a), p2) = select(m, p2)))))))

type 't pset

logic pset_empty : 'a1 pset

logic pset_singleton : 'a1 pointer -> 'a1 pset

logic pset_deref : ('a2, 'a1 pointer) memory, 'a2 pset -> 'a1 pset

logic pset_union : 'a1 pset, 'a1 pset -> 'a1 pset

logic pset_all : 'a1 pset -> 'a1 pset

logic pset_range : 'a1 pset, int, int -> 'a1 pset

logic pset_range_left : 'a1 pset, int -> 'a1 pset

logic pset_range_right : 'a1 pset, int -> 'a1 pset

logic in_pset : 'a1 pointer, 'a1 pset -> prop

logic valid_pset : 'a1 alloc_table, 'a1 pset -> prop

predicate pset_disjoint(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (not (in_pset(p, ps1) and in_pset(p, ps2))))

predicate pset_included(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (in_pset(p, ps1) -> in_pset(p, ps2)))

axiom pset_included_self: (forall ps:'a1 pset. pset_included(ps, ps))

axiom pset_included_range:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))].
            (((c <= a) and (b <= d)) -> pset_included(pset_range(ps, a, b),
             pset_range(ps, c, d))))))))

axiom pset_included_range_all:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))]. pset_included(pset_range(ps, a, b), pset_all(ps)))))))

axiom in_pset_empty: (forall p:'a1 pointer. (not in_pset(p, pset_empty)))

axiom in_pset_singleton:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. (in_pset(p, pset_singleton(q)) <-> (p = q))))

axiom in_pset_deref:
  (forall p:'a1 pointer.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (in_pset(p, pset_deref(m, q)) <->
         (exists r:'a2 pointer. (in_pset(r, q) and (p = select(m, r))))))))

axiom in_pset_all:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (in_pset(p, pset_all(q)) <->
       (exists i:int.
         (exists r:'a1 pointer. (in_pset(r, q) and (p = shift(r, i))))))))

axiom in_pset_range:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (forall b:int.
          (in_pset(p, pset_range(q, a, b)) <->
           (exists i:int.
             (exists r:'a1 pointer.
               ((a <= i) and
                ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))))

axiom in_pset_range_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall b:int.
        (in_pset(p, pset_range_left(q, b)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_range_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (in_pset(p, pset_range_right(q, a)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((a <= i) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_union:
  (forall p:'a1 pointer.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (in_pset(p, pset_union(s1, s2)) <->
         (in_pset(p, s1) or in_pset(p, s2))))))

axiom valid_pset_empty: (forall a:'a1 alloc_table. valid_pset(a, pset_empty))

axiom valid_pset_singleton:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (valid_pset(a, pset_singleton(p)) <-> valid(a, p))))

axiom valid_pset_deref:
  (forall a:'a1 alloc_table.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (valid_pset(a, pset_deref(m, q)) <->
         (forall r:'a2 pointer.
           (forall p:'a1 pointer.
             ((in_pset(r, q) and (p = select(m, r))) -> valid(a, p))))))))

axiom valid_pset_range:
  (forall a:'a1 alloc_table.
    (forall q:'a1 pset.
      (forall c:int.
        (forall d:int.
          (valid_pset(a, pset_range(q, c, d)) <->
           (forall i:int.
             (forall r:'a1 pointer.
               ((in_pset(r, q) and ((c <= i) and (i <= d))) -> valid(a,
                shift(r, i))))))))))

axiom valid_pset_union:
  (forall a:'a1 alloc_table.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (valid_pset(a, pset_union(s1, s2)) <->
         (valid_pset(a, s1) and valid_pset(a, s2))))))

predicate not_assigns(a: 'a1 alloc_table, m1: ('a1, 'a2) memory, m2: ('a1,
  'a2) memory, l: 'a1 pset) =
  (forall p:'a1 pointer.
    ((valid(a, p) and (not in_pset(p, l))) -> (select(m2, p) = select(m1, p))))

axiom not_assigns_refl:
  (forall a:'a1 alloc_table.
    (forall m:('a1, 'a2) memory.
      (forall l:'a1 pset. not_assigns(a, m, m, l))))

axiom not_assigns_trans:
  (forall a:'a1 alloc_table.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory.
          (forall l:'a1 pset [not_assigns(a, m1, m2, l), not_assigns(a, m1,
            m3, l)].
            (not_assigns(a, m1, m2, l) ->
             (not_assigns(a, m2, m3, l) -> not_assigns(a, m1, m3, l))))))))

logic full_separated : 'a1 pointer, 'a2 pointer -> prop

axiom full_separated_shift1:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(p, shift(q, i))))))

axiom full_separated_shift2:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift3:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift4:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(p, shift(q, i))))))

type 't tag_table

type 't tag_id

logic int_of_tag : 'a1 tag_id -> int

logic typeof : 'a1 tag_table, 'a1 pointer -> 'a1 tag_id

logic parenttag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag_bool : 'a1 tag_id, 'a1 tag_id -> bool

axiom subtag_bool_def:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id. ((subtag_bool(t1, t2) = true) <-> subtag(t1, t2))))

axiom subtag_refl: (forall t:'a1 tag_id. subtag(t, t))

axiom subtag_parent:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id.
      (forall t3:'a1 tag_id.
        (subtag(t1, t2) -> (parenttag(t2, t3) -> subtag(t1, t3))))))

predicate instanceof(a: 'a1 tag_table, p: 'a1 pointer, t: 'a1 tag_id) =
  subtag(typeof(a, p), t)

logic downcast : 'a1 tag_table, 'a1 pointer, 'a1 tag_id -> 'a1 pointer

axiom downcast_instanceof:
  (forall a:'a1 tag_table.
    (forall p:'a1 pointer.
      (forall s:'a1 tag_id. (instanceof(a, p, s) -> (downcast(a, p, s) = p)))))

logic bottom_tag : 'a1 tag_id

axiom bottom_tag_axiom: (forall t:'a1 tag_id. subtag(t, bottom_tag))

predicate root_tag(t: 'a1 tag_id) = parenttag(t, bottom_tag)

axiom root_subtag:
  (forall a:'a1 tag_id.
    (forall b:'a1 tag_id.
      (forall c:'a1 tag_id.
        (root_tag(a) ->
         (root_tag(b) -> ((a <> b) -> (subtag(c, a) -> (not subtag(c, b)))))))))

predicate fully_packed(tag_table: 'a1 tag_table, mutable: ('a1,
  'a1 tag_id) memory, this: 'a1 pointer) = (select(mutable,
  this) = typeof(tag_table, this))

logic bw_compl : int -> int

logic bw_and : int, int -> int

axiom bw_and_not_null:
  (forall a:int.
    (forall b:int. ((bw_and(a, b) <> 0) -> ((a <> 0) and (b <> 0)))))

logic bw_xor : int, int -> int

logic bw_or : int, int -> int

logic lsl : int, int -> int

axiom lsl_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsl(a, b)))))

axiom lsl_left_positive_monotone:
  (forall a1:int.
    (forall a2:int.
      (forall b:int.
        (((0 <= a1) and ((a1 <= a2) and (0 <= b))) -> (lsl(a1, b) <= lsl(a2,
         b))))))

logic lsr : int, int -> int

axiom lsr_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsr(a, b)))))

axiom lsr_left_positive_decreases:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(a, b) <= a))))

logic asr : int, int -> int

axiom asr_positive_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= asr(a, b)))))

axiom asr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) <= a))))

axiom asr_lsr_same_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) = lsr(a, b)))))

axiom lsl_of_lsr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsl(lsr(a, b), b) <= a))))

axiom lsr_of_lsl_identity_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(lsl(a, b), b) = a))))

logic alloc_extends : 'a1 alloc_table, 'a1 alloc_table -> prop

predicate alloc_fresh(a: 'a1 alloc_table, p: 'a1 pointer, n: int) =
  (forall i:int. (((0 <= i) and (i < n)) -> (not valid(a, shift(p, i)))))

axiom alloc_extends_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_min(a1, p) = offset_min(a2, p)))))))

axiom alloc_extends_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_max(a1, p) = offset_max(a2, p)))))))

axiom alloc_extends_not_assigns_empty:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory.
          (forall l:'a1 pset.
            (forall p:'a1 pointer.
              (forall n:int [alloc_extends(a1, a2), alloc_fresh(a1, p, n),
                not_assigns(a2, m1, m2, l)].
                ((alloc_extends(a1, a2) and
                  (alloc_fresh(a1, p, n) and
                   (not_assigns(a2, m1, m2, l) and pset_included(l,
                    pset_all(pset_singleton(p)))))) ->
                 not_assigns(a1, m1, m2, pset_empty)))))))))

logic alloc_extends_except : 'a1 alloc_table, 'a1 alloc_table,
'a1 pset -> prop

axiom alloc_extends_except_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_min(a1,
            p) = offset_min(a2, p))))))))

axiom alloc_extends_except_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_max(a1,
            p) = offset_max(a2, p))))))))

type __string_something_1

type a_2

type c_3

type c_75

type char_P

type char_xP

type int_P

type padding

type unsigned_short_P

type void_P

logic __string_something : char_P pointer

logic a : int_P pointer

logic c : char_xP pointer

logic char_P_tag : char_P tag_id

axiom char_P_int: (int_of_tag(char_P_tag) = 1)

logic char_P_of_pointer_address : unit pointer -> char_P pointer

axiom char_P_of_pointer_address_of_pointer_addr:
  (forall p:char_P pointer.
    (p = char_P_of_pointer_address(pointer_address(p))))

axiom char_P_parenttag_bottom: parenttag(char_P_tag, bottom_tag)

axiom char_P_tags:
  (forall x:char_P pointer.
    (forall char_P_tag_table:char_P tag_table. instanceof(char_P_tag_table,
      x, char_P_tag)))

logic char_xP_tag : char_xP tag_id

axiom char_xP_int: (int_of_tag(char_xP_tag) = 1)

logic char_xP_of_pointer_address : unit pointer -> char_xP pointer

axiom char_xP_of_pointer_address_of_pointer_addr:
  (forall p:char_xP pointer.
    (p = char_xP_of_pointer_address(pointer_address(p))))

axiom char_xP_parenttag_bottom: parenttag(char_xP_tag, bottom_tag)

axiom char_xP_tags:
  (forall x:char_xP pointer.
    (forall char_xP_tag_table:char_xP tag_table.
      instanceof(char_xP_tag_table, x, char_xP_tag)))

logic int_P_tag : int_P tag_id

axiom int_P_int: (int_of_tag(int_P_tag) = 1)

logic int_P_of_pointer_address : unit pointer -> int_P pointer

axiom int_P_of_pointer_address_of_pointer_addr:
  (forall p:int_P pointer.
    (p = int_P_of_pointer_address(pointer_address(p))))

axiom int_P_parenttag_bottom: parenttag(int_P_tag, bottom_tag)

axiom int_P_tags:
  (forall x:int_P pointer.
    (forall int_P_tag_table:int_P tag_table. instanceof(int_P_tag_table, x,
      int_P_tag)))

predicate left_valid_struct_char_P(p: char_P pointer, a: int,
  char_P_alloc_table: char_P alloc_table) = (offset_min(char_P_alloc_table,
  p) <= a)

predicate left_valid_struct_char_xP(p: char_xP pointer, a: int,
  char_xP_alloc_table: char_xP alloc_table) =
  (offset_min(char_xP_alloc_table, p) <= a)

predicate left_valid_struct_int_P(p: int_P pointer, a: int,
  int_P_alloc_table: int_P alloc_table) = (offset_min(int_P_alloc_table,
  p) <= a)

predicate left_valid_struct_unsigned_short_P(p: unsigned_short_P pointer,
  a: int, unsigned_short_P_alloc_table: unsigned_short_P alloc_table) =
  (offset_min(unsigned_short_P_alloc_table, p) <= a)

predicate left_valid_struct_void_P(p: void_P pointer, a: int,
  void_P_alloc_table: void_P alloc_table) = (offset_min(void_P_alloc_table,
  p) <= a)

function maximum(i_26: int, j_2: int) : int = ite(lt_int_bool(i_26, j_2),
  j_2, i_26)

logic memchr : char_P pointer, int, int, (char_P, int) memory -> bool

axiom memchr_def:
  (forall char_P_char_M_s_6_at_L:(char_P, int) memory.
    (forall s_0_0:char_P pointer.
      (forall c_0_0:int.
        (forall n_3:int.
          ((memchr(s_0_0, c_0_0, n_3, char_P_char_M_s_6_at_L) = true) <->
           (exists i_0:int.
             ((0 <= i_0) and
              ((i_0 < n_3) and (select(char_P_char_M_s_6_at_L, shift(s_0_0,
               i_0)) = c_0_0)))))))))

logic memcmp : char_P pointer, char_P pointer, int, (char_P, int) memory,
(char_P, int) memory -> int

axiom memcmp_range:
  (forall char_P_char_M_s2_5_at_L:(char_P, int) memory.
    (forall char_P_char_M_s1_4_at_L:(char_P, int) memory.
      (forall s1_0:char_P pointer.
        (forall s2_0:char_P pointer.
          (forall n_0_0:int.
            ((((-2147483647) - 1) <= memcmp(s1_0, s2_0, n_0_0,
             char_P_char_M_s2_5_at_L, char_P_char_M_s1_4_at_L)) and
             (memcmp(s1_0, s2_0, n_0_0, char_P_char_M_s2_5_at_L,
             char_P_char_M_s1_4_at_L) <= 2147483647)))))))

logic strlen : char_P pointer, (char_P, int) memory -> int

axiom memcmp_strlen_left:
  (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
    (forall s1_2:char_P pointer.
      (forall s2_2:char_P pointer.
        (forall n_6:int.
          (((memcmp(s1_2, s2_2, n_6, char_P_char_M_s_3_8_at_L,
            char_P_char_M_s_3_8_at_L) = 0) and (strlen(s1_2,
            char_P_char_M_s_3_8_at_L) < n_6)) ->
           (strlen(s1_2, char_P_char_M_s_3_8_at_L) = strlen(s2_2,
           char_P_char_M_s_3_8_at_L)))))))

axiom memcmp_strlen_right:
  (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
    (forall s1_3:char_P pointer.
      (forall s2_3:char_P pointer.
        (forall n_7:int.
          (((memcmp(s1_3, s2_3, n_7, char_P_char_M_s_3_8_at_L,
            char_P_char_M_s_3_8_at_L) = 0) and (strlen(s2_3,
            char_P_char_M_s_3_8_at_L) < n_7)) ->
           (strlen(s1_3, char_P_char_M_s_3_8_at_L) = strlen(s2_3,
           char_P_char_M_s_3_8_at_L)))))))

axiom memcmp_strlen_shift_left:
  (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
    (forall s1_4:char_P pointer.
      (forall s2_4:char_P pointer.
        (forall k_0:int.
          (forall n_8:int.
            (((memcmp(s1_4, shift(s2_4, k_0), n_8, char_P_char_M_s_3_8_at_L,
              char_P_char_M_s_3_8_at_L) = 0) and
              ((0 <= k_0) and (strlen(s1_4, char_P_char_M_s_3_8_at_L) < n_8))) ->
             ((0 <= strlen(s2_4, char_P_char_M_s_3_8_at_L)) and (strlen(s2_4,
              char_P_char_M_s_3_8_at_L) <= (k_0 + strlen(s1_4,
              char_P_char_M_s_3_8_at_L))))))))))

axiom memcmp_strlen_shift_right:
  (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
    (forall s1_5:char_P pointer.
      (forall s2_5:char_P pointer.
        (forall k_1:int.
          (forall n_9:int.
            (((memcmp(shift(s1_5, k_1), s2_5, n_9, char_P_char_M_s_3_8_at_L,
              char_P_char_M_s_3_8_at_L) = 0) and
              ((0 <= k_1) and (strlen(s2_5, char_P_char_M_s_3_8_at_L) < n_9))) ->
             ((0 <= strlen(s1_5, char_P_char_M_s_3_8_at_L)) and (strlen(s1_5,
              char_P_char_M_s_3_8_at_L) <= (k_1 + strlen(s2_5,
              char_P_char_M_s_3_8_at_L))))))))))

axiom memcmp_zero:
  (forall char_P_char_M_s2_5_at_L:(char_P, int) memory.
    (forall char_P_char_M_s1_4_at_L:(char_P, int) memory.
      (forall s1_1:char_P pointer.
        (forall s2_1:char_P pointer.
          (forall n_1:int.
            ((memcmp(s1_1, s2_1, n_1, char_P_char_M_s2_5_at_L,
             char_P_char_M_s1_4_at_L) = 0) <->
             (forall i:int.
               (((0 <= i) and (i < n_1)) -> (select(char_P_char_M_s1_4_at_L,
                shift(s1_1, i)) = select(char_P_char_M_s2_5_at_L, shift(s2_1,
                i)))))))))))

logic memset : char_P pointer, int, int, (char_P, int) memory -> bool

axiom memset_def:
  (forall char_P_char_M_s_1_7_at_L:(char_P, int) memory.
    (forall s_2:char_P pointer.
      (forall c_2:int.
        (forall n_5:int.
          ((memset(s_2, c_2, n_5, char_P_char_M_s_1_7_at_L) = true) <->
           (forall i_1:int.
             (((0 <= i_1) and (i_1 < n_5)) ->
              (select(char_P_char_M_s_1_7_at_L, shift(s_2, i_1)) = c_2))))))))

function minimum(i_25: int, j_1: int) : int = ite(lt_int_bool(i_25, j_1),
  i_25, j_1)

axiom no_assign_memchr_0:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s_6_at_L:(char_P, int) memory.
          (forall n_2:int.
            (forall c_0:int.
              (forall s:char_P pointer.
                ((pset_disjoint(tmp, pset_range(pset_singleton(s), 0,
                  (n_2 - 1))) and not_assigns(tmpalloc,
                  char_P_char_M_s_6_at_L, tmpmem, tmp)) ->
                 (memchr(s, c_0, n_2, char_P_char_M_s_6_at_L) = memchr(s,
                 c_0, n_2, tmpmem))))))))))

axiom no_assign_memcmp_0:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s1_4_at_L:(char_P, int) memory.
          (forall char_P_char_M_s2_5_at_L:(char_P, int) memory.
            (forall n:int.
              (forall s2:char_P pointer.
                (forall s1:char_P pointer.
                  ((pset_disjoint(tmp, pset_range(pset_singleton(s2), 0,
                    (n - 1))) and not_assigns(tmpalloc,
                    char_P_char_M_s2_5_at_L, tmpmem, tmp)) ->
                   (memcmp(s1, s2, n, char_P_char_M_s2_5_at_L,
                   char_P_char_M_s1_4_at_L) = memcmp(s1, s2, n, tmpmem,
                   char_P_char_M_s1_4_at_L)))))))))))

axiom no_assign_memcmp_1:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s1_4_at_L:(char_P, int) memory.
          (forall char_P_char_M_s2_5_at_L:(char_P, int) memory.
            (forall n:int.
              (forall s2:char_P pointer.
                (forall s1:char_P pointer.
                  ((pset_disjoint(tmp, pset_range(pset_singleton(s1), 0,
                    (n - 1))) and not_assigns(tmpalloc,
                    char_P_char_M_s1_4_at_L, tmpmem, tmp)) ->
                   (memcmp(s1, s2, n, char_P_char_M_s2_5_at_L,
                   char_P_char_M_s1_4_at_L) = memcmp(s1, s2, n,
                   char_P_char_M_s2_5_at_L, tmpmem)))))))))))

axiom no_assign_memset_0:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s_1_7_at_L:(char_P, int) memory.
          (forall n_4:int.
            (forall c_1:int.
              (forall s_1:char_P pointer.
                ((pset_disjoint(tmp, pset_range(pset_singleton(s_1), 0,
                  (n_4 - 1))) and not_assigns(tmpalloc,
                  char_P_char_M_s_1_7_at_L, tmpmem, tmp)) ->
                 (memset(s_1, c_1, n_4,
                 char_P_char_M_s_1_7_at_L) = memset(s_1, c_1, n_4, tmpmem))))))))))

logic strchr : char_P pointer, int, (char_P, int) memory -> bool

axiom no_assign_strchr_0:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s_15_13_at_L:(char_P, int) memory.
          (forall c_3:int.
            (forall s_15:char_P pointer.
              ((pset_disjoint(tmp, pset_range(pset_singleton(s_15), 0,
                strlen(s_15, char_P_char_M_s_15_13_at_L))) and
                not_assigns(tmpalloc, char_P_char_M_s_15_13_at_L, tmpmem,
                tmp)) ->
               (strchr(s_15, c_3, char_P_char_M_s_15_13_at_L) = strchr(s_15,
               c_3, tmpmem)))))))))

logic strcmp : char_P pointer, char_P pointer, (char_P, int) memory, (char_P,
int) memory -> int

axiom no_assign_strcmp_0:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s1_6_9_at_L:(char_P, int) memory.
          (forall char_P_char_M_s2_6_10_at_L:(char_P, int) memory.
            (forall s2_6:char_P pointer.
              (forall s1_6:char_P pointer.
                ((pset_disjoint(tmp, pset_range(pset_singleton(s2_6), 0,
                  strlen(s2_6, char_P_char_M_s2_6_10_at_L))) and
                  not_assigns(tmpalloc, char_P_char_M_s2_6_10_at_L, tmpmem,
                  tmp)) ->
                 (strcmp(s1_6, s2_6, char_P_char_M_s2_6_10_at_L,
                 char_P_char_M_s1_6_9_at_L) = strcmp(s1_6, s2_6, tmpmem,
                 char_P_char_M_s1_6_9_at_L))))))))))

axiom no_assign_strcmp_1:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s1_6_9_at_L:(char_P, int) memory.
          (forall char_P_char_M_s2_6_10_at_L:(char_P, int) memory.
            (forall s2_6:char_P pointer.
              (forall s1_6:char_P pointer.
                ((pset_disjoint(tmp, pset_range(pset_singleton(s1_6), 0,
                  strlen(s1_6, char_P_char_M_s1_6_9_at_L))) and
                  not_assigns(tmpalloc, char_P_char_M_s1_6_9_at_L, tmpmem,
                  tmp)) ->
                 (strcmp(s1_6, s2_6, char_P_char_M_s2_6_10_at_L,
                 char_P_char_M_s1_6_9_at_L) = strcmp(s1_6, s2_6,
                 char_P_char_M_s2_6_10_at_L, tmpmem))))))))))

axiom no_assign_strlen_0:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
          (forall s_3:char_P pointer.
            ((pset_disjoint(tmp, pset_range_right(pset_singleton(s_3),
              0)) and not_assigns(tmpalloc, char_P_char_M_s_3_8_at_L, tmpmem,
              tmp)) ->
             (strlen(s_3, char_P_char_M_s_3_8_at_L) = strlen(s_3, tmpmem))))))))

logic strncmp : char_P pointer, char_P pointer, int, (char_P, int) memory,
(char_P, int) memory -> int

axiom no_assign_strncmp_0:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s1_9_11_at_L:(char_P, int) memory.
          (forall char_P_char_M_s2_9_12_at_L:(char_P, int) memory.
            (forall n_10:int.
              (forall s2_9:char_P pointer.
                (forall s1_9:char_P pointer.
                  ((pset_disjoint(tmp, pset_range(pset_singleton(s2_9), 0,
                    (n_10 - 1))) and not_assigns(tmpalloc,
                    char_P_char_M_s2_9_12_at_L, tmpmem, tmp)) ->
                   (strncmp(s1_9, s2_9, n_10, char_P_char_M_s2_9_12_at_L,
                   char_P_char_M_s1_9_11_at_L) = strncmp(s1_9, s2_9, n_10,
                   tmpmem, char_P_char_M_s1_9_11_at_L)))))))))))

axiom no_assign_strncmp_1:
  (forall tmp:char_P pset.
    (forall tmpmem:(char_P, int) memory.
      (forall tmpalloc:char_P alloc_table.
        (forall char_P_char_M_s1_9_11_at_L:(char_P, int) memory.
          (forall char_P_char_M_s2_9_12_at_L:(char_P, int) memory.
            (forall n_10:int.
              (forall s2_9:char_P pointer.
                (forall s1_9:char_P pointer.
                  ((pset_disjoint(tmp, pset_range(pset_singleton(s1_9), 0,
                    (n_10 - 1))) and not_assigns(tmpalloc,
                    char_P_char_M_s1_9_11_at_L, tmpmem, tmp)) ->
                   (strncmp(s1_9, s2_9, n_10, char_P_char_M_s2_9_12_at_L,
                   char_P_char_M_s1_9_11_at_L) = strncmp(s1_9, s2_9, n_10,
                   char_P_char_M_s2_9_12_at_L, tmpmem)))))))))))

logic wcslen : unsigned_short_P pointer, (unsigned_short_P,
int) memory -> int

logic wcscmp : unsigned_short_P pointer, unsigned_short_P pointer,
(unsigned_short_P, int) memory, (unsigned_short_P, int) memory -> int

axiom no_assign_wcscmp_0:
  (forall tmp:unsigned_short_P pset.
    (forall tmpmem:(unsigned_short_P, int) memory.
      (forall tmpalloc:unsigned_short_P alloc_table.
        (forall unsigned_short_P_unsigned_short_M_s1_11_15_at_L:(unsigned_short_P,
          int) memory.
          (forall unsigned_short_P_unsigned_short_M_s2_11_16_at_L:(unsigned_short_P,
            int) memory.
            (forall s2_11:unsigned_short_P pointer.
              (forall s1_11:unsigned_short_P pointer.
                ((pset_disjoint(tmp, pset_range(pset_singleton(s2_11), 0,
                  wcslen(s2_11,
                  unsigned_short_P_unsigned_short_M_s2_11_16_at_L))) and
                  not_assigns(tmpalloc,
                  unsigned_short_P_unsigned_short_M_s2_11_16_at_L, tmpmem,
                  tmp)) ->
                 (wcscmp(s1_11, s2_11,
                 unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
                 unsigned_short_P_unsigned_short_M_s1_11_15_at_L) = wcscmp(s1_11,
                 s2_11, tmpmem,
                 unsigned_short_P_unsigned_short_M_s1_11_15_at_L))))))))))

axiom no_assign_wcscmp_1:
  (forall tmp:unsigned_short_P pset.
    (forall tmpmem:(unsigned_short_P, int) memory.
      (forall tmpalloc:unsigned_short_P alloc_table.
        (forall unsigned_short_P_unsigned_short_M_s1_11_15_at_L:(unsigned_short_P,
          int) memory.
          (forall unsigned_short_P_unsigned_short_M_s2_11_16_at_L:(unsigned_short_P,
            int) memory.
            (forall s2_11:unsigned_short_P pointer.
              (forall s1_11:unsigned_short_P pointer.
                ((pset_disjoint(tmp, pset_range(pset_singleton(s1_11), 0,
                  wcslen(s1_11,
                  unsigned_short_P_unsigned_short_M_s1_11_15_at_L))) and
                  not_assigns(tmpalloc,
                  unsigned_short_P_unsigned_short_M_s1_11_15_at_L, tmpmem,
                  tmp)) ->
                 (wcscmp(s1_11, s2_11,
                 unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
                 unsigned_short_P_unsigned_short_M_s1_11_15_at_L) = wcscmp(s1_11,
                 s2_11, unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
                 tmpmem))))))))))

axiom no_assign_wcslen_0:
  (forall tmp:unsigned_short_P pset.
    (forall tmpmem:(unsigned_short_P, int) memory.
      (forall tmpalloc:unsigned_short_P alloc_table.
        (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:(unsigned_short_P,
          int) memory.
          (forall s_17:unsigned_short_P pointer.
            ((pset_disjoint(tmp, pset_range_right(pset_singleton(s_17),
              0)) and not_assigns(tmpalloc,
              unsigned_short_P_unsigned_short_M_s_17_14_at_L, tmpmem, tmp)) ->
             (wcslen(s_17,
             unsigned_short_P_unsigned_short_M_s_17_14_at_L) = wcslen(s_17,
             tmpmem))))))))

logic wcsncmp : unsigned_short_P pointer, unsigned_short_P pointer, int,
(unsigned_short_P, int) memory, (unsigned_short_P, int) memory -> int

axiom no_assign_wcsncmp_0:
  (forall tmp:unsigned_short_P pset.
    (forall tmpmem:(unsigned_short_P, int) memory.
      (forall tmpalloc:unsigned_short_P alloc_table.
        (forall unsigned_short_P_unsigned_short_M_s1_13_17_at_L:(unsigned_short_P,
          int) memory.
          (forall unsigned_short_P_unsigned_short_M_s2_13_18_at_L:(unsigned_short_P,
            int) memory.
            (forall n_12:int.
              (forall s2_13:unsigned_short_P pointer.
                (forall s1_13:unsigned_short_P pointer.
                  ((pset_disjoint(tmp, pset_range(pset_singleton(s2_13), 0,
                    (n_12 - 1))) and not_assigns(tmpalloc,
                    unsigned_short_P_unsigned_short_M_s2_13_18_at_L, tmpmem,
                    tmp)) ->
                   (wcsncmp(s1_13, s2_13, n_12,
                   unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
                   unsigned_short_P_unsigned_short_M_s1_13_17_at_L) = wcsncmp(s1_13,
                   s2_13, n_12, tmpmem,
                   unsigned_short_P_unsigned_short_M_s1_13_17_at_L)))))))))))

axiom no_assign_wcsncmp_1:
  (forall tmp:unsigned_short_P pset.
    (forall tmpmem:(unsigned_short_P, int) memory.
      (forall tmpalloc:unsigned_short_P alloc_table.
        (forall unsigned_short_P_unsigned_short_M_s1_13_17_at_L:(unsigned_short_P,
          int) memory.
          (forall unsigned_short_P_unsigned_short_M_s2_13_18_at_L:(unsigned_short_P,
            int) memory.
            (forall n_12:int.
              (forall s2_13:unsigned_short_P pointer.
                (forall s1_13:unsigned_short_P pointer.
                  ((pset_disjoint(tmp, pset_range(pset_singleton(s1_13), 0,
                    (n_12 - 1))) and not_assigns(tmpalloc,
                    unsigned_short_P_unsigned_short_M_s1_13_17_at_L, tmpmem,
                    tmp)) ->
                   (wcsncmp(s1_13, s2_13, n_12,
                   unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
                   unsigned_short_P_unsigned_short_M_s1_13_17_at_L) = wcsncmp(s1_13,
                   s2_13, n_12,
                   unsigned_short_P_unsigned_short_M_s2_13_18_at_L, tmpmem)))))))))))

axiom no_update_memchr_0:
  (forall tmp:char_P pointer.
    (forall tmpval:int.
      (forall char_P_char_M_s_6_at_L:(char_P, int) memory.
        (forall n_2:int.
          (forall c_0:int.
            (forall s:char_P pointer.
              ((not in_pset(tmp, pset_range(pset_singleton(s), 0,
               (n_2 - 1)))) -> (memchr(s, c_0, n_2,
               char_P_char_M_s_6_at_L) = memchr(s, c_0, n_2,
               store(char_P_char_M_s_6_at_L, tmp, tmpval))))))))))

axiom no_update_memcmp_0:
  (forall tmp:char_P pointer.
    (forall tmpval:int.
      (forall char_P_char_M_s1_4_at_L:(char_P, int) memory.
        (forall char_P_char_M_s2_5_at_L:(char_P, int) memory.
          (forall n:int.
            (forall s2:char_P pointer.
              (forall s1:char_P pointer.
                ((not in_pset(tmp, pset_range(pset_singleton(s2), 0,
                 (n - 1)))) -> (memcmp(s1, s2, n, char_P_char_M_s2_5_at_L,
                 char_P_char_M_s1_4_at_L) = memcmp(s1, s2, n,
                 store(char_P_char_M_s2_5_at_L, tmp, tmpval),
                 char_P_char_M_s1_4_at_L))))))))))

axiom no_update_memcmp_1:
  (forall tmp:char_P pointer.
    (forall tmpval:int.
      (forall char_P_char_M_s1_4_at_L:(char_P, int) memory.
        (forall char_P_char_M_s2_5_at_L:(char_P, int) memory.
          (forall n:int.
            (forall s2:char_P pointer.
              (forall s1:char_P pointer.
                ((not in_pset(tmp, pset_range(pset_singleton(s1), 0,
                 (n - 1)))) -> (memcmp(s1, s2, n, char_P_char_M_s2_5_at_L,
                 char_P_char_M_s1_4_at_L) = memcmp(s1, s2, n,
                 char_P_char_M_s2_5_at_L, store(char_P_char_M_s1_4_at_L, tmp,
                 tmpval)))))))))))

axiom no_update_memset_0:
  (forall tmp:char_P pointer.
    (forall tmpval:int.
      (forall char_P_char_M_s_1_7_at_L:(char_P, int) memory.
        (forall n_4:int.
          (forall c_1:int.
            (forall s_1:char_P pointer.
              ((not in_pset(tmp, pset_range(pset_singleton(s_1), 0,
               (n_4 - 1)))) -> (memset(s_1, c_1, n_4,
               char_P_char_M_s_1_7_at_L) = memset(s_1, c_1, n_4,
               store(char_P_char_M_s_1_7_at_L, tmp, tmpval))))))))))

axiom no_update_strchr_0:
  (forall tmp:char_P pointer.
    (forall tmpval:int.
      (forall char_P_char_M_s_15_13_at_L:(char_P, int) memory.
        (forall c_3:int.
          (forall s_15:char_P pointer.
            ((not in_pset(tmp, pset_range(pset_singleton(s_15), 0,
             strlen(s_15, char_P_char_M_s_15_13_at_L)))) -> (strchr(s_15,
             c_3, char_P_char_M_s_15_13_at_L) = strchr(s_15, c_3,
             store(char_P_char_M_s_15_13_at_L, tmp, tmpval)))))))))

axiom no_update_strcmp_0:
  (forall tmp:char_P pointer.
    (forall tmpval:int.
      (forall char_P_char_M_s1_6_9_at_L:(char_P, int) memory.
        (forall char_P_char_M_s2_6_10_at_L:(char_P, int) memory.
          (forall s2_6:char_P pointer.
            (forall s1_6:char_P pointer.
              ((not in_pset(tmp, pset_range(pset_singleton(s2_6), 0,
               strlen(s2_6, char_P_char_M_s2_6_10_at_L)))) -> (strcmp(s1_6,
               s2_6, char_P_char_M_s2_6_10_at_L,
               char_P_char_M_s1_6_9_at_L) = strcmp(s1_6, s2_6,
               store(char_P_char_M_s2_6_10_at_L, tmp, tmpval),
               char_P_char_M_s1_6_9_at_L)))))))))

axiom no_update_strcmp_1:
  (forall tmp:char_P pointer.
    (forall tmpval:int.
      (forall char_P_char_M_s1_6_9_at_L:(char_P, int) memory.
        (forall char_P_char_M_s2_6_10_at_L:(char_P, int) memory.
          (forall s2_6:char_P pointer.
            (forall s1_6:char_P pointer.
              ((not in_pset(tmp, pset_range(pset_singleton(s1_6), 0,
               strlen(s1_6, char_P_char_M_s1_6_9_at_L)))) -> (strcmp(s1_6,
               s2_6, char_P_char_M_s2_6_10_at_L,
               char_P_char_M_s1_6_9_at_L) = strcmp(s1_6, s2_6,
               char_P_char_M_s2_6_10_at_L, store(char_P_char_M_s1_6_9_at_L,
               tmp, tmpval))))))))))

axiom no_update_strlen_0:
  (forall tmp:char_P pointer.
    (forall tmpval:int.
      (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
        (forall s_3:char_P pointer.
          ((not in_pset(tmp, pset_range_right(pset_singleton(s_3), 0))) ->
           (strlen(s_3, char_P_char_M_s_3_8_at_L) = strlen(s_3,
           store(char_P_char_M_s_3_8_at_L, tmp, tmpval))))))))

axiom no_update_strncmp_0:
  (forall tmp:char_P pointer.
    (forall tmpval:int.
      (forall char_P_char_M_s1_9_11_at_L:(char_P, int) memory.
        (forall char_P_char_M_s2_9_12_at_L:(char_P, int) memory.
          (forall n_10:int.
            (forall s2_9:char_P pointer.
              (forall s1_9:char_P pointer.
                ((not in_pset(tmp, pset_range(pset_singleton(s2_9), 0,
                 (n_10 - 1)))) -> (strncmp(s1_9, s2_9, n_10,
                 char_P_char_M_s2_9_12_at_L,
                 char_P_char_M_s1_9_11_at_L) = strncmp(s1_9, s2_9, n_10,
                 store(char_P_char_M_s2_9_12_at_L, tmp, tmpval),
                 char_P_char_M_s1_9_11_at_L))))))))))

axiom no_update_strncmp_1:
  (forall tmp:char_P pointer.
    (forall tmpval:int.
      (forall char_P_char_M_s1_9_11_at_L:(char_P, int) memory.
        (forall char_P_char_M_s2_9_12_at_L:(char_P, int) memory.
          (forall n_10:int.
            (forall s2_9:char_P pointer.
              (forall s1_9:char_P pointer.
                ((not in_pset(tmp, pset_range(pset_singleton(s1_9), 0,
                 (n_10 - 1)))) -> (strncmp(s1_9, s2_9, n_10,
                 char_P_char_M_s2_9_12_at_L,
                 char_P_char_M_s1_9_11_at_L) = strncmp(s1_9, s2_9, n_10,
                 char_P_char_M_s2_9_12_at_L,
                 store(char_P_char_M_s1_9_11_at_L, tmp, tmpval)))))))))))

axiom no_update_wcscmp_0:
  (forall tmp:unsigned_short_P pointer.
    (forall tmpval:int.
      (forall unsigned_short_P_unsigned_short_M_s1_11_15_at_L:(unsigned_short_P,
        int) memory.
        (forall unsigned_short_P_unsigned_short_M_s2_11_16_at_L:(unsigned_short_P,
          int) memory.
          (forall s2_11:unsigned_short_P pointer.
            (forall s1_11:unsigned_short_P pointer.
              ((not in_pset(tmp, pset_range(pset_singleton(s2_11), 0,
               wcslen(s2_11,
               unsigned_short_P_unsigned_short_M_s2_11_16_at_L)))) ->
               (wcscmp(s1_11, s2_11,
               unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
               unsigned_short_P_unsigned_short_M_s1_11_15_at_L) = wcscmp(s1_11,
               s2_11, store(unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
               tmp, tmpval),
               unsigned_short_P_unsigned_short_M_s1_11_15_at_L)))))))))

axiom no_update_wcscmp_1:
  (forall tmp:unsigned_short_P pointer.
    (forall tmpval:int.
      (forall unsigned_short_P_unsigned_short_M_s1_11_15_at_L:(unsigned_short_P,
        int) memory.
        (forall unsigned_short_P_unsigned_short_M_s2_11_16_at_L:(unsigned_short_P,
          int) memory.
          (forall s2_11:unsigned_short_P pointer.
            (forall s1_11:unsigned_short_P pointer.
              ((not in_pset(tmp, pset_range(pset_singleton(s1_11), 0,
               wcslen(s1_11,
               unsigned_short_P_unsigned_short_M_s1_11_15_at_L)))) ->
               (wcscmp(s1_11, s2_11,
               unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
               unsigned_short_P_unsigned_short_M_s1_11_15_at_L) = wcscmp(s1_11,
               s2_11, unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
               store(unsigned_short_P_unsigned_short_M_s1_11_15_at_L, tmp,
               tmpval))))))))))

axiom no_update_wcslen_0:
  (forall tmp:unsigned_short_P pointer.
    (forall tmpval:int.
      (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:(unsigned_short_P,
        int) memory.
        (forall s_17:unsigned_short_P pointer.
          ((not in_pset(tmp, pset_range_right(pset_singleton(s_17), 0))) ->
           (wcslen(s_17,
           unsigned_short_P_unsigned_short_M_s_17_14_at_L) = wcslen(s_17,
           store(unsigned_short_P_unsigned_short_M_s_17_14_at_L, tmp,
           tmpval))))))))

axiom no_update_wcsncmp_0:
  (forall tmp:unsigned_short_P pointer.
    (forall tmpval:int.
      (forall unsigned_short_P_unsigned_short_M_s1_13_17_at_L:(unsigned_short_P,
        int) memory.
        (forall unsigned_short_P_unsigned_short_M_s2_13_18_at_L:(unsigned_short_P,
          int) memory.
          (forall n_12:int.
            (forall s2_13:unsigned_short_P pointer.
              (forall s1_13:unsigned_short_P pointer.
                ((not in_pset(tmp, pset_range(pset_singleton(s2_13), 0,
                 (n_12 - 1)))) -> (wcsncmp(s1_13, s2_13, n_12,
                 unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
                 unsigned_short_P_unsigned_short_M_s1_13_17_at_L) = wcsncmp(s1_13,
                 s2_13, n_12,
                 store(unsigned_short_P_unsigned_short_M_s2_13_18_at_L, tmp,
                 tmpval), unsigned_short_P_unsigned_short_M_s1_13_17_at_L))))))))))

axiom no_update_wcsncmp_1:
  (forall tmp:unsigned_short_P pointer.
    (forall tmpval:int.
      (forall unsigned_short_P_unsigned_short_M_s1_13_17_at_L:(unsigned_short_P,
        int) memory.
        (forall unsigned_short_P_unsigned_short_M_s2_13_18_at_L:(unsigned_short_P,
          int) memory.
          (forall n_12:int.
            (forall s2_13:unsigned_short_P pointer.
              (forall s1_13:unsigned_short_P pointer.
                ((not in_pset(tmp, pset_range(pset_singleton(s1_13), 0,
                 (n_12 - 1)))) -> (wcsncmp(s1_13, s2_13, n_12,
                 unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
                 unsigned_short_P_unsigned_short_M_s1_13_17_at_L) = wcsncmp(s1_13,
                 s2_13, n_12,
                 unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
                 store(unsigned_short_P_unsigned_short_M_s1_13_17_at_L, tmp,
                 tmpval)))))))))))

axiom pointer_addr_of_char_P_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(char_P_of_pointer_address(p))))

axiom pointer_addr_of_char_xP_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(char_xP_of_pointer_address(p))))

axiom pointer_addr_of_int_P_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(int_P_of_pointer_address(p))))

logic unsigned_short_P_of_pointer_address : unit pointer -> unsigned_short_P pointer

axiom pointer_addr_of_unsigned_short_P_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(unsigned_short_P_of_pointer_address(p))))

logic void_P_of_pointer_address : unit pointer -> void_P pointer

axiom pointer_addr_of_void_P_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(void_P_of_pointer_address(p))))

predicate right_valid_struct_char_P(p: char_P pointer, b: int,
  char_P_alloc_table: char_P alloc_table) = (offset_max(char_P_alloc_table,
  p) >= b)

predicate right_valid_struct_char_xP(p: char_xP pointer, b: int,
  char_xP_alloc_table: char_xP alloc_table) =
  (offset_max(char_xP_alloc_table, p) >= b)

predicate right_valid_struct_int_P(p: int_P pointer, b: int,
  int_P_alloc_table: int_P alloc_table) = (offset_max(int_P_alloc_table,
  p) >= b)

predicate right_valid_struct_unsigned_short_P(p: unsigned_short_P pointer,
  b: int, unsigned_short_P_alloc_table: unsigned_short_P alloc_table) =
  (offset_max(unsigned_short_P_alloc_table, p) >= b)

predicate right_valid_struct_void_P(p: void_P pointer, b: int,
  void_P_alloc_table: void_P alloc_table) = (offset_max(void_P_alloc_table,
  p) >= b)

axiom strchr_def:
  (forall char_P_char_M_s_15_13_at_L:(char_P, int) memory.
    (forall s_16:char_P pointer.
      (forall c_4:int.
        ((strchr(s_16, c_4, char_P_char_M_s_15_13_at_L) = true) <->
         (exists i_13:int.
           ((0 <= i_13) and
            ((i_13 <= strlen(s_16, char_P_char_M_s_15_13_at_L)) and
             (select(char_P_char_M_s_15_13_at_L, shift(s_16, i_13)) = c_4))))))))

axiom strcmp_range:
  (forall char_P_char_M_s2_6_10_at_L:(char_P, int) memory.
    (forall char_P_char_M_s1_6_9_at_L:(char_P, int) memory.
      (forall s1_7:char_P pointer.
        (forall s2_7:char_P pointer.
          ((((-2147483647) - 1) <= strcmp(s1_7, s2_7,
           char_P_char_M_s2_6_10_at_L, char_P_char_M_s1_6_9_at_L)) and
           (strcmp(s1_7, s2_7, char_P_char_M_s2_6_10_at_L,
           char_P_char_M_s1_6_9_at_L) <= 2147483647))))))

axiom strcmp_zero:
  (forall char_P_char_M_s2_6_10_at_L:(char_P, int) memory.
    (forall char_P_char_M_s1_6_9_at_L:(char_P, int) memory.
      (forall s1_8:char_P pointer.
        (forall s2_8:char_P pointer.
          ((strcmp(s1_8, s2_8, char_P_char_M_s2_6_10_at_L,
           char_P_char_M_s1_6_9_at_L) = 0) <->
           ((strlen(s1_8, char_P_char_M_s1_6_9_at_L) = strlen(s2_8,
            char_P_char_M_s2_6_10_at_L)) and
            (forall i_11:int.
              (((0 <= i_11) and (i_11 <= strlen(s1_8,
                char_P_char_M_s1_6_9_at_L))) ->
               (select(char_P_char_M_s1_6_9_at_L, shift(s1_8,
               i_11)) = select(char_P_char_M_s2_6_10_at_L, shift(s2_8,
               i_11)))))))))))

predicate strict_valid_root_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) = a) and
   (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_root_char_xP(p: char_xP pointer, a: int, b: int,
  char_xP_alloc_table: char_xP alloc_table) =
  ((offset_min(char_xP_alloc_table, p) = a) and
   (offset_max(char_xP_alloc_table, p) = b))

predicate strict_valid_root_int_P(p: int_P pointer, a: int, b: int,
  int_P_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_alloc_table, p) = a) and (offset_max(int_P_alloc_table,
   p) = b))

predicate strict_valid_root_unsigned_short_P(p: unsigned_short_P pointer,
  a: int, b: int,
  unsigned_short_P_alloc_table: unsigned_short_P alloc_table) =
  ((offset_min(unsigned_short_P_alloc_table, p) = a) and
   (offset_max(unsigned_short_P_alloc_table, p) = b))

predicate strict_valid_root_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) = a) and
   (offset_max(void_P_alloc_table, p) = b))

predicate strict_valid_struct_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) = a) and
   (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_struct_char_xP(p: char_xP pointer, a: int, b: int,
  char_xP_alloc_table: char_xP alloc_table) =
  ((offset_min(char_xP_alloc_table, p) = a) and
   (offset_max(char_xP_alloc_table, p) = b))

predicate strict_valid_struct_int_P(p: int_P pointer, a: int, b: int,
  int_P_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_alloc_table, p) = a) and (offset_max(int_P_alloc_table,
   p) = b))

predicate strict_valid_struct_unsigned_short_P(p: unsigned_short_P pointer,
  a: int, b: int,
  unsigned_short_P_alloc_table: unsigned_short_P alloc_table) =
  ((offset_min(unsigned_short_P_alloc_table, p) = a) and
   (offset_max(unsigned_short_P_alloc_table, p) = b))

predicate strict_valid_struct_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) = a) and
   (offset_max(void_P_alloc_table, p) = b))

axiom strlen_at_null:
  (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
    (forall s_8:char_P pointer.
      ((0 <= strlen(s_8, char_P_char_M_s_3_8_at_L)) ->
       (select(char_P_char_M_s_3_8_at_L, shift(s_8, strlen(s_8,
       char_P_char_M_s_3_8_at_L))) = 0))))

axiom strlen_before_null:
  (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
    (forall s_7:char_P pointer.
      (forall i_4:int.
        (((0 <= i_4) and (i_4 < strlen(s_7, char_P_char_M_s_3_8_at_L))) ->
         (select(char_P_char_M_s_3_8_at_L, shift(s_7, i_4)) <> 0)))))

axiom strlen_create:
  (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
    (forall s_13:char_P pointer.
      (forall i_9:int.
        (((0 <= i_9) and
          ((i_9 <= 2147483647) and (select(char_P_char_M_s_3_8_at_L,
           shift(s_13, i_9)) = 0))) ->
         ((0 <= strlen(s_13, char_P_char_M_s_3_8_at_L)) and (strlen(s_13,
          char_P_char_M_s_3_8_at_L) <= i_9))))))

axiom strlen_create_shift:
  (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
    (forall s_14:char_P pointer.
      (forall i_10:int.
        (forall k:int.
          (((0 <= k) and
            ((k <= i_10) and
             ((i_10 <= 2147483647) and (select(char_P_char_M_s_3_8_at_L,
              shift(s_14, i_10)) = 0)))) ->
           ((0 <= strlen(shift(s_14, k), char_P_char_M_s_3_8_at_L)) and
            (strlen(shift(s_14, k), char_P_char_M_s_3_8_at_L) <= (i_10 - k))))))))

axiom strlen_neg:
  (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
    (forall s_5:char_P pointer.
      ((forall i_3:int.
         (((0 <= i_3) and (i_3 <= 2147483647)) ->
          (select(char_P_char_M_s_3_8_at_L, shift(s_5, i_3)) <> 0))) ->
       (strlen(s_5, char_P_char_M_s_3_8_at_L) < 0))))

axiom strlen_not_zero:
  (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
    (forall s_9:char_P pointer.
      (forall i_5:int.
        (((0 <= i_5) and
          ((i_5 <= strlen(s_9, char_P_char_M_s_3_8_at_L)) and
           (select(char_P_char_M_s_3_8_at_L, shift(s_9, i_5)) <> 0))) ->
         (i_5 < strlen(s_9, char_P_char_M_s_3_8_at_L))))))

axiom strlen_pos_or_null:
  (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
    (forall s_4:char_P pointer.
      (forall i_2:int.
        (((0 <= i_2) and
          ((i_2 <= 2147483647) and
           ((forall j:int.
              (((0 <= j) and (j < i_2)) -> (select(char_P_char_M_s_3_8_at_L,
               shift(s_4, j)) <> 0))) and
            (select(char_P_char_M_s_3_8_at_L, shift(s_4, i_2)) = 0)))) ->
         (strlen(s_4, char_P_char_M_s_3_8_at_L) = i_2)))))

axiom strlen_range:
  (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
    (forall s_6:char_P pointer. (strlen(s_6,
      char_P_char_M_s_3_8_at_L) <= 2147483647)))

axiom strlen_shift:
  (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
    (forall s_12:char_P pointer.
      (forall i_8:int.
        (((0 <= i_8) and (i_8 <= strlen(s_12, char_P_char_M_s_3_8_at_L))) ->
         (strlen(shift(s_12, i_8), char_P_char_M_s_3_8_at_L) = (strlen(s_12,
         char_P_char_M_s_3_8_at_L) - i_8))))))

axiom strlen_sup:
  (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
    (forall s_11:char_P pointer.
      (forall i_7:int.
        (((0 <= i_7) and (select(char_P_char_M_s_3_8_at_L, shift(s_11,
          i_7)) = 0)) ->
         ((0 <= strlen(s_11, char_P_char_M_s_3_8_at_L)) and (strlen(s_11,
          char_P_char_M_s_3_8_at_L) <= i_7))))))

axiom strlen_zero:
  (forall char_P_char_M_s_3_8_at_L:(char_P, int) memory.
    (forall s_10:char_P pointer.
      (forall i_6:int.
        (((0 <= i_6) and
          ((i_6 <= strlen(s_10, char_P_char_M_s_3_8_at_L)) and
           (select(char_P_char_M_s_3_8_at_L, shift(s_10, i_6)) = 0))) ->
         (i_6 = strlen(s_10, char_P_char_M_s_3_8_at_L))))))

axiom strncmp_zero:
  (forall char_P_char_M_s2_9_12_at_L:(char_P, int) memory.
    (forall char_P_char_M_s1_9_11_at_L:(char_P, int) memory.
      (forall s1_10:char_P pointer.
        (forall s2_10:char_P pointer.
          (forall n_11:int.
            ((strncmp(s1_10, s2_10, n_11, char_P_char_M_s2_9_12_at_L,
             char_P_char_M_s1_9_11_at_L) = 0) <->
             (((strlen(s1_10, char_P_char_M_s1_9_11_at_L) < n_11) and
               (strcmp(s1_10, s2_10, char_P_char_M_s2_9_12_at_L,
               char_P_char_M_s1_9_11_at_L) = 0)) or
              (forall i_12:int.
                (((0 <= i_12) and (i_12 < n_11)) ->
                 (select(char_P_char_M_s1_9_11_at_L, shift(s1_10,
                 i_12)) = select(char_P_char_M_s2_9_12_at_L, shift(s2_10,
                 i_12))))))))))))

logic unsigned_short_P_tag : unsigned_short_P tag_id

axiom unsigned_short_P_int: (int_of_tag(unsigned_short_P_tag) = 1)

axiom unsigned_short_P_of_pointer_address_of_pointer_addr:
  (forall p:unsigned_short_P pointer.
    (p = unsigned_short_P_of_pointer_address(pointer_address(p))))

axiom unsigned_short_P_parenttag_bottom: parenttag(unsigned_short_P_tag,
  bottom_tag)

axiom unsigned_short_P_tags:
  (forall x:unsigned_short_P pointer.
    (forall unsigned_short_P_tag_table:unsigned_short_P tag_table.
      instanceof(unsigned_short_P_tag_table, x, unsigned_short_P_tag)))

predicate valid_string(s_28: char_P pointer,
  char_P_s_28_19_alloc_table_at_L: char_P alloc_table,
  char_P_char_M_s_28_19_at_L: (char_P, int) memory) =
  ((0 <= strlen(s_28, char_P_char_M_s_28_19_at_L)) and
   ((offset_min(char_P_s_28_19_alloc_table_at_L, s_28) <= 0) and
    (offset_max(char_P_s_28_19_alloc_table_at_L, s_28) >= strlen(s_28,
    char_P_char_M_s_28_19_at_L))))

predicate valid___string_something(char_P___string_something_1_alloc_table: char_P alloc_table,
  char_P_char_M___string_something_1: (char_P, int) memory) =
  (valid_string(__string_something, char_P___string_something_1_alloc_table,
   char_P_char_M___string_something_1) and (strlen(__string_something,
   char_P_char_M___string_something_1) = 9))

predicate valid___string_something_0(char_P___string_something_1_alloc_table: char_P alloc_table) =
  ((offset_min(char_P___string_something_1_alloc_table,
   __string_something) <= 0) and
   (offset_max(char_P___string_something_1_alloc_table,
   __string_something) >= 9))

predicate valid_a(int_P_a_2_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_a_2_alloc_table, a) <= 0) and
   (offset_max(int_P_a_2_alloc_table, a) >= 11))

predicate valid_bitvector_struct_char_P(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_char_xP(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_int_P(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_unsigned_short_P(p: unit pointer, a: int,
  b: int, bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_void_P(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_c(char_xP_c_3_alloc_table: char_xP alloc_table) =
  ((offset_min(char_xP_c_3_alloc_table, c) <= 0) and
   (offset_max(char_xP_c_3_alloc_table, c) >= 11))

predicate valid_root_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) <= a) and
   (offset_max(char_P_alloc_table, p) >= b))

predicate valid_root_char_xP(p: char_xP pointer, a: int, b: int,
  char_xP_alloc_table: char_xP alloc_table) =
  ((offset_min(char_xP_alloc_table, p) <= a) and
   (offset_max(char_xP_alloc_table, p) >= b))

predicate valid_root_int_P(p: int_P pointer, a: int, b: int,
  int_P_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_alloc_table, p) <= a) and (offset_max(int_P_alloc_table,
   p) >= b))

predicate valid_root_unsigned_short_P(p: unsigned_short_P pointer, a: int,
  b: int, unsigned_short_P_alloc_table: unsigned_short_P alloc_table) =
  ((offset_min(unsigned_short_P_alloc_table, p) <= a) and
   (offset_max(unsigned_short_P_alloc_table, p) >= b))

predicate valid_root_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) <= a) and
   (offset_max(void_P_alloc_table, p) >= b))

predicate valid_string_or_null(s_29: char_P pointer,
  char_P_s_29_20_alloc_table_at_L: char_P alloc_table,
  char_P_char_M_s_29_20_at_L: (char_P, int) memory) =
  ((s_29 = null) or valid_string(s_29, char_P_s_29_20_alloc_table_at_L,
   char_P_char_M_s_29_20_at_L))

predicate valid_struct_char_P(p: char_P pointer, a: int, b: int,
  char_P_alloc_table: char_P alloc_table) =
  ((offset_min(char_P_alloc_table, p) <= a) and
   (offset_max(char_P_alloc_table, p) >= b))

predicate valid_struct_char_xP(p: char_xP pointer, a: int, b: int,
  char_xP_alloc_table: char_xP alloc_table) =
  ((offset_min(char_xP_alloc_table, p) <= a) and
   (offset_max(char_xP_alloc_table, p) >= b))

predicate valid_struct_int_P(p: int_P pointer, a: int, b: int,
  int_P_alloc_table: int_P alloc_table) =
  ((offset_min(int_P_alloc_table, p) <= a) and (offset_max(int_P_alloc_table,
   p) >= b))

predicate valid_struct_unsigned_short_P(p: unsigned_short_P pointer, a: int,
  b: int, unsigned_short_P_alloc_table: unsigned_short_P alloc_table) =
  ((offset_min(unsigned_short_P_alloc_table, p) <= a) and
   (offset_max(unsigned_short_P_alloc_table, p) >= b))

predicate valid_struct_void_P(p: void_P pointer, a: int, b: int,
  void_P_alloc_table: void_P alloc_table) =
  ((offset_min(void_P_alloc_table, p) <= a) and
   (offset_max(void_P_alloc_table, p) >= b))

predicate valid_wstring(s_30: unsigned_short_P pointer,
  unsigned_short_P_s_30_21_alloc_table_at_L: unsigned_short_P alloc_table,
  unsigned_short_P_unsigned_short_M_s_30_21_at_L: (unsigned_short_P,
  int) memory) =
  ((0 <= wcslen(s_30, unsigned_short_P_unsigned_short_M_s_30_21_at_L)) and
   ((offset_min(unsigned_short_P_s_30_21_alloc_table_at_L, s_30) <= 0) and
    (offset_max(unsigned_short_P_s_30_21_alloc_table_at_L,
    s_30) >= wcslen(s_30, unsigned_short_P_unsigned_short_M_s_30_21_at_L))))

predicate valid_wstring_or_null(s_31: unsigned_short_P pointer,
  unsigned_short_P_s_31_22_alloc_table_at_L: unsigned_short_P alloc_table,
  unsigned_short_P_unsigned_short_M_s_31_22_at_L: (unsigned_short_P,
  int) memory) =
  ((s_31 = null) or valid_wstring(s_31,
   unsigned_short_P_s_31_22_alloc_table_at_L,
   unsigned_short_P_unsigned_short_M_s_31_22_at_L))

logic void_P_tag : void_P tag_id

axiom void_P_int: (int_of_tag(void_P_tag) = 1)

axiom void_P_of_pointer_address_of_pointer_addr:
  (forall p:void_P pointer.
    (p = void_P_of_pointer_address(pointer_address(p))))

axiom void_P_parenttag_bottom: parenttag(void_P_tag, bottom_tag)

axiom void_P_tags:
  (forall x:void_P pointer.
    (forall void_P_tag_table:void_P tag_table. instanceof(void_P_tag_table,
      x, void_P_tag)))

axiom wcscmp_zero:
  (forall unsigned_short_P_unsigned_short_M_s2_11_16_at_L:(unsigned_short_P,
    int) memory.
    (forall unsigned_short_P_unsigned_short_M_s1_11_15_at_L:(unsigned_short_P,
      int) memory.
      (forall s1_12:unsigned_short_P pointer.
        (forall s2_12:unsigned_short_P pointer.
          ((wcscmp(s1_12, s2_12,
           unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
           unsigned_short_P_unsigned_short_M_s1_11_15_at_L) = 0) <->
           ((wcslen(s1_12,
            unsigned_short_P_unsigned_short_M_s1_11_15_at_L) = wcslen(s2_12,
            unsigned_short_P_unsigned_short_M_s2_11_16_at_L)) and
            (forall i_23:int.
              (((0 <= i_23) and (i_23 <= wcslen(s1_12,
                unsigned_short_P_unsigned_short_M_s1_11_15_at_L))) ->
               (select(unsigned_short_P_unsigned_short_M_s1_11_15_at_L,
               shift(s1_12,
               i_23)) = select(unsigned_short_P_unsigned_short_M_s2_11_16_at_L,
               shift(s2_12, i_23)))))))))))

axiom wcslen_at_null:
  (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:(unsigned_short_P,
    int) memory.
    (forall s_21:unsigned_short_P pointer.
      ((0 <= wcslen(s_21, unsigned_short_P_unsigned_short_M_s_17_14_at_L)) ->
       (select(unsigned_short_P_unsigned_short_M_s_17_14_at_L, shift(s_21,
       wcslen(s_21, unsigned_short_P_unsigned_short_M_s_17_14_at_L))) = 0))))

axiom wcslen_before_null:
  (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:(unsigned_short_P,
    int) memory.
    (forall s_20:unsigned_short_P pointer.
      (forall i_16:int.
        (((0 <= i_16) and (i_16 < wcslen(s_20,
          unsigned_short_P_unsigned_short_M_s_17_14_at_L))) ->
         (select(unsigned_short_P_unsigned_short_M_s_17_14_at_L, shift(s_20,
         i_16)) <> 0)))))

axiom wcslen_create:
  (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:(unsigned_short_P,
    int) memory.
    (forall s_26:unsigned_short_P pointer.
      (forall i_21:int.
        (((0 <= i_21) and
          (select(unsigned_short_P_unsigned_short_M_s_17_14_at_L, shift(s_26,
          i_21)) = 0)) ->
         ((0 <= wcslen(s_26,
          unsigned_short_P_unsigned_short_M_s_17_14_at_L)) and (wcslen(s_26,
          unsigned_short_P_unsigned_short_M_s_17_14_at_L) <= i_21))))))

axiom wcslen_create_shift:
  (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:(unsigned_short_P,
    int) memory.
    (forall s_27:unsigned_short_P pointer.
      (forall i_22:int.
        (forall k_2:int.
          (((0 <= k_2) and
            ((k_2 <= i_22) and
             (select(unsigned_short_P_unsigned_short_M_s_17_14_at_L,
             shift(s_27, i_22)) = 0))) ->
           ((0 <= wcslen(shift(s_27, k_2),
            unsigned_short_P_unsigned_short_M_s_17_14_at_L)) and
            (wcslen(shift(s_27, k_2),
            unsigned_short_P_unsigned_short_M_s_17_14_at_L) <= (i_22 - k_2))))))))

axiom wcslen_neg:
  (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:(unsigned_short_P,
    int) memory.
    (forall s_19:unsigned_short_P pointer.
      ((forall i_15:int.
         ((0 <= i_15) ->
          (select(unsigned_short_P_unsigned_short_M_s_17_14_at_L, shift(s_19,
          i_15)) <> 0))) ->
       (wcslen(s_19, unsigned_short_P_unsigned_short_M_s_17_14_at_L) < 0))))

axiom wcslen_not_zero:
  (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:(unsigned_short_P,
    int) memory.
    (forall s_22:unsigned_short_P pointer.
      (forall i_17:int.
        (((0 <= i_17) and
          ((i_17 <= wcslen(s_22,
           unsigned_short_P_unsigned_short_M_s_17_14_at_L)) and
           (select(unsigned_short_P_unsigned_short_M_s_17_14_at_L,
           shift(s_22, i_17)) <> 0))) ->
         (i_17 < wcslen(s_22,
         unsigned_short_P_unsigned_short_M_s_17_14_at_L))))))

axiom wcslen_pos_or_null:
  (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:(unsigned_short_P,
    int) memory.
    (forall s_18:unsigned_short_P pointer.
      (forall i_14:int.
        (((0 <= i_14) and
          ((forall j_0:int.
             (((0 <= j_0) and (j_0 < i_14)) ->
              (select(unsigned_short_P_unsigned_short_M_s_17_14_at_L,
              shift(s_18, j_0)) <> 0))) and
           (select(unsigned_short_P_unsigned_short_M_s_17_14_at_L,
           shift(s_18, i_14)) = 0))) ->
         (wcslen(s_18,
         unsigned_short_P_unsigned_short_M_s_17_14_at_L) = i_14)))))

axiom wcslen_shift:
  (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:(unsigned_short_P,
    int) memory.
    (forall s_25:unsigned_short_P pointer.
      (forall i_20:int.
        (((0 <= i_20) and (i_20 <= wcslen(s_25,
          unsigned_short_P_unsigned_short_M_s_17_14_at_L))) ->
         (wcslen(shift(s_25, i_20),
         unsigned_short_P_unsigned_short_M_s_17_14_at_L) = (wcslen(s_25,
         unsigned_short_P_unsigned_short_M_s_17_14_at_L) - i_20))))))

axiom wcslen_sup:
  (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:(unsigned_short_P,
    int) memory.
    (forall s_24:unsigned_short_P pointer.
      (forall i_19:int.
        (((0 <= i_19) and
          (select(unsigned_short_P_unsigned_short_M_s_17_14_at_L, shift(s_24,
          i_19)) = 0)) ->
         ((0 <= wcslen(s_24,
          unsigned_short_P_unsigned_short_M_s_17_14_at_L)) and (wcslen(s_24,
          unsigned_short_P_unsigned_short_M_s_17_14_at_L) <= i_19))))))

axiom wcslen_zero:
  (forall unsigned_short_P_unsigned_short_M_s_17_14_at_L:(unsigned_short_P,
    int) memory.
    (forall s_23:unsigned_short_P pointer.
      (forall i_18:int.
        (((0 <= i_18) and
          ((i_18 <= wcslen(s_23,
           unsigned_short_P_unsigned_short_M_s_17_14_at_L)) and
           (select(unsigned_short_P_unsigned_short_M_s_17_14_at_L,
           shift(s_23, i_18)) = 0))) ->
         (i_18 = wcslen(s_23,
         unsigned_short_P_unsigned_short_M_s_17_14_at_L))))))

axiom wcsncmp_zero:
  (forall unsigned_short_P_unsigned_short_M_s2_13_18_at_L:(unsigned_short_P,
    int) memory.
    (forall unsigned_short_P_unsigned_short_M_s1_13_17_at_L:(unsigned_short_P,
      int) memory.
      (forall s1_14:unsigned_short_P pointer.
        (forall s2_14:unsigned_short_P pointer.
          (forall n_13:int.
            ((wcsncmp(s1_14, s2_14, n_13,
             unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
             unsigned_short_P_unsigned_short_M_s1_13_17_at_L) = 0) <->
             (((wcslen(s1_14,
               unsigned_short_P_unsigned_short_M_s1_13_17_at_L) < n_13) and
               (wcscmp(s1_14, s2_14,
               unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
               unsigned_short_P_unsigned_short_M_s1_13_17_at_L) = 0)) or
              (forall i_24:int.
                (((0 <= i_24) and (i_24 < n_13)) ->
                 (select(unsigned_short_P_unsigned_short_M_s1_13_17_at_L,
                 shift(s1_14,
                 i_24)) = select(unsigned_short_P_unsigned_short_M_s2_13_18_at_L,
                 shift(s2_14, i_24))))))))))))

