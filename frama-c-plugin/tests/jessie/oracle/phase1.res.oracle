Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -IFRAMAC_SHARE/libc -jessie -jessie-gen-only phase1.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -IFRAMAC_SHARE/libc -dD phase1.c"
[jessie] Starting Jessie translation
[jessie] Producing Jessie files in subdir phase1.jessie
[jessie] File phase1.jessie/phase1.jc written.
[jessie] File phase1.jessie/phase1.cloc written.
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type uint32 = 0..4294967295

type int8 = -128..127

tag enum___anonenum_T_RESULTAT_1P = {
  __anonenum_T_RESULTAT_1 enum___anonenum_T_RESULTAT_1M: 32;
}

type enum___anonenum_T_RESULTAT_1P = [enum___anonenum_T_RESULTAT_1P]

tag charP = {
  int8 charM: 8;
}

type charP = [charP]

tag voidP = {
}

type voidP = [voidP]

type __anonenum_T_RESULTAT_1 = 0..1

type __anonenum_T_ID_TEST_2 = 0..7

uint32 __ConsignerPanne_cpt;

enum___anonenum_T_RESULTAT_1P[..] __ConsignerPanne_v0;

uint32 __TT0_cpt;

enum___anonenum_T_RESULTAT_1P[..] __TT0_v0;

uint32 __TT1_cpt;

enum___anonenum_T_RESULTAT_1P[..] __TT1_v0;

uint32 __TT2_cpt;

enum___anonenum_T_RESULTAT_1P[..] __TT2_v0;

uint32 __TT3_cpt;

enum___anonenum_T_RESULTAT_1P[..] __TT3_v0;

uint32 __TT4_cpt;

enum___anonenum_T_RESULTAT_1P[..] __TT4_v0;

uint32 __TT5_cpt;

enum___anonenum_T_RESULTAT_1P[..] __TT5_v0;

uint32 __TT6_cpt;

enum___anonenum_T_RESULTAT_1P[..] __TT6_v0;

uint32 __TT7_cpt;

enum___anonenum_T_RESULTAT_1P[..] __TT7_v0;

predicate f_cond0{L}(enum___anonenum_T_RESULTAT_1P[..] testv0, integer cpt) =
((testv0 + cpt).enum___anonenum_T_RESULTAT_1M ==
  (1 :> __anonenum_T_RESULTAT_1))

predicate f_cond1{L}(enum___anonenum_T_RESULTAT_1P[..] testv0_0,
                     integer cpt_0) =
((testv0_0 + cpt_0).enum___anonenum_T_RESULTAT_1M ==
  (0 :> __anonenum_T_RESULTAT_1))

predicate f_cond_OK{L}(enum___anonenum_T_RESULTAT_1P[..] testv0_1,
                       integer cpt_1, integer cpt_panne) =
(f_cond0{L}(testv0_1, cpt_1) ||
  (f_cond1{L}(testv0_1, cpt_1) &&
    ((__ConsignerPanne_v0 + cpt_panne).enum___anonenum_T_RESULTAT_1M ==
      (1 :> __anonenum_T_RESULTAT_1))))

__anonenum_T_RESULTAT_1 TesterOK(enum___anonenum_T_RESULTAT_1P[..] status,
                                 __anonenum_T_ID_TEST_2 id_test)
  requires (C_12 : ((C_13 : (\offset_min(status) <= 0)) &&
                     (C_14 : (\offset_max(status) >= 0))));
behavior default:
  assigns status.enum___anonenum_T_RESULTAT_1M,
  __ConsignerPanne_cpt,
  __TT0_cpt,
  __TT1_cpt,
  __TT2_cpt,
  __TT3_cpt,
  __TT4_cpt,
  __TT5_cpt,
  __TT6_cpt,
  __TT7_cpt;
  ensures (C_1 : ((C_2 : (\at(__ConsignerPanne_cpt,Old) <=
                           __ConsignerPanne_cpt)) &&
                   (C_3 : (__ConsignerPanne_cpt <=
                            (\at(__ConsignerPanne_cpt,Old) + 1)))));
behavior T0:
  assumes ((id_test == (0 :> __anonenum_T_ID_TEST_2)) &&
            (status.enum___anonenum_T_RESULTAT_1M ==
              (1 :> __anonenum_T_RESULTAT_1)));
  assigns status.enum___anonenum_T_RESULTAT_1M,
  __ConsignerPanne_cpt,
  __TT0_cpt;
  ensures (C_4 : (f_cond_OK{Here}(__TT0_v0, \at(__TT0_cpt,Old),
                                  \at(__ConsignerPanne_cpt,Old)) ==>
                   (\at(status,Old).enum___anonenum_T_RESULTAT_1M ==
                     (1 :> __anonenum_T_RESULTAT_1))));
behavior T1:
  assumes ((id_test == (1 :> __anonenum_T_ID_TEST_2)) &&
            (status.enum___anonenum_T_RESULTAT_1M ==
              (1 :> __anonenum_T_RESULTAT_1)));
  assigns status.enum___anonenum_T_RESULTAT_1M,
  __ConsignerPanne_cpt,
  __TT1_cpt;
  ensures (C_5 : (f_cond_OK{Here}(__TT1_v0, \at(__TT1_cpt,Old),
                                  \at(__ConsignerPanne_cpt,Old)) ==>
                   (\at(status,Old).enum___anonenum_T_RESULTAT_1M ==
                     (1 :> __anonenum_T_RESULTAT_1))));
behavior T2:
  assumes ((id_test == (2 :> __anonenum_T_ID_TEST_2)) &&
            (status.enum___anonenum_T_RESULTAT_1M ==
              (1 :> __anonenum_T_RESULTAT_1)));
  assigns status.enum___anonenum_T_RESULTAT_1M,
  __ConsignerPanne_cpt,
  __TT2_cpt;
  ensures (C_6 : (f_cond_OK{Here}(__TT2_v0, \at(__TT2_cpt,Old),
                                  \at(__ConsignerPanne_cpt,Old)) ==>
                   (\at(status,Old).enum___anonenum_T_RESULTAT_1M ==
                     (1 :> __anonenum_T_RESULTAT_1))));
behavior T3:
  assumes ((id_test == (3 :> __anonenum_T_ID_TEST_2)) &&
            (status.enum___anonenum_T_RESULTAT_1M ==
              (1 :> __anonenum_T_RESULTAT_1)));
  assigns status.enum___anonenum_T_RESULTAT_1M,
  __ConsignerPanne_cpt,
  __TT3_cpt;
  ensures (C_7 : (f_cond_OK{Here}(__TT3_v0, \at(__TT3_cpt,Old),
                                  \at(__ConsignerPanne_cpt,Old)) ==>
                   (\at(status,Old).enum___anonenum_T_RESULTAT_1M ==
                     (1 :> __anonenum_T_RESULTAT_1))));
behavior T4:
  assumes ((id_test == (4 :> __anonenum_T_ID_TEST_2)) &&
            (status.enum___anonenum_T_RESULTAT_1M ==
              (1 :> __anonenum_T_RESULTAT_1)));
  assigns status.enum___anonenum_T_RESULTAT_1M,
  __ConsignerPanne_cpt,
  __TT4_cpt;
  ensures (C_8 : (f_cond_OK{Here}(__TT4_v0, \at(__TT4_cpt,Old),
                                  \at(__ConsignerPanne_cpt,Old)) ==>
                   (\at(status,Old).enum___anonenum_T_RESULTAT_1M ==
                     (1 :> __anonenum_T_RESULTAT_1))));
behavior T5:
  assumes ((id_test == (5 :> __anonenum_T_ID_TEST_2)) &&
            (status.enum___anonenum_T_RESULTAT_1M ==
              (1 :> __anonenum_T_RESULTAT_1)));
  assigns status.enum___anonenum_T_RESULTAT_1M,
  __ConsignerPanne_cpt,
  __TT5_cpt;
  ensures (C_9 : (f_cond_OK{Here}(__TT5_v0, \at(__TT5_cpt,Old),
                                  \at(__ConsignerPanne_cpt,Old)) ==>
                   (\at(status,Old).enum___anonenum_T_RESULTAT_1M ==
                     (1 :> __anonenum_T_RESULTAT_1))));
behavior T6:
  assumes ((id_test == (6 :> __anonenum_T_ID_TEST_2)) &&
            (status.enum___anonenum_T_RESULTAT_1M ==
              (1 :> __anonenum_T_RESULTAT_1)));
  assigns status.enum___anonenum_T_RESULTAT_1M,
  __ConsignerPanne_cpt,
  __TT6_cpt;
  ensures (C_10 : (f_cond_OK{Here}(__TT6_v0, \at(__TT6_cpt,Old),
                                   \at(__ConsignerPanne_cpt,Old)) ==>
                    (\at(status,Old).enum___anonenum_T_RESULTAT_1M ==
                      (1 :> __anonenum_T_RESULTAT_1))));
behavior T7:
  assumes ((id_test == (7 :> __anonenum_T_ID_TEST_2)) &&
            (status.enum___anonenum_T_RESULTAT_1M ==
              (1 :> __anonenum_T_RESULTAT_1)));
  assigns status.enum___anonenum_T_RESULTAT_1M,
  __ConsignerPanne_cpt,
  __TT7_cpt;
  ensures (C_11 : (f_cond_OK{Here}(__TT7_v0, \at(__TT7_cpt,Old),
                                   \at(__ConsignerPanne_cpt,Old)) ==>
                    (\at(status,Old).enum___anonenum_T_RESULTAT_1M ==
                      (1 :> __anonenum_T_RESULTAT_1))));
;

uint32 __ConsignerPanne_cpt_t0;

uint32 __ConsignerPanne_cpt_t1;

uint32 __ConsignerPanne_cpt_t2;

uint32 __ConsignerPanne_cpt_t3;

uint32 __ConsignerPanne_cpt_t4;

uint32 __ConsignerPanne_cpt_t5;

uint32 __ConsignerPanne_cpt_t6;

uint32 __ConsignerPanne_cpt_t7;

__anonenum_T_RESULTAT_1 phase1()
  requires (C_62 : ((C_63 : (\offset_min(__TT0_v0) <= __TT0_cpt)) &&
                     (C_64 : (\offset_max(__TT0_v0) >= (__TT0_cpt + 1)))));
  requires (C_59 : ((C_60 : (\offset_min(__TT1_v0) <= __TT1_cpt)) &&
                     (C_61 : (\offset_max(__TT1_v0) >= (__TT1_cpt + 1)))));
  requires (C_56 : ((C_57 : (\offset_min(__TT2_v0) <= __TT2_cpt)) &&
                     (C_58 : (\offset_max(__TT2_v0) >= (__TT2_cpt + 1)))));
  requires (C_53 : ((C_54 : (\offset_min(__TT3_v0) <= __TT3_cpt)) &&
                     (C_55 : (\offset_max(__TT3_v0) >= (__TT3_cpt + 1)))));
  requires (C_50 : ((C_51 : (\offset_min(__TT4_v0) <= __TT4_cpt)) &&
                     (C_52 : (\offset_max(__TT4_v0) >= (__TT4_cpt + 1)))));
  requires (C_47 : ((C_48 : (\offset_min(__TT5_v0) <= __TT5_cpt)) &&
                     (C_49 : (\offset_max(__TT5_v0) >= (__TT5_cpt + 1)))));
  requires (C_44 : ((C_45 : (\offset_min(__TT6_v0) <= __TT6_cpt)) &&
                     (C_46 : (\offset_max(__TT6_v0) >= (__TT6_cpt + 1)))));
  requires (C_41 : ((C_42 : (\offset_min(__TT7_v0) <= __TT7_cpt)) &&
                     (C_43 : (\offset_max(__TT7_v0) >= (__TT7_cpt + 1)))));
  requires (C_38 : ((C_39 : (\offset_min(__ConsignerPanne_v0) <=
                              __ConsignerPanne_cpt)) &&
                     (C_40 : (\offset_max(__ConsignerPanne_v0) >=
                               (__ConsignerPanne_cpt + 7)))));
behavior default:
  ensures (C_37 : ((((((((f_cond_OK{Here}(__TT0_v0, \at(__TT0_cpt,Old),
                                          __ConsignerPanne_cpt_t0) &&
                           f_cond_OK{Here}(__TT1_v0, \at(__TT1_cpt,Old),
                                           __ConsignerPanne_cpt_t1)) &&
                          f_cond_OK{Here}(__TT2_v0, \at(__TT2_cpt,Old),
                                          __ConsignerPanne_cpt_t2)) &&
                         f_cond_OK{Here}(__TT3_v0, \at(__TT3_cpt,Old),
                                         __ConsignerPanne_cpt_t3)) &&
                        f_cond_OK{Here}(__TT4_v0, \at(__TT4_cpt,Old),
                                        __ConsignerPanne_cpt_t4)) &&
                       f_cond_OK{Here}(__TT5_v0, \at(__TT5_cpt,Old),
                                       __ConsignerPanne_cpt_t5)) &&
                      f_cond_OK{Here}(__TT6_v0, \at(__TT6_cpt,Old),
                                      __ConsignerPanne_cpt_t6)) &&
                     f_cond_OK{Here}(__TT7_v0, \at(__TT7_cpt,Old),
                                     __ConsignerPanne_cpt_t7)) ==>
                    (\result == (1 :> __anonenum_T_RESULTAT_1))));
{  
   (var enum___anonenum_T_RESULTAT_1P[0] Rl_Status);
   
   {  (C_16 : (Rl_Status = (C_15 : (new enum___anonenum_T_RESULTAT_1P[1]))));
      (C_18 : ((C_17 : Rl_Status.enum___anonenum_T_RESULTAT_1M) = 1));
      (C_19 : (__ConsignerPanne_cpt_t0 = __ConsignerPanne_cpt));
      (C_20 : TesterOK(Rl_Status, 0));
      (C_21 : (__ConsignerPanne_cpt_t1 = __ConsignerPanne_cpt));
      (C_22 : TesterOK(Rl_Status, 1));
      (C_23 : (__ConsignerPanne_cpt_t2 = __ConsignerPanne_cpt));
      (C_24 : TesterOK(Rl_Status, 2));
      (C_25 : (__ConsignerPanne_cpt_t3 = __ConsignerPanne_cpt));
      (C_26 : TesterOK(Rl_Status, 3));
      (C_27 : (__ConsignerPanne_cpt_t4 = __ConsignerPanne_cpt));
      (C_28 : TesterOK(Rl_Status, 4));
      (C_29 : (__ConsignerPanne_cpt_t5 = __ConsignerPanne_cpt));
      (C_30 : TesterOK(Rl_Status, 5));
      (C_31 : (__ConsignerPanne_cpt_t6 = __ConsignerPanne_cpt));
      (C_32 : TesterOK(Rl_Status, 6));
      (C_33 : (__ConsignerPanne_cpt_t7 = __ConsignerPanne_cpt));
      (C_34 : TesterOK(Rl_Status, 7));
      
      {  (C_35 : (free(Rl_Status)));
         
         (return (C_36 : Rl_Status.enum___anonenum_T_RESULTAT_1M))
      }
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs phase1.jessie/phase1.cloc phase1.jessie/phase1.jc
type __ConsignerPanne_v0_1

type __TT0_v0_2

type __TT1_v0_3

type __TT2_v0_4

type __TT3_v0_5

type __TT4_v0_6

type __TT5_v0_7

type __TT6_v0_8

type __TT7_v0_9

type __anonenum_T_ID_TEST_2

type __anonenum_T_RESULTAT_1

type charP

type enum___anonenum_T_RESULTAT_1P

type int8

type padding

type uint32

type voidP

logic __ConsignerPanne_v0:  -> enum___anonenum_T_RESULTAT_1P pointer

logic __TT0_v0:  -> enum___anonenum_T_RESULTAT_1P pointer

logic __TT1_v0:  -> enum___anonenum_T_RESULTAT_1P pointer

logic __TT2_v0:  -> enum___anonenum_T_RESULTAT_1P pointer

logic __TT3_v0:  -> enum___anonenum_T_RESULTAT_1P pointer

logic __TT4_v0:  -> enum___anonenum_T_RESULTAT_1P pointer

logic __TT5_v0:  -> enum___anonenum_T_RESULTAT_1P pointer

logic __TT6_v0:  -> enum___anonenum_T_RESULTAT_1P pointer

logic __TT7_v0:  -> enum___anonenum_T_RESULTAT_1P pointer

logic integer_of___anonenum_T_ID_TEST_2: __anonenum_T_ID_TEST_2 -> int

logic __anonenum_T_ID_TEST_2_of_integer: int -> __anonenum_T_ID_TEST_2

axiom __anonenum_T_ID_TEST_2_coerce :
 (forall x:int.
  ((le_int((0), x) and le_int(x, (7))) ->
   eq_int(integer_of___anonenum_T_ID_TEST_2(__anonenum_T_ID_TEST_2_of_integer(x)),
   x)))

axiom __anonenum_T_ID_TEST_2_extensionality :
 (forall x:__anonenum_T_ID_TEST_2.
  (forall y:__anonenum_T_ID_TEST_2
   [eq_int(integer_of___anonenum_T_ID_TEST_2(x),
    integer_of___anonenum_T_ID_TEST_2(y))].
   (eq_int(integer_of___anonenum_T_ID_TEST_2(x),
    integer_of___anonenum_T_ID_TEST_2(y)) -> (x = y))))

axiom __anonenum_T_ID_TEST_2_range :
 (forall x:__anonenum_T_ID_TEST_2.
  (le_int((0), integer_of___anonenum_T_ID_TEST_2(x))
  and le_int(integer_of___anonenum_T_ID_TEST_2(x), (7))))

logic integer_of___anonenum_T_RESULTAT_1: __anonenum_T_RESULTAT_1 -> int

logic __anonenum_T_RESULTAT_1_of_integer: int -> __anonenum_T_RESULTAT_1

axiom __anonenum_T_RESULTAT_1_coerce :
 (forall x:int.
  ((le_int((0), x) and le_int(x, (1))) ->
   eq_int(integer_of___anonenum_T_RESULTAT_1(__anonenum_T_RESULTAT_1_of_integer(x)),
   x)))

axiom __anonenum_T_RESULTAT_1_extensionality :
 (forall x:__anonenum_T_RESULTAT_1.
  (forall y:__anonenum_T_RESULTAT_1
   [eq_int(integer_of___anonenum_T_RESULTAT_1(x),
    integer_of___anonenum_T_RESULTAT_1(y))].
   (eq_int(integer_of___anonenum_T_RESULTAT_1(x),
    integer_of___anonenum_T_RESULTAT_1(y)) -> (x = y))))

axiom __anonenum_T_RESULTAT_1_range :
 (forall x:__anonenum_T_RESULTAT_1.
  (le_int((0), integer_of___anonenum_T_RESULTAT_1(x))
  and le_int(integer_of___anonenum_T_RESULTAT_1(x), (1))))

logic charP_tag:  -> charP tag_id

axiom charP_int : (int_of_tag(charP_tag) = (1))

logic charP_of_pointer_address: unit pointer -> charP pointer

axiom charP_of_pointer_address_of_pointer_addr :
 (forall p:charP pointer. (p = charP_of_pointer_address(pointer_address(p))))

axiom charP_parenttag_bottom : parenttag(charP_tag, bottom_tag)

axiom charP_tags :
 (forall x:charP pointer.
  (forall charP_tag_table:charP tag_table.
   instanceof(charP_tag_table, x, charP_tag)))

logic enum___anonenum_T_RESULTAT_1P_tag:  -> enum___anonenum_T_RESULTAT_1P tag_id

axiom enum___anonenum_T_RESULTAT_1P_int :
 (int_of_tag(enum___anonenum_T_RESULTAT_1P_tag) = (1))

logic enum___anonenum_T_RESULTAT_1P_of_pointer_address: unit pointer -> enum___anonenum_T_RESULTAT_1P pointer

axiom enum___anonenum_T_RESULTAT_1P_of_pointer_address_of_pointer_addr :
 (forall p:enum___anonenum_T_RESULTAT_1P pointer.
  (p = enum___anonenum_T_RESULTAT_1P_of_pointer_address(pointer_address(p))))

axiom enum___anonenum_T_RESULTAT_1P_parenttag_bottom :
 parenttag(enum___anonenum_T_RESULTAT_1P_tag, bottom_tag)

axiom enum___anonenum_T_RESULTAT_1P_tags :
 (forall x:enum___anonenum_T_RESULTAT_1P pointer.
  (forall enum___anonenum_T_RESULTAT_1P_tag_table:
   enum___anonenum_T_RESULTAT_1P tag_table.
   instanceof(enum___anonenum_T_RESULTAT_1P_tag_table, x,
   enum___anonenum_T_RESULTAT_1P_tag)))

predicate eq___anonenum_T_ID_TEST_2(x:__anonenum_T_ID_TEST_2,
 y:__anonenum_T_ID_TEST_2) =
 eq_int(integer_of___anonenum_T_ID_TEST_2(x),
 integer_of___anonenum_T_ID_TEST_2(y))

predicate eq___anonenum_T_RESULTAT_1(x:__anonenum_T_RESULTAT_1,
 y:__anonenum_T_RESULTAT_1) =
 eq_int(integer_of___anonenum_T_RESULTAT_1(x),
 integer_of___anonenum_T_RESULTAT_1(y))

logic integer_of_int8: int8 -> int

predicate eq_int8(x:int8, y:int8) =
 eq_int(integer_of_int8(x), integer_of_int8(y))

logic integer_of_uint32: uint32 -> int

predicate eq_uint32(x:uint32, y:uint32) =
 eq_int(integer_of_uint32(x), integer_of_uint32(y))

predicate f_cond0(testv0:enum___anonenum_T_RESULTAT_1P pointer, cpt:int,
 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_testv0_10_at_L:(enum___anonenum_T_RESULTAT_1P, __anonenum_T_RESULTAT_1) memory) =
 (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_testv0_10_at_L,
                                     shift(testv0, cpt))) = integer_of___anonenum_T_RESULTAT_1(
                                                            __anonenum_T_RESULTAT_1_of_integer((1))))

predicate f_cond1(testv0_0:enum___anonenum_T_RESULTAT_1P pointer, cpt_0:int,
 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_testv0_0_11_at_L:(enum___anonenum_T_RESULTAT_1P, __anonenum_T_RESULTAT_1) memory) =
 (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_testv0_0_11_at_L,
                                     shift(testv0_0, cpt_0))) = integer_of___anonenum_T_RESULTAT_1(
                                                                __anonenum_T_RESULTAT_1_of_integer((0))))

predicate f_cond_OK(testv0_1:enum___anonenum_T_RESULTAT_1P pointer,
 cpt_1:int, cpt_panne:int,
 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_testv0_1_12_at_L:(enum___anonenum_T_RESULTAT_1P, __anonenum_T_RESULTAT_1) memory,
 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1_at_L:(enum___anonenum_T_RESULTAT_1P, __anonenum_T_RESULTAT_1) memory) =
 (f_cond0(testv0_1, cpt_1,
  enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_testv0_1_12_at_L)
 or (f_cond1(testv0_1, cpt_1,
     enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_testv0_1_12_at_L)
    and (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1_at_L,
                                            shift(__ConsignerPanne_v0,
                                            cpt_panne))) = integer_of___anonenum_T_RESULTAT_1(
                                                           __anonenum_T_RESULTAT_1_of_integer((1))))))

logic int8_of_integer: int -> int8

axiom int8_coerce :
 (forall x:int.
  ((le_int((-128), x) and le_int(x, (127))) ->
   eq_int(integer_of_int8(int8_of_integer(x)), x)))

axiom int8_extensionality :
 (forall x:int8.
  (forall y:int8[eq_int(integer_of_int8(x), integer_of_int8(y))].
   (eq_int(integer_of_int8(x), integer_of_int8(y)) -> (x = y))))

axiom int8_range :
 (forall x:int8.
  (le_int((-128), integer_of_int8(x)) and le_int(integer_of_int8(x), (127))))

predicate left_valid_struct_charP(p:charP pointer, a:int,
 charP_alloc_table:charP alloc_table) =
 (offset_min(charP_alloc_table, p) <= a)

predicate left_valid_struct_enum___anonenum_T_RESULTAT_1P(p:enum___anonenum_T_RESULTAT_1P pointer,
 a:int,
 enum___anonenum_T_RESULTAT_1P_alloc_table:enum___anonenum_T_RESULTAT_1P alloc_table) =
 (offset_min(enum___anonenum_T_RESULTAT_1P_alloc_table, p) <= a)

predicate left_valid_struct_voidP(p:voidP pointer, a:int,
 voidP_alloc_table:voidP alloc_table) =
 (offset_min(voidP_alloc_table, p) <= a)

axiom pointer_addr_of_charP_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(charP_of_pointer_address(p))))

axiom pointer_addr_of_enum___anonenum_T_RESULTAT_1P_of_pointer_address :
 (forall p:unit pointer.
  (p = pointer_address(enum___anonenum_T_RESULTAT_1P_of_pointer_address(p))))

logic voidP_of_pointer_address: unit pointer -> voidP pointer

axiom pointer_addr_of_voidP_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(voidP_of_pointer_address(p))))

predicate right_valid_struct_charP(p:charP pointer, b:int,
 charP_alloc_table:charP alloc_table) =
 (offset_max(charP_alloc_table, p) >= b)

predicate right_valid_struct_enum___anonenum_T_RESULTAT_1P(p:enum___anonenum_T_RESULTAT_1P pointer,
 b:int,
 enum___anonenum_T_RESULTAT_1P_alloc_table:enum___anonenum_T_RESULTAT_1P alloc_table) =
 (offset_max(enum___anonenum_T_RESULTAT_1P_alloc_table, p) >= b)

predicate right_valid_struct_voidP(p:voidP pointer, b:int,
 voidP_alloc_table:voidP alloc_table) =
 (offset_max(voidP_alloc_table, p) >= b)

predicate strict_valid_root_charP(p:charP pointer, a:int, b:int,
 charP_alloc_table:charP alloc_table) =
 ((offset_min(charP_alloc_table, p) = a)
 and (offset_max(charP_alloc_table, p) = b))

predicate strict_valid_root_enum___anonenum_T_RESULTAT_1P(p:enum___anonenum_T_RESULTAT_1P pointer,
 a:int, b:int,
 enum___anonenum_T_RESULTAT_1P_alloc_table:enum___anonenum_T_RESULTAT_1P alloc_table) =
 ((offset_min(enum___anonenum_T_RESULTAT_1P_alloc_table, p) = a)
 and (offset_max(enum___anonenum_T_RESULTAT_1P_alloc_table, p) = b))

predicate strict_valid_root_voidP(p:voidP pointer, a:int, b:int,
 voidP_alloc_table:voidP alloc_table) =
 ((offset_min(voidP_alloc_table, p) = a)
 and (offset_max(voidP_alloc_table, p) = b))

predicate strict_valid_struct_charP(p:charP pointer, a:int, b:int,
 charP_alloc_table:charP alloc_table) =
 ((offset_min(charP_alloc_table, p) = a)
 and (offset_max(charP_alloc_table, p) = b))

predicate strict_valid_struct_enum___anonenum_T_RESULTAT_1P(p:enum___anonenum_T_RESULTAT_1P pointer,
 a:int, b:int,
 enum___anonenum_T_RESULTAT_1P_alloc_table:enum___anonenum_T_RESULTAT_1P alloc_table) =
 ((offset_min(enum___anonenum_T_RESULTAT_1P_alloc_table, p) = a)
 and (offset_max(enum___anonenum_T_RESULTAT_1P_alloc_table, p) = b))

predicate strict_valid_struct_voidP(p:voidP pointer, a:int, b:int,
 voidP_alloc_table:voidP alloc_table) =
 ((offset_min(voidP_alloc_table, p) = a)
 and (offset_max(voidP_alloc_table, p) = b))

logic uint32_of_integer: int -> uint32

axiom uint32_coerce :
 (forall x:int.
  ((le_int((0), x) and le_int(x, (4294967295))) ->
   eq_int(integer_of_uint32(uint32_of_integer(x)), x)))

axiom uint32_extensionality :
 (forall x:uint32.
  (forall y:uint32[eq_int(integer_of_uint32(x), integer_of_uint32(y))].
   (eq_int(integer_of_uint32(x), integer_of_uint32(y)) -> (x = y))))

axiom uint32_range :
 (forall x:uint32.
  (le_int((0), integer_of_uint32(x))
  and le_int(integer_of_uint32(x), (4294967295))))

predicate valid_root_charP(p:charP pointer, a:int, b:int,
 charP_alloc_table:charP alloc_table) =
 ((offset_min(charP_alloc_table, p) <= a)
 and (offset_max(charP_alloc_table, p) >= b))

predicate valid_root_enum___anonenum_T_RESULTAT_1P(p:enum___anonenum_T_RESULTAT_1P pointer,
 a:int, b:int,
 enum___anonenum_T_RESULTAT_1P_alloc_table:enum___anonenum_T_RESULTAT_1P alloc_table) =
 ((offset_min(enum___anonenum_T_RESULTAT_1P_alloc_table, p) <= a)
 and (offset_max(enum___anonenum_T_RESULTAT_1P_alloc_table, p) >= b))

predicate valid_root_voidP(p:voidP pointer, a:int, b:int,
 voidP_alloc_table:voidP alloc_table) =
 ((offset_min(voidP_alloc_table, p) <= a)
 and (offset_max(voidP_alloc_table, p) >= b))

predicate valid_struct_charP(p:charP pointer, a:int, b:int,
 charP_alloc_table:charP alloc_table) =
 ((offset_min(charP_alloc_table, p) <= a)
 and (offset_max(charP_alloc_table, p) >= b))

predicate valid_struct_enum___anonenum_T_RESULTAT_1P(p:enum___anonenum_T_RESULTAT_1P pointer,
 a:int, b:int,
 enum___anonenum_T_RESULTAT_1P_alloc_table:enum___anonenum_T_RESULTAT_1P alloc_table) =
 ((offset_min(enum___anonenum_T_RESULTAT_1P_alloc_table, p) <= a)
 and (offset_max(enum___anonenum_T_RESULTAT_1P_alloc_table, p) >= b))

predicate valid_struct_voidP(p:voidP pointer, a:int, b:int,
 voidP_alloc_table:voidP alloc_table) =
 ((offset_min(voidP_alloc_table, p) <= a)
 and (offset_max(voidP_alloc_table, p) >= b))

logic voidP_tag:  -> voidP tag_id

axiom voidP_int : (int_of_tag(voidP_tag) = (1))

axiom voidP_of_pointer_address_of_pointer_addr :
 (forall p:voidP pointer. (p = voidP_of_pointer_address(pointer_address(p))))

axiom voidP_parenttag_bottom : parenttag(voidP_tag, bottom_tag)

axiom voidP_tags :
 (forall x:voidP pointer.
  (forall voidP_tag_table:voidP tag_table.
   instanceof(voidP_tag_table, x, voidP_tag)))

exception Loop_continue_exc of unit

exception Loop_exit_exc of unit

exception Return_label_exc of unit

parameter enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT7_v0_9 :
 (enum___anonenum_T_RESULTAT_1P, __anonenum_T_RESULTAT_1) memory ref

parameter enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT6_v0_8 :
 (enum___anonenum_T_RESULTAT_1P, __anonenum_T_RESULTAT_1) memory ref

parameter enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT5_v0_7 :
 (enum___anonenum_T_RESULTAT_1P, __anonenum_T_RESULTAT_1) memory ref

parameter enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT4_v0_6 :
 (enum___anonenum_T_RESULTAT_1P, __anonenum_T_RESULTAT_1) memory ref

parameter enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT3_v0_5 :
 (enum___anonenum_T_RESULTAT_1P, __anonenum_T_RESULTAT_1) memory ref

parameter enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT2_v0_4 :
 (enum___anonenum_T_RESULTAT_1P, __anonenum_T_RESULTAT_1) memory ref

parameter enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT1_v0_3 :
 (enum___anonenum_T_RESULTAT_1P, __anonenum_T_RESULTAT_1) memory ref

parameter enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT0_v0_2 :
 (enum___anonenum_T_RESULTAT_1P, __anonenum_T_RESULTAT_1) memory ref

parameter enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1 :
 (enum___anonenum_T_RESULTAT_1P, __anonenum_T_RESULTAT_1) memory ref

parameter __TT7_cpt : uint32 ref

parameter __TT6_cpt : uint32 ref

parameter __TT5_cpt : uint32 ref

parameter __TT4_cpt : uint32 ref

parameter __TT3_cpt : uint32 ref

parameter __TT2_cpt : uint32 ref

parameter __TT1_cpt : uint32 ref

parameter __TT0_cpt : uint32 ref

parameter __ConsignerPanne_cpt : uint32 ref

parameter TesterOK :
 status:enum___anonenum_T_RESULTAT_1P pointer ->
  id_test:__anonenum_T_ID_TEST_2 ->
   enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13:(enum___anonenum_T_RESULTAT_1P, __anonenum_T_RESULTAT_1) memory ref ->
    enum___anonenum_T_RESULTAT_1P_status_13_alloc_table:enum___anonenum_T_RESULTAT_1P alloc_table ->
     { } __anonenum_T_RESULTAT_1
     reads __ConsignerPanne_cpt,__TT0_cpt,__TT1_cpt,__TT2_cpt,__TT3_cpt,__TT4_cpt,__TT5_cpt,__TT6_cpt,__TT7_cpt,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT0_v0_2,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT1_v0_3,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT2_v0_4,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT3_v0_5,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT4_v0_6,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT5_v0_7,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT6_v0_8,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT7_v0_9,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13
     writes __ConsignerPanne_cpt,__TT0_cpt,__TT1_cpt,__TT2_cpt,__TT3_cpt,__TT4_cpt,__TT5_cpt,__TT6_cpt,__TT7_cpt,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13
     { ((((integer_of___anonenum_T_ID_TEST_2(id_test) = integer_of___anonenum_T_ID_TEST_2(
                                                        __anonenum_T_ID_TEST_2_of_integer((7))))
         and (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                                 status)) = integer_of___anonenum_T_RESULTAT_1(
                                                            __anonenum_T_RESULTAT_1_of_integer((1))))) ->
         (JC_<somenum>:
         ((JC_<somenum>:
          (f_cond_OK(__TT7_v0, integer_of_uint32(__TT7_cpt@),
           integer_of_uint32(__ConsignerPanne_cpt@),
           enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT7_v0_9,
           enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1) ->
           (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                               status)) = integer_of___anonenum_T_RESULTAT_1(
                                                          __anonenum_T_RESULTAT_1_of_integer((1))))))
         and (JC_<somenum>:
             ((((((((__TT0_cpt = __TT0_cpt@) and (__TT1_cpt = __TT1_cpt@))
                  and (__TT2_cpt = __TT2_cpt@))
                 and (__TT3_cpt = __TT3_cpt@))
                and (__TT4_cpt = __TT4_cpt@))
               and (__TT5_cpt = __TT5_cpt@))
              and (__TT6_cpt = __TT6_cpt@))
             and (JC_<somenum>:
                 not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                 pset_singleton(status))))))))
       and ((((integer_of___anonenum_T_ID_TEST_2(id_test) = integer_of___anonenum_T_ID_TEST_2(
                                                            __anonenum_T_ID_TEST_2_of_integer((6))))
             and (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                                     status)) = integer_of___anonenum_T_RESULTAT_1(
                                                                __anonenum_T_RESULTAT_1_of_integer((1))))) ->
             (JC_<somenum>:
             ((JC_<somenum>:
              (f_cond_OK(__TT6_v0, integer_of_uint32(__TT6_cpt@),
               integer_of_uint32(__ConsignerPanne_cpt@),
               enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT6_v0_8,
               enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1) ->
               (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                                   status)) = integer_of___anonenum_T_RESULTAT_1(
                                                              __anonenum_T_RESULTAT_1_of_integer((1))))))
             and (JC_<somenum>:
                 ((((((((__TT0_cpt = __TT0_cpt@)
                       and (__TT1_cpt = __TT1_cpt@))
                      and (__TT2_cpt = __TT2_cpt@))
                     and (__TT3_cpt = __TT3_cpt@))
                    and (__TT4_cpt = __TT4_cpt@))
                   and (__TT5_cpt = __TT5_cpt@))
                  and (__TT7_cpt = __TT7_cpt@))
                 and (JC_<somenum>:
                     not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                     enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                     enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                     pset_singleton(status))))))))
           and ((((integer_of___anonenum_T_ID_TEST_2(id_test) = integer_of___anonenum_T_ID_TEST_2(
                                                                __anonenum_T_ID_TEST_2_of_integer((5))))
                 and (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                                         status)) = integer_of___anonenum_T_RESULTAT_1(
                                                                    __anonenum_T_RESULTAT_1_of_integer((1))))) ->
                 (JC_<somenum>:
                 ((JC_<somenum>:
                  (f_cond_OK(__TT5_v0, integer_of_uint32(__TT5_cpt@),
                   integer_of_uint32(__ConsignerPanne_cpt@),
                   enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT5_v0_7,
                   enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1) ->
                   (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                                       status)) = integer_of___anonenum_T_RESULTAT_1(
                                                                  __anonenum_T_RESULTAT_1_of_integer((1))))))
                 and (JC_<somenum>:
                     ((((((((__TT0_cpt = __TT0_cpt@)
                           and (__TT1_cpt = __TT1_cpt@))
                          and (__TT2_cpt = __TT2_cpt@))
                         and (__TT3_cpt = __TT3_cpt@))
                        and (__TT4_cpt = __TT4_cpt@))
                       and (__TT6_cpt = __TT6_cpt@))
                      and (__TT7_cpt = __TT7_cpt@))
                     and (JC_<somenum>:
                         not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                         enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                         enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                         pset_singleton(status))))))))
               and ((((integer_of___anonenum_T_ID_TEST_2(id_test) = integer_of___anonenum_T_ID_TEST_2(
                                                                    __anonenum_T_ID_TEST_2_of_integer((4))))
                     and (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                                             status)) = 
                         integer_of___anonenum_T_RESULTAT_1(__anonenum_T_RESULTAT_1_of_integer((1))))) ->
                     (JC_<somenum>:
                     ((JC_<somenum>:
                      (f_cond_OK(__TT4_v0, integer_of_uint32(__TT4_cpt@),
                       integer_of_uint32(__ConsignerPanne_cpt@),
                       enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT4_v0_6,
                       enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1) ->
                       (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                                           status)) = 
                       integer_of___anonenum_T_RESULTAT_1(__anonenum_T_RESULTAT_1_of_integer((1))))))
                     and (JC_<somenum>:
                         ((((((((__TT0_cpt = __TT0_cpt@)
                               and (__TT1_cpt = __TT1_cpt@))
                              and (__TT2_cpt = __TT2_cpt@))
                             and (__TT3_cpt = __TT3_cpt@))
                            and (__TT5_cpt = __TT5_cpt@))
                           and (__TT6_cpt = __TT6_cpt@))
                          and (__TT7_cpt = __TT7_cpt@))
                         and (JC_<somenum>:
                             not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                             enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                             enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                             pset_singleton(status))))))))
                   and ((((integer_of___anonenum_T_ID_TEST_2(id_test) = 
                          integer_of___anonenum_T_ID_TEST_2(__anonenum_T_ID_TEST_2_of_integer((3))))
                         and (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                                                 status)) = 
                             integer_of___anonenum_T_RESULTAT_1(__anonenum_T_RESULTAT_1_of_integer((1))))) ->
                         (JC_<somenum>:
                         ((JC_<somenum>:
                          (f_cond_OK(__TT3_v0, integer_of_uint32(__TT3_cpt@),
                           integer_of_uint32(__ConsignerPanne_cpt@),
                           enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT3_v0_5,
                           enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1) ->
                           (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                                               status)) = 
                           integer_of___anonenum_T_RESULTAT_1(__anonenum_T_RESULTAT_1_of_integer((1))))))
                         and (JC_<somenum>:
                             ((((((((__TT0_cpt = __TT0_cpt@)
                                   and (__TT1_cpt = __TT1_cpt@))
                                  and (__TT2_cpt = __TT2_cpt@))
                                 and (__TT4_cpt = __TT4_cpt@))
                                and (__TT5_cpt = __TT5_cpt@))
                               and (__TT6_cpt = __TT6_cpt@))
                              and (__TT7_cpt = __TT7_cpt@))
                             and (JC_<somenum>:
                                 not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                                 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                 pset_singleton(status))))))))
                       and ((((integer_of___anonenum_T_ID_TEST_2(id_test) = 
                              integer_of___anonenum_T_ID_TEST_2(__anonenum_T_ID_TEST_2_of_integer((2))))
                             and (integer_of___anonenum_T_RESULTAT_1(
                                  select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                  status)) = integer_of___anonenum_T_RESULTAT_1(
                                             __anonenum_T_RESULTAT_1_of_integer((1))))) ->
                             (JC_<somenum>:
                             ((JC_<somenum>:
                              (f_cond_OK(__TT2_v0,
                               integer_of_uint32(__TT2_cpt@),
                               integer_of_uint32(__ConsignerPanne_cpt@),
                               enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT2_v0_4,
                               enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1) ->
                               (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                                                   status)) = 
                               integer_of___anonenum_T_RESULTAT_1(__anonenum_T_RESULTAT_1_of_integer((1))))))
                             and (JC_<somenum>:
                                 ((((((((__TT0_cpt = __TT0_cpt@)
                                       and (__TT1_cpt = __TT1_cpt@))
                                      and (__TT3_cpt = __TT3_cpt@))
                                     and (__TT4_cpt = __TT4_cpt@))
                                    and (__TT5_cpt = __TT5_cpt@))
                                   and (__TT6_cpt = __TT6_cpt@))
                                  and (__TT7_cpt = __TT7_cpt@))
                                 and (JC_<somenum>:
                                     not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                                     enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                     enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                     pset_singleton(status))))))))
                           and ((((integer_of___anonenum_T_ID_TEST_2(id_test) = 
                                  integer_of___anonenum_T_ID_TEST_2(__anonenum_T_ID_TEST_2_of_integer((1))))
                                 and (integer_of___anonenum_T_RESULTAT_1(
                                      select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                      status)) = integer_of___anonenum_T_RESULTAT_1(
                                                 __anonenum_T_RESULTAT_1_of_integer((1))))) ->
                                 (JC_<somenum>:
                                 ((JC_<somenum>:
                                  (f_cond_OK(__TT1_v0,
                                   integer_of_uint32(__TT1_cpt@),
                                   integer_of_uint32(__ConsignerPanne_cpt@),
                                   enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT1_v0_3,
                                   enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1) ->
                                   (integer_of___anonenum_T_RESULTAT_1(
                                    select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                    status)) = integer_of___anonenum_T_RESULTAT_1(
                                               __anonenum_T_RESULTAT_1_of_integer((1))))))
                                 and (JC_<somenum>:
                                     ((((((((__TT0_cpt = __TT0_cpt@)
                                           and (__TT2_cpt = __TT2_cpt@))
                                          and (__TT3_cpt = __TT3_cpt@))
                                         and (__TT4_cpt = __TT4_cpt@))
                                        and (__TT5_cpt = __TT5_cpt@))
                                       and (__TT6_cpt = __TT6_cpt@))
                                      and (__TT7_cpt = __TT7_cpt@))
                                     and (JC_<somenum>:
                                         not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                                         enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                         enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                         pset_singleton(status))))))))
                               and ((((integer_of___anonenum_T_ID_TEST_2(id_test) = 
                                      integer_of___anonenum_T_ID_TEST_2(
                                      __anonenum_T_ID_TEST_2_of_integer((0))))
                                     and (integer_of___anonenum_T_RESULTAT_1(
                                          select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                          status)) = integer_of___anonenum_T_RESULTAT_1(
                                                     __anonenum_T_RESULTAT_1_of_integer((1))))) ->
                                     (JC_<somenum>:
                                     ((JC_<somenum>:
                                      (f_cond_OK(__TT0_v0,
                                       integer_of_uint32(__TT0_cpt@),
                                       integer_of_uint32(__ConsignerPanne_cpt@),
                                       enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT0_v0_2,
                                       enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1) ->
                                       (integer_of___anonenum_T_RESULTAT_1(
                                        select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                        status)) = integer_of___anonenum_T_RESULTAT_1(
                                                   __anonenum_T_RESULTAT_1_of_integer((1))))))
                                     and (JC_<somenum>:
                                         ((((((((__TT1_cpt = __TT1_cpt@)
                                               and (__TT2_cpt = __TT2_cpt@))
                                              and (__TT3_cpt = __TT3_cpt@))
                                             and (__TT4_cpt = __TT4_cpt@))
                                            and (__TT5_cpt = __TT5_cpt@))
                                           and (__TT6_cpt = __TT6_cpt@))
                                          and (__TT7_cpt = __TT7_cpt@))
                                         and (JC_<somenum>:
                                             not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                                             enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                             enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                             pset_singleton(status))))))))
                                   and (JC_<somenum>:
                                       ((JC_<somenum>:
                                        ((JC_<somenum>:
                                         le_int(integer_of_uint32(__ConsignerPanne_cpt@),
                                         integer_of_uint32(__ConsignerPanne_cpt)))
                                        and (JC_<somenum>:
                                            le_int(integer_of_uint32(__ConsignerPanne_cpt),
                                            add_int(integer_of_uint32(__ConsignerPanne_cpt@),
                                            (1))))))
                                       and (JC_<somenum>:
                                           not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                                           enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                           enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                           pset_singleton(status))))))))))))) }

parameter TesterOK_requires :
 status:enum___anonenum_T_RESULTAT_1P pointer ->
  id_test:__anonenum_T_ID_TEST_2 ->
   enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13:(enum___anonenum_T_RESULTAT_1P, __anonenum_T_RESULTAT_1) memory ref ->
    enum___anonenum_T_RESULTAT_1P_status_13_alloc_table:enum___anonenum_T_RESULTAT_1P alloc_table ->
     { (JC_<somenum>:
       ((JC_<somenum>:
        le_int(offset_min(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
               status),
        (0)))
       and (JC_<somenum>:
           ge_int(offset_max(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                  status),
           (0)))))}
     __anonenum_T_RESULTAT_1
     reads __ConsignerPanne_cpt,__TT0_cpt,__TT1_cpt,__TT2_cpt,__TT3_cpt,__TT4_cpt,__TT5_cpt,__TT6_cpt,__TT7_cpt,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT0_v0_2,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT1_v0_3,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT2_v0_4,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT3_v0_5,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT4_v0_6,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT5_v0_7,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT6_v0_8,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT7_v0_9,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13
     writes __ConsignerPanne_cpt,__TT0_cpt,__TT1_cpt,__TT2_cpt,__TT3_cpt,__TT4_cpt,__TT5_cpt,__TT6_cpt,__TT7_cpt,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13
     { ((((integer_of___anonenum_T_ID_TEST_2(id_test) = integer_of___anonenum_T_ID_TEST_2(
                                                        __anonenum_T_ID_TEST_2_of_integer((7))))
         and (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                                 status)) = integer_of___anonenum_T_RESULTAT_1(
                                                            __anonenum_T_RESULTAT_1_of_integer((1))))) ->
         (JC_<somenum>:
         ((JC_<somenum>:
          (f_cond_OK(__TT7_v0, integer_of_uint32(__TT7_cpt@),
           integer_of_uint32(__ConsignerPanne_cpt@),
           enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT7_v0_9,
           enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1) ->
           (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                               status)) = integer_of___anonenum_T_RESULTAT_1(
                                                          __anonenum_T_RESULTAT_1_of_integer((1))))))
         and (JC_<somenum>:
             ((((((((__TT0_cpt = __TT0_cpt@) and (__TT1_cpt = __TT1_cpt@))
                  and (__TT2_cpt = __TT2_cpt@))
                 and (__TT3_cpt = __TT3_cpt@))
                and (__TT4_cpt = __TT4_cpt@))
               and (__TT5_cpt = __TT5_cpt@))
              and (__TT6_cpt = __TT6_cpt@))
             and (JC_<somenum>:
                 not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                 pset_singleton(status))))))))
       and ((((integer_of___anonenum_T_ID_TEST_2(id_test) = integer_of___anonenum_T_ID_TEST_2(
                                                            __anonenum_T_ID_TEST_2_of_integer((6))))
             and (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                                     status)) = integer_of___anonenum_T_RESULTAT_1(
                                                                __anonenum_T_RESULTAT_1_of_integer((1))))) ->
             (JC_<somenum>:
             ((JC_<somenum>:
              (f_cond_OK(__TT6_v0, integer_of_uint32(__TT6_cpt@),
               integer_of_uint32(__ConsignerPanne_cpt@),
               enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT6_v0_8,
               enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1) ->
               (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                                   status)) = integer_of___anonenum_T_RESULTAT_1(
                                                              __anonenum_T_RESULTAT_1_of_integer((1))))))
             and (JC_<somenum>:
                 ((((((((__TT0_cpt = __TT0_cpt@)
                       and (__TT1_cpt = __TT1_cpt@))
                      and (__TT2_cpt = __TT2_cpt@))
                     and (__TT3_cpt = __TT3_cpt@))
                    and (__TT4_cpt = __TT4_cpt@))
                   and (__TT5_cpt = __TT5_cpt@))
                  and (__TT7_cpt = __TT7_cpt@))
                 and (JC_<somenum>:
                     not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                     enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                     enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                     pset_singleton(status))))))))
           and ((((integer_of___anonenum_T_ID_TEST_2(id_test) = integer_of___anonenum_T_ID_TEST_2(
                                                                __anonenum_T_ID_TEST_2_of_integer((5))))
                 and (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                                         status)) = integer_of___anonenum_T_RESULTAT_1(
                                                                    __anonenum_T_RESULTAT_1_of_integer((1))))) ->
                 (JC_<somenum>:
                 ((JC_<somenum>:
                  (f_cond_OK(__TT5_v0, integer_of_uint32(__TT5_cpt@),
                   integer_of_uint32(__ConsignerPanne_cpt@),
                   enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT5_v0_7,
                   enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1) ->
                   (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                                       status)) = integer_of___anonenum_T_RESULTAT_1(
                                                                  __anonenum_T_RESULTAT_1_of_integer((1))))))
                 and (JC_<somenum>:
                     ((((((((__TT0_cpt = __TT0_cpt@)
                           and (__TT1_cpt = __TT1_cpt@))
                          and (__TT2_cpt = __TT2_cpt@))
                         and (__TT3_cpt = __TT3_cpt@))
                        and (__TT4_cpt = __TT4_cpt@))
                       and (__TT6_cpt = __TT6_cpt@))
                      and (__TT7_cpt = __TT7_cpt@))
                     and (JC_<somenum>:
                         not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                         enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                         enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                         pset_singleton(status))))))))
               and ((((integer_of___anonenum_T_ID_TEST_2(id_test) = integer_of___anonenum_T_ID_TEST_2(
                                                                    __anonenum_T_ID_TEST_2_of_integer((4))))
                     and (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                                             status)) = 
                         integer_of___anonenum_T_RESULTAT_1(__anonenum_T_RESULTAT_1_of_integer((1))))) ->
                     (JC_<somenum>:
                     ((JC_<somenum>:
                      (f_cond_OK(__TT4_v0, integer_of_uint32(__TT4_cpt@),
                       integer_of_uint32(__ConsignerPanne_cpt@),
                       enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT4_v0_6,
                       enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1) ->
                       (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                                           status)) = 
                       integer_of___anonenum_T_RESULTAT_1(__anonenum_T_RESULTAT_1_of_integer((1))))))
                     and (JC_<somenum>:
                         ((((((((__TT0_cpt = __TT0_cpt@)
                               and (__TT1_cpt = __TT1_cpt@))
                              and (__TT2_cpt = __TT2_cpt@))
                             and (__TT3_cpt = __TT3_cpt@))
                            and (__TT5_cpt = __TT5_cpt@))
                           and (__TT6_cpt = __TT6_cpt@))
                          and (__TT7_cpt = __TT7_cpt@))
                         and (JC_<somenum>:
                             not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                             enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                             enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                             pset_singleton(status))))))))
                   and ((((integer_of___anonenum_T_ID_TEST_2(id_test) = 
                          integer_of___anonenum_T_ID_TEST_2(__anonenum_T_ID_TEST_2_of_integer((3))))
                         and (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                                                 status)) = 
                             integer_of___anonenum_T_RESULTAT_1(__anonenum_T_RESULTAT_1_of_integer((1))))) ->
                         (JC_<somenum>:
                         ((JC_<somenum>:
                          (f_cond_OK(__TT3_v0, integer_of_uint32(__TT3_cpt@),
                           integer_of_uint32(__ConsignerPanne_cpt@),
                           enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT3_v0_5,
                           enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1) ->
                           (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                                               status)) = 
                           integer_of___anonenum_T_RESULTAT_1(__anonenum_T_RESULTAT_1_of_integer((1))))))
                         and (JC_<somenum>:
                             ((((((((__TT0_cpt = __TT0_cpt@)
                                   and (__TT1_cpt = __TT1_cpt@))
                                  and (__TT2_cpt = __TT2_cpt@))
                                 and (__TT4_cpt = __TT4_cpt@))
                                and (__TT5_cpt = __TT5_cpt@))
                               and (__TT6_cpt = __TT6_cpt@))
                              and (__TT7_cpt = __TT7_cpt@))
                             and (JC_<somenum>:
                                 not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                                 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                 pset_singleton(status))))))))
                       and ((((integer_of___anonenum_T_ID_TEST_2(id_test) = 
                              integer_of___anonenum_T_ID_TEST_2(__anonenum_T_ID_TEST_2_of_integer((2))))
                             and (integer_of___anonenum_T_RESULTAT_1(
                                  select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                  status)) = integer_of___anonenum_T_RESULTAT_1(
                                             __anonenum_T_RESULTAT_1_of_integer((1))))) ->
                             (JC_<somenum>:
                             ((JC_<somenum>:
                              (f_cond_OK(__TT2_v0,
                               integer_of_uint32(__TT2_cpt@),
                               integer_of_uint32(__ConsignerPanne_cpt@),
                               enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT2_v0_4,
                               enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1) ->
                               (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                                                   status)) = 
                               integer_of___anonenum_T_RESULTAT_1(__anonenum_T_RESULTAT_1_of_integer((1))))))
                             and (JC_<somenum>:
                                 ((((((((__TT0_cpt = __TT0_cpt@)
                                       and (__TT1_cpt = __TT1_cpt@))
                                      and (__TT3_cpt = __TT3_cpt@))
                                     and (__TT4_cpt = __TT4_cpt@))
                                    and (__TT5_cpt = __TT5_cpt@))
                                   and (__TT6_cpt = __TT6_cpt@))
                                  and (__TT7_cpt = __TT7_cpt@))
                                 and (JC_<somenum>:
                                     not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                                     enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                     enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                     pset_singleton(status))))))))
                           and ((((integer_of___anonenum_T_ID_TEST_2(id_test) = 
                                  integer_of___anonenum_T_ID_TEST_2(__anonenum_T_ID_TEST_2_of_integer((1))))
                                 and (integer_of___anonenum_T_RESULTAT_1(
                                      select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                      status)) = integer_of___anonenum_T_RESULTAT_1(
                                                 __anonenum_T_RESULTAT_1_of_integer((1))))) ->
                                 (JC_<somenum>:
                                 ((JC_<somenum>:
                                  (f_cond_OK(__TT1_v0,
                                   integer_of_uint32(__TT1_cpt@),
                                   integer_of_uint32(__ConsignerPanne_cpt@),
                                   enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT1_v0_3,
                                   enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1) ->
                                   (integer_of___anonenum_T_RESULTAT_1(
                                    select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                    status)) = integer_of___anonenum_T_RESULTAT_1(
                                               __anonenum_T_RESULTAT_1_of_integer((1))))))
                                 and (JC_<somenum>:
                                     ((((((((__TT0_cpt = __TT0_cpt@)
                                           and (__TT2_cpt = __TT2_cpt@))
                                          and (__TT3_cpt = __TT3_cpt@))
                                         and (__TT4_cpt = __TT4_cpt@))
                                        and (__TT5_cpt = __TT5_cpt@))
                                       and (__TT6_cpt = __TT6_cpt@))
                                      and (__TT7_cpt = __TT7_cpt@))
                                     and (JC_<somenum>:
                                         not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                                         enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                         enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                         pset_singleton(status))))))))
                               and ((((integer_of___anonenum_T_ID_TEST_2(id_test) = 
                                      integer_of___anonenum_T_ID_TEST_2(
                                      __anonenum_T_ID_TEST_2_of_integer((0))))
                                     and (integer_of___anonenum_T_RESULTAT_1(
                                          select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                          status)) = integer_of___anonenum_T_RESULTAT_1(
                                                     __anonenum_T_RESULTAT_1_of_integer((1))))) ->
                                     (JC_<somenum>:
                                     ((JC_<somenum>:
                                      (f_cond_OK(__TT0_v0,
                                       integer_of_uint32(__TT0_cpt@),
                                       integer_of_uint32(__ConsignerPanne_cpt@),
                                       enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT0_v0_2,
                                       enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1) ->
                                       (integer_of___anonenum_T_RESULTAT_1(
                                        select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                        status)) = integer_of___anonenum_T_RESULTAT_1(
                                                   __anonenum_T_RESULTAT_1_of_integer((1))))))
                                     and (JC_<somenum>:
                                         ((((((((__TT1_cpt = __TT1_cpt@)
                                               and (__TT2_cpt = __TT2_cpt@))
                                              and (__TT3_cpt = __TT3_cpt@))
                                             and (__TT4_cpt = __TT4_cpt@))
                                            and (__TT5_cpt = __TT5_cpt@))
                                           and (__TT6_cpt = __TT6_cpt@))
                                          and (__TT7_cpt = __TT7_cpt@))
                                         and (JC_<somenum>:
                                             not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                                             enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                             enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                             pset_singleton(status))))))))
                                   and (JC_<somenum>:
                                       ((JC_<somenum>:
                                        ((JC_<somenum>:
                                         le_int(integer_of_uint32(__ConsignerPanne_cpt@),
                                         integer_of_uint32(__ConsignerPanne_cpt)))
                                        and (JC_<somenum>:
                                            le_int(integer_of_uint32(__ConsignerPanne_cpt),
                                            add_int(integer_of_uint32(__ConsignerPanne_cpt@),
                                            (1))))))
                                       and (JC_<somenum>:
                                           not_assigns(enum___anonenum_T_RESULTAT_1P_status_13_alloc_table,
                                           enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13@,
                                           enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_status_13,
                                           pset_singleton(status))))))))))))) }

parameter __ConsignerPanne_cpt_t0 : uint32 ref

parameter __ConsignerPanne_cpt_t1 : uint32 ref

parameter __ConsignerPanne_cpt_t2 : uint32 ref

parameter __ConsignerPanne_cpt_t3 : uint32 ref

parameter __ConsignerPanne_cpt_t4 : uint32 ref

parameter __ConsignerPanne_cpt_t5 : uint32 ref

parameter __ConsignerPanne_cpt_t6 : uint32 ref

parameter __ConsignerPanne_cpt_t7 : uint32 ref

parameter __anonenum_T_ID_TEST_2_of_integer_ :
 x:int ->
  { (le_int((0), x) and le_int(x, (7)))} __anonenum_T_ID_TEST_2
  { eq_int(integer_of___anonenum_T_ID_TEST_2(result), x) }

parameter __anonenum_T_RESULTAT_1_of_integer_ :
 x:int ->
  { (le_int((0), x) and le_int(x, (1)))} __anonenum_T_RESULTAT_1
  { eq_int(integer_of___anonenum_T_RESULTAT_1(result), x) }

parameter charP_alloc_table : charP alloc_table ref

parameter charP_tag_table : charP tag_table ref

parameter alloc_struct_charP :
 n:int ->
  charP_alloc_table:charP alloc_table ref ->
   charP_tag_table:charP tag_table ref ->
    { } charP pointer writes charP_alloc_table,charP_tag_table
    { (strict_valid_struct_charP(result, (0), sub_int(n, (1)),
       charP_alloc_table)
      and (alloc_extends(charP_alloc_table@, charP_alloc_table)
          and (alloc_fresh(charP_alloc_table@, result, n)
              and instanceof(charP_tag_table, result, charP_tag)))) }

parameter alloc_struct_charP_requires :
 n:int ->
  charP_alloc_table:charP alloc_table ref ->
   charP_tag_table:charP tag_table ref ->
    { ge_int(n, (0))} charP pointer writes charP_alloc_table,charP_tag_table
    { (strict_valid_struct_charP(result, (0), sub_int(n, (1)),
       charP_alloc_table)
      and (alloc_extends(charP_alloc_table@, charP_alloc_table)
          and (alloc_fresh(charP_alloc_table@, result, n)
              and instanceof(charP_tag_table, result, charP_tag)))) }

parameter enum___anonenum_T_RESULTAT_1P_alloc_table :
 enum___anonenum_T_RESULTAT_1P alloc_table ref

parameter enum___anonenum_T_RESULTAT_1P_tag_table :
 enum___anonenum_T_RESULTAT_1P tag_table ref

parameter alloc_struct_enum___anonenum_T_RESULTAT_1P :
 n:int ->
  enum___anonenum_T_RESULTAT_1P_alloc_table:enum___anonenum_T_RESULTAT_1P alloc_table ref ->
   enum___anonenum_T_RESULTAT_1P_tag_table:enum___anonenum_T_RESULTAT_1P tag_table ref ->
    { } enum___anonenum_T_RESULTAT_1P pointer
    writes enum___anonenum_T_RESULTAT_1P_alloc_table,enum___anonenum_T_RESULTAT_1P_tag_table
    { (strict_valid_struct_enum___anonenum_T_RESULTAT_1P(result, (0),
       sub_int(n, (1)), enum___anonenum_T_RESULTAT_1P_alloc_table)
      and (alloc_extends(enum___anonenum_T_RESULTAT_1P_alloc_table@,
           enum___anonenum_T_RESULTAT_1P_alloc_table)
          and (alloc_fresh(enum___anonenum_T_RESULTAT_1P_alloc_table@,
               result, n)
              and instanceof(enum___anonenum_T_RESULTAT_1P_tag_table, result,
                  enum___anonenum_T_RESULTAT_1P_tag)))) }

parameter alloc_struct_enum___anonenum_T_RESULTAT_1P_requires :
 n:int ->
  enum___anonenum_T_RESULTAT_1P_alloc_table:enum___anonenum_T_RESULTAT_1P alloc_table ref ->
   enum___anonenum_T_RESULTAT_1P_tag_table:enum___anonenum_T_RESULTAT_1P tag_table ref ->
    { ge_int(n, (0))} enum___anonenum_T_RESULTAT_1P pointer
    writes enum___anonenum_T_RESULTAT_1P_alloc_table,enum___anonenum_T_RESULTAT_1P_tag_table
    { (strict_valid_struct_enum___anonenum_T_RESULTAT_1P(result, (0),
       sub_int(n, (1)), enum___anonenum_T_RESULTAT_1P_alloc_table)
      and (alloc_extends(enum___anonenum_T_RESULTAT_1P_alloc_table@,
           enum___anonenum_T_RESULTAT_1P_alloc_table)
          and (alloc_fresh(enum___anonenum_T_RESULTAT_1P_alloc_table@,
               result, n)
              and instanceof(enum___anonenum_T_RESULTAT_1P_tag_table, result,
                  enum___anonenum_T_RESULTAT_1P_tag)))) }

parameter voidP_alloc_table : voidP alloc_table ref

parameter voidP_tag_table : voidP tag_table ref

parameter alloc_struct_voidP :
 n:int ->
  voidP_alloc_table:voidP alloc_table ref ->
   voidP_tag_table:voidP tag_table ref ->
    { } voidP pointer writes voidP_alloc_table,voidP_tag_table
    { (strict_valid_struct_voidP(result, (0), sub_int(n, (1)),
       voidP_alloc_table)
      and (alloc_extends(voidP_alloc_table@, voidP_alloc_table)
          and (alloc_fresh(voidP_alloc_table@, result, n)
              and instanceof(voidP_tag_table, result, voidP_tag)))) }

parameter alloc_struct_voidP_requires :
 n:int ->
  voidP_alloc_table:voidP alloc_table ref ->
   voidP_tag_table:voidP tag_table ref ->
    { ge_int(n, (0))} voidP pointer writes voidP_alloc_table,voidP_tag_table
    { (strict_valid_struct_voidP(result, (0), sub_int(n, (1)),
       voidP_alloc_table)
      and (alloc_extends(voidP_alloc_table@, voidP_alloc_table)
          and (alloc_fresh(voidP_alloc_table@, result, n)
              and instanceof(voidP_tag_table, result, voidP_tag)))) }

parameter any___anonenum_T_ID_TEST_2 :
 unit -> { } __anonenum_T_ID_TEST_2 { true }

parameter any___anonenum_T_RESULTAT_1 :
 unit -> { } __anonenum_T_RESULTAT_1 { true }

parameter any_int8 : unit -> { } int8 { true }

parameter any_uint32 : unit -> { } uint32 { true }

parameter enum___anonenum_T_RESULTAT_1P___ConsignerPanne_v0_1_alloc_table :
 enum___anonenum_T_RESULTAT_1P alloc_table ref

parameter enum___anonenum_T_RESULTAT_1P___TT0_v0_2_alloc_table :
 enum___anonenum_T_RESULTAT_1P alloc_table ref

parameter enum___anonenum_T_RESULTAT_1P___TT1_v0_3_alloc_table :
 enum___anonenum_T_RESULTAT_1P alloc_table ref

parameter enum___anonenum_T_RESULTAT_1P___TT2_v0_4_alloc_table :
 enum___anonenum_T_RESULTAT_1P alloc_table ref

parameter enum___anonenum_T_RESULTAT_1P___TT3_v0_5_alloc_table :
 enum___anonenum_T_RESULTAT_1P alloc_table ref

parameter enum___anonenum_T_RESULTAT_1P___TT4_v0_6_alloc_table :
 enum___anonenum_T_RESULTAT_1P alloc_table ref

parameter enum___anonenum_T_RESULTAT_1P___TT5_v0_7_alloc_table :
 enum___anonenum_T_RESULTAT_1P alloc_table ref

parameter enum___anonenum_T_RESULTAT_1P___TT6_v0_8_alloc_table :
 enum___anonenum_T_RESULTAT_1P alloc_table ref

parameter enum___anonenum_T_RESULTAT_1P___TT7_v0_9_alloc_table :
 enum___anonenum_T_RESULTAT_1P alloc_table ref

parameter int8_of_integer_ :
 x:int ->
  { (le_int((-128), x) and le_int(x, (127)))} int8
  { eq_int(integer_of_int8(result), x) }

parameter phase1 :
 tt:unit ->
  { } __anonenum_T_RESULTAT_1
  reads __ConsignerPanne_cpt,__ConsignerPanne_cpt_t0,__ConsignerPanne_cpt_t1,__ConsignerPanne_cpt_t2,__ConsignerPanne_cpt_t3,__ConsignerPanne_cpt_t4,__ConsignerPanne_cpt_t5,__ConsignerPanne_cpt_t6,__ConsignerPanne_cpt_t7,__TT0_cpt,__TT1_cpt,__TT2_cpt,__TT3_cpt,__TT4_cpt,__TT5_cpt,__TT6_cpt,__TT7_cpt,enum___anonenum_T_RESULTAT_1P___ConsignerPanne_v0_1_alloc_table,enum___anonenum_T_RESULTAT_1P___TT0_v0_2_alloc_table,enum___anonenum_T_RESULTAT_1P___TT1_v0_3_alloc_table,enum___anonenum_T_RESULTAT_1P___TT2_v0_4_alloc_table,enum___anonenum_T_RESULTAT_1P___TT3_v0_5_alloc_table,enum___anonenum_T_RESULTAT_1P___TT4_v0_6_alloc_table,enum___anonenum_T_RESULTAT_1P___TT5_v0_7_alloc_table,enum___anonenum_T_RESULTAT_1P___TT6_v0_8_alloc_table,enum___anonenum_T_RESULTAT_1P___TT7_v0_9_alloc_table,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT0_v0_2,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT1_v0_3,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT2_v0_4,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT3_v0_5,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT4_v0_6,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT5_v0_7,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT6_v0_8,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT7_v0_9
  writes __ConsignerPanne_cpt,__ConsignerPanne_cpt_t0,__ConsignerPanne_cpt_t1,__ConsignerPanne_cpt_t2,__ConsignerPanne_cpt_t3,__ConsignerPanne_cpt_t4,__ConsignerPanne_cpt_t5,__ConsignerPanne_cpt_t6,__ConsignerPanne_cpt_t7,__TT0_cpt,__TT1_cpt,__TT2_cpt,__TT3_cpt,__TT4_cpt,__TT5_cpt,__TT6_cpt,__TT7_cpt
  { (JC_<somenum>:
    ((f_cond_OK(__TT0_v0, integer_of_uint32(__TT0_cpt@),
      integer_of_uint32(__ConsignerPanne_cpt_t0),
      enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT0_v0_2,
      enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
     and (f_cond_OK(__TT1_v0, integer_of_uint32(__TT1_cpt@),
          integer_of_uint32(__ConsignerPanne_cpt_t1),
          enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT1_v0_3,
          enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
         and (f_cond_OK(__TT2_v0, integer_of_uint32(__TT2_cpt@),
              integer_of_uint32(__ConsignerPanne_cpt_t2),
              enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT2_v0_4,
              enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
             and (f_cond_OK(__TT3_v0, integer_of_uint32(__TT3_cpt@),
                  integer_of_uint32(__ConsignerPanne_cpt_t3),
                  enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT3_v0_5,
                  enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
                 and (f_cond_OK(__TT4_v0, integer_of_uint32(__TT4_cpt@),
                      integer_of_uint32(__ConsignerPanne_cpt_t4),
                      enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT4_v0_6,
                      enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
                     and (f_cond_OK(__TT5_v0, integer_of_uint32(__TT5_cpt@),
                          integer_of_uint32(__ConsignerPanne_cpt_t5),
                          enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT5_v0_7,
                          enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
                         and (f_cond_OK(__TT6_v0,
                              integer_of_uint32(__TT6_cpt@),
                              integer_of_uint32(__ConsignerPanne_cpt_t6),
                              enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT6_v0_8,
                              enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
                             and f_cond_OK(__TT7_v0,
                                 integer_of_uint32(__TT7_cpt@),
                                 integer_of_uint32(__ConsignerPanne_cpt_t7),
                                 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT7_v0_9,
                                 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)))))))) ->
     (integer_of___anonenum_T_RESULTAT_1(result) = integer_of___anonenum_T_RESULTAT_1(
                                                   __anonenum_T_RESULTAT_1_of_integer((1)))))) }

parameter phase1_requires :
 tt:unit ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT0_v0_2_alloc_table,
            __TT0_v0),
     integer_of_uint32(__TT0_cpt)))
    and ((JC_<somenum>:
         ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT0_v0_2_alloc_table,
                __TT0_v0),
         add_int(integer_of_uint32(__TT0_cpt), (1))))
        and ((JC_<somenum>:
             le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT1_v0_3_alloc_table,
                    __TT1_v0),
             integer_of_uint32(__TT1_cpt)))
            and ((JC_<somenum>:
                 ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT1_v0_3_alloc_table,
                        __TT1_v0),
                 add_int(integer_of_uint32(__TT1_cpt), (1))))
                and ((JC_<somenum>:
                     le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT2_v0_4_alloc_table,
                            __TT2_v0),
                     integer_of_uint32(__TT2_cpt)))
                    and ((JC_<somenum>:
                         ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT2_v0_4_alloc_table,
                                __TT2_v0),
                         add_int(integer_of_uint32(__TT2_cpt), (1))))
                        and ((JC_<somenum>:
                             le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT3_v0_5_alloc_table,
                                    __TT3_v0),
                             integer_of_uint32(__TT3_cpt)))
                            and ((JC_<somenum>:
                                 ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT3_v0_5_alloc_table,
                                        __TT3_v0),
                                 add_int(integer_of_uint32(__TT3_cpt), (1))))
                                and ((JC_<somenum>:
                                     le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT4_v0_6_alloc_table,
                                            __TT4_v0),
                                     integer_of_uint32(__TT4_cpt)))
                                    and ((JC_<somenum>:
                                         ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT4_v0_6_alloc_table,
                                                __TT4_v0),
                                         add_int(integer_of_uint32(__TT4_cpt),
                                         (1))))
                                        and ((JC_<somenum>:
                                             le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT5_v0_7_alloc_table,
                                                    __TT5_v0),
                                             integer_of_uint32(__TT5_cpt)))
                                            and ((JC_<somenum>:
                                                 ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT5_v0_7_alloc_table,
                                                        __TT5_v0),
                                                 add_int(integer_of_uint32(__TT5_cpt),
                                                 (1))))
                                                and ((JC_<somenum>:
                                                     le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT6_v0_8_alloc_table,
                                                            __TT6_v0),
                                                     integer_of_uint32(__TT6_cpt)))
                                                    and ((JC_<somenum>:
                                                         ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT6_v0_8_alloc_table,
                                                                __TT6_v0),
                                                         add_int(integer_of_uint32(__TT6_cpt),
                                                         (1))))
                                                        and ((JC_<somenum>:
                                                             le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT7_v0_9_alloc_table,
                                                                    __TT7_v0),
                                                             integer_of_uint32(__TT7_cpt)))
                                                            and ((JC_<somenum>:
                                                                 ge_int(
                                                                 offset_max(enum___anonenum_T_RESULTAT_1P___TT7_v0_9_alloc_table,
                                                                 __TT7_v0),
                                                                 add_int(
                                                                 integer_of_uint32(__TT7_cpt),
                                                                 (1))))
                                                                and (
                                                                    (JC_<somenum>:
                                                                    le_int(
                                                                    offset_min(enum___anonenum_T_RESULTAT_1P___ConsignerPanne_v0_1_alloc_table,
                                                                    __ConsignerPanne_v0),
                                                                    integer_of_uint32(__ConsignerPanne_cpt)))
                                                                    and 
                                                                    (JC_<somenum>:
                                                                    ge_int(
                                                                    offset_max(enum___anonenum_T_RESULTAT_1P___ConsignerPanne_v0_1_alloc_table,
                                                                    __ConsignerPanne_v0),
                                                                    add_int(
                                                                    integer_of_uint32(__ConsignerPanne_cpt),
                                                                    (7))))))))))))))))))))))}
  __anonenum_T_RESULTAT_1
  reads __ConsignerPanne_cpt,__ConsignerPanne_cpt_t0,__ConsignerPanne_cpt_t1,__ConsignerPanne_cpt_t2,__ConsignerPanne_cpt_t3,__ConsignerPanne_cpt_t4,__ConsignerPanne_cpt_t5,__ConsignerPanne_cpt_t6,__ConsignerPanne_cpt_t7,__TT0_cpt,__TT1_cpt,__TT2_cpt,__TT3_cpt,__TT4_cpt,__TT5_cpt,__TT6_cpt,__TT7_cpt,enum___anonenum_T_RESULTAT_1P___ConsignerPanne_v0_1_alloc_table,enum___anonenum_T_RESULTAT_1P___TT0_v0_2_alloc_table,enum___anonenum_T_RESULTAT_1P___TT1_v0_3_alloc_table,enum___anonenum_T_RESULTAT_1P___TT2_v0_4_alloc_table,enum___anonenum_T_RESULTAT_1P___TT3_v0_5_alloc_table,enum___anonenum_T_RESULTAT_1P___TT4_v0_6_alloc_table,enum___anonenum_T_RESULTAT_1P___TT5_v0_7_alloc_table,enum___anonenum_T_RESULTAT_1P___TT6_v0_8_alloc_table,enum___anonenum_T_RESULTAT_1P___TT7_v0_9_alloc_table,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT0_v0_2,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT1_v0_3,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT2_v0_4,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT3_v0_5,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT4_v0_6,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT5_v0_7,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT6_v0_8,enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT7_v0_9
  writes __ConsignerPanne_cpt,__ConsignerPanne_cpt_t0,__ConsignerPanne_cpt_t1,__ConsignerPanne_cpt_t2,__ConsignerPanne_cpt_t3,__ConsignerPanne_cpt_t4,__ConsignerPanne_cpt_t5,__ConsignerPanne_cpt_t6,__ConsignerPanne_cpt_t7,__TT0_cpt,__TT1_cpt,__TT2_cpt,__TT3_cpt,__TT4_cpt,__TT5_cpt,__TT6_cpt,__TT7_cpt
  { (JC_<somenum>:
    ((f_cond_OK(__TT0_v0, integer_of_uint32(__TT0_cpt@),
      integer_of_uint32(__ConsignerPanne_cpt_t0),
      enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT0_v0_2,
      enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
     and (f_cond_OK(__TT1_v0, integer_of_uint32(__TT1_cpt@),
          integer_of_uint32(__ConsignerPanne_cpt_t1),
          enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT1_v0_3,
          enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
         and (f_cond_OK(__TT2_v0, integer_of_uint32(__TT2_cpt@),
              integer_of_uint32(__ConsignerPanne_cpt_t2),
              enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT2_v0_4,
              enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
             and (f_cond_OK(__TT3_v0, integer_of_uint32(__TT3_cpt@),
                  integer_of_uint32(__ConsignerPanne_cpt_t3),
                  enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT3_v0_5,
                  enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
                 and (f_cond_OK(__TT4_v0, integer_of_uint32(__TT4_cpt@),
                      integer_of_uint32(__ConsignerPanne_cpt_t4),
                      enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT4_v0_6,
                      enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
                     and (f_cond_OK(__TT5_v0, integer_of_uint32(__TT5_cpt@),
                          integer_of_uint32(__ConsignerPanne_cpt_t5),
                          enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT5_v0_7,
                          enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
                         and (f_cond_OK(__TT6_v0,
                              integer_of_uint32(__TT6_cpt@),
                              integer_of_uint32(__ConsignerPanne_cpt_t6),
                              enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT6_v0_8,
                              enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
                             and f_cond_OK(__TT7_v0,
                                 integer_of_uint32(__TT7_cpt@),
                                 integer_of_uint32(__ConsignerPanne_cpt_t7),
                                 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT7_v0_9,
                                 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)))))))) ->
     (integer_of___anonenum_T_RESULTAT_1(result) = integer_of___anonenum_T_RESULTAT_1(
                                                   __anonenum_T_RESULTAT_1_of_integer((1)))))) }

parameter safe___anonenum_T_ID_TEST_2_of_integer_ :
 x:int ->
  { } __anonenum_T_ID_TEST_2
  { eq_int(integer_of___anonenum_T_ID_TEST_2(result), x) }

parameter safe___anonenum_T_RESULTAT_1_of_integer_ :
 x:int ->
  { } __anonenum_T_RESULTAT_1
  { eq_int(integer_of___anonenum_T_RESULTAT_1(result), x) }

parameter safe_int8_of_integer_ :
 x:int -> { } int8 { eq_int(integer_of_int8(result), x) }

parameter safe_uint32_of_integer_ :
 x:int -> { } uint32 { eq_int(integer_of_uint32(result), x) }

parameter uint32_of_integer_ :
 x:int ->
  { (le_int((0), x) and le_int(x, (4294967295)))} uint32
  { eq_int(integer_of_uint32(result), x) }

let phase1_ensures_default =
 fun (tt : unit) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT0_v0_2_alloc_table,
            __TT0_v0),
     integer_of_uint32(__TT0_cpt)))
    and ((JC_<somenum>:
         ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT0_v0_2_alloc_table,
                __TT0_v0),
         add_int(integer_of_uint32(__TT0_cpt), (1))))
        and ((JC_<somenum>:
             le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT1_v0_3_alloc_table,
                    __TT1_v0),
             integer_of_uint32(__TT1_cpt)))
            and ((JC_<somenum>:
                 ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT1_v0_3_alloc_table,
                        __TT1_v0),
                 add_int(integer_of_uint32(__TT1_cpt), (1))))
                and ((JC_<somenum>:
                     le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT2_v0_4_alloc_table,
                            __TT2_v0),
                     integer_of_uint32(__TT2_cpt)))
                    and ((JC_<somenum>:
                         ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT2_v0_4_alloc_table,
                                __TT2_v0),
                         add_int(integer_of_uint32(__TT2_cpt), (1))))
                        and ((JC_<somenum>:
                             le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT3_v0_5_alloc_table,
                                    __TT3_v0),
                             integer_of_uint32(__TT3_cpt)))
                            and ((JC_<somenum>:
                                 ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT3_v0_5_alloc_table,
                                        __TT3_v0),
                                 add_int(integer_of_uint32(__TT3_cpt), (1))))
                                and ((JC_<somenum>:
                                     le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT4_v0_6_alloc_table,
                                            __TT4_v0),
                                     integer_of_uint32(__TT4_cpt)))
                                    and ((JC_<somenum>:
                                         ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT4_v0_6_alloc_table,
                                                __TT4_v0),
                                         add_int(integer_of_uint32(__TT4_cpt),
                                         (1))))
                                        and ((JC_<somenum>:
                                             le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT5_v0_7_alloc_table,
                                                    __TT5_v0),
                                             integer_of_uint32(__TT5_cpt)))
                                            and ((JC_<somenum>:
                                                 ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT5_v0_7_alloc_table,
                                                        __TT5_v0),
                                                 add_int(integer_of_uint32(__TT5_cpt),
                                                 (1))))
                                                and ((JC_<somenum>:
                                                     le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT6_v0_8_alloc_table,
                                                            __TT6_v0),
                                                     integer_of_uint32(__TT6_cpt)))
                                                    and ((JC_<somenum>:
                                                         ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT6_v0_8_alloc_table,
                                                                __TT6_v0),
                                                         add_int(integer_of_uint32(__TT6_cpt),
                                                         (1))))
                                                        and ((JC_<somenum>:
                                                             le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT7_v0_9_alloc_table,
                                                                    __TT7_v0),
                                                             integer_of_uint32(__TT7_cpt)))
                                                            and ((JC_<somenum>:
                                                                 ge_int(
                                                                 offset_max(enum___anonenum_T_RESULTAT_1P___TT7_v0_9_alloc_table,
                                                                 __TT7_v0),
                                                                 add_int(
                                                                 integer_of_uint32(__TT7_cpt),
                                                                 (1))))
                                                                and (
                                                                    (JC_<somenum>:
                                                                    le_int(
                                                                    offset_min(enum___anonenum_T_RESULTAT_1P___ConsignerPanne_v0_1_alloc_table,
                                                                    __ConsignerPanne_v0),
                                                                    integer_of_uint32(__ConsignerPanne_cpt)))
                                                                    and 
                                                                    (JC_<somenum>:
                                                                    ge_int(
                                                                    offset_max(enum___anonenum_T_RESULTAT_1P___ConsignerPanne_v0_1_alloc_table,
                                                                    __ConsignerPanne_v0),
                                                                    add_int(
                                                                    integer_of_uint32(__ConsignerPanne_cpt),
                                                                    (7)))))))))))))))))))))) }
  (init:
  (let return = ref (any___anonenum_T_RESULTAT_1 void) in
  try
   begin
     (let enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14 =
     ref (any_memory void) in
     (let enum___anonenum_T_RESULTAT_1P_Rl_Status_14_tag_table =
     ref (any_tag_table void) in
     (let enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table =
     ref (any_alloc_table void) in
     (let Rl_Status = ref (any_pointer void) in
     (C_16:
     (C_18:
     (C_19:
     (C_20:
     (C_21:
     (C_22:
     (C_23:
     (C_24:
     (C_25:
     (C_26:
     (C_27:
     (C_28:
     (C_29:
     (C_30:
     (C_31:
     (C_32:
     (C_33:
     (C_34:
     (C_35:
     begin
       (let jessie_<somenum> =
       (Rl_Status := (C_15:
                     (JC_<somenum>:
                     (((alloc_struct_enum___anonenum_T_RESULTAT_1P (1)) enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table) enum___anonenum_T_RESULTAT_1P_Rl_Status_14_tag_table)))) in
       void);
      (let jessie_<somenum> = (safe___anonenum_T_RESULTAT_1_of_integer_ (1)) in
      (let jessie_<somenum> = !Rl_Status in
      (((safe_upd_ enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) jessie_<somenum>) jessie_<somenum>)));
      (let jessie_<somenum> = (__ConsignerPanne_cpt_t0 := !__ConsignerPanne_cpt) in
      void);
      (let jessie_<somenum> =
      (let jessie_<somenum> = !Rl_Status in
      (let jessie_<somenum> = (safe___anonenum_T_ID_TEST_2_of_integer_ (0)) in
      (JC_<somenum>:
      ((((TesterOK jessie_<somenum>) jessie_<somenum>) enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table)))) in
      void);
      (let jessie_<somenum> = (__ConsignerPanne_cpt_t1 := !__ConsignerPanne_cpt) in
      void);
      (let jessie_<somenum> =
      (let jessie_<somenum> = !Rl_Status in
      (let jessie_<somenum> = (safe___anonenum_T_ID_TEST_2_of_integer_ (1)) in
      (JC_<somenum>:
      ((((TesterOK jessie_<somenum>) jessie_<somenum>) enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table)))) in
      void);
      (let jessie_<somenum> = (__ConsignerPanne_cpt_t2 := !__ConsignerPanne_cpt) in
      void);
      (let jessie_<somenum> =
      (let jessie_<somenum> = !Rl_Status in
      (let jessie_<somenum> = (safe___anonenum_T_ID_TEST_2_of_integer_ (2)) in
      (JC_<somenum>:
      ((((TesterOK jessie_<somenum>) jessie_<somenum>) enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table)))) in
      void);
      (let jessie_<somenum> = (__ConsignerPanne_cpt_t3 := !__ConsignerPanne_cpt) in
      void);
      (let jessie_<somenum> =
      (let jessie_<somenum> = !Rl_Status in
      (let jessie_<somenum> = (safe___anonenum_T_ID_TEST_2_of_integer_ (3)) in
      (JC_<somenum>:
      ((((TesterOK jessie_<somenum>) jessie_<somenum>) enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table)))) in
      void);
      (let jessie_<somenum> = (__ConsignerPanne_cpt_t4 := !__ConsignerPanne_cpt) in
      void);
      (let jessie_<somenum> =
      (let jessie_<somenum> = !Rl_Status in
      (let jessie_<somenum> = (safe___anonenum_T_ID_TEST_2_of_integer_ (4)) in
      (JC_<somenum>:
      ((((TesterOK jessie_<somenum>) jessie_<somenum>) enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table)))) in
      void);
      (let jessie_<somenum> = (__ConsignerPanne_cpt_t5 := !__ConsignerPanne_cpt) in
      void);
      (let jessie_<somenum> =
      (let jessie_<somenum> = !Rl_Status in
      (let jessie_<somenum> = (safe___anonenum_T_ID_TEST_2_of_integer_ (5)) in
      (JC_<somenum>:
      ((((TesterOK jessie_<somenum>) jessie_<somenum>) enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table)))) in
      void);
      (let jessie_<somenum> = (__ConsignerPanne_cpt_t6 := !__ConsignerPanne_cpt) in
      void);
      (let jessie_<somenum> =
      (let jessie_<somenum> = !Rl_Status in
      (let jessie_<somenum> = (safe___anonenum_T_ID_TEST_2_of_integer_ (6)) in
      (JC_<somenum>:
      ((((TesterOK jessie_<somenum>) jessie_<somenum>) enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table)))) in
      void);
      (let jessie_<somenum> = (__ConsignerPanne_cpt_t7 := !__ConsignerPanne_cpt) in
      void);
      (let jessie_<somenum> =
      (let jessie_<somenum> = !Rl_Status in
      (let jessie_<somenum> = (safe___anonenum_T_ID_TEST_2_of_integer_ (7)) in
      (JC_<somenum>:
      ((((TesterOK jessie_<somenum>) jessie_<somenum>) enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table)))) in
      void);
      ((safe_free_parameter enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table) !Rl_Status);
      (return := (C_36:
                 ((safe_acc_ !enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !Rl_Status)));
      (raise Return) end))))))))))))))))))))))); absurd  end with Return ->
   !return end))
  { (JC_<somenum>:
    ((f_cond_OK(__TT0_v0, integer_of_uint32(__TT0_cpt@),
      integer_of_uint32(__ConsignerPanne_cpt_t0),
      enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT0_v0_2,
      enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
     and (f_cond_OK(__TT1_v0, integer_of_uint32(__TT1_cpt@),
          integer_of_uint32(__ConsignerPanne_cpt_t1),
          enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT1_v0_3,
          enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
         and (f_cond_OK(__TT2_v0, integer_of_uint32(__TT2_cpt@),
              integer_of_uint32(__ConsignerPanne_cpt_t2),
              enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT2_v0_4,
              enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
             and (f_cond_OK(__TT3_v0, integer_of_uint32(__TT3_cpt@),
                  integer_of_uint32(__ConsignerPanne_cpt_t3),
                  enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT3_v0_5,
                  enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
                 and (f_cond_OK(__TT4_v0, integer_of_uint32(__TT4_cpt@),
                      integer_of_uint32(__ConsignerPanne_cpt_t4),
                      enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT4_v0_6,
                      enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
                     and (f_cond_OK(__TT5_v0, integer_of_uint32(__TT5_cpt@),
                          integer_of_uint32(__ConsignerPanne_cpt_t5),
                          enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT5_v0_7,
                          enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
                         and (f_cond_OK(__TT6_v0,
                              integer_of_uint32(__TT6_cpt@),
                              integer_of_uint32(__ConsignerPanne_cpt_t6),
                              enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT6_v0_8,
                              enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)
                             and f_cond_OK(__TT7_v0,
                                 integer_of_uint32(__TT7_cpt@),
                                 integer_of_uint32(__ConsignerPanne_cpt_t7),
                                 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___TT7_v0_9,
                                 enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1)))))))) ->
     (integer_of___anonenum_T_RESULTAT_1(result) = integer_of___anonenum_T_RESULTAT_1(
                                                   __anonenum_T_RESULTAT_1_of_integer((1)))))) }

let phase1_safety =
 fun (tt : unit) ->
  { (JC_<somenum>:
    ((JC_<somenum>:
     le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT0_v0_2_alloc_table,
            __TT0_v0),
     integer_of_uint32(__TT0_cpt)))
    and ((JC_<somenum>:
         ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT0_v0_2_alloc_table,
                __TT0_v0),
         add_int(integer_of_uint32(__TT0_cpt), (1))))
        and ((JC_<somenum>:
             le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT1_v0_3_alloc_table,
                    __TT1_v0),
             integer_of_uint32(__TT1_cpt)))
            and ((JC_<somenum>:
                 ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT1_v0_3_alloc_table,
                        __TT1_v0),
                 add_int(integer_of_uint32(__TT1_cpt), (1))))
                and ((JC_<somenum>:
                     le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT2_v0_4_alloc_table,
                            __TT2_v0),
                     integer_of_uint32(__TT2_cpt)))
                    and ((JC_<somenum>:
                         ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT2_v0_4_alloc_table,
                                __TT2_v0),
                         add_int(integer_of_uint32(__TT2_cpt), (1))))
                        and ((JC_<somenum>:
                             le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT3_v0_5_alloc_table,
                                    __TT3_v0),
                             integer_of_uint32(__TT3_cpt)))
                            and ((JC_<somenum>:
                                 ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT3_v0_5_alloc_table,
                                        __TT3_v0),
                                 add_int(integer_of_uint32(__TT3_cpt), (1))))
                                and ((JC_<somenum>:
                                     le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT4_v0_6_alloc_table,
                                            __TT4_v0),
                                     integer_of_uint32(__TT4_cpt)))
                                    and ((JC_<somenum>:
                                         ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT4_v0_6_alloc_table,
                                                __TT4_v0),
                                         add_int(integer_of_uint32(__TT4_cpt),
                                         (1))))
                                        and ((JC_<somenum>:
                                             le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT5_v0_7_alloc_table,
                                                    __TT5_v0),
                                             integer_of_uint32(__TT5_cpt)))
                                            and ((JC_<somenum>:
                                                 ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT5_v0_7_alloc_table,
                                                        __TT5_v0),
                                                 add_int(integer_of_uint32(__TT5_cpt),
                                                 (1))))
                                                and ((JC_<somenum>:
                                                     le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT6_v0_8_alloc_table,
                                                            __TT6_v0),
                                                     integer_of_uint32(__TT6_cpt)))
                                                    and ((JC_<somenum>:
                                                         ge_int(offset_max(enum___anonenum_T_RESULTAT_1P___TT6_v0_8_alloc_table,
                                                                __TT6_v0),
                                                         add_int(integer_of_uint32(__TT6_cpt),
                                                         (1))))
                                                        and ((JC_<somenum>:
                                                             le_int(offset_min(enum___anonenum_T_RESULTAT_1P___TT7_v0_9_alloc_table,
                                                                    __TT7_v0),
                                                             integer_of_uint32(__TT7_cpt)))
                                                            and ((JC_<somenum>:
                                                                 ge_int(
                                                                 offset_max(enum___anonenum_T_RESULTAT_1P___TT7_v0_9_alloc_table,
                                                                 __TT7_v0),
                                                                 add_int(
                                                                 integer_of_uint32(__TT7_cpt),
                                                                 (1))))
                                                                and (
                                                                    (JC_<somenum>:
                                                                    le_int(
                                                                    offset_min(enum___anonenum_T_RESULTAT_1P___ConsignerPanne_v0_1_alloc_table,
                                                                    __ConsignerPanne_v0),
                                                                    integer_of_uint32(__ConsignerPanne_cpt)))
                                                                    and 
                                                                    (JC_<somenum>:
                                                                    ge_int(
                                                                    offset_max(enum___anonenum_T_RESULTAT_1P___ConsignerPanne_v0_1_alloc_table,
                                                                    __ConsignerPanne_v0),
                                                                    add_int(
                                                                    integer_of_uint32(__ConsignerPanne_cpt),
                                                                    (7)))))))))))))))))))))) }
  (init:
  (let return = ref (any___anonenum_T_RESULTAT_1 void) in
  try
   begin
     (let enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14 =
     ref (any_memory void) in
     (let enum___anonenum_T_RESULTAT_1P_Rl_Status_14_tag_table =
     ref (any_tag_table void) in
     (let enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table =
     ref (any_alloc_table void) in
     (let Rl_Status = ref (any_pointer void) in
     (C_16:
     (C_18:
     (C_19:
     (C_20:
     (C_21:
     (C_22:
     (C_23:
     (C_24:
     (C_25:
     (C_26:
     (C_27:
     (C_28:
     (C_29:
     (C_30:
     (C_31:
     (C_32:
     (C_33:
     (C_34:
     (C_35:
     begin
       (let jessie_<somenum> =
       (Rl_Status := (let jessie_<somenum> =
                     (C_15:
                     (JC_<somenum>:
                     (((alloc_struct_enum___anonenum_T_RESULTAT_1P_requires (1)) enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table) enum___anonenum_T_RESULTAT_1P_Rl_Status_14_tag_table))) in
                     (JC_<somenum>:
                     (assert
                     { ge_int(offset_max(enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table,
                              jessie_<somenum>),
                       (0)) }; jessie_<somenum>)))) in void);
      (let jessie_<somenum> = (safe___anonenum_T_RESULTAT_1_of_integer_ (1)) in
      (let jessie_<somenum> = !Rl_Status in
      (((safe_upd_ enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) jessie_<somenum>) jessie_<somenum>)));
      (let jessie_<somenum> = (__ConsignerPanne_cpt_t0 := !__ConsignerPanne_cpt) in
      void);
      (let jessie_<somenum> =
      (let jessie_<somenum> = !Rl_Status in
      (let jessie_<somenum> = (safe___anonenum_T_ID_TEST_2_of_integer_ (0)) in
      (JC_<somenum>:
      ((((TesterOK_requires jessie_<somenum>) jessie_<somenum>) enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table)))) in
      void);
      (let jessie_<somenum> = (__ConsignerPanne_cpt_t1 := !__ConsignerPanne_cpt) in
      void);
      (let jessie_<somenum> =
      (let jessie_<somenum> = !Rl_Status in
      (let jessie_<somenum> = (safe___anonenum_T_ID_TEST_2_of_integer_ (1)) in
      (JC_<somenum>:
      ((((TesterOK_requires jessie_<somenum>) jessie_<somenum>) enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table)))) in
      void);
      (let jessie_<somenum> = (__ConsignerPanne_cpt_t2 := !__ConsignerPanne_cpt) in
      void);
      (let jessie_<somenum> =
      (let jessie_<somenum> = !Rl_Status in
      (let jessie_<somenum> = (safe___anonenum_T_ID_TEST_2_of_integer_ (2)) in
      (JC_<somenum>:
      ((((TesterOK_requires jessie_<somenum>) jessie_<somenum>) enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table)))) in
      void);
      (let jessie_<somenum> = (__ConsignerPanne_cpt_t3 := !__ConsignerPanne_cpt) in
      void);
      (let jessie_<somenum> =
      (let jessie_<somenum> = !Rl_Status in
      (let jessie_<somenum> = (safe___anonenum_T_ID_TEST_2_of_integer_ (3)) in
      (JC_<somenum>:
      ((((TesterOK_requires jessie_<somenum>) jessie_<somenum>) enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table)))) in
      void);
      (let jessie_<somenum> = (__ConsignerPanne_cpt_t4 := !__ConsignerPanne_cpt) in
      void);
      (let jessie_<somenum> =
      (let jessie_<somenum> = !Rl_Status in
      (let jessie_<somenum> = (safe___anonenum_T_ID_TEST_2_of_integer_ (4)) in
      (JC_<somenum>:
      ((((TesterOK_requires jessie_<somenum>) jessie_<somenum>) enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table)))) in
      void);
      (let jessie_<somenum> = (__ConsignerPanne_cpt_t5 := !__ConsignerPanne_cpt) in
      void);
      (let jessie_<somenum> =
      (let jessie_<somenum> = !Rl_Status in
      (let jessie_<somenum> = (safe___anonenum_T_ID_TEST_2_of_integer_ (5)) in
      (JC_<somenum>:
      ((((TesterOK_requires jessie_<somenum>) jessie_<somenum>) enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table)))) in
      void);
      (let jessie_<somenum> = (__ConsignerPanne_cpt_t6 := !__ConsignerPanne_cpt) in
      void);
      (let jessie_<somenum> =
      (let jessie_<somenum> = !Rl_Status in
      (let jessie_<somenum> = (safe___anonenum_T_ID_TEST_2_of_integer_ (6)) in
      (JC_<somenum>:
      ((((TesterOK_requires jessie_<somenum>) jessie_<somenum>) enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table)))) in
      void);
      (let jessie_<somenum> = (__ConsignerPanne_cpt_t7 := !__ConsignerPanne_cpt) in
      void);
      (let jessie_<somenum> =
      (let jessie_<somenum> = !Rl_Status in
      (let jessie_<somenum> = (safe___anonenum_T_ID_TEST_2_of_integer_ (7)) in
      (JC_<somenum>:
      ((((TesterOK_requires jessie_<somenum>) jessie_<somenum>) enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table)))) in
      void);
      ((free_parameter enum___anonenum_T_RESULTAT_1P_Rl_Status_14_alloc_table) !Rl_Status);
      (return := (C_36:
                 ((safe_acc_ !enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_Rl_Status_14) !Rl_Status)));
      (raise Return) end))))))))))))))))))))))); absurd  end with Return ->
   !return end)) { true }


WHYLIB=WHYHOME/lib WHYEXEC=WHYHOME/bin/why.opt GWHYEXEC=WHYHOME/bin/gwhy.opt make --quiet -C phase1.jessie --quiet -f phase1.makefile project
why --project [...] why/phase1.why
<project name="phase1" context="why/phase1_ctx.why">
  <function name="Function phase1">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="default behavior">
    <goal why_file="why/phase1_po1.why">
      <location file = "PPCHOME/tests/jessie/phase1.c" line = "118" begin = "12" end = "644"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
    <behavior name="Safety">
    <goal why_file="why/phase1_po2.why">
      <location file = "PPCHOME/tests/jessie/phase1.c" line = "130" begin = "13" end = "22"/>
      <explain kind = "Pre"
text = "AllocSize"/>
    </goal>
    <goal why_file="why/phase1_po3.why">
      <location file = "why/phase1.why" line = "1590" begin = "23" end = "165"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/phase1_po4.why">
      <location file = "PPCHOME/tests/jessie/phase1.jessie/phase1.jc" line = "260" begin = "14" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/phase1_po5.why">
      <location file = "PPCHOME/tests/jessie/phase1.jessie/phase1.jc" line = "260" begin = "14" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/phase1_po6.why">
      <location file = "PPCHOME/tests/jessie/phase1.jessie/phase1.jc" line = "262" begin = "14" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/phase1_po7.why">
      <location file = "PPCHOME/tests/jessie/phase1.jessie/phase1.jc" line = "262" begin = "14" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/phase1_po8.why">
      <location file = "PPCHOME/tests/jessie/phase1.jessie/phase1.jc" line = "264" begin = "14" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/phase1_po9.why">
      <location file = "PPCHOME/tests/jessie/phase1.jessie/phase1.jc" line = "264" begin = "14" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/phase1_po10.why">
      <location file = "PPCHOME/tests/jessie/phase1.jessie/phase1.jc" line = "266" begin = "14" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/phase1_po11.why">
      <location file = "PPCHOME/tests/jessie/phase1.jessie/phase1.jc" line = "266" begin = "14" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/phase1_po12.why">
      <location file = "PPCHOME/tests/jessie/phase1.jessie/phase1.jc" line = "268" begin = "14" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/phase1_po13.why">
      <location file = "PPCHOME/tests/jessie/phase1.jessie/phase1.jc" line = "268" begin = "14" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/phase1_po14.why">
      <location file = "PPCHOME/tests/jessie/phase1.jessie/phase1.jc" line = "270" begin = "14" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/phase1_po15.why">
      <location file = "PPCHOME/tests/jessie/phase1.jessie/phase1.jc" line = "270" begin = "14" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/phase1_po16.why">
      <location file = "PPCHOME/tests/jessie/phase1.jessie/phase1.jc" line = "272" begin = "14" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/phase1_po17.why">
      <location file = "PPCHOME/tests/jessie/phase1.jessie/phase1.jc" line = "272" begin = "14" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/phase1_po18.why">
      <location file = "PPCHOME/tests/jessie/phase1.jessie/phase1.jc" line = "274" begin = "14" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/phase1_po19.why">
      <location file = "PPCHOME/tests/jessie/phase1.jessie/phase1.jc" line = "274" begin = "14" end = "36"/>
      <explain kind = "Pre"
text = "UserCall"/>
    </goal>
    <goal why_file="why/phase1_po20.why">
      <location file = "why/phase1.why" line = "1660" begin = "7" end = "89"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    </behavior>
  </function>
</project>
logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

logic bool_and : bool, bool -> bool

logic bool_or : bool, bool -> bool

logic bool_xor : bool, bool -> bool

logic bool_not : bool -> bool

axiom bool_and_def:
  (forall a:bool.
    (forall b:bool.
      ((bool_and(a, b) = true) <-> ((a = true) and (b = true)))))

axiom bool_or_def:
  (forall a:bool.
    (forall b:bool. ((bool_or(a, b) = true) <-> ((a = true) or (b = true)))))

axiom bool_xor_def:
  (forall a:bool. (forall b:bool. ((bool_xor(a, b) = true) <-> (a <> b))))

axiom bool_not_def: (forall a:bool. ((bool_not(a) = true) <-> (a = false)))

logic ite : bool, 'a1, 'a1 -> 'a1

axiom ite_true: (forall x:'a1. (forall y:'a1. (ite(true, x, y) = x)))

axiom ite_false: (forall x:'a1. (forall y:'a1. (ite(false, x, y) = y)))

logic lt_int_bool : int, int -> bool

logic le_int_bool : int, int -> bool

logic gt_int_bool : int, int -> bool

logic ge_int_bool : int, int -> bool

logic eq_int_bool : int, int -> bool

logic neq_int_bool : int, int -> bool

axiom lt_int_bool_axiom:
  (forall x:int. (forall y:int. ((lt_int_bool(x, y) = true) <-> (x < y))))

axiom le_int_bool_axiom:
  (forall x:int. (forall y:int. ((le_int_bool(x, y) = true) <-> (x <= y))))

axiom gt_int_bool_axiom:
  (forall x:int. (forall y:int. ((gt_int_bool(x, y) = true) <-> (x > y))))

axiom ge_int_bool_axiom:
  (forall x:int. (forall y:int. ((ge_int_bool(x, y) = true) <-> (x >= y))))

axiom eq_int_bool_axiom:
  (forall x:int. (forall y:int. ((eq_int_bool(x, y) = true) <-> (x = y))))

axiom neq_int_bool_axiom:
  (forall x:int. (forall y:int. ((neq_int_bool(x, y) = true) <-> (x <> y))))

logic abs_int : int -> int

axiom abs_int_pos: (forall x:int. ((x >= 0) -> (abs_int(x) = x)))

axiom abs_int_neg: (forall x:int. ((x <= 0) -> (abs_int(x) = (-x))))

logic int_max : int, int -> int

logic int_min : int, int -> int

axiom int_max_is_ge:
  (forall x:int.
    (forall y:int. ((int_max(x, y) >= x) and (int_max(x, y) >= y))))

axiom int_max_is_some:
  (forall x:int.
    (forall y:int. ((int_max(x, y) = x) or (int_max(x, y) = y))))

axiom int_min_is_le:
  (forall x:int.
    (forall y:int. ((int_min(x, y) <= x) and (int_min(x, y) <= y))))

axiom int_min_is_some:
  (forall x:int.
    (forall y:int. ((int_min(x, y) = x) or (int_min(x, y) = y))))

logic lt_real : real, real -> prop

logic le_real : real, real -> prop

logic gt_real : real, real -> prop

logic ge_real : real, real -> prop

logic eq_real : real, real -> prop

logic neq_real : real, real -> prop

logic add_real : real, real -> real

logic sub_real : real, real -> real

logic mul_real : real, real -> real

logic div_real : real, real -> real

logic neg_real : real -> real

logic real_of_int : int -> real

axiom real_of_int_zero: (real_of_int(0) = 0.0)

axiom real_of_int_one: (real_of_int(1) = 1.0)

axiom real_of_int_add:
  (forall x:int.
    (forall y:int.
      (real_of_int((x + y)) = (real_of_int(x) + real_of_int(y)))))

axiom real_of_int_sub:
  (forall x:int.
    (forall y:int.
      (real_of_int((x - y)) = (real_of_int(x) - real_of_int(y)))))

logic truncate_real_to_int : real -> int

axiom truncate_down_pos:
  (forall x:real.
    ((x >= 0.0) ->
     ((real_of_int(truncate_real_to_int(x)) <= x) and
      (x < real_of_int((truncate_real_to_int(x) + 1))))))

axiom truncate_up_neg:
  (forall x:real.
    ((x <= 0.0) ->
     ((real_of_int((truncate_real_to_int(x) - 1)) < x) and
      (x <= real_of_int(truncate_real_to_int(x))))))

logic floor_real_to_int : real -> int

logic ceil_real_to_int : real -> int

logic lt_real_bool : real, real -> bool

logic le_real_bool : real, real -> bool

logic gt_real_bool : real, real -> bool

logic ge_real_bool : real, real -> bool

logic eq_real_bool : real, real -> bool

logic neq_real_bool : real, real -> bool

axiom lt_real_bool_axiom:
  (forall x:real. (forall y:real. ((lt_real_bool(x, y) = true) <-> (x < y))))

axiom le_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((le_real_bool(x, y) = true) <-> (x <= y))))

axiom gt_real_bool_axiom:
  (forall x:real. (forall y:real. ((gt_real_bool(x, y) = true) <-> (x > y))))

axiom ge_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((ge_real_bool(x, y) = true) <-> (x >= y))))

axiom eq_real_bool_axiom:
  (forall x:real. (forall y:real. ((eq_real_bool(x, y) = true) <-> (x = y))))

axiom neq_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((neq_real_bool(x, y) = true) <-> (x <> y))))

logic real_max : real, real -> real

logic real_min : real, real -> real

axiom real_max_is_ge:
  (forall x:real.
    (forall y:real. ((real_max(x, y) >= x) and (real_max(x, y) >= y))))

axiom real_max_is_some:
  (forall x:real.
    (forall y:real. ((real_max(x, y) = x) or (real_max(x, y) = y))))

axiom real_min_is_le:
  (forall x:real.
    (forall y:real. ((real_min(x, y) <= x) and (real_min(x, y) <= y))))

axiom real_min_is_some:
  (forall x:real.
    (forall y:real. ((real_min(x, y) = x) or (real_min(x, y) = y))))

function sqr_real(x: real) : real = (x * x)

logic sqrt_real : real -> real

axiom sqrt_pos: (forall x:real. ((x >= 0.0) -> (sqrt_real(x) >= 0.0)))

axiom sqrt_sqr: (forall x:real. ((x >= 0.0) -> (sqr_real(sqrt_real(x)) = x)))

axiom sqr_sqrt: (forall x:real. ((x >= 0.0) -> (sqrt_real((x * x)) = x)))

logic abs_real : real -> real

axiom abs_real_pos:
  (forall x:real [abs_real(x)]. ((x >= 0.0) -> (abs_real(x) = x)))

axiom abs_real_neg:
  (forall x:real [abs_real(x)]. ((x <= 0.0) -> (abs_real(x) = (-x))))

logic exp : real -> real

logic log : real -> real

logic log10 : real -> real

axiom log_exp: (forall x:real. (log(exp(x)) = x))

axiom exp_log: (forall x:real. ((x > 0.0) -> (exp(log(x)) = x)))

logic pow_real_int : real, int -> real

logic pow_real : real, real -> real

logic cos : real -> real

logic sin : real -> real

logic tan : real -> real

logic pi : real

logic cosh : real -> real

logic sinh : real -> real

logic tanh : real -> real

logic acos : real -> real

logic asin : real -> real

logic atan : real -> real

logic atan2 : real, real -> real

logic hypot : real, real -> real

axiom prod_pos:
  (forall x:real.
    (forall y:real.
      ((((x > 0.0) and (y > 0.0)) -> ((x * y) > 0.0)) and
       (((x < 0.0) and (y < 0.0)) -> ((x * y) > 0.0)))))

axiom abs_minus: (forall x:real. (abs_real((-x)) = abs_real(x)))

logic computer_div : int, int -> int

logic computer_mod : int, int -> int

logic math_div : int, int -> int

logic math_mod : int, int -> int

axiom math_div_mod:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> (x = ((y * math_div(x, y)) + math_mod(x, y))))))

axiom math_mod_bound:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> ((0 <= math_mod(x, y)) and (math_mod(x, y) < abs_int(y))))))

axiom computer_div_mod:
  (forall x:int.
    (forall y:int [computer_div(x, y), computer_mod(x, y)].
      ((y <> 0) -> (x = ((y * computer_div(x, y)) + computer_mod(x, y))))))

axiom computer_div_bound:
  (forall x:int.
    (forall y:int.
      (((x >= 0) and (y > 0)) ->
       ((0 <= computer_div(x, y)) and (computer_div(x, y) <= x)))))

axiom computer_mod_bound:
  (forall x:int.
    (forall y:int. ((y <> 0) -> (abs_int(computer_mod(x, y)) < abs_int(y)))))

axiom computer_mod_sign_pos:
  (forall x:int.
    (forall y:int. (((x >= 0) and (y <> 0)) -> (computer_mod(x, y) >= 0))))

axiom computer_mod_sign_neg:
  (forall x:int.
    (forall y:int. (((x <= 0) and (y <> 0)) -> (computer_mod(x, y) <= 0))))

axiom computer_rounds_toward_zero:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> (abs_int((computer_div(x, y) * y)) <= abs_int(x)))))

type 't alloc_table

type 't pointer

type 't block

logic base_block : 'a1 pointer -> 'a1 block

logic offset_max : 'a1 alloc_table, 'a1 pointer -> int

logic offset_min : 'a1 alloc_table, 'a1 pointer -> int

predicate valid(a: 'a1 alloc_table, p: 'a1 pointer) =
  ((offset_min(a, p) <= 0) and (offset_max(a, p) >= 0))

predicate same_block(p: 'a1 pointer, q: 'a1 pointer) =
  (base_block(p) = base_block(q))

logic sub_pointer : 'a1 pointer, 'a1 pointer -> int

logic shift : 'a1 pointer, int -> 'a1 pointer

logic null : 'a1 pointer

logic pointer_address : 'a1 pointer -> unit pointer

logic absolute_address : int -> unit pointer

logic address : 'a1 pointer -> int

axiom address_injective:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. ((p = q) <-> (address(p) = address(q)))))

axiom address_null: (address(null) = 0)

axiom address_shift_lt:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) < address(shift(p, j))) <-> (i < j)))))

axiom address_shift_le:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) <= address(shift(p, j))) <-> (i <= j)))))

axiom shift_zero: (forall p:'a1 pointer [shift(p, 0)]. (shift(p, 0) = p))

axiom shift_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(shift(p, i), j)]. (shift(shift(p, i),
        j) = shift(p, (i + j))))))

axiom offset_max_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_max(a, shift(p, i)) = (offset_max(a, p) - i)))))

axiom offset_min_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_min(a, shift(p, i)) = (offset_min(a, p) - i)))))

axiom neq_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(p, i), shift(p, j)].
        ((i <> j) -> (shift(p, i) <> shift(p, j))))))

axiom null_not_valid: (forall a:'a1 alloc_table. (not valid(a, null)))

axiom null_pointer:
  (forall a:'a1 alloc_table.
    ((offset_min(a, null) >= 0) and (offset_max(a, null) <= (-2))))

logic eq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

logic neq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

axiom eq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer. ((eq_pointer_bool(p1, p2) = true) <-> (p1 = p2))))

axiom neq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer.
      ((neq_pointer_bool(p1, p2) = true) <-> (p1 <> p2))))

axiom same_block_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(p, shift(q, i))].
        (same_block(p, q) -> same_block(p, shift(q, i))))))

axiom same_block_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(shift(q, i), p)].
        (same_block(q, p) -> same_block(shift(q, i), p)))))

axiom sub_pointer_shift:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> (p = shift(q, sub_pointer(p, q))))))

axiom sub_pointer_self:
  (forall p:'a1 pointer [sub_pointer(p, p)]. (sub_pointer(p, p) = 0))

axiom sub_pointer_zero:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> ((sub_pointer(p, q) = 0) -> (p = q)))))

axiom sub_pointer_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(shift(p, i), q)]. (sub_pointer(shift(p, i),
        q) = (sub_pointer(p, q) + i)))))

axiom sub_pointer_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(p, shift(q, i))]. (sub_pointer(p, shift(q,
        i)) = (sub_pointer(p, q) - i)))))

type ('t, 'v) memory

logic select : ('a2, 'a1) memory, 'a2 pointer -> 'a1

logic store : ('a1, 'a2) memory, 'a1 pointer, 'a2 -> ('a1, 'a2) memory

axiom select_store_eq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 = p2) -> (select(store(m, p1, a), p2) = a))))))

axiom select_store_neq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 <> p2) -> (select(store(m, p1, a), p2) = select(m, p2)))))))

type 't pset

logic pset_empty : 'a1 pset

logic pset_singleton : 'a1 pointer -> 'a1 pset

logic pset_deref : ('a2, 'a1 pointer) memory, 'a2 pset -> 'a1 pset

logic pset_union : 'a1 pset, 'a1 pset -> 'a1 pset

logic pset_all : 'a1 pset -> 'a1 pset

logic pset_range : 'a1 pset, int, int -> 'a1 pset

logic pset_range_left : 'a1 pset, int -> 'a1 pset

logic pset_range_right : 'a1 pset, int -> 'a1 pset

logic in_pset : 'a1 pointer, 'a1 pset -> prop

logic valid_pset : 'a1 alloc_table, 'a1 pset -> prop

predicate pset_disjoint(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (not (in_pset(p, ps1) and in_pset(p, ps2))))

predicate pset_included(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (in_pset(p, ps1) -> in_pset(p, ps2)))

axiom pset_included_self: (forall ps:'a1 pset. pset_included(ps, ps))

axiom pset_included_range:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))].
            (((c <= a) and (b <= d)) -> pset_included(pset_range(ps, a, b),
             pset_range(ps, c, d))))))))

axiom pset_included_range_all:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))]. pset_included(pset_range(ps, a, b), pset_all(ps)))))))

axiom in_pset_empty: (forall p:'a1 pointer. (not in_pset(p, pset_empty)))

axiom in_pset_singleton:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. (in_pset(p, pset_singleton(q)) <-> (p = q))))

axiom in_pset_deref:
  (forall p:'a1 pointer.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (in_pset(p, pset_deref(m, q)) <->
         (exists r:'a2 pointer. (in_pset(r, q) and (p = select(m, r))))))))

axiom in_pset_all:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (in_pset(p, pset_all(q)) <->
       (exists i:int.
         (exists r:'a1 pointer. (in_pset(r, q) and (p = shift(r, i))))))))

axiom in_pset_range:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (forall b:int.
          (in_pset(p, pset_range(q, a, b)) <->
           (exists i:int.
             (exists r:'a1 pointer.
               ((a <= i) and
                ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))))

axiom in_pset_range_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall b:int.
        (in_pset(p, pset_range_left(q, b)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_range_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (in_pset(p, pset_range_right(q, a)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((a <= i) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_union:
  (forall p:'a1 pointer.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (in_pset(p, pset_union(s1, s2)) <->
         (in_pset(p, s1) or in_pset(p, s2))))))

axiom valid_pset_empty: (forall a:'a1 alloc_table. valid_pset(a, pset_empty))

axiom valid_pset_singleton:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (valid_pset(a, pset_singleton(p)) <-> valid(a, p))))

axiom valid_pset_deref:
  (forall a:'a1 alloc_table.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (valid_pset(a, pset_deref(m, q)) <->
         (forall r:'a2 pointer.
           (forall p:'a1 pointer.
             ((in_pset(r, q) and (p = select(m, r))) -> valid(a, p))))))))

axiom valid_pset_range:
  (forall a:'a1 alloc_table.
    (forall q:'a1 pset.
      (forall c:int.
        (forall d:int.
          (valid_pset(a, pset_range(q, c, d)) <->
           (forall i:int.
             (forall r:'a1 pointer.
               ((in_pset(r, q) and ((c <= i) and (i <= d))) -> valid(a,
                shift(r, i))))))))))

axiom valid_pset_union:
  (forall a:'a1 alloc_table.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (valid_pset(a, pset_union(s1, s2)) <->
         (valid_pset(a, s1) and valid_pset(a, s2))))))

predicate not_assigns(a: 'a1 alloc_table, m1: ('a1, 'a2) memory, m2: ('a1,
  'a2) memory, l: 'a1 pset) =
  (forall p:'a1 pointer.
    ((valid(a, p) and (not in_pset(p, l))) -> (select(m2, p) = select(m1, p))))

axiom not_assigns_refl:
  (forall a:'a1 alloc_table.
    (forall m:('a1, 'a2) memory.
      (forall l:'a1 pset. not_assigns(a, m, m, l))))

axiom not_assigns_trans:
  (forall a:'a1 alloc_table.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory.
          (forall l:'a1 pset [not_assigns(a, m1, m2, l), not_assigns(a, m1,
            m3, l)].
            (not_assigns(a, m1, m2, l) ->
             (not_assigns(a, m2, m3, l) -> not_assigns(a, m1, m3, l))))))))

logic full_separated : 'a1 pointer, 'a2 pointer -> prop

axiom full_separated_shift1:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(p, shift(q, i))))))

axiom full_separated_shift2:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift3:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift4:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(p, shift(q, i))))))

type 't tag_table

type 't tag_id

logic int_of_tag : 'a1 tag_id -> int

logic typeof : 'a1 tag_table, 'a1 pointer -> 'a1 tag_id

logic parenttag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag_bool : 'a1 tag_id, 'a1 tag_id -> bool

axiom subtag_bool_def:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id. ((subtag_bool(t1, t2) = true) <-> subtag(t1, t2))))

axiom subtag_refl: (forall t:'a1 tag_id. subtag(t, t))

axiom subtag_parent:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id.
      (forall t3:'a1 tag_id.
        (subtag(t1, t2) -> (parenttag(t2, t3) -> subtag(t1, t3))))))

predicate instanceof(a: 'a1 tag_table, p: 'a1 pointer, t: 'a1 tag_id) =
  subtag(typeof(a, p), t)

logic downcast : 'a1 tag_table, 'a1 pointer, 'a1 tag_id -> 'a1 pointer

axiom downcast_instanceof:
  (forall a:'a1 tag_table.
    (forall p:'a1 pointer.
      (forall s:'a1 tag_id. (instanceof(a, p, s) -> (downcast(a, p, s) = p)))))

logic bottom_tag : 'a1 tag_id

axiom bottom_tag_axiom: (forall t:'a1 tag_id. subtag(t, bottom_tag))

predicate root_tag(t: 'a1 tag_id) = parenttag(t, bottom_tag)

axiom root_subtag:
  (forall a:'a1 tag_id.
    (forall b:'a1 tag_id.
      (forall c:'a1 tag_id.
        (root_tag(a) ->
         (root_tag(b) -> ((a <> b) -> (subtag(c, a) -> (not subtag(c, b)))))))))

predicate fully_packed(tag_table: 'a1 tag_table, mutable: ('a1,
  'a1 tag_id) memory, this: 'a1 pointer) = (select(mutable,
  this) = typeof(tag_table, this))

logic bw_compl : int -> int

logic bw_and : int, int -> int

axiom bw_and_not_null:
  (forall a:int.
    (forall b:int. ((bw_and(a, b) <> 0) -> ((a <> 0) and (b <> 0)))))

logic bw_xor : int, int -> int

logic bw_or : int, int -> int

logic lsl : int, int -> int

axiom lsl_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsl(a, b)))))

axiom lsl_left_positive_monotone:
  (forall a1:int.
    (forall a2:int.
      (forall b:int.
        (((0 <= a1) and ((a1 <= a2) and (0 <= b))) -> (lsl(a1, b) <= lsl(a2,
         b))))))

logic lsr : int, int -> int

axiom lsr_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsr(a, b)))))

axiom lsr_left_positive_decreases:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(a, b) <= a))))

logic asr : int, int -> int

axiom asr_positive_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= asr(a, b)))))

axiom asr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) <= a))))

axiom asr_lsr_same_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) = lsr(a, b)))))

axiom lsl_of_lsr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsl(lsr(a, b), b) <= a))))

axiom lsr_of_lsl_identity_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(lsl(a, b), b) = a))))

logic alloc_extends : 'a1 alloc_table, 'a1 alloc_table -> prop

predicate alloc_fresh(a: 'a1 alloc_table, p: 'a1 pointer, n: int) =
  (forall i:int. (((0 <= i) and (i < n)) -> (not valid(a, shift(p, i)))))

axiom alloc_extends_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_min(a1, p) = offset_min(a2, p)))))))

axiom alloc_extends_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_max(a1, p) = offset_max(a2, p)))))))

axiom alloc_extends_not_assigns_empty:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory.
          (forall l:'a1 pset.
            (forall p:'a1 pointer.
              (forall n:int [alloc_extends(a1, a2), alloc_fresh(a1, p, n),
                not_assigns(a2, m1, m2, l)].
                ((alloc_extends(a1, a2) and
                  (alloc_fresh(a1, p, n) and
                   (not_assigns(a2, m1, m2, l) and pset_included(l,
                    pset_all(pset_singleton(p)))))) ->
                 not_assigns(a1, m1, m2, pset_empty)))))))))

logic alloc_extends_except : 'a1 alloc_table, 'a1 alloc_table,
'a1 pset -> prop

axiom alloc_extends_except_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_min(a1,
            p) = offset_min(a2, p))))))))

axiom alloc_extends_except_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_max(a1,
            p) = offset_max(a2, p))))))))

type 'a mybag

logic in_mybag : 'a1, 'a1 mybag -> prop

logic disj_mybag : 'a1 mybag, 'a1 mybag -> prop

axiom disj_sym:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag [disj_mybag(s1, s2)].
      (disj_mybag(s1, s2) -> disj_mybag(s2, s1))))

logic sub_mybag : 'a1 mybag, 'a1 mybag -> prop

axiom sub_refl:
  (forall sa:'a1 pointer mybag [sub_mybag(sa, sa)]. sub_mybag(sa, sa))

axiom sub_disj:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall s3:'a1 mybag [disj_mybag(s1, s2), sub_mybag(s2, s3)|
        disj_mybag(s1, s3), sub_mybag(s2, s3)].
        (disj_mybag(s1, s3) -> (sub_mybag(s2, s3) -> disj_mybag(s1, s2))))))

axiom sub_in:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall p:'a1 [in_mybag(p, s1), sub_mybag(s1, s2)| in_mybag(p, s2),
        sub_mybag(s1, s2)].
        ((not in_mybag(p, s2)) ->
         (sub_mybag(s1, s2) -> (not in_mybag(p, s1)))))))

axiom sub_sub:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall s3:'a1 mybag [sub_mybag(s1, s3), sub_mybag(s2, s3)|
        sub_mybag(s1, s3), sub_mybag(s1, s2)].
        (sub_mybag(s1, s2) -> (sub_mybag(s2, s3) -> sub_mybag(s1, s3))))))

logic frame_between : 'a1 pointer mybag, ('a1, 'a2) memory, ('a1,
'a2) memory -> prop

axiom frame_between_refl:
  (forall sa:'a1 pointer mybag.
    (forall m:('a1, 'a2) memory [frame_between(sa, m, m)]. frame_between(sa,
      m, m)))

axiom frame_between_gen:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall p:'a1 pointer.
          (forall v:'a2 [frame_between(sa, m1, store(m2, p, v))].
            (frame_between(sa, m1, m2) ->
             (in_mybag(p, sa) -> frame_between(sa, store(m1, p, v), m2))))))))

axiom frame_between_gen2:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory [frame_between(sa, m1, m2),
          frame_between(sa, m1, m3)| frame_between(sa, m2, m3),
          frame_between(sa, m1, m3)].
          (frame_between(sa, m1, m2) ->
           (frame_between(sa, m2, m3) -> frame_between(sa, m1, m3)))))))

axiom frame_between_gen_sub1:
  (forall s12:'a1 pointer mybag.
    (forall s23:'a1 pointer mybag.
      (forall s13:'a1 pointer mybag.
        (forall m1:('a1, 'a2) memory.
          (forall m2:('a1, 'a2) memory.
            (forall m3:('a1, 'a2) memory [frame_between(s12, m1, m2),
              frame_between(s13, m1, m3)].
              (sub_mybag(s12, s13) ->
               (frame_between(s12, m1, m2) ->
                (frame_between(s23, m2, m3) -> frame_between(s13, m1, m3))))))))))

axiom frame_between_gen_sub2:
  (forall s12:'a1 pointer mybag.
    (forall s23:'a1 pointer mybag.
      (forall s13:'a1 pointer mybag.
        (forall m1:('a1, 'a2) memory.
          (forall m2:('a1, 'a2) memory.
            (forall m3:('a1, 'a2) memory [frame_between(s23, m2, m3),
              frame_between(s13, m1, m3)].
              (frame_between(s12, m1, m2) ->
               (sub_mybag(s23, s13) ->
                (frame_between(s23, m2, m3) -> frame_between(s13, m1, m3))))))))))

axiom frame_between_pointer:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall p:'a1 pointer.
          (forall v:'a2 [frame_between(sa, m1, m2), select(m1, p)|
            frame_between(sa, m1, m2), select(m2, p)].
            (frame_between(sa, m1, m2) ->
             ((not in_mybag(p, sa)) -> (select(m1, p) = select(m2, p)))))))))

axiom frame_between_sub:
  (forall sa:'a1 pointer mybag.
    (forall sb:'a1 pointer mybag.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory [frame_between(sa, m1, m2),
          sub_mybag(sa, sb)].
          (frame_between(sa, m1, m2) ->
           (sub_mybag(sa, sb) -> frame_between(sb, m1, m2)))))))

type __ConsignerPanne_v0_1

type __TT0_v0_2

type __TT1_v0_3

type __TT2_v0_4

type __TT3_v0_5

type __TT4_v0_6

type __TT5_v0_7

type __TT6_v0_8

type __TT7_v0_9

type __anonenum_T_ID_TEST_2

type __anonenum_T_RESULTAT_1

type charP

type enum___anonenum_T_RESULTAT_1P

type int8

type padding

type uint32

type voidP

logic __ConsignerPanne_v0 : enum___anonenum_T_RESULTAT_1P pointer

logic __TT0_v0 : enum___anonenum_T_RESULTAT_1P pointer

logic __TT1_v0 : enum___anonenum_T_RESULTAT_1P pointer

logic __TT2_v0 : enum___anonenum_T_RESULTAT_1P pointer

logic __TT3_v0 : enum___anonenum_T_RESULTAT_1P pointer

logic __TT4_v0 : enum___anonenum_T_RESULTAT_1P pointer

logic __TT5_v0 : enum___anonenum_T_RESULTAT_1P pointer

logic __TT6_v0 : enum___anonenum_T_RESULTAT_1P pointer

logic __TT7_v0 : enum___anonenum_T_RESULTAT_1P pointer

logic integer_of___anonenum_T_ID_TEST_2 : __anonenum_T_ID_TEST_2 -> int

logic __anonenum_T_ID_TEST_2_of_integer : int -> __anonenum_T_ID_TEST_2

axiom __anonenum_T_ID_TEST_2_coerce:
  (forall x:int.
    (((0 <= x) and (x <= 7)) ->
     (integer_of___anonenum_T_ID_TEST_2(__anonenum_T_ID_TEST_2_of_integer(x)) = x)))

axiom __anonenum_T_ID_TEST_2_extensionality:
  (forall x:__anonenum_T_ID_TEST_2.
    (forall y:__anonenum_T_ID_TEST_2 [(integer_of___anonenum_T_ID_TEST_2(x) = integer_of___anonenum_T_ID_TEST_2(y))].
      ((integer_of___anonenum_T_ID_TEST_2(x) = integer_of___anonenum_T_ID_TEST_2(y)) ->
       (x = y))))

axiom __anonenum_T_ID_TEST_2_range:
  (forall x:__anonenum_T_ID_TEST_2.
    ((0 <= integer_of___anonenum_T_ID_TEST_2(x)) and
     (integer_of___anonenum_T_ID_TEST_2(x) <= 7)))

logic integer_of___anonenum_T_RESULTAT_1 : __anonenum_T_RESULTAT_1 -> int

logic __anonenum_T_RESULTAT_1_of_integer : int -> __anonenum_T_RESULTAT_1

axiom __anonenum_T_RESULTAT_1_coerce:
  (forall x:int.
    (((0 <= x) and (x <= 1)) ->
     (integer_of___anonenum_T_RESULTAT_1(__anonenum_T_RESULTAT_1_of_integer(x)) = x)))

axiom __anonenum_T_RESULTAT_1_extensionality:
  (forall x:__anonenum_T_RESULTAT_1.
    (forall y:__anonenum_T_RESULTAT_1 [(integer_of___anonenum_T_RESULTAT_1(x) = integer_of___anonenum_T_RESULTAT_1(y))].
      ((integer_of___anonenum_T_RESULTAT_1(x) = integer_of___anonenum_T_RESULTAT_1(y)) ->
       (x = y))))

axiom __anonenum_T_RESULTAT_1_range:
  (forall x:__anonenum_T_RESULTAT_1.
    ((0 <= integer_of___anonenum_T_RESULTAT_1(x)) and
     (integer_of___anonenum_T_RESULTAT_1(x) <= 1)))

logic charP_tag : charP tag_id

axiom charP_int: (int_of_tag(charP_tag) = 1)

logic charP_of_pointer_address : unit pointer -> charP pointer

axiom charP_of_pointer_address_of_pointer_addr:
  (forall p:charP pointer.
    (p = charP_of_pointer_address(pointer_address(p))))

axiom charP_parenttag_bottom: parenttag(charP_tag, bottom_tag)

axiom charP_tags:
  (forall x:charP pointer.
    (forall charP_tag_table:charP tag_table. instanceof(charP_tag_table, x,
      charP_tag)))

logic enum___anonenum_T_RESULTAT_1P_tag : enum___anonenum_T_RESULTAT_1P tag_id

axiom enum___anonenum_T_RESULTAT_1P_int:
  (int_of_tag(enum___anonenum_T_RESULTAT_1P_tag) = 1)

logic enum___anonenum_T_RESULTAT_1P_of_pointer_address : unit pointer -> enum___anonenum_T_RESULTAT_1P pointer

axiom enum___anonenum_T_RESULTAT_1P_of_pointer_address_of_pointer_addr:
  (forall p:enum___anonenum_T_RESULTAT_1P pointer.
    (p = enum___anonenum_T_RESULTAT_1P_of_pointer_address(pointer_address(p))))

axiom enum___anonenum_T_RESULTAT_1P_parenttag_bottom:
  parenttag(enum___anonenum_T_RESULTAT_1P_tag, bottom_tag)

axiom enum___anonenum_T_RESULTAT_1P_tags:
  (forall x:enum___anonenum_T_RESULTAT_1P pointer.
    (forall enum___anonenum_T_RESULTAT_1P_tag_table:enum___anonenum_T_RESULTAT_1P tag_table.
      instanceof(enum___anonenum_T_RESULTAT_1P_tag_table, x,
      enum___anonenum_T_RESULTAT_1P_tag)))

predicate eq___anonenum_T_ID_TEST_2(x: __anonenum_T_ID_TEST_2,
  y: __anonenum_T_ID_TEST_2) =
  (integer_of___anonenum_T_ID_TEST_2(x) = integer_of___anonenum_T_ID_TEST_2(y))

predicate eq___anonenum_T_RESULTAT_1(x: __anonenum_T_RESULTAT_1,
  y: __anonenum_T_RESULTAT_1) =
  (integer_of___anonenum_T_RESULTAT_1(x) = integer_of___anonenum_T_RESULTAT_1(y))

logic integer_of_int8 : int8 -> int

predicate eq_int8(x: int8, y: int8) =
  (integer_of_int8(x) = integer_of_int8(y))

logic integer_of_uint32 : uint32 -> int

predicate eq_uint32(x: uint32, y: uint32) =
  (integer_of_uint32(x) = integer_of_uint32(y))

predicate f_cond0(testv0: enum___anonenum_T_RESULTAT_1P pointer, cpt: int,
  enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_testv0_10_at_L: (enum___anonenum_T_RESULTAT_1P,
  __anonenum_T_RESULTAT_1) memory) =
  (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_testv0_10_at_L,
  shift(testv0,
  cpt))) = integer_of___anonenum_T_RESULTAT_1(__anonenum_T_RESULTAT_1_of_integer(1)))

predicate f_cond1(testv0_0: enum___anonenum_T_RESULTAT_1P pointer,
  cpt_0: int,
  enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_testv0_0_11_at_L: (enum___anonenum_T_RESULTAT_1P,
  __anonenum_T_RESULTAT_1) memory) =
  (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_testv0_0_11_at_L,
  shift(testv0_0,
  cpt_0))) = integer_of___anonenum_T_RESULTAT_1(__anonenum_T_RESULTAT_1_of_integer(0)))

predicate f_cond_OK(testv0_1: enum___anonenum_T_RESULTAT_1P pointer,
  cpt_1: int, cpt_panne: int,
  enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_testv0_1_12_at_L: (enum___anonenum_T_RESULTAT_1P,
  __anonenum_T_RESULTAT_1) memory,
  enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1_at_L: (enum___anonenum_T_RESULTAT_1P,
  __anonenum_T_RESULTAT_1) memory) =
  (f_cond0(testv0_1, cpt_1,
   enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_testv0_1_12_at_L) or
   (f_cond1(testv0_1, cpt_1,
    enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M_testv0_1_12_at_L) and
    (integer_of___anonenum_T_RESULTAT_1(select(enum___anonenum_T_RESULTAT_1P_enum___anonenum_T_RESULTAT_1M___ConsignerPanne_v0_1_at_L,
    shift(__ConsignerPanne_v0,
    cpt_panne))) = integer_of___anonenum_T_RESULTAT_1(__anonenum_T_RESULTAT_1_of_integer(1)))))

logic int8_of_integer : int -> int8

axiom int8_coerce:
  (forall x:int.
    ((((-128) <= x) and (x <= 127)) ->
     (integer_of_int8(int8_of_integer(x)) = x)))

axiom int8_extensionality:
  (forall x:int8.
    (forall y:int8 [(integer_of_int8(x) = integer_of_int8(y))].
      ((integer_of_int8(x) = integer_of_int8(y)) -> (x = y))))

axiom int8_range:
  (forall x:int8.
    (((-128) <= integer_of_int8(x)) and (integer_of_int8(x) <= 127)))

predicate left_valid_struct_charP(p: charP pointer, a: int,
  charP_alloc_table: charP alloc_table) = (offset_min(charP_alloc_table,
  p) <= a)

predicate left_valid_struct_enum___anonenum_T_RESULTAT_1P(p: enum___anonenum_T_RESULTAT_1P pointer,
  a: int,
  enum___anonenum_T_RESULTAT_1P_alloc_table: enum___anonenum_T_RESULTAT_1P alloc_table) =
  (offset_min(enum___anonenum_T_RESULTAT_1P_alloc_table, p) <= a)

predicate left_valid_struct_voidP(p: voidP pointer, a: int,
  voidP_alloc_table: voidP alloc_table) = (offset_min(voidP_alloc_table,
  p) <= a)

axiom pointer_addr_of_charP_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(charP_of_pointer_address(p))))

axiom pointer_addr_of_enum___anonenum_T_RESULTAT_1P_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(enum___anonenum_T_RESULTAT_1P_of_pointer_address(p))))

logic voidP_of_pointer_address : unit pointer -> voidP pointer

axiom pointer_addr_of_voidP_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(voidP_of_pointer_address(p))))

predicate right_valid_struct_charP(p: charP pointer, b: int,
  charP_alloc_table: charP alloc_table) = (offset_max(charP_alloc_table,
  p) >= b)

predicate right_valid_struct_enum___anonenum_T_RESULTAT_1P(p: enum___anonenum_T_RESULTAT_1P pointer,
  b: int,
  enum___anonenum_T_RESULTAT_1P_alloc_table: enum___anonenum_T_RESULTAT_1P alloc_table) =
  (offset_max(enum___anonenum_T_RESULTAT_1P_alloc_table, p) >= b)

predicate right_valid_struct_voidP(p: voidP pointer, b: int,
  voidP_alloc_table: voidP alloc_table) = (offset_max(voidP_alloc_table,
  p) >= b)

predicate strict_valid_root_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) = a) and (offset_max(charP_alloc_table,
   p) = b))

predicate strict_valid_root_enum___anonenum_T_RESULTAT_1P(p: enum___anonenum_T_RESULTAT_1P pointer,
  a: int, b: int,
  enum___anonenum_T_RESULTAT_1P_alloc_table: enum___anonenum_T_RESULTAT_1P alloc_table) =
  ((offset_min(enum___anonenum_T_RESULTAT_1P_alloc_table, p) = a) and
   (offset_max(enum___anonenum_T_RESULTAT_1P_alloc_table, p) = b))

predicate strict_valid_root_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) = a) and (offset_max(voidP_alloc_table,
   p) = b))

predicate strict_valid_struct_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) = a) and (offset_max(charP_alloc_table,
   p) = b))

predicate strict_valid_struct_enum___anonenum_T_RESULTAT_1P(p: enum___anonenum_T_RESULTAT_1P pointer,
  a: int, b: int,
  enum___anonenum_T_RESULTAT_1P_alloc_table: enum___anonenum_T_RESULTAT_1P alloc_table) =
  ((offset_min(enum___anonenum_T_RESULTAT_1P_alloc_table, p) = a) and
   (offset_max(enum___anonenum_T_RESULTAT_1P_alloc_table, p) = b))

predicate strict_valid_struct_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) = a) and (offset_max(voidP_alloc_table,
   p) = b))

logic uint32_of_integer : int -> uint32

axiom uint32_coerce:
  (forall x:int.
    (((0 <= x) and (x <= 4294967295)) ->
     (integer_of_uint32(uint32_of_integer(x)) = x)))

axiom uint32_extensionality:
  (forall x:uint32.
    (forall y:uint32 [(integer_of_uint32(x) = integer_of_uint32(y))].
      ((integer_of_uint32(x) = integer_of_uint32(y)) -> (x = y))))

axiom uint32_range:
  (forall x:uint32.
    ((0 <= integer_of_uint32(x)) and (integer_of_uint32(x) <= 4294967295)))

predicate valid_root_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) <= a) and (offset_max(charP_alloc_table,
   p) >= b))

predicate valid_root_enum___anonenum_T_RESULTAT_1P(p: enum___anonenum_T_RESULTAT_1P pointer,
  a: int, b: int,
  enum___anonenum_T_RESULTAT_1P_alloc_table: enum___anonenum_T_RESULTAT_1P alloc_table) =
  ((offset_min(enum___anonenum_T_RESULTAT_1P_alloc_table, p) <= a) and
   (offset_max(enum___anonenum_T_RESULTAT_1P_alloc_table, p) >= b))

predicate valid_root_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) <= a) and (offset_max(voidP_alloc_table,
   p) >= b))

predicate valid_struct_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) <= a) and (offset_max(charP_alloc_table,
   p) >= b))

predicate valid_struct_enum___anonenum_T_RESULTAT_1P(p: enum___anonenum_T_RESULTAT_1P pointer,
  a: int, b: int,
  enum___anonenum_T_RESULTAT_1P_alloc_table: enum___anonenum_T_RESULTAT_1P alloc_table) =
  ((offset_min(enum___anonenum_T_RESULTAT_1P_alloc_table, p) <= a) and
   (offset_max(enum___anonenum_T_RESULTAT_1P_alloc_table, p) >= b))

predicate valid_struct_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) <= a) and (offset_max(voidP_alloc_table,
   p) >= b))

logic voidP_tag : voidP tag_id

axiom voidP_int: (int_of_tag(voidP_tag) = 1)

axiom voidP_of_pointer_address_of_pointer_addr:
  (forall p:voidP pointer.
    (p = voidP_of_pointer_address(pointer_address(p))))

axiom voidP_parenttag_bottom: parenttag(voidP_tag, bottom_tag)

axiom voidP_tags:
  (forall x:voidP pointer.
    (forall voidP_tag_table:voidP tag_table. instanceof(voidP_tag_table, x,
      voidP_tag)))

