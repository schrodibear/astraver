(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)
Require Export jessie_why.
(*
Dp_hint single_to_double_val.
Dp_hint double_to_single_val.
Dp_hint round_double_idempotent.
Dp_hint round_up_double_neg.
Dp_hint round_down_double_neg.
Dp_hint round_up_double_ge.
Dp_hint round_double_down_le.
Dp_hint round_single_idempotent.
Dp_hint round_up_single_neg.
Dp_hint round_down_single_neg.
Dp_hint round_up_single_ge.
Dp_hint round_single_down_le.
Dp_hint bounded_real_no_overflow_single.
Dp_hint bounded_real_no_overflow_double.
Dp_hint concat_select_bytes.
Dp_hint concat_store_bytes_down.
Dp_hint concat_store_bytes_up.
Dp_hint shift_select_bytes.
Dp_hint shift_store_bytes.
Dp_hint select_store_neq_bytes.
Dp_hint select_store_eq_bytes.
Dp_hint concat_extract_bytes.
Dp_hint concat_replace_bytes_down.
Dp_hint concat_replace_bytes_up.
Dp_hint select_store_neq_union.
Dp_hint select_store_eq_union.
Dp_hint offset_max_bytes_def.
Dp_hint offset_min_bytes_def.
Dp_hint alloc_extends_except_offset_max.
Dp_hint alloc_extends_except_offset_min.
Dp_hint alloc_extends_not_assigns_empty.
Dp_hint alloc_extends_offset_max.
Dp_hint alloc_extends_offset_min.
Dp_hint lsr_of_lsl_identity_on_positive.
Dp_hint lsl_of_lsr_decreases_on_positive.
Dp_hint asr_lsr_same_on_positive.
Dp_hint asr_decreases_on_positive.
Dp_hint asr_positive_on_positive.
Dp_hint lsr_left_positive_decreases.
Dp_hint lsr_left_positive_returns_positive.
Dp_hint lsl_left_positive_monotone.
Dp_hint lsl_left_positive_returns_positive.
Dp_hint bw_and_not_null.
Dp_hint root_subtag.
Dp_hint bottom_tag_axiom.
Dp_hint downcast_instanceof.
Dp_hint subtag_parent.
Dp_hint subtag_refl.
Dp_hint subtag_bool_def.
Dp_hint full_separated_shift4.
Dp_hint full_separated_shift3.
Dp_hint full_separated_shift2.
Dp_hint full_separated_shift1.
Dp_hint not_assigns_trans.
Dp_hint not_assigns_refl.
Dp_hint valid_pset_union.
Dp_hint valid_pset_range.
Dp_hint valid_pset_deref.
Dp_hint valid_pset_singleton.
Dp_hint valid_pset_empty.
Dp_hint in_pset_union.
Dp_hint in_pset_range_right.
Dp_hint in_pset_range_left.
Dp_hint in_pset_range.
Dp_hint in_pset_all.
Dp_hint in_pset_deref.
Dp_hint in_pset_singleton.
Dp_hint in_pset_empty.
Dp_hint pset_included_range_all.
Dp_hint pset_included_range.
Dp_hint pset_included_self.
Dp_hint select_store_neq.
Dp_hint select_store_eq.
Dp_hint sub_pointer_shift_right.
Dp_hint sub_pointer_shift_left.
Dp_hint sub_pointer_zero.
Dp_hint sub_pointer_self.
Dp_hint sub_pointer_shift.
Dp_hint same_block_shift_left.
Dp_hint same_block_shift_right.
Dp_hint neq_pointer_bool_def.
Dp_hint eq_pointer_bool_def.
Dp_hint null_pointer.
Dp_hint null_not_valid.
Dp_hint neq_shift.
Dp_hint offset_min_shift.
Dp_hint offset_max_shift.
Dp_hint shift_shift.
Dp_hint shift_zero.
Dp_hint address_shift_le.
Dp_hint address_shift_lt.
Dp_hint address_null.
Dp_hint address_injective.
Dp_hint abs_minus.
Dp_hint prod_pos.
Dp_hint log_exp.
Dp_hint abs_real_neg.
Dp_hint abs_real_pos.
Dp_hint real_min_is_some.
Dp_hint real_min_is_le.
Dp_hint real_max_is_some.
Dp_hint real_max_is_ge.
Dp_hint neq_real_bool_axiom.
Dp_hint eq_real_bool_axiom.
Dp_hint ge_real_bool_axiom.
Dp_hint gt_real_bool_axiom.
Dp_hint le_real_bool_axiom.
Dp_hint lt_real_bool_axiom.
Dp_hint int_min_is_some.
Dp_hint int_min_is_le.
Dp_hint int_max_is_some.
Dp_hint int_max_is_ge.
Dp_hint abs_int_neg.
Dp_hint abs_int_pos.
Dp_hint neq_int_bool_axiom.
Dp_hint eq_int_bool_axiom.
Dp_hint ge_int_bool_axiom.
Dp_hint gt_int_bool_axiom.
Dp_hint le_int_bool_axiom.
Dp_hint lt_int_bool_axiom.
Dp_hint ite_false.
Dp_hint ite_true.
Dp_hint bool_not_def.
Dp_hint bool_xor_def.
Dp_hint bool_or_def.
Dp_hint bool_and_def.
*)

(*Why type*) Definition char_P: Set.
Admitted.

(*Why type*) Definition int8: Set.
Admitted.

(*Why type*) Definition padding: Set.
Admitted.

(*Why type*) Definition void_P: Set.
Admitted.

(*Why logic*) Definition bitvector_of_char_P : (pointer char_P) -> bitvector.
Admitted.

(*Why logic*) Definition char_P_of_bitvector : bitvector -> (pointer char_P).
Admitted.

(*Why axiom*) Lemma bitvector_of_char_P_of_char_P_of_bitvector :
  (forall (x:bitvector), (bitvector_of_char_P (char_P_of_bitvector x)) = x).
Admitted.
Dp_hint bitvector_of_char_P_of_char_P_of_bitvector.

(*Why logic*) Definition bitvector_of_int8 : int8 -> bitvector.
Admitted.

(*Why logic*) Definition int8_of_bitvector : bitvector -> int8.
Admitted.

(*Why axiom*) Lemma bitvector_of_int8_of_int8_of_bitvector :
  (forall (x:bitvector), (bitvector_of_int8 (int8_of_bitvector x)) = x).
Admitted.
Dp_hint bitvector_of_int8_of_int8_of_bitvector.

(*Why logic*) Definition bitvector_of_void_P : (pointer void_P) -> bitvector.
Admitted.

(*Why logic*) Definition void_P_of_bitvector : bitvector -> (pointer void_P).
Admitted.

(*Why axiom*) Lemma bitvector_of_void_P_of_void_P_of_bitvector :
  (forall (x:bitvector), (bitvector_of_void_P (void_P_of_bitvector x)) = x).
Admitted.
Dp_hint bitvector_of_void_P_of_void_P_of_bitvector.

(*Why logic*) Definition char_P_tag : (tag_id char_P).
Admitted.

(*Why axiom*) Lemma char_P_int : (int_of_tag char_P_tag) = 1.
Admitted.
Dp_hint char_P_int.

(*Why axiom*) Lemma char_P_of_bitvector_of_bitvector_of_char_P :
  (forall (x:(pointer char_P)),
   (char_P_of_bitvector (bitvector_of_char_P x)) = x).
Admitted.
Dp_hint char_P_of_bitvector_of_bitvector_of_char_P.

(*Why logic*) Definition char_P_of_pointer_address :
  (pointer unit) -> (pointer char_P).
Admitted.

(*Why axiom*) Lemma char_P_of_pointer_address_of_pointer_addr :
  (forall (p:(pointer char_P)),
   p = (char_P_of_pointer_address (pointer_address p))).
Admitted.
Dp_hint char_P_of_pointer_address_of_pointer_addr.

(*Why axiom*) Lemma char_P_parenttag_bottom :
  (parenttag char_P_tag (@bottom_tag char_P)).
Admitted.
Dp_hint char_P_parenttag_bottom.

(*Why axiom*) Lemma char_P_tags :
  (forall (x:(pointer char_P)),
   (forall (char_P_tag_table:(tag_table char_P)),
    (instanceof char_P_tag_table x char_P_tag))).
Admitted.
Dp_hint char_P_tags.

(*Why logic*) Definition integer_of_int8 : int8 -> Z.
Admitted.

(*Why predicate*) Definition eq_int8  (x:int8) (y:int8)
  := (integer_of_int8 x) = (integer_of_int8 y).

(*Why logic*) Definition int8_of_integer : Z -> int8.
Admitted.

(*Why axiom*) Lemma int8_coerce :
  (forall (x:Z),
   ((-128) <= x /\ x <= 127 -> (integer_of_int8 (int8_of_integer x)) = x)).
Admitted.
Dp_hint int8_coerce.

(*Why axiom*) Lemma int8_of_bitvector_of_bitvector_of_int8 :
  (forall (x:int8), (eq_int8 (int8_of_bitvector (bitvector_of_int8 x)) x)).
Admitted.
Dp_hint int8_of_bitvector_of_bitvector_of_int8.

(*Why axiom*) Lemma int8_range :
  (forall (x:int8), (-128) <= (integer_of_int8 x) /\ (integer_of_int8 x) <=
   127).
Admitted.
Dp_hint int8_range.

(*Why predicate*) Definition left_valid_struct_char_P  (p:(pointer char_P)) (a:Z) (char_P_alloc_table:(alloc_table char_P))
  := (offset_min char_P_alloc_table p) <= a.

(*Why predicate*) Definition left_valid_struct_void_P  (p:(pointer void_P)) (a:Z) (void_P_alloc_table:(alloc_table void_P))
  := (offset_min void_P_alloc_table p) <= a.

(*Why axiom*) Lemma pointer_addr_of_char_P_of_pointer_address :
  (forall (p:(pointer unit)),
   p = (pointer_address (char_P_of_pointer_address p))).
Admitted.
Dp_hint pointer_addr_of_char_P_of_pointer_address.

(*Why logic*) Definition void_P_of_pointer_address :
  (pointer unit) -> (pointer void_P).
Admitted.

(*Why axiom*) Lemma pointer_addr_of_void_P_of_pointer_address :
  (forall (p:(pointer unit)),
   p = (pointer_address (void_P_of_pointer_address p))).
Admitted.
Dp_hint pointer_addr_of_void_P_of_pointer_address.

(*Why predicate*) Definition right_valid_struct_char_P  (p:(pointer char_P)) (b:Z) (char_P_alloc_table:(alloc_table char_P))
  := (offset_max char_P_alloc_table p) >= b.

(*Why predicate*) Definition right_valid_struct_void_P  (p:(pointer void_P)) (b:Z) (void_P_alloc_table:(alloc_table void_P))
  := (offset_max void_P_alloc_table p) >= b.

(*Why predicate*) Definition strict_valid_root_char_P  (p:(pointer char_P)) (a:Z) (b:Z) (char_P_alloc_table:(alloc_table char_P))
  := (offset_min char_P_alloc_table p) = a /\
     (offset_max char_P_alloc_table p) = b.

(*Why predicate*) Definition strict_valid_root_void_P  (p:(pointer void_P)) (a:Z) (b:Z) (void_P_alloc_table:(alloc_table void_P))
  := (offset_min void_P_alloc_table p) = a /\
     (offset_max void_P_alloc_table p) = b.

(*Why predicate*) Definition strict_valid_struct_char_P  (p:(pointer char_P)) (a:Z) (b:Z) (char_P_alloc_table:(alloc_table char_P))
  := (offset_min char_P_alloc_table p) = a /\
     (offset_max char_P_alloc_table p) = b.

(*Why predicate*) Definition strict_valid_struct_void_P  (p:(pointer void_P)) (a:Z) (b:Z) (void_P_alloc_table:(alloc_table void_P))
  := (offset_min void_P_alloc_table p) = a /\
     (offset_max void_P_alloc_table p) = b.

(*Why predicate*) Definition valid_bitvector_struct_char_P  (p:(pointer unit)) (a:Z) (b:Z) (bitvector_alloc_table:(alloc_table unit))
  := (offset_min bitvector_alloc_table p) = a /\
     (offset_max bitvector_alloc_table p) = b.

(*Why predicate*) Definition valid_bitvector_struct_void_P  (p:(pointer unit)) (a:Z) (b:Z) (bitvector_alloc_table:(alloc_table unit))
  := (offset_min bitvector_alloc_table p) = a /\
     (offset_max bitvector_alloc_table p) = b.

(*Why predicate*) Definition valid_root_char_P  (p:(pointer char_P)) (a:Z) (b:Z) (char_P_alloc_table:(alloc_table char_P))
  := (offset_min char_P_alloc_table p) <= a /\
     (offset_max char_P_alloc_table p) >= b.

(*Why predicate*) Definition valid_root_void_P  (p:(pointer void_P)) (a:Z) (b:Z) (void_P_alloc_table:(alloc_table void_P))
  := (offset_min void_P_alloc_table p) <= a /\
     (offset_max void_P_alloc_table p) >= b.

(*Why predicate*) Definition valid_struct_char_P  (p:(pointer char_P)) (a:Z) (b:Z) (char_P_alloc_table:(alloc_table char_P))
  := (offset_min char_P_alloc_table p) <= a /\
     (offset_max char_P_alloc_table p) >= b.

(*Why predicate*) Definition valid_struct_void_P  (p:(pointer void_P)) (a:Z) (b:Z) (void_P_alloc_table:(alloc_table void_P))
  := (offset_min void_P_alloc_table p) <= a /\
     (offset_max void_P_alloc_table p) >= b.

(*Why logic*) Definition void_P_tag : (tag_id void_P).
Admitted.

(*Why axiom*) Lemma void_P_int : (int_of_tag void_P_tag) = 1.
Admitted.
Dp_hint void_P_int.

(*Why axiom*) Lemma void_P_of_bitvector_of_bitvector_of_void_P :
  (forall (x:(pointer void_P)),
   (void_P_of_bitvector (bitvector_of_void_P x)) = x).
Admitted.
Dp_hint void_P_of_bitvector_of_bitvector_of_void_P.

(*Why axiom*) Lemma void_P_of_pointer_address_of_pointer_addr :
  (forall (p:(pointer void_P)),
   p = (void_P_of_pointer_address (pointer_address p))).
Admitted.
Dp_hint void_P_of_pointer_address_of_pointer_addr.

(*Why axiom*) Lemma void_P_parenttag_bottom :
  (parenttag void_P_tag (@bottom_tag void_P)).
Admitted.
Dp_hint void_P_parenttag_bottom.

(*Why axiom*) Lemma void_P_tags :
  (forall (x:(pointer void_P)),
   (forall (void_P_tag_table:(tag_table void_P)),
    (instanceof void_P_tag_table x void_P_tag))).
Admitted.
Dp_hint void_P_tags.

Require Export Reals.

Parameter single: Set.

Parameter single_value: single -> R.






Require Import tactics.

(* Why obligation from file "my_cosine.c", line 8, characters 13-53: *)
(*Why goal*) Lemma my_cos1_ensures_default_po_1 : 
  forall (x_1: single),
  forall (HW_1: true = true /\
                (* JC_3 *) (Rle (Rabs (single_value x_1)) (1 / 32)%R)),
  (* JC_15 *)
  (* JC_15 *)
  (Rle
   (Rabs
    (Rminus
     (Rminus
      (1)%R (Rmult (Rmult (single_value x_1) (single_value x_1)) (05 / 10)%R)) (
     cos (single_value x_1))))
   (1 / 16777216)%R).
Proof.
intuition.
interval with (i_bisect_diff (single_value x_1),i_nocheck).
Save.









Inductive mode : Set := nearest_even.

Parameter no_overflow_single: mode -> R -> Prop.

Parameter sub_single_post : mode -> single -> single -> single -> Prop.
Parameter mul_single_post : mode -> single -> single -> single -> Prop.
Parameter single_of_real_post : mode -> R -> single -> Prop.

(* Why obligation from file "my_cosine.c", line 5, characters 12-46: *)
(*Why goal*) Lemma my_cos1_ensures_default_po_2 : 
  forall (x_1: single),
  forall (HW_1: true = true /\
                (* JC_3 *) (Rle (Rabs (single_value x_1)) (1 / 32)%R)),
  forall (HW_4: (* JC_15 *)
                (Rle
                 (Rabs
                  (Rminus
                   (Rminus
                    (1)%R (Rmult
                           (Rmult (single_value x_1) (single_value x_1)) (05 / 10)%R)) (
                   cos (single_value x_1))))
                 (1 / 16777216)%R)),
  forall (result: single),
  forall (HW_5: (no_overflow_single nearest_even (1)%R) /\
                (single_of_real_post nearest_even (1)%R result)),
  forall (result0: single),
  forall (HW_6: (no_overflow_single
                 nearest_even (Rmult (single_value x_1) (single_value x_1))) /\
                (mul_single_post nearest_even x_1 x_1 result0)),
  forall (result1: single),
  forall (HW_7: (no_overflow_single nearest_even (05 / 10)%R) /\
                (single_of_real_post nearest_even (05 / 10)%R result1)),
  forall (result2: single),
  forall (HW_8: (no_overflow_single
                 nearest_even (Rmult
                               (single_value result0) (single_value result1))) /\
                (mul_single_post nearest_even result0 result1 result2)),
  forall (result3: single),
  forall (HW_9: (no_overflow_single
                 nearest_even (Rminus
                               (single_value result) (single_value result2))) /\
                (sub_single_post nearest_even result result2 result3)),
  forall (__retres: single),
  forall (HW_10: __retres = result3),
  forall (why__return: single),
  forall (HW_11: why__return = __retres),
  (* JC_5 *)
  (Rle (Rabs (Rminus (single_value why__return) (cos (single_value x_1))))
   (1 / 8388608)%R).
Proof.
intuition.
admit.
Save.

(* Why obligation from file "my_cosine.jc", line 46, characters 33-47: *)
(*Why goal*) Lemma my_cos1_safety_po_1 : 
  forall (x_1: single),
  forall (HW_1: (* JC_3 *) (Rle (Rabs (single_value x_1)) (1 / 32)%R)),
  forall (HW_4: (* JC_9 *)
                (Rle
                 (Rabs
                  (Rminus
                   (Rminus
                    (1)%R (Rmult
                           (Rmult (single_value x_1) (single_value x_1)) (05 / 10)%R)) (
                   cos (single_value x_1))))
                 (1 / 16777216)%R)),
  (no_overflow_single nearest_even (1)%R).
Proof.
intuition.
admit.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 9, characters 2-8: *)
(*Why goal*) Lemma my_cos1_safety_po_2 : 
  forall (x_1: single),
  forall (HW_1: (* JC_3 *) (Rle (Rabs (single_value x_1)) (1 / 32)%R)),
  forall (HW_4: (* JC_9 *)
                (Rle
                 (Rabs
                  (Rminus
                   (Rminus
                    (1)%R (Rmult
                           (Rmult (single_value x_1) (single_value x_1)) (05 / 10)%R)) (
                   cos (single_value x_1))))
                 (1 / 16777216)%R)),
  forall (HW_5: (no_overflow_single nearest_even (1)%R)),
  forall (result: single),
  forall (HW_6: (single_of_real_post nearest_even (1)%R result)),
  (no_overflow_single
   nearest_even (Rmult (single_value x_1) (single_value x_1))).
Proof.
intuition.
admit.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.jc", line 48, characters 43-57: *)
(*Why goal*) Lemma my_cos1_safety_po_3 : 
  forall (x_1: single),
  forall (HW_1: (* JC_3 *) (Rle (Rabs (single_value x_1)) (1 / 32)%R)),
  forall (HW_4: (* JC_9 *)
                (Rle
                 (Rabs
                  (Rminus
                   (Rminus
                    (1)%R (Rmult
                           (Rmult (single_value x_1) (single_value x_1)) (05 / 10)%R)) (
                   cos (single_value x_1))))
                 (1 / 16777216)%R)),
  forall (HW_5: (no_overflow_single nearest_even (1)%R)),
  forall (result: single),
  forall (HW_6: (single_of_real_post nearest_even (1)%R result)),
  forall (HW_7: (no_overflow_single
                 nearest_even (Rmult (single_value x_1) (single_value x_1)))),
  forall (result0: single),
  forall (HW_8: (mul_single_post nearest_even x_1 x_1 result0)),
  (no_overflow_single nearest_even (05 / 10)%R).
Proof.
intuition.
admit.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 9, characters 2-8: *)
(*Why goal*) Lemma my_cos1_safety_po_4 : 
  forall (x_1: single),
  forall (HW_1: (* JC_3 *) (Rle (Rabs (single_value x_1)) (1 / 32)%R)),
  forall (HW_4: (* JC_9 *)
                (Rle
                 (Rabs
                  (Rminus
                   (Rminus
                    (1)%R (Rmult
                           (Rmult (single_value x_1) (single_value x_1)) (05 / 10)%R)) (
                   cos (single_value x_1))))
                 (1 / 16777216)%R)),
  forall (HW_5: (no_overflow_single nearest_even (1)%R)),
  forall (result: single),
  forall (HW_6: (single_of_real_post nearest_even (1)%R result)),
  forall (HW_7: (no_overflow_single
                 nearest_even (Rmult (single_value x_1) (single_value x_1)))),
  forall (result0: single),
  forall (HW_8: (mul_single_post nearest_even x_1 x_1 result0)),
  forall (HW_9: (no_overflow_single nearest_even (05 / 10)%R)),
  forall (result1: single),
  forall (HW_10: (single_of_real_post nearest_even (05 / 10)%R result1)),
  (no_overflow_single
   nearest_even (Rmult (single_value result0) (single_value result1))).
Proof.
intuition.
admit.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 9, characters 2-8: *)
(*Why goal*) Lemma my_cos1_safety_po_5 : 
  forall (x_1: single),
  forall (HW_1: (* JC_3 *) (Rle (Rabs (single_value x_1)) (1 / 32)%R)),
  forall (HW_4: (* JC_9 *)
                (Rle
                 (Rabs
                  (Rminus
                   (Rminus
                    (1)%R (Rmult
                           (Rmult (single_value x_1) (single_value x_1)) (05 / 10)%R)) (
                   cos (single_value x_1))))
                 (1 / 16777216)%R)),
  forall (HW_5: (no_overflow_single nearest_even (1)%R)),
  forall (result: single),
  forall (HW_6: (single_of_real_post nearest_even (1)%R result)),
  forall (HW_7: (no_overflow_single
                 nearest_even (Rmult (single_value x_1) (single_value x_1)))),
  forall (result0: single),
  forall (HW_8: (mul_single_post nearest_even x_1 x_1 result0)),
  forall (HW_9: (no_overflow_single nearest_even (05 / 10)%R)),
  forall (result1: single),
  forall (HW_10: (single_of_real_post nearest_even (05 / 10)%R result1)),
  forall (HW_11: (no_overflow_single
                  nearest_even (Rmult
                                (single_value result0) (single_value result1)))),
  forall (result2: single),
  forall (HW_12: (mul_single_post nearest_even result0 result1 result2)),
  (no_overflow_single
   nearest_even (Rminus (single_value result) (single_value result2))).
Proof.
intuition.
admit.
(* FILL PROOF HERE *)
Save.

Parameter single_exact: single -> R.
Parameter single_round_error: single -> R.

(* Why obligation from file "my_cosine.c", line 18, characters 13-49: *)
(*Why goal*) Lemma my_cos2_ensures_default_po_1 : 
  forall (x: single),
  forall (HW_1: true = true /\
                (* JC_25 *)
                ((* JC_23 *) (Rle (Rabs (single_value x)) (1 / 32)%R) /\
                (* JC_24 *) (eq (single_round_error x) (0)%R))),
  forall (result: single),
  forall (HW_4: (no_overflow_single nearest_even (1)%R) /\
                (single_of_real_post nearest_even (1)%R result)),
  forall (result0: single),
  forall (HW_5: (no_overflow_single
                 nearest_even (Rmult (single_value x) (single_value x))) /\
                (mul_single_post nearest_even x x result0)),
  forall (result1: single),
  forall (HW_6: (no_overflow_single nearest_even (05 / 10)%R) /\
                (single_of_real_post nearest_even (05 / 10)%R result1)),
  forall (result2: single),
  forall (HW_7: (no_overflow_single
                 nearest_even (Rmult
                               (single_value result0) (single_value result1))) /\
                (mul_single_post nearest_even result0 result1 result2)),
  forall (result3: single),
  forall (HW_8: (no_overflow_single
                 nearest_even (Rminus
                               (single_value result) (single_value result2))) /\
                (sub_single_post nearest_even result result2 result3)),
  forall (r: single),
  forall (HW_9: r = result3),
  (* JC_40 *)
  (* JC_40 *)
  (Rle (Rabs (Rminus (single_exact r) (cos (single_value x))))
   (1 / 16777216)%R).
Proof.
intuition.

(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 14, characters 12-46: *)
(*Why goal*) Lemma my_cos2_ensures_default_po_2 : 
  forall (x: single),
  forall (HW_1: true = true /\
                (* JC_25 *)
                ((* JC_23 *) (Rle (Rabs (single_value x)) (1 / 32)%R) /\
                (* JC_24 *) (eq (single_round_error x) (0)%R))),
  forall (result: single),
  forall (HW_4: (no_overflow_single nearest_even (1)%R) /\
                (single_of_real_post nearest_even (1)%R result)),
  forall (result0: single),
  forall (HW_5: (no_overflow_single
                 nearest_even (Rmult (single_value x) (single_value x))) /\
                (mul_single_post nearest_even x x result0)),
  forall (result1: single),
  forall (HW_6: (no_overflow_single nearest_even (05 / 10)%R) /\
                (single_of_real_post nearest_even (05 / 10)%R result1)),
  forall (result2: single),
  forall (HW_7: (no_overflow_single
                 nearest_even (Rmult
                               (single_value result0) (single_value result1))) /\
                (mul_single_post nearest_even result0 result1 result2)),
  forall (result3: single),
  forall (HW_8: (no_overflow_single
                 nearest_even (Rminus
                               (single_value result) (single_value result2))) /\
                (sub_single_post nearest_even result result2 result3)),
  forall (r: single),
  forall (HW_9: r = result3),
  forall (HW_10: (* JC_40 *)
                 (Rle (Rabs (Rminus (single_exact r) (cos (single_value x))))
                  (1 / 16777216)%R)),
  forall (why__return: single),
  forall (HW_11: why__return = r),
  (* JC_27 *)
  (Rle (Rabs (Rminus (single_value why__return) (cos (single_value x))))
   (1 / 8388608)%R).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.jc", line 64, characters 28-42: *)
(*Why goal*) Lemma my_cos2_safety_po_1 : 
  forall (x: single),
  forall (HW_1: (* JC_25 *)
                ((* JC_23 *) (Rle (Rabs (single_value x)) (1 / 32)%R) /\
                (* JC_24 *) (eq (single_round_error x) (0)%R))),
  (no_overflow_single nearest_even (1)%R).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 17, characters 2-7: *)
(*Why goal*) Lemma my_cos2_safety_po_2 : 
  forall (x: single),
  forall (HW_1: (* JC_25 *)
                ((* JC_23 *) (Rle (Rabs (single_value x)) (1 / 32)%R) /\
                (* JC_24 *) (eq (single_round_error x) (0)%R))),
  forall (HW_4: (no_overflow_single nearest_even (1)%R)),
  forall (result: single),
  forall (HW_5: (single_of_real_post nearest_even (1)%R result)),
  (no_overflow_single nearest_even (Rmult (single_value x) (single_value x))).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.jc", line 65, characters 55-69: *)
(*Why goal*) Lemma my_cos2_safety_po_3 : 
  forall (x: single),
  forall (HW_1: (* JC_25 *)
                ((* JC_23 *) (Rle (Rabs (single_value x)) (1 / 32)%R) /\
                (* JC_24 *) (eq (single_round_error x) (0)%R))),
  forall (HW_4: (no_overflow_single nearest_even (1)%R)),
  forall (result: single),
  forall (HW_5: (single_of_real_post nearest_even (1)%R result)),
  forall (HW_6: (no_overflow_single
                 nearest_even (Rmult (single_value x) (single_value x)))),
  forall (result0: single),
  forall (HW_7: (mul_single_post nearest_even x x result0)),
  (no_overflow_single nearest_even (05 / 10)%R).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 17, characters 2-7: *)
(*Why goal*) Lemma my_cos2_safety_po_4 : 
  forall (x: single),
  forall (HW_1: (* JC_25 *)
                ((* JC_23 *) (Rle (Rabs (single_value x)) (1 / 32)%R) /\
                (* JC_24 *) (eq (single_round_error x) (0)%R))),
  forall (HW_4: (no_overflow_single nearest_even (1)%R)),
  forall (result: single),
  forall (HW_5: (single_of_real_post nearest_even (1)%R result)),
  forall (HW_6: (no_overflow_single
                 nearest_even (Rmult (single_value x) (single_value x)))),
  forall (result0: single),
  forall (HW_7: (mul_single_post nearest_even x x result0)),
  forall (HW_8: (no_overflow_single nearest_even (05 / 10)%R)),
  forall (result1: single),
  forall (HW_9: (single_of_real_post nearest_even (05 / 10)%R result1)),
  (no_overflow_single
   nearest_even (Rmult (single_value result0) (single_value result1))).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 17, characters 2-7: *)
(*Why goal*) Lemma my_cos2_safety_po_5 : 
  forall (x: single),
  forall (HW_1: (* JC_25 *)
                ((* JC_23 *) (Rle (Rabs (single_value x)) (1 / 32)%R) /\
                (* JC_24 *) (eq (single_round_error x) (0)%R))),
  forall (HW_4: (no_overflow_single nearest_even (1)%R)),
  forall (result: single),
  forall (HW_5: (single_of_real_post nearest_even (1)%R result)),
  forall (HW_6: (no_overflow_single
                 nearest_even (Rmult (single_value x) (single_value x)))),
  forall (result0: single),
  forall (HW_7: (mul_single_post nearest_even x x result0)),
  forall (HW_8: (no_overflow_single nearest_even (05 / 10)%R)),
  forall (result1: single),
  forall (HW_9: (single_of_real_post nearest_even (05 / 10)%R result1)),
  forall (HW_10: (no_overflow_single
                  nearest_even (Rmult
                                (single_value result0) (single_value result1)))),
  forall (result2: single),
  forall (HW_11: (mul_single_post nearest_even result0 result1 result2)),
  (no_overflow_single
   nearest_even (Rminus (single_value result) (single_value result2))).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 30, characters 13-57: *)
(*Why goal*) Lemma my_cos3_ensures_default_po_1 : 
  forall (x_2: single),
  forall (HW_1: true = true /\
                (* JC_47 *)
                ((* JC_45 *) (Rle (Rabs (single_exact x_2)) (1 / 32)%R) /\
                (* JC_46 *) (Rle (single_round_error x_2) (1 / 1048576)%R))),
  forall (result: single),
  forall (HW_4: (no_overflow_single nearest_even (1)%R) /\
                (single_of_real_post nearest_even (1)%R result)),
  forall (result0: single),
  forall (HW_5: (no_overflow_single
                 nearest_even (Rmult (single_value x_2) (single_value x_2))) /\
                (mul_single_post nearest_even x_2 x_2 result0)),
  forall (result1: single),
  forall (HW_6: (no_overflow_single nearest_even (05 / 10)%R) /\
                (single_of_real_post nearest_even (05 / 10)%R result1)),
  forall (result2: single),
  forall (HW_7: (no_overflow_single
                 nearest_even (Rmult
                               (single_value result0) (single_value result1))) /\
                (mul_single_post nearest_even result0 result1 result2)),
  forall (result3: single),
  forall (HW_8: (no_overflow_single
                 nearest_even (Rminus
                               (single_value result) (single_value result2))) /\
                (sub_single_post nearest_even result result2 result3)),
  forall (r_0: single),
  forall (HW_9: r_0 = result3),
  (* JC_66 *)
  (* JC_66 *)
  (Rle (Rabs (Rminus (single_exact r_0) (cos (single_exact x_2))))
   (1 / 16777216)%R).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 25, characters 12-62: *)
(*Why goal*) Lemma my_cos3_ensures_default_po_2 : 
  forall (x_2: single),
  forall (HW_1: true = true /\
                (* JC_47 *)
                ((* JC_45 *) (Rle (Rabs (single_exact x_2)) (1 / 32)%R) /\
                (* JC_46 *) (Rle (single_round_error x_2) (1 / 1048576)%R))),
  forall (result: single),
  forall (HW_4: (no_overflow_single nearest_even (1)%R) /\
                (single_of_real_post nearest_even (1)%R result)),
  forall (result0: single),
  forall (HW_5: (no_overflow_single
                 nearest_even (Rmult (single_value x_2) (single_value x_2))) /\
                (mul_single_post nearest_even x_2 x_2 result0)),
  forall (result1: single),
  forall (HW_6: (no_overflow_single nearest_even (05 / 10)%R) /\
                (single_of_real_post nearest_even (05 / 10)%R result1)),
  forall (result2: single),
  forall (HW_7: (no_overflow_single
                 nearest_even (Rmult
                               (single_value result0) (single_value result1))) /\
                (mul_single_post nearest_even result0 result1 result2)),
  forall (result3: single),
  forall (HW_8: (no_overflow_single
                 nearest_even (Rminus
                               (single_value result) (single_value result2))) /\
                (sub_single_post nearest_even result result2 result3)),
  forall (r_0: single),
  forall (HW_9: r_0 = result3),
  forall (HW_10: (* JC_66 *)
                 (Rle
                  (Rabs (Rminus (single_exact r_0) (cos (single_exact x_2))))
                  (1 / 16777216)%R)),
  forall (why__return: single),
  forall (HW_11: why__return = r_0),
  (* JC_51 *)
  (* JC_49 *)
  (* JC_49 *)
  (Rle (Rabs (Rminus (single_exact why__return) (cos (single_exact x_2))))
   (1 / 16777216)%R).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 26, characters 11-61: *)
(*Why goal*) Lemma my_cos3_ensures_default_po_3 : 
  forall (x_2: single),
  forall (HW_1: true = true /\
                (* JC_47 *)
                ((* JC_45 *) (Rle (Rabs (single_exact x_2)) (1 / 32)%R) /\
                (* JC_46 *) (Rle (single_round_error x_2) (1 / 1048576)%R))),
  forall (result: single),
  forall (HW_4: (no_overflow_single nearest_even (1)%R) /\
                (single_of_real_post nearest_even (1)%R result)),
  forall (result0: single),
  forall (HW_5: (no_overflow_single
                 nearest_even (Rmult (single_value x_2) (single_value x_2))) /\
                (mul_single_post nearest_even x_2 x_2 result0)),
  forall (result1: single),
  forall (HW_6: (no_overflow_single nearest_even (05 / 10)%R) /\
                (single_of_real_post nearest_even (05 / 10)%R result1)),
  forall (result2: single),
  forall (HW_7: (no_overflow_single
                 nearest_even (Rmult
                               (single_value result0) (single_value result1))) /\
                (mul_single_post nearest_even result0 result1 result2)),
  forall (result3: single),
  forall (HW_8: (no_overflow_single
                 nearest_even (Rminus
                               (single_value result) (single_value result2))) /\
                (sub_single_post nearest_even result result2 result3)),
  forall (r_0: single),
  forall (HW_9: r_0 = result3),
  forall (HW_10: (* JC_66 *)
                 (Rle
                  (Rabs (Rminus (single_exact r_0) (cos (single_exact x_2))))
                  (1 / 16777216)%R)),
  forall (why__return: single),
  forall (HW_11: why__return = r_0),
  (* JC_51 *)
  (* JC_50 *)
  (* JC_50 *)
  (Rle (single_round_error why__return)
   (Rplus (single_round_error x_2) (3 / 16777216)%R)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.jc", line 91, characters 30-44: *)
(*Why goal*) Lemma my_cos3_safety_po_1 : 
  forall (x_2: single),
  forall (HW_1: (* JC_47 *)
                ((* JC_45 *) (Rle (Rabs (single_exact x_2)) (1 / 32)%R) /\
                (* JC_46 *) (Rle (single_round_error x_2) (1 / 1048576)%R))),
  (no_overflow_single nearest_even (1)%R).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 29, characters 2-7: *)
(*Why goal*) Lemma my_cos3_safety_po_2 : 
  forall (x_2: single),
  forall (HW_1: (* JC_47 *)
                ((* JC_45 *) (Rle (Rabs (single_exact x_2)) (1 / 32)%R) /\
                (* JC_46 *) (Rle (single_round_error x_2) (1 / 1048576)%R))),
  forall (HW_4: (no_overflow_single nearest_even (1)%R)),
  forall (result: single),
  forall (HW_5: (single_of_real_post nearest_even (1)%R result)),
  (no_overflow_single
   nearest_even (Rmult (single_value x_2) (single_value x_2))).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.jc", line 93, characters 41-55: *)
(*Why goal*) Lemma my_cos3_safety_po_3 : 
  forall (x_2: single),
  forall (HW_1: (* JC_47 *)
                ((* JC_45 *) (Rle (Rabs (single_exact x_2)) (1 / 32)%R) /\
                (* JC_46 *) (Rle (single_round_error x_2) (1 / 1048576)%R))),
  forall (HW_4: (no_overflow_single nearest_even (1)%R)),
  forall (result: single),
  forall (HW_5: (single_of_real_post nearest_even (1)%R result)),
  forall (HW_6: (no_overflow_single
                 nearest_even (Rmult (single_value x_2) (single_value x_2)))),
  forall (result0: single),
  forall (HW_7: (mul_single_post nearest_even x_2 x_2 result0)),
  (no_overflow_single nearest_even (05 / 10)%R).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 29, characters 2-7: *)
(*Why goal*) Lemma my_cos3_safety_po_4 : 
  forall (x_2: single),
  forall (HW_1: (* JC_47 *)
                ((* JC_45 *) (Rle (Rabs (single_exact x_2)) (1 / 32)%R) /\
                (* JC_46 *) (Rle (single_round_error x_2) (1 / 1048576)%R))),
  forall (HW_4: (no_overflow_single nearest_even (1)%R)),
  forall (result: single),
  forall (HW_5: (single_of_real_post nearest_even (1)%R result)),
  forall (HW_6: (no_overflow_single
                 nearest_even (Rmult (single_value x_2) (single_value x_2)))),
  forall (result0: single),
  forall (HW_7: (mul_single_post nearest_even x_2 x_2 result0)),
  forall (HW_8: (no_overflow_single nearest_even (05 / 10)%R)),
  forall (result1: single),
  forall (HW_9: (single_of_real_post nearest_even (05 / 10)%R result1)),
  (no_overflow_single
   nearest_even (Rmult (single_value result0) (single_value result1))).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 29, characters 2-7: *)
(*Why goal*) Lemma my_cos3_safety_po_5 : 
  forall (x_2: single),
  forall (HW_1: (* JC_47 *)
                ((* JC_45 *) (Rle (Rabs (single_exact x_2)) (1 / 32)%R) /\
                (* JC_46 *) (Rle (single_round_error x_2) (1 / 1048576)%R))),
  forall (HW_4: (no_overflow_single nearest_even (1)%R)),
  forall (result: single),
  forall (HW_5: (single_of_real_post nearest_even (1)%R result)),
  forall (HW_6: (no_overflow_single
                 nearest_even (Rmult (single_value x_2) (single_value x_2)))),
  forall (result0: single),
  forall (HW_7: (mul_single_post nearest_even x_2 x_2 result0)),
  forall (HW_8: (no_overflow_single nearest_even (05 / 10)%R)),
  forall (result1: single),
  forall (HW_9: (single_of_real_post nearest_even (05 / 10)%R result1)),
  forall (HW_10: (no_overflow_single
                  nearest_even (Rmult
                                (single_value result0) (single_value result1)))),
  forall (result2: single),
  forall (HW_11: (mul_single_post nearest_even result0 result1 result2)),
  (no_overflow_single
   nearest_even (Rminus (single_value result) (single_value result2))).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 38, characters 13-55: *)
(*Why goal*) Lemma my_cos4_ensures_default_po_1 : 
  forall (x_0: single),
  forall (HW_1: true = true /\
                (* JC_69 *) (Rle (Rabs (single_value x_0)) (007 / 100)%R)),
  (* JC_81 *)
  (* JC_81 *)
  (Rle
   (Rabs
    (Rminus
     (Rminus
      (1)%R (Rmult (Rmult (single_value x_0) (single_value x_0)) (05 / 10)%R)) (
     cos (single_value x_0))))
   (15 / 16777216)%R).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 35, characters 12-46: *)
(*Why goal*) Lemma my_cos4_ensures_default_po_2 : 
  forall (x_0: single),
  forall (HW_1: true = true /\
                (* JC_69 *) (Rle (Rabs (single_value x_0)) (007 / 100)%R)),
  forall (HW_4: (* JC_81 *)
                (Rle
                 (Rabs
                  (Rminus
                   (Rminus
                    (1)%R (Rmult
                           (Rmult (single_value x_0) (single_value x_0)) (05 / 10)%R)) (
                   cos (single_value x_0))))
                 (15 / 16777216)%R)),
  forall (result: single),
  forall (HW_5: (no_overflow_single nearest_even (1)%R) /\
                (single_of_real_post nearest_even (1)%R result)),
  forall (result0: single),
  forall (HW_6: (no_overflow_single
                 nearest_even (Rmult (single_value x_0) (single_value x_0))) /\
                (mul_single_post nearest_even x_0 x_0 result0)),
  forall (result1: single),
  forall (HW_7: (no_overflow_single nearest_even (05 / 10)%R) /\
                (single_of_real_post nearest_even (05 / 10)%R result1)),
  forall (result2: single),
  forall (HW_8: (no_overflow_single
                 nearest_even (Rmult
                               (single_value result0) (single_value result1))) /\
                (mul_single_post nearest_even result0 result1 result2)),
  forall (result3: single),
  forall (HW_9: (no_overflow_single
                 nearest_even (Rminus
                               (single_value result) (single_value result2))) /\
                (sub_single_post nearest_even result result2 result3)),
  forall (__retres_0: single),
  forall (HW_10: __retres_0 = result3),
  forall (why__return: single),
  forall (HW_11: why__return = __retres_0),
  (* JC_71 *)
  (Rle (Rabs (Rminus (single_value why__return) (cos (single_value x_0))))
   (1 / 1048576)%R).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.jc", line 125, characters 37-51: *)
(*Why goal*) Lemma my_cos4_safety_po_1 : 
  forall (x_0: single),
  forall (HW_1: (* JC_69 *) (Rle (Rabs (single_value x_0)) (007 / 100)%R)),
  forall (HW_4: (* JC_75 *)
                (Rle
                 (Rabs
                  (Rminus
                   (Rminus
                    (1)%R (Rmult
                           (Rmult (single_value x_0) (single_value x_0)) (05 / 10)%R)) (
                   cos (single_value x_0))))
                 (15 / 16777216)%R)),
  (no_overflow_single nearest_even (1)%R).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 39, characters 2-8: *)
(*Why goal*) Lemma my_cos4_safety_po_2 : 
  forall (x_0: single),
  forall (HW_1: (* JC_69 *) (Rle (Rabs (single_value x_0)) (007 / 100)%R)),
  forall (HW_4: (* JC_75 *)
                (Rle
                 (Rabs
                  (Rminus
                   (Rminus
                    (1)%R (Rmult
                           (Rmult (single_value x_0) (single_value x_0)) (05 / 10)%R)) (
                   cos (single_value x_0))))
                 (15 / 16777216)%R)),
  forall (HW_5: (no_overflow_single nearest_even (1)%R)),
  forall (result: single),
  forall (HW_6: (single_of_real_post nearest_even (1)%R result)),
  (no_overflow_single
   nearest_even (Rmult (single_value x_0) (single_value x_0))).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.jc", line 127, characters 48-62: *)
(*Why goal*) Lemma my_cos4_safety_po_3 : 
  forall (x_0: single),
  forall (HW_1: (* JC_69 *) (Rle (Rabs (single_value x_0)) (007 / 100)%R)),
  forall (HW_4: (* JC_75 *)
                (Rle
                 (Rabs
                  (Rminus
                   (Rminus
                    (1)%R (Rmult
                           (Rmult (single_value x_0) (single_value x_0)) (05 / 10)%R)) (
                   cos (single_value x_0))))
                 (15 / 16777216)%R)),
  forall (HW_5: (no_overflow_single nearest_even (1)%R)),
  forall (result: single),
  forall (HW_6: (single_of_real_post nearest_even (1)%R result)),
  forall (HW_7: (no_overflow_single
                 nearest_even (Rmult (single_value x_0) (single_value x_0)))),
  forall (result0: single),
  forall (HW_8: (mul_single_post nearest_even x_0 x_0 result0)),
  (no_overflow_single nearest_even (05 / 10)%R).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 39, characters 2-8: *)
(*Why goal*) Lemma my_cos4_safety_po_4 : 
  forall (x_0: single),
  forall (HW_1: (* JC_69 *) (Rle (Rabs (single_value x_0)) (007 / 100)%R)),
  forall (HW_4: (* JC_75 *)
                (Rle
                 (Rabs
                  (Rminus
                   (Rminus
                    (1)%R (Rmult
                           (Rmult (single_value x_0) (single_value x_0)) (05 / 10)%R)) (
                   cos (single_value x_0))))
                 (15 / 16777216)%R)),
  forall (HW_5: (no_overflow_single nearest_even (1)%R)),
  forall (result: single),
  forall (HW_6: (single_of_real_post nearest_even (1)%R result)),
  forall (HW_7: (no_overflow_single
                 nearest_even (Rmult (single_value x_0) (single_value x_0)))),
  forall (result0: single),
  forall (HW_8: (mul_single_post nearest_even x_0 x_0 result0)),
  forall (HW_9: (no_overflow_single nearest_even (05 / 10)%R)),
  forall (result1: single),
  forall (HW_10: (single_of_real_post nearest_even (05 / 10)%R result1)),
  (no_overflow_single
   nearest_even (Rmult (single_value result0) (single_value result1))).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "my_cosine.c", line 39, characters 2-8: *)
(*Why goal*) Lemma my_cos4_safety_po_5 : 
  forall (x_0: single),
  forall (HW_1: (* JC_69 *) (Rle (Rabs (single_value x_0)) (007 / 100)%R)),
  forall (HW_4: (* JC_75 *)
                (Rle
                 (Rabs
                  (Rminus
                   (Rminus
                    (1)%R (Rmult
                           (Rmult (single_value x_0) (single_value x_0)) (05 / 10)%R)) (
                   cos (single_value x_0))))
                 (15 / 16777216)%R)),
  forall (HW_5: (no_overflow_single nearest_even (1)%R)),
  forall (result: single),
  forall (HW_6: (single_of_real_post nearest_even (1)%R result)),
  forall (HW_7: (no_overflow_single
                 nearest_even (Rmult (single_value x_0) (single_value x_0)))),
  forall (result0: single),
  forall (HW_8: (mul_single_post nearest_even x_0 x_0 result0)),
  forall (HW_9: (no_overflow_single nearest_even (05 / 10)%R)),
  forall (result1: single),
  forall (HW_10: (single_of_real_post nearest_even (05 / 10)%R result1)),
  forall (HW_11: (no_overflow_single
                  nearest_even (Rmult
                                (single_value result0) (single_value result1)))),
  forall (result2: single),
  forall (HW_12: (mul_single_post nearest_even result0 result1 result2)),
  (no_overflow_single
   nearest_even (Rminus (single_value result) (single_value result2))).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

