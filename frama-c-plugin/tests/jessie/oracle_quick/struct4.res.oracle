rm -f struct4.jc
../../bin/toplevel.opt -jessie-analysis  -jessie-gen-only struct4.c
Parsing
Cleaning unused parts
Symbolic link
Starting semantical analysis
cat struct4.jc
# IntModel = bounded
# InvariantPolicy = Arguments

type _bool = 0..1

type int8 = -128..127

type uint8 = 0..255

type int32 = -2147483648..2147483647

type uint32 = 0..4294967295

type int16 = -32768..32767

type uint16 = 0..65535

type int64 = -9223372036854775808..9223372036854775807

type uint64 = 0..18446744073709551615

tag char_P = {
  int8 char_M;
}

type char_P = [char_P]

tag void_P = {
  unit void_M;
}

type void_P = [void_P]

invariant valid_aaa :
((\offset_min(aaa) <= 0) && (\offset_max(aaa) >= 0))

tag A = {
  uint8 v;
}

type A = [A]

tag S = {
  A[0] a; 
  A[..] b; 
  A[0..2] c; 
  S[..] s; 
  uint8 i;
}

type S = [S]

logic int32 strlen{L}(char_P[..] s) reads s.char_M;

axiom strlen_def1{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    (((0 <= i) && (i < strlen{L}(s))) ==> ((s + i).char_M != 0))))

axiom strlen_def2{L} :
(\forall char_P[..] s;
  ((s + strlen{L}(s)).char_M == 0))

axiom strlen_not_zero{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    ((((0 <= i) && (i <= strlen{L}(s))) && ((s + i).char_M != 0)) ==>
      (i < strlen{L}(s)))))

axiom strlen_zero{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    ((((0 <= i) && (i <= strlen{L}(s))) && ((s + i).char_M == 0)) ==>
      (i == strlen{L}(s)))))

axiom strlen_sup{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    (((0 <= i) && ((s + i).char_M == 0)) ==>
      ((0 <= strlen{L}(s)) && (strlen{L}(s) <= i)))))

axiom strlen_shift{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    (((0 <= i) && (i <= strlen{L}(s))) ==>
      (strlen{L}((s + i)) == (strlen{L}(s) - i)))))

axiom strlen_create{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    (((0 <= i) && ((s + i).char_M == 0)) ==>
      ((0 <= strlen{L}(s)) && (strlen{L}(s) <= i)))))

axiom strlen_create2{L} :
(\forall char_P[..] s;
  (\forall int32 i;
    (\forall int32 k;
      (((k <= i) && ((s + i).char_M == 0)) ==>
        ((0 <= strlen{L}((s + k))) && (strlen{L}((s + k)) <= (i - k)))))))

S[0] aaa;

int32 f(S[0] v_x)
  requires (C_43 : ((C_44 : (\offset_min(v_x.s) <= 0)) &&
                     (C_45 : (\offset_max(v_x.s) >= 0))));
{  
   (var S[0] x);
   
   (var int32 __retres);
   
   {  (C_2 : (x = (C_1 : (new S[1]))));
      
      {  (C_7 : ((C_6 : (C_5 : x.a).v) = (C_4 : (C_3 : v_x.a).v)));
         (C_10 : ((C_9 : x.b) = (C_8 : v_x.b)));
         (C_15 : ((C_14 : ((C_13 : x.c) + 0).v) = (C_12 : ((C_11 : v_x.c) +
                                                            0).v)));
         (C_20 : ((C_19 : ((C_18 : x.c) + 1).v) = (C_17 : ((C_16 : v_x.c) +
                                                            1).v)));
         (C_25 : ((C_24 : ((C_23 : x.c) + 2).v) = (C_22 : ((C_21 : v_x.c) +
                                                            2).v)));
         (C_28 : ((C_27 : x.s) = (C_26 : v_x.s)));
         (C_31 : ((C_30 : x.i) = (C_29 : v_x.i)))
      };
      (C_35 : ((C_34 : (C_33 : (C_32 : x.s).a).v) = 0));
      (C_37 : ((C_36 : aaa.i) = 97));
      (C_41 : (__retres = (C_40 : ((C_39 : ((C_38 : x.c) + 1).v) :> int32))));
      
      {  (C_42 : (free(x)));
         
         (return __retres)
      }
   }
}
