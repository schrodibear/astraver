(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require Import ZOdiv.
Require BuiltIn.
Require int.Int.
Require int.Abs.
Require int.ComputerDivision.
Require Jessie_memory_model.

Axiom usObject : Type.
Parameter usObject_WhyType : WhyType usObject.
Existing Instance usObject_WhyType.

Axiom interface : Type.
Parameter interface_WhyType : WhyType interface.
Existing Instance interface_WhyType.

Parameter usException_tag: (Jessie_memory_model.tag_id usObject).

Parameter usObject_tag: (Jessie_memory_model.tag_id usObject).

Axiom usException_parenttag_Object : (Jessie_memory_model.parenttag usException_tag
  usObject_tag).

Parameter usGcd_tag: (Jessie_memory_model.tag_id usObject).

Axiom usGcd_parenttag_Object : (Jessie_memory_model.parenttag usGcd_tag
  usObject_tag).

(* Why3 assumption *)
Definition usNon_null_Object(x_0:(Jessie_memory_model.pointer usObject))
  (usObject_alloc_table:(Jessie_memory_model.alloc_table usObject)): Prop :=
  (0%Z <= (Jessie_memory_model.offset_max usObject_alloc_table x_0))%Z.

Axiom usObject_int : ((Jessie_memory_model.int_of_tag usObject_tag) = 1%Z).

Parameter usObject_of_pointer_address: (Jessie_memory_model.pointer unit) ->
  (Jessie_memory_model.pointer usObject).

Axiom usObject_of_pointer_address_of_pointer_addr : forall (p:(Jessie_memory_model.pointer
  usObject)),
  (p = (usObject_of_pointer_address (Jessie_memory_model.pointer_address p))).

Axiom usObject_parenttag_bottom : (Jessie_memory_model.parenttag usObject_tag
  (Jessie_memory_model.bottom_tag :(Jessie_memory_model.tag_id usObject))).

Axiom usObject_tags : forall (x:(Jessie_memory_model.pointer usObject)),
  forall (usObject_tag_table:(Jessie_memory_model.tag_table usObject)),
  (Jessie_memory_model.instanceof usObject_tag_table x usObject_tag).

Parameter usString_tag: (Jessie_memory_model.tag_id usObject).

Axiom usString_parenttag_Object : (Jessie_memory_model.parenttag usString_tag
  usObject_tag).

Parameter usThrowable_tag: (Jessie_memory_model.tag_id usObject).

Axiom usThrowable_parenttag_Object : (Jessie_memory_model.parenttag usThrowable_tag
  usObject_tag).

(* Why3 assumption *)
Definition divides(x_5:Z) (y_5:Z): Prop := exists q:Z, (y_5 = (q * x_5)%Z).

Parameter interface_tag: (Jessie_memory_model.tag_id interface).

Axiom interface_int : ((Jessie_memory_model.int_of_tag interface_tag) = 1%Z).

Parameter interface_of_pointer_address: (Jessie_memory_model.pointer unit) ->
  (Jessie_memory_model.pointer interface).

Axiom interface_of_pointer_address_of_pointer_addr : forall (p:(Jessie_memory_model.pointer
  interface)),
  (p = (interface_of_pointer_address (Jessie_memory_model.pointer_address p))).

Axiom interface_parenttag_bottom : (Jessie_memory_model.parenttag interface_tag
  (Jessie_memory_model.bottom_tag :(Jessie_memory_model.tag_id interface))).

Axiom interface_tags : forall (x:(Jessie_memory_model.pointer interface)),
  forall (interface_tag_table:(Jessie_memory_model.tag_table interface)),
  (Jessie_memory_model.instanceof interface_tag_table x interface_tag).

(* Why3 assumption *)
Definition isGcd(a:Z) (b:Z) (d:Z): Prop := (divides d a) /\ ((divides d b) /\
  forall (z_4:Z), ((divides z_4 a) /\ (divides z_4 b)) -> (divides z_4 d)).

(* Why3 assumption *)
Definition left_valid_struct_Object(p:(Jessie_memory_model.pointer usObject))
  (a:Z) (usObject_alloc_table:(Jessie_memory_model.alloc_table
  usObject)): Prop := ((Jessie_memory_model.offset_min usObject_alloc_table
  p) <= a)%Z.

(* Why3 assumption *)
Definition left_valid_struct_interface(p:(Jessie_memory_model.pointer
  interface)) (a:Z) (interface_alloc_table:(Jessie_memory_model.alloc_table
  interface)): Prop := ((Jessie_memory_model.offset_min interface_alloc_table
  p) <= a)%Z.

Axiom pointer_addr_of_Object_of_pointer_address : forall (p:(Jessie_memory_model.pointer
  unit)),
  (p = (Jessie_memory_model.pointer_address (usObject_of_pointer_address p))).

Axiom pointer_addr_of_interface_of_pointer_address : forall (p:(Jessie_memory_model.pointer
  unit)),
  (p = (Jessie_memory_model.pointer_address (interface_of_pointer_address p))).

(* Why3 assumption *)
Definition right_valid_struct_Object(p:(Jessie_memory_model.pointer
  usObject)) (b:Z) (usObject_alloc_table:(Jessie_memory_model.alloc_table
  usObject)): Prop :=
  (b <= (Jessie_memory_model.offset_max usObject_alloc_table p))%Z.

(* Why3 assumption *)
Definition right_valid_struct_interface(p:(Jessie_memory_model.pointer
  interface)) (b:Z) (interface_alloc_table:(Jessie_memory_model.alloc_table
  interface)): Prop :=
  (b <= (Jessie_memory_model.offset_max interface_alloc_table p))%Z.

(* Why3 assumption *)
Definition strict_valid_root_Object(p:(Jessie_memory_model.pointer usObject))
  (a:Z) (b:Z) (usObject_alloc_table:(Jessie_memory_model.alloc_table
  usObject)): Prop := ((Jessie_memory_model.offset_min usObject_alloc_table
  p) = a) /\ ((Jessie_memory_model.offset_max usObject_alloc_table p) = b).

(* Why3 assumption *)
Definition strict_valid_root_interface(p:(Jessie_memory_model.pointer
  interface)) (a:Z) (b:Z)
  (interface_alloc_table:(Jessie_memory_model.alloc_table
  interface)): Prop := ((Jessie_memory_model.offset_min interface_alloc_table
  p) = a) /\ ((Jessie_memory_model.offset_max interface_alloc_table p) = b).

(* Why3 assumption *)
Definition strict_valid_struct_Object(p:(Jessie_memory_model.pointer
  usObject)) (a:Z) (b:Z)
  (usObject_alloc_table:(Jessie_memory_model.alloc_table usObject)): Prop :=
  ((Jessie_memory_model.offset_min usObject_alloc_table p) = a) /\
  ((Jessie_memory_model.offset_max usObject_alloc_table p) = b).

(* Why3 assumption *)
Definition strict_valid_struct_interface(p:(Jessie_memory_model.pointer
  interface)) (a:Z) (b:Z)
  (interface_alloc_table:(Jessie_memory_model.alloc_table
  interface)): Prop := ((Jessie_memory_model.offset_min interface_alloc_table
  p) = a) /\ ((Jessie_memory_model.offset_max interface_alloc_table p) = b).

(* Why3 assumption *)
Definition valid_root_Object(p:(Jessie_memory_model.pointer usObject)) (a:Z)
  (b:Z) (usObject_alloc_table:(Jessie_memory_model.alloc_table
  usObject)): Prop := ((Jessie_memory_model.offset_min usObject_alloc_table
  p) <= a)%Z /\ (b <= (Jessie_memory_model.offset_max usObject_alloc_table
  p))%Z.

(* Why3 assumption *)
Definition valid_root_interface(p:(Jessie_memory_model.pointer interface))
  (a:Z) (b:Z) (interface_alloc_table:(Jessie_memory_model.alloc_table
  interface)): Prop := ((Jessie_memory_model.offset_min interface_alloc_table
  p) <= a)%Z /\ (b <= (Jessie_memory_model.offset_max interface_alloc_table
  p))%Z.

(* Why3 assumption *)
Definition valid_struct_Object(p:(Jessie_memory_model.pointer usObject))
  (a:Z) (b:Z) (usObject_alloc_table:(Jessie_memory_model.alloc_table
  usObject)): Prop := ((Jessie_memory_model.offset_min usObject_alloc_table
  p) <= a)%Z /\ (b <= (Jessie_memory_model.offset_max usObject_alloc_table
  p))%Z.

(* Why3 assumption *)
Definition valid_struct_interface(p:(Jessie_memory_model.pointer interface))
  (a:Z) (b:Z) (interface_alloc_table:(Jessie_memory_model.alloc_table
  interface)): Prop := ((Jessie_memory_model.offset_min interface_alloc_table
  p) <= a)%Z /\ (b <= (Jessie_memory_model.offset_max interface_alloc_table
  p))%Z.

Axiom distr_right : forall (x_2:Z), forall (y:Z), forall (z:Z),
  ((x_2 * (y + z)%Z)%Z = ((x_2 * y)%Z + (x_2 * z)%Z)%Z).

Axiom distr_left : forall (x_0_0:Z), forall (y_0:Z), forall (z_0:Z),
  (((x_0_0 + y_0)%Z * z_0)%Z = ((x_0_0 * z_0)%Z + (y_0 * z_0)%Z)%Z).

Axiom distr_right_minus : forall (x_1_0:Z), forall (y_1:Z), forall (z_1:Z),
  ((x_1_0 * (y_1 - z_1)%Z)%Z = ((x_1_0 * y_1)%Z - (x_1_0 * z_1)%Z)%Z).

Axiom distr_left_minus : forall (x_2_0:Z), forall (y_2:Z), forall (z_2:Z),
  (((x_2_0 - y_2)%Z * z_2)%Z = ((x_2_0 * z_2)%Z - (y_2 * z_2)%Z)%Z).

Axiom mul_comm : forall (x_3:Z), forall (y_3:Z),
  ((x_3 * y_3)%Z = (y_3 * x_3)%Z).

Axiom mul_assoc : forall (x_4:Z), forall (y_4:Z), forall (z_3:Z),
  ((x_4 * (y_4 * z_3)%Z)%Z = ((x_4 * y_4)%Z * z_3)%Z).

Axiom div_mod_property : forall (x_6:Z), forall (y_6:Z), ((0%Z <= x_6)%Z /\
  (0%Z < y_6)%Z) -> ((ZOmod x_6 y_6) = (x_6 - (y_6 * (ZOdiv x_6 y_6))%Z)%Z).

Axiom mod_property : forall (x_7:Z), forall (y_7:Z), ((0%Z <= x_7)%Z /\
  (0%Z < y_7)%Z) -> ((0%Z <= (ZOmod x_7 y_7))%Z /\
  ((ZOmod x_7 y_7) < y_7)%Z).


(* Why3 goal *)
Theorem gcd_zero : forall (a_0:Z), (isGcd a_0 0%Z a_0).
(* YOU MAY EDIT THE PROOF BELOW *)
intro a; split; unfold divides.
exists 1%Z; auto with zarith.
split.
exists 0%Z; auto with zarith.
intros x (H,_); apply H.
Qed.


