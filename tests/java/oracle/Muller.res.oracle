========== file tests/java/Muller.java ==========
/**************************************************************************/
/*                                                                        */
/*  The Why platform for program certification                            */
/*                                                                        */
/*  Copyright (C) 2002-2011                                               */
/*                                                                        */
/*    Jean-Christophe FILLIATRE, CNRS & Univ. Paris-sud 11                */
/*    Claude MARCHE, INRIA & Univ. Paris-sud 11                           */
/*    Yannick MOY, Univ. Paris-sud 11                                     */
/*    Romain BARDOU, Univ. Paris-sud 11                                   */
/*                                                                        */
/*  Secondary contributors:                                               */
/*                                                                        */
/*    Thierry HUBERT, Univ. Paris-sud 11  (former Caduceus front-end)     */
/*    Nicolas ROUSSET, Univ. Paris-sud 11 (on Jessie & Krakatoa)          */
/*    Ali AYAD, CNRS & CEA Saclay         (floating-point support)        */
/*    Sylvie BOLDO, INRIA                 (floating-point support)        */
/*    Jean-Francois COUCHOT, INRIA        (sort encodings, hyps pruning)  */
/*    Mehdi DOGGUY, Univ. Paris-sud 11    (Why GUI)                       */
/*                                                                        */
/*  This software is free software; you can redistribute it and/or        */
/*  modify it under the terms of the GNU Lesser General Public            */
/*  License version 2.1, with the special exception on linking            */
/*  described in file LICENSE.                                            */
/*                                                                        */
/*  This software is distributed in the hope that it will be useful,      */
/*  but WITHOUT ANY WARRANTY; without even the implied warranty of        */
/*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.                  */
/*                                                                        */
/**************************************************************************/

//@+ SeparationPolicy = Regions

/*@ axiomatic NumOfPos {
  @  logic integer num_of_pos{L}(integer i,integer j,int t[]);
  @  axiom num_of_pos_empty{L} :
  @   \forall integer i j, int t[];
  @    i >= j ==> num_of_pos(i,j,t) == 0;
  @  axiom num_of_pos_true_case{L} :
  @   \forall integer i j k, int t[];
  @       i < j && t[j-1] > 0 ==>
  @         num_of_pos(i,j,t) == num_of_pos(i,j-1,t) + 1;
  @  axiom num_of_pos_false_case{L} :
  @   \forall integer i j k, int t[];
  @       i < j && ! (t[j-1] > 0) ==>
  @         num_of_pos(i,j,t) == num_of_pos(i,j-1,t);
  @ }
  @*/


/*@ lemma num_of_pos_non_negative{L} :
  @   \forall integer i j, int t[]; 0 <= num_of_pos(i,j,t);
  @*/

/*@ lemma num_of_pos_additive{L} :
  @   \forall integer i j k, int t[]; i <= j <= k ==>
  @       num_of_pos(i,k,t) == num_of_pos(i,j,t) + num_of_pos(j,k,t);
  @*/

/*@ lemma num_of_pos_increasing{L} :
  @   \forall integer i j k, int t[];
  @       j <= k ==> num_of_pos(i,j,t) <= num_of_pos(i,k,t);
  @*/

/*@ lemma num_of_pos_strictly_increasing{L} :
  @   \forall integer i n, int t[];
  @       0 <= i < n && t[i] > 0 ==>
  @       num_of_pos(0,i,t) < num_of_pos(0,n,t);
  @*/

public class Muller {

    /*@ requires t != null;
      @*/
    public static int[] m(int t[]) {
	int count = 0;

	/*@ loop_invariant
	  @    0 <= i <= t.length &&
	  @    0 <= count <= i &&
	  @    count == num_of_pos(0,i,t) ;
	  @ loop_variant t.length - i;
	  @*/
	for (int i=0 ; i < t.length; i++) if (t[i] > 0) count++;

	int u[] = new int[count];
	count = 0;

	/*@ loop_invariant
	  @    0 <= i <= t.length &&
	  @    0 <= count <= i &&
	  @    count == num_of_pos(0,i,t);
	  @ loop_variant t.length - i;
	  @*/
	for (int i=0 ; i < t.length; i++) {
	    if (t[i] > 0) u[count++] = t[i];
	}
	return u;
    }

}

/*
Local Variables:
compile-command: "make Muller.why3ml"
End:
*/
========== krakatoa execution ==========
Parsing OK.
Typing OK.
Generating JC function Muller_m for method Muller.m
Generating JC function cons_Muller for constructor Muller
Done.
========== file tests/java/Muller.jc ==========
# InvariantPolicy = Arguments
# TerminationPolicy = always
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = None

type byte = -128..127

type short = -32768..32767

type int32 = -2147483648..2147483647

type long = -9223372036854775808..9223372036854775807

type char = 0..65535

predicate Non_null_intM{Here}(intM[0..] x) =
(\offset_max(x) >= -1)

predicate Non_null_Object{Here}(Object[0..] x) =
(\offset_max(x) >= 0)

String[0..] any_string()
;

tag Object = {
}

tag String = Object with {
}

tag Throwable = Object with {
}

tag Exception = Object with {
}

tag Muller = Object with {
}

type Object = [Object]

type interface = [interface]

tag interface = {
}

tag intM = Object with {
  int32 intP;
}

boolean non_null_intM(! intM[0..] x)
behavior default:
  assigns \nothing;
  ensures (if \result then (\offset_max(x) >= -1) else (x == null));
;

integer java_array_length_intM(! intM[0..-1] x)
behavior default:
  assigns \nothing;
  ensures ((\result <= 2147483647) &&
            ((\result >= 0) && (\result == (\offset_max(x) + 1))));
;

boolean non_null_Object(! Object[0..] x)
behavior normal:
  ensures (if \result then (\offset_max(x) == 0) else (x == null));
;

axiomatic NumOfPos {

  logic integer num_of_pos{L}(integer i, integer j, intM[0..] t)
   
  axiom num_of_pos_false_case{L} :
  (\forall integer i_2;
    (\forall integer j_2;
      (\forall integer k_0;
        (\forall intM[0..] t_2;
          (((i_2 < j_2) && (! ((t_2 + (j_2 - 1)).intP > 0))) ==>
            (num_of_pos{L}(i_2, j_2, t_2) ==
              num_of_pos{L}(i_2, (j_2 - 1), t_2)))))))
   
  axiom num_of_pos_true_case{L} :
  (\forall integer i_1;
    (\forall integer j_1;
      (\forall integer k;
        (\forall intM[0..] t_1;
          (((i_1 < j_1) && ((t_1 + (j_1 - 1)).intP > 0)) ==>
            (num_of_pos{L}(i_1, j_1, t_1) ==
              (num_of_pos{L}(i_1, (j_1 - 1), t_1) + 1)))))))
   
  axiom num_of_pos_empty{L} :
  (\forall integer i_0;
    (\forall integer j_0;
      (\forall intM[0..] t_0;
        ((i_0 >= j_0) ==> (num_of_pos{L}(i_0, j_0, t_0) == 0)))))
  
}

lemma num_of_pos_non_negative{L} :
(\forall integer i_3;
  (\forall integer j_3;
    (\forall intM[0..] t_3;
      (0 <= num_of_pos{L}(i_3, j_3, t_3)))))

lemma num_of_pos_additive{L} :
(\forall integer i_4;
  (\forall integer j_4;
    (\forall integer k_1;
      (\forall intM[0..] t_4;
        (((i_4 <= j_4) && (j_4 <= k_1)) ==>
          (num_of_pos{L}(i_4, k_1, t_4) ==
            (num_of_pos{L}(i_4, j_4, t_4) + num_of_pos{L}(j_4, k_1, t_4))))))))

lemma num_of_pos_increasing{L} :
(\forall integer i_5;
  (\forall integer j_5;
    (\forall integer k_2;
      (\forall intM[0..] t_5;
        ((j_5 <= k_2) ==>
          (num_of_pos{L}(i_5, j_5, t_5) <= num_of_pos{L}(i_5, k_2, t_5)))))))

lemma num_of_pos_strictly_increasing{L} :
(\forall integer i_6;
  (\forall integer n;
    (\forall intM[0..] t_6;
      ((((0 <= i_6) && (i_6 < n)) && ((t_6 + i_6).intP > 0)) ==>
        (num_of_pos{L}(0, i_6, t_6) < num_of_pos{L}(0, n, t_6))))))

exception Throwable of Throwable[0..]

exception Exception of Exception[0..]

intM[0..] Muller_m(intM[0..] t_7)
  requires (K_1 : Non_null_intM(t_7));
{  
   {  
      (var int32 count = (K_39 : 0));
      
      {  
         {  
            {  
               (var int32 i_7 = (K_2 : 0));
               
               loop 
               behavior default:
                 invariant (K_11 : ((K_10 : ((K_9 : ((K_8 : (0 <= i_7)) &&
                                                      (K_7 : (i_7 <=
                                                               (\offset_max(t_7) +
                                                                 1))))) &&
                                              (K_6 : ((K_5 : (0 <= count)) &&
                                                       (K_4 : (count <= i_7)))))) &&
                                     (K_3 : (count ==
                                              num_of_pos{Here}(0, i_7, t_7)))));
               
               variant (K_12 : ((\offset_max(t_7) + 1) - i_7));
               for ( ; (K_18 : (i_7 < (K_17 : java_array_length_intM(t_7)))) ; 
               (K_16 : (i_7 ++)))
               {  (if (K_15 : ((K_14 : (t_7 + i_7).intP) > 0)) then (K_13 : 
                                                                    (count ++)) else ())
               }
            }
         };
         
         {  
            (var intM[0..] u = (K_38 : (new intM[count])));
            
            {  (count = 0);
               
               {  
                  {  
                     (var int32 i_8 = (K_19 : 0));
                     
                     loop 
                     behavior default:
                       invariant (K_28 : ((K_27 : ((K_26 : ((K_25 : (0 <=
                                                                    i_8)) &&
                                                             (K_24 : 
                                                             (i_8 <=
                                                               (\offset_max(t_7) +
                                                                 1))))) &&
                                                    (K_23 : ((K_22 : 
                                                             (0 <=
                                                               count)) &&
                                                              (K_21 : 
                                                              (count <=
                                                                i_8)))))) &&
                                           (K_20 : (count ==
                                                     num_of_pos{Here}(
                                                     0, i_8, t_7)))));
                     
                     variant (K_29 : ((\offset_max(t_7) + 1) - i_8));
                     for ( ; (K_37 : (i_8 <
                                       (K_36 : java_array_length_intM(t_7)))) ; 
                     (K_35 : (i_8 ++)))
                     {  (if (K_34 : ((K_33 : (t_7 + i_8).intP) > 0)) then 
                        (K_32 : ((u + (K_30 : (count ++))).intP = (K_31 : 
                                                                  (t_7 +
                                                                    i_8).intP))) else ())
                     }
                  }
               };
               
               (return u)
            }
         }
      }
   }
}

unit cons_Muller(! Muller[0] this_0){()}

/*
Local Variables:
mode: java
compile-command: "jessie -why-opt -split-user-conj -locs tests/java/Muller.jloc tests/java/Muller.jc && make -f tests/java/Muller.makefile gui"
End:
*/
========== file tests/java/Muller.jloc ==========
[K_10]
file = "HOME/tests/java/Muller.java"
line = 79
begin = 8
end = 53

[K_11]
file = "HOME/tests/java/Muller.java"
line = 79
begin = 8
end = 91

[K_12]
file = "HOME/tests/java/Muller.java"
line = 82
begin = 18
end = 30

[K_13]
file = "HOME/tests/java/Muller.java"
line = 84
begin = 49
end = 56

[K_14]
file = "HOME/tests/java/Muller.java"
line = 84
begin = 39
end = 43

[K_15]
file = "HOME/tests/java/Muller.java"
line = 84
begin = 39
end = 47

[K_16]
file = "HOME/tests/java/Muller.java"
line = 84
begin = 30
end = 33

[K_17]
file = "HOME/tests/java/Muller.java"
line = 84
begin = 20
end = 28

[K_18]
file = "HOME/tests/java/Muller.java"
line = 84
begin = 16
end = 28

[Muller_m]
name = "Method m"
file = "HOME/tests/java/Muller.java"
line = 75
begin = 24
end = 25

[K_19]
file = "HOME/tests/java/Muller.java"
line = 95
begin = 12
end = 13

[K_20]
file = "HOME/tests/java/Muller.java"
line = 92
begin = 8
end = 34

[K_21]
file = "HOME/tests/java/Muller.java"
line = 91
begin = 13
end = 23

[K_22]
file = "HOME/tests/java/Muller.java"
line = 91
begin = 8
end = 18

[num_of_pos_non_negative]
name = "Lemma num_of_pos_non_negative"
file = "HOME/tests/java/Muller.java"
line = 51
begin = 10
end = 33

[K_23]
file = "HOME/tests/java/Muller.java"
line = 91
begin = 8
end = 23

[K_24]
file = "HOME/tests/java/Muller.java"
line = 90
begin = 13
end = 26

[K_1]
file = "HOME/tests/java/Muller.java"
line = 73
begin = 17
end = 26

[K_25]
file = "HOME/tests/java/Muller.java"
line = 90
begin = 8
end = 14

[K_2]
file = "HOME/tests/java/Muller.java"
line = 84
begin = 12
end = 13

[K_26]
file = "HOME/tests/java/Muller.java"
line = 90
begin = 8
end = 26

[K_3]
file = "HOME/tests/java/Muller.java"
line = 81
begin = 8
end = 34

[K_27]
file = "HOME/tests/java/Muller.java"
line = 90
begin = 8
end = 53

[K_4]
file = "HOME/tests/java/Muller.java"
line = 80
begin = 13
end = 23

[K_28]
file = "HOME/tests/java/Muller.java"
line = 90
begin = 8
end = 91

[K_5]
file = "HOME/tests/java/Muller.java"
line = 80
begin = 8
end = 18

[K_29]
file = "HOME/tests/java/Muller.java"
line = 93
begin = 18
end = 30

[K_6]
file = "HOME/tests/java/Muller.java"
line = 80
begin = 8
end = 23

[K_7]
file = "HOME/tests/java/Muller.java"
line = 79
begin = 13
end = 26

[K_8]
file = "HOME/tests/java/Muller.java"
line = 79
begin = 8
end = 14

[K_9]
file = "HOME/tests/java/Muller.java"
line = 79
begin = 8
end = 26

[K_30]
file = "HOME/tests/java/Muller.java"
line = 96
begin = 21
end = 28

[K_31]
file = "HOME/tests/java/Muller.java"
line = 96
begin = 32
end = 36

[K_32]
file = "HOME/tests/java/Muller.java"
line = 96
begin = 19
end = 36

[K_33]
file = "HOME/tests/java/Muller.java"
line = 96
begin = 9
end = 13

[cons_Muller]
name = "Constructor of class Muller"
file = "HOME/"
line = 0
begin = -1
end = -1

[K_34]
file = "HOME/tests/java/Muller.java"
line = 96
begin = 9
end = 17

[K_35]
file = "HOME/tests/java/Muller.java"
line = 95
begin = 30
end = 33

[K_36]
file = "HOME/tests/java/Muller.java"
line = 95
begin = 20
end = 28

[K_37]
file = "HOME/tests/java/Muller.java"
line = 95
begin = 16
end = 28

[K_38]
file = "HOME/tests/java/Muller.java"
line = 86
begin = 11
end = 25

[K_39]
file = "HOME/tests/java/Muller.java"
line = 76
begin = 13
end = 14

[num_of_pos_empty]
name = "Lemma num_of_pos_empty"
file = "HOME/"
line = 0
begin = 0
end = 0

[num_of_pos_true_case]
name = "Lemma num_of_pos_true_case"
file = "HOME/"
line = 0
begin = 0
end = 0

[num_of_pos_additive]
name = "Lemma num_of_pos_additive"
file = "HOME/tests/java/Muller.java"
line = 55
begin = 10
end = 29

[num_of_pos_strictly_increasing]
name = "Lemma num_of_pos_strictly_increasing"
file = "HOME/tests/java/Muller.java"
line = 65
begin = 10
end = 40

[num_of_pos_increasing]
name = "Lemma num_of_pos_increasing"
file = "HOME/tests/java/Muller.java"
line = 60
begin = 10
end = 31

[num_of_pos_false_case]
name = "Lemma num_of_pos_false_case"
file = "HOME/"
line = 0
begin = 0
end = 0

========== jessie execution ==========
Generating Why function Muller_m
Generating Why function cons_Muller
========== file tests/java/Muller.makefile ==========
# this makefile was automatically generated; do not edit 

TIMEOUT ?= 10

DP ?= why-dp -timeout $(TIMEOUT)
WHYEXEC ?= why
GWHYEXEC ?= gwhy-bin
WHYLIB ?= HOME/lib

WHY=WHYLIB=$(WHYLIB) $(WHYEXEC) $(WHYOPT)  -split-user-conj -explain -locs Muller.loc

GWHY=WHYLIB=$(WHYLIB) $(GWHYEXEC) $(WHYOPT)  -split-user-conj -explain -locs Muller.loc

JESSIELIBFILES ?= $(WHYLIB)/why/jessie.why
JESSIE3CONF ?= $(WHYLIB)/why3/why3.conf

COQDEP = coqdep

.PHONY: all coq pvs simplify vampire cvcl harvey smtlib zenon

all: simplify/Muller_why.sx

project: why/Muller.wpr

why/%.wpr:  WHYOPT=--project -dir why
why/%.wpr: why/%.why
	@echo 'why --project [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

goals: why/Muller_ctx.why

why/%_ctx.why: WHYOPT=--multi-why -dir why
why/%_ctx.why: why/%.why
	@echo 'why --multi-why [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

coq: coq/Muller_why.vo

coq/Muller_why.v: WHYOPT=-coq -dir coq -coq-preamble "Require Export jessie_why." -coq-tactic "intuition"
coq/Muller_why.v: why/Muller.why
	@echo 'why -coq [...] why/Muller.why' && $(WHY) $(JESSIELIBFILES) why/Muller.why && rm -f coq/jessie_why.v

coq-goals: goals coq/Muller_ctx_why.vo
	for f in why/*_po*.why; do make -f Muller.makefile coq/`basename $$f .why`_why.v ; done

coq/Muller_ctx_why.v: WHYOPT=-no-pervasives -coq -dir coq -coq-preamble "Require Export jessie_why." -coq-tactic "intuition"
coq/Muller_ctx_why.v: why/Muller_ctx.why
	@echo 'why -coq [...] why/Muller_ctx.why' && $(WHY) why/Muller_ctx.why

coq/%_why.v: WHYOPT=-no-pervasives -coq -dir coq -coq-preamble "Require Export Muller_ctx_why." -coq-tactic "intuition"
coq/%_why.v: why/%.why
	@echo 'why -coq [...] why/$*.why' && $(WHY) why/Muller_ctx.why why/$*.why

coq/%.vo: coq/%.v
	coqc -I coq $<
coq/%_po_why.vo: coq/Muller_ctx_why.vo

pvs: pvs/Muller_why.pvs

pvs/%_why.pvs: WHYOPT=-pvs -dir pvs -pvs-preamble "IMPORTING why@jessie"
pvs/%_why.pvs: why/%.why
	$(WHY) $(JESSIELIBFILES) why/$*.why

pvs/jessie_why.pvs:WHYOPT=-pvs -dir pvs -pvs-preamble "IMPORTING why@why"
pvs/jessie_why.pvs:
	$(WHY) $(JESSIELIBFILES)

isabelle: isabelle/Muller_why.thy

isabelle/%_why.thy: WHYOPT=-isabelle -dir isabelle -isabelle-base-theory jessie_why
isabelle/%_why.thy: why/%.why
	$(WHY) $(JESSIELIBFILES) why/$*.why
	cp -f HOME/lib/isabelle/jessie_why.thy isabelle/

simplify: simplify/Muller_why.sx
	@echo 'Running Simplify on proof obligations' && ($(DP) $^)

simplify/%_why.sx: WHYOPT=-simplify -dir simplify
simplify/%_why.sx: why/%.why
	@echo 'why -simplify [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

vampire: vampire/Muller_why.vp
	@echo 'Running Vampire on proof obligations' && ($(DP) $^)

vampire/%_why.vp: WHYOPT=-vampire -dir vampire
vampire/%_why.vp: why/%.why
	@echo 'why -vampire [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

alt-ergo ergo: why/Muller_why.why
	@echo 'Running Alt-Ergo on proof obligations' && ($(DP) $^)

why/%_why.why: WHYOPT=-alt-ergo -dir why
why/%_why.why: why/%.why
	@echo 'why -alt-ergo [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

gappa: gappa/Muller_why.gappa
	@echo 'Running Gappa on proof obligations' && ($(DP) $^)

gappa/%_why.gappa: WHYOPT=-gappa -dir gappa
gappa/%_why.gappa: why/%.why
	@echo 'why -gappa [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

cvcl: cvcl/Muller_why.cvc

	@echo 'Running CVC Lite on proof obligations' && ($(DP) $^)

cvcl/%_why.cvc: WHYOPT=-cvcl -dir cvcl
cvcl/%_why.cvc: why/%.why
	@echo 'why -cvcl [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

harvey: harvey/Muller_why.rv
	@echo 'Running haRVey on proof obligations' && ($(DP) $^)

harvey/%_why.rv: WHYOPT=-harvey -dir harvey
harvey/%_why.rv: why/%.why
	@echo 'why -harvey [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

zenon: zenon/Muller_why.znn
	@echo 'Running Zenon on proof obligations' && ($(DP) $^)

zenon/%_why.znn: WHYOPT=-zenon -dir zenon
zenon/%_why.znn: why/%.why
	@echo 'why -zenon [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

smtlib: smtlib/Muller_why.smt
	@echo 'Running Z3 on proof obligations' && ($(DP) $^)

smtlib/%_why.smt:  WHYOPT=-smtlib --encoding sstrat --exp goal -dir smtlib
smtlib/%_why.smt: why/%.why
	@echo 'why -smtlib [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

z3: smtlib/Muller_why.smt
	@echo 'Running Z3 on proof obligations' && ($(DP) -smt-solver z3 $^)

yices: smtlib/Muller_why.smt
	@echo 'Running Yices on proof obligations' && ($(DP) -smt-solver yices $^)

cvc3: smtlib/Muller_why.smt
	@echo 'Running CVC3 on proof obligations' && ($(DP) -smt-solver cvc3 $^)

smtlib-v1: smtlib-v1/Muller_why.smt
smtlib-v1/%_why.smt:  WHYOPT=-smtlib --smtlib-v1 --encoding sstrat --exp goal -dir smtlib-v1
smtlib-v1/%_why.smt: why/%.why
	@echo 'why -smtlib [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

verit: smtlib-v1/Muller_why.smt
	@echo 'Running VeriT on proof obligations' && ($(DP) -smt-solver verit $^)

gui stat: Muller.stat

%.stat: why/%.why
	@echo 'gwhy-bin [...] why/$*.why' && $(GWHY) $(JESSIELIBFILES) why/$*.why

why3: why/Muller_why3.why
why/%_why3.why:  WHYOPT=-why3
why/%_why3.why: why/%.why
	@echo 'why -why3 [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why
why3ml: Muller.mlw
	@echo 'why3 [...] $<' && why3 --extra-config $(JESSIE3CONF) $<

why3ide: Muller.mlw
	@echo 'why3ide [...] $<' && why3ide --extra-config $(JESSIE3CONF) $<

why3replay: Muller.mlw
	@echo 'why3replayer [...] $<' && why3replayer --extra-config $(JESSIE3CONF) $<

-include Muller.depend

depend: coq/Muller_why.v
	-$(COQDEP) -I coq coq/Muller*_why.v > Muller.depend

clean:
	rm -f coq/*.vo

========== file tests/java/Muller.loc ==========
[JC_90]
kind = AllocSize
file = "HOME/tests/java/Muller.java"
line = 86
begin = 11
end = 25

[JC_91]
file = "HOME/tests/java/Muller.java"
line = 90
begin = 8
end = 14

[JC_92]
file = "HOME/tests/java/Muller.java"
line = 90
begin = 13
end = 26

[JC_40]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_93]
file = "HOME/tests/java/Muller.java"
line = 91
begin = 8
end = 18

[JC_41]
file = "HOME/tests/java/Muller.java"
line = 73
begin = 17
end = 26

[JC_94]
file = "HOME/tests/java/Muller.java"
line = 91
begin = 13
end = 23

[JC_42]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_95]
file = "HOME/tests/java/Muller.java"
line = 92
begin = 8
end = 34

[JC_43]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_96]
file = "HOME/tests/java/Muller.java"
line = 90
begin = 8
end = 91

[JC_44]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_97]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_45]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_98]
file = "HOME/tests/java/Muller.jc"
line = 174
begin = 21
end = 1740

[JC_46]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_1]
file = "HOME/tests/java/Muller.jc"
line = 23
begin = 12
end = 22

[JC_100]
kind = UserCall
file = "HOME/tests/java/Muller.java"
line = 95
begin = 20
end = 28

[JC_99]
file = "HOME/tests/java/Muller.jc"
line = 174
begin = 21
end = 1740

[JC_47]
file = "HOME/tests/java/Muller.java"
line = 79
begin = 8
end = 14

[JC_2]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_101]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_48]
file = "HOME/tests/java/Muller.java"
line = 79
begin = 13
end = 26

[JC_3]
file = "HOME/tests/java/Muller.jc"
line = 23
begin = 12
end = 22

[JC_102]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_49]
file = "HOME/tests/java/Muller.java"
line = 80
begin = 8
end = 18

[JC_4]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_103]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_5]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_104]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_6]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_105]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_7]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_106]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_8]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_107]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_9]
file = "HOME/tests/java/Muller.jc"
line = 52
begin = 8
end = 21

[JC_108]
file = "HOME/"
line = 0
begin = -1
end = -1

[num_of_pos_non_negative]
name = "Lemma num_of_pos_non_negative"
behavior = "lemma"
file = "HOME/tests/java/Muller.java"
line = 51
begin = 10
end = 33

[JC_50]
file = "HOME/tests/java/Muller.java"
line = 80
begin = 13
end = 23

[cons_Muller_ensures_default]
name = "Constructor of class Muller"
behavior = "default behavior"
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_51]
file = "HOME/tests/java/Muller.java"
line = 81
begin = 8
end = 34

[JC_52]
file = "HOME/tests/java/Muller.java"
line = 79
begin = 8
end = 91

[cons_Muller_safety]
name = "Constructor of class Muller"
behavior = "Safety"
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_53]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_54]
file = "HOME/tests/java/Muller.jc"
line = 145
begin = 15
end = 1030

[JC_55]
file = "HOME/tests/java/Muller.jc"
line = 145
begin = 15
end = 1030

[JC_56]
kind = UserCall
file = "HOME/tests/java/Muller.java"
line = 84
begin = 20
end = 28

[JC_57]
kind = IndexBounds
file = "HOME/tests/java/Muller.java"
line = 84
begin = 20
end = 28

[JC_58]
kind = PointerDeref
file = "HOME/tests/java/Muller.java"
line = 84
begin = 39
end = 43

[Muller_m_safety]
name = "Method m"
behavior = "Safety"
file = "HOME/tests/java/Muller.java"
line = 75
begin = 24
end = 25

[JC_59]
kind = ArithOverflow
file = "HOME/tests/java/Muller.jc"
line = 160
begin = 69
end = 77

[JC_60]
kind = ArithOverflow
file = "HOME/tests/java/Muller.jc"
line = 158
begin = 24
end = 30

[JC_61]
file = "HOME/tests/java/Muller.java"
line = 82
begin = 18
end = 30

[JC_62]
kind = AllocSize
file = "HOME/tests/java/Muller.java"
line = 86
begin = 11
end = 25

[JC_10]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_63]
file = "HOME/tests/java/Muller.java"
line = 90
begin = 8
end = 14

[JC_11]
file = "HOME/tests/java/Muller.jc"
line = 52
begin = 8
end = 21

[JC_64]
file = "HOME/tests/java/Muller.java"
line = 90
begin = 13
end = 26

[JC_12]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_65]
file = "HOME/tests/java/Muller.java"
line = 91
begin = 8
end = 18

[JC_13]
file = "HOME/tests/java/Muller.jc"
line = 55
begin = 11
end = 66

[JC_66]
file = "HOME/tests/java/Muller.java"
line = 91
begin = 13
end = 23

[JC_14]
file = "HOME/tests/java/Muller.jc"
line = 54
begin = 10
end = 18

[JC_67]
file = "HOME/tests/java/Muller.java"
line = 92
begin = 8
end = 34

[JC_15]
file = "HOME/tests/java/Muller.jc"
line = 55
begin = 11
end = 66

[JC_68]
file = "HOME/tests/java/Muller.java"
line = 90
begin = 8
end = 91

[JC_16]
file = "HOME/tests/java/Muller.jc"
line = 54
begin = 10
end = 18

[JC_69]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_17]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_18]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_19]
file = "HOME/tests/java/Muller.jc"
line = 58
begin = 8
end = 30

[JC_70]
file = "HOME/tests/java/Muller.jc"
line = 174
begin = 21
end = 1740

[JC_71]
file = "HOME/tests/java/Muller.jc"
line = 174
begin = 21
end = 1740

[JC_72]
kind = UserCall
file = "HOME/tests/java/Muller.java"
line = 95
begin = 20
end = 28

[JC_20]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_73]
kind = IndexBounds
file = "HOME/tests/java/Muller.java"
line = 95
begin = 20
end = 28

[JC_21]
file = "HOME/tests/java/Muller.jc"
line = 58
begin = 8
end = 30

[JC_74]
kind = PointerDeref
file = "HOME/tests/java/Muller.java"
line = 96
begin = 9
end = 13

[JC_22]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_75]
kind = PointerDeref
file = "HOME/tests/java/Muller.java"
line = 96
begin = 32
end = 36

[JC_23]
file = "HOME/tests/java/Muller.jc"
line = 61
begin = 11
end = 103

[JC_76]
kind = ArithOverflow
file = "HOME/tests/java/Muller.jc"
line = 197
begin = 47
end = 55

[JC_24]
file = "HOME/tests/java/Muller.jc"
line = 60
begin = 10
end = 18

[num_of_pos_empty]
name = "Lemma num_of_pos_empty"
behavior = "axiom"
file = "HOME/"
line = 0
begin = 0
end = 0

[JC_77]
kind = PointerDeref
file = "HOME/tests/java/Muller.java"
line = 96
begin = 19
end = 36

[JC_25]
file = "HOME/tests/java/Muller.jc"
line = 61
begin = 11
end = 103

[JC_78]
kind = ArithOverflow
file = "HOME/tests/java/Muller.jc"
line = 195
begin = 30
end = 36

[JC_26]
file = "HOME/tests/java/Muller.jc"
line = 60
begin = 10
end = 18

[JC_79]
file = "HOME/tests/java/Muller.java"
line = 93
begin = 18
end = 30

[JC_27]
file = "HOME/"
line = 0
begin = -1
end = -1

[num_of_pos_true_case]
name = "Lemma num_of_pos_true_case"
behavior = "axiom"
file = "HOME/"
line = 0
begin = 0
end = 0

[JC_28]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_29]
file = "HOME/tests/java/Muller.jc"
line = 65
begin = 8
end = 23

[num_of_pos_additive]
name = "Lemma num_of_pos_additive"
behavior = "lemma"
file = "HOME/tests/java/Muller.java"
line = 55
begin = 10
end = 29

[JC_80]
file = "HOME/tests/java/Muller.java"
line = 79
begin = 8
end = 14

[JC_81]
file = "HOME/tests/java/Muller.java"
line = 79
begin = 13
end = 26

[JC_82]
file = "HOME/tests/java/Muller.java"
line = 80
begin = 8
end = 18

[JC_30]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_83]
file = "HOME/tests/java/Muller.java"
line = 80
begin = 13
end = 23

[JC_31]
file = "HOME/tests/java/Muller.jc"
line = 65
begin = 8
end = 23

[JC_84]
file = "HOME/tests/java/Muller.java"
line = 81
begin = 8
end = 34

[JC_32]
file = "HOME/"
line = 0
begin = -1
end = -1

[num_of_pos_strictly_increasing]
name = "Lemma num_of_pos_strictly_increasing"
behavior = "lemma"
file = "HOME/tests/java/Muller.java"
line = 65
begin = 10
end = 40

[Muller_m_ensures_default]
name = "Method m"
behavior = "default behavior"
file = "HOME/tests/java/Muller.java"
line = 75
begin = 24
end = 25

[JC_85]
file = "HOME/tests/java/Muller.java"
line = 79
begin = 8
end = 91

[JC_33]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_86]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_34]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_87]
file = "HOME/tests/java/Muller.jc"
line = 145
begin = 15
end = 1030

[JC_35]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_88]
file = "HOME/tests/java/Muller.jc"
line = 145
begin = 15
end = 1030

[JC_36]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_89]
kind = UserCall
file = "HOME/tests/java/Muller.java"
line = 84
begin = 20
end = 28

[JC_37]
file = "HOME/tests/java/Muller.jc"
line = 67
begin = 11
end = 65

[JC_38]
file = "HOME/tests/java/Muller.jc"
line = 67
begin = 11
end = 65

[num_of_pos_increasing]
name = "Lemma num_of_pos_increasing"
behavior = "lemma"
file = "HOME/tests/java/Muller.java"
line = 60
begin = 10
end = 31

[JC_39]
file = "HOME/tests/java/Muller.java"
line = 73
begin = 17
end = 26

[num_of_pos_false_case]
name = "Lemma num_of_pos_false_case"
behavior = "axiom"
file = "HOME/"
line = 0
begin = 0
end = 0

========== file tests/java/why/Muller.why ==========
type Object

type byte

type char

type int32

type interface

type long

type short

logic Exception_tag:  -> Object tag_id

logic Object_tag:  -> Object tag_id

axiom Exception_parenttag_Object : parenttag(Exception_tag, Object_tag)

logic Muller_tag:  -> Object tag_id

axiom Muller_parenttag_Object : parenttag(Muller_tag, Object_tag)

predicate Non_null_Object(x_1:Object pointer,
 Object_x_2_alloc_table:Object alloc_table) =
 ge_int(offset_max(Object_x_2_alloc_table, x_1), (0))

predicate Non_null_intM(x_0:Object pointer,
 Object_x_1_alloc_table:Object alloc_table) =
 ge_int(offset_max(Object_x_1_alloc_table, x_0), neg_int((1)))

axiom Object_int : (int_of_tag(Object_tag) = (1))

logic Object_of_pointer_address: unit pointer -> Object pointer

axiom Object_of_pointer_address_of_pointer_addr :
 (forall p:Object pointer.
  (p = Object_of_pointer_address(pointer_address(p))))

axiom Object_parenttag_bottom : parenttag(Object_tag, bottom_tag)

axiom Object_tags :
 (forall x:Object pointer.
  (forall Object_tag_table:Object tag_table.
   instanceof(Object_tag_table, x, Object_tag)))

logic String_tag:  -> Object tag_id

axiom String_parenttag_Object : parenttag(String_tag, Object_tag)

logic Throwable_tag:  -> Object tag_id

axiom Throwable_parenttag_Object : parenttag(Throwable_tag, Object_tag)

logic integer_of_byte: byte -> int

logic byte_of_integer: int -> byte

axiom byte_coerce :
 (forall x:int.
  ((le_int((-128), x) and le_int(x, (127))) ->
   eq_int(integer_of_byte(byte_of_integer(x)), x)))

axiom byte_extensionality :
 (forall x:byte.
  (forall y:byte[eq_int(integer_of_byte(x), integer_of_byte(y))].
   (eq_int(integer_of_byte(x), integer_of_byte(y)) -> (x = y))))

axiom byte_range :
 (forall x:byte.
  (le_int((-128), integer_of_byte(x)) and le_int(integer_of_byte(x), (127))))

logic integer_of_char: char -> int

logic char_of_integer: int -> char

axiom char_coerce :
 (forall x:int.
  ((le_int((0), x) and le_int(x, (65535))) ->
   eq_int(integer_of_char(char_of_integer(x)), x)))

axiom char_extensionality :
 (forall x:char.
  (forall y:char[eq_int(integer_of_char(x), integer_of_char(y))].
   (eq_int(integer_of_char(x), integer_of_char(y)) -> (x = y))))

axiom char_range :
 (forall x:char.
  (le_int((0), integer_of_char(x)) and le_int(integer_of_char(x), (65535))))

predicate eq_byte(x:byte, y:byte) =
 eq_int(integer_of_byte(x), integer_of_byte(y))

predicate eq_char(x:char, y:char) =
 eq_int(integer_of_char(x), integer_of_char(y))

logic integer_of_int32: int32 -> int

predicate eq_int32(x:int32, y:int32) =
 eq_int(integer_of_int32(x), integer_of_int32(y))

logic integer_of_long: long -> int

predicate eq_long(x:long, y:long) =
 eq_int(integer_of_long(x), integer_of_long(y))

logic integer_of_short: short -> int

predicate eq_short(x:short, y:short) =
 eq_int(integer_of_short(x), integer_of_short(y))

logic int32_of_integer: int -> int32

axiom int32_coerce :
 (forall x:int.
  ((le_int((-2147483648), x) and le_int(x, (2147483647))) ->
   eq_int(integer_of_int32(int32_of_integer(x)), x)))

axiom int32_extensionality :
 (forall x:int32.
  (forall y:int32[eq_int(integer_of_int32(x), integer_of_int32(y))].
   (eq_int(integer_of_int32(x), integer_of_int32(y)) -> (x = y))))

axiom int32_range :
 (forall x:int32.
  (le_int((-2147483648), integer_of_int32(x))
  and le_int(integer_of_int32(x), (2147483647))))

logic intM_tag:  -> Object tag_id

axiom intM_parenttag_Object : parenttag(intM_tag, Object_tag)

logic interface_tag:  -> interface tag_id

axiom interface_int : (int_of_tag(interface_tag) = (1))

logic interface_of_pointer_address: unit pointer -> interface pointer

axiom interface_of_pointer_address_of_pointer_addr :
 (forall p:interface pointer.
  (p = interface_of_pointer_address(pointer_address(p))))

axiom interface_parenttag_bottom : parenttag(interface_tag, bottom_tag)

axiom interface_tags :
 (forall x:interface pointer.
  (forall interface_tag_table:interface tag_table.
   instanceof(interface_tag_table, x, interface_tag)))

predicate left_valid_struct_Object(p:Object pointer, a:int,
 Object_alloc_table:Object alloc_table) =
 (offset_min(Object_alloc_table, p) <= a)

predicate left_valid_struct_Exception(p:Object pointer, a:int,
 Object_alloc_table:Object alloc_table) =
 left_valid_struct_Object(p, a, Object_alloc_table)

predicate left_valid_struct_Muller(p:Object pointer, a:int,
 Object_alloc_table:Object alloc_table) =
 left_valid_struct_Object(p, a, Object_alloc_table)

predicate left_valid_struct_String(p:Object pointer, a:int,
 Object_alloc_table:Object alloc_table) =
 left_valid_struct_Object(p, a, Object_alloc_table)

predicate left_valid_struct_Throwable(p:Object pointer, a:int,
 Object_alloc_table:Object alloc_table) =
 left_valid_struct_Object(p, a, Object_alloc_table)

predicate left_valid_struct_intM(p:Object pointer, a:int,
 Object_alloc_table:Object alloc_table) =
 left_valid_struct_Object(p, a, Object_alloc_table)

predicate left_valid_struct_interface(p:interface pointer, a:int,
 interface_alloc_table:interface alloc_table) =
 (offset_min(interface_alloc_table, p) <= a)

logic long_of_integer: int -> long

axiom long_coerce :
 (forall x:int.
  ((le_int((-9223372036854775808), x) and le_int(x, (9223372036854775807))) ->
   eq_int(integer_of_long(long_of_integer(x)), x)))

axiom long_extensionality :
 (forall x:long.
  (forall y:long[eq_int(integer_of_long(x), integer_of_long(y))].
   (eq_int(integer_of_long(x), integer_of_long(y)) -> (x = y))))

axiom long_range :
 (forall x:long.
  (le_int((-9223372036854775808), integer_of_long(x))
  and le_int(integer_of_long(x), (9223372036854775807))))

logic num_of_pos: int, int, Object pointer, (Object, int32) memory -> int

axiom pointer_addr_of_Object_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(Object_of_pointer_address(p))))

axiom pointer_addr_of_interface_of_pointer_address :
 (forall p:unit pointer.
  (p = pointer_address(interface_of_pointer_address(p))))

predicate right_valid_struct_Object(p:Object pointer, b:int,
 Object_alloc_table:Object alloc_table) =
 (offset_max(Object_alloc_table, p) >= b)

predicate right_valid_struct_Exception(p:Object pointer, b:int,
 Object_alloc_table:Object alloc_table) =
 right_valid_struct_Object(p, b, Object_alloc_table)

predicate right_valid_struct_Muller(p:Object pointer, b:int,
 Object_alloc_table:Object alloc_table) =
 right_valid_struct_Object(p, b, Object_alloc_table)

predicate right_valid_struct_String(p:Object pointer, b:int,
 Object_alloc_table:Object alloc_table) =
 right_valid_struct_Object(p, b, Object_alloc_table)

predicate right_valid_struct_Throwable(p:Object pointer, b:int,
 Object_alloc_table:Object alloc_table) =
 right_valid_struct_Object(p, b, Object_alloc_table)

predicate right_valid_struct_intM(p:Object pointer, b:int,
 Object_alloc_table:Object alloc_table) =
 right_valid_struct_Object(p, b, Object_alloc_table)

predicate right_valid_struct_interface(p:interface pointer, b:int,
 interface_alloc_table:interface alloc_table) =
 (offset_max(interface_alloc_table, p) >= b)

logic short_of_integer: int -> short

axiom short_coerce :
 (forall x:int.
  ((le_int((-32768), x) and le_int(x, (32767))) ->
   eq_int(integer_of_short(short_of_integer(x)), x)))

axiom short_extensionality :
 (forall x:short.
  (forall y:short[eq_int(integer_of_short(x), integer_of_short(y))].
   (eq_int(integer_of_short(x), integer_of_short(y)) -> (x = y))))

axiom short_range :
 (forall x:short.
  (le_int((-32768), integer_of_short(x))
  and le_int(integer_of_short(x), (32767))))

predicate strict_valid_root_Object(p:Object pointer, a:int, b:int,
 Object_alloc_table:Object alloc_table) =
 ((offset_min(Object_alloc_table, p) = a)
 and (offset_max(Object_alloc_table, p) = b))

predicate strict_valid_root_interface(p:interface pointer, a:int, b:int,
 interface_alloc_table:interface alloc_table) =
 ((offset_min(interface_alloc_table, p) = a)
 and (offset_max(interface_alloc_table, p) = b))

predicate strict_valid_struct_Object(p:Object pointer, a:int, b:int,
 Object_alloc_table:Object alloc_table) =
 ((offset_min(Object_alloc_table, p) = a)
 and (offset_max(Object_alloc_table, p) = b))

predicate strict_valid_struct_Exception(p:Object pointer, a:int, b:int,
 Object_alloc_table:Object alloc_table) =
 strict_valid_struct_Object(p, a, b, Object_alloc_table)

predicate strict_valid_struct_Muller(p:Object pointer, a:int, b:int,
 Object_alloc_table:Object alloc_table) =
 strict_valid_struct_Object(p, a, b, Object_alloc_table)

predicate strict_valid_struct_String(p:Object pointer, a:int, b:int,
 Object_alloc_table:Object alloc_table) =
 strict_valid_struct_Object(p, a, b, Object_alloc_table)

predicate strict_valid_struct_Throwable(p:Object pointer, a:int, b:int,
 Object_alloc_table:Object alloc_table) =
 strict_valid_struct_Object(p, a, b, Object_alloc_table)

predicate strict_valid_struct_intM(p:Object pointer, a:int, b:int,
 Object_alloc_table:Object alloc_table) =
 strict_valid_struct_Object(p, a, b, Object_alloc_table)

predicate strict_valid_struct_interface(p:interface pointer, a:int, b:int,
 interface_alloc_table:interface alloc_table) =
 ((offset_min(interface_alloc_table, p) = a)
 and (offset_max(interface_alloc_table, p) = b))

predicate valid_root_Object(p:Object pointer, a:int, b:int,
 Object_alloc_table:Object alloc_table) =
 ((offset_min(Object_alloc_table, p) <= a)
 and (offset_max(Object_alloc_table, p) >= b))

predicate valid_root_interface(p:interface pointer, a:int, b:int,
 interface_alloc_table:interface alloc_table) =
 ((offset_min(interface_alloc_table, p) <= a)
 and (offset_max(interface_alloc_table, p) >= b))

predicate valid_struct_Object(p:Object pointer, a:int, b:int,
 Object_alloc_table:Object alloc_table) =
 ((offset_min(Object_alloc_table, p) <= a)
 and (offset_max(Object_alloc_table, p) >= b))

predicate valid_struct_Exception(p:Object pointer, a:int, b:int,
 Object_alloc_table:Object alloc_table) =
 valid_struct_Object(p, a, b, Object_alloc_table)

predicate valid_struct_Muller(p:Object pointer, a:int, b:int,
 Object_alloc_table:Object alloc_table) =
 valid_struct_Object(p, a, b, Object_alloc_table)

predicate valid_struct_String(p:Object pointer, a:int, b:int,
 Object_alloc_table:Object alloc_table) =
 valid_struct_Object(p, a, b, Object_alloc_table)

predicate valid_struct_Throwable(p:Object pointer, a:int, b:int,
 Object_alloc_table:Object alloc_table) =
 valid_struct_Object(p, a, b, Object_alloc_table)

predicate valid_struct_intM(p:Object pointer, a:int, b:int,
 Object_alloc_table:Object alloc_table) =
 valid_struct_Object(p, a, b, Object_alloc_table)

predicate valid_struct_interface(p:interface pointer, a:int, b:int,
 interface_alloc_table:interface alloc_table) =
 ((offset_min(interface_alloc_table, p) <= a)
 and (offset_max(interface_alloc_table, p) >= b))

axiom num_of_pos_false_case :
 (forall intM_intP_t_8_at_L:(Object, int32) memory.
  (forall i_2:int.
   (forall j_2:int.
    (forall k_0:int.
     (forall t_2:Object pointer.
      ((lt_int(i_2, j_2)
       and (not gt_int(integer_of_int32(select(intM_intP_t_8_at_L,
                                        shift(t_2, sub_int(j_2, (1))))),
                (0)))) ->
       (num_of_pos(i_2, j_2, t_2, intM_intP_t_8_at_L) = num_of_pos(i_2,
                                                        sub_int(j_2, (1)),
                                                        t_2,
                                                        intM_intP_t_8_at_L))))))))

axiom num_of_pos_true_case :
 (forall intM_intP_t_8_at_L:(Object, int32) memory.
  (forall i_1:int.
   (forall j_1:int.
    (forall k:int.
     (forall t_1:Object pointer.
      ((lt_int(i_1, j_1)
       and gt_int(integer_of_int32(select(intM_intP_t_8_at_L,
                                   shift(t_1, sub_int(j_1, (1))))),
           (0))) ->
       (num_of_pos(i_1, j_1, t_1, intM_intP_t_8_at_L) = add_int(num_of_pos(i_1,
                                                                sub_int(j_1,
                                                                (1)), t_1,
                                                                intM_intP_t_8_at_L),
                                                        (1)))))))))

axiom num_of_pos_empty :
 (forall intM_intP_t_8_at_L:(Object, int32) memory.
  (forall i_0:int.
   (forall j_0:int.
    (forall t_0:Object pointer.
     (ge_int(i_0, j_0) ->
      (num_of_pos(i_0, j_0, t_0, intM_intP_t_8_at_L) = (0)))))))

lemma num_of_pos_non_negative :
 (forall intM_intP_t_3_18_at_L:(Object, int32) memory.
  (forall i_3:int.
   (forall j_3:int.
    (forall t_3:Object pointer.
     le_int((0), num_of_pos(i_3, j_3, t_3, intM_intP_t_3_18_at_L))))))

lemma num_of_pos_additive :
 (forall intM_intP_t_4_19_at_L:(Object, int32) memory.
  (forall i_4:int.
   (forall j_4:int.
    (forall k_1:int.
     (forall t_4:Object pointer.
      ((le_int(i_4, j_4) and le_int(j_4, k_1)) ->
       (num_of_pos(i_4, k_1, t_4, intM_intP_t_4_19_at_L) = add_int(num_of_pos(i_4,
                                                                   j_4, t_4,
                                                                   intM_intP_t_4_19_at_L),
                                                           num_of_pos(j_4,
                                                           k_1, t_4,
                                                           intM_intP_t_4_19_at_L)))))))))

lemma num_of_pos_increasing :
 (forall intM_intP_t_5_20_at_L:(Object, int32) memory.
  (forall i_5:int.
   (forall j_5:int.
    (forall k_2:int.
     (forall t_5:Object pointer.
      (le_int(j_5, k_2) ->
       le_int(num_of_pos(i_5, j_5, t_5, intM_intP_t_5_20_at_L),
       num_of_pos(i_5, k_2, t_5, intM_intP_t_5_20_at_L))))))))

lemma num_of_pos_strictly_increasing :
 (forall intM_intP_t_6_21_at_L:(Object, int32) memory.
  (forall i_6:int.
   (forall n:int.
    (forall t_6:Object pointer.
     ((le_int((0), i_6)
      and (lt_int(i_6, n)
          and gt_int(integer_of_int32(select(intM_intP_t_6_21_at_L,
                                      shift(t_6, i_6))),
              (0)))) ->
      lt_int(num_of_pos((0), i_6, t_6, intM_intP_t_6_21_at_L),
      num_of_pos((0), n, t_6, intM_intP_t_6_21_at_L)))))))

exception Exception_exc of Object pointer

exception Loop_continue_exc of unit

exception Loop_exit_exc of unit

parameter Muller_m :
 t_7:Object pointer ->
  Object_Muller_m_11_alloc_table:Object alloc_table ref ->
   Object_Muller_m_11_tag_table:Object tag_table ref ->
    intM_intP_Muller_m_11:(Object, int32) memory ref ->
     Object_t_7_9_alloc_table:Object alloc_table ->
      intM_intP_t_7_9:(Object, int32) memory ->
       { } Object pointer reads Object_Muller_m_11_alloc_table
       writes Object_Muller_m_11_alloc_table,Object_Muller_m_11_tag_table,intM_intP_Muller_m_11
       { true }

parameter Muller_m_requires :
 t_7:Object pointer ->
  Object_Muller_m_11_alloc_table:Object alloc_table ref ->
   Object_Muller_m_11_tag_table:Object tag_table ref ->
    intM_intP_Muller_m_11:(Object, int32) memory ref ->
     Object_t_7_9_alloc_table:Object alloc_table ->
      intM_intP_t_7_9:(Object, int32) memory ->
       { (JC_39: Non_null_intM(t_7, Object_t_7_9_alloc_table))}
       Object pointer reads Object_Muller_m_11_alloc_table
       writes Object_Muller_m_11_alloc_table,Object_Muller_m_11_tag_table,intM_intP_Muller_m_11
       { true }

parameter Object_alloc_table : Object alloc_table ref

parameter Object_tag_table : Object tag_table ref

exception Return_label_exc of unit

exception Throwable_exc of Object pointer

parameter alloc_struct_Exception :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { } Object pointer writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_Exception(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, Exception_tag)))) }

parameter alloc_struct_Exception_requires :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { ge_int(n, (0))} Object pointer
    writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_Exception(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, Exception_tag)))) }

parameter alloc_struct_Muller :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { } Object pointer writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_Muller(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, Muller_tag)))) }

parameter alloc_struct_Muller_requires :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { ge_int(n, (0))} Object pointer
    writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_Muller(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, Muller_tag)))) }

parameter alloc_struct_Object :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { } Object pointer writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_Object(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, Object_tag)))) }

parameter alloc_struct_Object_requires :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { ge_int(n, (0))} Object pointer
    writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_Object(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, Object_tag)))) }

parameter alloc_struct_String :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { } Object pointer writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_String(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, String_tag)))) }

parameter alloc_struct_String_requires :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { ge_int(n, (0))} Object pointer
    writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_String(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, String_tag)))) }

parameter alloc_struct_Throwable :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { } Object pointer writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_Throwable(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, Throwable_tag)))) }

parameter alloc_struct_Throwable_requires :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { ge_int(n, (0))} Object pointer
    writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_Throwable(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, Throwable_tag)))) }

parameter alloc_struct_intM :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { } Object pointer writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_intM(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, intM_tag)))) }

parameter alloc_struct_intM_requires :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { ge_int(n, (0))} Object pointer
    writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_intM(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, intM_tag)))) }

parameter interface_alloc_table : interface alloc_table ref

parameter interface_tag_table : interface tag_table ref

parameter alloc_struct_interface :
 n:int ->
  interface_alloc_table:interface alloc_table ref ->
   interface_tag_table:interface tag_table ref ->
    { } interface pointer writes interface_alloc_table,interface_tag_table
    { (strict_valid_struct_interface(result, (0), sub_int(n, (1)),
       interface_alloc_table)
      and (alloc_extends(interface_alloc_table@, interface_alloc_table)
          and (alloc_fresh(interface_alloc_table@, result, n)
              and instanceof(interface_tag_table, result, interface_tag)))) }

parameter alloc_struct_interface_requires :
 n:int ->
  interface_alloc_table:interface alloc_table ref ->
   interface_tag_table:interface tag_table ref ->
    { ge_int(n, (0))} interface pointer
    writes interface_alloc_table,interface_tag_table
    { (strict_valid_struct_interface(result, (0), sub_int(n, (1)),
       interface_alloc_table)
      and (alloc_extends(interface_alloc_table@, interface_alloc_table)
          and (alloc_fresh(interface_alloc_table@, result, n)
              and instanceof(interface_tag_table, result, interface_tag)))) }

parameter any_byte : unit -> { } byte { true }

parameter any_char : unit -> { } char { true }

parameter any_int32 : unit -> { } int32 { true }

parameter any_long : unit -> { } long { true }

parameter any_short : unit -> { } short { true }

parameter any_string_0 : tt:unit -> { } Object pointer { true }

parameter any_string_0_requires : tt:unit -> { } Object pointer { true }

parameter byte_of_integer_ :
 x:int ->
  { (le_int((-128), x) and le_int(x, (127)))} byte
  { eq_int(integer_of_byte(result), x) }

parameter char_of_integer_ :
 x:int ->
  { (le_int((0), x) and le_int(x, (65535)))} char
  { eq_int(integer_of_char(result), x) }

parameter cons_Muller :
 this_0:Object pointer ->
  Object_this_0_12_alloc_table:Object alloc_table -> { } unit { true }

parameter cons_Muller_requires :
 this_0:Object pointer ->
  Object_this_0_12_alloc_table:Object alloc_table -> { } unit { true }

parameter int32_of_integer_ :
 x:int ->
  { (le_int((-2147483648), x) and le_int(x, (2147483647)))} int32
  { eq_int(integer_of_int32(result), x) }

parameter java_array_length_intM :
 x_3:Object pointer ->
  Object_x_6_alloc_table:Object alloc_table ->
   { } int
   { (JC_25:
     (le_int(result, (2147483647))
     and (ge_int(result, (0))
         and (result = add_int(offset_max(Object_x_6_alloc_table, x_3), (1)))))) }

parameter java_array_length_intM_requires :
 x_3:Object pointer ->
  Object_x_6_alloc_table:Object alloc_table ->
   { } int
   { (JC_25:
     (le_int(result, (2147483647))
     and (ge_int(result, (0))
         and (result = add_int(offset_max(Object_x_6_alloc_table, x_3), (1)))))) }

parameter long_of_integer_ :
 x:int ->
  { (le_int((-9223372036854775808), x) and le_int(x, (9223372036854775807)))}
  long { eq_int(integer_of_long(result), x) }

parameter non_null_Object :
 x_4:Object pointer ->
  Object_x_7_alloc_table:Object alloc_table ->
   { } bool
   { (JC_38:
     (if result then (offset_max(Object_x_7_alloc_table, x_4) = (0))
      else (x_4 = null))) }

parameter non_null_Object_requires :
 x_4:Object pointer ->
  Object_x_7_alloc_table:Object alloc_table ->
   { } bool
   { (JC_38:
     (if result then (offset_max(Object_x_7_alloc_table, x_4) = (0))
      else (x_4 = null))) }

parameter non_null_intM :
 x_2:Object pointer ->
  Object_x_5_alloc_table:Object alloc_table ->
   { } bool
   { (JC_15:
     (if result
      then ge_int(offset_max(Object_x_5_alloc_table, x_2), neg_int((1)))
      else (x_2 = null))) }

parameter non_null_intM_requires :
 x_2:Object pointer ->
  Object_x_5_alloc_table:Object alloc_table ->
   { } bool
   { (JC_15:
     (if result
      then ge_int(offset_max(Object_x_5_alloc_table, x_2), neg_int((1)))
      else (x_2 = null))) }

parameter safe_byte_of_integer_ :
 x:int -> { } byte { eq_int(integer_of_byte(result), x) }

parameter safe_char_of_integer_ :
 x:int -> { } char { eq_int(integer_of_char(result), x) }

parameter safe_int32_of_integer_ :
 x:int -> { } int32 { eq_int(integer_of_int32(result), x) }

parameter safe_long_of_integer_ :
 x:int -> { } long { eq_int(integer_of_long(result), x) }

parameter safe_short_of_integer_ :
 x:int -> { } short { eq_int(integer_of_short(result), x) }

parameter short_of_integer_ :
 x:int ->
  { (le_int((-32768), x) and le_int(x, (32767)))} short
  { eq_int(integer_of_short(result), x) }

let Muller_m_ensures_default =
 fun (t_7 : Object pointer) (Object_Muller_m_11_alloc_table : Object alloc_table ref) (Object_Muller_m_11_tag_table : Object tag_table ref) (intM_intP_Muller_m_11 : (Object, int32) memory ref) (Object_t_7_9_alloc_table : Object alloc_table) (intM_intP_t_7_9 : (Object, int32) memory) ->
  { (left_valid_struct_intM(t_7, (0), Object_t_7_9_alloc_table)
    and (JC_41: Non_null_intM(t_7, Object_t_7_9_alloc_table))) }
  (init:
  (let return = ref (any_pointer void) in
  try
   begin
     (let count = ref (safe_int32_of_integer_ (K_39: (0))) in
     begin
       (let i_7 = ref (safe_int32_of_integer_ (K_2: (0))) in
       try
        (loop_3:
        while true do
        { invariant
            (JC_85:
            ((JC_80: le_int((0), integer_of_int32(i_7)))
            and ((JC_81:
                 le_int(integer_of_int32(i_7),
                 add_int(offset_max(Object_t_7_9_alloc_table, t_7), (1))))
                and ((JC_82: le_int((0), integer_of_int32(count)))
                    and ((JC_83:
                         le_int(integer_of_int32(count),
                         integer_of_int32(i_7)))
                        and (JC_84:
                            (integer_of_int32(count) = num_of_pos((0),
                                                       integer_of_int32(i_7),
                                                       t_7, intM_intP_t_7_9))))))))
           }
         begin
           [ { } unit { true } ];
          try
           begin
             (if (K_18:
                 ((lt_int_ (integer_of_int32 !i_7)) (K_17:
                                                    (let jessie_<num> = t_7 in
                                                    (JC_89:
                                                    ((java_array_length_intM jessie_<num>) Object_t_7_9_alloc_table))))))
             then
              (if (K_15:
                  ((gt_int_ (integer_of_int32 (K_14:
                                              ((safe_acc_ intM_intP_t_7_9) 
                                               ((shift t_7) (integer_of_int32 !i_7)))))) (0)))
              then
               (let jessie_<num> =
               (K_13:
               (let jessie_<num> = !count in
               begin
                 (let jessie_<num> =
                 (count := (safe_int32_of_integer_ ((add_int (integer_of_int32 jessie_<num>)) (1)))) in
                 void); jessie_<num> end)) in void) else void)
             else (raise (Loop_exit_exc void)));
            (raise (Loop_continue_exc void)) end with
           Loop_continue_exc jessie_<num> ->
           (let jessie_<num> =
           (K_16:
           (let jessie_<num> = !i_7 in
           begin
             (let jessie_<num> =
             (i_7 := (safe_int32_of_integer_ ((add_int (integer_of_int32 jessie_<num>)) (1)))) in
             void); jessie_<num> end)) in void) end end done) with
        Loop_exit_exc jessie_<num> -> void end);
      (let u =
      (K_38:
      (JC_90:
      (((alloc_struct_intM (integer_of_int32 !count)) Object_Muller_m_11_alloc_table) Object_Muller_m_11_tag_table))) in
      begin
        (let jessie_<num> = (count := (safe_int32_of_integer_ (0))) in void);
       (let i_8 = ref (safe_int32_of_integer_ (K_19: (0))) in
       try
        (loop_4:
        while true do
        { invariant
            (JC_96:
            ((JC_91: le_int((0), integer_of_int32(i_8)))
            and ((JC_92:
                 le_int(integer_of_int32(i_8),
                 add_int(offset_max(Object_t_7_9_alloc_table, t_7), (1))))
                and ((JC_93: le_int((0), integer_of_int32(count)))
                    and ((JC_94:
                         le_int(integer_of_int32(count),
                         integer_of_int32(i_8)))
                        and (JC_95:
                            (integer_of_int32(count) = num_of_pos((0),
                                                       integer_of_int32(i_8),
                                                       t_7, intM_intP_t_7_9))))))))
           }
         begin
           [ { } unit { true } ];
          try
           begin
             (if (K_37:
                 ((lt_int_ (integer_of_int32 !i_8)) (K_36:
                                                    (let jessie_<num> = t_7 in
                                                    (JC_100:
                                                    ((java_array_length_intM jessie_<num>) Object_t_7_9_alloc_table))))))
             then
              (if (K_34:
                  ((gt_int_ (integer_of_int32 (K_33:
                                              ((safe_acc_ intM_intP_t_7_9) 
                                               ((shift t_7) (integer_of_int32 !i_8)))))) (0)))
              then
               (let jessie_<num> =
               (K_32:
               (let jessie_<num> =
               (K_31:
               ((safe_acc_ intM_intP_t_7_9) ((shift t_7) (integer_of_int32 !i_8)))) in
               (let jessie_<num> = u in
               (let jessie_<num> =
               (integer_of_int32 (K_30:
                                 (let jessie_<num> = !count in
                                 begin
                                   (let jessie_<num> =
                                   (count := (safe_int32_of_integer_ 
                                              ((add_int (integer_of_int32 jessie_<num>)) (1)))) in
                                   void); jessie_<num> end))) in
               (let jessie_<num> = ((shift jessie_<num>) jessie_<num>) in
               (((safe_upd_ intM_intP_Muller_m_11) jessie_<num>) jessie_<num>)))))) in
               void) else void) else (raise (Loop_exit_exc void)));
            (raise (Loop_continue_exc void)) end with
           Loop_continue_exc jessie_<num> ->
           (let jessie_<num> =
           (K_35:
           (let jessie_<num> = !i_8 in
           begin
             (let jessie_<num> =
             (i_8 := (safe_int32_of_integer_ ((add_int (integer_of_int32 jessie_<num>)) (1)))) in
             void); jessie_<num> end)) in void) end end done) with
        Loop_exit_exc jessie_<num> -> void end); (return := u); (raise Return)
      end) end); absurd  end with Return -> !return end)) { (JC_43: true) }

let Muller_m_safety =
 fun (t_7 : Object pointer) (Object_Muller_m_11_alloc_table : Object alloc_table ref) (Object_Muller_m_11_tag_table : Object tag_table ref) (intM_intP_Muller_m_11 : (Object, int32) memory ref) (Object_t_7_9_alloc_table : Object alloc_table) (intM_intP_t_7_9 : (Object, int32) memory) ->
  { (left_valid_struct_intM(t_7, (0), Object_t_7_9_alloc_table)
    and (JC_41: Non_null_intM(t_7, Object_t_7_9_alloc_table))) }
  (init:
  (let return = ref (any_pointer void) in
  try
   begin
     (let count = ref (safe_int32_of_integer_ (K_39: (0))) in
     begin
       (let i_7 = ref (safe_int32_of_integer_ (K_2: (0))) in
       try
        (loop_1:
        while true do
        { invariant (JC_54: true)
          variant (JC_61 : sub_int(add_int(offset_max(Object_t_7_9_alloc_table,
                                           t_7),
                                   (1)),
                           integer_of_int32(i_7))) }
         begin
           [ { } unit reads count,i_7
             { (JC_52:
               ((JC_47: le_int((0), integer_of_int32(i_7)))
               and ((JC_48:
                    le_int(integer_of_int32(i_7),
                    add_int(offset_max(Object_t_7_9_alloc_table, t_7), (1))))
                   and ((JC_49: le_int((0), integer_of_int32(count)))
                       and ((JC_50:
                            le_int(integer_of_int32(count),
                            integer_of_int32(i_7)))
                           and (JC_51:
                               (integer_of_int32(count) = num_of_pos((0),
                                                          integer_of_int32(i_7),
                                                          t_7,
                                                          intM_intP_t_7_9)))))))) } ];
          try
           begin
             (if (K_18:
                 ((lt_int_ (integer_of_int32 !i_7)) (K_17:
                                                    (let jessie_<num> = t_7 in
                                                    (JC_57:
                                                    (assert
                                                    { ge_int(offset_max(Object_t_7_9_alloc_table,
                                                             jessie_<num>),
                                                      (-1)) };
                                                    (JC_56:
                                                    ((java_array_length_intM_requires jessie_<num>) Object_t_7_9_alloc_table))))))))
             then
              (if (K_15:
                  ((gt_int_ (integer_of_int32 (K_14:
                                              (JC_58:
                                              ((((offset_acc_ Object_t_7_9_alloc_table) intM_intP_t_7_9) t_7) 
                                               (integer_of_int32 !i_7)))))) (0)))
              then
               (let jessie_<num> =
               (K_13:
               (let jessie_<num> = !count in
               begin
                 (let jessie_<num> =
                 (count := (JC_59:
                           (int32_of_integer_ ((add_int (integer_of_int32 jessie_<num>)) (1))))) in
                 void); jessie_<num> end)) in void) else void)
             else (raise (Loop_exit_exc void)));
            (raise (Loop_continue_exc void)) end with
           Loop_continue_exc jessie_<num> ->
           (let jessie_<num> =
           (K_16:
           (let jessie_<num> = !i_7 in
           begin
             (let jessie_<num> =
             (i_7 := (JC_60:
                     (int32_of_integer_ ((add_int (integer_of_int32 jessie_<num>)) (1))))) in
             void); jessie_<num> end)) in void) end end done) with
        Loop_exit_exc jessie_<num> -> void end);
      (let u =
      (K_38:
      (JC_62:
      (((alloc_struct_intM_requires (integer_of_int32 !count)) Object_Muller_m_11_alloc_table) Object_Muller_m_11_tag_table))) in
      begin
        (let jessie_<num> = (count := (safe_int32_of_integer_ (0))) in void);
       (let i_8 = ref (safe_int32_of_integer_ (K_19: (0))) in
       try
        (loop_2:
        while true do
        { invariant (JC_70: true)
          variant (JC_79 : sub_int(add_int(offset_max(Object_t_7_9_alloc_table,
                                           t_7),
                                   (1)),
                           integer_of_int32(i_8))) }
         begin
           [ { } unit reads count,i_8
             { (JC_68:
               ((JC_63: le_int((0), integer_of_int32(i_8)))
               and ((JC_64:
                    le_int(integer_of_int32(i_8),
                    add_int(offset_max(Object_t_7_9_alloc_table, t_7), (1))))
                   and ((JC_65: le_int((0), integer_of_int32(count)))
                       and ((JC_66:
                            le_int(integer_of_int32(count),
                            integer_of_int32(i_8)))
                           and (JC_67:
                               (integer_of_int32(count) = num_of_pos((0),
                                                          integer_of_int32(i_8),
                                                          t_7,
                                                          intM_intP_t_7_9)))))))) } ];
          try
           begin
             (if (K_37:
                 ((lt_int_ (integer_of_int32 !i_8)) (K_36:
                                                    (let jessie_<num> = t_7 in
                                                    (JC_73:
                                                    (assert
                                                    { ge_int(offset_max(Object_t_7_9_alloc_table,
                                                             jessie_<num>),
                                                      (-1)) };
                                                    (JC_72:
                                                    ((java_array_length_intM_requires jessie_<num>) Object_t_7_9_alloc_table))))))))
             then
              (if (K_34:
                  ((gt_int_ (integer_of_int32 (K_33:
                                              (JC_74:
                                              ((((offset_acc_ Object_t_7_9_alloc_table) intM_intP_t_7_9) t_7) 
                                               (integer_of_int32 !i_8)))))) (0)))
              then
               (let jessie_<num> =
               (K_32:
               (let jessie_<num> =
               (K_31:
               (JC_75:
               ((((offset_acc_ Object_t_7_9_alloc_table) intM_intP_t_7_9) t_7) 
                (integer_of_int32 !i_8)))) in
               (let jessie_<num> = u in
               (let jessie_<num> =
               (integer_of_int32 (K_30:
                                 (let jessie_<num> = !count in
                                 begin
                                   (let jessie_<num> =
                                   (count := (JC_76:
                                             (int32_of_integer_ ((add_int 
                                                                  (integer_of_int32 jessie_<num>)) (1))))) in
                                   void); jessie_<num> end))) in
               (let jessie_<num> = ((shift jessie_<num>) jessie_<num>) in
               (JC_77:
               (((((offset_upd_ !Object_Muller_m_11_alloc_table) intM_intP_Muller_m_11) jessie_<num>) jessie_<num>) jessie_<num>))))))) in
               void) else void) else (raise (Loop_exit_exc void)));
            (raise (Loop_continue_exc void)) end with
           Loop_continue_exc jessie_<num> ->
           (let jessie_<num> =
           (K_35:
           (let jessie_<num> = !i_8 in
           begin
             (let jessie_<num> =
             (i_8 := (JC_78:
                     (int32_of_integer_ ((add_int (integer_of_int32 jessie_<num>)) (1))))) in
             void); jessie_<num> end)) in void) end end done) with
        Loop_exit_exc jessie_<num> -> void end); (return := u); (raise Return)
      end) end); absurd  end with Return -> !return end)) { true }

let cons_Muller_ensures_default =
 fun (this_0 : Object pointer) (Object_this_0_12_alloc_table : Object alloc_table) ->
  { valid_struct_Muller(this_0, (0), (0), Object_this_0_12_alloc_table) }
  (init: try begin   void; (raise Return) end with Return -> void end)
  { (JC_105: true) }

let cons_Muller_safety =
 fun (this_0 : Object pointer) (Object_this_0_12_alloc_table : Object alloc_table) ->
  { valid_struct_Muller(this_0, (0), (0), Object_this_0_12_alloc_table) }
  (init: try begin   void; (raise Return) end with Return -> void end)
  { true }


========== make project execution ==========
why --project [...] why/Muller.why
========== file tests/java/why/Muller.wpr ==========
<project name="Muller" context="why/Muller_ctx.why">
  <lemma name="num_of_pos_non_negative">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <goal why_file="why/Muller_po1.why">
      <location file = "HOME/tests/java/Muller.java" line = "51" begin = "10" end = "33"/>
      <explain kind = "Lemma"/>
    </goal>
  </lemma>
  <lemma name="num_of_pos_additive">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <goal why_file="why/Muller_po2.why">
      <location file = "HOME/tests/java/Muller.java" line = "55" begin = "10" end = "29"/>
      <explain kind = "Lemma"/>
    </goal>
  </lemma>
  <lemma name="num_of_pos_increasing">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <goal why_file="why/Muller_po3.why">
      <location file = "HOME/tests/java/Muller.java" line = "60" begin = "10" end = "31"/>
      <explain kind = "Lemma"/>
    </goal>
  </lemma>
  <lemma name="num_of_pos_strictly_increasing">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <goal why_file="why/Muller_po4.why">
      <location file = "HOME/tests/java/Muller.java" line = "65" begin = "10" end = "40"/>
      <explain kind = "Lemma"/>
    </goal>
  </lemma>
  <function name="Method m">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="default behavior">
    <goal why_file="why/Muller_po5.why">
      <location file = "HOME/tests/java/Muller.java" line = "79" begin = "8" end = "14"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/Muller_po6.why">
      <location file = "HOME/tests/java/Muller.java" line = "79" begin = "13" end = "26"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/Muller_po7.why">
      <location file = "HOME/tests/java/Muller.java" line = "80" begin = "8" end = "18"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/Muller_po8.why">
      <location file = "HOME/tests/java/Muller.java" line = "80" begin = "13" end = "23"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/Muller_po9.why">
      <location file = "HOME/tests/java/Muller.java" line = "81" begin = "8" end = "34"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/Muller_po10.why">
      <location file = "HOME/tests/java/Muller.java" line = "79" begin = "8" end = "14"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po11.why">
      <location file = "HOME/tests/java/Muller.java" line = "79" begin = "13" end = "26"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po12.why">
      <location file = "HOME/tests/java/Muller.java" line = "80" begin = "8" end = "18"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po13.why">
      <location file = "HOME/tests/java/Muller.java" line = "80" begin = "13" end = "23"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po14.why">
      <location file = "HOME/tests/java/Muller.java" line = "81" begin = "8" end = "34"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po15.why">
      <location file = "HOME/tests/java/Muller.java" line = "79" begin = "8" end = "14"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po16.why">
      <location file = "HOME/tests/java/Muller.java" line = "79" begin = "13" end = "26"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po17.why">
      <location file = "HOME/tests/java/Muller.java" line = "80" begin = "8" end = "18"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po18.why">
      <location file = "HOME/tests/java/Muller.java" line = "80" begin = "13" end = "23"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po19.why">
      <location file = "HOME/tests/java/Muller.java" line = "81" begin = "8" end = "34"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po20.why">
      <location file = "HOME/tests/java/Muller.java" line = "90" begin = "8" end = "14"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/Muller_po21.why">
      <location file = "HOME/tests/java/Muller.java" line = "90" begin = "13" end = "26"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/Muller_po22.why">
      <location file = "HOME/tests/java/Muller.java" line = "91" begin = "8" end = "18"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/Muller_po23.why">
      <location file = "HOME/tests/java/Muller.java" line = "91" begin = "13" end = "23"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/Muller_po24.why">
      <location file = "HOME/tests/java/Muller.java" line = "92" begin = "8" end = "34"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/Muller_po25.why">
      <location file = "HOME/tests/java/Muller.java" line = "90" begin = "8" end = "14"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po26.why">
      <location file = "HOME/tests/java/Muller.java" line = "90" begin = "13" end = "26"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po27.why">
      <location file = "HOME/tests/java/Muller.java" line = "91" begin = "8" end = "18"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po28.why">
      <location file = "HOME/tests/java/Muller.java" line = "91" begin = "13" end = "23"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po29.why">
      <location file = "HOME/tests/java/Muller.java" line = "92" begin = "8" end = "34"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po30.why">
      <location file = "HOME/tests/java/Muller.java" line = "90" begin = "8" end = "14"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po31.why">
      <location file = "HOME/tests/java/Muller.java" line = "90" begin = "13" end = "26"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po32.why">
      <location file = "HOME/tests/java/Muller.java" line = "91" begin = "8" end = "18"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po33.why">
      <location file = "HOME/tests/java/Muller.java" line = "91" begin = "13" end = "23"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/Muller_po34.why">
      <location file = "HOME/tests/java/Muller.java" line = "92" begin = "8" end = "34"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    </behavior>
    <behavior name="Safety">
    <goal why_file="why/Muller_po35.why">
      <location file = "why/Muller.why" line = "902" begin = "54" end = "230"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/Muller_po36.why">
      <location file = "HOME/tests/java/Muller.java" line = "84" begin = "39" end = "43"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/Muller_po37.why">
      <location file = "HOME/tests/java/Muller.java" line = "84" begin = "39" end = "43"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/Muller_po38.why">
      <location file = "HOME/tests/java/Muller.jc" line = "160" begin = "69" end = "77"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/Muller_po39.why">
      <location file = "HOME/tests/java/Muller.jc" line = "160" begin = "69" end = "77"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/Muller_po40.why">
      <location file = "HOME/tests/java/Muller.jc" line = "158" begin = "24" end = "30"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/Muller_po41.why">
      <location file = "HOME/tests/java/Muller.jc" line = "158" begin = "24" end = "30"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/Muller_po42.why">
      <location file = "HOME/tests/java/Muller.java" line = "82" begin = "18" end = "30"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/Muller_po43.why">
      <location file = "HOME/tests/java/Muller.java" line = "82" begin = "18" end = "30"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/Muller_po44.why">
      <location file = "HOME/tests/java/Muller.jc" line = "158" begin = "24" end = "30"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/Muller_po45.why">
      <location file = "HOME/tests/java/Muller.jc" line = "158" begin = "24" end = "30"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/Muller_po46.why">
      <location file = "HOME/tests/java/Muller.java" line = "82" begin = "18" end = "30"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/Muller_po47.why">
      <location file = "HOME/tests/java/Muller.java" line = "82" begin = "18" end = "30"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/Muller_po48.why">
      <location file = "HOME/tests/java/Muller.java" line = "86" begin = "11" end = "25"/>
      <explain kind = "Pre"
text = "AllocSize"/>
    </goal>
    <goal why_file="why/Muller_po49.why">
      <location file = "HOME/tests/java/Muller.java" line = "96" begin = "9" end = "13"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/Muller_po50.why">
      <location file = "HOME/tests/java/Muller.java" line = "96" begin = "9" end = "13"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/Muller_po51.why">
      <location file = "HOME/tests/java/Muller.jc" line = "197" begin = "47" end = "55"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/Muller_po52.why">
      <location file = "HOME/tests/java/Muller.jc" line = "197" begin = "47" end = "55"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/Muller_po53.why">
      <location file = "HOME/tests/java/Muller.java" line = "96" begin = "19" end = "36"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/Muller_po54.why">
      <location file = "HOME/tests/java/Muller.java" line = "96" begin = "19" end = "36"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/Muller_po55.why">
      <location file = "HOME/tests/java/Muller.jc" line = "195" begin = "30" end = "36"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/Muller_po56.why">
      <location file = "HOME/tests/java/Muller.jc" line = "195" begin = "30" end = "36"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/Muller_po57.why">
      <location file = "HOME/tests/java/Muller.java" line = "93" begin = "18" end = "30"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/Muller_po58.why">
      <location file = "HOME/tests/java/Muller.java" line = "93" begin = "18" end = "30"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/Muller_po59.why">
      <location file = "HOME/tests/java/Muller.jc" line = "195" begin = "30" end = "36"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/Muller_po60.why">
      <location file = "HOME/tests/java/Muller.jc" line = "195" begin = "30" end = "36"/>
      <explain kind = "Pre"
text = "ArithOverflow"/>
    </goal>
    <goal why_file="why/Muller_po61.why">
      <location file = "HOME/tests/java/Muller.java" line = "93" begin = "18" end = "30"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/Muller_po62.why">
      <location file = "HOME/tests/java/Muller.java" line = "93" begin = "18" end = "30"/>
      <explain kind = "VarDecr"/>
    </goal>
    </behavior>
  </function>
  <function name="Lemma num_of_pos_strictly_increasing">
    <location file = "" line = "0" begin = "0" end = "0"/>
  </function>
  <function name="Lemma num_of_pos_non_negative">
    <location file = "" line = "0" begin = "0" end = "0"/>
  </function>
  <function name="Lemma num_of_pos_increasing">
    <location file = "" line = "0" begin = "0" end = "0"/>
  </function>
  <function name="Lemma num_of_pos_additive">
    <location file = "" line = "0" begin = "0" end = "0"/>
  </function>
  <function name="Constructor of class Muller">
    <location file = "" line = "0" begin = "0" end = "0"/>
  </function>
</project>
========== file tests/java/why/Muller_ctx.why ==========
logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

logic bool_and : bool, bool -> bool

logic bool_or : bool, bool -> bool

logic bool_xor : bool, bool -> bool

logic bool_not : bool -> bool

axiom bool_and_def:
  (forall a:bool.
    (forall b:bool.
      ((bool_and(a, b) = true) <-> ((a = true) and (b = true)))))

axiom bool_or_def:
  (forall a:bool.
    (forall b:bool. ((bool_or(a, b) = true) <-> ((a = true) or (b = true)))))

axiom bool_xor_def:
  (forall a:bool. (forall b:bool. ((bool_xor(a, b) = true) <-> (a <> b))))

axiom bool_not_def: (forall a:bool. ((bool_not(a) = true) <-> (a = false)))

logic ite : bool, 'a1, 'a1 -> 'a1

axiom ite_true: (forall x:'a1. (forall y:'a1. (ite(true, x, y) = x)))

axiom ite_false: (forall x:'a1. (forall y:'a1. (ite(false, x, y) = y)))

logic lt_int_bool : int, int -> bool

logic le_int_bool : int, int -> bool

logic gt_int_bool : int, int -> bool

logic ge_int_bool : int, int -> bool

logic eq_int_bool : int, int -> bool

logic neq_int_bool : int, int -> bool

axiom lt_int_bool_axiom:
  (forall x:int. (forall y:int. ((lt_int_bool(x, y) = true) <-> (x < y))))

axiom le_int_bool_axiom:
  (forall x:int. (forall y:int. ((le_int_bool(x, y) = true) <-> (x <= y))))

axiom gt_int_bool_axiom:
  (forall x:int. (forall y:int. ((gt_int_bool(x, y) = true) <-> (x > y))))

axiom ge_int_bool_axiom:
  (forall x:int. (forall y:int. ((ge_int_bool(x, y) = true) <-> (x >= y))))

axiom eq_int_bool_axiom:
  (forall x:int. (forall y:int. ((eq_int_bool(x, y) = true) <-> (x = y))))

axiom neq_int_bool_axiom:
  (forall x:int. (forall y:int. ((neq_int_bool(x, y) = true) <-> (x <> y))))

logic abs_int : int -> int

axiom abs_int_pos: (forall x:int. ((x >= 0) -> (abs_int(x) = x)))

axiom abs_int_neg: (forall x:int. ((x <= 0) -> (abs_int(x) = (-x))))

logic int_max : int, int -> int

logic int_min : int, int -> int

axiom int_max_is_ge:
  (forall x:int.
    (forall y:int. ((int_max(x, y) >= x) and (int_max(x, y) >= y))))

axiom int_max_is_some:
  (forall x:int.
    (forall y:int. ((int_max(x, y) = x) or (int_max(x, y) = y))))

axiom int_min_is_le:
  (forall x:int.
    (forall y:int. ((int_min(x, y) <= x) and (int_min(x, y) <= y))))

axiom int_min_is_some:
  (forall x:int.
    (forall y:int. ((int_min(x, y) = x) or (int_min(x, y) = y))))

logic lt_real : real, real -> prop

logic le_real : real, real -> prop

logic gt_real : real, real -> prop

logic ge_real : real, real -> prop

logic eq_real : real, real -> prop

logic neq_real : real, real -> prop

logic add_real : real, real -> real

logic sub_real : real, real -> real

logic mul_real : real, real -> real

logic div_real : real, real -> real

logic neg_real : real -> real

logic real_of_int : int -> real

axiom real_of_int_zero: (real_of_int(0) = 0.0)

axiom real_of_int_one: (real_of_int(1) = 1.0)

axiom real_of_int_add:
  (forall x:int.
    (forall y:int.
      (real_of_int((x + y)) = (real_of_int(x) + real_of_int(y)))))

axiom real_of_int_sub:
  (forall x:int.
    (forall y:int.
      (real_of_int((x - y)) = (real_of_int(x) - real_of_int(y)))))

logic truncate_real_to_int : real -> int

axiom truncate_down_pos:
  (forall x:real.
    ((x >= 0.0) ->
     ((real_of_int(truncate_real_to_int(x)) <= x) and
      (x < real_of_int((truncate_real_to_int(x) + 1))))))

axiom truncate_up_neg:
  (forall x:real.
    ((x <= 0.0) ->
     ((real_of_int((truncate_real_to_int(x) - 1)) < x) and
      (x <= real_of_int(truncate_real_to_int(x))))))

logic floor_real_to_int : real -> int

logic ceil_real_to_int : real -> int

logic lt_real_bool : real, real -> bool

logic le_real_bool : real, real -> bool

logic gt_real_bool : real, real -> bool

logic ge_real_bool : real, real -> bool

logic eq_real_bool : real, real -> bool

logic neq_real_bool : real, real -> bool

axiom lt_real_bool_axiom:
  (forall x:real. (forall y:real. ((lt_real_bool(x, y) = true) <-> (x < y))))

axiom le_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((le_real_bool(x, y) = true) <-> (x <= y))))

axiom gt_real_bool_axiom:
  (forall x:real. (forall y:real. ((gt_real_bool(x, y) = true) <-> (x > y))))

axiom ge_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((ge_real_bool(x, y) = true) <-> (x >= y))))

axiom eq_real_bool_axiom:
  (forall x:real. (forall y:real. ((eq_real_bool(x, y) = true) <-> (x = y))))

axiom neq_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((neq_real_bool(x, y) = true) <-> (x <> y))))

logic real_max : real, real -> real

logic real_min : real, real -> real

axiom real_max_is_ge:
  (forall x:real.
    (forall y:real. ((real_max(x, y) >= x) and (real_max(x, y) >= y))))

axiom real_max_is_some:
  (forall x:real.
    (forall y:real. ((real_max(x, y) = x) or (real_max(x, y) = y))))

axiom real_min_is_le:
  (forall x:real.
    (forall y:real. ((real_min(x, y) <= x) and (real_min(x, y) <= y))))

axiom real_min_is_some:
  (forall x:real.
    (forall y:real. ((real_min(x, y) = x) or (real_min(x, y) = y))))

function sqr_real(x: real) : real = (x * x)

logic sqrt_real : real -> real

axiom sqrt_pos: (forall x:real. ((x >= 0.0) -> (sqrt_real(x) >= 0.0)))

axiom sqrt_sqr: (forall x:real. ((x >= 0.0) -> (sqr_real(sqrt_real(x)) = x)))

axiom sqr_sqrt: (forall x:real. ((x >= 0.0) -> (sqrt_real((x * x)) = x)))

logic abs_real : real -> real

axiom abs_real_pos:
  (forall x:real [abs_real(x)]. ((x >= 0.0) -> (abs_real(x) = x)))

axiom abs_real_neg:
  (forall x:real [abs_real(x)]. ((x <= 0.0) -> (abs_real(x) = (-x))))

logic exp : real -> real

logic log : real -> real

logic log10 : real -> real

axiom log_exp: (forall x:real. (log(exp(x)) = x))

axiom exp_log: (forall x:real. ((x > 0.0) -> (exp(log(x)) = x)))

logic pow_real_int : real, int -> real

logic pow_real : real, real -> real

logic cos : real -> real

logic sin : real -> real

logic tan : real -> real

logic pi : real

logic cosh : real -> real

logic sinh : real -> real

logic tanh : real -> real

logic acos : real -> real

logic asin : real -> real

logic atan : real -> real

logic atan2 : real, real -> real

logic hypot : real, real -> real

axiom prod_pos:
  (forall x:real.
    (forall y:real.
      ((((x > 0.0) and (y > 0.0)) -> ((x * y) > 0.0)) and
       (((x < 0.0) and (y < 0.0)) -> ((x * y) > 0.0)))))

axiom abs_minus: (forall x:real. (abs_real((-x)) = abs_real(x)))

logic computer_div : int, int -> int

logic computer_mod : int, int -> int

logic math_div : int, int -> int

logic math_mod : int, int -> int

axiom math_div_mod:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> (x = ((y * math_div(x, y)) + math_mod(x, y))))))

axiom math_mod_bound:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> ((0 <= math_mod(x, y)) and (math_mod(x, y) < abs_int(y))))))

axiom computer_div_mod:
  (forall x:int.
    (forall y:int [computer_div(x, y), computer_mod(x, y)].
      ((y <> 0) -> (x = ((y * computer_div(x, y)) + computer_mod(x, y))))))

axiom computer_div_bound:
  (forall x:int.
    (forall y:int.
      (((x >= 0) and (y > 0)) ->
       ((0 <= computer_div(x, y)) and (computer_div(x, y) <= x)))))

axiom computer_mod_bound:
  (forall x:int.
    (forall y:int. ((y <> 0) -> (abs_int(computer_mod(x, y)) < abs_int(y)))))

axiom computer_mod_sign_pos:
  (forall x:int.
    (forall y:int. (((x >= 0) and (y <> 0)) -> (computer_mod(x, y) >= 0))))

axiom computer_mod_sign_neg:
  (forall x:int.
    (forall y:int. (((x <= 0) and (y <> 0)) -> (computer_mod(x, y) <= 0))))

axiom computer_rounds_toward_zero:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> (abs_int((computer_div(x, y) * y)) <= abs_int(x)))))

type 't alloc_table

type 't pointer

type 't block

logic base_block : 'a1 pointer -> 'a1 block

logic offset_max : 'a1 alloc_table, 'a1 pointer -> int

logic offset_min : 'a1 alloc_table, 'a1 pointer -> int

predicate valid(a: 'a1 alloc_table, p: 'a1 pointer) =
  ((offset_min(a, p) <= 0) and (offset_max(a, p) >= 0))

predicate same_block(p: 'a1 pointer, q: 'a1 pointer) =
  (base_block(p) = base_block(q))

logic sub_pointer : 'a1 pointer, 'a1 pointer -> int

logic shift : 'a1 pointer, int -> 'a1 pointer

logic null : 'a1 pointer

logic pointer_address : 'a1 pointer -> unit pointer

logic absolute_address : int -> unit pointer

logic address : 'a1 pointer -> int

axiom address_injective:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. ((p = q) <-> (address(p) = address(q)))))

axiom address_null: (address(null) = 0)

axiom address_shift_lt:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) < address(shift(p, j))) <-> (i < j)))))

axiom address_shift_le:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) <= address(shift(p, j))) <-> (i <= j)))))

axiom shift_zero: (forall p:'a1 pointer [shift(p, 0)]. (shift(p, 0) = p))

axiom shift_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(shift(p, i), j)]. (shift(shift(p, i),
        j) = shift(p, (i + j))))))

axiom offset_max_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_max(a, shift(p, i)) = (offset_max(a, p) - i)))))

axiom offset_min_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_min(a, shift(p, i)) = (offset_min(a, p) - i)))))

axiom neq_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(p, i), shift(p, j)].
        ((i <> j) -> (shift(p, i) <> shift(p, j))))))

axiom null_not_valid: (forall a:'a1 alloc_table. (not valid(a, null)))

axiom null_pointer:
  (forall a:'a1 alloc_table.
    ((offset_min(a, null) >= 0) and (offset_max(a, null) <= (-2))))

logic eq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

logic neq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

axiom eq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer. ((eq_pointer_bool(p1, p2) = true) <-> (p1 = p2))))

axiom neq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer.
      ((neq_pointer_bool(p1, p2) = true) <-> (p1 <> p2))))

axiom same_block_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(p, shift(q, i))].
        (same_block(p, q) -> same_block(p, shift(q, i))))))

axiom same_block_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(shift(q, i), p)].
        (same_block(q, p) -> same_block(shift(q, i), p)))))

axiom sub_pointer_shift:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> (p = shift(q, sub_pointer(p, q))))))

axiom sub_pointer_self:
  (forall p:'a1 pointer [sub_pointer(p, p)]. (sub_pointer(p, p) = 0))

axiom sub_pointer_zero:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> ((sub_pointer(p, q) = 0) -> (p = q)))))

axiom sub_pointer_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(shift(p, i), q)]. (sub_pointer(shift(p, i),
        q) = (sub_pointer(p, q) + i)))))

axiom sub_pointer_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(p, shift(q, i))]. (sub_pointer(p, shift(q,
        i)) = (sub_pointer(p, q) - i)))))

type ('t, 'v) memory

logic select : ('a2, 'a1) memory, 'a2 pointer -> 'a1

logic store : ('a1, 'a2) memory, 'a1 pointer, 'a2 -> ('a1, 'a2) memory

axiom select_store_eq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 = p2) -> (select(store(m, p1, a), p2) = a))))))

axiom select_store_neq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 <> p2) -> (select(store(m, p1, a), p2) = select(m, p2)))))))

type 't pset

logic pset_empty : 'a1 pset

logic pset_singleton : 'a1 pointer -> 'a1 pset

logic pset_deref : ('a2, 'a1 pointer) memory, 'a2 pset -> 'a1 pset

logic pset_union : 'a1 pset, 'a1 pset -> 'a1 pset

logic pset_all : 'a1 pset -> 'a1 pset

logic pset_range : 'a1 pset, int, int -> 'a1 pset

logic pset_range_left : 'a1 pset, int -> 'a1 pset

logic pset_range_right : 'a1 pset, int -> 'a1 pset

logic in_pset : 'a1 pointer, 'a1 pset -> prop

logic valid_pset : 'a1 alloc_table, 'a1 pset -> prop

predicate pset_disjoint(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (not (in_pset(p, ps1) and in_pset(p, ps2))))

predicate pset_included(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (in_pset(p, ps1) -> in_pset(p, ps2)))

axiom pset_included_self: (forall ps:'a1 pset. pset_included(ps, ps))

axiom pset_included_range:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))].
            (((c <= a) and (b <= d)) -> pset_included(pset_range(ps, a, b),
             pset_range(ps, c, d))))))))

axiom pset_included_range_all:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))]. pset_included(pset_range(ps, a, b), pset_all(ps)))))))

axiom in_pset_empty: (forall p:'a1 pointer. (not in_pset(p, pset_empty)))

axiom in_pset_singleton:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. (in_pset(p, pset_singleton(q)) <-> (p = q))))

axiom in_pset_deref:
  (forall p:'a1 pointer.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (in_pset(p, pset_deref(m, q)) <->
         (exists r:'a2 pointer. (in_pset(r, q) and (p = select(m, r))))))))

axiom in_pset_all:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (in_pset(p, pset_all(q)) <->
       (exists i:int.
         (exists r:'a1 pointer. (in_pset(r, q) and (p = shift(r, i))))))))

axiom in_pset_range:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (forall b:int.
          (in_pset(p, pset_range(q, a, b)) <->
           (exists i:int.
             (exists r:'a1 pointer.
               ((a <= i) and
                ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))))

axiom in_pset_range_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall b:int.
        (in_pset(p, pset_range_left(q, b)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_range_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (in_pset(p, pset_range_right(q, a)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((a <= i) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_union:
  (forall p:'a1 pointer.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (in_pset(p, pset_union(s1, s2)) <->
         (in_pset(p, s1) or in_pset(p, s2))))))

axiom valid_pset_empty: (forall a:'a1 alloc_table. valid_pset(a, pset_empty))

axiom valid_pset_singleton:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (valid_pset(a, pset_singleton(p)) <-> valid(a, p))))

axiom valid_pset_deref:
  (forall a:'a1 alloc_table.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (valid_pset(a, pset_deref(m, q)) <->
         (forall r:'a2 pointer.
           (forall p:'a1 pointer.
             ((in_pset(r, q) and (p = select(m, r))) -> valid(a, p))))))))

axiom valid_pset_range:
  (forall a:'a1 alloc_table.
    (forall q:'a1 pset.
      (forall c:int.
        (forall d:int.
          (valid_pset(a, pset_range(q, c, d)) <->
           (forall i:int.
             (forall r:'a1 pointer.
               ((in_pset(r, q) and ((c <= i) and (i <= d))) -> valid(a,
                shift(r, i))))))))))

axiom valid_pset_union:
  (forall a:'a1 alloc_table.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (valid_pset(a, pset_union(s1, s2)) <->
         (valid_pset(a, s1) and valid_pset(a, s2))))))

predicate not_assigns(a: 'a1 alloc_table, m1: ('a1, 'a2) memory, m2: ('a1,
  'a2) memory, l: 'a1 pset) =
  (forall p:'a1 pointer.
    ((valid(a, p) and (not in_pset(p, l))) -> (select(m2, p) = select(m1, p))))

axiom not_assigns_refl:
  (forall a:'a1 alloc_table.
    (forall m:('a1, 'a2) memory.
      (forall l:'a1 pset. not_assigns(a, m, m, l))))

axiom not_assigns_trans:
  (forall a:'a1 alloc_table.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory.
          (forall l:'a1 pset [not_assigns(a, m1, m2, l), not_assigns(a, m1,
            m3, l)].
            (not_assigns(a, m1, m2, l) ->
             (not_assigns(a, m2, m3, l) -> not_assigns(a, m1, m3, l))))))))

logic full_separated : 'a1 pointer, 'a2 pointer -> prop

axiom full_separated_shift1:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(p, shift(q, i))))))

axiom full_separated_shift2:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift3:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift4:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(p, shift(q, i))))))

type 't tag_table

type 't tag_id

logic int_of_tag : 'a1 tag_id -> int

logic typeof : 'a1 tag_table, 'a1 pointer -> 'a1 tag_id

logic parenttag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag_bool : 'a1 tag_id, 'a1 tag_id -> bool

axiom subtag_bool_def:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id. ((subtag_bool(t1, t2) = true) <-> subtag(t1, t2))))

axiom subtag_refl: (forall t:'a1 tag_id. subtag(t, t))

axiom subtag_parent:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id.
      (forall t3:'a1 tag_id.
        (subtag(t1, t2) -> (parenttag(t2, t3) -> subtag(t1, t3))))))

predicate instanceof(a: 'a1 tag_table, p: 'a1 pointer, t: 'a1 tag_id) =
  subtag(typeof(a, p), t)

logic downcast : 'a1 tag_table, 'a1 pointer, 'a1 tag_id -> 'a1 pointer

axiom downcast_instanceof:
  (forall a:'a1 tag_table.
    (forall p:'a1 pointer.
      (forall s:'a1 tag_id. (instanceof(a, p, s) -> (downcast(a, p, s) = p)))))

logic bottom_tag : 'a1 tag_id

axiom bottom_tag_axiom: (forall t:'a1 tag_id. subtag(t, bottom_tag))

predicate root_tag(t: 'a1 tag_id) = parenttag(t, bottom_tag)

axiom root_subtag:
  (forall a:'a1 tag_id.
    (forall b:'a1 tag_id.
      (forall c:'a1 tag_id.
        (root_tag(a) ->
         (root_tag(b) -> ((a <> b) -> (subtag(c, a) -> (not subtag(c, b)))))))))

predicate fully_packed(tag_table: 'a1 tag_table, mutable: ('a1,
  'a1 tag_id) memory, this: 'a1 pointer) = (select(mutable,
  this) = typeof(tag_table, this))

logic bw_compl : int -> int

logic bw_and : int, int -> int

axiom bw_and_not_null:
  (forall a:int.
    (forall b:int. ((bw_and(a, b) <> 0) -> ((a <> 0) and (b <> 0)))))

logic bw_xor : int, int -> int

logic bw_or : int, int -> int

logic lsl : int, int -> int

axiom lsl_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsl(a, b)))))

axiom lsl_left_positive_monotone:
  (forall a1:int.
    (forall a2:int.
      (forall b:int.
        (((0 <= a1) and ((a1 <= a2) and (0 <= b))) -> (lsl(a1, b) <= lsl(a2,
         b))))))

logic lsr : int, int -> int

axiom lsr_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsr(a, b)))))

axiom lsr_left_positive_decreases:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(a, b) <= a))))

logic asr : int, int -> int

axiom asr_positive_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= asr(a, b)))))

axiom asr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) <= a))))

axiom asr_lsr_same_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) = lsr(a, b)))))

axiom lsl_of_lsr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsl(lsr(a, b), b) <= a))))

axiom lsr_of_lsl_identity_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(lsl(a, b), b) = a))))

logic alloc_extends : 'a1 alloc_table, 'a1 alloc_table -> prop

predicate alloc_fresh(a: 'a1 alloc_table, p: 'a1 pointer, n: int) =
  (forall i:int. (((0 <= i) and (i < n)) -> (not valid(a, shift(p, i)))))

axiom alloc_extends_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_min(a1, p) = offset_min(a2, p)))))))

axiom alloc_extends_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_max(a1, p) = offset_max(a2, p)))))))

axiom alloc_extends_not_assigns_empty:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory.
          (forall l:'a1 pset.
            (forall p:'a1 pointer.
              (forall n:int [alloc_extends(a1, a2), alloc_fresh(a1, p, n),
                not_assigns(a2, m1, m2, l)].
                ((alloc_extends(a1, a2) and
                  (alloc_fresh(a1, p, n) and
                   (not_assigns(a2, m1, m2, l) and pset_included(l,
                    pset_all(pset_singleton(p)))))) ->
                 not_assigns(a1, m1, m2, pset_empty)))))))))

logic alloc_extends_except : 'a1 alloc_table, 'a1 alloc_table,
'a1 pset -> prop

axiom alloc_extends_except_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_min(a1,
            p) = offset_min(a2, p))))))))

axiom alloc_extends_except_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_max(a1,
            p) = offset_max(a2, p))))))))

type 'a mybag

logic in_mybag : 'a1, 'a1 mybag -> prop

logic disj_mybag : 'a1 mybag, 'a1 mybag -> prop

axiom disj_sym:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag [disj_mybag(s1, s2)].
      (disj_mybag(s1, s2) -> disj_mybag(s2, s1))))

logic sub_mybag : 'a1 mybag, 'a1 mybag -> prop

axiom sub_refl:
  (forall sa:'a1 pointer mybag [sub_mybag(sa, sa)]. sub_mybag(sa, sa))

axiom sub_disj:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall s3:'a1 mybag [disj_mybag(s1, s2), sub_mybag(s2, s3)|
        disj_mybag(s1, s3), sub_mybag(s2, s3)].
        (disj_mybag(s1, s3) -> (sub_mybag(s2, s3) -> disj_mybag(s1, s2))))))

axiom sub_in:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall p:'a1 [in_mybag(p, s1), sub_mybag(s1, s2)| in_mybag(p, s2),
        sub_mybag(s1, s2)].
        ((not in_mybag(p, s2)) ->
         (sub_mybag(s1, s2) -> (not in_mybag(p, s1)))))))

axiom sub_sub:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall s3:'a1 mybag [sub_mybag(s1, s3), sub_mybag(s2, s3)|
        sub_mybag(s1, s3), sub_mybag(s1, s2)].
        (sub_mybag(s1, s2) -> (sub_mybag(s2, s3) -> sub_mybag(s1, s3))))))

logic frame_between : 'a1 pointer mybag, ('a1, 'a2) memory, ('a1,
'a2) memory -> prop

axiom frame_between_refl:
  (forall sa:'a1 pointer mybag.
    (forall m:('a1, 'a2) memory [frame_between(sa, m, m)]. frame_between(sa,
      m, m)))

axiom frame_between_gen:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall p:'a1 pointer.
          (forall v:'a2 [frame_between(sa, m1, store(m2, p, v))].
            (frame_between(sa, m1, m2) ->
             (in_mybag(p, sa) -> frame_between(sa, store(m1, p, v), m2))))))))

axiom frame_between_gen2:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory [frame_between(sa, m1, m2),
          frame_between(sa, m1, m3)| frame_between(sa, m2, m3),
          frame_between(sa, m1, m3)].
          (frame_between(sa, m1, m2) ->
           (frame_between(sa, m2, m3) -> frame_between(sa, m1, m3)))))))

axiom frame_between_gen_sub1:
  (forall s12:'a1 pointer mybag.
    (forall s23:'a1 pointer mybag.
      (forall s13:'a1 pointer mybag.
        (forall m1:('a1, 'a2) memory.
          (forall m2:('a1, 'a2) memory.
            (forall m3:('a1, 'a2) memory [frame_between(s12, m1, m2),
              frame_between(s13, m1, m3)].
              (sub_mybag(s12, s13) ->
               (frame_between(s12, m1, m2) ->
                (frame_between(s23, m2, m3) -> frame_between(s13, m1, m3))))))))))

axiom frame_between_gen_sub2:
  (forall s12:'a1 pointer mybag.
    (forall s23:'a1 pointer mybag.
      (forall s13:'a1 pointer mybag.
        (forall m1:('a1, 'a2) memory.
          (forall m2:('a1, 'a2) memory.
            (forall m3:('a1, 'a2) memory [frame_between(s23, m2, m3),
              frame_between(s13, m1, m3)].
              (frame_between(s12, m1, m2) ->
               (sub_mybag(s23, s13) ->
                (frame_between(s23, m2, m3) -> frame_between(s13, m1, m3))))))))))

axiom frame_between_pointer:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall p:'a1 pointer.
          (forall v:'a2 [frame_between(sa, m1, m2), select(m1, p)|
            frame_between(sa, m1, m2), select(m2, p)].
            (frame_between(sa, m1, m2) ->
             ((not in_mybag(p, sa)) -> (select(m1, p) = select(m2, p)))))))))

axiom frame_between_sub:
  (forall sa:'a1 pointer mybag.
    (forall sb:'a1 pointer mybag.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory [frame_between(sa, m1, m2),
          sub_mybag(sa, sb)].
          (frame_between(sa, m1, m2) ->
           (sub_mybag(sa, sb) -> frame_between(sb, m1, m2)))))))

type Object

type byte

type char

type int32

type interface

type long

type short

logic Exception_tag : Object tag_id

logic Object_tag : Object tag_id

axiom Exception_parenttag_Object: parenttag(Exception_tag, Object_tag)

logic Muller_tag : Object tag_id

axiom Muller_parenttag_Object: parenttag(Muller_tag, Object_tag)

predicate Non_null_Object(x_1: Object pointer,
  Object_x_2_alloc_table: Object alloc_table) =
  (offset_max(Object_x_2_alloc_table, x_1) >= 0)

predicate Non_null_intM(x_0: Object pointer,
  Object_x_1_alloc_table: Object alloc_table) =
  (offset_max(Object_x_1_alloc_table, x_0) >= (-1))

axiom Object_int: (int_of_tag(Object_tag) = 1)

logic Object_of_pointer_address : unit pointer -> Object pointer

axiom Object_of_pointer_address_of_pointer_addr:
  (forall p:Object pointer.
    (p = Object_of_pointer_address(pointer_address(p))))

axiom Object_parenttag_bottom: parenttag(Object_tag, bottom_tag)

axiom Object_tags:
  (forall x:Object pointer.
    (forall Object_tag_table:Object tag_table. instanceof(Object_tag_table,
      x, Object_tag)))

logic String_tag : Object tag_id

axiom String_parenttag_Object: parenttag(String_tag, Object_tag)

logic Throwable_tag : Object tag_id

axiom Throwable_parenttag_Object: parenttag(Throwable_tag, Object_tag)

logic integer_of_byte : byte -> int

logic byte_of_integer : int -> byte

axiom byte_coerce:
  (forall x:int.
    ((((-128) <= x) and (x <= 127)) ->
     (integer_of_byte(byte_of_integer(x)) = x)))

axiom byte_extensionality:
  (forall x:byte.
    (forall y:byte [(integer_of_byte(x) = integer_of_byte(y))].
      ((integer_of_byte(x) = integer_of_byte(y)) -> (x = y))))

axiom byte_range:
  (forall x:byte.
    (((-128) <= integer_of_byte(x)) and (integer_of_byte(x) <= 127)))

logic integer_of_char : char -> int

logic char_of_integer : int -> char

axiom char_coerce:
  (forall x:int.
    (((0 <= x) and (x <= 65535)) -> (integer_of_char(char_of_integer(x)) = x)))

axiom char_extensionality:
  (forall x:char.
    (forall y:char [(integer_of_char(x) = integer_of_char(y))].
      ((integer_of_char(x) = integer_of_char(y)) -> (x = y))))

axiom char_range:
  (forall x:char.
    ((0 <= integer_of_char(x)) and (integer_of_char(x) <= 65535)))

predicate eq_byte(x: byte, y: byte) =
  (integer_of_byte(x) = integer_of_byte(y))

predicate eq_char(x: char, y: char) =
  (integer_of_char(x) = integer_of_char(y))

logic integer_of_int32 : int32 -> int

predicate eq_int32(x: int32, y: int32) =
  (integer_of_int32(x) = integer_of_int32(y))

logic integer_of_long : long -> int

predicate eq_long(x: long, y: long) =
  (integer_of_long(x) = integer_of_long(y))

logic integer_of_short : short -> int

predicate eq_short(x: short, y: short) =
  (integer_of_short(x) = integer_of_short(y))

logic int32_of_integer : int -> int32

axiom int32_coerce:
  (forall x:int.
    ((((-2147483648) <= x) and (x <= 2147483647)) ->
     (integer_of_int32(int32_of_integer(x)) = x)))

axiom int32_extensionality:
  (forall x:int32.
    (forall y:int32 [(integer_of_int32(x) = integer_of_int32(y))].
      ((integer_of_int32(x) = integer_of_int32(y)) -> (x = y))))

axiom int32_range:
  (forall x:int32.
    (((-2147483648) <= integer_of_int32(x)) and
     (integer_of_int32(x) <= 2147483647)))

logic intM_tag : Object tag_id

axiom intM_parenttag_Object: parenttag(intM_tag, Object_tag)

logic interface_tag : interface tag_id

axiom interface_int: (int_of_tag(interface_tag) = 1)

logic interface_of_pointer_address : unit pointer -> interface pointer

axiom interface_of_pointer_address_of_pointer_addr:
  (forall p:interface pointer.
    (p = interface_of_pointer_address(pointer_address(p))))

axiom interface_parenttag_bottom: parenttag(interface_tag, bottom_tag)

axiom interface_tags:
  (forall x:interface pointer.
    (forall interface_tag_table:interface tag_table.
      instanceof(interface_tag_table, x, interface_tag)))

predicate left_valid_struct_Object(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = (offset_min(Object_alloc_table,
  p) <= a)

predicate left_valid_struct_Exception(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_Muller(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_String(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_Throwable(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_intM(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_interface(p: interface pointer, a: int,
  interface_alloc_table: interface alloc_table) =
  (offset_min(interface_alloc_table, p) <= a)

logic long_of_integer : int -> long

axiom long_coerce:
  (forall x:int.
    ((((-9223372036854775808) <= x) and (x <= 9223372036854775807)) ->
     (integer_of_long(long_of_integer(x)) = x)))

axiom long_extensionality:
  (forall x:long.
    (forall y:long [(integer_of_long(x) = integer_of_long(y))].
      ((integer_of_long(x) = integer_of_long(y)) -> (x = y))))

axiom long_range:
  (forall x:long.
    (((-9223372036854775808) <= integer_of_long(x)) and
     (integer_of_long(x) <= 9223372036854775807)))

logic num_of_pos : int, int, Object pointer, (Object, int32) memory -> int

axiom pointer_addr_of_Object_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(Object_of_pointer_address(p))))

axiom pointer_addr_of_interface_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(interface_of_pointer_address(p))))

predicate right_valid_struct_Object(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = (offset_max(Object_alloc_table,
  p) >= b)

predicate right_valid_struct_Exception(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_Muller(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_String(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_Throwable(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_intM(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_interface(p: interface pointer, b: int,
  interface_alloc_table: interface alloc_table) =
  (offset_max(interface_alloc_table, p) >= b)

logic short_of_integer : int -> short

axiom short_coerce:
  (forall x:int.
    ((((-32768) <= x) and (x <= 32767)) ->
     (integer_of_short(short_of_integer(x)) = x)))

axiom short_extensionality:
  (forall x:short.
    (forall y:short [(integer_of_short(x) = integer_of_short(y))].
      ((integer_of_short(x) = integer_of_short(y)) -> (x = y))))

axiom short_range:
  (forall x:short.
    (((-32768) <= integer_of_short(x)) and (integer_of_short(x) <= 32767)))

predicate strict_valid_root_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) = a) and
   (offset_max(Object_alloc_table, p) = b))

predicate strict_valid_root_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) = a) and
   (offset_max(interface_alloc_table, p) = b))

predicate strict_valid_struct_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) = a) and
   (offset_max(Object_alloc_table, p) = b))

predicate strict_valid_struct_Exception(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_Muller(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_String(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_Throwable(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_intM(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) = a) and
   (offset_max(interface_alloc_table, p) = b))

predicate valid_root_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) <= a) and
   (offset_max(Object_alloc_table, p) >= b))

predicate valid_root_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) <= a) and
   (offset_max(interface_alloc_table, p) >= b))

predicate valid_struct_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) <= a) and
   (offset_max(Object_alloc_table, p) >= b))

predicate valid_struct_Exception(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_Muller(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_String(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_Throwable(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_intM(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) <= a) and
   (offset_max(interface_alloc_table, p) >= b))

axiom num_of_pos_false_case:
  (forall intM_intP_t_8_at_L:(Object, int32) memory.
    (forall i_2:int.
      (forall j_2:int.
        (forall k_0:int.
          (forall t_2:Object pointer.
            (((i_2 < j_2) and
              (not (integer_of_int32(select(intM_intP_t_8_at_L, shift(t_2,
              (j_2 - 1)))) > 0))) ->
             (num_of_pos(i_2, j_2, t_2, intM_intP_t_8_at_L) = num_of_pos(i_2,
             (j_2 - 1), t_2, intM_intP_t_8_at_L))))))))

axiom num_of_pos_true_case:
  (forall intM_intP_t_8_at_L:(Object, int32) memory.
    (forall i_1:int.
      (forall j_1:int.
        (forall k:int.
          (forall t_1:Object pointer.
            (((i_1 < j_1) and (integer_of_int32(select(intM_intP_t_8_at_L,
              shift(t_1, (j_1 - 1)))) > 0)) ->
             (num_of_pos(i_1, j_1, t_1,
             intM_intP_t_8_at_L) = (num_of_pos(i_1, (j_1 - 1), t_1,
             intM_intP_t_8_at_L) + 1))))))))

axiom num_of_pos_empty:
  (forall intM_intP_t_8_at_L:(Object, int32) memory.
    (forall i_0:int.
      (forall j_0:int.
        (forall t_0:Object pointer.
          ((i_0 >= j_0) -> (num_of_pos(i_0, j_0, t_0,
           intM_intP_t_8_at_L) = 0))))))

========== file tests/java/why/Muller_po1.why ==========
lemma num_of_pos_non_negative:
  (forall intM_intP_t_3_18_at_L:(Object, int32) memory.
    (forall i_3:int.
      (forall j_3:int.
        (forall t_3:Object pointer. (0 <= num_of_pos(i_3, j_3, t_3,
          intM_intP_t_3_18_at_L))))))

========== file tests/java/why/Muller_po10.why ==========
goal Muller_m_ensures_default_po_6:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result4) ->
  ("JC_85": ("JC_80": (0 <= integer_of_int32(i_7_0))))

========== file tests/java/why/Muller_po11.why ==========
goal Muller_m_ensures_default_po_7:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result4) ->
  ("JC_85":
  ("JC_81": (integer_of_int32(i_7_0) <= (offset_max(Object_t_7_9_alloc_table,
  t_7) + 1))))

========== file tests/java/why/Muller_po12.why ==========
goal Muller_m_ensures_default_po_8:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result4) ->
  ("JC_85": ("JC_82": (0 <= integer_of_int32(count0))))

========== file tests/java/why/Muller_po13.why ==========
goal Muller_m_ensures_default_po_9:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result4) ->
  ("JC_85": ("JC_83": (integer_of_int32(count0) <= integer_of_int32(i_7_0))))

========== file tests/java/why/Muller_po14.why ==========
goal Muller_m_ensures_default_po_10:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result4) ->
  ("JC_85":
  ("JC_84": (integer_of_int32(count0) = num_of_pos(0,
  integer_of_int32(i_7_0), t_7, intM_intP_t_7_9))))

========== file tests/java/why/Muller_po15.why ==========
goal Muller_m_ensures_default_po_11:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result3) ->
  ("JC_85": ("JC_80": (0 <= integer_of_int32(i_7_0))))

========== file tests/java/why/Muller_po16.why ==========
goal Muller_m_ensures_default_po_12:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result3) ->
  ("JC_85":
  ("JC_81": (integer_of_int32(i_7_0) <= (offset_max(Object_t_7_9_alloc_table,
  t_7) + 1))))

========== file tests/java/why/Muller_po17.why ==========
goal Muller_m_ensures_default_po_13:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result3) ->
  ("JC_85": ("JC_82": (0 <= integer_of_int32(count))))

========== file tests/java/why/Muller_po18.why ==========
goal Muller_m_ensures_default_po_14:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result3) ->
  ("JC_85": ("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7_0))))

========== file tests/java/why/Muller_po19.why ==========
goal Muller_m_ensures_default_po_15:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result3) ->
  ("JC_85":
  ("JC_84": (integer_of_int32(count) = num_of_pos(0, integer_of_int32(i_7_0),
  t_7, intM_intP_t_7_9))))

========== file tests/java/why/Muller_po2.why ==========
lemma num_of_pos_additive:
  (forall intM_intP_t_4_19_at_L:(Object, int32) memory.
    (forall i_4:int.
      (forall j_4:int.
        (forall k_1:int.
          (forall t_4:Object pointer.
            (((i_4 <= j_4) and (j_4 <= k_1)) -> (num_of_pos(i_4, k_1, t_4,
             intM_intP_t_4_19_at_L) = (num_of_pos(i_4, j_4, t_4,
             intM_intP_t_4_19_at_L) + num_of_pos(j_4, k_1, t_4,
             intM_intP_t_4_19_at_L)))))))))

========== file tests/java/why/Muller_po20.why ==========
goal Muller_m_ensures_default_po_16:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  ("JC_96": ("JC_91": (0 <= integer_of_int32(result4))))

========== file tests/java/why/Muller_po21.why ==========
goal Muller_m_ensures_default_po_17:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  ("JC_96":
  ("JC_92":
  (integer_of_int32(result4) <= (offset_max(Object_t_7_9_alloc_table,
  t_7) + 1))))

========== file tests/java/why/Muller_po22.why ==========
goal Muller_m_ensures_default_po_18:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  ("JC_96": ("JC_93": (0 <= integer_of_int32(count0))))

========== file tests/java/why/Muller_po23.why ==========
goal Muller_m_ensures_default_po_19:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  ("JC_96":
  ("JC_94": (integer_of_int32(count0) <= integer_of_int32(result4))))

========== file tests/java/why/Muller_po24.why ==========
goal Muller_m_ensures_default_po_20:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  ("JC_96":
  ("JC_95": (integer_of_int32(count0) = num_of_pos(0,
  integer_of_int32(result4), t_7, intM_intP_t_7_9))))

========== file tests/java/why/Muller_po25.why ==========
goal Muller_m_ensures_default_po_21:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  forall result9:int32.
  (integer_of_int32(result9) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result9) ->
  ("JC_96": ("JC_91": (0 <= integer_of_int32(i_8_0))))

========== file tests/java/why/Muller_po26.why ==========
goal Muller_m_ensures_default_po_22:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  forall result9:int32.
  (integer_of_int32(result9) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result9) ->
  ("JC_96":
  ("JC_92": (integer_of_int32(i_8_0) <= (offset_max(Object_t_7_9_alloc_table,
  t_7) + 1))))

========== file tests/java/why/Muller_po27.why ==========
goal Muller_m_ensures_default_po_23:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  forall result9:int32.
  (integer_of_int32(result9) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result9) ->
  ("JC_96": ("JC_93": (0 <= integer_of_int32(count2))))

========== file tests/java/why/Muller_po28.why ==========
goal Muller_m_ensures_default_po_24:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  forall result9:int32.
  (integer_of_int32(result9) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result9) ->
  ("JC_96": ("JC_94": (integer_of_int32(count2) <= integer_of_int32(i_8_0))))

========== file tests/java/why/Muller_po29.why ==========
goal Muller_m_ensures_default_po_25:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  forall result9:int32.
  (integer_of_int32(result9) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result9) ->
  ("JC_96":
  ("JC_95": (integer_of_int32(count2) = num_of_pos(0,
  integer_of_int32(i_8_0), t_7, intM_intP_t_7_9))))

========== file tests/java/why/Muller_po3.why ==========
lemma num_of_pos_increasing:
  (forall intM_intP_t_5_20_at_L:(Object, int32) memory.
    (forall i_5:int.
      (forall j_5:int.
        (forall k_2:int.
          (forall t_5:Object pointer.
            ((j_5 <= k_2) -> (num_of_pos(i_5, j_5, t_5,
             intM_intP_t_5_20_at_L) <= num_of_pos(i_5, k_2, t_5,
             intM_intP_t_5_20_at_L))))))))

========== file tests/java/why/Muller_po30.why ==========
goal Muller_m_ensures_default_po_26:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  forall result7:int32.
  (integer_of_int32(result7) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result7) ->
  ("JC_96": ("JC_91": (0 <= integer_of_int32(i_8_0))))

========== file tests/java/why/Muller_po31.why ==========
goal Muller_m_ensures_default_po_27:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  forall result7:int32.
  (integer_of_int32(result7) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result7) ->
  ("JC_96":
  ("JC_92": (integer_of_int32(i_8_0) <= (offset_max(Object_t_7_9_alloc_table,
  t_7) + 1))))

========== file tests/java/why/Muller_po32.why ==========
goal Muller_m_ensures_default_po_28:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  forall result7:int32.
  (integer_of_int32(result7) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result7) ->
  ("JC_96": ("JC_93": (0 <= integer_of_int32(count1))))

========== file tests/java/why/Muller_po33.why ==========
goal Muller_m_ensures_default_po_29:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  forall result7:int32.
  (integer_of_int32(result7) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result7) ->
  ("JC_96": ("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8_0))))

========== file tests/java/why/Muller_po34.why ==========
goal Muller_m_ensures_default_po_30:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  forall result7:int32.
  (integer_of_int32(result7) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result7) ->
  ("JC_96":
  ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
  integer_of_int32(i_8_0), t_7, intM_intP_t_7_9))))

========== file tests/java/why/Muller_po35.why ==========
goal Muller_m_safety_po_1:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1))

========== file tests/java/why/Muller_po36.why ==========
goal Muller_m_safety_po_2:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  (offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7))

========== file tests/java/why/Muller_po37.why ==========
goal Muller_m_safety_po_3:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))

========== file tests/java/why/Muller_po38.why ==========
goal Muller_m_safety_po_4:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  ((-2147483648) <= (integer_of_int32(count) + 1))

========== file tests/java/why/Muller_po39.why ==========
goal Muller_m_safety_po_5:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  ((integer_of_int32(count) + 1) <= 2147483647)

========== file tests/java/why/Muller_po4.why ==========
lemma num_of_pos_strictly_increasing:
  (forall intM_intP_t_6_21_at_L:(Object, int32) memory.
    (forall i_6:int.
      (forall n:int.
        (forall t_6:Object pointer.
          (((0 <= i_6) and
            ((i_6 < n) and (integer_of_int32(select(intM_intP_t_6_21_at_L,
             shift(t_6, i_6))) > 0))) ->
           (num_of_pos(0, i_6, t_6, intM_intP_t_6_21_at_L) < num_of_pos(0, n,
           t_6, intM_intP_t_6_21_at_L)))))))

========== file tests/java/why/Muller_po40.why ==========
goal Muller_m_safety_po_6:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  (((-2147483648) <= (integer_of_int32(count) + 1)) and
   ((integer_of_int32(count) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  ((-2147483648) <= (integer_of_int32(i_7) + 1))

========== file tests/java/why/Muller_po41.why ==========
goal Muller_m_safety_po_7:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  (((-2147483648) <= (integer_of_int32(count) + 1)) and
   ((integer_of_int32(count) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  ((integer_of_int32(i_7) + 1) <= 2147483647)

========== file tests/java/why/Muller_po42.why ==========
goal Muller_m_safety_po_8:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  (((-2147483648) <= (integer_of_int32(count) + 1)) and
   ((integer_of_int32(count) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  (((-2147483648) <= (integer_of_int32(i_7) + 1)) and
   ((integer_of_int32(i_7) + 1) <= 2147483647)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result4) ->
  (0 <= ("JC_61": ((offset_max(Object_t_7_9_alloc_table,
        t_7) + 1) - integer_of_int32(i_7))))

========== file tests/java/why/Muller_po43.why ==========
goal Muller_m_safety_po_9:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  (((-2147483648) <= (integer_of_int32(count) + 1)) and
   ((integer_of_int32(count) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  (((-2147483648) <= (integer_of_int32(i_7) + 1)) and
   ((integer_of_int32(i_7) + 1) <= 2147483647)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result4) ->
  (("JC_61": ((offset_max(Object_t_7_9_alloc_table,
   t_7) + 1) - integer_of_int32(i_7_0))) < ("JC_61":
                                           ((offset_max(Object_t_7_9_alloc_table,
                                           t_7) + 1) - integer_of_int32(i_7))))

========== file tests/java/why/Muller_po44.why ==========
goal Muller_m_safety_po_10:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  ((-2147483648) <= (integer_of_int32(i_7) + 1))

========== file tests/java/why/Muller_po45.why ==========
goal Muller_m_safety_po_11:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  ((integer_of_int32(i_7) + 1) <= 2147483647)

========== file tests/java/why/Muller_po46.why ==========
goal Muller_m_safety_po_12:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  (((-2147483648) <= (integer_of_int32(i_7) + 1)) and
   ((integer_of_int32(i_7) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result3) ->
  (0 <= ("JC_61": ((offset_max(Object_t_7_9_alloc_table,
        t_7) + 1) - integer_of_int32(i_7))))

========== file tests/java/why/Muller_po47.why ==========
goal Muller_m_safety_po_13:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  (((-2147483648) <= (integer_of_int32(i_7) + 1)) and
   ((integer_of_int32(i_7) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result3) ->
  (("JC_61": ((offset_max(Object_t_7_9_alloc_table,
   t_7) + 1) - integer_of_int32(i_7_0))) < ("JC_61":
                                           ((offset_max(Object_t_7_9_alloc_table,
                                           t_7) + 1) - integer_of_int32(i_7))))

========== file tests/java/why/Muller_po48.why ==========
goal Muller_m_safety_po_14:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0)

========== file tests/java/why/Muller_po49.why ==========
goal Muller_m_safety_po_15:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  (offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8))

========== file tests/java/why/Muller_po5.why ==========
goal Muller_m_ensures_default_po_1:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  ("JC_85": ("JC_80": (0 <= integer_of_int32(result0))))

========== file tests/java/why/Muller_po50.why ==========
goal Muller_m_safety_po_16:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))

========== file tests/java/why/Muller_po51.why ==========
goal Muller_m_safety_po_17:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  ((-2147483648) <= (integer_of_int32(count1) + 1))

========== file tests/java/why/Muller_po52.why ==========
goal Muller_m_safety_po_18:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  ((integer_of_int32(count1) + 1) <= 2147483647)

========== file tests/java/why/Muller_po53.why ==========
goal Muller_m_safety_po_19:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (((-2147483648) <= (integer_of_int32(count1) + 1)) and
   ((integer_of_int32(count1) + 1) <= 2147483647)) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  (offset_min(Object_Muller_m_11_alloc_table0,
  result2) <= integer_of_int32(count1))

========== file tests/java/why/Muller_po54.why ==========
goal Muller_m_safety_po_20:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (((-2147483648) <= (integer_of_int32(count1) + 1)) and
   ((integer_of_int32(count1) + 1) <= 2147483647)) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  (integer_of_int32(count1) <= offset_max(Object_Muller_m_11_alloc_table0,
  result2))

========== file tests/java/why/Muller_po55.why ==========
goal Muller_m_safety_po_21:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (((-2147483648) <= (integer_of_int32(count1) + 1)) and
   ((integer_of_int32(count1) + 1) <= 2147483647)) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  ((offset_min(Object_Muller_m_11_alloc_table0,
   result2) <= integer_of_int32(count1)) and
   (integer_of_int32(count1) <= offset_max(Object_Muller_m_11_alloc_table0,
   result2))) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  ((-2147483648) <= (integer_of_int32(i_8) + 1))

========== file tests/java/why/Muller_po56.why ==========
goal Muller_m_safety_po_22:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (((-2147483648) <= (integer_of_int32(count1) + 1)) and
   ((integer_of_int32(count1) + 1) <= 2147483647)) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  ((offset_min(Object_Muller_m_11_alloc_table0,
   result2) <= integer_of_int32(count1)) and
   (integer_of_int32(count1) <= offset_max(Object_Muller_m_11_alloc_table0,
   result2))) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  ((integer_of_int32(i_8) + 1) <= 2147483647)

========== file tests/java/why/Muller_po57.why ==========
goal Muller_m_safety_po_23:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (((-2147483648) <= (integer_of_int32(count1) + 1)) and
   ((integer_of_int32(count1) + 1) <= 2147483647)) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  ((offset_min(Object_Muller_m_11_alloc_table0,
   result2) <= integer_of_int32(count1)) and
   (integer_of_int32(count1) <= offset_max(Object_Muller_m_11_alloc_table0,
   result2))) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  (((-2147483648) <= (integer_of_int32(i_8) + 1)) and
   ((integer_of_int32(i_8) + 1) <= 2147483647)) ->
  forall result9:int32.
  (integer_of_int32(result9) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result9) ->
  (0 <= ("JC_79": ((offset_max(Object_t_7_9_alloc_table,
        t_7) + 1) - integer_of_int32(i_8))))

========== file tests/java/why/Muller_po58.why ==========
goal Muller_m_safety_po_24:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (((-2147483648) <= (integer_of_int32(count1) + 1)) and
   ((integer_of_int32(count1) + 1) <= 2147483647)) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  ((offset_min(Object_Muller_m_11_alloc_table0,
   result2) <= integer_of_int32(count1)) and
   (integer_of_int32(count1) <= offset_max(Object_Muller_m_11_alloc_table0,
   result2))) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  (((-2147483648) <= (integer_of_int32(i_8) + 1)) and
   ((integer_of_int32(i_8) + 1) <= 2147483647)) ->
  forall result9:int32.
  (integer_of_int32(result9) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result9) ->
  (("JC_79": ((offset_max(Object_t_7_9_alloc_table,
   t_7) + 1) - integer_of_int32(i_8_0))) < ("JC_79":
                                           ((offset_max(Object_t_7_9_alloc_table,
                                           t_7) + 1) - integer_of_int32(i_8))))

========== file tests/java/why/Muller_po59.why ==========
goal Muller_m_safety_po_25:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  ((-2147483648) <= (integer_of_int32(i_8) + 1))

========== file tests/java/why/Muller_po6.why ==========
goal Muller_m_ensures_default_po_2:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  ("JC_85":
  ("JC_81":
  (integer_of_int32(result0) <= (offset_max(Object_t_7_9_alloc_table,
  t_7) + 1))))

========== file tests/java/why/Muller_po60.why ==========
goal Muller_m_safety_po_26:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  ((integer_of_int32(i_8) + 1) <= 2147483647)

========== file tests/java/why/Muller_po61.why ==========
goal Muller_m_safety_po_27:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  (((-2147483648) <= (integer_of_int32(i_8) + 1)) and
   ((integer_of_int32(i_8) + 1) <= 2147483647)) ->
  forall result7:int32.
  (integer_of_int32(result7) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result7) ->
  (0 <= ("JC_79": ((offset_max(Object_t_7_9_alloc_table,
        t_7) + 1) - integer_of_int32(i_8))))

========== file tests/java/why/Muller_po62.why ==========
goal Muller_m_safety_po_28:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  (((-2147483648) <= (integer_of_int32(i_8) + 1)) and
   ((integer_of_int32(i_8) + 1) <= 2147483647)) ->
  forall result7:int32.
  (integer_of_int32(result7) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result7) ->
  (("JC_79": ((offset_max(Object_t_7_9_alloc_table,
   t_7) + 1) - integer_of_int32(i_8_0))) < ("JC_79":
                                           ((offset_max(Object_t_7_9_alloc_table,
                                           t_7) + 1) - integer_of_int32(i_8))))

========== file tests/java/why/Muller_po7.why ==========
goal Muller_m_ensures_default_po_3:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  ("JC_85": ("JC_82": (0 <= integer_of_int32(result))))

========== file tests/java/why/Muller_po8.why ==========
goal Muller_m_ensures_default_po_4:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  ("JC_85":
  ("JC_83": (integer_of_int32(result) <= integer_of_int32(result0))))

========== file tests/java/why/Muller_po9.why ==========
goal Muller_m_ensures_default_po_5:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  ("JC_85":
  ("JC_84": (integer_of_int32(result) = num_of_pos(0,
  integer_of_int32(result0), t_7, intM_intP_t_7_9))))

========== generation of Simplify VC output ==========
why -simplify [...] why/Muller.why
========== file tests/java/simplify/Muller_why.sx ==========

;; DO NOT EDIT BELOW THIS LINE

(BG_PUSH (NEQ |@true| |@false|))

(DEFPRED (zwf_zero a b) (AND (<= 0 b) (< a b)))

(BG_PUSH
 ;; Why axiom bool_and_def
 (FORALL (a b)
 (IFF (EQ (bool_and a b) |@true|) (AND (EQ a |@true|) (EQ b |@true|)))))

(BG_PUSH
 ;; Why axiom bool_or_def
 (FORALL (a b)
 (IFF (EQ (bool_or a b) |@true|) (OR (EQ a |@true|) (EQ b |@true|)))))

(BG_PUSH
 ;; Why axiom bool_xor_def
 (FORALL (a b) (IFF (EQ (bool_xor a b) |@true|) (NEQ a b))))

(BG_PUSH
 ;; Why axiom bool_not_def
 (FORALL (a) (IFF (EQ (bool_not a) |@true|) (EQ a |@false|))))

(BG_PUSH
 ;; Why axiom ite_true
 (FORALL (x y) (EQ (ite |@true| x y) x)))

(BG_PUSH
 ;; Why axiom ite_false
 (FORALL (x y) (EQ (ite |@false| x y) y)))

(BG_PUSH
 ;; Why axiom lt_int_bool_axiom
 (FORALL (x y) (IFF (EQ (lt_int_bool x y) |@true|) (< x y))))

(BG_PUSH
 ;; Why axiom le_int_bool_axiom
 (FORALL (x y) (IFF (EQ (le_int_bool x y) |@true|) (<= x y))))

(BG_PUSH
 ;; Why axiom gt_int_bool_axiom
 (FORALL (x y) (IFF (EQ (gt_int_bool x y) |@true|) (> x y))))

(BG_PUSH
 ;; Why axiom ge_int_bool_axiom
 (FORALL (x y) (IFF (EQ (ge_int_bool x y) |@true|) (>= x y))))

(BG_PUSH
 ;; Why axiom eq_int_bool_axiom
 (FORALL (x y) (IFF (EQ (eq_int_bool x y) |@true|) (EQ x y))))

(BG_PUSH
 ;; Why axiom neq_int_bool_axiom
 (FORALL (x y) (IFF (EQ (neq_int_bool x y) |@true|) (NEQ x y))))

(BG_PUSH
 ;; Why axiom abs_int_pos
 (FORALL (x) (IMPLIES (>= x 0) (EQ (abs_int x) x))))

(BG_PUSH
 ;; Why axiom abs_int_neg
 (FORALL (x) (IMPLIES (<= x 0) (EQ (abs_int x) (- 0 x)))))

(BG_PUSH
 ;; Why axiom int_max_is_ge
 (FORALL (x y) (AND (>= (int_max x y) x) (>= (int_max x y) y))))

(BG_PUSH
 ;; Why axiom int_max_is_some
 (FORALL (x y) (OR (EQ (int_max x y) x) (EQ (int_max x y) y))))

(BG_PUSH
 ;; Why axiom int_min_is_le
 (FORALL (x y) (AND (<= (int_min x y) x) (<= (int_min x y) y))))

(BG_PUSH
 ;; Why axiom int_min_is_some
 (FORALL (x y) (OR (EQ (int_min x y) x) (EQ (int_min x y) y))))

(BG_PUSH
 ;; Why axiom real_of_int_zero
 (EQ (real_of_int 0) real_constant_0_0e))

(BG_PUSH
 ;; Why axiom real_of_int_one
 (EQ (real_of_int 1) real_constant_1_0e))

(BG_PUSH
 ;; Why axiom real_of_int_add
 (FORALL (x y)
 (EQ (real_of_int (+ x y)) (real_add (real_of_int x) (real_of_int y)))))

(BG_PUSH
 ;; Why axiom real_of_int_sub
 (FORALL (x y)
 (EQ (real_of_int (- x y)) (real_sub (real_of_int x) (real_of_int y)))))

(BG_PUSH
 ;; Why axiom truncate_down_pos
 (FORALL (x)
 (IMPLIES (EQ (ge_real x real_constant_0_0e) |@true|)
 (AND (EQ (le_real (real_of_int (truncate_real_to_int x)) x) |@true|)
 (EQ (lt_real x (real_of_int (+ (truncate_real_to_int x) 1))) |@true|)))))

(BG_PUSH
 ;; Why axiom truncate_up_neg
 (FORALL (x)
 (IMPLIES (EQ (le_real x real_constant_0_0e) |@true|)
 (AND (EQ (lt_real (real_of_int (- (truncate_real_to_int x) 1)) x) |@true|)
 (EQ (le_real x (real_of_int (truncate_real_to_int x))) |@true|)))))

(BG_PUSH
 ;; Why axiom lt_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (lt_real_bool x y) |@true|) (EQ (lt_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom le_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (le_real_bool x y) |@true|) (EQ (le_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom gt_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (gt_real_bool x y) |@true|) (EQ (gt_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom ge_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (ge_real_bool x y) |@true|) (EQ (ge_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom eq_real_bool_axiom
 (FORALL (x y) (IFF (EQ (eq_real_bool x y) |@true|) (EQ x y))))

(BG_PUSH
 ;; Why axiom neq_real_bool_axiom
 (FORALL (x y) (IFF (EQ (neq_real_bool x y) |@true|) (NEQ x y))))

(BG_PUSH
 ;; Why axiom real_max_is_ge
 (FORALL (x y)
 (AND (EQ (ge_real (real_max x y) x) |@true|)
 (EQ (ge_real (real_max x y) y) |@true|))))

(BG_PUSH
 ;; Why axiom real_max_is_some
 (FORALL (x y) (OR (EQ (real_max x y) x) (EQ (real_max x y) y))))

(BG_PUSH
 ;; Why axiom real_min_is_le
 (FORALL (x y)
 (AND (EQ (le_real (real_min x y) x) |@true|)
 (EQ (le_real (real_min x y) y) |@true|))))

(BG_PUSH
 ;; Why axiom real_min_is_some
 (FORALL (x y) (OR (EQ (real_min x y) x) (EQ (real_min x y) y))))

(BG_PUSH
 ;; Why axiom sqr_real_def
 (FORALL (x) (EQ (sqr_real x) (real_mul x x))))

(BG_PUSH
 ;; Why axiom sqrt_pos
 (FORALL (x)
 (IMPLIES (EQ (ge_real x real_constant_0_0e) |@true|)
 (EQ (ge_real (real_sqrt x) real_constant_0_0e) |@true|))))

(BG_PUSH
 ;; Why axiom sqrt_sqr
 (FORALL (x)
 (IMPLIES (EQ (ge_real x real_constant_0_0e) |@true|)
 (EQ (sqr_real (real_sqrt x)) x))))

(BG_PUSH
 ;; Why axiom sqr_sqrt
 (FORALL (x)
 (IMPLIES (EQ (ge_real x real_constant_0_0e) |@true|)
 (EQ (real_sqrt (real_mul x x)) x))))

(BG_PUSH
 ;; Why axiom abs_real_pos
 (FORALL (x)
 (IMPLIES (EQ (ge_real x real_constant_0_0e) |@true|) (EQ (real_abs x) x))))

(BG_PUSH
 ;; Why axiom abs_real_neg
 (FORALL (x)
 (IMPLIES (EQ (le_real x real_constant_0_0e) |@true|)
 (EQ (real_abs x) (real_neg x)))))

(BG_PUSH
 ;; Why axiom log_exp
 (FORALL (x) (EQ (log (exp x)) x)))

(BG_PUSH
 ;; Why axiom exp_log
 (FORALL (x)
 (IMPLIES (EQ (gt_real x real_constant_0_0e) |@true|) (EQ (exp (log x)) x))))

(BG_PUSH
 ;; Why axiom prod_pos
 (FORALL (x y)
 (AND
 (IMPLIES
 (AND (EQ (gt_real x real_constant_0_0e) |@true|)
 (EQ (gt_real y real_constant_0_0e) |@true|))
 (EQ (gt_real (real_mul x y) real_constant_0_0e) |@true|))
 (IMPLIES
 (AND (EQ (lt_real x real_constant_0_0e) |@true|)
 (EQ (lt_real y real_constant_0_0e) |@true|))
 (EQ (gt_real (real_mul x y) real_constant_0_0e) |@true|)))))

(BG_PUSH
 ;; Why axiom abs_minus
 (FORALL (x) (EQ (real_abs (real_neg x)) (real_abs x))))

(BG_PUSH
 ;; Why axiom math_div_mod
 (FORALL (x y)
 (IMPLIES (NEQ y 0) (EQ x (+ (* y (math_div x y)) (math_mod x y)))))

 (FORALL (y)
 (IMPLIES (NEQ y 0)
 (FORALL (x) (EQ x (+ (* y (math_div x y)) (math_mod x y)))))))

(BG_PUSH
 ;; Why axiom math_mod_bound
 (FORALL (x y)
 (IMPLIES (NEQ y 0)
 (AND (<= 0 (math_mod x y)) (< (math_mod x y) (abs_int y)))))

 (FORALL (y)
 (IMPLIES (NEQ y 0)
 (FORALL (x) (AND (<= 0 (math_mod x y)) (< (math_mod x y) (abs_int y)))))))

(BG_PUSH
 ;; Why axiom computer_div_mod
 (FORALL (x y)
 (IMPLIES (NEQ y 0) (EQ x (+ (* y (computer_div x y)) (computer_mod x y)))))

 (FORALL (y)
 (IMPLIES (NEQ y 0)
 (FORALL (x) (EQ x (+ (* y (computer_div x y)) (computer_mod x y)))))))

(BG_PUSH
 ;; Why axiom computer_div_bound
 (FORALL (x y)
 (IMPLIES (AND (>= x 0) (> y 0))
 (AND (<= 0 (computer_div x y)) (<= (computer_div x y) x)))))

(BG_PUSH
 ;; Why axiom computer_mod_bound
 (FORALL (x y)
 (IMPLIES (NEQ y 0) (< (abs_int (computer_mod x y)) (abs_int y))))

 (FORALL (y)
 (IMPLIES (NEQ y 0)
 (FORALL (x) (< (abs_int (computer_mod x y)) (abs_int y))))))

(BG_PUSH
 ;; Why axiom computer_mod_sign_pos
 (FORALL (x y) (IMPLIES (AND (>= x 0) (NEQ y 0)) (>= (computer_mod x y) 0))))

(BG_PUSH
 ;; Why axiom computer_mod_sign_neg
 (FORALL (x y) (IMPLIES (AND (<= x 0) (NEQ y 0)) (<= (computer_mod x y) 0))))

(BG_PUSH
 ;; Why axiom computer_rounds_toward_zero
 (FORALL (x y)
 (IMPLIES (NEQ y 0) (<= (abs_int (* (computer_div x y) y)) (abs_int x))))

 (FORALL (y)
 (IMPLIES (NEQ y 0)
 (FORALL (x) (<= (abs_int (* (computer_div x y) y)) (abs_int x))))))

(DEFPRED (valid a p) (AND (<= (offset_min a p) 0) (>= (offset_max a p) 0)))

(DEFPRED (same_block p q) (EQ (base_block p) (base_block q)))

(BG_PUSH
 ;; Why axiom address_injective
 (FORALL (p q) (IFF (EQ p q) (EQ (address p) (address q)))))

(BG_PUSH
 ;; Why axiom address_null
 (EQ (address null) 0))

(BG_PUSH
 ;; Why axiom address_shift_lt
 (FORALL (p i j)
 (IFF (< (address (shift p i)) (address (shift p j))) (< i j))))

(BG_PUSH
 ;; Why axiom address_shift_le
 (FORALL (p i j)
 (IFF (<= (address (shift p i)) (address (shift p j))) (<= i j))))

(BG_PUSH
 ;; Why axiom shift_zero
 (FORALL (p) (EQ (shift p 0) p)))

(BG_PUSH
 ;; Why axiom shift_shift
 (FORALL (p i j) (EQ (shift (shift p i) j) (shift p (+ i j)))))

(BG_PUSH
 ;; Why axiom offset_max_shift
 (FORALL (a p i) (EQ (offset_max a (shift p i)) (- (offset_max a p) i))))

(BG_PUSH
 ;; Why axiom offset_min_shift
 (FORALL (a p i) (EQ (offset_min a (shift p i)) (- (offset_min a p) i))))

(BG_PUSH
 ;; Why axiom neq_shift
 (FORALL (p i j) (IMPLIES (NEQ i j) (NEQ (shift p i) (shift p j))))

 (FORALL (i j)
 (IMPLIES (NEQ i j) (FORALL (p) (NEQ (shift p i) (shift p j))))))

(BG_PUSH
 ;; Why axiom null_not_valid
 (FORALL (a) (NOT (valid a null))))

(BG_PUSH
 ;; Why axiom null_pointer
 (FORALL (a)
 (AND (>= (offset_min a null) 0) (<= (offset_max a null) (- 0 2)))))

(BG_PUSH
 ;; Why axiom eq_pointer_bool_def
 (FORALL (p1 p2) (IFF (EQ (eq_pointer_bool p1 p2) |@true|) (EQ p1 p2))))

(BG_PUSH
 ;; Why axiom neq_pointer_bool_def
 (FORALL (p1 p2) (IFF (EQ (neq_pointer_bool p1 p2) |@true|) (NEQ p1 p2))))

(BG_PUSH
 ;; Why axiom same_block_shift_right
 (FORALL (p q i) (IMPLIES (same_block p q) (same_block p (shift q i))))

 (FORALL (p q)
 (IMPLIES (same_block p q) (FORALL (i) (same_block p (shift q i))))))

(BG_PUSH
 ;; Why axiom same_block_shift_left
 (FORALL (p q i) (IMPLIES (same_block q p) (same_block (shift q i) p)))

 (FORALL (p q)
 (IMPLIES (same_block q p) (FORALL (i) (same_block (shift q i) p)))))

(BG_PUSH
 ;; Why axiom sub_pointer_shift
 (FORALL (p q) (IMPLIES (same_block p q) (EQ p (shift q (sub_pointer p q))))))

(BG_PUSH
 ;; Why axiom sub_pointer_self
 (FORALL (p) (EQ (sub_pointer p p) 0)))

(BG_PUSH
 ;; Why axiom sub_pointer_zero
 (FORALL (p q)
 (IMPLIES (same_block p q) (IMPLIES (EQ (sub_pointer p q) 0) (EQ p q)))))

(BG_PUSH
 ;; Why axiom sub_pointer_shift_left
 (FORALL (p q i) (EQ (sub_pointer (shift p i) q) (+ (sub_pointer p q) i))))

(BG_PUSH
 ;; Why axiom sub_pointer_shift_right
 (FORALL (p q i) (EQ (sub_pointer p (shift q i)) (- (sub_pointer p q) i))))

(BG_PUSH
 ;; Why axiom select_store_eq
 (FORALL (m p1 p2 a)
 (IMPLIES (EQ p1 p2) (EQ (select (|why__store| m p1 a) p2) a)))

 (FORALL (p1 p2)
 (IMPLIES (EQ p1 p2) (FORALL (m a) (EQ (select (|why__store| m p1 a) p2) a)))))

(BG_PUSH
 ;; Why axiom select_store_neq
 (FORALL (m p1 p2 a)
 (IMPLIES (NEQ p1 p2) (EQ (select (|why__store| m p1 a) p2) (select m p2))))

 (FORALL (p1 p2)
 (IMPLIES (NEQ p1 p2)
 (FORALL (m a) (EQ (select (|why__store| m p1 a) p2) (select m p2))))))

(DEFPRED (pset_disjoint ps1 ps2)
  (FORALL (p)
  (NOT (AND (EQ (in_pset p ps1) |@true|) (EQ (in_pset p ps2) |@true|)))))

(DEFPRED (pset_included ps1 ps2)
  (FORALL (p)
  (IMPLIES (EQ (in_pset p ps1) |@true|) (EQ (in_pset p ps2) |@true|))))

(BG_PUSH
 ;; Why axiom pset_included_self
 (FORALL (ps) (pset_included ps ps)))

(BG_PUSH
 ;; Why axiom pset_included_range
 (FORALL (ps a b c d)
 (IMPLIES (AND (<= c a) (<= b d))
 (pset_included (pset_range ps a b) (pset_range ps c d))))

 (FORALL (a b c d)
 (IMPLIES (AND (<= c a) (<= b d))
 (FORALL (ps) (pset_included (pset_range ps a b) (pset_range ps c d))))))

(BG_PUSH
 ;; Why axiom pset_included_range_all
 (FORALL (ps a b c d) (pset_included (pset_range ps a b) (pset_all ps))))

(BG_PUSH
 ;; Why axiom in_pset_empty
 (FORALL (p) (NOT (EQ (in_pset p pset_empty) |@true|))))

(BG_PUSH
 ;; Why axiom in_pset_singleton
 (FORALL (p q) (IFF (EQ (in_pset p (pset_singleton q)) |@true|) (EQ p q))))

(BG_PUSH
 ;; Why axiom in_pset_deref
 (FORALL (p m q)
 (IFF (EQ (in_pset p (pset_deref m q)) |@true|)
 (EXISTS (r) (AND (EQ (in_pset r q) |@true|) (EQ p (select m r)))))))

(BG_PUSH
 ;; Why axiom in_pset_all
 (FORALL (p q)
 (IFF (EQ (in_pset p (pset_all q)) |@true|)
 (EXISTS (i)
 (EXISTS (r) (AND (EQ (in_pset r q) |@true|) (EQ p (shift r i))))))))

(BG_PUSH
 ;; Why axiom in_pset_range
 (FORALL (p q a b)
 (IFF (EQ (in_pset p (pset_range q a b)) |@true|)
 (EXISTS (i)
 (EXISTS (r)
 (AND (<= a i)
 (AND (<= i b) (AND (EQ (in_pset r q) |@true|) (EQ p (shift r i))))))))))

(BG_PUSH
 ;; Why axiom in_pset_range_left
 (FORALL (p q b)
 (IFF (EQ (in_pset p (pset_range_left q b)) |@true|)
 (EXISTS (i)
 (EXISTS (r)
 (AND (<= i b) (AND (EQ (in_pset r q) |@true|) (EQ p (shift r i)))))))))

(BG_PUSH
 ;; Why axiom in_pset_range_right
 (FORALL (p q a)
 (IFF (EQ (in_pset p (pset_range_right q a)) |@true|)
 (EXISTS (i)
 (EXISTS (r)
 (AND (<= a i) (AND (EQ (in_pset r q) |@true|) (EQ p (shift r i)))))))))

(BG_PUSH
 ;; Why axiom in_pset_union
 (FORALL (p s1 s2)
 (IFF (EQ (in_pset p (pset_union s1 s2)) |@true|)
 (OR (EQ (in_pset p s1) |@true|) (EQ (in_pset p s2) |@true|)))))

(BG_PUSH
 ;; Why axiom valid_pset_empty
 (FORALL (a) (EQ (valid_pset a pset_empty) |@true|)))

(BG_PUSH
 ;; Why axiom valid_pset_singleton
 (FORALL (a p)
 (IFF (EQ (valid_pset a (pset_singleton p)) |@true|) (valid a p))))

(BG_PUSH
 ;; Why axiom valid_pset_deref
 (FORALL (a m q)
 (IFF (EQ (valid_pset a (pset_deref m q)) |@true|)
 (FORALL (r p)
 (IMPLIES (AND (EQ (in_pset r q) |@true|) (EQ p (select m r))) (valid a p))))))

(BG_PUSH
 ;; Why axiom valid_pset_range
 (FORALL (a q c d)
 (IFF (EQ (valid_pset a (pset_range q c d)) |@true|)
 (FORALL (i r)
 (IMPLIES (AND (EQ (in_pset r q) |@true|) (AND (<= c i) (<= i d)))
 (valid a (shift r i)))))))

(BG_PUSH
 ;; Why axiom valid_pset_union
 (FORALL (a s1 s2)
 (IFF (EQ (valid_pset a (pset_union s1 s2)) |@true|)
 (AND (EQ (valid_pset a s1) |@true|) (EQ (valid_pset a s2) |@true|)))))

(DEFPRED (not_assigns a m1 m2 l)
  (FORALL (p)
  (IMPLIES (AND (valid a p) (NOT (EQ (in_pset p l) |@true|)))
  (EQ (select m2 p) (select m1 p)))))

(BG_PUSH
 ;; Why axiom not_assigns_refl
 (FORALL (a m l) (not_assigns a m m l)))

(BG_PUSH
 ;; Why axiom not_assigns_trans
 (FORALL (a m1 m2 m3 l)
 (IMPLIES (not_assigns a m1 m2 l)
 (IMPLIES (not_assigns a m2 m3 l) (not_assigns a m1 m3 l))))

 (FORALL (a m1 m2 l)
 (IMPLIES (not_assigns a m1 m2 l)
 (FORALL (m3) (IMPLIES (not_assigns a m2 m3 l) (not_assigns a m1 m3 l))))))

(BG_PUSH
 ;; Why axiom full_separated_shift1
 (FORALL (p q i)
 (IMPLIES (EQ (full_separated p q) |@true|)
 (EQ (full_separated p (shift q i)) |@true|)))

 (FORALL (p q)
 (IMPLIES (EQ (full_separated p q) |@true|)
 (FORALL (i) (EQ (full_separated p (shift q i)) |@true|)))))

(BG_PUSH
 ;; Why axiom full_separated_shift2
 (FORALL (p q i)
 (IMPLIES (EQ (full_separated p q) |@true|)
 (EQ (full_separated (shift q i) p) |@true|)))

 (FORALL (p q)
 (IMPLIES (EQ (full_separated p q) |@true|)
 (FORALL (i) (EQ (full_separated (shift q i) p) |@true|)))))

(BG_PUSH
 ;; Why axiom full_separated_shift3
 (FORALL (p q i)
 (IMPLIES (EQ (full_separated q p) |@true|)
 (EQ (full_separated (shift q i) p) |@true|)))

 (FORALL (p q)
 (IMPLIES (EQ (full_separated q p) |@true|)
 (FORALL (i) (EQ (full_separated (shift q i) p) |@true|)))))

(BG_PUSH
 ;; Why axiom full_separated_shift4
 (FORALL (p q i)
 (IMPLIES (EQ (full_separated q p) |@true|)
 (EQ (full_separated p (shift q i)) |@true|)))

 (FORALL (p q)
 (IMPLIES (EQ (full_separated q p) |@true|)
 (FORALL (i) (EQ (full_separated p (shift q i)) |@true|)))))

(BG_PUSH
 ;; Why axiom subtag_bool_def
 (FORALL (t1 t2)
 (IFF (EQ (subtag_bool t1 t2) |@true|) (EQ (subtag t1 t2) |@true|))))

(BG_PUSH
 ;; Why axiom subtag_refl
 (FORALL (t) (EQ (subtag t t) |@true|)))

(BG_PUSH
 ;; Why axiom subtag_parent
 (FORALL (t1 t2 t3)
 (IMPLIES (EQ (subtag t1 t2) |@true|)
 (IMPLIES (EQ (parenttag t2 t3) |@true|) (EQ (subtag t1 t3) |@true|))))

 (FORALL (t1 t2)
 (IMPLIES (EQ (subtag t1 t2) |@true|)
 (FORALL (t3)
 (IMPLIES (EQ (parenttag t2 t3) |@true|) (EQ (subtag t1 t3) |@true|))))))

(DEFPRED (instanceof a p t) (EQ (subtag (typeof a p) t) |@true|))

(BG_PUSH
 ;; Why axiom downcast_instanceof
 (FORALL (a p s) (IMPLIES (instanceof a p s) (EQ (downcast a p s) p))))

(BG_PUSH
 ;; Why axiom bottom_tag_axiom
 (FORALL (t) (EQ (subtag t bottom_tag) |@true|)))

(DEFPRED (root_tag t) (EQ (parenttag t bottom_tag) |@true|))

(BG_PUSH
 ;; Why axiom root_subtag
 (FORALL (a b c)
 (IMPLIES (root_tag a)
 (IMPLIES (root_tag b)
 (IMPLIES (NEQ a b)
 (IMPLIES (EQ (subtag c a) |@true|) (NOT (EQ (subtag c b) |@true|)))))))

 (FORALL (a)
 (IMPLIES (root_tag a)
 (FORALL (b)
 (IMPLIES (root_tag b)
 (IMPLIES (NEQ a b)
 (FORALL (c)
 (IMPLIES (EQ (subtag c a) |@true|) (NOT (EQ (subtag c b) |@true|))))))))))

(DEFPRED (fully_packed tag_table mutable this)
  (EQ (select mutable this) (typeof tag_table this)))

(BG_PUSH
 ;; Why axiom bw_and_not_null
 (FORALL (a b) (IMPLIES (NEQ (bw_and a b) 0) (AND (NEQ a 0) (NEQ b 0)))))

(BG_PUSH
 ;; Why axiom lsl_left_positive_returns_positive
 (FORALL (a b) (IMPLIES (AND (<= 0 a) (<= 0 b)) (<= 0 (lsl a b)))))

(BG_PUSH
 ;; Why axiom lsl_left_positive_monotone
 (FORALL (a1 a2 b)
 (IMPLIES (AND (<= 0 a1) (AND (<= a1 a2) (<= 0 b)))
 (<= (lsl a1 b) (lsl a2 b)))))

(BG_PUSH
 ;; Why axiom lsr_left_positive_returns_positive
 (FORALL (a b) (IMPLIES (AND (<= 0 a) (<= 0 b)) (<= 0 (lsr a b)))))

(BG_PUSH
 ;; Why axiom lsr_left_positive_decreases
 (FORALL (a b) (IMPLIES (AND (<= 0 a) (<= 0 b)) (<= (lsr a b) a))))

(BG_PUSH
 ;; Why axiom asr_positive_on_positive
 (FORALL (a b) (IMPLIES (AND (<= 0 a) (<= 0 b)) (<= 0 (asr a b)))))

(BG_PUSH
 ;; Why axiom asr_decreases_on_positive
 (FORALL (a b) (IMPLIES (AND (<= 0 a) (<= 0 b)) (<= (asr a b) a))))

(BG_PUSH
 ;; Why axiom asr_lsr_same_on_positive
 (FORALL (a b) (IMPLIES (AND (<= 0 a) (<= 0 b)) (EQ (asr a b) (lsr a b)))))

(BG_PUSH
 ;; Why axiom lsl_of_lsr_decreases_on_positive
 (FORALL (a b) (IMPLIES (AND (<= 0 a) (<= 0 b)) (<= (lsl (lsr a b) b) a))))

(BG_PUSH
 ;; Why axiom lsr_of_lsl_identity_on_positive
 (FORALL (a b) (IMPLIES (AND (<= 0 a) (<= 0 b)) (EQ (lsr (lsl a b) b) a))))

(DEFPRED (alloc_fresh a p n)
  (FORALL (i) (IMPLIES (AND (<= 0 i) (< i n)) (NOT (valid a (shift p i))))))

(BG_PUSH
 ;; Why axiom alloc_extends_offset_min
 (FORALL (a1 a2)
 (IMPLIES (EQ (alloc_extends a1 a2) |@true|)
 (FORALL (p) (IMPLIES (valid a1 p) (EQ (offset_min a1 p) (offset_min a2 p)))))))

(BG_PUSH
 ;; Why axiom alloc_extends_offset_max
 (FORALL (a1 a2)
 (IMPLIES (EQ (alloc_extends a1 a2) |@true|)
 (FORALL (p) (IMPLIES (valid a1 p) (EQ (offset_max a1 p) (offset_max a2 p)))))))

(BG_PUSH
 ;; Why axiom alloc_extends_not_assigns_empty
 (FORALL (a1 a2 m1 m2 l p n)
 (IMPLIES
 (AND (EQ (alloc_extends a1 a2) |@true|)
 (AND (alloc_fresh a1 p n)
 (AND (not_assigns a2 m1 m2 l)
 (pset_included l (pset_all (pset_singleton p))))))
 (not_assigns a1 m1 m2 pset_empty))))

(BG_PUSH
 ;; Why axiom alloc_extends_except_offset_min
 (FORALL (a1 a2 l)
 (IMPLIES (EQ (alloc_extends_except a1 a2 l) |@true|)
 (FORALL (p)
 (IMPLIES (AND (valid a1 p) (NOT (EQ (in_pset p l) |@true|)))
 (EQ (offset_min a1 p) (offset_min a2 p)))))))

(BG_PUSH
 ;; Why axiom alloc_extends_except_offset_max
 (FORALL (a1 a2 l)
 (IMPLIES (EQ (alloc_extends_except a1 a2 l) |@true|)
 (FORALL (p)
 (IMPLIES (AND (valid a1 p) (NOT (EQ (in_pset p l) |@true|)))
 (EQ (offset_max a1 p) (offset_max a2 p)))))))

(BG_PUSH
 ;; Why axiom disj_sym
 (FORALL (s1 s2)
 (IMPLIES (EQ (disj_mybag s1 s2) |@true|) (EQ (disj_mybag s2 s1) |@true|))))

(BG_PUSH
 ;; Why axiom sub_refl
 (FORALL (sa) (EQ (sub_mybag sa sa) |@true|)))

(BG_PUSH
 ;; Why axiom sub_disj
 (FORALL (s1 s2 s3)
 (IMPLIES (EQ (disj_mybag s1 s3) |@true|)
 (IMPLIES (EQ (sub_mybag s2 s3) |@true|) (EQ (disj_mybag s1 s2) |@true|))))

 (FORALL (s1 s3)
 (IMPLIES (EQ (disj_mybag s1 s3) |@true|)
 (FORALL (s2)
 (IMPLIES (EQ (sub_mybag s2 s3) |@true|) (EQ (disj_mybag s1 s2) |@true|))))))

(BG_PUSH
 ;; Why axiom sub_in
 (FORALL (s1 s2 p)
 (IMPLIES (NOT (EQ (in_mybag p s2) |@true|))
 (IMPLIES (EQ (sub_mybag s1 s2) |@true|) (NOT (EQ (in_mybag p s1) |@true|)))))

 (FORALL (s2 p)
 (IMPLIES (NOT (EQ (in_mybag p s2) |@true|))
 (FORALL (s1)
 (IMPLIES (EQ (sub_mybag s1 s2) |@true|) (NOT (EQ (in_mybag p s1) |@true|)))))))

(BG_PUSH
 ;; Why axiom sub_sub
 (FORALL (s1 s2 s3)
 (IMPLIES (EQ (sub_mybag s1 s2) |@true|)
 (IMPLIES (EQ (sub_mybag s2 s3) |@true|) (EQ (sub_mybag s1 s3) |@true|))))

 (FORALL (s1 s2)
 (IMPLIES (EQ (sub_mybag s1 s2) |@true|)
 (FORALL (s3)
 (IMPLIES (EQ (sub_mybag s2 s3) |@true|) (EQ (sub_mybag s1 s3) |@true|))))))

(BG_PUSH
 ;; Why axiom frame_between_refl
 (FORALL (sa m) (EQ (frame_between sa m m) |@true|)))

(BG_PUSH
 ;; Why axiom frame_between_gen
 (FORALL (sa m1 m2 p v)
 (IMPLIES (EQ (frame_between sa m1 m2) |@true|)
 (IMPLIES (EQ (in_mybag p sa) |@true|)
 (EQ (frame_between sa (|why__store| m1 p v) m2) |@true|))))

 (FORALL (sa m1 m2)
 (IMPLIES (EQ (frame_between sa m1 m2) |@true|)
 (FORALL (p)
 (IMPLIES (EQ (in_mybag p sa) |@true|)
 (FORALL (v) (EQ (frame_between sa (|why__store| m1 p v) m2) |@true|)))))))

(BG_PUSH
 ;; Why axiom frame_between_gen2
 (FORALL (sa m1 m2 m3)
 (IMPLIES (EQ (frame_between sa m1 m2) |@true|)
 (IMPLIES (EQ (frame_between sa m2 m3) |@true|)
 (EQ (frame_between sa m1 m3) |@true|))))

 (FORALL (sa m1 m2)
 (IMPLIES (EQ (frame_between sa m1 m2) |@true|)
 (FORALL (m3)
 (IMPLIES (EQ (frame_between sa m2 m3) |@true|)
 (EQ (frame_between sa m1 m3) |@true|))))))

(BG_PUSH
 ;; Why axiom frame_between_gen_sub1
 (FORALL (s12 s23 s13 m1 m2 m3)
 (IMPLIES (EQ (sub_mybag s12 s13) |@true|)
 (IMPLIES (EQ (frame_between s12 m1 m2) |@true|)
 (IMPLIES (EQ (frame_between s23 m2 m3) |@true|)
 (EQ (frame_between s13 m1 m3) |@true|)))))

 (FORALL (s12 s13)
 (IMPLIES (EQ (sub_mybag s12 s13) |@true|)
 (FORALL (m2 m1)
 (IMPLIES (EQ (frame_between s12 m1 m2) |@true|)
 (FORALL (s23 m3)
 (IMPLIES (EQ (frame_between s23 m2 m3) |@true|)
 (EQ (frame_between s13 m1 m3) |@true|))))))))

(BG_PUSH
 ;; Why axiom frame_between_gen_sub2
 (FORALL (s12 s23 s13 m1 m2 m3)
 (IMPLIES (EQ (frame_between s12 m1 m2) |@true|)
 (IMPLIES (EQ (sub_mybag s23 s13) |@true|)
 (IMPLIES (EQ (frame_between s23 m2 m3) |@true|)
 (EQ (frame_between s13 m1 m3) |@true|)))))

 (FORALL (s12 m1 m2)
 (IMPLIES (EQ (frame_between s12 m1 m2) |@true|)
 (FORALL (s13 s23)
 (IMPLIES (EQ (sub_mybag s23 s13) |@true|)
 (FORALL (m3)
 (IMPLIES (EQ (frame_between s23 m2 m3) |@true|)
 (EQ (frame_between s13 m1 m3) |@true|))))))))

(BG_PUSH
 ;; Why axiom frame_between_pointer
 (FORALL (sa m1 m2 p v)
 (IMPLIES (EQ (frame_between sa m1 m2) |@true|)
 (IMPLIES (NOT (EQ (in_mybag p sa) |@true|))
 (EQ (select m1 p) (select m2 p)))))

 (FORALL (sa m1 m2)
 (IMPLIES (EQ (frame_between sa m1 m2) |@true|)
 (FORALL (p)
 (IMPLIES (NOT (EQ (in_mybag p sa) |@true|))
 (FORALL (v) (EQ (select m1 p) (select m2 p))))))))

(BG_PUSH
 ;; Why axiom frame_between_sub
 (FORALL (sa sb m1 m2)
 (IMPLIES (EQ (frame_between sa m1 m2) |@true|)
 (IMPLIES (EQ (sub_mybag sa sb) |@true|)
 (EQ (frame_between sb m1 m2) |@true|))))

 (FORALL (sa m1 m2)
 (IMPLIES (EQ (frame_between sa m1 m2) |@true|)
 (FORALL (sb)
 (IMPLIES (EQ (sub_mybag sa sb) |@true|)
 (EQ (frame_between sb m1 m2) |@true|))))))

(BG_PUSH
 ;; Why axiom Exception_parenttag_Object
 (EQ (parenttag Exception_tag Object_tag) |@true|))

(BG_PUSH
 ;; Why axiom Muller_parenttag_Object
 (EQ (parenttag Muller_tag Object_tag) |@true|))

(DEFPRED (Non_null_Object x_1 Object_x_2_alloc_table)
  (>= (offset_max Object_x_2_alloc_table x_1) 0))

(DEFPRED (Non_null_intM x_0 Object_x_1_alloc_table)
  (>= (offset_max Object_x_1_alloc_table x_0) (- 0 1)))

(BG_PUSH
 ;; Why axiom Object_int
 (EQ (int_of_tag Object_tag) 1))

(BG_PUSH
 ;; Why axiom Object_of_pointer_address_of_pointer_addr
 (FORALL (p) (EQ p (Object_of_pointer_address (pointer_address p)))))

(BG_PUSH
 ;; Why axiom Object_parenttag_bottom
 (EQ (parenttag Object_tag bottom_tag) |@true|))

(BG_PUSH
 ;; Why axiom Object_tags
 (FORALL (x Object_tag_table) (instanceof Object_tag_table x Object_tag)))

(BG_PUSH
 ;; Why axiom String_parenttag_Object
 (EQ (parenttag String_tag Object_tag) |@true|))

(BG_PUSH
 ;; Why axiom Throwable_parenttag_Object
 (EQ (parenttag Throwable_tag Object_tag) |@true|))

(BG_PUSH
 ;; Why axiom byte_coerce
 (FORALL (x)
 (IMPLIES (AND (<= (- 0 128) x) (<= x 127))
 (EQ (integer_of_byte (byte_of_integer x)) x))))

(BG_PUSH
 ;; Why axiom byte_extensionality
 (FORALL (x y)
 (IMPLIES (EQ (integer_of_byte x) (integer_of_byte y)) (EQ x y))))

(BG_PUSH
 ;; Why axiom byte_range
 (FORALL (x)
 (AND (<= (- 0 128) (integer_of_byte x)) (<= (integer_of_byte x) 127))))

(BG_PUSH
 ;; Why axiom char_coerce
 (FORALL (x)
 (IMPLIES (AND (<= 0 x) (<= x 65535))
 (EQ (integer_of_char (char_of_integer x)) x))))

(BG_PUSH
 ;; Why axiom char_extensionality
 (FORALL (x y)
 (IMPLIES (EQ (integer_of_char x) (integer_of_char y)) (EQ x y))))

(BG_PUSH
 ;; Why axiom char_range
 (FORALL (x) (AND (<= 0 (integer_of_char x)) (<= (integer_of_char x) 65535))))

(DEFPRED (eq_byte x y) (EQ (integer_of_byte x) (integer_of_byte y)))

(DEFPRED (eq_char x y) (EQ (integer_of_char x) (integer_of_char y)))

(DEFPRED (eq_int32 x y) (EQ (integer_of_int32 x) (integer_of_int32 y)))

(DEFPRED (eq_long x y) (EQ (integer_of_long x) (integer_of_long y)))

(DEFPRED (eq_short x y) (EQ (integer_of_short x) (integer_of_short y)))

(BG_PUSH
 ;; Why axiom int32_coerce
 (FORALL (x)
 (IMPLIES
 (AND (<= (- 0 constant_too_large_2147483648) x)
 (<= x constant_too_large_2147483647))
 (EQ (integer_of_int32 (int32_of_integer x)) x))))

(BG_PUSH
 ;; Why axiom int32_extensionality
 (FORALL (x y)
 (IMPLIES (EQ (integer_of_int32 x) (integer_of_int32 y)) (EQ x y))))

(BG_PUSH
 ;; Why axiom int32_range
 (FORALL (x)
 (AND (<= (- 0 constant_too_large_2147483648) (integer_of_int32 x))
 (<= (integer_of_int32 x) constant_too_large_2147483647))))

(BG_PUSH
 ;; Why axiom intM_parenttag_Object
 (EQ (parenttag intM_tag Object_tag) |@true|))

(BG_PUSH
 ;; Why axiom interface_int
 (EQ (int_of_tag interface_tag) 1))

(BG_PUSH
 ;; Why axiom interface_of_pointer_address_of_pointer_addr
 (FORALL (p) (EQ p (interface_of_pointer_address (pointer_address p)))))

(BG_PUSH
 ;; Why axiom interface_parenttag_bottom
 (EQ (parenttag interface_tag bottom_tag) |@true|))

(BG_PUSH
 ;; Why axiom interface_tags
 (FORALL (x interface_tag_table)
 (instanceof interface_tag_table x interface_tag)))

(DEFPRED (left_valid_struct_Object p a Object_alloc_table)
  (<= (offset_min Object_alloc_table p) a))

(DEFPRED (left_valid_struct_Exception p a Object_alloc_table)
  (left_valid_struct_Object p a Object_alloc_table))

(DEFPRED (left_valid_struct_Muller p a Object_alloc_table)
  (left_valid_struct_Object p a Object_alloc_table))

(DEFPRED (left_valid_struct_String p a Object_alloc_table)
  (left_valid_struct_Object p a Object_alloc_table))

(DEFPRED (left_valid_struct_Throwable p a Object_alloc_table)
  (left_valid_struct_Object p a Object_alloc_table))

(DEFPRED (left_valid_struct_intM p a Object_alloc_table)
  (left_valid_struct_Object p a Object_alloc_table))

(DEFPRED (left_valid_struct_interface p a interface_alloc_table)
  (<= (offset_min interface_alloc_table p) a))

(BG_PUSH
 ;; Why axiom long_coerce
 (FORALL (x)
 (IMPLIES
 (AND (<= (- 0 constant_too_large_9223372036854775808) x)
 (<= x constant_too_large_9223372036854775807))
 (EQ (integer_of_long (long_of_integer x)) x))))

(BG_PUSH
 ;; Why axiom long_extensionality
 (FORALL (x y)
 (IMPLIES (EQ (integer_of_long x) (integer_of_long y)) (EQ x y))))

(BG_PUSH
 ;; Why axiom long_range
 (FORALL (x)
 (AND (<= (- 0 constant_too_large_9223372036854775808) (integer_of_long x))
 (<= (integer_of_long x) constant_too_large_9223372036854775807))))

(BG_PUSH
 ;; Why axiom pointer_addr_of_Object_of_pointer_address
 (FORALL (p) (EQ p (pointer_address (Object_of_pointer_address p)))))

(BG_PUSH
 ;; Why axiom pointer_addr_of_interface_of_pointer_address
 (FORALL (p) (EQ p (pointer_address (interface_of_pointer_address p)))))

(DEFPRED (right_valid_struct_Object p b Object_alloc_table)
  (>= (offset_max Object_alloc_table p) b))

(DEFPRED (right_valid_struct_Exception p b Object_alloc_table)
  (right_valid_struct_Object p b Object_alloc_table))

(DEFPRED (right_valid_struct_Muller p b Object_alloc_table)
  (right_valid_struct_Object p b Object_alloc_table))

(DEFPRED (right_valid_struct_String p b Object_alloc_table)
  (right_valid_struct_Object p b Object_alloc_table))

(DEFPRED (right_valid_struct_Throwable p b Object_alloc_table)
  (right_valid_struct_Object p b Object_alloc_table))

(DEFPRED (right_valid_struct_intM p b Object_alloc_table)
  (right_valid_struct_Object p b Object_alloc_table))

(DEFPRED (right_valid_struct_interface p b interface_alloc_table)
  (>= (offset_max interface_alloc_table p) b))

(BG_PUSH
 ;; Why axiom short_coerce
 (FORALL (x)
 (IMPLIES (AND (<= (- 0 32768) x) (<= x 32767))
 (EQ (integer_of_short (short_of_integer x)) x))))

(BG_PUSH
 ;; Why axiom short_extensionality
 (FORALL (x y)
 (IMPLIES (EQ (integer_of_short x) (integer_of_short y)) (EQ x y))))

(BG_PUSH
 ;; Why axiom short_range
 (FORALL (x)
 (AND (<= (- 0 32768) (integer_of_short x)) (<= (integer_of_short x) 32767))))

(DEFPRED (strict_valid_root_Object p a b Object_alloc_table)
  (AND (EQ (offset_min Object_alloc_table p) a)
  (EQ (offset_max Object_alloc_table p) b)))

(DEFPRED (strict_valid_root_interface p a b interface_alloc_table)
  (AND (EQ (offset_min interface_alloc_table p) a)
  (EQ (offset_max interface_alloc_table p) b)))

(DEFPRED (strict_valid_struct_Object p a b Object_alloc_table)
  (AND (EQ (offset_min Object_alloc_table p) a)
  (EQ (offset_max Object_alloc_table p) b)))

(DEFPRED (strict_valid_struct_Exception p a b Object_alloc_table)
  (strict_valid_struct_Object p a b Object_alloc_table))

(DEFPRED (strict_valid_struct_Muller p a b Object_alloc_table)
  (strict_valid_struct_Object p a b Object_alloc_table))

(DEFPRED (strict_valid_struct_String p a b Object_alloc_table)
  (strict_valid_struct_Object p a b Object_alloc_table))

(DEFPRED (strict_valid_struct_Throwable p a b Object_alloc_table)
  (strict_valid_struct_Object p a b Object_alloc_table))

(DEFPRED (strict_valid_struct_intM p a b Object_alloc_table)
  (strict_valid_struct_Object p a b Object_alloc_table))

(DEFPRED (strict_valid_struct_interface p a b interface_alloc_table)
  (AND (EQ (offset_min interface_alloc_table p) a)
  (EQ (offset_max interface_alloc_table p) b)))

(DEFPRED (valid_root_Object p a b Object_alloc_table)
  (AND (<= (offset_min Object_alloc_table p) a)
  (>= (offset_max Object_alloc_table p) b)))

(DEFPRED (valid_root_interface p a b interface_alloc_table)
  (AND (<= (offset_min interface_alloc_table p) a)
  (>= (offset_max interface_alloc_table p) b)))

(DEFPRED (valid_struct_Object p a b Object_alloc_table)
  (AND (<= (offset_min Object_alloc_table p) a)
  (>= (offset_max Object_alloc_table p) b)))

(DEFPRED (valid_struct_Exception p a b Object_alloc_table)
  (valid_struct_Object p a b Object_alloc_table))

(DEFPRED (valid_struct_Muller p a b Object_alloc_table)
  (valid_struct_Object p a b Object_alloc_table))

(DEFPRED (valid_struct_String p a b Object_alloc_table)
  (valid_struct_Object p a b Object_alloc_table))

(DEFPRED (valid_struct_Throwable p a b Object_alloc_table)
  (valid_struct_Object p a b Object_alloc_table))

(DEFPRED (valid_struct_intM p a b Object_alloc_table)
  (valid_struct_Object p a b Object_alloc_table))

(DEFPRED (valid_struct_interface p a b interface_alloc_table)
  (AND (<= (offset_min interface_alloc_table p) a)
  (>= (offset_max interface_alloc_table p) b)))

(BG_PUSH
 ;; Why axiom num_of_pos_false_case
 (FORALL (intM_intP_t_8_at_L i_2 j_2 k_0 t_2)
 (IMPLIES
 (AND (< i_2 j_2)
 (NOT
 (> (integer_of_int32 (select intM_intP_t_8_at_L (shift t_2 (- j_2 1)))) 0)))
 (EQ (num_of_pos i_2 j_2 t_2 intM_intP_t_8_at_L)
 (num_of_pos i_2 (- j_2 1) t_2 intM_intP_t_8_at_L))))

 (FORALL (intM_intP_t_8_at_L i_2 j_2 t_2)
 (IMPLIES
 (AND (< i_2 j_2)
 (NOT
 (> (integer_of_int32 (select intM_intP_t_8_at_L (shift t_2 (- j_2 1)))) 0)))
 (FORALL (k_0)
 (EQ (num_of_pos i_2 j_2 t_2 intM_intP_t_8_at_L)
 (num_of_pos i_2 (- j_2 1) t_2 intM_intP_t_8_at_L))))))

(BG_PUSH
 ;; Why axiom num_of_pos_true_case
 (FORALL (intM_intP_t_8_at_L i_1 j_1 k t_1)
 (IMPLIES
 (AND (< i_1 j_1)
 (> (integer_of_int32 (select intM_intP_t_8_at_L (shift t_1 (- j_1 1)))) 0))
 (EQ (num_of_pos i_1 j_1 t_1 intM_intP_t_8_at_L)
 (+ (num_of_pos i_1 (- j_1 1) t_1 intM_intP_t_8_at_L) 1))))

 (FORALL (intM_intP_t_8_at_L i_1 j_1 t_1)
 (IMPLIES
 (AND (< i_1 j_1)
 (> (integer_of_int32 (select intM_intP_t_8_at_L (shift t_1 (- j_1 1)))) 0))
 (FORALL (k)
 (EQ (num_of_pos i_1 j_1 t_1 intM_intP_t_8_at_L)
 (+ (num_of_pos i_1 (- j_1 1) t_1 intM_intP_t_8_at_L) 1))))))

(BG_PUSH
 ;; Why axiom num_of_pos_empty
 (FORALL (intM_intP_t_8_at_L i_0 j_0 t_0)
 (IMPLIES (>= i_0 j_0) (EQ (num_of_pos i_0 j_0 t_0 intM_intP_t_8_at_L) 0)))

 (FORALL (i_0 j_0)
 (IMPLIES (>= i_0 j_0)
 (FORALL (intM_intP_t_8_at_L t_0)
 (EQ (num_of_pos i_0 j_0 t_0 intM_intP_t_8_at_L) 0)))))

;; num_of_pos_non_negative, File "HOME/tests/java/Muller.java", line 51, characters 10-33
(FORALL (intM_intP_t_3_18_at_L i_3 j_3 t_3)
(<= 0 (num_of_pos i_3 j_3 t_3 intM_intP_t_3_18_at_L)))

(BG_PUSH
 ;; lemma num_of_pos_non_negative as axiom
(FORALL (intM_intP_t_3_18_at_L i_3 j_3 t_3)
(<= 0 (num_of_pos i_3 j_3 t_3 intM_intP_t_3_18_at_L))))

;; num_of_pos_additive, File "HOME/tests/java/Muller.java", line 55, characters 10-29
(FORALL (intM_intP_t_4_19_at_L i_4 j_4 k_1 t_4)
(IMPLIES (AND (<= i_4 j_4) (<= j_4 k_1))
(EQ (num_of_pos i_4 k_1 t_4 intM_intP_t_4_19_at_L)
(+ (num_of_pos i_4 j_4 t_4 intM_intP_t_4_19_at_L) (num_of_pos
                                                  j_4 k_1 t_4 intM_intP_t_4_19_at_L)))))

(BG_PUSH
 ;; lemma num_of_pos_additive as axiom
(FORALL (intM_intP_t_4_19_at_L i_4 j_4 k_1 t_4)
(IMPLIES (AND (<= i_4 j_4) (<= j_4 k_1))
(EQ (num_of_pos i_4 k_1 t_4 intM_intP_t_4_19_at_L)
(+ (num_of_pos i_4 j_4 t_4 intM_intP_t_4_19_at_L) (num_of_pos
                                                  j_4 k_1 t_4 intM_intP_t_4_19_at_L))))))

;; num_of_pos_increasing, File "HOME/tests/java/Muller.java", line 60, characters 10-31
(FORALL (intM_intP_t_5_20_at_L i_5 j_5 k_2 t_5)
(IMPLIES (<= j_5 k_2)
(<= (num_of_pos i_5 j_5 t_5 intM_intP_t_5_20_at_L) (num_of_pos
                                                   i_5 k_2 t_5 intM_intP_t_5_20_at_L))))

(BG_PUSH
 ;; lemma num_of_pos_increasing as axiom
(FORALL (intM_intP_t_5_20_at_L i_5 j_5 k_2 t_5)
(IMPLIES (<= j_5 k_2)
(<= (num_of_pos i_5 j_5 t_5 intM_intP_t_5_20_at_L) (num_of_pos
                                                   i_5 k_2 t_5 intM_intP_t_5_20_at_L)))))

;; num_of_pos_strictly_increasing, File "HOME/tests/java/Muller.java", line 65, characters 10-40
(FORALL (intM_intP_t_6_21_at_L i_6 n t_6)
(IMPLIES
(AND (<= 0 i_6)
(AND (< i_6 n)
(> (integer_of_int32 (select intM_intP_t_6_21_at_L (shift t_6 i_6))) 0)))
(< (num_of_pos 0 i_6 t_6 intM_intP_t_6_21_at_L) (num_of_pos
                                                0 n t_6 intM_intP_t_6_21_at_L))))

(BG_PUSH
 ;; lemma num_of_pos_strictly_increasing as axiom
(FORALL (intM_intP_t_6_21_at_L i_6 n t_6)
(IMPLIES
(AND (<= 0 i_6)
(AND (< i_6 n)
(> (integer_of_int32 (select intM_intP_t_6_21_at_L (shift t_6 i_6))) 0)))
(< (num_of_pos 0 i_6 t_6 intM_intP_t_6_21_at_L) (num_of_pos
                                                0 n t_6 intM_intP_t_6_21_at_L)))))

;; Muller_m_ensures_default_po_1, File "HOME/tests/java/Muller.java", line 79, characters 8-14
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0) (<= 0 (integer_of_int32 result0)))))))))

;; Muller_m_ensures_default_po_2, File "HOME/tests/java/Muller.java", line 79, characters 13-26
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(<= (integer_of_int32 result0) (+ (offset_max Object_t_7_9_alloc_table t_7) 1)))))))))

;; Muller_m_ensures_default_po_3, File "HOME/tests/java/Muller.java", line 80, characters 8-18
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0) (<= 0 (integer_of_int32 result)))))))))

;; Muller_m_ensures_default_po_4, File "HOME/tests/java/Muller.java", line 80, characters 13-23
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(<= (integer_of_int32 result) (integer_of_int32 result0)))))))))

;; Muller_m_ensures_default_po_5, File "HOME/tests/java/Muller.java", line 81, characters 8-34
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(EQ (integer_of_int32 result)
(num_of_pos 0 (integer_of_int32 result0) t_7 intM_intP_t_7_9))))))))))

;; Muller_m_ensures_default_po_6, File "HOME/tests/java/Muller.java", line 79, characters 8-14
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (> (integer_of_int32 result2) 0)
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) (+ (integer_of_int32 count) 1))
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) (+ (integer_of_int32 i_7) 1))
(FORALL (i_7_0) (IMPLIES (EQ i_7_0 result4) (<= 0 (integer_of_int32 i_7_0)))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_7, File "HOME/tests/java/Muller.java", line 79, characters 13-26
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (> (integer_of_int32 result2) 0)
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) (+ (integer_of_int32 count) 1))
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) (+ (integer_of_int32 i_7) 1))
(FORALL (i_7_0)
(IMPLIES (EQ i_7_0 result4)
(<= (integer_of_int32 i_7_0) (+ (offset_max Object_t_7_9_alloc_table t_7) 1)))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_8, File "HOME/tests/java/Muller.java", line 80, characters 8-18
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (> (integer_of_int32 result2) 0)
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) (+ (integer_of_int32 count) 1))
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) (+ (integer_of_int32 i_7) 1))
(FORALL (i_7_0)
(IMPLIES (EQ i_7_0 result4) (<= 0 (integer_of_int32 count0)))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_9, File "HOME/tests/java/Muller.java", line 80, characters 13-23
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (> (integer_of_int32 result2) 0)
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) (+ (integer_of_int32 count) 1))
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) (+ (integer_of_int32 i_7) 1))
(FORALL (i_7_0)
(IMPLIES (EQ i_7_0 result4)
(<= (integer_of_int32 count0) (integer_of_int32 i_7_0)))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_10, File "HOME/tests/java/Muller.java", line 81, characters 8-34
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (> (integer_of_int32 result2) 0)
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) (+ (integer_of_int32 count) 1))
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) (+ (integer_of_int32 i_7) 1))
(FORALL (i_7_0)
(IMPLIES (EQ i_7_0 result4)
(EQ (integer_of_int32 count0)
(num_of_pos 0 (integer_of_int32 i_7_0) t_7 intM_intP_t_7_9)))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_11, File "HOME/tests/java/Muller.java", line 79, characters 8-14
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (<= (integer_of_int32 result2) 0)
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) (+ (integer_of_int32 i_7) 1))
(FORALL (i_7_0) (IMPLIES (EQ i_7_0 result3) (<= 0 (integer_of_int32 i_7_0)))))))))))))))))))))))

;; Muller_m_ensures_default_po_12, File "HOME/tests/java/Muller.java", line 79, characters 13-26
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (<= (integer_of_int32 result2) 0)
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) (+ (integer_of_int32 i_7) 1))
(FORALL (i_7_0)
(IMPLIES (EQ i_7_0 result3)
(<= (integer_of_int32 i_7_0) (+ (offset_max Object_t_7_9_alloc_table t_7) 1)))))))))))))))))))))))

;; Muller_m_ensures_default_po_13, File "HOME/tests/java/Muller.java", line 80, characters 8-18
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (<= (integer_of_int32 result2) 0)
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) (+ (integer_of_int32 i_7) 1))
(FORALL (i_7_0) (IMPLIES (EQ i_7_0 result3) (<= 0 (integer_of_int32 count)))))))))))))))))))))))

;; Muller_m_ensures_default_po_14, File "HOME/tests/java/Muller.java", line 80, characters 13-23
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (<= (integer_of_int32 result2) 0)
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) (+ (integer_of_int32 i_7) 1))
(FORALL (i_7_0)
(IMPLIES (EQ i_7_0 result3)
(<= (integer_of_int32 count) (integer_of_int32 i_7_0)))))))))))))))))))))))

;; Muller_m_ensures_default_po_15, File "HOME/tests/java/Muller.java", line 81, characters 8-34
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (<= (integer_of_int32 result2) 0)
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) (+ (integer_of_int32 i_7) 1))
(FORALL (i_7_0)
(IMPLIES (EQ i_7_0 result3)
(EQ (integer_of_int32 count)
(num_of_pos 0 (integer_of_int32 i_7_0) t_7 intM_intP_t_7_9)))))))))))))))))))))))

;; Muller_m_ensures_default_po_16, File "HOME/tests/java/Muller.java", line 90, characters 8-14
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0) (<= 0 (integer_of_int32 result4)))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_17, File "HOME/tests/java/Muller.java", line 90, characters 13-26
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(<= (integer_of_int32 result4) (+ (offset_max Object_t_7_9_alloc_table t_7) 1)))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_18, File "HOME/tests/java/Muller.java", line 91, characters 8-18
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0) (<= 0 (integer_of_int32 count0)))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_19, File "HOME/tests/java/Muller.java", line 91, characters 13-23
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(<= (integer_of_int32 count0) (integer_of_int32 result4)))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_20, File "HOME/tests/java/Muller.java", line 92, characters 8-34
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(EQ (integer_of_int32 count0)
(num_of_pos 0 (integer_of_int32 result4) t_7 intM_intP_t_7_9)))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_21, File "HOME/tests/java/Muller.java", line 90, characters 8-14
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(FORALL (intM_intP_Muller_m_11)
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (> (integer_of_int32 result6) 0)
(FORALL (result7)
(IMPLIES (EQ result7
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(FORALL (result8)
(IMPLIES (EQ (integer_of_int32 result8) (+ (integer_of_int32 count1) 1))
(FORALL (count2)
(IMPLIES (EQ count2 result8)
(FORALL (intM_intP_Muller_m_11_0)
(IMPLIES (EQ intM_intP_Muller_m_11_0
         (|why__store|
         intM_intP_Muller_m_11 (shift result2 (integer_of_int32 count1)) result7))
(FORALL (result9)
(IMPLIES (EQ (integer_of_int32 result9) (+ (integer_of_int32 i_8) 1))
(FORALL (i_8_0) (IMPLIES (EQ i_8_0 result9) (<= 0 (integer_of_int32 i_8_0)))))))))))))))))))))))))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_22, File "HOME/tests/java/Muller.java", line 90, characters 13-26
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(FORALL (intM_intP_Muller_m_11)
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (> (integer_of_int32 result6) 0)
(FORALL (result7)
(IMPLIES (EQ result7
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(FORALL (result8)
(IMPLIES (EQ (integer_of_int32 result8) (+ (integer_of_int32 count1) 1))
(FORALL (count2)
(IMPLIES (EQ count2 result8)
(FORALL (intM_intP_Muller_m_11_0)
(IMPLIES (EQ intM_intP_Muller_m_11_0
         (|why__store|
         intM_intP_Muller_m_11 (shift result2 (integer_of_int32 count1)) result7))
(FORALL (result9)
(IMPLIES (EQ (integer_of_int32 result9) (+ (integer_of_int32 i_8) 1))
(FORALL (i_8_0)
(IMPLIES (EQ i_8_0 result9)
(<= (integer_of_int32 i_8_0) (+ (offset_max Object_t_7_9_alloc_table t_7) 1)))))))))))))))))))))))))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_23, File "HOME/tests/java/Muller.java", line 91, characters 8-18
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(FORALL (intM_intP_Muller_m_11)
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (> (integer_of_int32 result6) 0)
(FORALL (result7)
(IMPLIES (EQ result7
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(FORALL (result8)
(IMPLIES (EQ (integer_of_int32 result8) (+ (integer_of_int32 count1) 1))
(FORALL (count2)
(IMPLIES (EQ count2 result8)
(FORALL (intM_intP_Muller_m_11_0)
(IMPLIES (EQ intM_intP_Muller_m_11_0
         (|why__store|
         intM_intP_Muller_m_11 (shift result2 (integer_of_int32 count1)) result7))
(FORALL (result9)
(IMPLIES (EQ (integer_of_int32 result9) (+ (integer_of_int32 i_8) 1))
(FORALL (i_8_0)
(IMPLIES (EQ i_8_0 result9) (<= 0 (integer_of_int32 count2)))))))))))))))))))))))))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_24, File "HOME/tests/java/Muller.java", line 91, characters 13-23
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(FORALL (intM_intP_Muller_m_11)
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (> (integer_of_int32 result6) 0)
(FORALL (result7)
(IMPLIES (EQ result7
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(FORALL (result8)
(IMPLIES (EQ (integer_of_int32 result8) (+ (integer_of_int32 count1) 1))
(FORALL (count2)
(IMPLIES (EQ count2 result8)
(FORALL (intM_intP_Muller_m_11_0)
(IMPLIES (EQ intM_intP_Muller_m_11_0
         (|why__store|
         intM_intP_Muller_m_11 (shift result2 (integer_of_int32 count1)) result7))
(FORALL (result9)
(IMPLIES (EQ (integer_of_int32 result9) (+ (integer_of_int32 i_8) 1))
(FORALL (i_8_0)
(IMPLIES (EQ i_8_0 result9)
(<= (integer_of_int32 count2) (integer_of_int32 i_8_0)))))))))))))))))))))))))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_25, File "HOME/tests/java/Muller.java", line 92, characters 8-34
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(FORALL (intM_intP_Muller_m_11)
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (> (integer_of_int32 result6) 0)
(FORALL (result7)
(IMPLIES (EQ result7
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(FORALL (result8)
(IMPLIES (EQ (integer_of_int32 result8) (+ (integer_of_int32 count1) 1))
(FORALL (count2)
(IMPLIES (EQ count2 result8)
(FORALL (intM_intP_Muller_m_11_0)
(IMPLIES (EQ intM_intP_Muller_m_11_0
         (|why__store|
         intM_intP_Muller_m_11 (shift result2 (integer_of_int32 count1)) result7))
(FORALL (result9)
(IMPLIES (EQ (integer_of_int32 result9) (+ (integer_of_int32 i_8) 1))
(FORALL (i_8_0)
(IMPLIES (EQ i_8_0 result9)
(EQ (integer_of_int32 count2)
(num_of_pos 0 (integer_of_int32 i_8_0) t_7 intM_intP_t_7_9)))))))))))))))))))))))))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_26, File "HOME/tests/java/Muller.java", line 90, characters 8-14
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (<= (integer_of_int32 result6) 0)
(FORALL (result7)
(IMPLIES (EQ (integer_of_int32 result7) (+ (integer_of_int32 i_8) 1))
(FORALL (i_8_0) (IMPLIES (EQ i_8_0 result7) (<= 0 (integer_of_int32 i_8_0))))))))))))))))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_27, File "HOME/tests/java/Muller.java", line 90, characters 13-26
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (<= (integer_of_int32 result6) 0)
(FORALL (result7)
(IMPLIES (EQ (integer_of_int32 result7) (+ (integer_of_int32 i_8) 1))
(FORALL (i_8_0)
(IMPLIES (EQ i_8_0 result7)
(<= (integer_of_int32 i_8_0) (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))))))))))))))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_28, File "HOME/tests/java/Muller.java", line 91, characters 8-18
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (<= (integer_of_int32 result6) 0)
(FORALL (result7)
(IMPLIES (EQ (integer_of_int32 result7) (+ (integer_of_int32 i_8) 1))
(FORALL (i_8_0)
(IMPLIES (EQ i_8_0 result7) (<= 0 (integer_of_int32 count1))))))))))))))))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_29, File "HOME/tests/java/Muller.java", line 91, characters 13-23
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (<= (integer_of_int32 result6) 0)
(FORALL (result7)
(IMPLIES (EQ (integer_of_int32 result7) (+ (integer_of_int32 i_8) 1))
(FORALL (i_8_0)
(IMPLIES (EQ i_8_0 result7)
(<= (integer_of_int32 count1) (integer_of_int32 i_8_0))))))))))))))))))))))))))))))))))))))))

;; Muller_m_ensures_default_po_30, File "HOME/tests/java/Muller.java", line 92, characters 8-34
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (<= (integer_of_int32 result6) 0)
(FORALL (result7)
(IMPLIES (EQ (integer_of_int32 result7) (+ (integer_of_int32 i_8) 1))
(FORALL (i_8_0)
(IMPLIES (EQ i_8_0 result7)
(EQ (integer_of_int32 count1)
(num_of_pos 0 (integer_of_int32 i_8_0) t_7 intM_intP_t_7_9))))))))))))))))))))))))))))))))))))))))

;; Muller_m_safety_po_1, File "why/Muller.why", line 902, characters 54-230
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))))))))))))))

;; Muller_m_safety_po_2, File "HOME/tests/java/Muller.java", line 84, characters 39-43
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_7))))))))))))))))))

;; Muller_m_safety_po_3, File "HOME/tests/java/Muller.java", line 84, characters 39-43
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(<= (integer_of_int32 i_7) (offset_max Object_t_7_9_alloc_table t_7))))))))))))))))))

;; Muller_m_safety_po_4, File "HOME/tests/java/Muller.jc", line 160, characters 69-77
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_7))
         (<= (integer_of_int32 i_7) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (> (integer_of_int32 result2) 0)
(<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 count) 1))))))))))))))))))))))

;; Muller_m_safety_po_5, File "HOME/tests/java/Muller.jc", line 160, characters 69-77
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_7))
         (<= (integer_of_int32 i_7) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (> (integer_of_int32 result2) 0)
(<= (+ (integer_of_int32 count) 1) constant_too_large_2147483647)))))))))))))))))))))

;; Muller_m_safety_po_6, File "HOME/tests/java/Muller.jc", line 158, characters 24-30
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_7))
         (<= (integer_of_int32 i_7) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (> (integer_of_int32 result2) 0)
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 count) 1))
         (<= (+ (integer_of_int32 count) 1) constant_too_large_2147483647))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) (+ (integer_of_int32 count) 1))
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 i_7) 1)))))))))))))))))))))))))))

;; Muller_m_safety_po_7, File "HOME/tests/java/Muller.jc", line 158, characters 24-30
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_7))
         (<= (integer_of_int32 i_7) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (> (integer_of_int32 result2) 0)
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 count) 1))
         (<= (+ (integer_of_int32 count) 1) constant_too_large_2147483647))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) (+ (integer_of_int32 count) 1))
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(<= (+ (integer_of_int32 i_7) 1) constant_too_large_2147483647))))))))))))))))))))))))))

;; Muller_m_safety_po_8, File "HOME/tests/java/Muller.java", line 82, characters 18-30
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_7))
         (<= (integer_of_int32 i_7) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (> (integer_of_int32 result2) 0)
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 count) 1))
         (<= (+ (integer_of_int32 count) 1) constant_too_large_2147483647))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) (+ (integer_of_int32 count) 1))
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 i_7) 1))
         (<= (+ (integer_of_int32 i_7) 1) constant_too_large_2147483647))
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) (+ (integer_of_int32 i_7) 1))
(FORALL (i_7_0)
(IMPLIES (EQ i_7_0 result4)
(<= 0 (- (+ (offset_max Object_t_7_9_alloc_table t_7) 1) (integer_of_int32
                                                         i_7)))))))))))))))))))))))))))))))))

;; Muller_m_safety_po_9, File "HOME/tests/java/Muller.java", line 82, characters 18-30
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_7))
         (<= (integer_of_int32 i_7) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (> (integer_of_int32 result2) 0)
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 count) 1))
         (<= (+ (integer_of_int32 count) 1) constant_too_large_2147483647))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) (+ (integer_of_int32 count) 1))
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 i_7) 1))
         (<= (+ (integer_of_int32 i_7) 1) constant_too_large_2147483647))
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) (+ (integer_of_int32 i_7) 1))
(FORALL (i_7_0)
(IMPLIES (EQ i_7_0 result4)
(< (- (+ (offset_max Object_t_7_9_alloc_table t_7) 1) (integer_of_int32
                                                      i_7_0)) (- (+ (offset_max
                                                                    Object_t_7_9_alloc_table t_7) 1) 
                                                              (integer_of_int32
                                                              i_7)))))))))))))))))))))))))))))))))

;; Muller_m_safety_po_10, File "HOME/tests/java/Muller.jc", line 158, characters 24-30
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_7))
         (<= (integer_of_int32 i_7) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (<= (integer_of_int32 result2) 0)
(<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 i_7) 1))))))))))))))))))))))

;; Muller_m_safety_po_11, File "HOME/tests/java/Muller.jc", line 158, characters 24-30
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_7))
         (<= (integer_of_int32 i_7) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (<= (integer_of_int32 result2) 0)
(<= (+ (integer_of_int32 i_7) 1) constant_too_large_2147483647)))))))))))))))))))))

;; Muller_m_safety_po_12, File "HOME/tests/java/Muller.java", line 82, characters 18-30
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_7))
         (<= (integer_of_int32 i_7) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (<= (integer_of_int32 result2) 0)
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 i_7) 1))
         (<= (+ (integer_of_int32 i_7) 1) constant_too_large_2147483647))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) (+ (integer_of_int32 i_7) 1))
(FORALL (i_7_0)
(IMPLIES (EQ i_7_0 result3)
(<= 0 (- (+ (offset_max Object_t_7_9_alloc_table t_7) 1) (integer_of_int32
                                                         i_7))))))))))))))))))))))))))))

;; Muller_m_safety_po_13, File "HOME/tests/java/Muller.java", line 82, characters 18-30
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_7) result1)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_7))
         (<= (integer_of_int32 i_7) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result2)
(IMPLIES (EQ result2
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_7))))
(IMPLIES (<= (integer_of_int32 result2) 0)
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 i_7) 1))
         (<= (+ (integer_of_int32 i_7) 1) constant_too_large_2147483647))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) (+ (integer_of_int32 i_7) 1))
(FORALL (i_7_0)
(IMPLIES (EQ i_7_0 result3)
(< (- (+ (offset_max Object_t_7_9_alloc_table t_7) 1) (integer_of_int32
                                                      i_7_0)) (- (+ (offset_max
                                                                    Object_t_7_9_alloc_table t_7) 1) 
                                                              (integer_of_int32
                                                              i_7))))))))))))))))))))))))))))

;; Muller_m_safety_po_14, File "HOME/tests/java/Muller.java", line 86, characters 11-25
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1) (>= (integer_of_int32 count) 0)))))))))))))))))

;; Muller_m_safety_po_15, File "HOME/tests/java/Muller.java", line 96, characters 9-13
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(IMPLIES (>= (integer_of_int32 count) 0)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))))))))))))))))))))))))))))))))))))))

;; Muller_m_safety_po_16, File "HOME/tests/java/Muller.java", line 96, characters 9-13
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(IMPLIES (>= (integer_of_int32 count) 0)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7))))))))))))))))))))))))))))))))))))))

;; Muller_m_safety_po_17, File "HOME/tests/java/Muller.jc", line 197, characters 47-55
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(IMPLIES (>= (integer_of_int32 count) 0)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (> (integer_of_int32 result6) 0)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result7)
(IMPLIES (EQ result7
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 count1) 1)))))))))))))))))))))))))))))))))))))))))))))

;; Muller_m_safety_po_18, File "HOME/tests/java/Muller.jc", line 197, characters 47-55
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(IMPLIES (>= (integer_of_int32 count) 0)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (> (integer_of_int32 result6) 0)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result7)
(IMPLIES (EQ result7
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(<= (+ (integer_of_int32 count1) 1) constant_too_large_2147483647))))))))))))))))))))))))))))))))))))))))))))

;; Muller_m_safety_po_19, File "HOME/tests/java/Muller.java", line 96, characters 19-36
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(IMPLIES (>= (integer_of_int32 count) 0)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (> (integer_of_int32 result6) 0)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result7)
(IMPLIES (EQ result7
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 count1) 1))
         (<= (+ (integer_of_int32 count1) 1) constant_too_large_2147483647))
(FORALL (result8)
(IMPLIES (EQ (integer_of_int32 result8) (+ (integer_of_int32 count1) 1))
(FORALL (count2)
(IMPLIES (EQ count2 result8)
(<= (offset_min Object_Muller_m_11_alloc_table0 result2) (integer_of_int32
                                                         count1))))))))))))))))))))))))))))))))))))))))))))))))))

;; Muller_m_safety_po_20, File "HOME/tests/java/Muller.java", line 96, characters 19-36
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(IMPLIES (>= (integer_of_int32 count) 0)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (> (integer_of_int32 result6) 0)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result7)
(IMPLIES (EQ result7
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 count1) 1))
         (<= (+ (integer_of_int32 count1) 1) constant_too_large_2147483647))
(FORALL (result8)
(IMPLIES (EQ (integer_of_int32 result8) (+ (integer_of_int32 count1) 1))
(FORALL (count2)
(IMPLIES (EQ count2 result8)
(<= (integer_of_int32 count1) (offset_max
                              Object_Muller_m_11_alloc_table0 result2))))))))))))))))))))))))))))))))))))))))))))))))))

;; Muller_m_safety_po_21, File "HOME/tests/java/Muller.jc", line 195, characters 30-36
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(IMPLIES (>= (integer_of_int32 count) 0)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(FORALL (intM_intP_Muller_m_11)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (> (integer_of_int32 result6) 0)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result7)
(IMPLIES (EQ result7
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 count1) 1))
         (<= (+ (integer_of_int32 count1) 1) constant_too_large_2147483647))
(FORALL (result8)
(IMPLIES (EQ (integer_of_int32 result8) (+ (integer_of_int32 count1) 1))
(FORALL (count2)
(IMPLIES (EQ count2 result8)
(IMPLIES (AND
         (<= (offset_min Object_Muller_m_11_alloc_table0 result2) (integer_of_int32
                                                                  count1))
         (<= (integer_of_int32 count1) (offset_max
                                       Object_Muller_m_11_alloc_table0 result2)))
(FORALL (intM_intP_Muller_m_11_0)
(IMPLIES (EQ intM_intP_Muller_m_11_0
         (|why__store|
         intM_intP_Muller_m_11 (shift result2 (integer_of_int32 count1)) result7))
(<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 i_8) 1))))))))))))))))))))))))))))))))))))))))))))))))))))))

;; Muller_m_safety_po_22, File "HOME/tests/java/Muller.jc", line 195, characters 30-36
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(IMPLIES (>= (integer_of_int32 count) 0)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(FORALL (intM_intP_Muller_m_11)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (> (integer_of_int32 result6) 0)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result7)
(IMPLIES (EQ result7
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 count1) 1))
         (<= (+ (integer_of_int32 count1) 1) constant_too_large_2147483647))
(FORALL (result8)
(IMPLIES (EQ (integer_of_int32 result8) (+ (integer_of_int32 count1) 1))
(FORALL (count2)
(IMPLIES (EQ count2 result8)
(IMPLIES (AND
         (<= (offset_min Object_Muller_m_11_alloc_table0 result2) (integer_of_int32
                                                                  count1))
         (<= (integer_of_int32 count1) (offset_max
                                       Object_Muller_m_11_alloc_table0 result2)))
(FORALL (intM_intP_Muller_m_11_0)
(IMPLIES (EQ intM_intP_Muller_m_11_0
         (|why__store|
         intM_intP_Muller_m_11 (shift result2 (integer_of_int32 count1)) result7))
(<= (+ (integer_of_int32 i_8) 1) constant_too_large_2147483647)))))))))))))))))))))))))))))))))))))))))))))))))))))

;; Muller_m_safety_po_23, File "HOME/tests/java/Muller.java", line 93, characters 18-30
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(IMPLIES (>= (integer_of_int32 count) 0)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(FORALL (intM_intP_Muller_m_11)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (> (integer_of_int32 result6) 0)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result7)
(IMPLIES (EQ result7
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 count1) 1))
         (<= (+ (integer_of_int32 count1) 1) constant_too_large_2147483647))
(FORALL (result8)
(IMPLIES (EQ (integer_of_int32 result8) (+ (integer_of_int32 count1) 1))
(FORALL (count2)
(IMPLIES (EQ count2 result8)
(IMPLIES (AND
         (<= (offset_min Object_Muller_m_11_alloc_table0 result2) (integer_of_int32
                                                                  count1))
         (<= (integer_of_int32 count1) (offset_max
                                       Object_Muller_m_11_alloc_table0 result2)))
(FORALL (intM_intP_Muller_m_11_0)
(IMPLIES (EQ intM_intP_Muller_m_11_0
         (|why__store|
         intM_intP_Muller_m_11 (shift result2 (integer_of_int32 count1)) result7))
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 i_8) 1))
         (<= (+ (integer_of_int32 i_8) 1) constant_too_large_2147483647))
(FORALL (result9)
(IMPLIES (EQ (integer_of_int32 result9) (+ (integer_of_int32 i_8) 1))
(FORALL (i_8_0)
(IMPLIES (EQ i_8_0 result9)
(<= 0 (- (+ (offset_max Object_t_7_9_alloc_table t_7) 1) (integer_of_int32
                                                         i_8))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

;; Muller_m_safety_po_24, File "HOME/tests/java/Muller.java", line 93, characters 18-30
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(IMPLIES (>= (integer_of_int32 count) 0)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(FORALL (intM_intP_Muller_m_11)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (> (integer_of_int32 result6) 0)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result7)
(IMPLIES (EQ result7
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 count1) 1))
         (<= (+ (integer_of_int32 count1) 1) constant_too_large_2147483647))
(FORALL (result8)
(IMPLIES (EQ (integer_of_int32 result8) (+ (integer_of_int32 count1) 1))
(FORALL (count2)
(IMPLIES (EQ count2 result8)
(IMPLIES (AND
         (<= (offset_min Object_Muller_m_11_alloc_table0 result2) (integer_of_int32
                                                                  count1))
         (<= (integer_of_int32 count1) (offset_max
                                       Object_Muller_m_11_alloc_table0 result2)))
(FORALL (intM_intP_Muller_m_11_0)
(IMPLIES (EQ intM_intP_Muller_m_11_0
         (|why__store|
         intM_intP_Muller_m_11 (shift result2 (integer_of_int32 count1)) result7))
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 i_8) 1))
         (<= (+ (integer_of_int32 i_8) 1) constant_too_large_2147483647))
(FORALL (result9)
(IMPLIES (EQ (integer_of_int32 result9) (+ (integer_of_int32 i_8) 1))
(FORALL (i_8_0)
(IMPLIES (EQ i_8_0 result9)
(< (- (+ (offset_max Object_t_7_9_alloc_table t_7) 1) (integer_of_int32
                                                      i_8_0)) (- (+ (offset_max
                                                                    Object_t_7_9_alloc_table t_7) 1) 
                                                              (integer_of_int32
                                                              i_8))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

;; Muller_m_safety_po_25, File "HOME/tests/java/Muller.jc", line 195, characters 30-36
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(IMPLIES (>= (integer_of_int32 count) 0)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (<= (integer_of_int32 result6) 0)
(<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 i_8) 1))))))))))))))))))))))))))))))))))))))))))

;; Muller_m_safety_po_26, File "HOME/tests/java/Muller.jc", line 195, characters 30-36
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(IMPLIES (>= (integer_of_int32 count) 0)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (<= (integer_of_int32 result6) 0)
(<= (+ (integer_of_int32 i_8) 1) constant_too_large_2147483647)))))))))))))))))))))))))))))))))))))))))

;; Muller_m_safety_po_27, File "HOME/tests/java/Muller.java", line 93, characters 18-30
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(IMPLIES (>= (integer_of_int32 count) 0)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (<= (integer_of_int32 result6) 0)
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 i_8) 1))
         (<= (+ (integer_of_int32 i_8) 1) constant_too_large_2147483647))
(FORALL (result7)
(IMPLIES (EQ (integer_of_int32 result7) (+ (integer_of_int32 i_8) 1))
(FORALL (i_8_0)
(IMPLIES (EQ i_8_0 result7)
(<= 0 (- (+ (offset_max Object_t_7_9_alloc_table t_7) 1) (integer_of_int32
                                                         i_8))))))))))))))))))))))))))))))))))))))))))))))))

;; Muller_m_safety_po_28, File "HOME/tests/java/Muller.java", line 93, characters 18-30
(FORALL (t_7)
(FORALL (Object_t_7_9_alloc_table)
(FORALL (intM_intP_t_7_9)
(FORALL (Object_Muller_m_11_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_7 0 Object_t_7_9_alloc_table)
         (Non_null_intM t_7 Object_t_7_9_alloc_table))
(FORALL (result)
(IMPLIES (EQ (integer_of_int32 result) 0)
(FORALL (result0)
(IMPLIES (EQ (integer_of_int32 result0) 0)
(FORALL (count)
(FORALL (i_7)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_7))
         (AND
         (<= (integer_of_int32 i_7) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count))
         (AND (<= (integer_of_int32 count) (integer_of_int32 i_7))
         (EQ (integer_of_int32 count)
         (num_of_pos 0 (integer_of_int32 i_7) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (EQ result1 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (>= (integer_of_int32 i_7) result1)
(IMPLIES (>= (integer_of_int32 count) 0)
(FORALL (result2)
(FORALL (Object_Muller_m_11_alloc_table0)
(FORALL (Object_Muller_m_11_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result2 0 (- (integer_of_int32 count) 1) Object_Muller_m_11_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_Muller_m_11_alloc_table Object_Muller_m_11_alloc_table0) |@true|)
         (AND
         (alloc_fresh
         Object_Muller_m_11_alloc_table result2 (integer_of_int32 count))
         (instanceof Object_Muller_m_11_tag_table result2 intM_tag))))
(FORALL (result3)
(IMPLIES (EQ (integer_of_int32 result3) 0)
(FORALL (count0)
(IMPLIES (EQ count0 result3)
(FORALL (result4)
(IMPLIES (EQ (integer_of_int32 result4) 0)
(FORALL (count1)
(FORALL (i_8)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 (integer_of_int32 i_8))
         (AND
         (<= (integer_of_int32 i_8) (+ (offset_max
                                       Object_t_7_9_alloc_table t_7) 1))
         (AND (<= 0 (integer_of_int32 count1))
         (AND (<= (integer_of_int32 count1) (integer_of_int32 i_8))
         (EQ (integer_of_int32 count1)
         (num_of_pos 0 (integer_of_int32 i_8) t_7 intM_intP_t_7_9))))))
(IMPLIES (>= (offset_max Object_t_7_9_alloc_table t_7) (- 0 1))
(FORALL (result5)
(IMPLIES (AND (<= result5 constant_too_large_2147483647)
         (AND (>= result5 0)
         (EQ result5 (+ (offset_max Object_t_7_9_alloc_table t_7) 1))))
(IMPLIES (< (integer_of_int32 i_8) result5)
(IMPLIES (AND
         (<= (offset_min Object_t_7_9_alloc_table t_7) (integer_of_int32 i_8))
         (<= (integer_of_int32 i_8) (offset_max Object_t_7_9_alloc_table t_7)))
(FORALL (result6)
(IMPLIES (EQ result6
         (select intM_intP_t_7_9 (shift t_7 (integer_of_int32 i_8))))
(IMPLIES (<= (integer_of_int32 result6) 0)
(IMPLIES (AND
         (<= (- 0 constant_too_large_2147483648) (+ (integer_of_int32 i_8) 1))
         (<= (+ (integer_of_int32 i_8) 1) constant_too_large_2147483647))
(FORALL (result7)
(IMPLIES (EQ (integer_of_int32 result7) (+ (integer_of_int32 i_8) 1))
(FORALL (i_8_0)
(IMPLIES (EQ i_8_0 result7)
(< (- (+ (offset_max Object_t_7_9_alloc_table t_7) 1) (integer_of_int32
                                                      i_8_0)) (- (+ (offset_max
                                                                    Object_t_7_9_alloc_table t_7) 1) 
                                                              (integer_of_int32
                                                              i_8))))))))))))))))))))))))))))))))))))))))))))))))

========== running Simplify ==========
Running Simplify on proof obligations
(. = valid * = invalid ? = unknown # = timeout ! = failure)
simplify/Muller_why.sx        : ????.......................................................... (58/0/4/0/0)
total   :  62
valid   :  58 ( 94%)
invalid :   0 (  0%)
unknown :   4 (  6%)
timeout :   0 (  0%)
failure :   0 (  0%)
========== generation of alt-ergo VC output ==========
why -alt-ergo [...] why/Muller.why
========== file tests/java/why/Muller_why.why ==========
logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

logic bool_and : bool, bool -> bool

logic bool_or : bool, bool -> bool

logic bool_xor : bool, bool -> bool

logic bool_not : bool -> bool

axiom bool_and_def:
  (forall a:bool.
    (forall b:bool.
      ((bool_and(a, b) = true) <-> ((a = true) and (b = true)))))

axiom bool_or_def:
  (forall a:bool.
    (forall b:bool. ((bool_or(a, b) = true) <-> ((a = true) or (b = true)))))

axiom bool_xor_def:
  (forall a:bool. (forall b:bool. ((bool_xor(a, b) = true) <-> (a <> b))))

axiom bool_not_def: (forall a:bool. ((bool_not(a) = true) <-> (a = false)))

logic ite : bool, 'a1, 'a1 -> 'a1

axiom ite_true: (forall x:'a1. (forall y:'a1. (ite(true, x, y) = x)))

axiom ite_false: (forall x:'a1. (forall y:'a1. (ite(false, x, y) = y)))

logic lt_int_bool : int, int -> bool

logic le_int_bool : int, int -> bool

logic gt_int_bool : int, int -> bool

logic ge_int_bool : int, int -> bool

logic eq_int_bool : int, int -> bool

logic neq_int_bool : int, int -> bool

axiom lt_int_bool_axiom:
  (forall x:int. (forall y:int. ((lt_int_bool(x, y) = true) <-> (x < y))))

axiom le_int_bool_axiom:
  (forall x:int. (forall y:int. ((le_int_bool(x, y) = true) <-> (x <= y))))

axiom gt_int_bool_axiom:
  (forall x:int. (forall y:int. ((gt_int_bool(x, y) = true) <-> (x > y))))

axiom ge_int_bool_axiom:
  (forall x:int. (forall y:int. ((ge_int_bool(x, y) = true) <-> (x >= y))))

axiom eq_int_bool_axiom:
  (forall x:int. (forall y:int. ((eq_int_bool(x, y) = true) <-> (x = y))))

axiom neq_int_bool_axiom:
  (forall x:int. (forall y:int. ((neq_int_bool(x, y) = true) <-> (x <> y))))

logic abs_int : int -> int

axiom abs_int_pos: (forall x:int. ((x >= 0) -> (abs_int(x) = x)))

axiom abs_int_neg: (forall x:int. ((x <= 0) -> (abs_int(x) = (-x))))

logic int_max : int, int -> int

logic int_min : int, int -> int

axiom int_max_is_ge:
  (forall x:int.
    (forall y:int. ((int_max(x, y) >= x) and (int_max(x, y) >= y))))

axiom int_max_is_some:
  (forall x:int.
    (forall y:int. ((int_max(x, y) = x) or (int_max(x, y) = y))))

axiom int_min_is_le:
  (forall x:int.
    (forall y:int. ((int_min(x, y) <= x) and (int_min(x, y) <= y))))

axiom int_min_is_some:
  (forall x:int.
    (forall y:int. ((int_min(x, y) = x) or (int_min(x, y) = y))))

logic lt_real : real, real -> prop

logic le_real : real, real -> prop

logic gt_real : real, real -> prop

logic ge_real : real, real -> prop

logic eq_real : real, real -> prop

logic neq_real : real, real -> prop

logic add_real : real, real -> real

logic sub_real : real, real -> real

logic mul_real : real, real -> real

logic div_real : real, real -> real

logic neg_real : real -> real

logic real_of_int : int -> real

axiom real_of_int_zero: (real_of_int(0) = 0.0)

axiom real_of_int_one: (real_of_int(1) = 1.0)

axiom real_of_int_add:
  (forall x:int.
    (forall y:int.
      (real_of_int((x + y)) = (real_of_int(x) + real_of_int(y)))))

axiom real_of_int_sub:
  (forall x:int.
    (forall y:int.
      (real_of_int((x - y)) = (real_of_int(x) - real_of_int(y)))))

logic truncate_real_to_int : real -> int

axiom truncate_down_pos:
  (forall x:real.
    ((x >= 0.0) ->
     ((real_of_int(truncate_real_to_int(x)) <= x) and
      (x < real_of_int((truncate_real_to_int(x) + 1))))))

axiom truncate_up_neg:
  (forall x:real.
    ((x <= 0.0) ->
     ((real_of_int((truncate_real_to_int(x) - 1)) < x) and
      (x <= real_of_int(truncate_real_to_int(x))))))

logic floor_real_to_int : real -> int

logic ceil_real_to_int : real -> int

logic lt_real_bool : real, real -> bool

logic le_real_bool : real, real -> bool

logic gt_real_bool : real, real -> bool

logic ge_real_bool : real, real -> bool

logic eq_real_bool : real, real -> bool

logic neq_real_bool : real, real -> bool

axiom lt_real_bool_axiom:
  (forall x:real. (forall y:real. ((lt_real_bool(x, y) = true) <-> (x < y))))

axiom le_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((le_real_bool(x, y) = true) <-> (x <= y))))

axiom gt_real_bool_axiom:
  (forall x:real. (forall y:real. ((gt_real_bool(x, y) = true) <-> (x > y))))

axiom ge_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((ge_real_bool(x, y) = true) <-> (x >= y))))

axiom eq_real_bool_axiom:
  (forall x:real. (forall y:real. ((eq_real_bool(x, y) = true) <-> (x = y))))

axiom neq_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((neq_real_bool(x, y) = true) <-> (x <> y))))

logic real_max : real, real -> real

logic real_min : real, real -> real

axiom real_max_is_ge:
  (forall x:real.
    (forall y:real. ((real_max(x, y) >= x) and (real_max(x, y) >= y))))

axiom real_max_is_some:
  (forall x:real.
    (forall y:real. ((real_max(x, y) = x) or (real_max(x, y) = y))))

axiom real_min_is_le:
  (forall x:real.
    (forall y:real. ((real_min(x, y) <= x) and (real_min(x, y) <= y))))

axiom real_min_is_some:
  (forall x:real.
    (forall y:real. ((real_min(x, y) = x) or (real_min(x, y) = y))))

function sqr_real(x: real) : real = (x * x)

logic sqrt_real : real -> real

axiom sqrt_pos: (forall x:real. ((x >= 0.0) -> (sqrt_real(x) >= 0.0)))

axiom sqrt_sqr: (forall x:real. ((x >= 0.0) -> (sqr_real(sqrt_real(x)) = x)))

axiom sqr_sqrt: (forall x:real. ((x >= 0.0) -> (sqrt_real((x * x)) = x)))

logic abs_real : real -> real

axiom abs_real_pos:
  (forall x:real [abs_real(x)]. ((x >= 0.0) -> (abs_real(x) = x)))

axiom abs_real_neg:
  (forall x:real [abs_real(x)]. ((x <= 0.0) -> (abs_real(x) = (-x))))

logic exp : real -> real

logic log : real -> real

logic log10 : real -> real

axiom log_exp: (forall x:real. (log(exp(x)) = x))

axiom exp_log: (forall x:real. ((x > 0.0) -> (exp(log(x)) = x)))

logic pow_real_int : real, int -> real

logic pow_real : real, real -> real

logic cos : real -> real

logic sin : real -> real

logic tan : real -> real

logic pi : real

logic cosh : real -> real

logic sinh : real -> real

logic tanh : real -> real

logic acos : real -> real

logic asin : real -> real

logic atan : real -> real

logic atan2 : real, real -> real

logic hypot : real, real -> real

axiom prod_pos:
  (forall x:real.
    (forall y:real.
      ((((x > 0.0) and (y > 0.0)) -> ((x * y) > 0.0)) and
       (((x < 0.0) and (y < 0.0)) -> ((x * y) > 0.0)))))

axiom abs_minus: (forall x:real. (abs_real((-x)) = abs_real(x)))

logic computer_div : int, int -> int

logic computer_mod : int, int -> int

logic math_div : int, int -> int

logic math_mod : int, int -> int

axiom math_div_mod:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> (x = ((y * math_div(x, y)) + math_mod(x, y))))))

axiom math_mod_bound:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> ((0 <= math_mod(x, y)) and (math_mod(x, y) < abs_int(y))))))

axiom computer_div_mod:
  (forall x:int.
    (forall y:int [computer_div(x, y), computer_mod(x, y)].
      ((y <> 0) -> (x = ((y * computer_div(x, y)) + computer_mod(x, y))))))

axiom computer_div_bound:
  (forall x:int.
    (forall y:int.
      (((x >= 0) and (y > 0)) ->
       ((0 <= computer_div(x, y)) and (computer_div(x, y) <= x)))))

axiom computer_mod_bound:
  (forall x:int.
    (forall y:int. ((y <> 0) -> (abs_int(computer_mod(x, y)) < abs_int(y)))))

axiom computer_mod_sign_pos:
  (forall x:int.
    (forall y:int. (((x >= 0) and (y <> 0)) -> (computer_mod(x, y) >= 0))))

axiom computer_mod_sign_neg:
  (forall x:int.
    (forall y:int. (((x <= 0) and (y <> 0)) -> (computer_mod(x, y) <= 0))))

axiom computer_rounds_toward_zero:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> (abs_int((computer_div(x, y) * y)) <= abs_int(x)))))

type 't alloc_table

type 't pointer

type 't block

logic base_block : 'a1 pointer -> 'a1 block

logic offset_max : 'a1 alloc_table, 'a1 pointer -> int

logic offset_min : 'a1 alloc_table, 'a1 pointer -> int

predicate valid(a: 'a1 alloc_table, p: 'a1 pointer) =
  ((offset_min(a, p) <= 0) and (offset_max(a, p) >= 0))

predicate same_block(p: 'a1 pointer, q: 'a1 pointer) =
  (base_block(p) = base_block(q))

logic sub_pointer : 'a1 pointer, 'a1 pointer -> int

logic shift : 'a1 pointer, int -> 'a1 pointer

logic null : 'a1 pointer

logic pointer_address : 'a1 pointer -> unit pointer

logic absolute_address : int -> unit pointer

logic address : 'a1 pointer -> int

axiom address_injective:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. ((p = q) <-> (address(p) = address(q)))))

axiom address_null: (address(null) = 0)

axiom address_shift_lt:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) < address(shift(p, j))) <-> (i < j)))))

axiom address_shift_le:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) <= address(shift(p, j))) <-> (i <= j)))))

axiom shift_zero: (forall p:'a1 pointer [shift(p, 0)]. (shift(p, 0) = p))

axiom shift_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(shift(p, i), j)]. (shift(shift(p, i),
        j) = shift(p, (i + j))))))

axiom offset_max_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_max(a, shift(p, i)) = (offset_max(a, p) - i)))))

axiom offset_min_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_min(a, shift(p, i)) = (offset_min(a, p) - i)))))

axiom neq_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(p, i), shift(p, j)].
        ((i <> j) -> (shift(p, i) <> shift(p, j))))))

axiom null_not_valid: (forall a:'a1 alloc_table. (not valid(a, null)))

axiom null_pointer:
  (forall a:'a1 alloc_table.
    ((offset_min(a, null) >= 0) and (offset_max(a, null) <= (-2))))

logic eq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

logic neq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

axiom eq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer. ((eq_pointer_bool(p1, p2) = true) <-> (p1 = p2))))

axiom neq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer.
      ((neq_pointer_bool(p1, p2) = true) <-> (p1 <> p2))))

axiom same_block_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(p, shift(q, i))].
        (same_block(p, q) -> same_block(p, shift(q, i))))))

axiom same_block_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(shift(q, i), p)].
        (same_block(q, p) -> same_block(shift(q, i), p)))))

axiom sub_pointer_shift:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> (p = shift(q, sub_pointer(p, q))))))

axiom sub_pointer_self:
  (forall p:'a1 pointer [sub_pointer(p, p)]. (sub_pointer(p, p) = 0))

axiom sub_pointer_zero:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> ((sub_pointer(p, q) = 0) -> (p = q)))))

axiom sub_pointer_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(shift(p, i), q)]. (sub_pointer(shift(p, i),
        q) = (sub_pointer(p, q) + i)))))

axiom sub_pointer_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(p, shift(q, i))]. (sub_pointer(p, shift(q,
        i)) = (sub_pointer(p, q) - i)))))

type ('t, 'v) memory

logic select : ('a2, 'a1) memory, 'a2 pointer -> 'a1

logic store : ('a1, 'a2) memory, 'a1 pointer, 'a2 -> ('a1, 'a2) memory

axiom select_store_eq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 = p2) -> (select(store(m, p1, a), p2) = a))))))

axiom select_store_neq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 <> p2) -> (select(store(m, p1, a), p2) = select(m, p2)))))))

type 't pset

logic pset_empty : 'a1 pset

logic pset_singleton : 'a1 pointer -> 'a1 pset

logic pset_deref : ('a2, 'a1 pointer) memory, 'a2 pset -> 'a1 pset

logic pset_union : 'a1 pset, 'a1 pset -> 'a1 pset

logic pset_all : 'a1 pset -> 'a1 pset

logic pset_range : 'a1 pset, int, int -> 'a1 pset

logic pset_range_left : 'a1 pset, int -> 'a1 pset

logic pset_range_right : 'a1 pset, int -> 'a1 pset

logic in_pset : 'a1 pointer, 'a1 pset -> prop

logic valid_pset : 'a1 alloc_table, 'a1 pset -> prop

predicate pset_disjoint(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (not (in_pset(p, ps1) and in_pset(p, ps2))))

predicate pset_included(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (in_pset(p, ps1) -> in_pset(p, ps2)))

axiom pset_included_self: (forall ps:'a1 pset. pset_included(ps, ps))

axiom pset_included_range:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))].
            (((c <= a) and (b <= d)) -> pset_included(pset_range(ps, a, b),
             pset_range(ps, c, d))))))))

axiom pset_included_range_all:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))]. pset_included(pset_range(ps, a, b), pset_all(ps)))))))

axiom in_pset_empty: (forall p:'a1 pointer. (not in_pset(p, pset_empty)))

axiom in_pset_singleton:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. (in_pset(p, pset_singleton(q)) <-> (p = q))))

axiom in_pset_deref:
  (forall p:'a1 pointer.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (in_pset(p, pset_deref(m, q)) <->
         (exists r:'a2 pointer. (in_pset(r, q) and (p = select(m, r))))))))

axiom in_pset_all:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (in_pset(p, pset_all(q)) <->
       (exists i:int.
         (exists r:'a1 pointer. (in_pset(r, q) and (p = shift(r, i))))))))

axiom in_pset_range:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (forall b:int.
          (in_pset(p, pset_range(q, a, b)) <->
           (exists i:int.
             (exists r:'a1 pointer.
               ((a <= i) and
                ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))))

axiom in_pset_range_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall b:int.
        (in_pset(p, pset_range_left(q, b)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_range_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (in_pset(p, pset_range_right(q, a)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((a <= i) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_union:
  (forall p:'a1 pointer.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (in_pset(p, pset_union(s1, s2)) <->
         (in_pset(p, s1) or in_pset(p, s2))))))

axiom valid_pset_empty: (forall a:'a1 alloc_table. valid_pset(a, pset_empty))

axiom valid_pset_singleton:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (valid_pset(a, pset_singleton(p)) <-> valid(a, p))))

axiom valid_pset_deref:
  (forall a:'a1 alloc_table.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (valid_pset(a, pset_deref(m, q)) <->
         (forall r:'a2 pointer.
           (forall p:'a1 pointer.
             ((in_pset(r, q) and (p = select(m, r))) -> valid(a, p))))))))

axiom valid_pset_range:
  (forall a:'a1 alloc_table.
    (forall q:'a1 pset.
      (forall c:int.
        (forall d:int.
          (valid_pset(a, pset_range(q, c, d)) <->
           (forall i:int.
             (forall r:'a1 pointer.
               ((in_pset(r, q) and ((c <= i) and (i <= d))) -> valid(a,
                shift(r, i))))))))))

axiom valid_pset_union:
  (forall a:'a1 alloc_table.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (valid_pset(a, pset_union(s1, s2)) <->
         (valid_pset(a, s1) and valid_pset(a, s2))))))

predicate not_assigns(a: 'a1 alloc_table, m1: ('a1, 'a2) memory, m2: ('a1,
  'a2) memory, l: 'a1 pset) =
  (forall p:'a1 pointer.
    ((valid(a, p) and (not in_pset(p, l))) -> (select(m2, p) = select(m1, p))))

axiom not_assigns_refl:
  (forall a:'a1 alloc_table.
    (forall m:('a1, 'a2) memory.
      (forall l:'a1 pset. not_assigns(a, m, m, l))))

axiom not_assigns_trans:
  (forall a:'a1 alloc_table.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory.
          (forall l:'a1 pset [not_assigns(a, m1, m2, l), not_assigns(a, m1,
            m3, l)].
            (not_assigns(a, m1, m2, l) ->
             (not_assigns(a, m2, m3, l) -> not_assigns(a, m1, m3, l))))))))

logic full_separated : 'a1 pointer, 'a2 pointer -> prop

axiom full_separated_shift1:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(p, shift(q, i))))))

axiom full_separated_shift2:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift3:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift4:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(p, shift(q, i))))))

type 't tag_table

type 't tag_id

logic int_of_tag : 'a1 tag_id -> int

logic typeof : 'a1 tag_table, 'a1 pointer -> 'a1 tag_id

logic parenttag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag_bool : 'a1 tag_id, 'a1 tag_id -> bool

axiom subtag_bool_def:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id. ((subtag_bool(t1, t2) = true) <-> subtag(t1, t2))))

axiom subtag_refl: (forall t:'a1 tag_id. subtag(t, t))

axiom subtag_parent:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id.
      (forall t3:'a1 tag_id.
        (subtag(t1, t2) -> (parenttag(t2, t3) -> subtag(t1, t3))))))

predicate instanceof(a: 'a1 tag_table, p: 'a1 pointer, t: 'a1 tag_id) =
  subtag(typeof(a, p), t)

logic downcast : 'a1 tag_table, 'a1 pointer, 'a1 tag_id -> 'a1 pointer

axiom downcast_instanceof:
  (forall a:'a1 tag_table.
    (forall p:'a1 pointer.
      (forall s:'a1 tag_id. (instanceof(a, p, s) -> (downcast(a, p, s) = p)))))

logic bottom_tag : 'a1 tag_id

axiom bottom_tag_axiom: (forall t:'a1 tag_id. subtag(t, bottom_tag))

predicate root_tag(t: 'a1 tag_id) = parenttag(t, bottom_tag)

axiom root_subtag:
  (forall a:'a1 tag_id.
    (forall b:'a1 tag_id.
      (forall c:'a1 tag_id.
        (root_tag(a) ->
         (root_tag(b) -> ((a <> b) -> (subtag(c, a) -> (not subtag(c, b)))))))))

predicate fully_packed(tag_table: 'a1 tag_table, mutable: ('a1,
  'a1 tag_id) memory, this: 'a1 pointer) = (select(mutable,
  this) = typeof(tag_table, this))

logic bw_compl : int -> int

logic bw_and : int, int -> int

axiom bw_and_not_null:
  (forall a:int.
    (forall b:int. ((bw_and(a, b) <> 0) -> ((a <> 0) and (b <> 0)))))

logic bw_xor : int, int -> int

logic bw_or : int, int -> int

logic lsl : int, int -> int

axiom lsl_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsl(a, b)))))

axiom lsl_left_positive_monotone:
  (forall a1:int.
    (forall a2:int.
      (forall b:int.
        (((0 <= a1) and ((a1 <= a2) and (0 <= b))) -> (lsl(a1, b) <= lsl(a2,
         b))))))

logic lsr : int, int -> int

axiom lsr_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsr(a, b)))))

axiom lsr_left_positive_decreases:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(a, b) <= a))))

logic asr : int, int -> int

axiom asr_positive_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= asr(a, b)))))

axiom asr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) <= a))))

axiom asr_lsr_same_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) = lsr(a, b)))))

axiom lsl_of_lsr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsl(lsr(a, b), b) <= a))))

axiom lsr_of_lsl_identity_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(lsl(a, b), b) = a))))

logic alloc_extends : 'a1 alloc_table, 'a1 alloc_table -> prop

predicate alloc_fresh(a: 'a1 alloc_table, p: 'a1 pointer, n: int) =
  (forall i:int. (((0 <= i) and (i < n)) -> (not valid(a, shift(p, i)))))

axiom alloc_extends_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_min(a1, p) = offset_min(a2, p)))))))

axiom alloc_extends_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_max(a1, p) = offset_max(a2, p)))))))

axiom alloc_extends_not_assigns_empty:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory.
          (forall l:'a1 pset.
            (forall p:'a1 pointer.
              (forall n:int [alloc_extends(a1, a2), alloc_fresh(a1, p, n),
                not_assigns(a2, m1, m2, l)].
                ((alloc_extends(a1, a2) and
                  (alloc_fresh(a1, p, n) and
                   (not_assigns(a2, m1, m2, l) and pset_included(l,
                    pset_all(pset_singleton(p)))))) ->
                 not_assigns(a1, m1, m2, pset_empty)))))))))

logic alloc_extends_except : 'a1 alloc_table, 'a1 alloc_table,
'a1 pset -> prop

axiom alloc_extends_except_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_min(a1,
            p) = offset_min(a2, p))))))))

axiom alloc_extends_except_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_max(a1,
            p) = offset_max(a2, p))))))))

type 'a mybag

logic in_mybag : 'a1, 'a1 mybag -> prop

logic disj_mybag : 'a1 mybag, 'a1 mybag -> prop

axiom disj_sym:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag [disj_mybag(s1, s2)].
      (disj_mybag(s1, s2) -> disj_mybag(s2, s1))))

logic sub_mybag : 'a1 mybag, 'a1 mybag -> prop

axiom sub_refl:
  (forall sa:'a1 pointer mybag [sub_mybag(sa, sa)]. sub_mybag(sa, sa))

axiom sub_disj:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall s3:'a1 mybag [disj_mybag(s1, s2), sub_mybag(s2, s3)|
        disj_mybag(s1, s3), sub_mybag(s2, s3)].
        (disj_mybag(s1, s3) -> (sub_mybag(s2, s3) -> disj_mybag(s1, s2))))))

axiom sub_in:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall p:'a1 [in_mybag(p, s1), sub_mybag(s1, s2)| in_mybag(p, s2),
        sub_mybag(s1, s2)].
        ((not in_mybag(p, s2)) ->
         (sub_mybag(s1, s2) -> (not in_mybag(p, s1)))))))

axiom sub_sub:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall s3:'a1 mybag [sub_mybag(s1, s3), sub_mybag(s2, s3)|
        sub_mybag(s1, s3), sub_mybag(s1, s2)].
        (sub_mybag(s1, s2) -> (sub_mybag(s2, s3) -> sub_mybag(s1, s3))))))

logic frame_between : 'a1 pointer mybag, ('a1, 'a2) memory, ('a1,
'a2) memory -> prop

axiom frame_between_refl:
  (forall sa:'a1 pointer mybag.
    (forall m:('a1, 'a2) memory [frame_between(sa, m, m)]. frame_between(sa,
      m, m)))

axiom frame_between_gen:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall p:'a1 pointer.
          (forall v:'a2 [frame_between(sa, m1, store(m2, p, v))].
            (frame_between(sa, m1, m2) ->
             (in_mybag(p, sa) -> frame_between(sa, store(m1, p, v), m2))))))))

axiom frame_between_gen2:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory [frame_between(sa, m1, m2),
          frame_between(sa, m1, m3)| frame_between(sa, m2, m3),
          frame_between(sa, m1, m3)].
          (frame_between(sa, m1, m2) ->
           (frame_between(sa, m2, m3) -> frame_between(sa, m1, m3)))))))

axiom frame_between_gen_sub1:
  (forall s12:'a1 pointer mybag.
    (forall s23:'a1 pointer mybag.
      (forall s13:'a1 pointer mybag.
        (forall m1:('a1, 'a2) memory.
          (forall m2:('a1, 'a2) memory.
            (forall m3:('a1, 'a2) memory [frame_between(s12, m1, m2),
              frame_between(s13, m1, m3)].
              (sub_mybag(s12, s13) ->
               (frame_between(s12, m1, m2) ->
                (frame_between(s23, m2, m3) -> frame_between(s13, m1, m3))))))))))

axiom frame_between_gen_sub2:
  (forall s12:'a1 pointer mybag.
    (forall s23:'a1 pointer mybag.
      (forall s13:'a1 pointer mybag.
        (forall m1:('a1, 'a2) memory.
          (forall m2:('a1, 'a2) memory.
            (forall m3:('a1, 'a2) memory [frame_between(s23, m2, m3),
              frame_between(s13, m1, m3)].
              (frame_between(s12, m1, m2) ->
               (sub_mybag(s23, s13) ->
                (frame_between(s23, m2, m3) -> frame_between(s13, m1, m3))))))))))

axiom frame_between_pointer:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall p:'a1 pointer.
          (forall v:'a2 [frame_between(sa, m1, m2), select(m1, p)|
            frame_between(sa, m1, m2), select(m2, p)].
            (frame_between(sa, m1, m2) ->
             ((not in_mybag(p, sa)) -> (select(m1, p) = select(m2, p)))))))))

axiom frame_between_sub:
  (forall sa:'a1 pointer mybag.
    (forall sb:'a1 pointer mybag.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory [frame_between(sa, m1, m2),
          sub_mybag(sa, sb)].
          (frame_between(sa, m1, m2) ->
           (sub_mybag(sa, sb) -> frame_between(sb, m1, m2)))))))

type Object

type byte

type char

type int32

type interface

type long

type short

logic Exception_tag : Object tag_id

logic Object_tag : Object tag_id

axiom Exception_parenttag_Object: parenttag(Exception_tag, Object_tag)

logic Muller_tag : Object tag_id

axiom Muller_parenttag_Object: parenttag(Muller_tag, Object_tag)

predicate Non_null_Object(x_1: Object pointer,
  Object_x_2_alloc_table: Object alloc_table) =
  (offset_max(Object_x_2_alloc_table, x_1) >= 0)

predicate Non_null_intM(x_0: Object pointer,
  Object_x_1_alloc_table: Object alloc_table) =
  (offset_max(Object_x_1_alloc_table, x_0) >= (-1))

axiom Object_int: (int_of_tag(Object_tag) = 1)

logic Object_of_pointer_address : unit pointer -> Object pointer

axiom Object_of_pointer_address_of_pointer_addr:
  (forall p:Object pointer.
    (p = Object_of_pointer_address(pointer_address(p))))

axiom Object_parenttag_bottom: parenttag(Object_tag, bottom_tag)

axiom Object_tags:
  (forall x:Object pointer.
    (forall Object_tag_table:Object tag_table. instanceof(Object_tag_table,
      x, Object_tag)))

logic String_tag : Object tag_id

axiom String_parenttag_Object: parenttag(String_tag, Object_tag)

logic Throwable_tag : Object tag_id

axiom Throwable_parenttag_Object: parenttag(Throwable_tag, Object_tag)

logic integer_of_byte : byte -> int

logic byte_of_integer : int -> byte

axiom byte_coerce:
  (forall x:int.
    ((((-128) <= x) and (x <= 127)) ->
     (integer_of_byte(byte_of_integer(x)) = x)))

axiom byte_extensionality:
  (forall x:byte.
    (forall y:byte. ((integer_of_byte(x) = integer_of_byte(y)) -> (x = y))))

axiom byte_range:
  (forall x:byte.
    (((-128) <= integer_of_byte(x)) and (integer_of_byte(x) <= 127)))

logic integer_of_char : char -> int

logic char_of_integer : int -> char

axiom char_coerce:
  (forall x:int.
    (((0 <= x) and (x <= 65535)) -> (integer_of_char(char_of_integer(x)) = x)))

axiom char_extensionality:
  (forall x:char.
    (forall y:char. ((integer_of_char(x) = integer_of_char(y)) -> (x = y))))

axiom char_range:
  (forall x:char.
    ((0 <= integer_of_char(x)) and (integer_of_char(x) <= 65535)))

predicate eq_byte(x: byte, y: byte) =
  (integer_of_byte(x) = integer_of_byte(y))

predicate eq_char(x: char, y: char) =
  (integer_of_char(x) = integer_of_char(y))

logic integer_of_int32 : int32 -> int

predicate eq_int32(x: int32, y: int32) =
  (integer_of_int32(x) = integer_of_int32(y))

logic integer_of_long : long -> int

predicate eq_long(x: long, y: long) =
  (integer_of_long(x) = integer_of_long(y))

logic integer_of_short : short -> int

predicate eq_short(x: short, y: short) =
  (integer_of_short(x) = integer_of_short(y))

logic int32_of_integer : int -> int32

axiom int32_coerce:
  (forall x:int.
    ((((-2147483648) <= x) and (x <= 2147483647)) ->
     (integer_of_int32(int32_of_integer(x)) = x)))

axiom int32_extensionality:
  (forall x:int32.
    (forall y:int32.
      ((integer_of_int32(x) = integer_of_int32(y)) -> (x = y))))

axiom int32_range:
  (forall x:int32.
    (((-2147483648) <= integer_of_int32(x)) and
     (integer_of_int32(x) <= 2147483647)))

logic intM_tag : Object tag_id

axiom intM_parenttag_Object: parenttag(intM_tag, Object_tag)

logic interface_tag : interface tag_id

axiom interface_int: (int_of_tag(interface_tag) = 1)

logic interface_of_pointer_address : unit pointer -> interface pointer

axiom interface_of_pointer_address_of_pointer_addr:
  (forall p:interface pointer.
    (p = interface_of_pointer_address(pointer_address(p))))

axiom interface_parenttag_bottom: parenttag(interface_tag, bottom_tag)

axiom interface_tags:
  (forall x:interface pointer.
    (forall interface_tag_table:interface tag_table.
      instanceof(interface_tag_table, x, interface_tag)))

predicate left_valid_struct_Object(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = (offset_min(Object_alloc_table,
  p) <= a)

predicate left_valid_struct_Exception(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_Muller(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_String(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_Throwable(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_intM(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_interface(p: interface pointer, a: int,
  interface_alloc_table: interface alloc_table) =
  (offset_min(interface_alloc_table, p) <= a)

logic long_of_integer : int -> long

axiom long_coerce:
  (forall x:int.
    ((((-9223372036854775808) <= x) and (x <= 9223372036854775807)) ->
     (integer_of_long(long_of_integer(x)) = x)))

axiom long_extensionality:
  (forall x:long.
    (forall y:long. ((integer_of_long(x) = integer_of_long(y)) -> (x = y))))

axiom long_range:
  (forall x:long.
    (((-9223372036854775808) <= integer_of_long(x)) and
     (integer_of_long(x) <= 9223372036854775807)))

logic num_of_pos : int, int, Object pointer, (Object, int32) memory -> int

axiom pointer_addr_of_Object_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(Object_of_pointer_address(p))))

axiom pointer_addr_of_interface_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(interface_of_pointer_address(p))))

predicate right_valid_struct_Object(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = (offset_max(Object_alloc_table,
  p) >= b)

predicate right_valid_struct_Exception(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_Muller(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_String(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_Throwable(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_intM(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_interface(p: interface pointer, b: int,
  interface_alloc_table: interface alloc_table) =
  (offset_max(interface_alloc_table, p) >= b)

logic short_of_integer : int -> short

axiom short_coerce:
  (forall x:int.
    ((((-32768) <= x) and (x <= 32767)) ->
     (integer_of_short(short_of_integer(x)) = x)))

axiom short_extensionality:
  (forall x:short.
    (forall y:short.
      ((integer_of_short(x) = integer_of_short(y)) -> (x = y))))

axiom short_range:
  (forall x:short.
    (((-32768) <= integer_of_short(x)) and (integer_of_short(x) <= 32767)))

predicate strict_valid_root_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) = a) and
   (offset_max(Object_alloc_table, p) = b))

predicate strict_valid_root_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) = a) and
   (offset_max(interface_alloc_table, p) = b))

predicate strict_valid_struct_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) = a) and
   (offset_max(Object_alloc_table, p) = b))

predicate strict_valid_struct_Exception(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_Muller(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_String(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_Throwable(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_intM(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) = a) and
   (offset_max(interface_alloc_table, p) = b))

predicate valid_root_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) <= a) and
   (offset_max(Object_alloc_table, p) >= b))

predicate valid_root_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) <= a) and
   (offset_max(interface_alloc_table, p) >= b))

predicate valid_struct_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) <= a) and
   (offset_max(Object_alloc_table, p) >= b))

predicate valid_struct_Exception(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_Muller(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_String(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_Throwable(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_intM(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) <= a) and
   (offset_max(interface_alloc_table, p) >= b))

axiom num_of_pos_false_case:
  (forall intM_intP_t_8_at_L:(Object, int32) memory.
    (forall i_2:int.
      (forall j_2:int.
        (forall k_0:int.
          (forall t_2:Object pointer.
            (((i_2 < j_2) and
              (not (integer_of_int32(select(intM_intP_t_8_at_L, shift(t_2,
              (j_2 - 1)))) > 0))) ->
             (num_of_pos(i_2, j_2, t_2, intM_intP_t_8_at_L) = num_of_pos(i_2,
             (j_2 - 1), t_2, intM_intP_t_8_at_L))))))))

axiom num_of_pos_true_case:
  (forall intM_intP_t_8_at_L:(Object, int32) memory.
    (forall i_1:int.
      (forall j_1:int.
        (forall k:int.
          (forall t_1:Object pointer.
            (((i_1 < j_1) and (integer_of_int32(select(intM_intP_t_8_at_L,
              shift(t_1, (j_1 - 1)))) > 0)) ->
             (num_of_pos(i_1, j_1, t_1,
             intM_intP_t_8_at_L) = (num_of_pos(i_1, (j_1 - 1), t_1,
             intM_intP_t_8_at_L) + 1))))))))

axiom num_of_pos_empty:
  (forall intM_intP_t_8_at_L:(Object, int32) memory.
    (forall i_0:int.
      (forall j_0:int.
        (forall t_0:Object pointer.
          ((i_0 >= j_0) -> (num_of_pos(i_0, j_0, t_0,
           intM_intP_t_8_at_L) = 0))))))

goal num_of_pos_non_negative:
  (forall intM_intP_t_3_18_at_L:(Object, int32) memory.
    (forall i_3:int.
      (forall j_3:int.
        (forall t_3:Object pointer. (0 <= num_of_pos(i_3, j_3, t_3,
          intM_intP_t_3_18_at_L))))))

axiom num_of_pos_non_negative_as_axiom:
  (forall intM_intP_t_3_18_at_L:(Object, int32) memory.
    (forall i_3:int.
      (forall j_3:int.
        (forall t_3:Object pointer. (0 <= num_of_pos(i_3, j_3, t_3,
          intM_intP_t_3_18_at_L))))))

goal num_of_pos_additive:
  (forall intM_intP_t_4_19_at_L:(Object, int32) memory.
    (forall i_4:int.
      (forall j_4:int.
        (forall k_1:int.
          (forall t_4:Object pointer.
            (((i_4 <= j_4) and (j_4 <= k_1)) -> (num_of_pos(i_4, k_1, t_4,
             intM_intP_t_4_19_at_L) = (num_of_pos(i_4, j_4, t_4,
             intM_intP_t_4_19_at_L) + num_of_pos(j_4, k_1, t_4,
             intM_intP_t_4_19_at_L)))))))))

axiom num_of_pos_additive_as_axiom:
  (forall intM_intP_t_4_19_at_L:(Object, int32) memory.
    (forall i_4:int.
      (forall j_4:int.
        (forall k_1:int.
          (forall t_4:Object pointer.
            (((i_4 <= j_4) and (j_4 <= k_1)) -> (num_of_pos(i_4, k_1, t_4,
             intM_intP_t_4_19_at_L) = (num_of_pos(i_4, j_4, t_4,
             intM_intP_t_4_19_at_L) + num_of_pos(j_4, k_1, t_4,
             intM_intP_t_4_19_at_L)))))))))

goal num_of_pos_increasing:
  (forall intM_intP_t_5_20_at_L:(Object, int32) memory.
    (forall i_5:int.
      (forall j_5:int.
        (forall k_2:int.
          (forall t_5:Object pointer.
            ((j_5 <= k_2) -> (num_of_pos(i_5, j_5, t_5,
             intM_intP_t_5_20_at_L) <= num_of_pos(i_5, k_2, t_5,
             intM_intP_t_5_20_at_L))))))))

axiom num_of_pos_increasing_as_axiom:
  (forall intM_intP_t_5_20_at_L:(Object, int32) memory.
    (forall i_5:int.
      (forall j_5:int.
        (forall k_2:int.
          (forall t_5:Object pointer.
            ((j_5 <= k_2) -> (num_of_pos(i_5, j_5, t_5,
             intM_intP_t_5_20_at_L) <= num_of_pos(i_5, k_2, t_5,
             intM_intP_t_5_20_at_L))))))))

goal num_of_pos_strictly_increasing:
  (forall intM_intP_t_6_21_at_L:(Object, int32) memory.
    (forall i_6:int.
      (forall n:int.
        (forall t_6:Object pointer.
          (((0 <= i_6) and
            ((i_6 < n) and (integer_of_int32(select(intM_intP_t_6_21_at_L,
             shift(t_6, i_6))) > 0))) ->
           (num_of_pos(0, i_6, t_6, intM_intP_t_6_21_at_L) < num_of_pos(0, n,
           t_6, intM_intP_t_6_21_at_L)))))))

axiom num_of_pos_strictly_increasing_as_axiom:
  (forall intM_intP_t_6_21_at_L:(Object, int32) memory.
    (forall i_6:int.
      (forall n:int.
        (forall t_6:Object pointer.
          (((0 <= i_6) and
            ((i_6 < n) and (integer_of_int32(select(intM_intP_t_6_21_at_L,
             shift(t_6, i_6))) > 0))) ->
           (num_of_pos(0, i_6, t_6, intM_intP_t_6_21_at_L) < num_of_pos(0, n,
           t_6, intM_intP_t_6_21_at_L)))))))

goal Muller_m_ensures_default_po_1:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  ("JC_85": ("JC_80": (0 <= integer_of_int32(result0))))

goal Muller_m_ensures_default_po_2:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  ("JC_85":
  ("JC_81":
  (integer_of_int32(result0) <= (offset_max(Object_t_7_9_alloc_table,
  t_7) + 1))))

goal Muller_m_ensures_default_po_3:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  ("JC_85": ("JC_82": (0 <= integer_of_int32(result))))

goal Muller_m_ensures_default_po_4:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  ("JC_85":
  ("JC_83": (integer_of_int32(result) <= integer_of_int32(result0))))

goal Muller_m_ensures_default_po_5:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  ("JC_85":
  ("JC_84": (integer_of_int32(result) = num_of_pos(0,
  integer_of_int32(result0), t_7, intM_intP_t_7_9))))

goal Muller_m_ensures_default_po_6:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result4) ->
  ("JC_85": ("JC_80": (0 <= integer_of_int32(i_7_0))))

goal Muller_m_ensures_default_po_7:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result4) ->
  ("JC_85":
  ("JC_81": (integer_of_int32(i_7_0) <= (offset_max(Object_t_7_9_alloc_table,
  t_7) + 1))))

goal Muller_m_ensures_default_po_8:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result4) ->
  ("JC_85": ("JC_82": (0 <= integer_of_int32(count0))))

goal Muller_m_ensures_default_po_9:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result4) ->
  ("JC_85": ("JC_83": (integer_of_int32(count0) <= integer_of_int32(i_7_0))))

goal Muller_m_ensures_default_po_10:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result4) ->
  ("JC_85":
  ("JC_84": (integer_of_int32(count0) = num_of_pos(0,
  integer_of_int32(i_7_0), t_7, intM_intP_t_7_9))))

goal Muller_m_ensures_default_po_11:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result3) ->
  ("JC_85": ("JC_80": (0 <= integer_of_int32(i_7_0))))

goal Muller_m_ensures_default_po_12:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result3) ->
  ("JC_85":
  ("JC_81": (integer_of_int32(i_7_0) <= (offset_max(Object_t_7_9_alloc_table,
  t_7) + 1))))

goal Muller_m_ensures_default_po_13:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result3) ->
  ("JC_85": ("JC_82": (0 <= integer_of_int32(count))))

goal Muller_m_ensures_default_po_14:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result3) ->
  ("JC_85": ("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7_0))))

goal Muller_m_ensures_default_po_15:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result3) ->
  ("JC_85":
  ("JC_84": (integer_of_int32(count) = num_of_pos(0, integer_of_int32(i_7_0),
  t_7, intM_intP_t_7_9))))

goal Muller_m_ensures_default_po_16:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  ("JC_96": ("JC_91": (0 <= integer_of_int32(result4))))

goal Muller_m_ensures_default_po_17:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  ("JC_96":
  ("JC_92":
  (integer_of_int32(result4) <= (offset_max(Object_t_7_9_alloc_table,
  t_7) + 1))))

goal Muller_m_ensures_default_po_18:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  ("JC_96": ("JC_93": (0 <= integer_of_int32(count0))))

goal Muller_m_ensures_default_po_19:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  ("JC_96":
  ("JC_94": (integer_of_int32(count0) <= integer_of_int32(result4))))

goal Muller_m_ensures_default_po_20:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  ("JC_96":
  ("JC_95": (integer_of_int32(count0) = num_of_pos(0,
  integer_of_int32(result4), t_7, intM_intP_t_7_9))))

goal Muller_m_ensures_default_po_21:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  forall result9:int32.
  (integer_of_int32(result9) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result9) ->
  ("JC_96": ("JC_91": (0 <= integer_of_int32(i_8_0))))

goal Muller_m_ensures_default_po_22:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  forall result9:int32.
  (integer_of_int32(result9) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result9) ->
  ("JC_96":
  ("JC_92": (integer_of_int32(i_8_0) <= (offset_max(Object_t_7_9_alloc_table,
  t_7) + 1))))

goal Muller_m_ensures_default_po_23:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  forall result9:int32.
  (integer_of_int32(result9) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result9) ->
  ("JC_96": ("JC_93": (0 <= integer_of_int32(count2))))

goal Muller_m_ensures_default_po_24:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  forall result9:int32.
  (integer_of_int32(result9) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result9) ->
  ("JC_96": ("JC_94": (integer_of_int32(count2) <= integer_of_int32(i_8_0))))

goal Muller_m_ensures_default_po_25:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  forall result9:int32.
  (integer_of_int32(result9) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result9) ->
  ("JC_96":
  ("JC_95": (integer_of_int32(count2) = num_of_pos(0,
  integer_of_int32(i_8_0), t_7, intM_intP_t_7_9))))

goal Muller_m_ensures_default_po_26:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  forall result7:int32.
  (integer_of_int32(result7) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result7) ->
  ("JC_96": ("JC_91": (0 <= integer_of_int32(i_8_0))))

goal Muller_m_ensures_default_po_27:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  forall result7:int32.
  (integer_of_int32(result7) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result7) ->
  ("JC_96":
  ("JC_92": (integer_of_int32(i_8_0) <= (offset_max(Object_t_7_9_alloc_table,
  t_7) + 1))))

goal Muller_m_ensures_default_po_28:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  forall result7:int32.
  (integer_of_int32(result7) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result7) ->
  ("JC_96": ("JC_93": (0 <= integer_of_int32(count1))))

goal Muller_m_ensures_default_po_29:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  forall result7:int32.
  (integer_of_int32(result7) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result7) ->
  ("JC_96": ("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8_0))))

goal Muller_m_ensures_default_po_30:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_85":
  (("JC_80": (0 <= integer_of_int32(i_7))) and
   (("JC_81": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_82": (0 <= integer_of_int32(count))) and
     (("JC_83": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_84": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_96":
  (("JC_91": (0 <= integer_of_int32(i_8))) and
   (("JC_92": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_93": (0 <= integer_of_int32(count1))) and
     (("JC_94": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  forall result7:int32.
  (integer_of_int32(result7) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result7) ->
  ("JC_96":
  ("JC_95": (integer_of_int32(count1) = num_of_pos(0,
  integer_of_int32(i_8_0), t_7, intM_intP_t_7_9))))

goal Muller_m_safety_po_1:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1))

goal Muller_m_safety_po_2:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  (offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7))

goal Muller_m_safety_po_3:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))

goal Muller_m_safety_po_4:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  ((-2147483648) <= (integer_of_int32(count) + 1))

goal Muller_m_safety_po_5:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  ((integer_of_int32(count) + 1) <= 2147483647)

goal Muller_m_safety_po_6:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  (((-2147483648) <= (integer_of_int32(count) + 1)) and
   ((integer_of_int32(count) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  ((-2147483648) <= (integer_of_int32(i_7) + 1))

goal Muller_m_safety_po_7:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  (((-2147483648) <= (integer_of_int32(count) + 1)) and
   ((integer_of_int32(count) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  ((integer_of_int32(i_7) + 1) <= 2147483647)

goal Muller_m_safety_po_8:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  (((-2147483648) <= (integer_of_int32(count) + 1)) and
   ((integer_of_int32(count) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  (((-2147483648) <= (integer_of_int32(i_7) + 1)) and
   ((integer_of_int32(i_7) + 1) <= 2147483647)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result4) ->
  (0 <= ("JC_61": ((offset_max(Object_t_7_9_alloc_table,
        t_7) + 1) - integer_of_int32(i_7))))

goal Muller_m_safety_po_9:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) > 0) ->
  (((-2147483648) <= (integer_of_int32(count) + 1)) and
   ((integer_of_int32(count) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(count) + 1)) ->
  forall count0:int32.
  (count0 = result3) ->
  (((-2147483648) <= (integer_of_int32(i_7) + 1)) and
   ((integer_of_int32(i_7) + 1) <= 2147483647)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result4) ->
  (("JC_61": ((offset_max(Object_t_7_9_alloc_table,
   t_7) + 1) - integer_of_int32(i_7_0))) < ("JC_61":
                                           ((offset_max(Object_t_7_9_alloc_table,
                                           t_7) + 1) - integer_of_int32(i_7))))

goal Muller_m_safety_po_10:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  ((-2147483648) <= (integer_of_int32(i_7) + 1))

goal Muller_m_safety_po_11:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  ((integer_of_int32(i_7) + 1) <= 2147483647)

goal Muller_m_safety_po_12:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  (((-2147483648) <= (integer_of_int32(i_7) + 1)) and
   ((integer_of_int32(i_7) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result3) ->
  (0 <= ("JC_61": ((offset_max(Object_t_7_9_alloc_table,
        t_7) + 1) - integer_of_int32(i_7))))

goal Muller_m_safety_po_13:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) < result1) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_7)) and
   (integer_of_int32(i_7) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result2:int32.
  (result2 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_7)))) ->
  (integer_of_int32(result2) <= 0) ->
  (((-2147483648) <= (integer_of_int32(i_7) + 1)) and
   ((integer_of_int32(i_7) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_7) + 1)) ->
  forall i_7_0:int32.
  (i_7_0 = result3) ->
  (("JC_61": ((offset_max(Object_t_7_9_alloc_table,
   t_7) + 1) - integer_of_int32(i_7_0))) < ("JC_61":
                                           ((offset_max(Object_t_7_9_alloc_table,
                                           t_7) + 1) - integer_of_int32(i_7))))

goal Muller_m_safety_po_14:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0)

goal Muller_m_safety_po_15:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  (offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8))

goal Muller_m_safety_po_16:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))

goal Muller_m_safety_po_17:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  ((-2147483648) <= (integer_of_int32(count1) + 1))

goal Muller_m_safety_po_18:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  ((integer_of_int32(count1) + 1) <= 2147483647)

goal Muller_m_safety_po_19:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (((-2147483648) <= (integer_of_int32(count1) + 1)) and
   ((integer_of_int32(count1) + 1) <= 2147483647)) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  (offset_min(Object_Muller_m_11_alloc_table0,
  result2) <= integer_of_int32(count1))

goal Muller_m_safety_po_20:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (((-2147483648) <= (integer_of_int32(count1) + 1)) and
   ((integer_of_int32(count1) + 1) <= 2147483647)) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  (integer_of_int32(count1) <= offset_max(Object_Muller_m_11_alloc_table0,
  result2))

goal Muller_m_safety_po_21:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (((-2147483648) <= (integer_of_int32(count1) + 1)) and
   ((integer_of_int32(count1) + 1) <= 2147483647)) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  ((offset_min(Object_Muller_m_11_alloc_table0,
   result2) <= integer_of_int32(count1)) and
   (integer_of_int32(count1) <= offset_max(Object_Muller_m_11_alloc_table0,
   result2))) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  ((-2147483648) <= (integer_of_int32(i_8) + 1))

goal Muller_m_safety_po_22:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (((-2147483648) <= (integer_of_int32(count1) + 1)) and
   ((integer_of_int32(count1) + 1) <= 2147483647)) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  ((offset_min(Object_Muller_m_11_alloc_table0,
   result2) <= integer_of_int32(count1)) and
   (integer_of_int32(count1) <= offset_max(Object_Muller_m_11_alloc_table0,
   result2))) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  ((integer_of_int32(i_8) + 1) <= 2147483647)

goal Muller_m_safety_po_23:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (((-2147483648) <= (integer_of_int32(count1) + 1)) and
   ((integer_of_int32(count1) + 1) <= 2147483647)) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  ((offset_min(Object_Muller_m_11_alloc_table0,
   result2) <= integer_of_int32(count1)) and
   (integer_of_int32(count1) <= offset_max(Object_Muller_m_11_alloc_table0,
   result2))) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  (((-2147483648) <= (integer_of_int32(i_8) + 1)) and
   ((integer_of_int32(i_8) + 1) <= 2147483647)) ->
  forall result9:int32.
  (integer_of_int32(result9) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result9) ->
  (0 <= ("JC_79": ((offset_max(Object_t_7_9_alloc_table,
        t_7) + 1) - integer_of_int32(i_8))))

goal Muller_m_safety_po_24:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  forall intM_intP_Muller_m_11:(Object,
  int32) memory.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) > 0) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result7:int32.
  (result7 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (((-2147483648) <= (integer_of_int32(count1) + 1)) and
   ((integer_of_int32(count1) + 1) <= 2147483647)) ->
  forall result8:int32.
  (integer_of_int32(result8) = (integer_of_int32(count1) + 1)) ->
  forall count2:int32.
  (count2 = result8) ->
  ((offset_min(Object_Muller_m_11_alloc_table0,
   result2) <= integer_of_int32(count1)) and
   (integer_of_int32(count1) <= offset_max(Object_Muller_m_11_alloc_table0,
   result2))) ->
  forall intM_intP_Muller_m_11_0:(Object,
  int32) memory.
  (intM_intP_Muller_m_11_0 = store(intM_intP_Muller_m_11, shift(result2,
  integer_of_int32(count1)), result7)) ->
  (((-2147483648) <= (integer_of_int32(i_8) + 1)) and
   ((integer_of_int32(i_8) + 1) <= 2147483647)) ->
  forall result9:int32.
  (integer_of_int32(result9) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result9) ->
  (("JC_79": ((offset_max(Object_t_7_9_alloc_table,
   t_7) + 1) - integer_of_int32(i_8_0))) < ("JC_79":
                                           ((offset_max(Object_t_7_9_alloc_table,
                                           t_7) + 1) - integer_of_int32(i_8))))

goal Muller_m_safety_po_25:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  ((-2147483648) <= (integer_of_int32(i_8) + 1))

goal Muller_m_safety_po_26:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  ((integer_of_int32(i_8) + 1) <= 2147483647)

goal Muller_m_safety_po_27:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  (((-2147483648) <= (integer_of_int32(i_8) + 1)) and
   ((integer_of_int32(i_8) + 1) <= 2147483647)) ->
  forall result7:int32.
  (integer_of_int32(result7) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result7) ->
  (0 <= ("JC_79": ((offset_max(Object_t_7_9_alloc_table,
        t_7) + 1) - integer_of_int32(i_8))))

goal Muller_m_safety_po_28:
  forall t_7:Object pointer.
  forall Object_t_7_9_alloc_table:Object alloc_table.
  forall intM_intP_t_7_9:(Object,
  int32) memory.
  forall Object_Muller_m_11_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_7, 0, Object_t_7_9_alloc_table) and
   ("JC_41": Non_null_intM(t_7, Object_t_7_9_alloc_table))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall result0:int32.
  (integer_of_int32(result0) = 0) ->
  forall count:int32.
  forall i_7:int32.
  ("JC_54": true) ->
  ("JC_52":
  (("JC_47": (0 <= integer_of_int32(i_7))) and
   (("JC_48": (integer_of_int32(i_7) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_49": (0 <= integer_of_int32(count))) and
     (("JC_50": (integer_of_int32(count) <= integer_of_int32(i_7))) and
      ("JC_51": (integer_of_int32(count) = num_of_pos(0,
      integer_of_int32(i_7), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result1:int.
  ("JC_25":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and (result1 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_7) >= result1) ->
  (integer_of_int32(count) >= 0) ->
  forall result2:Object pointer.
  forall Object_Muller_m_11_alloc_table0:Object alloc_table.
  forall Object_Muller_m_11_tag_table:Object tag_table.
  (strict_valid_struct_intM(result2, 0, (integer_of_int32(count) - 1),
   Object_Muller_m_11_alloc_table0) and
   (alloc_extends(Object_Muller_m_11_alloc_table,
    Object_Muller_m_11_alloc_table0) and
    (alloc_fresh(Object_Muller_m_11_alloc_table, result2,
     integer_of_int32(count)) and instanceof(Object_Muller_m_11_tag_table,
     result2, intM_tag)))) ->
  forall result3:int32.
  (integer_of_int32(result3) = 0) ->
  forall count0:int32.
  (count0 = result3) ->
  forall result4:int32.
  (integer_of_int32(result4) = 0) ->
  forall count1:int32.
  forall i_8:int32.
  ("JC_70": true) ->
  ("JC_68":
  (("JC_63": (0 <= integer_of_int32(i_8))) and
   (("JC_64": (integer_of_int32(i_8) <= (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))) and
    (("JC_65": (0 <= integer_of_int32(count1))) and
     (("JC_66": (integer_of_int32(count1) <= integer_of_int32(i_8))) and
      ("JC_67": (integer_of_int32(count1) = num_of_pos(0,
      integer_of_int32(i_8), t_7, intM_intP_t_7_9)))))))) ->
  (offset_max(Object_t_7_9_alloc_table, t_7) >= (-1)) ->
  forall result5:int.
  ("JC_25":
  ((result5 <= 2147483647) and
   ((result5 >= 0) and (result5 = (offset_max(Object_t_7_9_alloc_table,
    t_7) + 1))))) ->
  (integer_of_int32(i_8) < result5) ->
  ((offset_min(Object_t_7_9_alloc_table, t_7) <= integer_of_int32(i_8)) and
   (integer_of_int32(i_8) <= offset_max(Object_t_7_9_alloc_table, t_7))) ->
  forall result6:int32.
  (result6 = select(intM_intP_t_7_9, shift(t_7, integer_of_int32(i_8)))) ->
  (integer_of_int32(result6) <= 0) ->
  (((-2147483648) <= (integer_of_int32(i_8) + 1)) and
   ((integer_of_int32(i_8) + 1) <= 2147483647)) ->
  forall result7:int32.
  (integer_of_int32(result7) = (integer_of_int32(i_8) + 1)) ->
  forall i_8_0:int32.
  (i_8_0 = result7) ->
  (("JC_79": ((offset_max(Object_t_7_9_alloc_table,
   t_7) + 1) - integer_of_int32(i_8_0))) < ("JC_79":
                                           ((offset_max(Object_t_7_9_alloc_table,
                                           t_7) + 1) - integer_of_int32(i_8))))

========== running alt-ergo ==========
Running Alt-Ergo on proof obligations
(. = valid * = invalid ? = unknown # = timeout ! = failure)
why/Muller_why.why            : ?###.......................................................... (58/0/1/3/0)
total   :  62
valid   :  58 ( 94%)
invalid :   0 (  0%)
unknown :   1 (  2%)
timeout :   3 (  5%)
failure :   0 (  0%)
