========== file tests/java/SideEffects.java ==========

//@+ CheckArithOverflow = no

class SideEffects {

    /*@ requires t.length > 10;
      @*/
    void m1(int t[]) {
	int i = 0;
	t[i++] = 1;
	//@ assert t[0] == 1 && i == 1;    
	t[++i] = 2;
	//@ assert t[0] == 1 && t[2] == 2 && i == 2;    
	t[--i] = 3;
	//@ assert t[0] == 1 && t[2] == 2 && t[1] == 3 && i == 1;    
	t[i--] = 4;
	//@ assert t[0] == 1 && t[2] == 2 && t[1] == 4 && i == 0;    
    }

}

========== krakatoa execution ==========
Parsing OK.
Typing OK.
Generating JC function SideEffects_m1 for method SideEffects.m1
Generating JC function cons_SideEffects for constructor SideEffects
Done.
========== file tests/java/SideEffects.jc ==========
# InvariantPolicy = Arguments
# SeparationPolicy = None
# AnnotationPolicy = None
# AbstractDomain = None

logic Non_null_intM{Here}(intM[0..] x) =
(\offset_max(x) >= -1)

logic Non_null_Object{Here}(Object[0..] x) =
(\offset_max(x) == 0)

tag Object = {
}

tag String = Object with {
}

tag Throwable = Object with {
}

tag Exception = Object with {
}

tag SideEffects = Object with {
}

type Object = [Object]

type interface = [interface]

tag interface = {
}

tag intM = Object with {
  integer intP;
}

boolean non_null_intM(! intM[0..] x)
behavior normal:
  ensures (if \result then (\offset_max(x) >= -1) else (x == null));
;

integer java_array_length_intM(! intM[0..] x)
behavior non_null:
  assigns \nothing;
  ensures ((\result <= 2147483647) &&
            ((\result >= 0) && ((\result == (\offset_max(x) + 1)) && true)));
;

boolean non_null_Object(! Object[0..] x)
behavior normal:
  ensures (if \result then (\offset_max(x) == 0) else (x == null));
;

exception Throwable of Throwable[0..]

exception Exception of Exception[0..]

unit SideEffects_m1(SideEffects[0] this_0, intM[0..] t)
  requires (K_36 : ((\offset_max(t) + 1) > 10));
{  
   {  
      (var integer i = (K_35 : 0));
      
      {  (K_2 : ((t + (K_1 : (i ++))).intP = 1));
         (K_6 : 
         (assert (K_5 : ((K_4 : ((t + 0).intP == 1)) && (K_3 : (i == 1))))));
         (K_8 : ((t + (K_7 : (++ i))).intP = 2));
         (K_14 : 
         (assert (K_13 : ((K_12 : ((K_11 : ((t + 0).intP == 1)) &&
                                    (K_10 : ((t + 2).intP == 2)))) &&
                           (K_9 : (i == 2))))));
         (K_16 : ((t + (K_15 : (-- i))).intP = 3));
         (K_24 : 
         (assert (K_23 : ((K_22 : ((K_21 : ((K_20 : ((t + 0).intP == 1)) &&
                                             (K_19 : ((t + 2).intP == 2)))) &&
                                    (K_18 : ((t + 1).intP == 3)))) &&
                           (K_17 : (i == 1))))));
         (K_26 : ((t + (K_25 : (i --))).intP = 4));
         (K_34 : 
         (assert (K_33 : ((K_32 : ((K_31 : ((K_30 : ((t + 0).intP == 1)) &&
                                             (K_29 : ((t + 2).intP == 2)))) &&
                                    (K_28 : ((t + 1).intP == 4)))) &&
                           (K_27 : (i == 0))))))
      }
   }
}

unit cons_SideEffects(! SideEffects[0] this_1){()}

/*
Local Variables:
mode: java
compile-command: "jessie -why-opt -split-user-conj -locs tests/java/SideEffects.jloc tests/java/SideEffects.jc && make -f tests/java/SideEffects.makefile gui"
End:
*/
========== file tests/java/SideEffects.jloc ==========
[K_10]
file = "HOME/tests/java/SideEffects.java"
line = 13
begin = 25
end = 34

[K_11]
file = "HOME/tests/java/SideEffects.java"
line = 13
begin = 12
end = 21

[K_12]
file = "HOME/tests/java/SideEffects.java"
line = 13
begin = 12
end = 34

[K_13]
file = "HOME/tests/java/SideEffects.java"
line = 13
begin = 12
end = 44

[K_14]
file = "HOME/tests/java/SideEffects.java"
line = 13
begin = 12
end = 44

[K_15]
file = "HOME/tests/java/SideEffects.java"
line = 14
begin = 3
end = 6

[K_16]
file = "HOME/tests/java/SideEffects.java"
line = 14
begin = 1
end = 11

[K_17]
file = "HOME/tests/java/SideEffects.java"
line = 15
begin = 51
end = 57

[K_18]
file = "HOME/tests/java/SideEffects.java"
line = 15
begin = 38
end = 47

[K_19]
file = "HOME/tests/java/SideEffects.java"
line = 15
begin = 25
end = 34

[K_20]
file = "HOME/tests/java/SideEffects.java"
line = 15
begin = 12
end = 21

[K_21]
file = "HOME/tests/java/SideEffects.java"
line = 15
begin = 12
end = 34

[K_22]
file = "HOME/tests/java/SideEffects.java"
line = 15
begin = 12
end = 47

[K_23]
file = "HOME/tests/java/SideEffects.java"
line = 15
begin = 12
end = 57

[K_24]
file = "HOME/tests/java/SideEffects.java"
line = 15
begin = 12
end = 57

[K_1]
file = "HOME/tests/java/SideEffects.java"
line = 10
begin = 3
end = 6

[K_25]
file = "HOME/tests/java/SideEffects.java"
line = 16
begin = 3
end = 6

[K_2]
file = "HOME/tests/java/SideEffects.java"
line = 10
begin = 1
end = 11

[K_26]
file = "HOME/tests/java/SideEffects.java"
line = 16
begin = 1
end = 11

[K_3]
file = "HOME/tests/java/SideEffects.java"
line = 11
begin = 25
end = 31

[K_27]
file = "HOME/tests/java/SideEffects.java"
line = 17
begin = 51
end = 57

[K_4]
file = "HOME/tests/java/SideEffects.java"
line = 11
begin = 12
end = 21

[K_28]
file = "HOME/tests/java/SideEffects.java"
line = 17
begin = 38
end = 47

[K_5]
file = "HOME/tests/java/SideEffects.java"
line = 11
begin = 12
end = 31

[K_29]
file = "HOME/tests/java/SideEffects.java"
line = 17
begin = 25
end = 34

[K_6]
file = "HOME/tests/java/SideEffects.java"
line = 11
begin = 12
end = 31

[K_7]
file = "HOME/tests/java/SideEffects.java"
line = 12
begin = 3
end = 6

[K_8]
file = "HOME/tests/java/SideEffects.java"
line = 12
begin = 1
end = 11

[K_9]
file = "HOME/tests/java/SideEffects.java"
line = 13
begin = 38
end = 44

[cons_SideEffects]
name = "Constructor of class SideEffects"
file = "HOME/"
line = 0
begin = -1
end = -1

[K_30]
file = "HOME/tests/java/SideEffects.java"
line = 17
begin = 12
end = 21

[K_31]
file = "HOME/tests/java/SideEffects.java"
line = 17
begin = 12
end = 34

[K_32]
file = "HOME/tests/java/SideEffects.java"
line = 17
begin = 12
end = 47

[K_33]
file = "HOME/tests/java/SideEffects.java"
line = 17
begin = 12
end = 57

[K_34]
file = "HOME/tests/java/SideEffects.java"
line = 17
begin = 12
end = 57

[K_35]
file = "HOME/tests/java/SideEffects.java"
line = 9
begin = 9
end = 10

[K_36]
file = "HOME/tests/java/SideEffects.java"
line = 6
begin = 17
end = 30

[SideEffects_m1]
name = "Method m1"
file = "HOME/tests/java/SideEffects.java"
line = 8
begin = 9
end = 11

========== jessie execution ==========
Generating Why function SideEffects_m1
