========== krakatoa execution ==========
Parsing OK.
Typing OK.
Generating JC function cons_Creation_int for constructor Creation
Generating JC function cons_Creation for constructor Creation
Generating JC function cons_Creation_int_int for constructor Creation
Generating JC function Creation_test1 for method Creation.test1
Generating JC function Creation_test2 for method Creation.test2
Generating JC function Creation_test3 for method Creation.test3
Generating JC function cons_TestSuperConstructor for constructor TestSuperConstructor
Done.
========== file tests/java/Creation.jc ==========
# InvariantPolicy = Arguments
# SeparationPolicy = None
# AnnotationPolicy = None
# AbstractDomain = None

logic Non_null_Object{Here}(Object[0..] x) =
(\offset_max(x) == 0)

tag Object = {
}

tag String = Object with {
}

tag Throwable = Object with {
}

tag Creation = Object with {
  int32 simple_val;
}

tag TestSuperConstructor = Creation with {
}

type Object = [Object]

type interface = [interface]

tag interface = {
}

type byte = -128..127

type short = -32768..32767

type int32 = -2147483648..2147483647

type long = -9223372036854775808..9223372036854775807

type char = 0..65535

boolean non_null_Object(Object[0..] x)
behavior normal:
  ensures (if \result then (\offset_max(x) == 0) else (x == null));
;

exception Throwable of Throwable[0..]

unit cons_Creation_int(Creation[0] this_1, int32 n)
  requires true;
behavior normal:
  assigns this_1.simple_val;
  ensures (K_2 : (this_1.simple_val == n));
{  (K_1 : (this_1.simple_val = n))
}

unit cons_Creation(Creation[0] this_2)
  requires true;
behavior normal:
  assigns this_2.simple_val;
  ensures (K_4 : (this_2.simple_val == 0));
{  (K_3 : cons_Creation_int(this_2, 0))
}

unit cons_Creation_int_int(Creation[0] this_0, int32 n_0, int32 m)
  requires true;
behavior normal:
  assigns this_0.simple_val;
  ensures (K_7 : (this_0.simple_val == (n_0 + m)));
{  (K_6 : cons_Creation_int(this_0, (K_5 : ((n_0 + m) :> int32))))
}

int32 Creation_test1()
  requires true;
behavior normal:
  ensures (K_8 : (\result == 17));
{  
   {  
      (var Creation[0..] t_1 = (K_10 : 
                               {  
                                  (var Creation[0] this = (new Creation[1]));
                                  
                                  {  
                                     (var unit tt = cons_Creation_int(
                                     this, 17));
                                     this
                                  }
                               }));
      
      (return (K_9 : t_1.simple_val))
   }
}

int32 Creation_test2()
  requires true;
behavior normal:
  ensures (K_11 : (\result == 0));
{  
   {  
      (var Creation[0..] t_0 = (K_13 : 
                               {  
                                  (var Creation[0] this = (new Creation[1]));
                                  
                                  {  
                                     (var unit tt = cons_Creation(this));
                                     this
                                  }
                               }));
      
      (return (K_12 : t_0.simple_val))
   }
}

int32 Creation_test3()
  requires true;
behavior normal:
  assigns \nothing;
  ensures (K_14 : (\result == 17));
{  
   {  
      (var Creation[0..] t = (K_16 : 
                             {  
                                (var Creation[0] this = (new Creation[1]));
                                
                                {  
                                   (var unit tt = cons_Creation_int_int(
                                   this, 10, 7));
                                   this
                                }
                             }));
      
      (return (K_15 : t.simple_val))
   }
}

unit cons_TestSuperConstructor(TestSuperConstructor[0] this_4)
  requires true;
behavior normal:
  assigns this_4.simple_val;
  ensures (K_18 : (this_4.simple_val == 12));
{  (K_17 : cons_Creation_int(this_4, 12))
}

/*
LocalVariables:
mode: java
compile-command: "jessie -why-opt -split-user-conj -locs tests/java/Creation.jloc tests/java/Creation.jc && make -f tests/java/Creation.makefile gui"
End:
*/
========== file tests/java/Creation.jloc ==========
[K_10]
file = "HOME/tests/java/Creation.java"
line = 34
begin = 14
end = 30

[K_11]
file = "HOME/tests/java/Creation.java"
line = 39
begin = 18
end = 30

[K_12]
file = "HOME/tests/java/Creation.java"
line = 43
begin = 8
end = 20

[K_13]
file = "HOME/tests/java/Creation.java"
line = 42
begin = 14
end = 28

[K_14]
file = "HOME/tests/java/Creation.java"
line = 48
begin = 18
end = 31

[K_15]
file = "HOME/tests/java/Creation.java"
line = 52
begin = 8
end = 20

[K_16]
file = "HOME/tests/java/Creation.java"
line = 51
begin = 14
end = 32

[K_17]
file = "HOME/"
line = 0
begin = -1
end = -1

[K_18]
file = "HOME/tests/java/Creation.java"
line = 62
begin = 18
end = 34

[K_1]
file = "HOME/tests/java/Creation.java"
line = 19
begin = 1
end = 15

[K_2]
file = "HOME/tests/java/Creation.java"
line = 16
begin = 18
end = 38

[K_3]
file = "HOME/"
line = 0
begin = -1
end = -1

[K_4]
file = "HOME/tests/java/Creation.java"
line = 8
begin = 18
end = 38

[K_5]
file = "HOME/tests/java/Creation.java"
line = 27
begin = 6
end = 9

[K_6]
file = "HOME/"
line = 0
begin = -1
end = -1

[K_7]
file = "HOME/tests/java/Creation.java"
line = 24
begin = 18
end = 42

[K_8]
file = "HOME/tests/java/Creation.java"
line = 31
begin = 18
end = 31

[K_9]
file = "HOME/tests/java/Creation.java"
line = 35
begin = 8
end = 20

[cons_TestSuperConstructor]
name = "Constructor of class TestSuperConstructor"
file = "HOME/tests/java/Creation.java"
line = 64
begin = 4
end = 24

[cons_Creation_int]
name = "Constructor of class Creation"
file = "HOME/tests/java/Creation.java"
line = 18
begin = 4
end = 12

[cons_Creation]
name = "Constructor of class Creation"
file = "HOME/tests/java/Creation.java"
line = 10
begin = 4
end = 12

[Creation_test1]
name = "Method test1"
file = "HOME/tests/java/Creation.java"
line = 33
begin = 22
end = 27

[Creation_test2]
name = "Method test2"
file = "HOME/tests/java/Creation.java"
line = 41
begin = 22
end = 27

[Creation_test3]
name = "Method test3"
file = "HOME/tests/java/Creation.java"
line = 50
begin = 22
end = 27

[cons_Creation_int_int]
name = "Constructor of class Creation"
file = "HOME/tests/java/Creation.java"
line = 26
begin = 4
end = 12

========== jessie execution ==========
Generating Why function cons_Creation_int
Generating Why function cons_Creation
Generating Why function cons_Creation_int_int
Generating Why function Creation_test1
Generating Why function Creation_test2
Generating Why function Creation_test3
Generating Why function cons_TestSuperConstructor
========== file tests/java/Creation.makefile ==========
# this makefile was automatically generated; do not edit 

TIMEOUT ?= 10

DP=dp $(DPOPT) -timeout $(TIMEOUT)

WHY=why --no-arrays  -split-user-conj -explain -locs Creation.loc

GWHY=gwhy-bin --no-arrays  -split-user-conj -explain -locs Creation.loc

JESSIELIBFILE=/usr/local/lib/jessie/why/jessie.why

.PHONY: all coq pvs simplify cvcl harvey smtlib zenon

all: simplify/Creation_why.sx

project: why/Creation.wpr

why/%.wpr: why/%.why
	@echo 'why --project [...] why/$*.why' && $(WHY) --project -dir why $(JESSIELIBFILE) why/$*.why

goals: why/Creation_ctx.why

why/%_ctx.why: why/%.why
	@echo 'why --multi-why [...] why/$*.why' && $(WHY) --multi-why -dir why $(JESSIELIBFILE) why/$*.why

coq: coq/Creation_why.vo

coq/Creation_why.v: why/Creation.why
	@echo 'why -coq-v8 [...] why/Creation.why' &&$(WHY) -coq-v8 -dir coq -coq-preamble "Require Export jessie_why." -coq-tactic "intuition" $(JESSIELIBFILE) why/Creation.why

coq-goals: goals coq/Creation_ctx_why.vo
	for f in why/Creation_po*.why; do make -f Creation.makefile coq/`basename $$f .why`_why.v ; done

coq/Creation_ctx_why.v: why/Creation_ctx.why
	@echo 'why -coq-v8 [...] why/Creation_ctx.why' &&$(WHY) -no-prelude -coq-v8 -dir coq -coq-preamble "Require Export jessie_why." -coq-tactic "intuition" why/Creation_ctx.why

coq/%_why.v: why/%.why
	@echo 'why -coq-v8 [...] why/$*.why' &&$(WHY) -no-prelude -coq-v8 -dir coq -coq-preamble "Require Export Creation_ctx_why." -coq-tactic "intuition" why/Creation_ctx.why why/$*.why

coq/%.vo: coq/%.v
	coqc -I coq $<

pvs: pvs/Creation_why.pvs

pvs/%_why.pvs: why/%.why
	$(WHY) -pvs -dir pvs -pvs-preamble "importing why@jessie_why" $(JESSIELIBFILE) why/$*.why

pvs/jessie_why.pvs:
	$(WHY) -pvs -dir pvs -pvs-preamble "importing why@why" $(JESSIELIBFILE)

isabelle: isabelle/Creation_why.thy

isabelle/%_why.thy: why/%.why
	$(WHY) -isabelle -dir isabelle -isabelle-base-theory jessie_why $(JESSIELIBFILE) why/$*.why
	cp -f /usr/local/lib/jessie/isabelle/jessie_why.thy isabelle/

simplify: simplify/Creation_why.sx
	@echo 'Running Simplify on proof obligations' && ($(DP) $^)

simplify/%_why.sx: why/%.why
	@echo 'why -simplify [...] why/$*.why' && $(WHY) -simplify -no-simplify-prelude -dir simplify $(JESSIELIBFILE) why/$*.why

ergo: why/Creation_why.why
	@echo 'Running Ergo on proof obligations' && ($(DP) $^)

why/%_why.why: why/%.why
	@echo 'why --why [...] why/$*.why' && $(WHY) --why -dir why $(JESSIELIBFILE) why/$*.why

cvcl: cvcl/Creation_why.cvc

	@echo 'Running CVC Lite on proof obligations' && ($(DP) $^)

cvcl/%_why.cvc: why/%.why
	@echo 'why -cvcl [...] why/$*.why' && $(WHY) -cvcl -dir cvcl $(JESSIELIBFILE) why/$*.why

harvey: harvey/Creation_why.rv
	@echo 'Running haRVey on proof obligations' && ($(DP) $^)

harvey/%_why.rv: why/%.why
	@echo 'why -harvey [...] why/$*.why' && $(WHY) -harvey -dir harvey $(JESSIELIBFILE) why/$*.why

zenon: zenon/Creation_why.znn
	@echo 'Running Zenon on proof obligations' && ($(DP) $^)

zenon/%_why.znn: why/%.why
	@echo 'why -zenon [...] why/$*.why' && $(WHY) -zenon -dir zenon $(JESSIELIBFILE) why/$*.why

smtlib: smtlib/Creation_why.smt
	@echo 'Running Yices on proof obligations' && ($(DP) $^)

smtlib/%_why.smt: why/%.why
	@echo 'why -smtlib [...] why/$*.why' && $(WHY) -smtlib --encoding sstrat --exp goal -dir smtlib $(JESSIELIBFILE) why/$*.why

gui stat: Creation.stat

%.stat: why/%.why
	@echo 'gwhy-bin [...] why/$*.why' && $(GWHY) $(JESSIELIBFILE) why/$*.why

-include Creation.depend

depend: coq/Creation_why.v
	-$(COQDEP) -I coq coq/Creation*_why.v > Creation.depend

clean:
	rm -f coq/*.vo

========== file tests/java/Creation.loc ==========
[K_11]
file = "HOME/tests/java/Creation.java"
line = 39
begin = 18
end = 30

[K_12]
kind = IndexBounds
file = "HOME/tests/java/Creation.java"
line = 43
begin = 8
end = 20

[K_14]
file = "HOME/tests/java/Creation.java"
line = 48
begin = 18
end = 31

[JC_40]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 105
begin = 52
end = 71

[K_15]
kind = IndexBounds
file = "HOME/tests/java/Creation.java"
line = 52
begin = 8
end = 20

[JC_41]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 105
begin = 52
end = 71

[JC_42]
file = "HOME/tests/java/Creation.java"
line = 50
begin = 22
end = 27

[K_17]
kind = UserCall
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_43]
file = "HOME/"
line = 0
begin = -1
end = -1

[K_18]
file = "HOME/tests/java/Creation.java"
line = 62
begin = 18
end = 34

[Creation_test3_ensures_normal]
name = "Method test3"
behavior = "Normal behavior `normal'"
file = "HOME/tests/java/Creation.java"
line = 50
begin = 22
end = 27

[JC_44]
file = "HOME/tests/java/Creation.java"
line = 50
begin = 22
end = 27

[JC_45]
file = "HOME/tests/java/Creation.java"
line = 50
begin = 22
end = 27

[JC_46]
file = "HOME/tests/java/Creation.jc"
line = 116
begin = 9
end = 15

[JC_1]
file = "HOME/tests/java/Creation.jc"
line = 42
begin = 8
end = 23

[JC_47]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 126
begin = 50
end = 120

[JC_2]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_48]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 126
begin = 50
end = 120

[JC_3]
file = "HOME/tests/java/Creation.jc"
line = 42
begin = 8
end = 23

[JC_49]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 126
begin = 50
end = 120

[JC_4]
file = "HOME/tests/java/Creation.jc"
line = 42
begin = 8
end = 23

[cons_Creation_int_safety]
name = "Constructor of class Creation"
behavior = "Safety"
file = "HOME/tests/java/Creation.java"
line = 18
begin = 4
end = 12

[JC_5]
file = "HOME/tests/java/Creation.java"
line = 18
begin = 4
end = 12

[JC_6]
file = "HOME/"
line = 0
begin = -1
end = -1

[Creation_test1_safety]
name = "Method test1"
behavior = "Safety"
file = "HOME/tests/java/Creation.java"
line = 33
begin = 22
end = 27

[JC_7]
file = "HOME/tests/java/Creation.java"
line = 18
begin = 4
end = 12

[JC_8]
file = "HOME/tests/java/Creation.java"
line = 18
begin = 4
end = 12

[JC_9]
file = "HOME/tests/java/Creation.jc"
line = 51
begin = 9
end = 15

[JC_50]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 126
begin = 50
end = 120

[JC_51]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 126
begin = 50
end = 120

[K_2]
file = "HOME/tests/java/Creation.java"
line = 16
begin = 18
end = 38

[JC_52]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 126
begin = 50
end = 120

[K_3]
kind = UserCall
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_53]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 126
begin = 50
end = 120

[K_4]
file = "HOME/tests/java/Creation.java"
line = 8
begin = 18
end = 38

[JC_54]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 126
begin = 50
end = 120

[K_5]
kind = ArithOverflow
file = "HOME/tests/java/Creation.java"
line = 27
begin = 6
end = 9

[JC_55]
file = "HOME/tests/java/Creation.java"
line = 64
begin = 4
end = 24

[K_6]
kind = UserCall
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_56]
file = "HOME/"
line = 0
begin = -1
end = -1

[K_7]
file = "HOME/tests/java/Creation.java"
line = 24
begin = 18
end = 42

[JC_57]
file = "HOME/tests/java/Creation.java"
line = 64
begin = 4
end = 24

[K_8]
file = "HOME/tests/java/Creation.java"
line = 31
begin = 18
end = 31

[JC_58]
file = "HOME/tests/java/Creation.java"
line = 64
begin = 4
end = 24

[K_9]
kind = IndexBounds
file = "HOME/tests/java/Creation.java"
line = 35
begin = 8
end = 20

[JC_59]
file = "HOME/tests/java/Creation.jc"
line = 138
begin = 9
end = 15

[Creation_test2_ensures_normal]
name = "Method test2"
behavior = "Normal behavior `normal'"
file = "HOME/tests/java/Creation.java"
line = 41
begin = 22
end = 27

[Creation_test2_safety]
name = "Method test2"
behavior = "Safety"
file = "HOME/tests/java/Creation.java"
line = 41
begin = 22
end = 27

[cons_Creation_safety]
name = "Constructor of class Creation"
behavior = "Safety"
file = "HOME/tests/java/Creation.java"
line = 10
begin = 4
end = 12

[JC_10]
file = "HOME/tests/java/Creation.java"
line = 10
begin = 4
end = 12

[cons_Creation_int_ensures_normal]
name = "Constructor of class Creation"
behavior = "Normal behavior `normal'"
file = "HOME/tests/java/Creation.java"
line = 18
begin = 4
end = 12

[JC_11]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_12]
file = "HOME/tests/java/Creation.java"
line = 10
begin = 4
end = 12

[JC_13]
file = "HOME/tests/java/Creation.java"
line = 10
begin = 4
end = 12

[JC_14]
file = "HOME/tests/java/Creation.jc"
line = 59
begin = 9
end = 15

[JC_15]
file = "HOME/tests/java/Creation.java"
line = 26
begin = 4
end = 12

[JC_16]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_17]
file = "HOME/tests/java/Creation.java"
line = 26
begin = 4
end = 12

[JC_18]
file = "HOME/tests/java/Creation.java"
line = 26
begin = 4
end = 12

[JC_19]
file = "HOME/tests/java/Creation.jc"
line = 67
begin = 9
end = 15

[cons_Creation_ensures_normal]
name = "Constructor of class Creation"
behavior = "Normal behavior `normal'"
file = "HOME/tests/java/Creation.java"
line = 10
begin = 4
end = 12

[cons_TestSuperConstructor_ensures_normal]
name = "Constructor of class TestSuperConstructor"
behavior = "Normal behavior `normal'"
file = "HOME/tests/java/Creation.java"
line = 64
begin = 4
end = 24

[Creation_test3_safety]
name = "Method test3"
behavior = "Safety"
file = "HOME/tests/java/Creation.java"
line = 50
begin = 22
end = 27

[Creation_test1_ensures_normal]
name = "Method test1"
behavior = "Normal behavior `normal'"
file = "HOME/tests/java/Creation.java"
line = 33
begin = 22
end = 27

[JC_20]
file = "HOME/tests/java/Creation.java"
line = 33
begin = 22
end = 27

[JC_21]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_22]
file = "HOME/tests/java/Creation.java"
line = 33
begin = 22
end = 27

[JC_23]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 84
begin = 52
end = 117

[JC_24]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 84
begin = 52
end = 117

[JC_25]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 84
begin = 52
end = 117

[JC_26]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 84
begin = 52
end = 117

[JC_27]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 84
begin = 52
end = 117

[cons_Creation_int_int_ensures_normal]
name = "Constructor of class Creation"
behavior = "Normal behavior `normal'"
file = "HOME/tests/java/Creation.java"
line = 26
begin = 4
end = 12

[JC_28]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 84
begin = 52
end = 117

[JC_29]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 84
begin = 52
end = 117

[cons_TestSuperConstructor_safety]
name = "Constructor of class TestSuperConstructor"
behavior = "Safety"
file = "HOME/tests/java/Creation.java"
line = 64
begin = 4
end = 24

[JC_30]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 84
begin = 52
end = 117

[JC_31]
file = "HOME/tests/java/Creation.java"
line = 41
begin = 22
end = 27

[JC_32]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_33]
file = "HOME/tests/java/Creation.java"
line = 41
begin = 22
end = 27

[JC_34]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 105
begin = 52
end = 71

[cons_Creation_int_int_safety]
name = "Constructor of class Creation"
behavior = "Safety"
file = "HOME/tests/java/Creation.java"
line = 26
begin = 4
end = 12

[JC_35]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 105
begin = 52
end = 71

[JC_36]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 105
begin = 52
end = 71

[JC_37]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 105
begin = 52
end = 71

[JC_38]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 105
begin = 52
end = 71

[JC_39]
kind = UserCall
file = "HOME/tests/java/Creation.jc"
line = 105
begin = 52
end = 71

========== file tests/java/why/Creation.why ==========
type Object

type byte

type char

type int32

type interface

type long

type short

logic Creation_tag:  -> Object tag_id

logic Object_tag:  -> Object tag_id

axiom Creation_parenttag_Object : parenttag(Creation_tag, Object_tag)

exception Loop_continue_exc of unit

exception Loop_exit_exc of unit

predicate Non_null_Object(Object_alloc_table:Object alloc_table,
 x:Object pointer) =
 eq_int(offset_max(Object_alloc_table, x), (0))

axiom Object_int : (int_of_tag(Object_tag) = (1))

axiom Object_parenttag_bottom : parenttag(Object_tag, bottom_tag)

axiom Object_tags :
 (forall x:Object pointer.
  (forall Object_tag_table:Object tag_table.
   instanceof(Object_tag_table, x, Object_tag)))

logic String_tag:  -> Object tag_id

axiom String_parenttag_Object : parenttag(String_tag, Object_tag)

logic TestSuperConstructor_tag:  -> Object tag_id

axiom TestSuperConstructor_parenttag_Creation :
 parenttag(TestSuperConstructor_tag, Creation_tag)

exception Throwable_exc of Object pointer

logic Throwable_tag:  -> Object tag_id

axiom Throwable_parenttag_Object : parenttag(Throwable_tag, Object_tag)

logic integer_of_byte: byte -> int

logic byte_of_integer: int -> byte

axiom byte_coerce :
 (forall x:int.
  ((le_int((-128), x) and le_int(x, (127))) ->
   eq_int(integer_of_byte(byte_of_integer(x)), x)))

axiom byte_range :
 (forall x:byte.
  (le_int((-128), integer_of_byte(x)) and le_int(integer_of_byte(x), (127))))

logic integer_of_char: char -> int

logic char_of_integer: int -> char

axiom char_coerce :
 (forall x:int.
  ((le_int((0), x) and le_int(x, (65535))) ->
   eq_int(integer_of_char(char_of_integer(x)), x)))

axiom char_range :
 (forall x:char.
  (le_int((0), integer_of_char(x)) and le_int(integer_of_char(x), (65535))))

predicate eq_byte(x:byte,
 y:byte) =
 eq_int(integer_of_byte(x), integer_of_byte(y))

predicate eq_char(x:char,
 y:char) =
 eq_int(integer_of_char(x), integer_of_char(y))

logic integer_of_int32: int32 -> int

predicate eq_int32(x:int32,
 y:int32) =
 eq_int(integer_of_int32(x), integer_of_int32(y))

logic integer_of_long: long -> int

predicate eq_long(x:long,
 y:long) =
 eq_int(integer_of_long(x), integer_of_long(y))

logic integer_of_short: short -> int

predicate eq_short(x:short,
 y:short) =
 eq_int(integer_of_short(x), integer_of_short(y))

logic int32_of_integer: int -> int32

axiom int32_coerce :
 (forall x:int.
  ((le_int((-2147483648), x) and le_int(x, (2147483647))) ->
   eq_int(integer_of_int32(int32_of_integer(x)), x)))

axiom int32_range :
 (forall x:int32.
  (le_int((-2147483648), integer_of_int32(x))
  and le_int(integer_of_int32(x), (2147483647))))

logic interface_tag:  -> interface tag_id

axiom interface_int : (int_of_tag(interface_tag) = (1))

axiom interface_parenttag_bottom : parenttag(interface_tag, bottom_tag)

axiom interface_tags :
 (forall x:interface pointer.
  (forall interface_tag_table:interface tag_table.
   instanceof(interface_tag_table, x, interface_tag)))

logic long_of_integer: int -> long

axiom long_coerce :
 (forall x:int.
  ((le_int((-9223372036854775808), x) and le_int(x, (9223372036854775807))) ->
   eq_int(integer_of_long(long_of_integer(x)), x)))

axiom long_range :
 (forall x:long.
  (le_int((-9223372036854775808), integer_of_long(x))
  and le_int(integer_of_long(x), (9223372036854775807))))

logic short_of_integer: int -> short

axiom short_coerce :
 (forall x:int.
  ((le_int((-32768), x) and le_int(x, (32767))) ->
   eq_int(integer_of_short(short_of_integer(x)), x)))

axiom short_range :
 (forall x:short.
  (le_int((-32768), integer_of_short(x))
  and le_int(integer_of_short(x), (32767))))

predicate valid_struct_Object(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 ((offset_min(Object_alloc_table, p) = a)
 and (offset_max(Object_alloc_table, p) = b))

predicate valid_struct_Creation(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 valid_struct_Object(p, a, b, Object_alloc_table)

predicate valid_struct_String(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 valid_struct_Object(p, a, b, Object_alloc_table)

predicate valid_struct_TestSuperConstructor(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 valid_struct_Creation(p, a, b, Object_alloc_table)

predicate valid_struct_Throwable(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 valid_struct_Object(p, a, b, Object_alloc_table)

predicate valid_struct_interface(p:interface pointer,
 a:int,
 b:int,
 interface_alloc_table:interface alloc_table) =
 ((offset_min(interface_alloc_table, p) = a)
 and (offset_max(interface_alloc_table, p) = b))

predicate valid_variant_Object(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 ((offset_min(Object_alloc_table, p) = a)
 and (offset_max(Object_alloc_table, p) = b))

predicate valid_variant_interface(p:interface pointer,
 a:int,
 b:int,
 interface_alloc_table:interface alloc_table) =
 ((offset_min(interface_alloc_table, p) = a)
 and (offset_max(interface_alloc_table, p) = b))

parameter Creation_simple_val : (Object, int32) memory ref

parameter Object_tag_table : Object tag_table ref

parameter Object_alloc_table : Object alloc_table ref

parameter Creation_test1 :
 tt:unit ->
  { (JC_20: (true = true))} int32
  reads Creation_simple_val,Object_alloc_table,Object_tag_table
  writes Creation_simple_val,Object_alloc_table,Object_tag_table
  { (K_8: eq_int(integer_of_int32(result), (17))) }

parameter Creation_test2 :
 tt:unit ->
  { (JC_31: (true = true))} int32
  reads Creation_simple_val,Object_alloc_table,Object_tag_table
  writes Creation_simple_val,Object_alloc_table,Object_tag_table
  { (K_11: eq_int(integer_of_int32(result), (0))) }

parameter Creation_test3 :
 tt:unit ->
  { (JC_42: (true = true))} int32
  reads Creation_simple_val,Object_alloc_table,Object_tag_table
  writes Creation_simple_val,Object_alloc_table,Object_tag_table
  { (JC_46:
    ((K_14: eq_int(integer_of_int32(result), (17)))
    and (JC_45:
        not_assigns(Object_alloc_table@, Creation_simple_val@,
        Creation_simple_val, pset_empty)))) }

parameter alloc_Creation :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_alloc_table:Object alloc_table ref ->
    { ge_int(n, (0))} Object pointer reads Object_alloc_table
    writes Object_alloc_table,Object_tag_table
    { (valid_struct_Creation(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (instanceof(Object_tag_table, result, Creation_tag)
          and (alloc_extends(Object_alloc_table@, Object_alloc_table)
              and alloc_extern(Object_alloc_table@, result)))) }

parameter alloc_Object :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_alloc_table:Object alloc_table ref ->
    { ge_int(n, (0))} Object pointer reads Object_alloc_table
    writes Object_alloc_table,Object_tag_table
    { (valid_struct_Object(result, (0), sub_int(n, (1)), Object_alloc_table)
      and (instanceof(Object_tag_table, result, Object_tag)
          and (alloc_extends(Object_alloc_table@, Object_alloc_table)
              and alloc_extern(Object_alloc_table@, result)))) }

parameter alloc_String :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_alloc_table:Object alloc_table ref ->
    { ge_int(n, (0))} Object pointer reads Object_alloc_table
    writes Object_alloc_table,Object_tag_table
    { (valid_struct_String(result, (0), sub_int(n, (1)), Object_alloc_table)
      and (instanceof(Object_tag_table, result, String_tag)
          and (alloc_extends(Object_alloc_table@, Object_alloc_table)
              and alloc_extern(Object_alloc_table@, result)))) }

parameter alloc_TestSuperConstructor :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_alloc_table:Object alloc_table ref ->
    { ge_int(n, (0))} Object pointer reads Object_alloc_table
    writes Object_alloc_table,Object_tag_table
    { (valid_struct_TestSuperConstructor(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (instanceof(Object_tag_table, result, TestSuperConstructor_tag)
          and (alloc_extends(Object_alloc_table@, Object_alloc_table)
              and alloc_extern(Object_alloc_table@, result)))) }

parameter alloc_Throwable :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_alloc_table:Object alloc_table ref ->
    { ge_int(n, (0))} Object pointer reads Object_alloc_table
    writes Object_alloc_table,Object_tag_table
    { (valid_struct_Throwable(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (instanceof(Object_tag_table, result, Throwable_tag)
          and (alloc_extends(Object_alloc_table@, Object_alloc_table)
              and alloc_extern(Object_alloc_table@, result)))) }

parameter interface_alloc_table : interface alloc_table ref

parameter interface_tag_table : interface tag_table ref

parameter alloc_interface :
 n:int ->
  interface_alloc_table:interface alloc_table ref ->
   interface_alloc_table:interface alloc_table ref ->
    { ge_int(n, (0))} interface pointer reads interface_alloc_table
    writes interface_alloc_table,interface_tag_table
    { (valid_struct_interface(result, (0), sub_int(n, (1)),
       interface_alloc_table)
      and (instanceof(interface_tag_table, result, interface_tag)
          and (alloc_extends(interface_alloc_table@, interface_alloc_table)
              and alloc_extern(interface_alloc_table@, result)))) }

parameter alloc_one_Creation :
 tt:unit ->
  Object_alloc_table:Object alloc_table ref ->
   Object_alloc_table:Object alloc_table ref ->
    { } Object pointer reads Object_alloc_table
    writes Object_alloc_table,Object_tag_table
    { (valid_struct_Creation(result, (0), (0), Object_alloc_table)
      and (instanceof(Object_tag_table, result, Creation_tag)
          and (alloc_extends(Object_alloc_table@, Object_alloc_table)
              and alloc_extern(Object_alloc_table@, result)))) }

parameter alloc_one_Object :
 tt:unit ->
  Object_alloc_table:Object alloc_table ref ->
   Object_alloc_table:Object alloc_table ref ->
    { } Object pointer reads Object_alloc_table
    writes Object_alloc_table,Object_tag_table
    { (valid_struct_Object(result, (0), (0), Object_alloc_table)
      and (instanceof(Object_tag_table, result, Object_tag)
          and (alloc_extends(Object_alloc_table@, Object_alloc_table)
              and alloc_extern(Object_alloc_table@, result)))) }

parameter alloc_one_String :
 tt:unit ->
  Object_alloc_table:Object alloc_table ref ->
   Object_alloc_table:Object alloc_table ref ->
    { } Object pointer reads Object_alloc_table
    writes Object_alloc_table,Object_tag_table
    { (valid_struct_String(result, (0), (0), Object_alloc_table)
      and (instanceof(Object_tag_table, result, String_tag)
          and (alloc_extends(Object_alloc_table@, Object_alloc_table)
              and alloc_extern(Object_alloc_table@, result)))) }

parameter alloc_one_TestSuperConstructor :
 tt:unit ->
  Object_alloc_table:Object alloc_table ref ->
   Object_alloc_table:Object alloc_table ref ->
    { } Object pointer reads Object_alloc_table
    writes Object_alloc_table,Object_tag_table
    { (valid_struct_TestSuperConstructor(result, (0), (0),
       Object_alloc_table)
      and (instanceof(Object_tag_table, result, TestSuperConstructor_tag)
          and (alloc_extends(Object_alloc_table@, Object_alloc_table)
              and alloc_extern(Object_alloc_table@, result)))) }

parameter alloc_one_Throwable :
 tt:unit ->
  Object_alloc_table:Object alloc_table ref ->
   Object_alloc_table:Object alloc_table ref ->
    { } Object pointer reads Object_alloc_table
    writes Object_alloc_table,Object_tag_table
    { (valid_struct_Throwable(result, (0), (0), Object_alloc_table)
      and (instanceof(Object_tag_table, result, Throwable_tag)
          and (alloc_extends(Object_alloc_table@, Object_alloc_table)
              and alloc_extern(Object_alloc_table@, result)))) }

parameter alloc_one_interface :
 tt:unit ->
  interface_alloc_table:interface alloc_table ref ->
   interface_alloc_table:interface alloc_table ref ->
    { } interface pointer reads interface_alloc_table
    writes interface_alloc_table,interface_tag_table
    { (valid_struct_interface(result, (0), (0), interface_alloc_table)
      and (instanceof(interface_tag_table, result, interface_tag)
          and (alloc_extends(interface_alloc_table@, interface_alloc_table)
              and alloc_extern(interface_alloc_table@, result)))) }

parameter any_byte : unit -> { } byte { true }

parameter any_char : unit -> { } char { true }

parameter any_int32 : unit -> { } int32 { true }

parameter any_long : unit -> { } long { true }

parameter any_short : unit -> { } short { true }

parameter byte_of_integer_ :
 x:int ->
  { (le_int((-128), x) and le_int(x, (127)))} byte
  { eq_int(integer_of_byte(result), x) }

parameter char_of_integer_ :
 x:int ->
  { (le_int((0), x) and le_int(x, (65535)))} char
  { eq_int(integer_of_char(result), x) }

parameter cons_Creation :
 this_2:Object pointer ->
  { (JC_10: (true = true))} unit
  reads Creation_simple_val,Object_alloc_table,Object_tag_table
  writes Creation_simple_val
  { (JC_14:
    ((K_4:
     eq_int(integer_of_int32(select(Creation_simple_val, this_2)), (0)))
    and (JC_13:
        not_assigns(Object_alloc_table@, Creation_simple_val@,
        Creation_simple_val, pset_singleton(this_2))))) }

parameter cons_Creation_int :
 this_1:Object pointer ->
  n_1:int32 ->
   { (JC_5: (true = true))} unit
   reads Creation_simple_val,Object_alloc_table,Object_tag_table
   writes Creation_simple_val
   { (JC_9:
     ((K_2:
      eq_int(integer_of_int32(select(Creation_simple_val, this_1)),
      integer_of_int32(n_1)))
     and (JC_8:
         not_assigns(Object_alloc_table@, Creation_simple_val@,
         Creation_simple_val, pset_singleton(this_1))))) }

parameter cons_Creation_int_int :
 this_0:Object pointer ->
  n_0_0:int32 ->
   m:int32 ->
    { (JC_15: (true = true))} unit
    reads Creation_simple_val,Object_alloc_table,Object_tag_table
    writes Creation_simple_val
    { (JC_19:
      ((K_7:
       eq_int(integer_of_int32(select(Creation_simple_val, this_0)),
       add_int(integer_of_int32(n_0_0), integer_of_int32(m))))
      and (JC_18:
          not_assigns(Object_alloc_table@, Creation_simple_val@,
          Creation_simple_val, pset_singleton(this_0))))) }

parameter cons_TestSuperConstructor :
 this_4:Object pointer ->
  { (JC_55: (true = true))} unit
  reads Creation_simple_val,Object_alloc_table,Object_tag_table
  writes Creation_simple_val
  { (JC_59:
    ((K_18:
     eq_int(integer_of_int32(select(Creation_simple_val, this_4)), (12)))
    and (JC_58:
        not_assigns(Object_alloc_table@, Creation_simple_val@,
        Creation_simple_val, pset_singleton(this_4))))) }

parameter int32_of_integer_ :
 x:int ->
  { (le_int((-2147483648), x) and le_int(x, (2147483647)))} int32
  { eq_int(integer_of_int32(result), x) }

parameter long_of_integer_ :
 x:int ->
  { (le_int((-9223372036854775808), x) and le_int(x, (9223372036854775807)))}
  long { eq_int(integer_of_long(result), x) }

parameter non_null_Object :
 x_0:Object pointer ->
  { (JC_1: true)} bool reads Object_alloc_table,Object_tag_table
  { (JC_4:
    (if result
     then eq_int(offset_max(Object_alloc_table, x_0), (0))
     else (x_0 = null))) }

parameter safe_byte_of_integer_ :
 x:int -> { } byte { eq_int(integer_of_byte(result), x) }

parameter safe_char_of_integer_ :
 x:int -> { } char { eq_int(integer_of_char(result), x) }

parameter safe_int32_of_integer_ :
 x:int -> { } int32 { eq_int(integer_of_int32(result), x) }

parameter safe_long_of_integer_ :
 x:int -> { } long { eq_int(integer_of_long(result), x) }

parameter safe_short_of_integer_ :
 x:int -> { } short { eq_int(integer_of_short(result), x) }

parameter short_of_integer_ :
 x:int ->
  { (le_int((-32768), x) and le_int(x, (32767)))} short
  { eq_int(integer_of_short(result), x) }

let Creation_test1_ensures_normal =
 fun (tt : unit) ->
  { (JC_20: (true = true)) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let t_1 = (K_10:
                (let this = (let jessie_22 = (((alloc_one_Creation void) Object_alloc_table) Object_alloc_table) in
                            (((alloc_one_Creation void) Object_alloc_table) Object_alloc_table)) in
                (let tt = (JC_27:
                          ((cons_Creation_int this) (safe_int32_of_integer_ (17)))) in
                this))) in
     begin
       (return := ((safe_acc_ !Creation_simple_val) t_1)); (raise Return)
     end);
    absurd 
   end
   with
   Return ->
   !return end))
  { (K_8: eq_int(integer_of_int32(result), (17))) }

let Creation_test1_safety =
 fun (tt : unit) ->
  { (JC_20: (true = true)) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let t_1 = (K_10:
                (let this = (let jessie_15 = (((alloc_one_Creation void) Object_alloc_table) Object_alloc_table) in
                            (assert
                            { ge_int(offset_max(Object_alloc_table,
                                     jessie_15),
                              (0)) };
                            (((alloc_one_Creation void) Object_alloc_table) Object_alloc_table))) in
                (let tt = (JC_23:
                          ((cons_Creation_int this) (safe_int32_of_integer_ (17)))) in
                this))) in
     begin
       (return := (K_9:
                  ((((lsafe_lbound_acc_ !Object_alloc_table) !Creation_simple_val) t_1) (0))));
      (raise Return)
     end);
    absurd 
   end
   with
   Return ->
   !return end))
  { true }

let Creation_test2_ensures_normal =
 fun (tt : unit) ->
  { (JC_31: (true = true)) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let t_0 = (K_13:
                (let this_3 = (let jessie_36 = (((alloc_one_Creation void) Object_alloc_table) Object_alloc_table) in
                              (((alloc_one_Creation void) Object_alloc_table) Object_alloc_table)) in
                (let tt_0 = (JC_38: (cons_Creation this_3)) in this_3))) in
     begin
       (return := ((safe_acc_ !Creation_simple_val) t_0)); (raise Return)
     end);
    absurd 
   end
   with
   Return ->
   !return end))
  { (K_11: eq_int(integer_of_int32(result), (0))) }

let Creation_test2_safety =
 fun (tt : unit) ->
  { (JC_31: (true = true)) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let t_0 = (K_13:
                (let this_3 = (let jessie_29 = (((alloc_one_Creation void) Object_alloc_table) Object_alloc_table) in
                              (assert
                              { ge_int(offset_max(Object_alloc_table,
                                       jessie_29),
                                (0)) };
                              (((alloc_one_Creation void) Object_alloc_table) Object_alloc_table))) in
                (let tt_0 = (JC_34: (cons_Creation this_3)) in this_3))) in
     begin
       (return := (K_12:
                  ((((lsafe_lbound_acc_ !Object_alloc_table) !Creation_simple_val) t_0) (0))));
      (raise Return)
     end);
    absurd 
   end
   with
   Return ->
   !return end))
  { true }

let Creation_test3_ensures_normal =
 fun (tt : unit) ->
  { (JC_42: (true = true)) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let t = (K_16:
              (let this_5 = (let jessie_50 = (((alloc_one_Creation void) Object_alloc_table) Object_alloc_table) in
                            (((alloc_one_Creation void) Object_alloc_table) Object_alloc_table)) in
              (let tt_1 = (JC_51:
                          (((cons_Creation_int_int this_5) (safe_int32_of_integer_ (10))) 
                           (safe_int32_of_integer_ (7)))) in
              this_5))) in
     begin
       (return := ((safe_acc_ !Creation_simple_val) t)); (raise Return)
     end);
    absurd 
   end
   with
   Return ->
   !return end))
  { (JC_46:
    ((K_14: eq_int(integer_of_int32(result), (17)))
    and (JC_45:
        not_assigns(Object_alloc_table@, Creation_simple_val@,
        Creation_simple_val, pset_empty)))) }

let Creation_test3_safety =
 fun (tt : unit) ->
  { (JC_42: (true = true)) }
  (init:
  (let return = ref (any_int32 void) in
  try
   begin
     (let t = (K_16:
              (let this_5 = (let jessie_43 = (((alloc_one_Creation void) Object_alloc_table) Object_alloc_table) in
                            (assert
                            { ge_int(offset_max(Object_alloc_table,
                                     jessie_43),
                              (0)) };
                            (((alloc_one_Creation void) Object_alloc_table) Object_alloc_table))) in
              (let tt_1 = (JC_47:
                          (((cons_Creation_int_int this_5) (safe_int32_of_integer_ (10))) 
                           (safe_int32_of_integer_ (7)))) in
              this_5))) in
     begin
       (return := (K_15:
                  ((((lsafe_lbound_acc_ !Object_alloc_table) !Creation_simple_val) t) (0))));
      (raise Return)
     end);
    absurd 
   end
   with
   Return ->
   !return end))
  { true }

let cons_Creation_ensures_normal =
 fun (this_2 : Object pointer) ->
  { (valid_struct_Creation(this_2, (0), (0), Object_alloc_table)
    and (JC_10: (true = true))) }
  (init:
  try
   begin
     (K_3: ((cons_Creation_int this_2) (safe_int32_of_integer_ (0))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_14:
    ((K_4:
     eq_int(integer_of_int32(select(Creation_simple_val, this_2)), (0)))
    and (JC_13:
        not_assigns(Object_alloc_table@, Creation_simple_val@,
        Creation_simple_val, pset_singleton(this_2))))) }

let cons_Creation_int_ensures_normal =
 fun (this_1 : Object pointer) (n_1 : int32) ->
  { (valid_struct_Creation(this_1, (0), (0), Object_alloc_table)
    and (JC_5: (true = true))) }
  (init:
  try
   begin
     (let jessie_10 = (let jessie_8 = this_1 in
                      (let jessie_9 = n_1 in
                      begin
                        (((safe_upd_ Creation_simple_val) jessie_8) jessie_9);
                       ((safe_acc_ !Creation_simple_val) jessie_8)
                      end)) in
     void);
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_9:
    ((K_2:
     eq_int(integer_of_int32(select(Creation_simple_val, this_1)),
     integer_of_int32(n_1)))
    and (JC_8:
        not_assigns(Object_alloc_table@, Creation_simple_val@,
        Creation_simple_val, pset_singleton(this_1))))) }

let cons_Creation_int_int_ensures_normal =
 fun (this_0 : Object pointer) (n_0_0 : int32) (m : int32) ->
  { (valid_struct_Creation(this_0, (0), (0), Object_alloc_table)
    and (JC_15: (true = true))) }
  (init:
  try
   begin
     (K_6:
     ((cons_Creation_int this_0) (safe_int32_of_integer_ ((add_int (integer_of_int32 n_0_0)) 
                                                          (integer_of_int32 m)))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_19:
    ((K_7:
     eq_int(integer_of_int32(select(Creation_simple_val, this_0)),
     add_int(integer_of_int32(n_0_0), integer_of_int32(m))))
    and (JC_18:
        not_assigns(Object_alloc_table@, Creation_simple_val@,
        Creation_simple_val, pset_singleton(this_0))))) }

let cons_Creation_int_int_safety =
 fun (this_0 : Object pointer) (n_0_0 : int32) (m : int32) ->
  { (valid_struct_Creation(this_0, (0), (0), Object_alloc_table)
    and (JC_15: (true = true))) }
  (init:
  try
   begin
     (K_6:
     ((cons_Creation_int this_0) (K_5:
                                 (int32_of_integer_ ((add_int (integer_of_int32 n_0_0)) 
                                                     (integer_of_int32 m))))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { true }

let cons_Creation_int_safety =
 fun (this_1 : Object pointer) (n_1 : int32) ->
  { (valid_struct_Creation(this_1, (0), (0), Object_alloc_table)
    and (JC_5: (true = true))) }
  (init:
  try
   begin
     (let jessie_5 = (let jessie_3 = this_1 in
                     (let jessie_4 = n_1 in
                     begin
                       (((safe_upd_ Creation_simple_val) jessie_3) jessie_4);
                      ((safe_acc_ !Creation_simple_val) jessie_3)
                     end)) in
     void);
    (raise Return)
   end
   with
   Return ->
   void end)
  { true }

let cons_Creation_safety =
 fun (this_2 : Object pointer) ->
  { (valid_struct_Creation(this_2, (0), (0), Object_alloc_table)
    and (JC_10: (true = true))) }
  (init:
  try
   begin
     (K_3: ((cons_Creation_int this_2) (safe_int32_of_integer_ (0))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { true }

let cons_TestSuperConstructor_ensures_normal =
 fun (this_4 : Object pointer) ->
  { (valid_struct_TestSuperConstructor(this_4, (0), (0), Object_alloc_table)
    and (JC_55: (true = true))) }
  (init:
  try
   begin
     (K_17: ((cons_Creation_int this_4) (safe_int32_of_integer_ (12))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_59:
    ((K_18:
     eq_int(integer_of_int32(select(Creation_simple_val, this_4)), (12)))
    and (JC_58:
        not_assigns(Object_alloc_table@, Creation_simple_val@,
        Creation_simple_val, pset_singleton(this_4))))) }

let cons_TestSuperConstructor_safety =
 fun (this_4 : Object pointer) ->
  { (valid_struct_TestSuperConstructor(this_4, (0), (0), Object_alloc_table)
    and (JC_55: (true = true))) }
  (init:
  try
   begin
     (K_17: ((cons_Creation_int this_4) (safe_int32_of_integer_ (12))));
    (raise Return)
   end
   with
   Return ->
   void end)
  { true }


========== make project execution ==========
why --project [...] why/Creation.why
========== file tests/java/why/Creation.wpr ==========
<project name="Creation" context="why/Creation_ctx.why">
  <function name="Method test3">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/Creation_po9.why">
      <location file = "why/Creation.why" line = "625" begin = "30" end = "151"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/Creation_po10.why">
      <location file = "HOME/tests/java/Creation.java" line = "52" begin = "8" end = "20"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    </behavior>
    <behavior name="Normal behavior `normal'">
    <goal why_file="why/Creation_po7.why">
      <location file = "HOME/tests/java/Creation.java" line = "48" begin = "18" end = "31"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/Creation_po8.why">
      <location file = "HOME/tests/java/Creation.java" line = "50" begin = "22" end = "27"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Method test2">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/Creation_po5.why">
      <location file = "why/Creation.why" line = "570" begin = "32" end = "157"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/Creation_po6.why">
      <location file = "HOME/tests/java/Creation.java" line = "43" begin = "8" end = "20"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    </behavior>
    <behavior name="Normal behavior `normal'">
    <goal why_file="why/Creation_po4.why">
      <location file = "HOME/tests/java/Creation.java" line = "39" begin = "18" end = "30"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Method test1">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/Creation_po2.why">
      <location file = "why/Creation.why" line = "520" begin = "30" end = "151"/>
      <explain kind = "Assert"/>
    </goal>
    <goal why_file="why/Creation_po3.why">
      <location file = "HOME/tests/java/Creation.java" line = "35" begin = "8" end = "20"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    </behavior>
    <behavior name="Normal behavior `normal'">
    <goal why_file="why/Creation_po1.why">
      <location file = "HOME/tests/java/Creation.java" line = "31" begin = "18" end = "31"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Constructor of class TestSuperConstructor">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Normal behavior `normal'">
    <goal why_file="why/Creation_po17.why">
      <location file = "HOME/tests/java/Creation.java" line = "62" begin = "18" end = "34"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
  <function name="Constructor of class Creation">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/Creation_po15.why">
      <location file = "HOME/tests/java/Creation.java" line = "27" begin = "6" end = "9"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    <goal why_file="why/Creation_po16.why">
      <location file = "HOME/tests/java/Creation.java" line = "27" begin = "6" end = "9"/>
      <explain kind = "Pre"
text = ""/>
    </goal>
    </behavior>
    <behavior name="Normal behavior `normal'">
    <goal why_file="why/Creation_po11.why">
      <location file = "HOME/tests/java/Creation.java" line = "8" begin = "18" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/Creation_po12.why">
      <location file = "HOME/tests/java/Creation.java" line = "16" begin = "18" end = "38"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/Creation_po13.why">
      <location file = "HOME/tests/java/Creation.java" line = "18" begin = "4" end = "12"/>
      <explain kind = "Post"/>
    </goal>
    <goal why_file="why/Creation_po14.why">
      <location file = "HOME/tests/java/Creation.java" line = "24" begin = "18" end = "42"/>
      <explain kind = "Post"/>
    </goal>
    </behavior>
  </function>
</project>
========== file tests/java/why/Creation_ctx.why ==========
logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic div_int : int, int -> int

logic mod_int : int, int -> int

logic neg_int : int -> int

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic lt_int_bool : int, int -> bool

logic le_int_bool : int, int -> bool

logic gt_int_bool : int, int -> bool

logic ge_int_bool : int, int -> bool

logic eq_int_bool : int, int -> bool

logic neq_int_bool : int, int -> bool

axiom lt_int_bool_axiom:
  (forall x:int. (forall y:int. ((lt_int_bool(x, y) = true) <-> (x < y))))

axiom le_int_bool_axiom:
  (forall x:int. (forall y:int. ((le_int_bool(x, y) = true) <-> (x <= y))))

axiom gt_int_bool_axiom:
  (forall x:int. (forall y:int. ((gt_int_bool(x, y) = true) <-> (x > y))))

axiom ge_int_bool_axiom:
  (forall x:int. (forall y:int. ((ge_int_bool(x, y) = true) <-> (x >= y))))

axiom eq_int_bool_axiom:
  (forall x:int. (forall y:int. ((eq_int_bool(x, y) = true) <-> (x = y))))

axiom neq_int_bool_axiom:
  (forall x:int. (forall y:int. ((neq_int_bool(x, y) = true) <-> (x <> y))))

logic add_real : real, real -> real

logic sub_real : real, real -> real

logic mul_real : real, real -> real

logic div_real : real, real -> real

logic pow_real : real, real -> real

logic neg_real : real -> real

logic abs_real : real -> real

logic sqrt_real : real -> real

logic real_of_int : int -> real

logic int_of_real : real -> int

logic lt_real : real, real -> prop

logic le_real : real, real -> prop

logic gt_real : real, real -> prop

logic ge_real : real, real -> prop

logic eq_real : real, real -> prop

logic neq_real : real, real -> prop

logic lt_real_bool : real, real -> bool

logic le_real_bool : real, real -> bool

logic gt_real_bool : real, real -> bool

logic ge_real_bool : real, real -> bool

logic eq_real_bool : real, real -> bool

logic neq_real_bool : real, real -> bool

axiom lt_real_bool_axiom:
  (forall x:real. (forall y:real. ((lt_real_bool(x, y) = true) <-> (x < y))))

axiom le_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((le_real_bool(x, y) = true) <-> (x <= y))))

axiom gt_real_bool_axiom:
  (forall x:real. (forall y:real. ((gt_real_bool(x, y) = true) <-> (x > y))))

axiom ge_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((ge_real_bool(x, y) = true) <-> (x >= y))))

axiom eq_real_bool_axiom:
  (forall x:real. (forall y:real. ((eq_real_bool(x, y) = true) <-> (x = y))))

axiom neq_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((neq_real_bool(x, y) = true) <-> (x <> y))))

logic ite : bool, 'a1, 'a1 -> 'a1

axiom ite_true: (forall x:'a1. (forall y:'a1. (ite(true, x, y) = x)))

axiom ite_false: (forall x:'a1. (forall y:'a1. (ite(false, x, y) = y)))

logic bool_and : bool, bool -> bool

logic bool_or : bool, bool -> bool

logic bool_xor : bool, bool -> bool

axiom bool_and_false:
  ((bool_and(true, false) = false) and (bool_and(false, false) = false))

axiom false_bool_and:
  ((bool_and(false, true) = false) and (bool_and(false, false) = false))

axiom bool_and_true:
  ((bool_and(true, true) = true) and (bool_and(false, true) = false))

axiom true_bool_and:
  ((bool_and(true, true) = true) and (bool_and(true, false) = false))

axiom bool_and_1:
  ((((bool_and(true, true) = true) -> ((true = true) and (true = true))) and
    ((bool_and(true, false) = true) -> ((true = true) and (false = true)))) and
   (((bool_and(false, true) = true) -> ((false = true) and (true = true))) and
    ((bool_and(false, false) = true) -> ((false = true) and (false = true)))))

axiom div_positive_by_positive:
  (forall a:int.
    (forall b:int.
      (((0 <= a) and (0 < b)) -> ((0 <= (a / b)) and ((a / b) <= a)))))

axiom div_negative_by_positive:
  (forall a:int.
    (forall b:int.
      (((a <= 0) and (0 < b)) -> ((a <= (a / b)) and ((a / b) <= 0)))))

axiom div_positive_by_negative:
  (forall a:int.
    (forall b:int.
      (((0 <= a) and (b < 0)) -> (((-a) <= (a / b)) and ((a / b) <= 0)))))

axiom div_negative_by_negative:
  (forall a:int.
    (forall b:int.
      (((a <= 0) and (b < 0)) -> ((0 <= (a / b)) and ((a / b) <= (-a))))))

axiom mod_positive_by_positive:
  (forall a:int.
    (forall b:int.
      (((0 <= a) and (0 < b)) -> ((0 <= (a % b)) and ((a % b) < b)))))

axiom mod_negative_by_positive:
  (forall a:int.
    (forall b:int.
      (((a <= 0) and (0 < b)) -> ((0 <= (a % b)) and ((a % b) < b)))))

axiom mod_positive_by_negative:
  (forall a:int.
    (forall b:int.
      (((0 <= a) and (b < 0)) -> (((-b) < (a % b)) and ((a % b) <= 0)))))

axiom mod_negative_by_negative:
  (forall a:int.
    (forall b:int.
      (((a <= 0) and (b < 0)) -> (((-b) < (a % b)) and ((a % b) <= 0)))))

type 't alloc_table

type 't pointer

logic offset_max : 'a1 alloc_table, 'a1 pointer -> int

logic offset_min : 'a1 alloc_table, 'a1 pointer -> int

predicate valid(a: 'a1 alloc_table, p: 'a1 pointer) =
  ((offset_min(a, p) <= 0) and (offset_max(a, p) >= 0))

logic shift : 'a1 pointer, int -> 'a1 pointer

logic sub_pointer : 'a1 pointer, 'a1 pointer -> int

axiom shift_zero: (forall p:'a1 pointer [shift(p, 0)]. (shift(p, 0) = p))

axiom shift_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(shift(p, i), j)]. (shift(shift(p, i),
        j) = shift(p, (i + j))))))

axiom offset_max_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_max(a, shift(p, i)) = (offset_max(a, p) - i)))))

axiom offset_min_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_min(a, shift(p, i)) = (offset_min(a, p) - i)))))

axiom neq_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(p, i), shift(p, j)].
        ((i <> j) -> (shift(p, i) <> shift(p, j))))))

logic null :  -> 'a1 pointer

axiom null_not_valid: (forall a:'a1 alloc_table. (not valid(a, null)))

axiom null_pointer:
  (forall a:'a1 alloc_table.
    ((offset_min(a, null) <= 0) and (offset_max(a, null) <= (-2))))

logic eq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

axiom eq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer. ((eq_pointer_bool(p1, p2) = true) <-> (p1 = p2))))

axiom sub_pointer_shift:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, p)]. (p = shift(q, sub_pointer(p,
      q)))))

axiom sub_pointer_self:
  (forall p:'a1 pointer [sub_pointer(p, p)]. (sub_pointer(p, p) = 0))

axiom sub_pointer_zero:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      ((sub_pointer(p, q) = 0) -> (p = q))))

axiom sub_pointer_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(shift(p, i), q)]. (sub_pointer(shift(p, i),
        q) = (sub_pointer(p, q) + i)))))

axiom sub_pointer_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(p, shift(q, i))]. (sub_pointer(p, shift(q,
        i)) = (sub_pointer(p, q) - i)))))

type ('t, 'v) memory

logic select : ('a2, 'a1) memory, 'a2 pointer -> 'a1

logic store : ('a1, 'a2) memory, 'a1 pointer, 'a2 -> ('a1, 'a2) memory

axiom select_store_eq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 = p2) -> (select(store(m, p1, a), p2) = a))))))

axiom select_store_neq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 <> p2) -> (select(store(m, p1, a), p2) = select(m, p2)))))))

type 't pset

logic pset_empty :  -> 'a1 pset

logic pset_singleton : 'a1 pointer -> 'a1 pset

logic pset_deref : ('a2, 'a1 pointer) memory, 'a2 pset -> 'a1 pset

logic pset_union : 'a1 pset, 'a1 pset -> 'a1 pset

logic pset_all : 'a1 pset -> 'a1 pset

logic pset_range : 'a1 pset, int, int -> 'a1 pset

logic pset_range_left : 'a1 pset, int -> 'a1 pset

logic pset_range_right : 'a1 pset, int -> 'a1 pset

logic in_pset : 'a1 pointer, 'a1 pset -> prop

axiom in_pset_empty: (forall p:'a1 pointer. (not in_pset(p, pset_empty)))

axiom in_pset_singleton:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. (in_pset(p, pset_singleton(q)) <-> (p = q))))

axiom in_pset_deref:
  (forall p:'a1 pointer.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (in_pset(p, pset_deref(m, q)) <->
         (exists r:'a2 pointer. (in_pset(r, q) and (p = select(m, r))))))))

axiom in_pset_all:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (in_pset(p, pset_all(q)) <->
       (exists i:int.
         (exists r:'a1 pointer. (in_pset(r, q) and (p = shift(r, i))))))))

axiom in_pset_range:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (forall b:int.
          (in_pset(p, pset_range(q, a, b)) <->
           (exists i:int.
             (exists r:'a1 pointer.
               ((a <= i) and
                ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))))

axiom in_pset_range_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall b:int.
        (in_pset(p, pset_range_left(q, b)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_range_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (in_pset(p, pset_range_right(q, a)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((a <= i) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_union:
  (forall p:'a1 pointer.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (in_pset(p, pset_union(s1, s2)) <->
         (in_pset(p, s1) or in_pset(p, s2))))))

predicate not_assigns(a: 'a1 alloc_table, m1: ('a1, 'a2) memory, m2: ('a1,
  'a2) memory, l: 'a1 pset) =
  (forall p:'a1 pointer.
    ((valid(a, p) and (not in_pset(p, l))) -> (select(m2, p) = select(m1, p))))

axiom not_assigns_refl:
  (forall a:'a1 alloc_table.
    (forall m:('a1, 'a2) memory.
      (forall l:'a1 pset. not_assigns(a, m, m, l))))

axiom not_assigns_trans:
  (forall a:'a1 alloc_table.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory.
          (forall l:'a1 pset [not_assigns(a, m1, m2, l), not_assigns(a, m1,
            m3, l)].
            (not_assigns(a, m1, m2, l) ->
             (not_assigns(a, m2, m3, l) -> not_assigns(a, m1, m3, l))))))))

logic full_separated : 'a1 pointer, 'a2 pointer -> prop

axiom full_separated_shift1:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(p, shift(q, i))))))

axiom full_separated_shift2:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift3:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift4:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(p, shift(q, i))))))

type 't tag_table

type 't tag_id

logic int_of_tag : 'a1 tag_id -> int

logic typeof : 'a1 tag_table, 'a1 pointer -> 'a1 tag_id

logic parenttag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag_bool : 'a1 tag_id, 'a1 tag_id -> bool

axiom subtag_bool_def:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id. ((subtag_bool(t1, t2) = true) <-> subtag(t1, t2))))

axiom subtag_refl: (forall t:'a1 tag_id. subtag(t, t))

axiom subtag_parent:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id.
      (forall t3:'a1 tag_id.
        (subtag(t1, t2) -> (parenttag(t2, t3) -> subtag(t1, t3))))))

predicate instanceof(a: 'a1 tag_table, p: 'a1 pointer, t: 'a1 tag_id) =
  subtag(typeof(a, p), t)

logic downcast : 'a1 tag_table, 'a1 pointer, 'a1 tag_id -> 'a1 pointer

axiom downcast_instanceof:
  (forall a:'a1 tag_table.
    (forall p:'a1 pointer.
      (forall s:'a1 tag_id. (instanceof(a, p, s) -> (downcast(a, p, s) = p)))))

logic bottom_tag :  -> 'a1 tag_id

axiom bottom_tag_axiom: (forall t:'a1 tag_id. subtag(t, bottom_tag))

predicate root_tag(t: 'a1 tag_id) = parenttag(t, bottom_tag)

axiom root_subtag:
  (forall a:'a1 tag_id.
    (forall b:'a1 tag_id.
      (forall c:'a1 tag_id.
        (root_tag(a) ->
         (root_tag(b) -> ((a <> b) -> (subtag(c, a) -> (not subtag(c, b)))))))))

predicate fully_packed(tag_table: 'a1 tag_table, mutable: ('a1,
  'a1 tag_id) memory, this: 'a1 pointer) = (select(mutable,
  this) = typeof(tag_table, this))

logic bw_compl : int -> int

logic bw_and : int, int -> int

axiom bw_and_not_null:
  (forall a:int.
    (forall b:int. ((bw_and(a, b) <> 0) -> ((a <> 0) and (b <> 0)))))

logic bw_xor : int, int -> int

logic bw_or : int, int -> int

logic lsl : int, int -> int

axiom lsl_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsl(a, b)))))

axiom lsl_left_positive_monotone:
  (forall a1:int.
    (forall a2:int.
      (forall b:int.
        (((0 <= a1) and ((a1 <= a2) and (0 <= b))) -> (lsl(a1, b) <= lsl(a2,
         b))))))

logic lsr : int, int -> int

axiom lsr_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsr(a, b)))))

axiom lsr_left_positive_decreases:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(a, b) <= a))))

logic asr : int, int -> int

axiom asr_positive_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= asr(a, b)))))

axiom asr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) <= a))))

axiom asr_lsr_same_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) = lsr(a, b)))))

axiom lsl_of_lsr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsl(lsr(a, b), b) <= a))))

axiom lsr_of_lsl_identity_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(lsl(a, b), b) = a))))

logic alloc_extends : 'a1 alloc_table, 'a1 alloc_table -> prop

logic alloc_extern : 'a1 alloc_table, 'a1 pointer -> prop

axiom alloc_extends_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer. (offset_min(a1, p) = offset_min(a2, p))))))

axiom alloc_extends_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer. (offset_max(a1, p) = offset_max(a2, p))))))

axiom alloc_extern_def:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer [alloc_extern(a, p)].
      (alloc_extern(a, p) ->
       (forall q:'a1 pointer.
         ((offset_min(a, q) <= offset_max(a, q)) -> full_separated(p, q))))))

type Object

type byte

type char

type int32

type interface

type long

type short

logic Creation_tag :  -> Object tag_id

logic Object_tag :  -> Object tag_id

axiom Creation_parenttag_Object: parenttag(Creation_tag, Object_tag)

predicate Non_null_Object(Object_alloc_table: Object alloc_table,
  x: Object pointer) = (offset_max(Object_alloc_table, x) = 0)

axiom Object_int: (int_of_tag(Object_tag) = 1)

axiom Object_parenttag_bottom: parenttag(Object_tag, bottom_tag)

axiom Object_tags:
  (forall x:Object pointer.
    (forall Object_tag_table:Object tag_table. instanceof(Object_tag_table,
      x, Object_tag)))

logic String_tag :  -> Object tag_id

axiom String_parenttag_Object: parenttag(String_tag, Object_tag)

logic TestSuperConstructor_tag :  -> Object tag_id

axiom TestSuperConstructor_parenttag_Creation:
  parenttag(TestSuperConstructor_tag, Creation_tag)

logic Throwable_tag :  -> Object tag_id

axiom Throwable_parenttag_Object: parenttag(Throwable_tag, Object_tag)

logic integer_of_byte : byte -> int

logic byte_of_integer : int -> byte

axiom byte_coerce:
  (forall x:int.
    ((((-128) <= x) and (x <= 127)) ->
     (integer_of_byte(byte_of_integer(x)) = x)))

axiom byte_range:
  (forall x:byte.
    (((-128) <= integer_of_byte(x)) and (integer_of_byte(x) <= 127)))

logic integer_of_char : char -> int

logic char_of_integer : int -> char

axiom char_coerce:
  (forall x:int.
    (((0 <= x) and (x <= 65535)) -> (integer_of_char(char_of_integer(x)) = x)))

axiom char_range:
  (forall x:char.
    ((0 <= integer_of_char(x)) and (integer_of_char(x) <= 65535)))

predicate eq_byte(x: byte, y: byte) =
  (integer_of_byte(x) = integer_of_byte(y))

predicate eq_char(x: char, y: char) =
  (integer_of_char(x) = integer_of_char(y))

logic integer_of_int32 : int32 -> int

predicate eq_int32(x: int32, y: int32) =
  (integer_of_int32(x) = integer_of_int32(y))

logic integer_of_long : long -> int

predicate eq_long(x: long, y: long) =
  (integer_of_long(x) = integer_of_long(y))

logic integer_of_short : short -> int

predicate eq_short(x: short, y: short) =
  (integer_of_short(x) = integer_of_short(y))

logic int32_of_integer : int -> int32

axiom int32_coerce:
  (forall x:int.
    ((((-2147483648) <= x) and (x <= 2147483647)) ->
     (integer_of_int32(int32_of_integer(x)) = x)))

axiom int32_range:
  (forall x:int32.
    (((-2147483648) <= integer_of_int32(x)) and
     (integer_of_int32(x) <= 2147483647)))

logic interface_tag :  -> interface tag_id

axiom interface_int: (int_of_tag(interface_tag) = 1)

axiom interface_parenttag_bottom: parenttag(interface_tag, bottom_tag)

axiom interface_tags:
  (forall x:interface pointer.
    (forall interface_tag_table:interface tag_table.
      instanceof(interface_tag_table, x, interface_tag)))

logic long_of_integer : int -> long

axiom long_coerce:
  (forall x:int.
    ((((-9223372036854775808) <= x) and (x <= 9223372036854775807)) ->
     (integer_of_long(long_of_integer(x)) = x)))

axiom long_range:
  (forall x:long.
    (((-9223372036854775808) <= integer_of_long(x)) and
     (integer_of_long(x) <= 9223372036854775807)))

logic short_of_integer : int -> short

axiom short_coerce:
  (forall x:int.
    ((((-32768) <= x) and (x <= 32767)) ->
     (integer_of_short(short_of_integer(x)) = x)))

axiom short_range:
  (forall x:short.
    (((-32768) <= integer_of_short(x)) and (integer_of_short(x) <= 32767)))

predicate valid_struct_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) = a) and
   (offset_max(Object_alloc_table, p) = b))

predicate valid_struct_Creation(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_String(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_TestSuperConstructor(p: Object pointer, a: int,
  b: int, Object_alloc_table: Object alloc_table) = valid_struct_Creation(p,
  a, b, Object_alloc_table)

predicate valid_struct_Throwable(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) = a) and
   (offset_max(interface_alloc_table, p) = b))

predicate valid_variant_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) = a) and
   (offset_max(Object_alloc_table, p) = b))

predicate valid_variant_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) = a) and
   (offset_max(interface_alloc_table, p) = b))

========== file tests/java/why/Creation_po1.why ==========
goal Creation_test1_ensures_normal_po_1:
  forall Creation_simple_val:(Object,
  int32) memory.
  forall Object_alloc_table:Object alloc_table.
  ("JC_20": (true = true)) ->
  forall result:Object pointer.
  forall Object_alloc_table0:Object alloc_table.
  forall Object_tag_table:Object tag_table.
  (valid_struct_Creation(result, 0, 0, Object_alloc_table0) and
   (instanceof(Object_tag_table, result, Creation_tag) and
    (alloc_extends(Object_alloc_table, Object_alloc_table0) and
     alloc_extern(Object_alloc_table, result)))) ->
  forall result0:Object pointer.
  forall Object_alloc_table1:Object alloc_table.
  forall Object_tag_table0:Object tag_table.
  (valid_struct_Creation(result0, 0, 0, Object_alloc_table1) and
   (instanceof(Object_tag_table0, result0, Creation_tag) and
    (alloc_extends(Object_alloc_table0, Object_alloc_table1) and
     alloc_extern(Object_alloc_table0, result0)))) ->
  forall result1:int32.
  (integer_of_int32(result1) = 17) ->
  ("JC_5": (true = true)) ->
  forall Creation_simple_val0:(Object,
  int32) memory.
  ("JC_9":
  (("K_2": (integer_of_int32(select(Creation_simple_val0,
   result0)) = integer_of_int32(result1))) and
   ("JC_8": not_assigns(Object_alloc_table1, Creation_simple_val,
   Creation_simple_val0, pset_singleton(result0))))) ->
  forall result2:int32.
  (result2 = select(Creation_simple_val0, result0)) ->
  forall return:int32.
  (return = result2) ->
  ("K_8": (integer_of_int32(return) = 17))

========== file tests/java/why/Creation_po10.why ==========
goal Creation_test3_safety_po_2:
  forall Creation_simple_val:(Object,
  int32) memory.
  forall Object_alloc_table:Object alloc_table.
  ("JC_42": (true = true)) ->
  forall result:Object pointer.
  forall Object_alloc_table0:Object alloc_table.
  forall Object_tag_table:Object tag_table.
  (valid_struct_Creation(result, 0, 0, Object_alloc_table0) and
   (instanceof(Object_tag_table, result, Creation_tag) and
    (alloc_extends(Object_alloc_table, Object_alloc_table0) and
     alloc_extern(Object_alloc_table, result)))) ->
  (offset_max(Object_alloc_table0, result) >= 0) ->
  forall result0:Object pointer.
  forall Object_alloc_table1:Object alloc_table.
  forall Object_tag_table0:Object tag_table.
  (valid_struct_Creation(result0, 0, 0, Object_alloc_table1) and
   (instanceof(Object_tag_table0, result0, Creation_tag) and
    (alloc_extends(Object_alloc_table0, Object_alloc_table1) and
     alloc_extern(Object_alloc_table0, result0)))) ->
  forall result1:int32.
  (integer_of_int32(result1) = 10) ->
  forall result2:int32.
  (integer_of_int32(result2) = 7) ->
  ("JC_15": (true = true)) ->
  forall Creation_simple_val0:(Object,
  int32) memory.
  ("JC_19":
  (("K_7": (integer_of_int32(select(Creation_simple_val0,
   result0)) = (integer_of_int32(result1) + integer_of_int32(result2)))) and
   ("JC_18": not_assigns(Object_alloc_table1, Creation_simple_val,
   Creation_simple_val0, pset_singleton(result0))))) ->
  (0 <= offset_max(Object_alloc_table1, result0))

========== file tests/java/why/Creation_po11.why ==========
goal cons_Creation_ensures_normal_po_1:
  forall this_2:Object pointer.
  forall Creation_simple_val:(Object,
  int32) memory.
  forall Object_alloc_table:Object alloc_table.
  (valid_struct_Creation(this_2, 0, 0, Object_alloc_table) and
   ("JC_10": (true = true))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  ("JC_5": (true = true)) ->
  forall Creation_simple_val0:(Object,
  int32) memory.
  ("JC_9":
  (("K_2": (integer_of_int32(select(Creation_simple_val0,
   this_2)) = integer_of_int32(result))) and
   ("JC_8": not_assigns(Object_alloc_table, Creation_simple_val,
   Creation_simple_val0, pset_singleton(this_2))))) ->
  ("JC_14":
  ("K_4":
  ("K_4": (integer_of_int32(select(Creation_simple_val0, this_2)) = 0))))

========== file tests/java/why/Creation_po12.why ==========
goal cons_Creation_int_ensures_normal_po_1:
  forall this_1:Object pointer.
  forall n_1:int32.
  forall Creation_simple_val:(Object,
  int32) memory.
  forall Object_alloc_table:Object alloc_table.
  (valid_struct_Creation(this_1, 0, 0, Object_alloc_table) and
   ("JC_5": (true = true))) ->
  forall Creation_simple_val0:(Object,
  int32) memory.
  (Creation_simple_val0 = store(Creation_simple_val, this_1, n_1)) ->
  forall result:int32.
  (result = select(Creation_simple_val0, this_1)) ->
  ("JC_9":
  ("K_2":
  ("K_2": (integer_of_int32(select(Creation_simple_val0,
  this_1)) = integer_of_int32(n_1)))))

========== file tests/java/why/Creation_po13.why ==========
goal cons_Creation_int_ensures_normal_po_2:
  forall this_1:Object pointer.
  forall n_1:int32.
  forall Creation_simple_val:(Object,
  int32) memory.
  forall Object_alloc_table:Object alloc_table.
  (valid_struct_Creation(this_1, 0, 0, Object_alloc_table) and
   ("JC_5": (true = true))) ->
  forall Creation_simple_val0:(Object,
  int32) memory.
  (Creation_simple_val0 = store(Creation_simple_val, this_1, n_1)) ->
  forall result:int32.
  (result = select(Creation_simple_val0, this_1)) ->
  ("JC_9":
  ("JC_8":
  ("JC_8": not_assigns(Object_alloc_table, Creation_simple_val,
  Creation_simple_val0, pset_singleton(this_1)))))

========== file tests/java/why/Creation_po14.why ==========
goal cons_Creation_int_int_ensures_normal_po_1:
  forall this_0:Object pointer.
  forall n_0_0:int32.
  forall m:int32.
  forall Creation_simple_val:(Object,
  int32) memory.
  forall Object_alloc_table:Object alloc_table.
  (valid_struct_Creation(this_0, 0, 0, Object_alloc_table) and
   ("JC_15": (true = true))) ->
  forall result:int32.
  (integer_of_int32(result) = (integer_of_int32(n_0_0) + integer_of_int32(m))) ->
  ("JC_5": (true = true)) ->
  forall Creation_simple_val0:(Object,
  int32) memory.
  ("JC_9":
  (("K_2": (integer_of_int32(select(Creation_simple_val0,
   this_0)) = integer_of_int32(result))) and
   ("JC_8": not_assigns(Object_alloc_table, Creation_simple_val,
   Creation_simple_val0, pset_singleton(this_0))))) ->
  ("JC_19":
  ("K_7":
  ("K_7": (integer_of_int32(select(Creation_simple_val0,
  this_0)) = (integer_of_int32(n_0_0) + integer_of_int32(m))))))

========== file tests/java/why/Creation_po15.why ==========
goal cons_Creation_int_int_safety_po_1:
  forall this_0:Object pointer.
  forall n_0_0:int32.
  forall m:int32.
  forall Object_alloc_table:Object alloc_table.
  (valid_struct_Creation(this_0, 0, 0, Object_alloc_table) and
   ("JC_15": (true = true))) ->
  ((-2147483648) <= (integer_of_int32(n_0_0) + integer_of_int32(m)))

========== file tests/java/why/Creation_po16.why ==========
goal cons_Creation_int_int_safety_po_2:
  forall this_0:Object pointer.
  forall n_0_0:int32.
  forall m:int32.
  forall Object_alloc_table:Object alloc_table.
  (valid_struct_Creation(this_0, 0, 0, Object_alloc_table) and
   ("JC_15": (true = true))) ->
  ((integer_of_int32(n_0_0) + integer_of_int32(m)) <= 2147483647)

========== file tests/java/why/Creation_po17.why ==========
goal cons_TestSuperConstructor_ensures_normal_po_1:
  forall this_4:Object pointer.
  forall Creation_simple_val:(Object,
  int32) memory.
  forall Object_alloc_table:Object alloc_table.
  (valid_struct_TestSuperConstructor(this_4, 0, 0, Object_alloc_table) and
   ("JC_55": (true = true))) ->
  forall result:int32.
  (integer_of_int32(result) = 12) ->
  ("JC_5": (true = true)) ->
  forall Creation_simple_val0:(Object,
  int32) memory.
  ("JC_9":
  (("K_2": (integer_of_int32(select(Creation_simple_val0,
   this_4)) = integer_of_int32(result))) and
   ("JC_8": not_assigns(Object_alloc_table, Creation_simple_val,
   Creation_simple_val0, pset_singleton(this_4))))) ->
  ("JC_59":
  ("K_18":
  ("K_18": (integer_of_int32(select(Creation_simple_val0, this_4)) = 12))))

========== file tests/java/why/Creation_po2.why ==========
goal Creation_test1_safety_po_1:
  forall Object_alloc_table:Object alloc_table.
  ("JC_20": (true = true)) ->
  forall result:Object pointer.
  forall Object_alloc_table0:Object alloc_table.
  forall Object_tag_table:Object tag_table.
  (valid_struct_Creation(result, 0, 0, Object_alloc_table0) and
   (instanceof(Object_tag_table, result, Creation_tag) and
    (alloc_extends(Object_alloc_table, Object_alloc_table0) and
     alloc_extern(Object_alloc_table, result)))) ->
  (offset_max(Object_alloc_table0, result) >= 0)

========== file tests/java/why/Creation_po3.why ==========
goal Creation_test1_safety_po_2:
  forall Creation_simple_val:(Object,
  int32) memory.
  forall Object_alloc_table:Object alloc_table.
  ("JC_20": (true = true)) ->
  forall result:Object pointer.
  forall Object_alloc_table0:Object alloc_table.
  forall Object_tag_table:Object tag_table.
  (valid_struct_Creation(result, 0, 0, Object_alloc_table0) and
   (instanceof(Object_tag_table, result, Creation_tag) and
    (alloc_extends(Object_alloc_table, Object_alloc_table0) and
     alloc_extern(Object_alloc_table, result)))) ->
  (offset_max(Object_alloc_table0, result) >= 0) ->
  forall result0:Object pointer.
  forall Object_alloc_table1:Object alloc_table.
  forall Object_tag_table0:Object tag_table.
  (valid_struct_Creation(result0, 0, 0, Object_alloc_table1) and
   (instanceof(Object_tag_table0, result0, Creation_tag) and
    (alloc_extends(Object_alloc_table0, Object_alloc_table1) and
     alloc_extern(Object_alloc_table0, result0)))) ->
  forall result1:int32.
  (integer_of_int32(result1) = 17) ->
  ("JC_5": (true = true)) ->
  forall Creation_simple_val0:(Object,
  int32) memory.
  ("JC_9":
  (("K_2": (integer_of_int32(select(Creation_simple_val0,
   result0)) = integer_of_int32(result1))) and
   ("JC_8": not_assigns(Object_alloc_table1, Creation_simple_val,
   Creation_simple_val0, pset_singleton(result0))))) ->
  (0 <= offset_max(Object_alloc_table1, result0))

========== file tests/java/why/Creation_po4.why ==========
goal Creation_test2_ensures_normal_po_1:
  forall Creation_simple_val:(Object,
  int32) memory.
  forall Object_alloc_table:Object alloc_table.
  ("JC_31": (true = true)) ->
  forall result:Object pointer.
  forall Object_alloc_table0:Object alloc_table.
  forall Object_tag_table:Object tag_table.
  (valid_struct_Creation(result, 0, 0, Object_alloc_table0) and
   (instanceof(Object_tag_table, result, Creation_tag) and
    (alloc_extends(Object_alloc_table, Object_alloc_table0) and
     alloc_extern(Object_alloc_table, result)))) ->
  forall result0:Object pointer.
  forall Object_alloc_table1:Object alloc_table.
  forall Object_tag_table0:Object tag_table.
  (valid_struct_Creation(result0, 0, 0, Object_alloc_table1) and
   (instanceof(Object_tag_table0, result0, Creation_tag) and
    (alloc_extends(Object_alloc_table0, Object_alloc_table1) and
     alloc_extern(Object_alloc_table0, result0)))) ->
  ("JC_10": (true = true)) ->
  forall Creation_simple_val0:(Object,
  int32) memory.
  ("JC_14":
  (("K_4": (integer_of_int32(select(Creation_simple_val0, result0)) = 0)) and
   ("JC_13": not_assigns(Object_alloc_table1, Creation_simple_val,
   Creation_simple_val0, pset_singleton(result0))))) ->
  forall result1:int32.
  (result1 = select(Creation_simple_val0, result0)) ->
  forall return:int32.
  (return = result1) ->
  ("K_11": (integer_of_int32(return) = 0))

========== file tests/java/why/Creation_po5.why ==========
goal Creation_test2_safety_po_1:
  forall Object_alloc_table:Object alloc_table.
  ("JC_31": (true = true)) ->
  forall result:Object pointer.
  forall Object_alloc_table0:Object alloc_table.
  forall Object_tag_table:Object tag_table.
  (valid_struct_Creation(result, 0, 0, Object_alloc_table0) and
   (instanceof(Object_tag_table, result, Creation_tag) and
    (alloc_extends(Object_alloc_table, Object_alloc_table0) and
     alloc_extern(Object_alloc_table, result)))) ->
  (offset_max(Object_alloc_table0, result) >= 0)

========== file tests/java/why/Creation_po6.why ==========
goal Creation_test2_safety_po_2:
  forall Creation_simple_val:(Object,
  int32) memory.
  forall Object_alloc_table:Object alloc_table.
  ("JC_31": (true = true)) ->
  forall result:Object pointer.
  forall Object_alloc_table0:Object alloc_table.
  forall Object_tag_table:Object tag_table.
  (valid_struct_Creation(result, 0, 0, Object_alloc_table0) and
   (instanceof(Object_tag_table, result, Creation_tag) and
    (alloc_extends(Object_alloc_table, Object_alloc_table0) and
     alloc_extern(Object_alloc_table, result)))) ->
  (offset_max(Object_alloc_table0, result) >= 0) ->
  forall result0:Object pointer.
  forall Object_alloc_table1:Object alloc_table.
  forall Object_tag_table0:Object tag_table.
  (valid_struct_Creation(result0, 0, 0, Object_alloc_table1) and
   (instanceof(Object_tag_table0, result0, Creation_tag) and
    (alloc_extends(Object_alloc_table0, Object_alloc_table1) and
     alloc_extern(Object_alloc_table0, result0)))) ->
  ("JC_10": (true = true)) ->
  forall Creation_simple_val0:(Object,
  int32) memory.
  ("JC_14":
  (("K_4": (integer_of_int32(select(Creation_simple_val0, result0)) = 0)) and
   ("JC_13": not_assigns(Object_alloc_table1, Creation_simple_val,
   Creation_simple_val0, pset_singleton(result0))))) ->
  (0 <= offset_max(Object_alloc_table1, result0))

========== file tests/java/why/Creation_po7.why ==========
goal Creation_test3_ensures_normal_po_1:
  forall Creation_simple_val:(Object,
  int32) memory.
  forall Object_alloc_table:Object alloc_table.
  ("JC_42": (true = true)) ->
  forall result:Object pointer.
  forall Object_alloc_table0:Object alloc_table.
  forall Object_tag_table:Object tag_table.
  (valid_struct_Creation(result, 0, 0, Object_alloc_table0) and
   (instanceof(Object_tag_table, result, Creation_tag) and
    (alloc_extends(Object_alloc_table, Object_alloc_table0) and
     alloc_extern(Object_alloc_table, result)))) ->
  forall result0:Object pointer.
  forall Object_alloc_table1:Object alloc_table.
  forall Object_tag_table0:Object tag_table.
  (valid_struct_Creation(result0, 0, 0, Object_alloc_table1) and
   (instanceof(Object_tag_table0, result0, Creation_tag) and
    (alloc_extends(Object_alloc_table0, Object_alloc_table1) and
     alloc_extern(Object_alloc_table0, result0)))) ->
  forall result1:int32.
  (integer_of_int32(result1) = 10) ->
  forall result2:int32.
  (integer_of_int32(result2) = 7) ->
  ("JC_15": (true = true)) ->
  forall Creation_simple_val0:(Object,
  int32) memory.
  ("JC_19":
  (("K_7": (integer_of_int32(select(Creation_simple_val0,
   result0)) = (integer_of_int32(result1) + integer_of_int32(result2)))) and
   ("JC_18": not_assigns(Object_alloc_table1, Creation_simple_val,
   Creation_simple_val0, pset_singleton(result0))))) ->
  forall result3:int32.
  (result3 = select(Creation_simple_val0, result0)) ->
  forall return:int32.
  (return = result3) ->
  ("JC_46": ("K_14": ("K_14": (integer_of_int32(return) = 17))))

========== file tests/java/why/Creation_po8.why ==========
goal Creation_test3_ensures_normal_po_2:
  forall Creation_simple_val:(Object,
  int32) memory.
  forall Object_alloc_table:Object alloc_table.
  ("JC_42": (true = true)) ->
  forall result:Object pointer.
  forall Object_alloc_table0:Object alloc_table.
  forall Object_tag_table:Object tag_table.
  (valid_struct_Creation(result, 0, 0, Object_alloc_table0) and
   (instanceof(Object_tag_table, result, Creation_tag) and
    (alloc_extends(Object_alloc_table, Object_alloc_table0) and
     alloc_extern(Object_alloc_table, result)))) ->
  forall result0:Object pointer.
  forall Object_alloc_table1:Object alloc_table.
  forall Object_tag_table0:Object tag_table.
  (valid_struct_Creation(result0, 0, 0, Object_alloc_table1) and
   (instanceof(Object_tag_table0, result0, Creation_tag) and
    (alloc_extends(Object_alloc_table0, Object_alloc_table1) and
     alloc_extern(Object_alloc_table0, result0)))) ->
  forall result1:int32.
  (integer_of_int32(result1) = 10) ->
  forall result2:int32.
  (integer_of_int32(result2) = 7) ->
  ("JC_15": (true = true)) ->
  forall Creation_simple_val0:(Object,
  int32) memory.
  ("JC_19":
  (("K_7": (integer_of_int32(select(Creation_simple_val0,
   result0)) = (integer_of_int32(result1) + integer_of_int32(result2)))) and
   ("JC_18": not_assigns(Object_alloc_table1, Creation_simple_val,
   Creation_simple_val0, pset_singleton(result0))))) ->
  forall result3:int32.
  (result3 = select(Creation_simple_val0, result0)) ->
  forall return:int32.
  (return = result3) ->
  ("JC_46":
  ("JC_45":
  ("JC_45": not_assigns(Object_alloc_table, Creation_simple_val,
  Creation_simple_val0, pset_empty))))

========== file tests/java/why/Creation_po9.why ==========
goal Creation_test3_safety_po_1:
  forall Object_alloc_table:Object alloc_table.
  ("JC_42": (true = true)) ->
  forall result:Object pointer.
  forall Object_alloc_table0:Object alloc_table.
  forall Object_tag_table:Object tag_table.
  (valid_struct_Creation(result, 0, 0, Object_alloc_table0) and
   (instanceof(Object_tag_table, result, Creation_tag) and
    (alloc_extends(Object_alloc_table, Object_alloc_table0) and
     alloc_extern(Object_alloc_table, result)))) ->
  (offset_max(Object_alloc_table0, result) >= 0)

========== simplify execution ==========
why -simplify [...] why/Creation.why
Running Simplify on proof obligations
(. = valid * = invalid ? = unknown # = timeout ! = failure)
simplify/Creation_why.sx      : .......?......??. (14/0/3/0/0)
total   :  17
valid   :  14 ( 82%)
invalid :   0 (  0%)
unknown :   3 ( 18%)
timeout :   0 (  0%)
failure :   0 (  0%)
========== ergo execution ==========
why --why [...] why/Creation.why
Running Ergo on proof obligations
(. = valid * = invalid ? = unknown # = timeout ! = failure)
why/Creation_why.why          : .......?......??. (14/0/3/0/0)
total   :  17
valid   :  14 ( 82%)
invalid :   0 (  0%)
unknown :   3 ( 18%)
timeout :   0 (  0%)
failure :   0 (  0%)
