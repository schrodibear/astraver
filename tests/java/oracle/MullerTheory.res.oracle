========== file tests/java/MullerTheory.java ==========
/* File Muller.java */

//@+ CheckArithOverflow = no
//@+ SeparationPolicy = Regions

//@ import tests.spec.NumOfPos;

/*@ lemma num_of_pos_strictly_increasing{L} :
  @   \forall integer i j k l, int t[];
  @       j < k && k <= l && t[k] > 0 ==> 
  @       num_of_pos(i,j,t) < num_of_pos(i,l,t);
  @*/

public class MullerTheory {

    /*@ requires t!=null;
      @*/
    public static int[] m(int t[]) {
	int count = 0;
	
	/*@ loop_invariant
	  @    0 <= i <= t.length && 
	  @    0 <= count <= i && 
	  @    count == num_of_pos(0,i-1,t) ; 
	  @ loop_variant t.length - i;
	  @*/
	for (int i=0 ; i < t.length; i++) if (t[i] > 0) count++;
	
	int u[] = new int[count];
	count = 0;
	
	/*@ loop_invariant
	  @    0 <= i <= t.length && 
	  @    0 <= count <= i && 
	  @    count == num_of_pos(0,i-1,t);
	  @ loop_variant t.length - i;
	  @*/
	for (int i=0 ; i < t.length; i++) {
	    if (t[i] > 0) u[count++] = t[i];
	}
	return u;
    }
}

/* End of file Muller.java */
========== krakatoa execution ==========
Parsing OK.
Parsing of spec file tests/spec/NumOfPos.spec was OK.
It contains theory 'NumOfPos'
Typing OK.
Generating JC function MullerTheory_m for method MullerTheory.m
Generating JC function cons_MullerTheory for constructor MullerTheory
Done.
========== file tests/java/MullerTheory.jc ==========
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = None

axiomatic NumOfPos {

  logic integer num_of_pos{L}(integer i, integer j, intM[0..] t)
   
  axiom num_of_pos_false_case{L} :
  (\forall integer i_2;
    (\forall integer j_2;
      (\forall integer k_0;
        (\forall intM[0..] t_2;
          (((i_2 <= j_2) && (! ((t_2 + j_2).intP > 0))) ==>
            (num_of_pos{L}(i_2, j_2, t_2) ==
              num_of_pos{L}(i_2, (j_2 - 1), t_2)))))))
   
  axiom num_of_pos_true_case{L} :
  (\forall integer i_1;
    (\forall integer j_1;
      (\forall integer k;
        (\forall intM[0..] t_1;
          (((i_1 <= j_1) && ((t_1 + j_1).intP > 0)) ==>
            (num_of_pos{L}(i_1, j_1, t_1) ==
              (num_of_pos{L}(i_1, (j_1 - 1), t_1) + 1)))))))
   
  axiom num_of_pos_empty{L} :
  (\forall integer i_0;
    (\forall integer j_0;
      (\forall intM[0..] t_0;
        ((i_0 > j_0) ==> (num_of_pos{L}(i_0, j_0, t_0) == 0)))))
  
}

lemma num_of_pos_strictly_increasing{L} :
(\forall integer i_3;
  (\forall integer j_3;
    (\forall integer k_1;
      (\forall integer l;
        (\forall intM[0..] t_3;
          ((((j_3 < k_1) && (k_1 <= l)) && ((t_3 + k_1).intP > 0)) ==>
            (num_of_pos{L}(i_3, j_3, t_3) < num_of_pos{L}(i_3, l, t_3))))))))

logic Non_null_intM{Here}(intM[0..] x) =
(\offset_max(x) >= -1)

logic Non_null_Object{Here}(Object[0..] x) =
(\offset_max(x) == 0)

tag Object = {
}

tag String = Object with {
}

tag Throwable = Object with {
}

tag Exception = Object with {
}

tag MullerTheory = Object with {
}

type Object = [Object]

type interface = [interface]

tag interface = {
}

tag intM = Object with {
  integer intP;
}

boolean non_null_intM(! intM[0..] x)
behavior normal:
  ensures (if \result then (\offset_max(x) >= -1) else (x == null));
;

integer java_array_length_intM(! intM[0..] x)
behavior non_null:
  assigns \nothing;
  ensures ((\result <= 2147483647) &&
            ((\result >= 0) && ((\result == (\offset_max(x) + 1)) && true)));
;

boolean non_null_Object(! Object[0..] x)
behavior normal:
  ensures (if \result then (\offset_max(x) == 0) else (x == null));
;

exception Throwable of Throwable[0..]

exception Exception of Exception[0..]

intM[0..] MullerTheory_m(intM[0..] t_4)
  requires (K_39 : Non_null_intM(t_4));
{  
   {  
      (var integer count = (K_38 : 0));
      
      {  
         {  
            {  
               (var integer i_4 = (K_1 : 0));
               
               loop 
               behavior default:
                 invariant (K_10 : ((K_9 : ((K_8 : ((K_7 : (0 <= i_4)) &&
                                                     (K_6 : (i_4 <=
                                                              (\offset_max(t_4) +
                                                                1))))) &&
                                             (K_5 : ((K_4 : (0 <= count)) &&
                                                      (K_3 : (count <= i_4)))))) &&
                                     (K_2 : (count ==
                                              num_of_pos{Here}(0, (i_4 - 1),
                                                               t_4)))));
               
               variant (K_11 : ((\offset_max(t_4) + 1) - i_4));
               for ( ; (K_17 : (i_4 < (K_16 : java_array_length_intM(t_4)))) ; 
               (K_15 : (i_4 ++)))
               {  (if (K_14 : ((K_13 : (t_4 + i_4).intP) > 0)) then (K_12 : 
                                                                    (count ++)) else ())
               }
            }
         };
         
         {  
            (var intM[0..] u = (K_37 : (new intM[count])));
            
            {  (count = 0);
               
               {  
                  {  
                     (var integer i_5 = (K_18 : 0));
                     
                     loop 
                     behavior default:
                       invariant (K_27 : ((K_26 : ((K_25 : ((K_24 : (0 <=
                                                                    i_5)) &&
                                                             (K_23 : 
                                                             (i_5 <=
                                                               (\offset_max(t_4) +
                                                                 1))))) &&
                                                    (K_22 : ((K_21 : 
                                                             (0 <=
                                                               count)) &&
                                                              (K_20 : 
                                                              (count <=
                                                                i_5)))))) &&
                                           (K_19 : (count ==
                                                     num_of_pos{Here}(
                                                     0, (i_5 - 1), t_4)))));
                     
                     variant (K_28 : ((\offset_max(t_4) + 1) - i_5));
                     for ( ; (K_36 : (i_5 <
                                       (K_35 : java_array_length_intM(t_4)))) ; 
                     (K_34 : (i_5 ++)))
                     {  (if (K_33 : ((K_32 : (t_4 + i_5).intP) > 0)) then 
                        (K_31 : ((u + (K_29 : (count ++))).intP = (K_30 : 
                                                                  (t_4 +
                                                                    i_5).intP))) else ())
                     }
                  }
               };
               
               (return u)
            }
         }
      }
   }
}

unit cons_MullerTheory(! MullerTheory[0] this_0){()}

/*
Local Variables:
mode: java
compile-command: "jessie -why-opt -split-user-conj -locs tests/java/MullerTheory.jloc tests/java/MullerTheory.jc && make -f tests/java/MullerTheory.makefile gui"
End:
*/
========== file tests/java/MullerTheory.jloc ==========
[K_10]
file = "HOME/tests/java/MullerTheory.java"
line = 22
begin = 8
end = 95

[K_11]
file = "HOME/tests/java/MullerTheory.java"
line = 25
begin = 18
end = 30

[K_12]
file = "HOME/tests/java/MullerTheory.java"
line = 27
begin = 49
end = 56

[K_13]
file = "HOME/tests/java/MullerTheory.java"
line = 27
begin = 39
end = 43

[K_14]
file = "HOME/tests/java/MullerTheory.java"
line = 27
begin = 39
end = 47

[K_15]
file = "HOME/tests/java/MullerTheory.java"
line = 27
begin = 30
end = 33

[K_16]
file = "HOME/tests/java/MullerTheory.java"
line = 27
begin = 20
end = 28

[K_17]
file = "HOME/tests/java/MullerTheory.java"
line = 27
begin = 16
end = 28

[K_18]
file = "HOME/tests/java/MullerTheory.java"
line = 38
begin = 12
end = 13

[K_19]
file = "HOME/tests/java/MullerTheory.java"
line = 35
begin = 8
end = 36

[K_20]
file = "HOME/tests/java/MullerTheory.java"
line = 34
begin = 13
end = 23

[K_21]
file = "HOME/tests/java/MullerTheory.java"
line = 34
begin = 8
end = 18

[K_22]
file = "HOME/tests/java/MullerTheory.java"
line = 34
begin = 8
end = 23

[K_23]
file = "HOME/tests/java/MullerTheory.java"
line = 33
begin = 13
end = 26

[K_24]
file = "HOME/tests/java/MullerTheory.java"
line = 33
begin = 8
end = 14

[K_1]
file = "HOME/tests/java/MullerTheory.java"
line = 27
begin = 12
end = 13

[K_25]
file = "HOME/tests/java/MullerTheory.java"
line = 33
begin = 8
end = 26

[K_2]
file = "HOME/tests/java/MullerTheory.java"
line = 24
begin = 8
end = 36

[K_26]
file = "HOME/tests/java/MullerTheory.java"
line = 33
begin = 8
end = 54

[K_3]
file = "HOME/tests/java/MullerTheory.java"
line = 23
begin = 13
end = 23

[K_27]
file = "HOME/tests/java/MullerTheory.java"
line = 33
begin = 8
end = 95

[K_4]
file = "HOME/tests/java/MullerTheory.java"
line = 23
begin = 8
end = 18

[K_28]
file = "HOME/tests/java/MullerTheory.java"
line = 36
begin = 18
end = 30

[K_5]
file = "HOME/tests/java/MullerTheory.java"
line = 23
begin = 8
end = 23

[K_29]
file = "HOME/tests/java/MullerTheory.java"
line = 39
begin = 21
end = 28

[K_6]
file = "HOME/tests/java/MullerTheory.java"
line = 22
begin = 13
end = 26

[K_7]
file = "HOME/tests/java/MullerTheory.java"
line = 22
begin = 8
end = 14

[MullerTheory_m]
name = "Method m"
file = "HOME/tests/java/MullerTheory.java"
line = 18
begin = 24
end = 25

[K_8]
file = "HOME/tests/java/MullerTheory.java"
line = 22
begin = 8
end = 26

[K_9]
file = "HOME/tests/java/MullerTheory.java"
line = 22
begin = 8
end = 54

[K_30]
file = "HOME/tests/java/MullerTheory.java"
line = 39
begin = 32
end = 36

[K_31]
file = "HOME/tests/java/MullerTheory.java"
line = 39
begin = 19
end = 36

[K_32]
file = "HOME/tests/java/MullerTheory.java"
line = 39
begin = 9
end = 13

[K_33]
file = "HOME/tests/java/MullerTheory.java"
line = 39
begin = 9
end = 17

[K_34]
file = "HOME/tests/java/MullerTheory.java"
line = 38
begin = 30
end = 33

[K_35]
file = "HOME/tests/java/MullerTheory.java"
line = 38
begin = 20
end = 28

[K_36]
file = "HOME/tests/java/MullerTheory.java"
line = 38
begin = 16
end = 28

[K_37]
file = "HOME/tests/java/MullerTheory.java"
line = 29
begin = 11
end = 25

[K_38]
file = "HOME/tests/java/MullerTheory.java"
line = 19
begin = 13
end = 14

[K_39]
file = "HOME/tests/java/MullerTheory.java"
line = 16
begin = 17
end = 24

[cons_MullerTheory]
name = "Constructor of class MullerTheory"
file = "HOME/"
line = 0
begin = -1
end = -1

========== jessie execution ==========
Generating Why function MullerTheory_m
Generating Why function cons_MullerTheory
========== file tests/java/MullerTheory.makefile ==========
# this makefile was automatically generated; do not edit 

TIMEOUT ?= 10

DP ?= why-dp -timeout $(TIMEOUT)
WHYEXEC ?= why
GWHYEXEC ?= gwhy-bin
WHYLIB ?= HOME/lib

WHY=WHYLIB=$(WHYLIB) $(WHYEXEC)  -split-user-conj -explain -locs MullerTheory.loc

GWHY=WHYLIB=$(WHYLIB) $(GWHYEXEC)  -split-user-conj -explain -locs MullerTheory.loc

JESSIELIBFILES ?= $(WHYLIB)/why/jessie.why

COQDEP = coqdep

.PHONY: all coq pvs simplify cvcl harvey smtlib zenon

all: simplify/MullerTheory_why.sx

project: why/MullerTheory.wpr

why/%.wpr: why/%.why
	@echo 'why --project [...] why/$*.why' && $(WHY) --project -dir why $(JESSIELIBFILES) why/$*.why

goals: why/MullerTheory_ctx.why

why/%_ctx.why: why/%.why
	@echo 'why --multi-why [...] why/$*.why' && $(WHY) --multi-why -dir why $(JESSIELIBFILES) why/$*.why

coq: coq/MullerTheory_why.vo

coq/MullerTheory_why.v: why/MullerTheory.why
	@echo 'why -coq-v8 [...] why/MullerTheory.why' &&$(WHY) -coq-v8 -dir coq -coq-preamble "Require Export jessie_why." -coq-tactic "intuition" $(JESSIELIBFILES) why/MullerTheory.why

coq-goals: goals coq/MullerTheory_ctx_why.vo
	for f in why/*_po*.why; do make -f MullerTheory.makefile coq/`basename $$f .why`_why.v ; done

coq/MullerTheory_ctx_why.v: why/MullerTheory_ctx.why
	@echo 'why -coq-v8 [...] why/MullerTheory_ctx.why' &&$(WHY) -no-prelude -coq-v8 -dir coq -coq-preamble "Require Export jessie_why." -coq-tactic "intuition" why/MullerTheory_ctx.why

coq/%_why.v: why/%.why
	@echo 'why -coq-v8 [...] why/$*.why' &&$(WHY) -no-prelude -coq-v8 -dir coq -coq-preamble "Require Export MullerTheory_ctx_why." -coq-tactic "intuition" why/MullerTheory_ctx.why why/$*.why

coq/%.vo: coq/%.v
	coqc -I coq $<

pvs: pvs/MullerTheory_why.pvs

pvs/%_why.pvs: why/%.why
	$(WHY) -pvs -dir pvs -pvs-preamble "IMPORTING why@jessie" $(JESSIELIBFILES) why/$*.why

pvs/jessie_why.pvs:
	$(WHY) -pvs -dir pvs -pvs-preamble "IMPORTING why@why" $(JESSIELIBFILES)

isabelle: isabelle/MullerTheory_why.thy

isabelle/%_why.thy: why/%.why
	$(WHY) -isabelle -dir isabelle -isabelle-base-theory jessie_why $(JESSIELIBFILES) why/$*.why
	cp -f HOME/lib/isabelle/jessie_why.thy isabelle/

simplify: simplify/MullerTheory_why.sx
	@echo 'Running Simplify on proof obligations' && ($(DP) $^)

simplify/%_why.sx: why/%.why
	@echo 'why -simplify [...] why/$*.why' && $(WHY) -simplify -dir simplify $(JESSIELIBFILES) why/$*.why

alt-ergo ergo: why/MullerTheory_why.why
	@echo 'Running Alt-Ergo on proof obligations' && ($(DP) $^)

why/%_why.why: why/%.why
	@echo 'why -alt-ergo [...] why/$*.why' && $(WHY) -alt-ergo -dir why $(JESSIELIBFILES) why/$*.why

cvcl: cvcl/MullerTheory_why.cvc

	@echo 'Running CVC Lite on proof obligations' && ($(DP) $^)

cvcl/%_why.cvc: why/%.why
	@echo 'why -cvcl [...] why/$*.why' && $(WHY) -cvcl -dir cvcl $(JESSIELIBFILES) why/$*.why

harvey: harvey/MullerTheory_why.rv
	@echo 'Running haRVey on proof obligations' && ($(DP) $^)

harvey/%_why.rv: why/%.why
	@echo 'why -harvey [...] why/$*.why' && $(WHY) -harvey -dir harvey $(JESSIELIBFILES) why/$*.why

zenon: zenon/MullerTheory_why.znn
	@echo 'Running Zenon on proof obligations' && ($(DP) $^)

zenon/%_why.znn: why/%.why
	@echo 'why -zenon [...] why/$*.why' && $(WHY) -zenon -dir zenon $(JESSIELIBFILES) why/$*.why

smtlib: smtlib/MullerTheory_why.smt
	@echo 'Running Z3 on proof obligations' && ($(DP) $^)

smtlib/%_why.smt: why/%.why
	@echo 'why -smtlib [...] why/$*.why' && $(WHY) -smtlib --encoding sstrat --exp goal -dir smtlib $(JESSIELIBFILES) why/$*.why

z3: smtlib/MullerTheory_why.smt
	@echo 'Running Z3 on proof obligations' && ($(DP) -smt-solver z3 $^)

yices: smtlib/MullerTheory_why.smt
	@echo 'Running Yices on proof obligations' && ($(DP) -smt-solver yices $^)

cvc3: smtlib/MullerTheory_why.smt
	@echo 'Running CVC3 on proof obligations' && ($(DP) -smt-solver cvc3 $^)

gui stat: MullerTheory.stat

%.stat: why/%.why
	@echo 'gwhy-bin [...] why/$*.why' && $(GWHY) $(JESSIELIBFILES) why/$*.why

-include MullerTheory.depend

depend: coq/MullerTheory_why.v
	-$(COQDEP) -I coq coq/MullerTheory*_why.v > MullerTheory.depend

clean:
	rm -f coq/*.vo

========== file tests/java/MullerTheory.loc ==========
[JC_90]
file = "HOME/tests/java/MullerTheory.jc"
line = 139
begin = 21
end = 1746

[JC_91]
kind = UserCall
file = "HOME/tests/java/MullerTheory.java"
line = 38
begin = 20
end = 28

[JC_92]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_40]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_93]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_41]
file = "HOME/tests/java/MullerTheory.java"
line = 22
begin = 8
end = 14

[JC_94]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_42]
file = "HOME/tests/java/MullerTheory.java"
line = 22
begin = 13
end = 26

[JC_95]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_43]
file = "HOME/tests/java/MullerTheory.java"
line = 23
begin = 8
end = 18

[JC_96]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_44]
file = "HOME/tests/java/MullerTheory.java"
line = 23
begin = 13
end = 23

[JC_97]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_45]
file = "HOME/tests/java/MullerTheory.java"
line = 24
begin = 8
end = 36

[JC_98]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_46]
file = "HOME/tests/java/MullerTheory.java"
line = 22
begin = 8
end = 95

[JC_1]
file = "HOME/tests/java/MullerTheory.jc"
line = 77
begin = 8
end = 21

[JC_99]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_47]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_2]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_48]
file = "HOME/tests/java/MullerTheory.jc"
line = 109
begin = 15
end = 1093

[JC_3]
file = "HOME/tests/java/MullerTheory.jc"
line = 77
begin = 8
end = 21

[JC_49]
file = "HOME/tests/java/MullerTheory.jc"
line = 109
begin = 15
end = 1093

[JC_4]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_5]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_6]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_7]
file = "HOME/"
line = 0
begin = -1
end = -1

[MullerTheory_m_safety]
name = "Method m"
behavior = "Safety"
file = "HOME/tests/java/MullerTheory.java"
line = 18
begin = 24
end = 25

[JC_8]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_9]
file = "HOME/tests/java/MullerTheory.jc"
line = 79
begin = 11
end = 66

[JC_50]
kind = UserCall
file = "HOME/tests/java/MullerTheory.java"
line = 27
begin = 20
end = 28

[JC_51]
kind = PointerDeref
file = "HOME/tests/java/MullerTheory.java"
line = 27
begin = 39
end = 43

[JC_52]
file = "HOME/tests/java/MullerTheory.java"
line = 25
begin = 18
end = 30

[JC_53]
kind = AllocSize
file = "HOME/tests/java/MullerTheory.java"
line = 29
begin = 11
end = 25

[JC_54]
kind = AllocSize
file = "HOME/tests/java/MullerTheory.java"
line = 29
begin = 11
end = 25

[JC_55]
file = "HOME/tests/java/MullerTheory.java"
line = 33
begin = 8
end = 14

[JC_56]
file = "HOME/tests/java/MullerTheory.java"
line = 33
begin = 13
end = 26

[JC_57]
file = "HOME/tests/java/MullerTheory.java"
line = 34
begin = 8
end = 18

[JC_58]
file = "HOME/tests/java/MullerTheory.java"
line = 34
begin = 13
end = 23

[JC_59]
file = "HOME/tests/java/MullerTheory.java"
line = 35
begin = 8
end = 36

[cons_MullerTheory_ensures_default]
name = "Constructor of class MullerTheory"
behavior = "Default behavior"
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_60]
file = "HOME/tests/java/MullerTheory.java"
line = 33
begin = 8
end = 95

[JC_61]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_62]
file = "HOME/tests/java/MullerTheory.jc"
line = 139
begin = 21
end = 1746

[JC_10]
file = "HOME/tests/java/MullerTheory.jc"
line = 79
begin = 11
end = 66

[JC_63]
file = "HOME/tests/java/MullerTheory.jc"
line = 139
begin = 21
end = 1746

[JC_11]
file = "HOME/tests/java/MullerTheory.jc"
line = 82
begin = 8
end = 30

[JC_64]
kind = UserCall
file = "HOME/tests/java/MullerTheory.java"
line = 38
begin = 20
end = 28

[JC_12]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_65]
kind = PointerDeref
file = "HOME/tests/java/MullerTheory.java"
line = 39
begin = 9
end = 13

[JC_13]
file = "HOME/tests/java/MullerTheory.jc"
line = 82
begin = 8
end = 30

[JC_66]
kind = PointerDeref
file = "HOME/tests/java/MullerTheory.java"
line = 39
begin = 32
end = 36

[JC_14]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_67]
kind = PointerDeref
file = "HOME/tests/java/MullerTheory.java"
line = 39
begin = 32
end = 36

[JC_15]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_68]
kind = PointerDeref
file = "HOME/tests/java/MullerTheory.java"
line = 39
begin = 19
end = 36

[JC_16]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_69]
file = "HOME/tests/java/MullerTheory.java"
line = 36
begin = 18
end = 30

[JC_17]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_18]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_19]
file = "HOME/tests/java/MullerTheory.jc"
line = 85
begin = 11
end = 113

[JC_70]
file = "HOME/tests/java/MullerTheory.java"
line = 22
begin = 8
end = 14

[JC_71]
file = "HOME/tests/java/MullerTheory.java"
line = 22
begin = 13
end = 26

[JC_72]
file = "HOME/tests/java/MullerTheory.java"
line = 23
begin = 8
end = 18

[JC_20]
file = "HOME/tests/java/MullerTheory.jc"
line = 84
begin = 10
end = 18

[JC_73]
file = "HOME/tests/java/MullerTheory.java"
line = 23
begin = 13
end = 23

[JC_21]
file = "HOME/tests/java/MullerTheory.jc"
line = 85
begin = 11
end = 113

[JC_74]
file = "HOME/tests/java/MullerTheory.java"
line = 24
begin = 8
end = 36

[JC_22]
file = "HOME/tests/java/MullerTheory.jc"
line = 84
begin = 10
end = 18

[JC_75]
file = "HOME/tests/java/MullerTheory.java"
line = 22
begin = 8
end = 95

[JC_23]
file = "HOME/tests/java/MullerTheory.jc"
line = 89
begin = 8
end = 23

[JC_76]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_24]
file = "HOME/"
line = 0
begin = -1
end = -1

[num_of_pos_empty]
name = "num_of_pos_empty"
behavior = "axiom"
file = "HOME/tests/java/MullerTheory.jc"
line = 28
begin = 2
end = 174

[JC_77]
file = "HOME/tests/java/MullerTheory.jc"
line = 109
begin = 15
end = 1093

[JC_25]
file = "HOME/tests/java/MullerTheory.jc"
line = 89
begin = 8
end = 23

[MullerTheory_m_ensures_default]
name = "Method m"
behavior = "Default behavior"
file = "HOME/tests/java/MullerTheory.java"
line = 18
begin = 24
end = 25

[JC_78]
file = "HOME/tests/java/MullerTheory.jc"
line = 109
begin = 15
end = 1093

[JC_26]
file = "HOME/"
line = 0
begin = -1
end = -1

[cons_MullerTheory_safety]
name = "Constructor of class MullerTheory"
behavior = "Safety"
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_79]
kind = UserCall
file = "HOME/tests/java/MullerTheory.java"
line = 27
begin = 20
end = 28

[JC_27]
file = "HOME/"
line = 0
begin = -1
end = -1

[num_of_pos_true_case]
name = "num_of_pos_true_case"
behavior = "axiom"
file = "HOME/tests/java/MullerTheory.jc"
line = 19
begin = 2
end = 303

[JC_28]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_29]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_80]
kind = AllocSize
file = "HOME/tests/java/MullerTheory.java"
line = 29
begin = 11
end = 25

[JC_81]
kind = AllocSize
file = "HOME/tests/java/MullerTheory.java"
line = 29
begin = 11
end = 25

[JC_82]
file = "HOME/tests/java/MullerTheory.java"
line = 33
begin = 8
end = 14

[JC_30]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_83]
file = "HOME/tests/java/MullerTheory.java"
line = 33
begin = 13
end = 26

[JC_31]
file = "HOME/tests/java/MullerTheory.jc"
line = 91
begin = 11
end = 65

[JC_84]
file = "HOME/tests/java/MullerTheory.java"
line = 34
begin = 8
end = 18

[JC_32]
file = "HOME/tests/java/MullerTheory.jc"
line = 91
begin = 11
end = 65

[num_of_pos_strictly_increasing]
name = "num_of_pos_strictly_increasing"
behavior = "lemma"
file = "HOME/tests/java/MullerTheory.jc"
line = 36
begin = 0
end = 320

[JC_85]
file = "HOME/tests/java/MullerTheory.java"
line = 34
begin = 13
end = 23

[JC_33]
file = "HOME/tests/java/MullerTheory.java"
line = 16
begin = 17
end = 24

[JC_86]
file = "HOME/tests/java/MullerTheory.java"
line = 35
begin = 8
end = 36

[JC_34]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_87]
file = "HOME/tests/java/MullerTheory.java"
line = 33
begin = 8
end = 95

[JC_35]
file = "HOME/tests/java/MullerTheory.java"
line = 16
begin = 17
end = 24

[JC_88]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_36]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_89]
file = "HOME/tests/java/MullerTheory.jc"
line = 139
begin = 21
end = 1746

[JC_37]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_38]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_39]
file = "HOME/"
line = 0
begin = -1
end = -1

[num_of_pos_false_case]
name = "num_of_pos_false_case"
behavior = "axiom"
file = "HOME/tests/java/MullerTheory.jc"
line = 10
begin = 2
end = 304

========== file tests/java/why/MullerTheory.why ==========
type Object

type interface

exception Exception_exc of Object pointer

logic Exception_tag:  -> Object tag_id

logic Object_tag:  -> Object tag_id

axiom Exception_parenttag_Object : parenttag(Exception_tag, Object_tag)

exception Loop_continue_exc of unit

exception Loop_exit_exc of unit

logic MullerTheory_tag:  -> Object tag_id

axiom MullerTheory_parenttag_Object : parenttag(MullerTheory_tag, Object_tag)

predicate Non_null_Object(x_0:Object pointer,
 Object_x_3_alloc_table:Object alloc_table) =
 eq_int(offset_max(Object_x_3_alloc_table, x_0), (0))

predicate Non_null_intM(x:Object pointer,
 Object_x_2_alloc_table:Object alloc_table) =
 ge_int(offset_max(Object_x_2_alloc_table, x), neg_int((1)))

axiom Object_int : (int_of_tag(Object_tag) = (1))

logic Object_of_bitvector: bitvector -> Object pointer

logic bitvector_of_Object: Object pointer -> bitvector

axiom Object_of_bitvector_of_bitvector_of_Object :
 (forall x:Object pointer. (Object_of_bitvector(bitvector_of_Object(x)) = x))

logic Object_of_pointer_address: unit pointer -> Object pointer

axiom Object_of_pointer_address_of_pointer_addr :
 (forall p:Object pointer.
  (p = Object_of_pointer_address(pointer_address(p))))

axiom Object_parenttag_bottom : parenttag(Object_tag, bottom_tag)

axiom Object_tags :
 (forall x:Object pointer.
  (forall Object_tag_table:Object tag_table.
   instanceof(Object_tag_table, x, Object_tag)))

exception Return_label_exc of unit

logic String_tag:  -> Object tag_id

axiom String_parenttag_Object : parenttag(String_tag, Object_tag)

exception Throwable_exc of Object pointer

logic Throwable_tag:  -> Object tag_id

axiom Throwable_parenttag_Object : parenttag(Throwable_tag, Object_tag)

axiom bitvector_of_Object_of_Object_of_bitvector :
 (forall x:bitvector. (bitvector_of_Object(Object_of_bitvector(x)) = x))

logic bitvector_of_interface: interface pointer -> bitvector

logic interface_of_bitvector: bitvector -> interface pointer

axiom bitvector_of_interface_of_interface_of_bitvector :
 (forall x:bitvector.
  (bitvector_of_interface(interface_of_bitvector(x)) = x))

logic intM_tag:  -> Object tag_id

axiom intM_parenttag_Object : parenttag(intM_tag, Object_tag)

logic interface_tag:  -> interface tag_id

axiom interface_int : (int_of_tag(interface_tag) = (1))

axiom interface_of_bitvector_of_bitvector_of_interface :
 (forall x:interface pointer.
  (interface_of_bitvector(bitvector_of_interface(x)) = x))

logic interface_of_pointer_address: unit pointer -> interface pointer

axiom interface_of_pointer_address_of_pointer_addr :
 (forall p:interface pointer.
  (p = interface_of_pointer_address(pointer_address(p))))

axiom interface_parenttag_bottom : parenttag(interface_tag, bottom_tag)

axiom interface_tags :
 (forall x:interface pointer.
  (forall interface_tag_table:interface tag_table.
   instanceof(interface_tag_table, x, interface_tag)))

predicate left_valid_struct_Object(p:Object pointer,
 a:int,
 Object_alloc_table:Object alloc_table) =
 (offset_min(Object_alloc_table, p) <= a)

predicate left_valid_struct_Exception(p:Object pointer,
 a:int,
 Object_alloc_table:Object alloc_table) =
 left_valid_struct_Object(p, a, Object_alloc_table)

predicate left_valid_struct_MullerTheory(p:Object pointer,
 a:int,
 Object_alloc_table:Object alloc_table) =
 left_valid_struct_Object(p, a, Object_alloc_table)

predicate left_valid_struct_String(p:Object pointer,
 a:int,
 Object_alloc_table:Object alloc_table) =
 left_valid_struct_Object(p, a, Object_alloc_table)

predicate left_valid_struct_Throwable(p:Object pointer,
 a:int,
 Object_alloc_table:Object alloc_table) =
 left_valid_struct_Object(p, a, Object_alloc_table)

predicate left_valid_struct_intM(p:Object pointer,
 a:int,
 Object_alloc_table:Object alloc_table) =
 left_valid_struct_Object(p, a, Object_alloc_table)

predicate left_valid_struct_interface(p:interface pointer,
 a:int,
 interface_alloc_table:interface alloc_table) =
 (offset_min(interface_alloc_table, p) <= a)

logic num_of_pos: int, int, Object pointer, (Object, int) memory -> int

axiom num_of_pos_empty :
 (forall intM_intP_t_1_at_L:(Object, int) memory.
  (forall i_0:int.
   (forall j_0:int.
    (forall t_0:Object pointer.
     (gt_int(i_0, j_0) ->
      eq_int(num_of_pos(i_0, j_0, t_0, intM_intP_t_1_at_L), (0)))))))

axiom num_of_pos_false_case :
 (forall intM_intP_t_1_at_L:(Object, int) memory.
  (forall i_2:int.
   (forall j_2:int.
    (forall k_0:int.
     (forall t_2:Object pointer.
      ((le_int(i_2, j_2)
       and (not gt_int(select(intM_intP_t_1_at_L, shift(t_2, j_2)), (0)))) ->
       eq_int(num_of_pos(i_2, j_2, t_2, intM_intP_t_1_at_L),
       num_of_pos(i_2, sub_int(j_2, (1)), t_2, intM_intP_t_1_at_L))))))))

goal num_of_pos_strictly_increasing :
 (forall intM_intP_t_3_14_at_L:(Object, int) memory.
  (forall i_3:int.
   (forall j_3:int.
    (forall k_1:int.
     (forall l:int.
      (forall t_3:Object pointer.
       ((lt_int(j_3, k_1)
        and (le_int(k_1, l)
            and gt_int(select(intM_intP_t_3_14_at_L, shift(t_3, k_1)), (0)))) ->
        lt_int(num_of_pos(i_3, j_3, t_3, intM_intP_t_3_14_at_L),
        num_of_pos(i_3, l, t_3, intM_intP_t_3_14_at_L)))))))))

axiom num_of_pos_strictly_increasing_as_axiom :
 (forall intM_intP_t_3_14_at_L:(Object, int) memory.
  (forall i_3:int.
   (forall j_3:int.
    (forall k_1:int.
     (forall l:int.
      (forall t_3:Object pointer.
       ((lt_int(j_3, k_1)
        and (le_int(k_1, l)
            and gt_int(select(intM_intP_t_3_14_at_L, shift(t_3, k_1)), (0)))) ->
        lt_int(num_of_pos(i_3, j_3, t_3, intM_intP_t_3_14_at_L),
        num_of_pos(i_3, l, t_3, intM_intP_t_3_14_at_L)))))))))

axiom num_of_pos_true_case :
 (forall intM_intP_t_1_at_L:(Object, int) memory.
  (forall i_1:int.
   (forall j_1:int.
    (forall k:int.
     (forall t_1:Object pointer.
      ((le_int(i_1, j_1)
       and gt_int(select(intM_intP_t_1_at_L, shift(t_1, j_1)), (0))) ->
       eq_int(num_of_pos(i_1, j_1, t_1, intM_intP_t_1_at_L),
       add_int(num_of_pos(i_1, sub_int(j_1, (1)), t_1, intM_intP_t_1_at_L),
       (1)))))))))

axiom pointer_addr_of_Object_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(Object_of_pointer_address(p))))

axiom pointer_addr_of_interface_of_pointer_address :
 (forall p:unit pointer.
  (p = pointer_address(interface_of_pointer_address(p))))

predicate right_valid_struct_Object(p:Object pointer,
 b:int,
 Object_alloc_table:Object alloc_table) =
 (offset_max(Object_alloc_table, p) >= b)

predicate right_valid_struct_Exception(p:Object pointer,
 b:int,
 Object_alloc_table:Object alloc_table) =
 right_valid_struct_Object(p, b, Object_alloc_table)

predicate right_valid_struct_MullerTheory(p:Object pointer,
 b:int,
 Object_alloc_table:Object alloc_table) =
 right_valid_struct_Object(p, b, Object_alloc_table)

predicate right_valid_struct_String(p:Object pointer,
 b:int,
 Object_alloc_table:Object alloc_table) =
 right_valid_struct_Object(p, b, Object_alloc_table)

predicate right_valid_struct_Throwable(p:Object pointer,
 b:int,
 Object_alloc_table:Object alloc_table) =
 right_valid_struct_Object(p, b, Object_alloc_table)

predicate right_valid_struct_intM(p:Object pointer,
 b:int,
 Object_alloc_table:Object alloc_table) =
 right_valid_struct_Object(p, b, Object_alloc_table)

predicate right_valid_struct_interface(p:interface pointer,
 b:int,
 interface_alloc_table:interface alloc_table) =
 (offset_max(interface_alloc_table, p) >= b)

predicate strict_valid_root_Object(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 ((offset_min(Object_alloc_table, p) = a)
 and (offset_max(Object_alloc_table, p) = b))

predicate strict_valid_root_interface(p:interface pointer,
 a:int,
 b:int,
 interface_alloc_table:interface alloc_table) =
 ((offset_min(interface_alloc_table, p) = a)
 and (offset_max(interface_alloc_table, p) = b))

predicate strict_valid_struct_Object(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 ((offset_min(Object_alloc_table, p) = a)
 and (offset_max(Object_alloc_table, p) = b))

predicate strict_valid_struct_Exception(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 strict_valid_struct_Object(p, a, b, Object_alloc_table)

predicate strict_valid_struct_MullerTheory(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 strict_valid_struct_Object(p, a, b, Object_alloc_table)

predicate strict_valid_struct_String(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 strict_valid_struct_Object(p, a, b, Object_alloc_table)

predicate strict_valid_struct_Throwable(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 strict_valid_struct_Object(p, a, b, Object_alloc_table)

predicate strict_valid_struct_intM(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 strict_valid_struct_Object(p, a, b, Object_alloc_table)

predicate strict_valid_struct_interface(p:interface pointer,
 a:int,
 b:int,
 interface_alloc_table:interface alloc_table) =
 ((offset_min(interface_alloc_table, p) = a)
 and (offset_max(interface_alloc_table, p) = b))

predicate valid_bitvector_struct_Object(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_Exception(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 valid_bitvector_struct_Object(p, a, b, bitvector_alloc_table)

predicate valid_bitvector_struct_MullerTheory(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 valid_bitvector_struct_Object(p, a, b, bitvector_alloc_table)

predicate valid_bitvector_struct_String(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 valid_bitvector_struct_Object(p, a, b, bitvector_alloc_table)

predicate valid_bitvector_struct_Throwable(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 valid_bitvector_struct_Object(p, a, b, bitvector_alloc_table)

predicate valid_bitvector_struct_intM(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 valid_bitvector_struct_Object(p, a, b, bitvector_alloc_table)

predicate valid_bitvector_struct_interface(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_root_Object(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 ((offset_min(Object_alloc_table, p) <= a)
 and (offset_max(Object_alloc_table, p) >= b))

predicate valid_root_interface(p:interface pointer,
 a:int,
 b:int,
 interface_alloc_table:interface alloc_table) =
 ((offset_min(interface_alloc_table, p) <= a)
 and (offset_max(interface_alloc_table, p) >= b))

predicate valid_struct_Object(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 ((offset_min(Object_alloc_table, p) <= a)
 and (offset_max(Object_alloc_table, p) >= b))

predicate valid_struct_Exception(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 valid_struct_Object(p, a, b, Object_alloc_table)

predicate valid_struct_MullerTheory(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 valid_struct_Object(p, a, b, Object_alloc_table)

predicate valid_struct_String(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 valid_struct_Object(p, a, b, Object_alloc_table)

predicate valid_struct_Throwable(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 valid_struct_Object(p, a, b, Object_alloc_table)

predicate valid_struct_intM(p:Object pointer,
 a:int,
 b:int,
 Object_alloc_table:Object alloc_table) =
 valid_struct_Object(p, a, b, Object_alloc_table)

predicate valid_struct_interface(p:interface pointer,
 a:int,
 b:int,
 interface_alloc_table:interface alloc_table) =
 ((offset_min(interface_alloc_table, p) <= a)
 and (offset_max(interface_alloc_table, p) >= b))

parameter MullerTheory_m :
 t_4:Object pointer ->
  Object_MullerTheory_m_9_alloc_table:Object alloc_table ref ->
   Object_MullerTheory_m_9_tag_table:Object tag_table ref ->
    intM_intP_MullerTheory_m_9:(Object, int) memory ref ->
     Object_t_4_7_alloc_table:Object alloc_table ->
      intM_intP_t_4_7:(Object, int) memory ->
       { } Object pointer reads Object_MullerTheory_m_9_alloc_table
       writes Object_MullerTheory_m_9_alloc_table,Object_MullerTheory_m_9_tag_table,intM_intP_MullerTheory_m_9
       { true }

parameter MullerTheory_m_requires :
 t_4:Object pointer ->
  Object_MullerTheory_m_9_alloc_table:Object alloc_table ref ->
   Object_MullerTheory_m_9_tag_table:Object tag_table ref ->
    intM_intP_MullerTheory_m_9:(Object, int) memory ref ->
     Object_t_4_7_alloc_table:Object alloc_table ->
      intM_intP_t_4_7:(Object, int) memory ->
       { (JC_33: Non_null_intM(t_4, Object_t_4_7_alloc_table))}
       Object pointer reads Object_MullerTheory_m_9_alloc_table
       writes Object_MullerTheory_m_9_alloc_table,Object_MullerTheory_m_9_tag_table,intM_intP_MullerTheory_m_9
       { true }

parameter Object_alloc_table : Object alloc_table ref

parameter Object_tag_table : Object tag_table ref

parameter alloc_bitvector_struct_Exception :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_Exception(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_Exception_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_Exception(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_MullerTheory :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_MullerTheory(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_MullerTheory_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_MullerTheory(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_Object :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_Object(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_Object_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_Object(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_String :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_String(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_String_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_String(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_Throwable :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_Throwable(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_Throwable_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_Throwable(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_intM :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_intM(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_intM_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_intM(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_interface :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_interface(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_interface_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_interface(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_struct_Exception :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { } Object pointer writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_Exception(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, Exception_tag)))) }

parameter alloc_struct_Exception_requires :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { ge_int(n, (0))} Object pointer
    writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_Exception(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, Exception_tag)))) }

parameter alloc_struct_MullerTheory :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { } Object pointer writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_MullerTheory(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, MullerTheory_tag)))) }

parameter alloc_struct_MullerTheory_requires :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { ge_int(n, (0))} Object pointer
    writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_MullerTheory(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, MullerTheory_tag)))) }

parameter alloc_struct_Object :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { } Object pointer writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_Object(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, Object_tag)))) }

parameter alloc_struct_Object_requires :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { ge_int(n, (0))} Object pointer
    writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_Object(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, Object_tag)))) }

parameter alloc_struct_String :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { } Object pointer writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_String(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, String_tag)))) }

parameter alloc_struct_String_requires :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { ge_int(n, (0))} Object pointer
    writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_String(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, String_tag)))) }

parameter alloc_struct_Throwable :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { } Object pointer writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_Throwable(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, Throwable_tag)))) }

parameter alloc_struct_Throwable_requires :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { ge_int(n, (0))} Object pointer
    writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_Throwable(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, Throwable_tag)))) }

parameter alloc_struct_intM :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { } Object pointer writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_intM(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, intM_tag)))) }

parameter alloc_struct_intM_requires :
 n:int ->
  Object_alloc_table:Object alloc_table ref ->
   Object_tag_table:Object tag_table ref ->
    { ge_int(n, (0))} Object pointer
    writes Object_alloc_table,Object_tag_table
    { (strict_valid_struct_intM(result, (0), sub_int(n, (1)),
       Object_alloc_table)
      and (alloc_extends(Object_alloc_table@, Object_alloc_table)
          and (alloc_fresh(Object_alloc_table@, result, n)
              and instanceof(Object_tag_table, result, intM_tag)))) }

parameter interface_alloc_table : interface alloc_table ref

parameter interface_tag_table : interface tag_table ref

parameter alloc_struct_interface :
 n:int ->
  interface_alloc_table:interface alloc_table ref ->
   interface_tag_table:interface tag_table ref ->
    { } interface pointer writes interface_alloc_table,interface_tag_table
    { (strict_valid_struct_interface(result, (0), sub_int(n, (1)),
       interface_alloc_table)
      and (alloc_extends(interface_alloc_table@, interface_alloc_table)
          and (alloc_fresh(interface_alloc_table@, result, n)
              and instanceof(interface_tag_table, result, interface_tag)))) }

parameter alloc_struct_interface_requires :
 n:int ->
  interface_alloc_table:interface alloc_table ref ->
   interface_tag_table:interface tag_table ref ->
    { ge_int(n, (0))} interface pointer
    writes interface_alloc_table,interface_tag_table
    { (strict_valid_struct_interface(result, (0), sub_int(n, (1)),
       interface_alloc_table)
      and (alloc_extends(interface_alloc_table@, interface_alloc_table)
          and (alloc_fresh(interface_alloc_table@, result, n)
              and instanceof(interface_tag_table, result, interface_tag)))) }

parameter cons_MullerTheory :
 this_0:Object pointer ->
  Object_this_0_10_alloc_table:Object alloc_table -> { } unit { true }

parameter cons_MullerTheory_requires :
 this_0:Object pointer ->
  Object_this_0_10_alloc_table:Object alloc_table -> { } unit { true }

parameter java_array_length_intM :
 x_2:Object pointer ->
  Object_x_5_alloc_table:Object alloc_table ->
   { } int
   { (JC_21:
     (le_int(result, (2147483647))
     and (ge_int(result, (0))
         and (eq_int(result,
              add_int(offset_max(Object_x_5_alloc_table, x_2), (1)))
             and (true = true))))) }

parameter java_array_length_intM_requires :
 x_2:Object pointer ->
  Object_x_5_alloc_table:Object alloc_table ->
   { } int
   { (JC_21:
     (le_int(result, (2147483647))
     and (ge_int(result, (0))
         and (eq_int(result,
              add_int(offset_max(Object_x_5_alloc_table, x_2), (1)))
             and (true = true))))) }

parameter non_null_Object :
 x_3:Object pointer ->
  Object_x_6_alloc_table:Object alloc_table ->
   { } bool
   { (JC_32:
     (if result
      then eq_int(offset_max(Object_x_6_alloc_table, x_3), (0))
      else (x_3 = null))) }

parameter non_null_Object_requires :
 x_3:Object pointer ->
  Object_x_6_alloc_table:Object alloc_table ->
   { } bool
   { (JC_32:
     (if result
      then eq_int(offset_max(Object_x_6_alloc_table, x_3), (0))
      else (x_3 = null))) }

parameter non_null_intM :
 x_1:Object pointer ->
  Object_x_4_alloc_table:Object alloc_table ->
   { } bool
   { (JC_10:
     (if result
      then ge_int(offset_max(Object_x_4_alloc_table, x_1), neg_int((1)))
      else (x_1 = null))) }

parameter non_null_intM_requires :
 x_1:Object pointer ->
  Object_x_4_alloc_table:Object alloc_table ->
   { } bool
   { (JC_10:
     (if result
      then ge_int(offset_max(Object_x_4_alloc_table, x_1), neg_int((1)))
      else (x_1 = null))) }

let MullerTheory_m_ensures_default =
 fun (t_4 : Object pointer) (Object_MullerTheory_m_9_alloc_table : Object alloc_table ref) (Object_MullerTheory_m_9_tag_table : Object tag_table ref) (intM_intP_MullerTheory_m_9 : (Object, int) memory ref) (Object_t_4_7_alloc_table : Object alloc_table) (intM_intP_t_4_7 : (Object, int) memory) ->
  { (left_valid_struct_intM(t_4, (0), Object_t_4_7_alloc_table)
    and (JC_35: Non_null_intM(t_4, Object_t_4_7_alloc_table))) }
  (init:
  (let return = ref (any_pointer void) in
  try
   begin
     (let count = ref (K_38: (0)) in
     begin
       (let i_4 = ref (K_1: (0)) in
       try
        (loop_3:
        while true do
        { invariant
            (JC_75:
            ((JC_70: le_int((0), i_4))
            and ((JC_71:
                 le_int(i_4,
                 add_int(offset_max(Object_t_4_7_alloc_table, t_4), (1))))
                and ((JC_72: le_int((0), count))
                    and ((JC_73: le_int(count, i_4))
                        and (JC_74:
                            eq_int(count,
                            num_of_pos((0), sub_int(i_4, (1)), t_4,
                            intM_intP_t_4_7))))))))
           }
         begin
           [ { } unit { true } ];
          try
           (let jessie_34 = begin
                              (if (K_17:
                                  ((lt_int_ !i_4) (K_16:
                                                  (JC_79:
                                                  ((java_array_length_intM t_4) Object_t_4_7_alloc_table)))))
                              then
                               (if (K_14:
                                   ((gt_int_ (K_13:
                                             ((safe_acc_ intM_intP_t_4_7) 
                                              ((shift t_4) !i_4)))) (0)))
                               then
                                (K_12:
                                (let jessie_32 = (let jessie_2 = !count in
                                                 begin
                                                   (let jessie_31 = (count := 
                                                                    ((add_int jessie_2) (1))) in
                                                   void);
                                                  jessie_2
                                                 end) in
                                void))
                               else void)
                              else
                               (let jessie_33 = (raise (Loop_exit_exc void)) in
                               void));
                             (raise (Loop_continue_exc void))
                            end in
           void)
           with
           Loop_continue_exc jessie_4 ->
           (let jessie_36 = (K_15:
                            (let jessie_1 = !i_4 in
                            begin
                              (let jessie_35 = (i_4 := ((add_int jessie_1) (1))) in
                              void);
                             jessie_1
                            end)) in
           void) end
         end
        done)
        with
        Loop_exit_exc jessie_3 ->
        void end);
      (let u = (K_37:
               (JC_81:
               (((alloc_struct_intM !count) Object_MullerTheory_m_9_alloc_table) Object_MullerTheory_m_9_tag_table))) in
      begin
        (let jessie_38 = (count := (0)) in void);
       (let i_5 = ref (K_18: (0)) in
       try
        (loop_4:
        while true do
        { invariant
            (JC_87:
            ((JC_82: le_int((0), i_5))
            and ((JC_83:
                 le_int(i_5,
                 add_int(offset_max(Object_t_4_7_alloc_table, t_4), (1))))
                and ((JC_84: le_int((0), count))
                    and ((JC_85: le_int(count, i_5))
                        and (JC_86:
                            eq_int(count,
                            num_of_pos((0), sub_int(i_5, (1)), t_4,
                            intM_intP_t_4_7))))))))
           }
         begin
           [ { } unit { true } ];
          try
           (let jessie_47 = begin
                              (if (K_36:
                                  ((lt_int_ !i_5) (K_35:
                                                  (JC_91:
                                                  ((java_array_length_intM t_4) Object_t_4_7_alloc_table)))))
                              then
                               (if (K_33:
                                   ((gt_int_ (K_32:
                                             ((safe_acc_ intM_intP_t_4_7) 
                                              ((shift t_4) !i_5)))) (0)))
                               then
                                (K_31:
                                (let jessie_45 = (let jessie_40 = (K_30:
                                                                  ((safe_acc_ intM_intP_t_4_7) 
                                                                   ((shift t_4) !i_5))) in
                                                 (let jessie_43 = ((shift u) 
                                                                   (K_29:
                                                                   (let jessie_6 = !count in
                                                                   begin
                                                                     
                                                                    (let jessie_44 = 
                                                                    (count := 
                                                                    ((add_int jessie_6) (1))) in
                                                                    void);
                                                                    jessie_6
                                                                   end))) in
                                                 (((safe_upd_ intM_intP_MullerTheory_m_9) jessie_43) jessie_40))) in
                                void))
                               else void)
                              else
                               (let jessie_46 = (raise (Loop_exit_exc void)) in
                               void));
                             (raise (Loop_continue_exc void))
                            end in
           void)
           with
           Loop_continue_exc jessie_8 ->
           (let jessie_49 = (K_34:
                            (let jessie_5 = !i_5 in
                            begin
                              (let jessie_48 = (i_5 := ((add_int jessie_5) (1))) in
                              void);
                             jessie_5
                            end)) in
           void) end
         end
        done)
        with
        Loop_exit_exc jessie_7 ->
        void end);
       (return := u);
       (raise Return)
      end)
     end);
    absurd 
   end
   with
   Return ->
   !return end))
  { (JC_37: true) }

let MullerTheory_m_safety =
 fun (t_4 : Object pointer) (Object_MullerTheory_m_9_alloc_table : Object alloc_table ref) (Object_MullerTheory_m_9_tag_table : Object tag_table ref) (intM_intP_MullerTheory_m_9 : (Object, int) memory ref) (Object_t_4_7_alloc_table : Object alloc_table) (intM_intP_t_4_7 : (Object, int) memory) ->
  { (left_valid_struct_intM(t_4, (0), Object_t_4_7_alloc_table)
    and (JC_35: Non_null_intM(t_4, Object_t_4_7_alloc_table))) }
  (init:
  (let return = ref (any_pointer void) in
  try
   begin
     (let count = ref (K_38: (0)) in
     begin
       (let i_4 = ref (K_1: (0)) in
       try
        (loop_1:
        while true do
        { invariant (JC_48: true)
          variant (JC_52 : sub_int(add_int(offset_max(Object_t_4_7_alloc_table,
                                           t_4),
                                   (1)),
                           i_4)) }
         begin
           [ { } unit reads count,i_4
             { (JC_46:
               ((JC_41: le_int((0), i_4))
               and ((JC_42:
                    le_int(i_4,
                    add_int(offset_max(Object_t_4_7_alloc_table, t_4), (1))))
                   and ((JC_43: le_int((0), count))
                       and ((JC_44: le_int(count, i_4))
                           and (JC_45:
                               eq_int(count,
                               num_of_pos((0), sub_int(i_4, (1)), t_4,
                               intM_intP_t_4_7)))))))) } ];
          try
           (let jessie_13 = begin
                              (if (K_17:
                                  ((lt_int_ !i_4) (K_16:
                                                  (JC_50:
                                                  ((java_array_length_intM_requires t_4) Object_t_4_7_alloc_table)))))
                              then
                               (if (K_14:
                                   ((gt_int_ (K_13:
                                             (JC_51:
                                             ((((offset_acc_ Object_t_4_7_alloc_table) intM_intP_t_4_7) t_4) !i_4)))) (0)))
                               then
                                (K_12:
                                (let jessie_11 = (let jessie_2 = !count in
                                                 begin
                                                   (let jessie_10 = (count := 
                                                                    ((add_int jessie_2) (1))) in
                                                   void);
                                                  jessie_2
                                                 end) in
                                void))
                               else void)
                              else
                               (let jessie_12 = (raise (Loop_exit_exc void)) in
                               void));
                             (raise (Loop_continue_exc void))
                            end in
           void)
           with
           Loop_continue_exc jessie_4 ->
           (let jessie_15 = (K_15:
                            (let jessie_1 = !i_4 in
                            begin
                              (let jessie_14 = (i_4 := ((add_int jessie_1) (1))) in
                              void);
                             jessie_1
                            end)) in
           void) end
         end
        done)
        with
        Loop_exit_exc jessie_3 ->
        void end);
      (let u = (K_37:
               (JC_54:
               (((alloc_struct_intM_requires !count) Object_MullerTheory_m_9_alloc_table) Object_MullerTheory_m_9_tag_table))) in
      begin
        (let jessie_17 = (count := (0)) in void);
       (let i_5 = ref (K_18: (0)) in
       try
        (loop_2:
        while true do
        { invariant (JC_62: true)
          variant (JC_69 : sub_int(add_int(offset_max(Object_t_4_7_alloc_table,
                                           t_4),
                                   (1)),
                           i_5)) }
         begin
           [ { } unit reads count,i_5
             { (JC_60:
               ((JC_55: le_int((0), i_5))
               and ((JC_56:
                    le_int(i_5,
                    add_int(offset_max(Object_t_4_7_alloc_table, t_4), (1))))
                   and ((JC_57: le_int((0), count))
                       and ((JC_58: le_int(count, i_5))
                           and (JC_59:
                               eq_int(count,
                               num_of_pos((0), sub_int(i_5, (1)), t_4,
                               intM_intP_t_4_7)))))))) } ];
          try
           (let jessie_26 = begin
                              (if (K_36:
                                  ((lt_int_ !i_5) (K_35:
                                                  (JC_64:
                                                  ((java_array_length_intM_requires t_4) Object_t_4_7_alloc_table)))))
                              then
                               (if (K_33:
                                   ((gt_int_ (K_32:
                                             (JC_65:
                                             ((((offset_acc_ Object_t_4_7_alloc_table) intM_intP_t_4_7) t_4) !i_5)))) (0)))
                               then
                                (K_31:
                                (let jessie_24 = (let jessie_19 = (K_30:
                                                                  (JC_67:
                                                                  ((((offset_acc_ Object_t_4_7_alloc_table) intM_intP_t_4_7) t_4) !i_5))) in
                                                 (let jessie_20 = u in
                                                 (let jessie_21 = (K_29:
                                                                  (let jessie_6 = !count in
                                                                  begin
                                                                    (let jessie_23 = 
                                                                    (count := 
                                                                    ((add_int jessie_6) (1))) in
                                                                    void);
                                                                   jessie_6
                                                                  end)) in
                                                 (let jessie_22 = ((shift jessie_20) jessie_21) in
                                                 (JC_68:
                                                 (((((offset_upd_ !Object_MullerTheory_m_9_alloc_table) intM_intP_MullerTheory_m_9) jessie_20) jessie_21) jessie_19)))))) in
                                void))
                               else void)
                              else
                               (let jessie_25 = (raise (Loop_exit_exc void)) in
                               void));
                             (raise (Loop_continue_exc void))
                            end in
           void)
           with
           Loop_continue_exc jessie_8 ->
           (let jessie_28 = (K_34:
                            (let jessie_5 = !i_5 in
                            begin
                              (let jessie_27 = (i_5 := ((add_int jessie_5) (1))) in
                              void);
                             jessie_5
                            end)) in
           void) end
         end
        done)
        with
        Loop_exit_exc jessie_7 ->
        void end);
       (return := u);
       (raise Return)
      end)
     end);
    absurd 
   end
   with
   Return ->
   !return end))
  { true }

let cons_MullerTheory_ensures_default =
 fun (this_0 : Object pointer) (Object_this_0_10_alloc_table : Object alloc_table) ->
  { valid_struct_MullerTheory(this_0, (0), (0), Object_this_0_10_alloc_table) }
  (init: try begin   void; (raise Return) end with Return -> void end)
  { (JC_96: true) }

let cons_MullerTheory_safety =
 fun (this_0 : Object pointer) (Object_this_0_10_alloc_table : Object alloc_table) ->
  { valid_struct_MullerTheory(this_0, (0), (0), Object_this_0_10_alloc_table) }
  (init: try begin   void; (raise Return) end with Return -> void end)
  { true }


========== make project execution ==========
why --project [...] why/MullerTheory.why
========== file tests/java/why/MullerTheory.wpr ==========
<project name="MullerTheory" context="why/MullerTheory_ctx.why">
  <lemma name="num_of_pos_strictly_increasing">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <goal why_file="why/MullerTheory_po1.why">
      <location file = "HOME/tests/java/MullerTheory.jc" line = "36" begin = "0" end = "320"/>
      <explain kind = "Lemma"/>
    </goal>
  </lemma>
  <function name="num_of_pos_strictly_increasing">
    <location file = "HOME/tests/java/MullerTheory.jc" line = "36" begin = "0" end = "320"/>
  </function>
  <function name="Method m">
    <location file = "" line = "0" begin = "0" end = "0"/>
    <behavior name="Safety">
    <goal why_file="why/MullerTheory_po32.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "27" begin = "39" end = "43"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/MullerTheory_po33.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "27" begin = "39" end = "43"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/MullerTheory_po34.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "25" begin = "18" end = "30"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/MullerTheory_po35.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "25" begin = "18" end = "30"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/MullerTheory_po36.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "25" begin = "18" end = "30"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/MullerTheory_po37.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "25" begin = "18" end = "30"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/MullerTheory_po38.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "29" begin = "11" end = "25"/>
      <explain kind = "Pre"
text = "AllocSize"/>
    </goal>
    <goal why_file="why/MullerTheory_po39.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "39" begin = "9" end = "13"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/MullerTheory_po40.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "39" begin = "9" end = "13"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/MullerTheory_po41.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "39" begin = "19" end = "36"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/MullerTheory_po42.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "39" begin = "19" end = "36"/>
      <explain kind = "Pre"
text = "PointerDeref"/>
    </goal>
    <goal why_file="why/MullerTheory_po43.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "36" begin = "18" end = "30"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/MullerTheory_po44.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "36" begin = "18" end = "30"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/MullerTheory_po45.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "36" begin = "18" end = "30"/>
      <explain kind = "VarDecr"/>
    </goal>
    <goal why_file="why/MullerTheory_po46.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "36" begin = "18" end = "30"/>
      <explain kind = "VarDecr"/>
    </goal>
    </behavior>
    <behavior name="Default behavior">
    <goal why_file="why/MullerTheory_po2.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "22" begin = "8" end = "14"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/MullerTheory_po3.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "22" begin = "13" end = "26"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/MullerTheory_po4.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "23" begin = "8" end = "18"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/MullerTheory_po5.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "23" begin = "13" end = "23"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/MullerTheory_po6.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "24" begin = "8" end = "36"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/MullerTheory_po7.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "22" begin = "8" end = "14"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po8.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "22" begin = "13" end = "26"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po9.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "23" begin = "8" end = "18"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po10.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "23" begin = "13" end = "23"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po11.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "24" begin = "8" end = "36"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po12.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "22" begin = "8" end = "14"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po13.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "22" begin = "13" end = "26"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po14.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "23" begin = "8" end = "18"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po15.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "23" begin = "13" end = "23"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po16.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "24" begin = "8" end = "36"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po17.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "33" begin = "8" end = "14"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/MullerTheory_po18.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "33" begin = "13" end = "26"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/MullerTheory_po19.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "34" begin = "8" end = "18"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/MullerTheory_po20.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "34" begin = "13" end = "23"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/MullerTheory_po21.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "35" begin = "8" end = "36"/>
      <explain kind = "LoopInvInit"/>
    </goal>
    <goal why_file="why/MullerTheory_po22.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "33" begin = "8" end = "14"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po23.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "33" begin = "13" end = "26"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po24.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "34" begin = "8" end = "18"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po25.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "34" begin = "13" end = "23"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po26.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "35" begin = "8" end = "36"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po27.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "33" begin = "8" end = "14"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po28.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "33" begin = "13" end = "26"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po29.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "34" begin = "8" end = "18"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po30.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "34" begin = "13" end = "23"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    <goal why_file="why/MullerTheory_po31.why">
      <location file = "HOME/tests/java/MullerTheory.java" line = "35" begin = "8" end = "36"/>
      <explain kind = "LoopInvPreserv"/>
    </goal>
    </behavior>
  </function>
  <function name="Constructor of class MullerTheory">
    <location file = "" line = "0" begin = "0" end = "0"/>
  </function>
</project>
========== file tests/java/why/MullerTheory_ctx.why ==========
logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic div_int : int, int -> int

logic mod_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

logic bool_and : bool, bool -> bool

logic bool_or : bool, bool -> bool

logic bool_xor : bool, bool -> bool

logic bool_not : bool -> bool

axiom bool_and_def:
  (forall a:bool.
    (forall b:bool.
      ((bool_and(a, b) = true) <-> ((a = true) and (b = true)))))

axiom bool_or_def:
  (forall a:bool.
    (forall b:bool. ((bool_or(a, b) = true) <-> ((a = true) or (b = true)))))

axiom bool_xor_def:
  (forall a:bool. (forall b:bool. ((bool_xor(a, b) = true) <-> (a <> b))))

axiom bool_not_def: (forall a:bool. ((bool_not(a) = true) <-> (a = false)))

logic ite : bool, 'a1, 'a1 -> 'a1

axiom ite_true: (forall x:'a1. (forall y:'a1. (ite(true, x, y) = x)))

axiom ite_false: (forall x:'a1. (forall y:'a1. (ite(false, x, y) = y)))

logic lt_int_bool : int, int -> bool

logic le_int_bool : int, int -> bool

logic gt_int_bool : int, int -> bool

logic ge_int_bool : int, int -> bool

logic eq_int_bool : int, int -> bool

logic neq_int_bool : int, int -> bool

axiom lt_int_bool_axiom:
  (forall x:int. (forall y:int. ((lt_int_bool(x, y) = true) <-> (x < y))))

axiom le_int_bool_axiom:
  (forall x:int. (forall y:int. ((le_int_bool(x, y) = true) <-> (x <= y))))

axiom gt_int_bool_axiom:
  (forall x:int. (forall y:int. ((gt_int_bool(x, y) = true) <-> (x > y))))

axiom ge_int_bool_axiom:
  (forall x:int. (forall y:int. ((ge_int_bool(x, y) = true) <-> (x >= y))))

axiom eq_int_bool_axiom:
  (forall x:int. (forall y:int. ((eq_int_bool(x, y) = true) <-> (x = y))))

axiom neq_int_bool_axiom:
  (forall x:int. (forall y:int. ((neq_int_bool(x, y) = true) <-> (x <> y))))

logic abs_int : int -> int

axiom abs_int_pos: (forall x:int. ((x >= 0) -> (abs_int(x) = x)))

axiom abs_int_neg: (forall x:int. ((x <= 0) -> (abs_int(x) = (-x))))

logic int_max : int, int -> int

logic int_min : int, int -> int

axiom int_max_is_ge:
  (forall x:int.
    (forall y:int. ((int_max(x, y) >= x) and (int_max(x, y) >= y))))

axiom int_max_is_some:
  (forall x:int.
    (forall y:int. ((int_max(x, y) = x) or (int_max(x, y) = y))))

axiom int_min_is_le:
  (forall x:int.
    (forall y:int. ((int_min(x, y) <= x) and (int_min(x, y) <= y))))

axiom int_min_is_some:
  (forall x:int.
    (forall y:int. ((int_min(x, y) = x) or (int_min(x, y) = y))))

logic lt_real : real, real -> prop

logic le_real : real, real -> prop

logic gt_real : real, real -> prop

logic ge_real : real, real -> prop

logic eq_real : real, real -> prop

logic neq_real : real, real -> prop

logic add_real : real, real -> real

logic sub_real : real, real -> real

logic mul_real : real, real -> real

logic div_real : real, real -> real

logic neg_real : real -> real

logic real_of_int : int -> real

logic int_of_real : real -> int

logic lt_real_bool : real, real -> bool

logic le_real_bool : real, real -> bool

logic gt_real_bool : real, real -> bool

logic ge_real_bool : real, real -> bool

logic eq_real_bool : real, real -> bool

logic neq_real_bool : real, real -> bool

axiom lt_real_bool_axiom:
  (forall x:real. (forall y:real. ((lt_real_bool(x, y) = true) <-> (x < y))))

axiom le_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((le_real_bool(x, y) = true) <-> (x <= y))))

axiom gt_real_bool_axiom:
  (forall x:real. (forall y:real. ((gt_real_bool(x, y) = true) <-> (x > y))))

axiom ge_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((ge_real_bool(x, y) = true) <-> (x >= y))))

axiom eq_real_bool_axiom:
  (forall x:real. (forall y:real. ((eq_real_bool(x, y) = true) <-> (x = y))))

axiom neq_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((neq_real_bool(x, y) = true) <-> (x <> y))))

logic real_max : real, real -> real

logic real_min : real, real -> real

axiom real_max_is_ge:
  (forall x:real.
    (forall y:real. ((real_max(x, y) >= x) and (real_max(x, y) >= y))))

axiom real_max_is_some:
  (forall x:real.
    (forall y:real. ((real_max(x, y) = x) or (real_max(x, y) = y))))

axiom real_min_is_le:
  (forall x:real.
    (forall y:real. ((real_min(x, y) <= x) and (real_min(x, y) <= y))))

axiom real_min_is_some:
  (forall x:real.
    (forall y:real. ((real_min(x, y) = x) or (real_min(x, y) = y))))

logic sqrt_real : real -> real

logic pow_real : real, real -> real

logic abs_real : real -> real

axiom abs_real_pos:
  (forall x:real [abs_real(x)]. ((x >= 0.0) -> (abs_real(x) = x)))

axiom abs_real_neg:
  (forall x:real [abs_real(x)]. ((x <= 0.0) -> (abs_real(x) = (-x))))

logic exp : real -> real

logic log : real -> real

logic log10 : real -> real

axiom log_exp: (forall x:real. (log(exp(x)) = x))

logic cos : real -> real

logic sin : real -> real

logic tan : real -> real

logic cosh : real -> real

logic sinh : real -> real

logic tanh : real -> real

logic acos : real -> real

logic asin : real -> real

logic atan : real -> real

logic atan2 : real, real -> real

logic hypot : real, real -> real

type 't alloc_table

type 't pointer

type 't block

logic base_block : 'a1 pointer -> 'a1 block

logic pointer_address : 'a1 pointer -> unit pointer

logic absolute_address : int -> unit pointer

logic address : 'a1 pointer -> int

logic offset_max : 'a1 alloc_table, 'a1 pointer -> int

logic offset_min : 'a1 alloc_table, 'a1 pointer -> int

predicate valid(a: 'a1 alloc_table, p: 'a1 pointer) =
  ((offset_min(a, p) <= 0) and (offset_max(a, p) >= 0))

predicate same_block(p: 'a1 pointer, q: 'a1 pointer) =
  (base_block(p) = base_block(q))

logic sub_pointer : 'a1 pointer, 'a1 pointer -> int

logic shift : 'a1 pointer, int -> 'a1 pointer

logic null :  -> 'a1 pointer

axiom address_injective:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. ((p = q) <-> (address(p) = address(q)))))

axiom address_null: (address(null) = 0)

axiom address_positive: (forall p:'a1 pointer. (0 <= address(p)))

axiom address_shift_lt:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) < address(shift(p, j))) <-> (i < j)))))

axiom address_shift_le:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) <= address(shift(p, j))) <-> (i <= j)))))

axiom shift_zero: (forall p:'a1 pointer [shift(p, 0)]. (shift(p, 0) = p))

axiom shift_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(shift(p, i), j)]. (shift(shift(p, i),
        j) = shift(p, (i + j))))))

axiom offset_max_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_max(a, shift(p, i)) = (offset_max(a, p) - i)))))

axiom offset_min_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_min(a, shift(p, i)) = (offset_min(a, p) - i)))))

axiom neq_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(p, i), shift(p, j)].
        ((i <> j) -> (shift(p, i) <> shift(p, j))))))

axiom null_not_valid: (forall a:'a1 alloc_table. (not valid(a, null)))

axiom null_pointer:
  (forall a:'a1 alloc_table.
    ((offset_min(a, null) >= 0) and (offset_max(a, null) <= (-2))))

logic eq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

logic neq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

axiom eq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer. ((eq_pointer_bool(p1, p2) = true) <-> (p1 = p2))))

axiom neq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer.
      ((neq_pointer_bool(p1, p2) = true) <-> (p1 <> p2))))

axiom same_block_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(p, shift(q, i))].
        (same_block(p, q) -> same_block(p, shift(q, i))))))

axiom same_block_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(shift(q, i), p)].
        (same_block(q, p) -> same_block(shift(q, i), p)))))

axiom sub_pointer_shift:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> (p = shift(q, sub_pointer(p, q))))))

axiom sub_pointer_self:
  (forall p:'a1 pointer [sub_pointer(p, p)]. (sub_pointer(p, p) = 0))

axiom sub_pointer_zero:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> ((sub_pointer(p, q) = 0) -> (p = q)))))

axiom sub_pointer_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(shift(p, i), q)]. (sub_pointer(shift(p, i),
        q) = (sub_pointer(p, q) + i)))))

axiom sub_pointer_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(p, shift(q, i))]. (sub_pointer(p, shift(q,
        i)) = (sub_pointer(p, q) - i)))))

type ('t, 'v) memory

logic select : ('a2, 'a1) memory, 'a2 pointer -> 'a1

logic store : ('a1, 'a2) memory, 'a1 pointer, 'a2 -> ('a1, 'a2) memory

axiom select_store_eq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 = p2) -> (select(store(m, p1, a), p2) = a))))))

axiom select_store_neq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 <> p2) -> (select(store(m, p1, a), p2) = select(m, p2)))))))

type 't pset

logic pset_empty :  -> 'a1 pset

logic pset_singleton : 'a1 pointer -> 'a1 pset

logic pset_deref : ('a2, 'a1 pointer) memory, 'a2 pset -> 'a1 pset

logic pset_union : 'a1 pset, 'a1 pset -> 'a1 pset

logic pset_all : 'a1 pset -> 'a1 pset

logic pset_range : 'a1 pset, int, int -> 'a1 pset

logic pset_range_left : 'a1 pset, int -> 'a1 pset

logic pset_range_right : 'a1 pset, int -> 'a1 pset

logic in_pset : 'a1 pointer, 'a1 pset -> prop

logic valid_pset : 'a1 alloc_table, 'a1 pset -> prop

predicate pset_disjoint(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (not (in_pset(p, ps1) and in_pset(p, ps2))))

predicate pset_included(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (in_pset(p, ps1) -> in_pset(p, ps2)))

axiom pset_included_self: (forall ps:'a1 pset. pset_included(ps, ps))

axiom pset_included_range:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))].
            (((c <= a) and (b <= d)) -> pset_included(pset_range(ps, a, b),
             pset_range(ps, c, d))))))))

axiom pset_included_range_all:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))]. pset_included(pset_range(ps, a, b), pset_all(ps)))))))

axiom in_pset_empty: (forall p:'a1 pointer. (not in_pset(p, pset_empty)))

axiom in_pset_singleton:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. (in_pset(p, pset_singleton(q)) <-> (p = q))))

axiom in_pset_deref:
  (forall p:'a1 pointer.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (in_pset(p, pset_deref(m, q)) <->
         (exists r:'a2 pointer. (in_pset(r, q) and (p = select(m, r))))))))

axiom in_pset_all:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (in_pset(p, pset_all(q)) <->
       (exists i:int.
         (exists r:'a1 pointer. (in_pset(r, q) and (p = shift(r, i))))))))

axiom in_pset_range:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (forall b:int.
          (in_pset(p, pset_range(q, a, b)) <->
           (exists i:int.
             (exists r:'a1 pointer.
               ((a <= i) and
                ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))))

axiom in_pset_range_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall b:int.
        (in_pset(p, pset_range_left(q, b)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_range_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (in_pset(p, pset_range_right(q, a)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((a <= i) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_union:
  (forall p:'a1 pointer.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (in_pset(p, pset_union(s1, s2)) <->
         (in_pset(p, s1) or in_pset(p, s2))))))

axiom valid_pset_empty: (forall a:'a1 alloc_table. valid_pset(a, pset_empty))

axiom valid_pset_singleton:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (valid_pset(a, pset_singleton(p)) <-> valid(a, p))))

axiom valid_pset_deref:
  (forall a:'a1 alloc_table.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (valid_pset(a, pset_deref(m, q)) <->
         (forall r:'a2 pointer.
           (forall p:'a1 pointer.
             ((in_pset(r, q) and (p = select(m, r))) -> valid(a, p))))))))

axiom valid_pset_range:
  (forall a:'a1 alloc_table.
    (forall q:'a1 pset.
      (forall c:int.
        (forall d:int.
          (valid_pset(a, pset_range(q, c, d)) <->
           (forall i:int.
             (forall r:'a1 pointer.
               ((in_pset(r, q) and ((c <= i) and (i <= d))) -> valid(a,
                shift(r, i))))))))))

axiom valid_pset_union:
  (forall a:'a1 alloc_table.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (valid_pset(a, pset_union(s1, s2)) <->
         (valid_pset(a, s1) and valid_pset(a, s2))))))

predicate not_assigns(a: 'a1 alloc_table, m1: ('a1, 'a2) memory, m2: ('a1,
  'a2) memory, l: 'a1 pset) =
  (forall p:'a1 pointer.
    ((valid(a, p) and (not in_pset(p, l))) -> (select(m2, p) = select(m1, p))))

axiom not_assigns_refl:
  (forall a:'a1 alloc_table.
    (forall m:('a1, 'a2) memory.
      (forall l:'a1 pset. not_assigns(a, m, m, l))))

axiom not_assigns_trans:
  (forall a:'a1 alloc_table.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory.
          (forall l:'a1 pset [not_assigns(a, m1, m2, l), not_assigns(a, m1,
            m3, l)].
            (not_assigns(a, m1, m2, l) ->
             (not_assigns(a, m2, m3, l) -> not_assigns(a, m1, m3, l))))))))

logic full_separated : 'a1 pointer, 'a2 pointer -> prop

axiom full_separated_shift1:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(p, shift(q, i))))))

axiom full_separated_shift2:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift3:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift4:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(p, shift(q, i))))))

type 't tag_table

type 't tag_id

logic int_of_tag : 'a1 tag_id -> int

logic typeof : 'a1 tag_table, 'a1 pointer -> 'a1 tag_id

logic parenttag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag_bool : 'a1 tag_id, 'a1 tag_id -> bool

axiom subtag_bool_def:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id. ((subtag_bool(t1, t2) = true) <-> subtag(t1, t2))))

axiom subtag_refl: (forall t:'a1 tag_id. subtag(t, t))

axiom subtag_parent:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id.
      (forall t3:'a1 tag_id.
        (subtag(t1, t2) -> (parenttag(t2, t3) -> subtag(t1, t3))))))

predicate instanceof(a: 'a1 tag_table, p: 'a1 pointer, t: 'a1 tag_id) =
  subtag(typeof(a, p), t)

logic downcast : 'a1 tag_table, 'a1 pointer, 'a1 tag_id -> 'a1 pointer

axiom downcast_instanceof:
  (forall a:'a1 tag_table.
    (forall p:'a1 pointer.
      (forall s:'a1 tag_id. (instanceof(a, p, s) -> (downcast(a, p, s) = p)))))

logic bottom_tag :  -> 'a1 tag_id

axiom bottom_tag_axiom: (forall t:'a1 tag_id. subtag(t, bottom_tag))

predicate root_tag(t: 'a1 tag_id) = parenttag(t, bottom_tag)

axiom root_subtag:
  (forall a:'a1 tag_id.
    (forall b:'a1 tag_id.
      (forall c:'a1 tag_id.
        (root_tag(a) ->
         (root_tag(b) -> ((a <> b) -> (subtag(c, a) -> (not subtag(c, b)))))))))

predicate fully_packed(tag_table: 'a1 tag_table, mutable: ('a1,
  'a1 tag_id) memory, this: 'a1 pointer) = (select(mutable,
  this) = typeof(tag_table, this))

logic bw_compl : int -> int

logic bw_and : int, int -> int

axiom bw_and_not_null:
  (forall a:int.
    (forall b:int. ((bw_and(a, b) <> 0) -> ((a <> 0) and (b <> 0)))))

logic bw_xor : int, int -> int

logic bw_or : int, int -> int

logic lsl : int, int -> int

axiom lsl_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsl(a, b)))))

axiom lsl_left_positive_monotone:
  (forall a1:int.
    (forall a2:int.
      (forall b:int.
        (((0 <= a1) and ((a1 <= a2) and (0 <= b))) -> (lsl(a1, b) <= lsl(a2,
         b))))))

logic lsr : int, int -> int

axiom lsr_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsr(a, b)))))

axiom lsr_left_positive_decreases:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(a, b) <= a))))

logic asr : int, int -> int

axiom asr_positive_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= asr(a, b)))))

axiom asr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) <= a))))

axiom asr_lsr_same_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) = lsr(a, b)))))

axiom lsl_of_lsr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsl(lsr(a, b), b) <= a))))

axiom lsr_of_lsl_identity_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(lsl(a, b), b) = a))))

logic alloc_extends : 'a1 alloc_table, 'a1 alloc_table -> prop

predicate alloc_fresh(a: 'a1 alloc_table, p: 'a1 pointer, n: int) =
  (forall i:int. (((0 <= i) and (i < n)) -> (not valid(a, shift(p, i)))))

axiom alloc_extends_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_min(a1, p) = offset_min(a2, p)))))))

axiom alloc_extends_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_max(a1, p) = offset_max(a2, p)))))))

axiom alloc_extends_not_assigns_empty:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory.
          (forall l:'a1 pset.
            (forall p:'a1 pointer.
              (forall n:int [alloc_extends(a1, a2), alloc_fresh(a1, p, n),
                not_assigns(a2, m1, m2, l)].
                ((alloc_extends(a1, a2) and
                  (alloc_fresh(a1, p, n) and
                   (not_assigns(a2, m1, m2, l) and pset_included(l,
                    pset_all(pset_singleton(p)))))) ->
                 not_assigns(a1, m1, m2, pset_empty)))))))))

logic alloc_extends_except : 'a1 alloc_table, 'a1 alloc_table,
'a1 pset -> prop

axiom alloc_extends_except_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_min(a1,
            p) = offset_min(a2, p))))))))

axiom alloc_extends_except_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_max(a1,
            p) = offset_max(a2, p))))))))

type bitvector

logic concat_bitvector : bitvector, bitvector -> bitvector

logic offset_min_bytes : 'a1 alloc_table, 'a1 pointer, int -> int

logic offset_max_bytes : 'a1 alloc_table, 'a1 pointer, int -> int

axiom offset_min_bytes_def:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall s:int [offset_min_bytes(a, p, s)].
        ((0 < s) ->
         ((offset_min(a, p) <= (s * offset_min_bytes(a, p, s))) and
          (((s * offset_min_bytes(a, p, s)) - s) < offset_min(a, p)))))))

axiom offset_max_bytes_def:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall s:int [offset_max_bytes(a, p, s)].
        ((0 < s) ->
         (((((s * offset_max_bytes(a, p, s)) + s) - 1) <= offset_max(a,
          p)) and (offset_max(a, p) < ((((s * offset_max_bytes(a, p,
          s)) + s) + s) - 1)))))))

logic extract_bytes : bitvector, int, int -> bitvector

logic replace_bytes : bitvector, int, int, bitvector -> bitvector

axiom select_store_eq_union:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector [extract_bytes(replace_bytes(v1, o1, s1,
              v2), o2, s2)].
              (((o1 = o2) and (s1 = s2)) -> (extract_bytes(replace_bytes(v1,
               o1, s1, v2), o2, s2) = v2))))))))

axiom select_store_neq_union:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector [extract_bytes(replace_bytes(v1, o1, s1,
              v2), o2, s2)].
              ((((o2 + s2) <= o1) or ((o1 + s2) <= o2)) ->
               (extract_bytes(replace_bytes(v1, o1, s1, v2), o2,
               s2) = extract_bytes(v1, o2, s2)))))))))

axiom concat_replace_bytes_up:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector.
              (forall v3:bitvector [replace_bytes(replace_bytes(v1, o1, s1,
                v2), o2, s2, v3)].
                (((o1 + s1) = o2) -> (replace_bytes(replace_bytes(v1, o1, s1,
                 v2), o2, s2, v3) = replace_bytes(v1, o1, (s1 + s2),
                 concat_bitvector(v2, v3)))))))))))

axiom concat_replace_bytes_down:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector.
              (forall v3:bitvector [replace_bytes(replace_bytes(v1, o1, s1,
                v2), o2, s2, v3)].
                (((o2 + s2) = o1) -> (replace_bytes(replace_bytes(v1, o1, s1,
                 v2), o2, s2, v3) = replace_bytes(v1, o2, (s1 + s2),
                 concat_bitvector(v3, v2)))))))))))

axiom concat_extract_bytes:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v:bitvector [concat_bitvector(extract_bytes(v, o1, s1),
            extract_bytes(v, o2, s2))].
            (((o1 + s1) = o2) -> (concat_bitvector(extract_bytes(v, o1, s1),
             extract_bytes(v, o2, s2)) = extract_bytes(v, o1, (s1 + s2)))))))))

logic select_bytes : ('a1, bitvector) memory, 'a1 pointer, int,
int -> bitvector

logic store_bytes : ('a1, bitvector) memory, 'a1 pointer, int, int,
bitvector -> ('a1, bitvector) memory

axiom select_store_eq_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall o1:int.
          (forall s1:int.
            (forall o2:int.
              (forall s2:int.
                (forall v:bitvector [select_bytes(store_bytes(m, p1, o1, s1,
                  v), p2, o2, s2)].
                  (((p1 = p2) and ((o1 = o2) and (s1 = s2))) ->
                   (select_bytes(store_bytes(m, p1, o1, s1, v), p2, o2,
                   s2) = v))))))))))

axiom select_store_neq_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall o1:int.
          (forall s1:int.
            (forall o2:int.
              (forall s2:int.
                (forall v:bitvector [select_bytes(store_bytes(m, p1, o1, s1,
                  v), p2, o2, s2)].
                  (pset_disjoint(pset_range(pset_singleton(p1), o1,
                   (o1 + s1)), pset_range(pset_singleton(p2), o2,
                   (o2 + s2))) -> (select_bytes(store_bytes(m, p1, o1, s1,
                   v), p2, o2, s2) = select_bytes(m, p2, o2, s2)))))))))))

axiom shift_store_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall i:int.
        (forall o:int.
          (forall s:int.
            (forall v:bitvector [store_bytes(m, shift(p, i), o, s, v)].
              (store_bytes(m, shift(p, i), o, s, v) = store_bytes(m, p,
              (o + i), s, v))))))))

axiom shift_select_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall i:int.
        (forall o:int.
          (forall s:int.
            (forall v:bitvector [select_bytes(m, shift(p, i), o, s)].
              (select_bytes(m, shift(p, i), o, s) = select_bytes(m, p,
              (o + i), s))))))))

axiom concat_store_bytes_up:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall o1:int.
        (forall s1:int.
          (forall o2:int.
            (forall s2:int.
              (forall v1:bitvector.
                (forall v2:bitvector [store_bytes(store_bytes(m, p, o1, s1,
                  v1), p, o2, s2, v2)].
                  (((o1 + s1) = o2) -> (store_bytes(store_bytes(m, p, o1, s1,
                   v1), p, o2, s2, v2) = store_bytes(m, p, o1, (s1 + s2),
                   concat_bitvector(v1, v2))))))))))))

axiom concat_store_bytes_down:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall o1:int.
        (forall s1:int.
          (forall o2:int.
            (forall s2:int.
              (forall v1:bitvector.
                (forall v2:bitvector [store_bytes(store_bytes(m, p, o1, s1,
                  v1), p, o2, s2, v2)].
                  (((o2 + s2) = o1) -> (store_bytes(store_bytes(m, p, o1, s1,
                   v1), p, o2, s2, v2) = store_bytes(m, p, o2, (s1 + s2),
                   concat_bitvector(v2, v1))))))))))))

axiom concat_select_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall o1:int.
        (forall s1:int.
          (forall o2:int.
            (forall s2:int [concat_bitvector(select_bytes(m, p, o1, s1),
              select_bytes(m, p, o2, s2))].
              (((o1 + s1) = o2) -> (concat_bitvector(select_bytes(m, p, o1,
               s1), select_bytes(m, p, o2, s2)) = select_bytes(m, p, o1,
               (s1 + s2))))))))))

type Object

type interface

logic Exception_tag :  -> Object tag_id

logic Object_tag :  -> Object tag_id

axiom Exception_parenttag_Object: parenttag(Exception_tag, Object_tag)

logic MullerTheory_tag :  -> Object tag_id

axiom MullerTheory_parenttag_Object: parenttag(MullerTheory_tag, Object_tag)

predicate Non_null_Object(x_0: Object pointer,
  Object_x_3_alloc_table: Object alloc_table) =
  (offset_max(Object_x_3_alloc_table, x_0) = 0)

predicate Non_null_intM(x: Object pointer,
  Object_x_2_alloc_table: Object alloc_table) =
  (offset_max(Object_x_2_alloc_table, x) >= (-1))

axiom Object_int: (int_of_tag(Object_tag) = 1)

logic Object_of_bitvector : bitvector -> Object pointer

logic bitvector_of_Object : Object pointer -> bitvector

axiom Object_of_bitvector_of_bitvector_of_Object:
  (forall x:Object pointer.
    (Object_of_bitvector(bitvector_of_Object(x)) = x))

logic Object_of_pointer_address : unit pointer -> Object pointer

axiom Object_of_pointer_address_of_pointer_addr:
  (forall p:Object pointer.
    (p = Object_of_pointer_address(pointer_address(p))))

axiom Object_parenttag_bottom: parenttag(Object_tag, bottom_tag)

axiom Object_tags:
  (forall x:Object pointer.
    (forall Object_tag_table:Object tag_table. instanceof(Object_tag_table,
      x, Object_tag)))

logic String_tag :  -> Object tag_id

axiom String_parenttag_Object: parenttag(String_tag, Object_tag)

logic Throwable_tag :  -> Object tag_id

axiom Throwable_parenttag_Object: parenttag(Throwable_tag, Object_tag)

axiom bitvector_of_Object_of_Object_of_bitvector:
  (forall x:bitvector. (bitvector_of_Object(Object_of_bitvector(x)) = x))

logic bitvector_of_interface : interface pointer -> bitvector

logic interface_of_bitvector : bitvector -> interface pointer

axiom bitvector_of_interface_of_interface_of_bitvector:
  (forall x:bitvector.
    (bitvector_of_interface(interface_of_bitvector(x)) = x))

logic intM_tag :  -> Object tag_id

axiom intM_parenttag_Object: parenttag(intM_tag, Object_tag)

logic interface_tag :  -> interface tag_id

axiom interface_int: (int_of_tag(interface_tag) = 1)

axiom interface_of_bitvector_of_bitvector_of_interface:
  (forall x:interface pointer.
    (interface_of_bitvector(bitvector_of_interface(x)) = x))

logic interface_of_pointer_address : unit pointer -> interface pointer

axiom interface_of_pointer_address_of_pointer_addr:
  (forall p:interface pointer.
    (p = interface_of_pointer_address(pointer_address(p))))

axiom interface_parenttag_bottom: parenttag(interface_tag, bottom_tag)

axiom interface_tags:
  (forall x:interface pointer.
    (forall interface_tag_table:interface tag_table.
      instanceof(interface_tag_table, x, interface_tag)))

predicate left_valid_struct_Object(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = (offset_min(Object_alloc_table,
  p) <= a)

predicate left_valid_struct_Exception(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_MullerTheory(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_String(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_Throwable(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_intM(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_interface(p: interface pointer, a: int,
  interface_alloc_table: interface alloc_table) =
  (offset_min(interface_alloc_table, p) <= a)

logic num_of_pos : int, int, Object pointer, (Object, int) memory -> int

axiom num_of_pos_empty:
  (forall intM_intP_t_1_at_L:(Object, int) memory.
    (forall i_0:int.
      (forall j_0:int.
        (forall t_0:Object pointer.
          ((i_0 > j_0) -> (num_of_pos(i_0, j_0, t_0, intM_intP_t_1_at_L) = 0))))))

axiom num_of_pos_false_case:
  (forall intM_intP_t_1_at_L:(Object, int) memory.
    (forall i_2:int.
      (forall j_2:int.
        (forall k_0:int.
          (forall t_2:Object pointer.
            (((i_2 <= j_2) and (not (select(intM_intP_t_1_at_L, shift(t_2,
              j_2)) > 0))) ->
             (num_of_pos(i_2, j_2, t_2, intM_intP_t_1_at_L) = num_of_pos(i_2,
             (j_2 - 1), t_2, intM_intP_t_1_at_L))))))))

axiom num_of_pos_strictly_increasing_as_axiom:
  (forall intM_intP_t_3_14_at_L:(Object, int) memory.
    (forall i_3:int.
      (forall j_3:int.
        (forall k_1:int.
          (forall l:int.
            (forall t_3:Object pointer.
              (((j_3 < k_1) and
                ((k_1 <= l) and (select(intM_intP_t_3_14_at_L, shift(t_3,
                 k_1)) > 0))) ->
               (num_of_pos(i_3, j_3, t_3,
               intM_intP_t_3_14_at_L) < num_of_pos(i_3, l, t_3,
               intM_intP_t_3_14_at_L)))))))))

axiom num_of_pos_true_case:
  (forall intM_intP_t_1_at_L:(Object, int) memory.
    (forall i_1:int.
      (forall j_1:int.
        (forall k:int.
          (forall t_1:Object pointer.
            (((i_1 <= j_1) and (select(intM_intP_t_1_at_L, shift(t_1,
              j_1)) > 0)) ->
             (num_of_pos(i_1, j_1, t_1,
             intM_intP_t_1_at_L) = (num_of_pos(i_1, (j_1 - 1), t_1,
             intM_intP_t_1_at_L) + 1))))))))

axiom pointer_addr_of_Object_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(Object_of_pointer_address(p))))

axiom pointer_addr_of_interface_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(interface_of_pointer_address(p))))

predicate right_valid_struct_Object(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = (offset_max(Object_alloc_table,
  p) >= b)

predicate right_valid_struct_Exception(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_MullerTheory(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_String(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_Throwable(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_intM(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_interface(p: interface pointer, b: int,
  interface_alloc_table: interface alloc_table) =
  (offset_max(interface_alloc_table, p) >= b)

predicate strict_valid_root_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) = a) and
   (offset_max(Object_alloc_table, p) = b))

predicate strict_valid_root_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) = a) and
   (offset_max(interface_alloc_table, p) = b))

predicate strict_valid_struct_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) = a) and
   (offset_max(Object_alloc_table, p) = b))

predicate strict_valid_struct_Exception(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_MullerTheory(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_String(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_Throwable(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_intM(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) = a) and
   (offset_max(interface_alloc_table, p) = b))

predicate valid_bitvector_struct_Object(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_Exception(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) = valid_bitvector_struct_Object(p,
  a, b, bitvector_alloc_table)

predicate valid_bitvector_struct_MullerTheory(p: unit pointer, a: int,
  b: int, bitvector_alloc_table: unit alloc_table) =
  valid_bitvector_struct_Object(p, a, b, bitvector_alloc_table)

predicate valid_bitvector_struct_String(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) = valid_bitvector_struct_Object(p,
  a, b, bitvector_alloc_table)

predicate valid_bitvector_struct_Throwable(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) = valid_bitvector_struct_Object(p,
  a, b, bitvector_alloc_table)

predicate valid_bitvector_struct_intM(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) = valid_bitvector_struct_Object(p,
  a, b, bitvector_alloc_table)

predicate valid_bitvector_struct_interface(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_root_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) <= a) and
   (offset_max(Object_alloc_table, p) >= b))

predicate valid_root_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) <= a) and
   (offset_max(interface_alloc_table, p) >= b))

predicate valid_struct_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) <= a) and
   (offset_max(Object_alloc_table, p) >= b))

predicate valid_struct_Exception(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_MullerTheory(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_String(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_Throwable(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_intM(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) <= a) and
   (offset_max(interface_alloc_table, p) >= b))

========== file tests/java/why/MullerTheory_po10.why ==========
goal MullerTheory_m_ensures_default_po_9:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 > 0) ->
  forall count0:int.
  (count0 = (count + 1)) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75": ("JC_73": ("JC_73": (count0 <= i_4_0))))

========== file tests/java/why/MullerTheory_po11.why ==========
goal MullerTheory_m_ensures_default_po_10:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 > 0) ->
  forall count0:int.
  (count0 = (count + 1)) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75":
  ("JC_74":
  ("JC_74": (count0 = num_of_pos(0, (i_4_0 - 1), t_4, intM_intP_t_4_7)))))

========== file tests/java/why/MullerTheory_po12.why ==========
goal MullerTheory_m_ensures_default_po_11:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 <= 0) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75": ("JC_70": ("JC_70": (0 <= i_4_0))))

========== file tests/java/why/MullerTheory_po13.why ==========
goal MullerTheory_m_ensures_default_po_12:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 <= 0) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75":
  ("JC_71":
  ("JC_71": (i_4_0 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1)))))

========== file tests/java/why/MullerTheory_po14.why ==========
goal MullerTheory_m_ensures_default_po_13:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 <= 0) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75": ("JC_72": ("JC_72": (0 <= count))))

========== file tests/java/why/MullerTheory_po15.why ==========
goal MullerTheory_m_ensures_default_po_14:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 <= 0) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75": ("JC_73": ("JC_73": (count <= i_4_0))))

========== file tests/java/why/MullerTheory_po16.why ==========
goal MullerTheory_m_ensures_default_po_15:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 <= 0) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75":
  ("JC_74":
  ("JC_74": (count = num_of_pos(0, (i_4_0 - 1), t_4, intM_intP_t_4_7)))))

========== file tests/java/why/MullerTheory_po17.why ==========
goal MullerTheory_m_ensures_default_po_16:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  ("JC_87": ("JC_82": ("JC_82": (0 <= 0))))

========== file tests/java/why/MullerTheory_po18.why ==========
goal MullerTheory_m_ensures_default_po_17:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  ("JC_87":
  ("JC_83":
  ("JC_83": (0 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1)))))

========== file tests/java/why/MullerTheory_po19.why ==========
goal MullerTheory_m_ensures_default_po_18:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  ("JC_87": ("JC_84": ("JC_84": (0 <= count0))))

========== file tests/java/why/MullerTheory_po1.why ==========
goal num_of_pos_strictly_increasing:
  (forall intM_intP_t_3_14_at_L:(Object, int) memory.
    (forall i_3:int.
      (forall j_3:int.
        (forall k_1:int.
          (forall l:int.
            (forall t_3:Object pointer.
              (((j_3 < k_1) and
                ((k_1 <= l) and (select(intM_intP_t_3_14_at_L, shift(t_3,
                 k_1)) > 0))) ->
               (num_of_pos(i_3, j_3, t_3,
               intM_intP_t_3_14_at_L) < num_of_pos(i_3, l, t_3,
               intM_intP_t_3_14_at_L)))))))))

========== file tests/java/why/MullerTheory_po20.why ==========
goal MullerTheory_m_ensures_default_po_19:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  ("JC_87": ("JC_85": ("JC_85": (count0 <= 0))))

========== file tests/java/why/MullerTheory_po21.why ==========
goal MullerTheory_m_ensures_default_po_20:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  ("JC_87":
  ("JC_86":
  ("JC_86": (count0 = num_of_pos(0, (0 - 1), t_4, intM_intP_t_4_7)))))

========== file tests/java/why/MullerTheory_po22.why ==========
goal MullerTheory_m_ensures_default_po_21:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  forall intM_intP_MullerTheory_m_9:(Object,
  int) memory.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  forall intM_intP_MullerTheory_m_9_0:(Object,
  int) memory.
  (intM_intP_MullerTheory_m_9_0 = store(intM_intP_MullerTheory_m_9,
  shift(result0, count1), result3)) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87": ("JC_82": ("JC_82": (0 <= i_5_0))))

========== file tests/java/why/MullerTheory_po23.why ==========
goal MullerTheory_m_ensures_default_po_22:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  forall intM_intP_MullerTheory_m_9:(Object,
  int) memory.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  forall intM_intP_MullerTheory_m_9_0:(Object,
  int) memory.
  (intM_intP_MullerTheory_m_9_0 = store(intM_intP_MullerTheory_m_9,
  shift(result0, count1), result3)) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87":
  ("JC_83":
  ("JC_83": (i_5_0 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1)))))

========== file tests/java/why/MullerTheory_po24.why ==========
goal MullerTheory_m_ensures_default_po_23:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  forall intM_intP_MullerTheory_m_9:(Object,
  int) memory.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  forall intM_intP_MullerTheory_m_9_0:(Object,
  int) memory.
  (intM_intP_MullerTheory_m_9_0 = store(intM_intP_MullerTheory_m_9,
  shift(result0, count1), result3)) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87": ("JC_84": ("JC_84": (0 <= count2))))

========== file tests/java/why/MullerTheory_po25.why ==========
goal MullerTheory_m_ensures_default_po_24:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  forall intM_intP_MullerTheory_m_9:(Object,
  int) memory.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  forall intM_intP_MullerTheory_m_9_0:(Object,
  int) memory.
  (intM_intP_MullerTheory_m_9_0 = store(intM_intP_MullerTheory_m_9,
  shift(result0, count1), result3)) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87": ("JC_85": ("JC_85": (count2 <= i_5_0))))

========== file tests/java/why/MullerTheory_po26.why ==========
goal MullerTheory_m_ensures_default_po_25:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  forall intM_intP_MullerTheory_m_9:(Object,
  int) memory.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  forall intM_intP_MullerTheory_m_9_0:(Object,
  int) memory.
  (intM_intP_MullerTheory_m_9_0 = store(intM_intP_MullerTheory_m_9,
  shift(result0, count1), result3)) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87":
  ("JC_86":
  ("JC_86": (count2 = num_of_pos(0, (i_5_0 - 1), t_4, intM_intP_t_4_7)))))

========== file tests/java/why/MullerTheory_po27.why ==========
goal MullerTheory_m_ensures_default_po_26:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 <= 0) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87": ("JC_82": ("JC_82": (0 <= i_5_0))))

========== file tests/java/why/MullerTheory_po28.why ==========
goal MullerTheory_m_ensures_default_po_27:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 <= 0) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87":
  ("JC_83":
  ("JC_83": (i_5_0 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1)))))

========== file tests/java/why/MullerTheory_po29.why ==========
goal MullerTheory_m_ensures_default_po_28:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 <= 0) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87": ("JC_84": ("JC_84": (0 <= count1))))

========== file tests/java/why/MullerTheory_po2.why ==========
goal MullerTheory_m_ensures_default_po_1:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  ("JC_75": ("JC_70": ("JC_70": (0 <= 0))))

========== file tests/java/why/MullerTheory_po30.why ==========
goal MullerTheory_m_ensures_default_po_29:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 <= 0) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87": ("JC_85": ("JC_85": (count1 <= i_5_0))))

========== file tests/java/why/MullerTheory_po31.why ==========
goal MullerTheory_m_ensures_default_po_30:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 <= 0) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87":
  ("JC_86":
  ("JC_86": (count1 = num_of_pos(0, (i_5_0 - 1), t_4, intM_intP_t_4_7)))))

========== file tests/java/why/MullerTheory_po32.why ==========
goal MullerTheory_m_safety_po_1:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  (offset_min(Object_t_4_7_alloc_table, t_4) <= i_4)

========== file tests/java/why/MullerTheory_po33.why ==========
goal MullerTheory_m_safety_po_2:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  (i_4 <= offset_max(Object_t_4_7_alloc_table, t_4))

========== file tests/java/why/MullerTheory_po34.why ==========
goal MullerTheory_m_safety_po_3:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_4) and
   (i_4 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 > 0) ->
  forall count0:int.
  (count0 = (count + 1)) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  (0 <= ("JC_52": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_4)))

========== file tests/java/why/MullerTheory_po35.why ==========
goal MullerTheory_m_safety_po_4:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_4) and
   (i_4 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 > 0) ->
  forall count0:int.
  (count0 = (count + 1)) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  (("JC_52": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_4_0)) < 
  ("JC_52": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_4)))

========== file tests/java/why/MullerTheory_po36.why ==========
goal MullerTheory_m_safety_po_5:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_4) and
   (i_4 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 <= 0) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  (0 <= ("JC_52": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_4)))

========== file tests/java/why/MullerTheory_po37.why ==========
goal MullerTheory_m_safety_po_6:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_4) and
   (i_4 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 <= 0) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  (("JC_52": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_4_0)) < 
  ("JC_52": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_4)))

========== file tests/java/why/MullerTheory_po38.why ==========
goal MullerTheory_m_safety_po_7:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0)

========== file tests/java/why/MullerTheory_po39.why ==========
goal MullerTheory_m_safety_po_8:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_62": true) ->
  ("JC_60":
  (("JC_55": (0 <= i_5)) and
   (("JC_56": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_57": (0 <= count1)) and
     (("JC_58": (count1 <= i_5)) and
      ("JC_59": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  (offset_min(Object_t_4_7_alloc_table, t_4) <= i_5)

========== file tests/java/why/MullerTheory_po3.why ==========
goal MullerTheory_m_ensures_default_po_2:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  ("JC_75":
  ("JC_71":
  ("JC_71": (0 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1)))))

========== file tests/java/why/MullerTheory_po40.why ==========
goal MullerTheory_m_safety_po_9:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_62": true) ->
  ("JC_60":
  (("JC_55": (0 <= i_5)) and
   (("JC_56": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_57": (0 <= count1)) and
     (("JC_58": (count1 <= i_5)) and
      ("JC_59": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))

========== file tests/java/why/MullerTheory_po41.why ==========
goal MullerTheory_m_safety_po_10:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_62": true) ->
  ("JC_60":
  (("JC_55": (0 <= i_5)) and
   (("JC_56": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_57": (0 <= count1)) and
     (("JC_58": (count1 <= i_5)) and
      ("JC_59": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  (offset_min(Object_MullerTheory_m_9_alloc_table0, result0) <= count1)

========== file tests/java/why/MullerTheory_po42.why ==========
goal MullerTheory_m_safety_po_11:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_62": true) ->
  ("JC_60":
  (("JC_55": (0 <= i_5)) and
   (("JC_56": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_57": (0 <= count1)) and
     (("JC_58": (count1 <= i_5)) and
      ("JC_59": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  (count1 <= offset_max(Object_MullerTheory_m_9_alloc_table0, result0))

========== file tests/java/why/MullerTheory_po43.why ==========
goal MullerTheory_m_safety_po_12:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  forall intM_intP_MullerTheory_m_9:(Object,
  int) memory.
  ("JC_62": true) ->
  ("JC_60":
  (("JC_55": (0 <= i_5)) and
   (("JC_56": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_57": (0 <= count1)) and
     (("JC_58": (count1 <= i_5)) and
      ("JC_59": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  ((offset_min(Object_MullerTheory_m_9_alloc_table0, result0) <= count1) and
   (count1 <= offset_max(Object_MullerTheory_m_9_alloc_table0, result0))) ->
  forall intM_intP_MullerTheory_m_9_0:(Object,
  int) memory.
  (intM_intP_MullerTheory_m_9_0 = store(intM_intP_MullerTheory_m_9,
  shift(result0, count1), result3)) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  (0 <= ("JC_69": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_5)))

========== file tests/java/why/MullerTheory_po44.why ==========
goal MullerTheory_m_safety_po_13:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  forall intM_intP_MullerTheory_m_9:(Object,
  int) memory.
  ("JC_62": true) ->
  ("JC_60":
  (("JC_55": (0 <= i_5)) and
   (("JC_56": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_57": (0 <= count1)) and
     (("JC_58": (count1 <= i_5)) and
      ("JC_59": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  ((offset_min(Object_MullerTheory_m_9_alloc_table0, result0) <= count1) and
   (count1 <= offset_max(Object_MullerTheory_m_9_alloc_table0, result0))) ->
  forall intM_intP_MullerTheory_m_9_0:(Object,
  int) memory.
  (intM_intP_MullerTheory_m_9_0 = store(intM_intP_MullerTheory_m_9,
  shift(result0, count1), result3)) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  (("JC_69": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_5_0)) < 
  ("JC_69": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_5)))

========== file tests/java/why/MullerTheory_po45.why ==========
goal MullerTheory_m_safety_po_14:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_62": true) ->
  ("JC_60":
  (("JC_55": (0 <= i_5)) and
   (("JC_56": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_57": (0 <= count1)) and
     (("JC_58": (count1 <= i_5)) and
      ("JC_59": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 <= 0) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  (0 <= ("JC_69": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_5)))

========== file tests/java/why/MullerTheory_po46.why ==========
goal MullerTheory_m_safety_po_15:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_62": true) ->
  ("JC_60":
  (("JC_55": (0 <= i_5)) and
   (("JC_56": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_57": (0 <= count1)) and
     (("JC_58": (count1 <= i_5)) and
      ("JC_59": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 <= 0) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  (("JC_69": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_5_0)) < 
  ("JC_69": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_5)))

========== file tests/java/why/MullerTheory_po4.why ==========
goal MullerTheory_m_ensures_default_po_3:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  ("JC_75": ("JC_72": ("JC_72": (0 <= 0))))

========== file tests/java/why/MullerTheory_po5.why ==========
goal MullerTheory_m_ensures_default_po_4:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  ("JC_75": ("JC_73": ("JC_73": (0 <= 0))))

========== file tests/java/why/MullerTheory_po6.why ==========
goal MullerTheory_m_ensures_default_po_5:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  ("JC_75":
  ("JC_74": ("JC_74": (0 = num_of_pos(0, (0 - 1), t_4, intM_intP_t_4_7)))))

========== file tests/java/why/MullerTheory_po7.why ==========
goal MullerTheory_m_ensures_default_po_6:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 > 0) ->
  forall count0:int.
  (count0 = (count + 1)) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75": ("JC_70": ("JC_70": (0 <= i_4_0))))

========== file tests/java/why/MullerTheory_po8.why ==========
goal MullerTheory_m_ensures_default_po_7:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 > 0) ->
  forall count0:int.
  (count0 = (count + 1)) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75":
  ("JC_71":
  ("JC_71": (i_4_0 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1)))))

========== file tests/java/why/MullerTheory_po9.why ==========
goal MullerTheory_m_ensures_default_po_8:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 > 0) ->
  forall count0:int.
  (count0 = (count + 1)) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75": ("JC_72": ("JC_72": (0 <= count0))))

========== generation of Simplify VC output ==========
why -simplify [...] why/MullerTheory.why
========== file tests/java/simplify/MullerTheory_why.sx ==========

;; DO NOT EDIT BELOW THIS LINE

(BG_PUSH (NEQ |@true| |@false|))

(DEFPRED (zwf_zero a b) (AND (<= 0 b) (< a b)))

(BG_PUSH
 ;; Why axiom bool_and_def
 (FORALL (a b)
 (IFF (EQ (bool_and a b) |@true|) (AND (EQ a |@true|) (EQ b |@true|)))))

(BG_PUSH
 ;; Why axiom bool_or_def
 (FORALL (a b)
 (IFF (EQ (bool_or a b) |@true|) (OR (EQ a |@true|) (EQ b |@true|)))))

(BG_PUSH
 ;; Why axiom bool_xor_def
 (FORALL (a b) (IFF (EQ (bool_xor a b) |@true|) (NEQ a b))))

(BG_PUSH
 ;; Why axiom bool_not_def
 (FORALL (a) (IFF (EQ (bool_not a) |@true|) (EQ a |@false|))))

(BG_PUSH
 ;; Why axiom ite_true
 (FORALL (x y) (EQ (ite |@true| x y) x)))

(BG_PUSH
 ;; Why axiom ite_false
 (FORALL (x y) (EQ (ite |@false| x y) y)))

(BG_PUSH
 ;; Why axiom lt_int_bool_axiom
 (FORALL (x y) (IFF (EQ (lt_int_bool x y) |@true|) (< x y))))

(BG_PUSH
 ;; Why axiom le_int_bool_axiom
 (FORALL (x y) (IFF (EQ (le_int_bool x y) |@true|) (<= x y))))

(BG_PUSH
 ;; Why axiom gt_int_bool_axiom
 (FORALL (x y) (IFF (EQ (gt_int_bool x y) |@true|) (> x y))))

(BG_PUSH
 ;; Why axiom ge_int_bool_axiom
 (FORALL (x y) (IFF (EQ (ge_int_bool x y) |@true|) (>= x y))))

(BG_PUSH
 ;; Why axiom eq_int_bool_axiom
 (FORALL (x y) (IFF (EQ (eq_int_bool x y) |@true|) (EQ x y))))

(BG_PUSH
 ;; Why axiom neq_int_bool_axiom
 (FORALL (x y) (IFF (EQ (neq_int_bool x y) |@true|) (NEQ x y))))

(BG_PUSH
 ;; Why axiom abs_int_pos
 (FORALL (x) (IMPLIES (>= x 0) (EQ (abs_int x) x))))

(BG_PUSH
 ;; Why axiom abs_int_neg
 (FORALL (x) (IMPLIES (<= x 0) (EQ (abs_int x) (- 0 x)))))

(BG_PUSH
 ;; Why axiom int_max_is_ge
 (FORALL (x y) (AND (>= (int_max x y) x) (>= (int_max x y) y))))

(BG_PUSH
 ;; Why axiom int_max_is_some
 (FORALL (x y) (OR (EQ (int_max x y) x) (EQ (int_max x y) y))))

(BG_PUSH
 ;; Why axiom int_min_is_le
 (FORALL (x y) (AND (<= (int_min x y) x) (<= (int_min x y) y))))

(BG_PUSH
 ;; Why axiom int_min_is_some
 (FORALL (x y) (OR (EQ (int_min x y) x) (EQ (int_min x y) y))))

(BG_PUSH
 ;; Why axiom lt_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (lt_real_bool x y) |@true|) (EQ (lt_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom le_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (le_real_bool x y) |@true|) (EQ (le_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom gt_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (gt_real_bool x y) |@true|) (EQ (gt_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom ge_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (ge_real_bool x y) |@true|) (EQ (ge_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom eq_real_bool_axiom
 (FORALL (x y) (IFF (EQ (eq_real_bool x y) |@true|) (EQ x y))))

(BG_PUSH
 ;; Why axiom neq_real_bool_axiom
 (FORALL (x y) (IFF (EQ (neq_real_bool x y) |@true|) (NEQ x y))))

(BG_PUSH
 ;; Why axiom real_max_is_ge
 (FORALL (x y)
 (AND (EQ (ge_real (real_max x y) x) |@true|)
 (EQ (ge_real (real_max x y) y) |@true|))))

(BG_PUSH
 ;; Why axiom real_max_is_some
 (FORALL (x y) (OR (EQ (real_max x y) x) (EQ (real_max x y) y))))

(BG_PUSH
 ;; Why axiom real_min_is_le
 (FORALL (x y)
 (AND (EQ (le_real (real_min x y) x) |@true|)
 (EQ (le_real (real_min x y) y) |@true|))))

(BG_PUSH
 ;; Why axiom real_min_is_some
 (FORALL (x y) (OR (EQ (real_min x y) x) (EQ (real_min x y) y))))

(BG_PUSH
 ;; Why axiom abs_real_pos
 (FORALL (x)
 (IMPLIES (EQ (ge_real x real_constant_0_0e) |@true|) (EQ (real_abs x) x))))

(BG_PUSH
 ;; Why axiom abs_real_neg
 (FORALL (x)
 (IMPLIES (EQ (le_real x real_constant_0_0e) |@true|)
 (EQ (real_abs x) (real_neg x)))))

(BG_PUSH
 ;; Why axiom log_exp
 (FORALL (x) (EQ (log (exp x)) x)))

(DEFPRED (valid a p) (AND (<= (offset_min a p) 0) (>= (offset_max a p) 0)))

(DEFPRED (same_block p q) (EQ (base_block p) (base_block q)))

(BG_PUSH
 ;; Why axiom address_injective
 (FORALL (p q) (IFF (EQ p q) (EQ (address p) (address q)))))

(BG_PUSH
 ;; Why axiom address_null
 (EQ (address null) 0))

(BG_PUSH
 ;; Why axiom address_positive
 (FORALL (p) (<= 0 (address p))))

(BG_PUSH
 ;; Why axiom address_shift_lt
 (FORALL (p i j)
 (IFF (< (address (shift p i)) (address (shift p j))) (< i j))))

(BG_PUSH
 ;; Why axiom address_shift_le
 (FORALL (p i j)
 (IFF (<= (address (shift p i)) (address (shift p j))) (<= i j))))

(BG_PUSH
 ;; Why axiom shift_zero
 (FORALL (p) (EQ (shift p 0) p)))

(BG_PUSH
 ;; Why axiom shift_shift
 (FORALL (p i j) (EQ (shift (shift p i) j) (shift p (+ i j)))))

(BG_PUSH
 ;; Why axiom offset_max_shift
 (FORALL (a p i) (EQ (offset_max a (shift p i)) (- (offset_max a p) i))))

(BG_PUSH
 ;; Why axiom offset_min_shift
 (FORALL (a p i) (EQ (offset_min a (shift p i)) (- (offset_min a p) i))))

(BG_PUSH
 ;; Why axiom neq_shift
 (FORALL (p i j) (IMPLIES (NEQ i j) (NEQ (shift p i) (shift p j))))

 (FORALL (i j)
 (IMPLIES (NEQ i j) (FORALL (p) (NEQ (shift p i) (shift p j))))))

(BG_PUSH
 ;; Why axiom null_not_valid
 (FORALL (a) (NOT (valid a null))))

(BG_PUSH
 ;; Why axiom null_pointer
 (FORALL (a)
 (AND (>= (offset_min a null) 0) (<= (offset_max a null) (- 0 2)))))

(BG_PUSH
 ;; Why axiom eq_pointer_bool_def
 (FORALL (p1 p2) (IFF (EQ (eq_pointer_bool p1 p2) |@true|) (EQ p1 p2))))

(BG_PUSH
 ;; Why axiom neq_pointer_bool_def
 (FORALL (p1 p2) (IFF (EQ (neq_pointer_bool p1 p2) |@true|) (NEQ p1 p2))))

(BG_PUSH
 ;; Why axiom same_block_shift_right
 (FORALL (p q i) (IMPLIES (same_block p q) (same_block p (shift q i))))

 (FORALL (p q)
 (IMPLIES (same_block p q) (FORALL (i) (same_block p (shift q i))))))

(BG_PUSH
 ;; Why axiom same_block_shift_left
 (FORALL (p q i) (IMPLIES (same_block q p) (same_block (shift q i) p)))

 (FORALL (p q)
 (IMPLIES (same_block q p) (FORALL (i) (same_block (shift q i) p)))))

(BG_PUSH
 ;; Why axiom sub_pointer_shift
 (FORALL (p q) (IMPLIES (same_block p q) (EQ p (shift q (sub_pointer p q))))))

(BG_PUSH
 ;; Why axiom sub_pointer_self
 (FORALL (p) (EQ (sub_pointer p p) 0)))

(BG_PUSH
 ;; Why axiom sub_pointer_zero
 (FORALL (p q)
 (IMPLIES (same_block p q) (IMPLIES (EQ (sub_pointer p q) 0) (EQ p q)))))

(BG_PUSH
 ;; Why axiom sub_pointer_shift_left
 (FORALL (p q i) (EQ (sub_pointer (shift p i) q) (+ (sub_pointer p q) i))))

(BG_PUSH
 ;; Why axiom sub_pointer_shift_right
 (FORALL (p q i) (EQ (sub_pointer p (shift q i)) (- (sub_pointer p q) i))))

(BG_PUSH
 ;; Why axiom select_store_eq
 (FORALL (m p1 p2 a)
 (IMPLIES (EQ p1 p2) (EQ (select (|why__store| m p1 a) p2) a)))

 (FORALL (p1 p2)
 (IMPLIES (EQ p1 p2) (FORALL (m a) (EQ (select (|why__store| m p1 a) p2) a)))))

(BG_PUSH
 ;; Why axiom select_store_neq
 (FORALL (m p1 p2 a)
 (IMPLIES (NEQ p1 p2) (EQ (select (|why__store| m p1 a) p2) (select m p2))))

 (FORALL (p1 p2)
 (IMPLIES (NEQ p1 p2)
 (FORALL (m a) (EQ (select (|why__store| m p1 a) p2) (select m p2))))))

(DEFPRED (pset_disjoint ps1 ps2)
  (FORALL (p)
  (NOT (AND (EQ (in_pset p ps1) |@true|) (EQ (in_pset p ps2) |@true|)))))

(DEFPRED (pset_included ps1 ps2)
  (FORALL (p)
  (IMPLIES (EQ (in_pset p ps1) |@true|) (EQ (in_pset p ps2) |@true|))))

(BG_PUSH
 ;; Why axiom pset_included_self
 (FORALL (ps) (pset_included ps ps)))

(BG_PUSH
 ;; Why axiom pset_included_range
 (FORALL (ps a b c d)
 (IMPLIES (AND (<= c a) (<= b d))
 (pset_included (pset_range ps a b) (pset_range ps c d))))

 (FORALL (a b c d)
 (IMPLIES (AND (<= c a) (<= b d))
 (FORALL (ps) (pset_included (pset_range ps a b) (pset_range ps c d))))))

(BG_PUSH
 ;; Why axiom pset_included_range_all
 (FORALL (ps a b c d) (pset_included (pset_range ps a b) (pset_all ps))))

(BG_PUSH
 ;; Why axiom in_pset_empty
 (FORALL (p) (NOT (EQ (in_pset p pset_empty) |@true|))))

(BG_PUSH
 ;; Why axiom in_pset_singleton
 (FORALL (p q) (IFF (EQ (in_pset p (pset_singleton q)) |@true|) (EQ p q))))

(BG_PUSH
 ;; Why axiom in_pset_deref
 (FORALL (p m q)
 (IFF (EQ (in_pset p (pset_deref m q)) |@true|)
 (EXISTS (r) (AND (EQ (in_pset r q) |@true|) (EQ p (select m r)))))))

(BG_PUSH
 ;; Why axiom in_pset_all
 (FORALL (p q)
 (IFF (EQ (in_pset p (pset_all q)) |@true|)
 (EXISTS (i)
 (EXISTS (r) (AND (EQ (in_pset r q) |@true|) (EQ p (shift r i))))))))

(BG_PUSH
 ;; Why axiom in_pset_range
 (FORALL (p q a b)
 (IFF (EQ (in_pset p (pset_range q a b)) |@true|)
 (EXISTS (i)
 (EXISTS (r)
 (AND (<= a i)
 (AND (<= i b) (AND (EQ (in_pset r q) |@true|) (EQ p (shift r i))))))))))

(BG_PUSH
 ;; Why axiom in_pset_range_left
 (FORALL (p q b)
 (IFF (EQ (in_pset p (pset_range_left q b)) |@true|)
 (EXISTS (i)
 (EXISTS (r)
 (AND (<= i b) (AND (EQ (in_pset r q) |@true|) (EQ p (shift r i)))))))))

(BG_PUSH
 ;; Why axiom in_pset_range_right
 (FORALL (p q a)
 (IFF (EQ (in_pset p (pset_range_right q a)) |@true|)
 (EXISTS (i)
 (EXISTS (r)
 (AND (<= a i) (AND (EQ (in_pset r q) |@true|) (EQ p (shift r i)))))))))

(BG_PUSH
 ;; Why axiom in_pset_union
 (FORALL (p s1 s2)
 (IFF (EQ (in_pset p (pset_union s1 s2)) |@true|)
 (OR (EQ (in_pset p s1) |@true|) (EQ (in_pset p s2) |@true|)))))

(BG_PUSH
 ;; Why axiom valid_pset_empty
 (FORALL (a) (EQ (valid_pset a pset_empty) |@true|)))

(BG_PUSH
 ;; Why axiom valid_pset_singleton
 (FORALL (a p)
 (IFF (EQ (valid_pset a (pset_singleton p)) |@true|) (valid a p))))

(BG_PUSH
 ;; Why axiom valid_pset_deref
 (FORALL (a m q)
 (IFF (EQ (valid_pset a (pset_deref m q)) |@true|)
 (FORALL (r p)
 (IMPLIES (AND (EQ (in_pset r q) |@true|) (EQ p (select m r))) (valid a p))))))

(BG_PUSH
 ;; Why axiom valid_pset_range
 (FORALL (a q c d)
 (IFF (EQ (valid_pset a (pset_range q c d)) |@true|)
 (FORALL (i r)
 (IMPLIES (AND (EQ (in_pset r q) |@true|) (AND (<= c i) (<= i d)))
 (valid a (shift r i)))))))

(BG_PUSH
 ;; Why axiom valid_pset_union
 (FORALL (a s1 s2)
 (IFF (EQ (valid_pset a (pset_union s1 s2)) |@true|)
 (AND (EQ (valid_pset a s1) |@true|) (EQ (valid_pset a s2) |@true|)))))

(DEFPRED (not_assigns a m1 m2 l)
  (FORALL (p)
  (IMPLIES (AND (valid a p) (NOT (EQ (in_pset p l) |@true|)))
  (EQ (select m2 p) (select m1 p)))))

(BG_PUSH
 ;; Why axiom not_assigns_refl
 (FORALL (a m l) (not_assigns a m m l)))

(BG_PUSH
 ;; Why axiom not_assigns_trans
 (FORALL (a m1 m2 m3 l)
 (IMPLIES (not_assigns a m1 m2 l)
 (IMPLIES (not_assigns a m2 m3 l) (not_assigns a m1 m3 l))))

 (FORALL (a m1 m2 l)
 (IMPLIES (not_assigns a m1 m2 l)
 (FORALL (m3) (IMPLIES (not_assigns a m2 m3 l) (not_assigns a m1 m3 l))))))

(BG_PUSH
 ;; Why axiom full_separated_shift1
 (FORALL (p q i)
 (IMPLIES (EQ (full_separated p q) |@true|)
 (EQ (full_separated p (shift q i)) |@true|)))

 (FORALL (p q)
 (IMPLIES (EQ (full_separated p q) |@true|)
 (FORALL (i) (EQ (full_separated p (shift q i)) |@true|)))))

(BG_PUSH
 ;; Why axiom full_separated_shift2
 (FORALL (p q i)
 (IMPLIES (EQ (full_separated p q) |@true|)
 (EQ (full_separated (shift q i) p) |@true|)))

 (FORALL (p q)
 (IMPLIES (EQ (full_separated p q) |@true|)
 (FORALL (i) (EQ (full_separated (shift q i) p) |@true|)))))

(BG_PUSH
 ;; Why axiom full_separated_shift3
 (FORALL (p q i)
 (IMPLIES (EQ (full_separated q p) |@true|)
 (EQ (full_separated (shift q i) p) |@true|)))

 (FORALL (p q)
 (IMPLIES (EQ (full_separated q p) |@true|)
 (FORALL (i) (EQ (full_separated (shift q i) p) |@true|)))))

(BG_PUSH
 ;; Why axiom full_separated_shift4
 (FORALL (p q i)
 (IMPLIES (EQ (full_separated q p) |@true|)
 (EQ (full_separated p (shift q i)) |@true|)))

 (FORALL (p q)
 (IMPLIES (EQ (full_separated q p) |@true|)
 (FORALL (i) (EQ (full_separated p (shift q i)) |@true|)))))

(BG_PUSH
 ;; Why axiom subtag_bool_def
 (FORALL (t1 t2)
 (IFF (EQ (subtag_bool t1 t2) |@true|) (EQ (subtag t1 t2) |@true|))))

(BG_PUSH
 ;; Why axiom subtag_refl
 (FORALL (t) (EQ (subtag t t) |@true|)))

(BG_PUSH
 ;; Why axiom subtag_parent
 (FORALL (t1 t2 t3)
 (IMPLIES (EQ (subtag t1 t2) |@true|)
 (IMPLIES (EQ (parenttag t2 t3) |@true|) (EQ (subtag t1 t3) |@true|))))

 (FORALL (t1 t2)
 (IMPLIES (EQ (subtag t1 t2) |@true|)
 (FORALL (t3)
 (IMPLIES (EQ (parenttag t2 t3) |@true|) (EQ (subtag t1 t3) |@true|))))))

(DEFPRED (instanceof a p t) (EQ (subtag (typeof a p) t) |@true|))

(BG_PUSH
 ;; Why axiom downcast_instanceof
 (FORALL (a p s) (IMPLIES (instanceof a p s) (EQ (downcast a p s) p))))

(BG_PUSH
 ;; Why axiom bottom_tag_axiom
 (FORALL (t) (EQ (subtag t bottom_tag) |@true|)))

(DEFPRED (root_tag t) (EQ (parenttag t bottom_tag) |@true|))

(BG_PUSH
 ;; Why axiom root_subtag
 (FORALL (a b c)
 (IMPLIES (root_tag a)
 (IMPLIES (root_tag b)
 (IMPLIES (NEQ a b)
 (IMPLIES (EQ (subtag c a) |@true|) (NOT (EQ (subtag c b) |@true|)))))))

 (FORALL (a)
 (IMPLIES (root_tag a)
 (FORALL (b)
 (IMPLIES (root_tag b)
 (IMPLIES (NEQ a b)
 (FORALL (c)
 (IMPLIES (EQ (subtag c a) |@true|) (NOT (EQ (subtag c b) |@true|))))))))))

(DEFPRED (fully_packed tag_table mutable this)
  (EQ (select mutable this) (typeof tag_table this)))

(BG_PUSH
 ;; Why axiom bw_and_not_null
 (FORALL (a b) (IMPLIES (NEQ (bw_and a b) 0) (AND (NEQ a 0) (NEQ b 0)))))

(BG_PUSH
 ;; Why axiom lsl_left_positive_returns_positive
 (FORALL (a b) (IMPLIES (AND (<= 0 a) (<= 0 b)) (<= 0 (lsl a b)))))

(BG_PUSH
 ;; Why axiom lsl_left_positive_monotone
 (FORALL (a1 a2 b)
 (IMPLIES (AND (<= 0 a1) (AND (<= a1 a2) (<= 0 b)))
 (<= (lsl a1 b) (lsl a2 b)))))

(BG_PUSH
 ;; Why axiom lsr_left_positive_returns_positive
 (FORALL (a b) (IMPLIES (AND (<= 0 a) (<= 0 b)) (<= 0 (lsr a b)))))

(BG_PUSH
 ;; Why axiom lsr_left_positive_decreases
 (FORALL (a b) (IMPLIES (AND (<= 0 a) (<= 0 b)) (<= (lsr a b) a))))

(BG_PUSH
 ;; Why axiom asr_positive_on_positive
 (FORALL (a b) (IMPLIES (AND (<= 0 a) (<= 0 b)) (<= 0 (asr a b)))))

(BG_PUSH
 ;; Why axiom asr_decreases_on_positive
 (FORALL (a b) (IMPLIES (AND (<= 0 a) (<= 0 b)) (<= (asr a b) a))))

(BG_PUSH
 ;; Why axiom asr_lsr_same_on_positive
 (FORALL (a b) (IMPLIES (AND (<= 0 a) (<= 0 b)) (EQ (asr a b) (lsr a b)))))

(BG_PUSH
 ;; Why axiom lsl_of_lsr_decreases_on_positive
 (FORALL (a b) (IMPLIES (AND (<= 0 a) (<= 0 b)) (<= (lsl (lsr a b) b) a))))

(BG_PUSH
 ;; Why axiom lsr_of_lsl_identity_on_positive
 (FORALL (a b) (IMPLIES (AND (<= 0 a) (<= 0 b)) (EQ (lsr (lsl a b) b) a))))

(DEFPRED (alloc_fresh a p n)
  (FORALL (i) (IMPLIES (AND (<= 0 i) (< i n)) (NOT (valid a (shift p i))))))

(BG_PUSH
 ;; Why axiom alloc_extends_offset_min
 (FORALL (a1 a2)
 (IMPLIES (EQ (alloc_extends a1 a2) |@true|)
 (FORALL (p) (IMPLIES (valid a1 p) (EQ (offset_min a1 p) (offset_min a2 p)))))))

(BG_PUSH
 ;; Why axiom alloc_extends_offset_max
 (FORALL (a1 a2)
 (IMPLIES (EQ (alloc_extends a1 a2) |@true|)
 (FORALL (p) (IMPLIES (valid a1 p) (EQ (offset_max a1 p) (offset_max a2 p)))))))

(BG_PUSH
 ;; Why axiom alloc_extends_not_assigns_empty
 (FORALL (a1 a2 m1 m2 l p n)
 (IMPLIES
 (AND (EQ (alloc_extends a1 a2) |@true|)
 (AND (alloc_fresh a1 p n)
 (AND (not_assigns a2 m1 m2 l)
 (pset_included l (pset_all (pset_singleton p))))))
 (not_assigns a1 m1 m2 pset_empty))))

(BG_PUSH
 ;; Why axiom alloc_extends_except_offset_min
 (FORALL (a1 a2 l)
 (IMPLIES (EQ (alloc_extends_except a1 a2 l) |@true|)
 (FORALL (p)
 (IMPLIES (AND (valid a1 p) (NOT (EQ (in_pset p l) |@true|)))
 (EQ (offset_min a1 p) (offset_min a2 p)))))))

(BG_PUSH
 ;; Why axiom alloc_extends_except_offset_max
 (FORALL (a1 a2 l)
 (IMPLIES (EQ (alloc_extends_except a1 a2 l) |@true|)
 (FORALL (p)
 (IMPLIES (AND (valid a1 p) (NOT (EQ (in_pset p l) |@true|)))
 (EQ (offset_max a1 p) (offset_max a2 p)))))))

(BG_PUSH
 ;; Why axiom offset_min_bytes_def
 (FORALL (a p s)
 (IMPLIES (< 0 s)
 (AND (<= (offset_min a p) (* s (offset_min_bytes a p s)))
 (< (- (* s (offset_min_bytes a p s)) s) (offset_min a p)))))

 (FORALL (s)
 (IMPLIES (< 0 s)
 (FORALL (a p)
 (AND (<= (offset_min a p) (* s (offset_min_bytes a p s)))
 (< (- (* s (offset_min_bytes a p s)) s) (offset_min a p)))))))

(BG_PUSH
 ;; Why axiom offset_max_bytes_def
 (FORALL (a p s)
 (IMPLIES (< 0 s)
 (AND (<= (- (+ (* s (offset_max_bytes a p s)) s) 1) (offset_max a p))
 (< (offset_max a p) (- (+ (+ (* s (offset_max_bytes a p s)) s) s) 1)))))

 (FORALL (s)
 (IMPLIES (< 0 s)
 (FORALL (a p)
 (AND (<= (- (+ (* s (offset_max_bytes a p s)) s) 1) (offset_max a p))
 (< (offset_max a p) (- (+ (+ (* s (offset_max_bytes a p s)) s) s) 1)))))))

(BG_PUSH
 ;; Why axiom select_store_eq_union
 (FORALL (o1 s1 o2 s2 v1 v2)
 (IMPLIES (AND (EQ o1 o2) (EQ s1 s2))
 (EQ (extract_bytes (replace_bytes v1 o1 s1 v2) o2 s2) v2)))

 (FORALL (o1 s1 o2 s2)
 (IMPLIES (AND (EQ o1 o2) (EQ s1 s2))
 (FORALL (v1 v2) (EQ (extract_bytes (replace_bytes v1 o1 s1 v2) o2 s2) v2)))))

(BG_PUSH
 ;; Why axiom select_store_neq_union
 (FORALL (o1 s1 o2 s2 v1 v2)
 (IMPLIES (OR (<= (+ o2 s2) o1) (<= (+ o1 s2) o2))
 (EQ (extract_bytes (replace_bytes v1 o1 s1 v2) o2 s2)
 (extract_bytes v1 o2 s2))))

 (FORALL (o1 o2 s2)
 (IMPLIES (OR (<= (+ o2 s2) o1) (<= (+ o1 s2) o2))
 (FORALL (s1 v1 v2)
 (EQ (extract_bytes (replace_bytes v1 o1 s1 v2) o2 s2)
 (extract_bytes v1 o2 s2))))))

(BG_PUSH
 ;; Why axiom concat_replace_bytes_up
 (FORALL (o1 s1 o2 s2 v1 v2 v3)
 (IMPLIES (EQ (+ o1 s1) o2)
 (EQ (replace_bytes (replace_bytes v1 o1 s1 v2) o2 s2 v3)
 (replace_bytes v1 o1 (+ s1 s2) (concat_bitvector v2 v3)))))

 (FORALL (o1 s1 o2)
 (IMPLIES (EQ (+ o1 s1) o2)
 (FORALL (s2 v1 v2 v3)
 (EQ (replace_bytes (replace_bytes v1 o1 s1 v2) o2 s2 v3)
 (replace_bytes v1 o1 (+ s1 s2) (concat_bitvector v2 v3)))))))

(BG_PUSH
 ;; Why axiom concat_replace_bytes_down
 (FORALL (o1 s1 o2 s2 v1 v2 v3)
 (IMPLIES (EQ (+ o2 s2) o1)
 (EQ (replace_bytes (replace_bytes v1 o1 s1 v2) o2 s2 v3)
 (replace_bytes v1 o2 (+ s1 s2) (concat_bitvector v3 v2)))))

 (FORALL (o1 o2 s2)
 (IMPLIES (EQ (+ o2 s2) o1)
 (FORALL (s1 v1 v2 v3)
 (EQ (replace_bytes (replace_bytes v1 o1 s1 v2) o2 s2 v3)
 (replace_bytes v1 o2 (+ s1 s2) (concat_bitvector v3 v2)))))))

(BG_PUSH
 ;; Why axiom concat_extract_bytes
 (FORALL (o1 s1 o2 s2 v)
 (IMPLIES (EQ (+ o1 s1) o2)
 (EQ (concat_bitvector (extract_bytes v o1 s1) (extract_bytes v o2 s2))
 (extract_bytes v o1 (+ s1 s2)))))

 (FORALL (o1 s1 o2)
 (IMPLIES (EQ (+ o1 s1) o2)
 (FORALL (s2 v)
 (EQ (concat_bitvector (extract_bytes v o1 s1) (extract_bytes v o2 s2))
 (extract_bytes v o1 (+ s1 s2)))))))

(BG_PUSH
 ;; Why axiom select_store_eq_bytes
 (FORALL (m p1 p2 o1 s1 o2 s2 v)
 (IMPLIES (AND (EQ p1 p2) (AND (EQ o1 o2) (EQ s1 s2)))
 (EQ (select_bytes (store_bytes m p1 o1 s1 v) p2 o2 s2) v)))

 (FORALL (p1 p2 o1 s1 o2 s2)
 (IMPLIES (AND (EQ p1 p2) (AND (EQ o1 o2) (EQ s1 s2)))
 (FORALL (m v) (EQ (select_bytes (store_bytes m p1 o1 s1 v) p2 o2 s2) v)))))

(BG_PUSH
 ;; Why axiom select_store_neq_bytes
 (FORALL (m p1 p2 o1 s1 o2 s2 v)
 (IMPLIES
 (pset_disjoint
 (pset_range (pset_singleton p1) o1 (+ o1 s1)) (pset_range
                                               (pset_singleton p2) o2 
                                               (+ o2 s2)))
 (EQ (select_bytes (store_bytes m p1 o1 s1 v) p2 o2 s2)
 (select_bytes m p2 o2 s2))))

 (FORALL (p1 p2 o1 s1 o2 s2)
 (IMPLIES
 (pset_disjoint
 (pset_range (pset_singleton p1) o1 (+ o1 s1)) (pset_range
                                               (pset_singleton p2) o2 
                                               (+ o2 s2)))
 (FORALL (m v)
 (EQ (select_bytes (store_bytes m p1 o1 s1 v) p2 o2 s2)
 (select_bytes m p2 o2 s2))))))

(BG_PUSH
 ;; Why axiom shift_store_bytes
 (FORALL (m p i o s v)
 (EQ (store_bytes m (shift p i) o s v) (store_bytes m p (+ o i) s v))))

(BG_PUSH
 ;; Why axiom shift_select_bytes
 (FORALL (m p i o s v)
 (EQ (select_bytes m (shift p i) o s) (select_bytes m p (+ o i) s))))

(BG_PUSH
 ;; Why axiom concat_store_bytes_up
 (FORALL (m p o1 s1 o2 s2 v1 v2)
 (IMPLIES (EQ (+ o1 s1) o2)
 (EQ (store_bytes (store_bytes m p o1 s1 v1) p o2 s2 v2)
 (store_bytes m p o1 (+ s1 s2) (concat_bitvector v1 v2)))))

 (FORALL (o1 s1 o2)
 (IMPLIES (EQ (+ o1 s1) o2)
 (FORALL (m p s2 v1 v2)
 (EQ (store_bytes (store_bytes m p o1 s1 v1) p o2 s2 v2)
 (store_bytes m p o1 (+ s1 s2) (concat_bitvector v1 v2)))))))

(BG_PUSH
 ;; Why axiom concat_store_bytes_down
 (FORALL (m p o1 s1 o2 s2 v1 v2)
 (IMPLIES (EQ (+ o2 s2) o1)
 (EQ (store_bytes (store_bytes m p o1 s1 v1) p o2 s2 v2)
 (store_bytes m p o2 (+ s1 s2) (concat_bitvector v2 v1)))))

 (FORALL (o1 o2 s2)
 (IMPLIES (EQ (+ o2 s2) o1)
 (FORALL (m p s1 v1 v2)
 (EQ (store_bytes (store_bytes m p o1 s1 v1) p o2 s2 v2)
 (store_bytes m p o2 (+ s1 s2) (concat_bitvector v2 v1)))))))

(BG_PUSH
 ;; Why axiom concat_select_bytes
 (FORALL (m p o1 s1 o2 s2)
 (IMPLIES (EQ (+ o1 s1) o2)
 (EQ (concat_bitvector (select_bytes m p o1 s1) (select_bytes m p o2 s2))
 (select_bytes m p o1 (+ s1 s2)))))

 (FORALL (o1 s1 o2)
 (IMPLIES (EQ (+ o1 s1) o2)
 (FORALL (m p s2)
 (EQ (concat_bitvector (select_bytes m p o1 s1) (select_bytes m p o2 s2))
 (select_bytes m p o1 (+ s1 s2)))))))

(BG_PUSH
 ;; Why axiom Exception_parenttag_Object
 (EQ (parenttag Exception_tag Object_tag) |@true|))

(BG_PUSH
 ;; Why axiom MullerTheory_parenttag_Object
 (EQ (parenttag MullerTheory_tag Object_tag) |@true|))

(DEFPRED (Non_null_Object x_0 Object_x_3_alloc_table)
  (EQ (offset_max Object_x_3_alloc_table x_0) 0))

(DEFPRED (Non_null_intM x Object_x_2_alloc_table)
  (>= (offset_max Object_x_2_alloc_table x) (- 0 1)))

(BG_PUSH
 ;; Why axiom Object_int
 (EQ (int_of_tag Object_tag) 1))

(BG_PUSH
 ;; Why axiom Object_of_bitvector_of_bitvector_of_Object
 (FORALL (x) (EQ (Object_of_bitvector (bitvector_of_Object x)) x)))

(BG_PUSH
 ;; Why axiom Object_of_pointer_address_of_pointer_addr
 (FORALL (p) (EQ p (Object_of_pointer_address (pointer_address p)))))

(BG_PUSH
 ;; Why axiom Object_parenttag_bottom
 (EQ (parenttag Object_tag bottom_tag) |@true|))

(BG_PUSH
 ;; Why axiom Object_tags
 (FORALL (x Object_tag_table) (instanceof Object_tag_table x Object_tag)))

(BG_PUSH
 ;; Why axiom String_parenttag_Object
 (EQ (parenttag String_tag Object_tag) |@true|))

(BG_PUSH
 ;; Why axiom Throwable_parenttag_Object
 (EQ (parenttag Throwable_tag Object_tag) |@true|))

(BG_PUSH
 ;; Why axiom bitvector_of_Object_of_Object_of_bitvector
 (FORALL (x) (EQ (bitvector_of_Object (Object_of_bitvector x)) x)))

(BG_PUSH
 ;; Why axiom bitvector_of_interface_of_interface_of_bitvector
 (FORALL (x) (EQ (bitvector_of_interface (interface_of_bitvector x)) x)))

(BG_PUSH
 ;; Why axiom intM_parenttag_Object
 (EQ (parenttag intM_tag Object_tag) |@true|))

(BG_PUSH
 ;; Why axiom interface_int
 (EQ (int_of_tag interface_tag) 1))

(BG_PUSH
 ;; Why axiom interface_of_bitvector_of_bitvector_of_interface
 (FORALL (x) (EQ (interface_of_bitvector (bitvector_of_interface x)) x)))

(BG_PUSH
 ;; Why axiom interface_of_pointer_address_of_pointer_addr
 (FORALL (p) (EQ p (interface_of_pointer_address (pointer_address p)))))

(BG_PUSH
 ;; Why axiom interface_parenttag_bottom
 (EQ (parenttag interface_tag bottom_tag) |@true|))

(BG_PUSH
 ;; Why axiom interface_tags
 (FORALL (x interface_tag_table)
 (instanceof interface_tag_table x interface_tag)))

(DEFPRED (left_valid_struct_Object p a Object_alloc_table)
  (<= (offset_min Object_alloc_table p) a))

(DEFPRED (left_valid_struct_Exception p a Object_alloc_table)
  (left_valid_struct_Object p a Object_alloc_table))

(DEFPRED (left_valid_struct_MullerTheory p a Object_alloc_table)
  (left_valid_struct_Object p a Object_alloc_table))

(DEFPRED (left_valid_struct_String p a Object_alloc_table)
  (left_valid_struct_Object p a Object_alloc_table))

(DEFPRED (left_valid_struct_Throwable p a Object_alloc_table)
  (left_valid_struct_Object p a Object_alloc_table))

(DEFPRED (left_valid_struct_intM p a Object_alloc_table)
  (left_valid_struct_Object p a Object_alloc_table))

(DEFPRED (left_valid_struct_interface p a interface_alloc_table)
  (<= (offset_min interface_alloc_table p) a))

(BG_PUSH
 ;; Why axiom num_of_pos_empty
 (FORALL (intM_intP_t_1_at_L i_0 j_0 t_0)
 (IMPLIES (> i_0 j_0) (EQ (num_of_pos i_0 j_0 t_0 intM_intP_t_1_at_L) 0)))

 (FORALL (i_0 j_0)
 (IMPLIES (> i_0 j_0)
 (FORALL (intM_intP_t_1_at_L t_0)
 (EQ (num_of_pos i_0 j_0 t_0 intM_intP_t_1_at_L) 0)))))

(BG_PUSH
 ;; Why axiom num_of_pos_false_case
 (FORALL (intM_intP_t_1_at_L i_2 j_2 k_0 t_2)
 (IMPLIES
 (AND (<= i_2 j_2) (NOT (> (select intM_intP_t_1_at_L (shift t_2 j_2)) 0)))
 (EQ (num_of_pos i_2 j_2 t_2 intM_intP_t_1_at_L)
 (num_of_pos i_2 (- j_2 1) t_2 intM_intP_t_1_at_L))))

 (FORALL (intM_intP_t_1_at_L i_2 j_2 t_2)
 (IMPLIES
 (AND (<= i_2 j_2) (NOT (> (select intM_intP_t_1_at_L (shift t_2 j_2)) 0)))
 (FORALL (k_0)
 (EQ (num_of_pos i_2 j_2 t_2 intM_intP_t_1_at_L)
 (num_of_pos i_2 (- j_2 1) t_2 intM_intP_t_1_at_L))))))

;; num_of_pos_strictly_increasing, File "HOME/tests/java/MullerTheory.jc", line 36, characters 0-320
(FORALL (intM_intP_t_3_14_at_L i_3 j_3 k_1 l t_3)
(IMPLIES
(AND (< j_3 k_1)
(AND (<= k_1 l) (> (select intM_intP_t_3_14_at_L (shift t_3 k_1)) 0)))
(< (num_of_pos i_3 j_3 t_3 intM_intP_t_3_14_at_L) (num_of_pos
                                                  i_3 l t_3 intM_intP_t_3_14_at_L))))

(BG_PUSH
 ;; Why axiom num_of_pos_strictly_increasing_as_axiom
 (FORALL (intM_intP_t_3_14_at_L i_3 j_3 k_1 l t_3)
 (IMPLIES
 (AND (< j_3 k_1)
 (AND (<= k_1 l) (> (select intM_intP_t_3_14_at_L (shift t_3 k_1)) 0)))
 (< (num_of_pos i_3 j_3 t_3 intM_intP_t_3_14_at_L) (num_of_pos
                                                   i_3 l t_3 intM_intP_t_3_14_at_L))))

 (FORALL (intM_intP_t_3_14_at_L j_3 k_1 l t_3)
 (IMPLIES
 (AND (< j_3 k_1)
 (AND (<= k_1 l) (> (select intM_intP_t_3_14_at_L (shift t_3 k_1)) 0)))
 (FORALL (i_3)
 (< (num_of_pos i_3 j_3 t_3 intM_intP_t_3_14_at_L) (num_of_pos
                                                   i_3 l t_3 intM_intP_t_3_14_at_L))))))

(BG_PUSH
 ;; Why axiom num_of_pos_true_case
 (FORALL (intM_intP_t_1_at_L i_1 j_1 k t_1)
 (IMPLIES
 (AND (<= i_1 j_1) (> (select intM_intP_t_1_at_L (shift t_1 j_1)) 0))
 (EQ (num_of_pos i_1 j_1 t_1 intM_intP_t_1_at_L)
 (+ (num_of_pos i_1 (- j_1 1) t_1 intM_intP_t_1_at_L) 1))))

 (FORALL (intM_intP_t_1_at_L i_1 j_1 t_1)
 (IMPLIES
 (AND (<= i_1 j_1) (> (select intM_intP_t_1_at_L (shift t_1 j_1)) 0))
 (FORALL (k)
 (EQ (num_of_pos i_1 j_1 t_1 intM_intP_t_1_at_L)
 (+ (num_of_pos i_1 (- j_1 1) t_1 intM_intP_t_1_at_L) 1))))))

(BG_PUSH
 ;; Why axiom pointer_addr_of_Object_of_pointer_address
 (FORALL (p) (EQ p (pointer_address (Object_of_pointer_address p)))))

(BG_PUSH
 ;; Why axiom pointer_addr_of_interface_of_pointer_address
 (FORALL (p) (EQ p (pointer_address (interface_of_pointer_address p)))))

(DEFPRED (right_valid_struct_Object p b Object_alloc_table)
  (>= (offset_max Object_alloc_table p) b))

(DEFPRED (right_valid_struct_Exception p b Object_alloc_table)
  (right_valid_struct_Object p b Object_alloc_table))

(DEFPRED (right_valid_struct_MullerTheory p b Object_alloc_table)
  (right_valid_struct_Object p b Object_alloc_table))

(DEFPRED (right_valid_struct_String p b Object_alloc_table)
  (right_valid_struct_Object p b Object_alloc_table))

(DEFPRED (right_valid_struct_Throwable p b Object_alloc_table)
  (right_valid_struct_Object p b Object_alloc_table))

(DEFPRED (right_valid_struct_intM p b Object_alloc_table)
  (right_valid_struct_Object p b Object_alloc_table))

(DEFPRED (right_valid_struct_interface p b interface_alloc_table)
  (>= (offset_max interface_alloc_table p) b))

(DEFPRED (strict_valid_root_Object p a b Object_alloc_table)
  (AND (EQ (offset_min Object_alloc_table p) a)
  (EQ (offset_max Object_alloc_table p) b)))

(DEFPRED (strict_valid_root_interface p a b interface_alloc_table)
  (AND (EQ (offset_min interface_alloc_table p) a)
  (EQ (offset_max interface_alloc_table p) b)))

(DEFPRED (strict_valid_struct_Object p a b Object_alloc_table)
  (AND (EQ (offset_min Object_alloc_table p) a)
  (EQ (offset_max Object_alloc_table p) b)))

(DEFPRED (strict_valid_struct_Exception p a b Object_alloc_table)
  (strict_valid_struct_Object p a b Object_alloc_table))

(DEFPRED (strict_valid_struct_MullerTheory p a b Object_alloc_table)
  (strict_valid_struct_Object p a b Object_alloc_table))

(DEFPRED (strict_valid_struct_String p a b Object_alloc_table)
  (strict_valid_struct_Object p a b Object_alloc_table))

(DEFPRED (strict_valid_struct_Throwable p a b Object_alloc_table)
  (strict_valid_struct_Object p a b Object_alloc_table))

(DEFPRED (strict_valid_struct_intM p a b Object_alloc_table)
  (strict_valid_struct_Object p a b Object_alloc_table))

(DEFPRED (strict_valid_struct_interface p a b interface_alloc_table)
  (AND (EQ (offset_min interface_alloc_table p) a)
  (EQ (offset_max interface_alloc_table p) b)))

(DEFPRED (valid_bitvector_struct_Object p a b bitvector_alloc_table)
  (AND (EQ (offset_min bitvector_alloc_table p) a)
  (EQ (offset_max bitvector_alloc_table p) b)))

(DEFPRED (valid_bitvector_struct_Exception p a b bitvector_alloc_table)
  (valid_bitvector_struct_Object p a b bitvector_alloc_table))

(DEFPRED (valid_bitvector_struct_MullerTheory p a b bitvector_alloc_table)
  (valid_bitvector_struct_Object p a b bitvector_alloc_table))

(DEFPRED (valid_bitvector_struct_String p a b bitvector_alloc_table)
  (valid_bitvector_struct_Object p a b bitvector_alloc_table))

(DEFPRED (valid_bitvector_struct_Throwable p a b bitvector_alloc_table)
  (valid_bitvector_struct_Object p a b bitvector_alloc_table))

(DEFPRED (valid_bitvector_struct_intM p a b bitvector_alloc_table)
  (valid_bitvector_struct_Object p a b bitvector_alloc_table))

(DEFPRED (valid_bitvector_struct_interface p a b bitvector_alloc_table)
  (AND (EQ (offset_min bitvector_alloc_table p) a)
  (EQ (offset_max bitvector_alloc_table p) b)))

(DEFPRED (valid_root_Object p a b Object_alloc_table)
  (AND (<= (offset_min Object_alloc_table p) a)
  (>= (offset_max Object_alloc_table p) b)))

(DEFPRED (valid_root_interface p a b interface_alloc_table)
  (AND (<= (offset_min interface_alloc_table p) a)
  (>= (offset_max interface_alloc_table p) b)))

(DEFPRED (valid_struct_Object p a b Object_alloc_table)
  (AND (<= (offset_min Object_alloc_table p) a)
  (>= (offset_max Object_alloc_table p) b)))

(DEFPRED (valid_struct_Exception p a b Object_alloc_table)
  (valid_struct_Object p a b Object_alloc_table))

(DEFPRED (valid_struct_MullerTheory p a b Object_alloc_table)
  (valid_struct_Object p a b Object_alloc_table))

(DEFPRED (valid_struct_String p a b Object_alloc_table)
  (valid_struct_Object p a b Object_alloc_table))

(DEFPRED (valid_struct_Throwable p a b Object_alloc_table)
  (valid_struct_Object p a b Object_alloc_table))

(DEFPRED (valid_struct_intM p a b Object_alloc_table)
  (valid_struct_Object p a b Object_alloc_table))

(DEFPRED (valid_struct_interface p a b interface_alloc_table)
  (AND (<= (offset_min interface_alloc_table p) a)
  (>= (offset_max interface_alloc_table p) b)))

;; MullerTheory_m_ensures_default_po_1, File "HOME/tests/java/MullerTheory.java", line 22, characters 8-14
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(<= 0 0))))

;; MullerTheory_m_ensures_default_po_2, File "HOME/tests/java/MullerTheory.java", line 22, characters 13-26
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(<= 0 (+ (offset_max Object_t_4_7_alloc_table t_4) 1)))))

;; MullerTheory_m_ensures_default_po_3, File "HOME/tests/java/MullerTheory.java", line 23, characters 8-18
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(<= 0 0))))

;; MullerTheory_m_ensures_default_po_4, File "HOME/tests/java/MullerTheory.java", line 23, characters 13-23
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(<= 0 0))))

;; MullerTheory_m_ensures_default_po_5, File "HOME/tests/java/MullerTheory.java", line 24, characters 8-36
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(EQ 0 (num_of_pos 0 (- 0 1) t_4 intM_intP_t_4_7))))))

;; MullerTheory_m_ensures_default_po_6, File "HOME/tests/java/MullerTheory.java", line 22, characters 8-14
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_4 result)
(FORALL (result0)
(IMPLIES (EQ result0 (select intM_intP_t_4_7 (shift t_4 i_4)))
(IMPLIES (> result0 0)
(FORALL (count0)
(IMPLIES (EQ count0 (+ count 1))
(FORALL (i_4_0) (IMPLIES (EQ i_4_0 (+ i_4 1)) (<= 0 i_4_0))))))))))))))))))

;; MullerTheory_m_ensures_default_po_7, File "HOME/tests/java/MullerTheory.java", line 22, characters 13-26
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_4 result)
(FORALL (result0)
(IMPLIES (EQ result0 (select intM_intP_t_4_7 (shift t_4 i_4)))
(IMPLIES (> result0 0)
(FORALL (count0)
(IMPLIES (EQ count0 (+ count 1))
(FORALL (i_4_0)
(IMPLIES (EQ i_4_0 (+ i_4 1))
(<= i_4_0 (+ (offset_max Object_t_4_7_alloc_table t_4) 1)))))))))))))))))))

;; MullerTheory_m_ensures_default_po_8, File "HOME/tests/java/MullerTheory.java", line 23, characters 8-18
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_4 result)
(FORALL (result0)
(IMPLIES (EQ result0 (select intM_intP_t_4_7 (shift t_4 i_4)))
(IMPLIES (> result0 0)
(FORALL (count0)
(IMPLIES (EQ count0 (+ count 1))
(FORALL (i_4_0) (IMPLIES (EQ i_4_0 (+ i_4 1)) (<= 0 count0))))))))))))))))))

;; MullerTheory_m_ensures_default_po_9, File "HOME/tests/java/MullerTheory.java", line 23, characters 13-23
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_4 result)
(FORALL (result0)
(IMPLIES (EQ result0 (select intM_intP_t_4_7 (shift t_4 i_4)))
(IMPLIES (> result0 0)
(FORALL (count0)
(IMPLIES (EQ count0 (+ count 1))
(FORALL (i_4_0) (IMPLIES (EQ i_4_0 (+ i_4 1)) (<= count0 i_4_0))))))))))))))))))

;; MullerTheory_m_ensures_default_po_10, File "HOME/tests/java/MullerTheory.java", line 24, characters 8-36
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_4 result)
(FORALL (result0)
(IMPLIES (EQ result0 (select intM_intP_t_4_7 (shift t_4 i_4)))
(IMPLIES (> result0 0)
(FORALL (count0)
(IMPLIES (EQ count0 (+ count 1))
(FORALL (i_4_0)
(IMPLIES (EQ i_4_0 (+ i_4 1))
(EQ count0 (num_of_pos 0 (- i_4_0 1) t_4 intM_intP_t_4_7)))))))))))))))))))

;; MullerTheory_m_ensures_default_po_11, File "HOME/tests/java/MullerTheory.java", line 22, characters 8-14
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_4 result)
(FORALL (result0)
(IMPLIES (EQ result0 (select intM_intP_t_4_7 (shift t_4 i_4)))
(IMPLIES (<= result0 0)
(FORALL (i_4_0) (IMPLIES (EQ i_4_0 (+ i_4 1)) (<= 0 i_4_0))))))))))))))))

;; MullerTheory_m_ensures_default_po_12, File "HOME/tests/java/MullerTheory.java", line 22, characters 13-26
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_4 result)
(FORALL (result0)
(IMPLIES (EQ result0 (select intM_intP_t_4_7 (shift t_4 i_4)))
(IMPLIES (<= result0 0)
(FORALL (i_4_0)
(IMPLIES (EQ i_4_0 (+ i_4 1))
(<= i_4_0 (+ (offset_max Object_t_4_7_alloc_table t_4) 1)))))))))))))))))

;; MullerTheory_m_ensures_default_po_13, File "HOME/tests/java/MullerTheory.java", line 23, characters 8-18
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_4 result)
(FORALL (result0)
(IMPLIES (EQ result0 (select intM_intP_t_4_7 (shift t_4 i_4)))
(IMPLIES (<= result0 0)
(FORALL (i_4_0) (IMPLIES (EQ i_4_0 (+ i_4 1)) (<= 0 count))))))))))))))))

;; MullerTheory_m_ensures_default_po_14, File "HOME/tests/java/MullerTheory.java", line 23, characters 13-23
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_4 result)
(FORALL (result0)
(IMPLIES (EQ result0 (select intM_intP_t_4_7 (shift t_4 i_4)))
(IMPLIES (<= result0 0)
(FORALL (i_4_0) (IMPLIES (EQ i_4_0 (+ i_4 1)) (<= count i_4_0))))))))))))))))

;; MullerTheory_m_ensures_default_po_15, File "HOME/tests/java/MullerTheory.java", line 24, characters 8-36
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_4 result)
(FORALL (result0)
(IMPLIES (EQ result0 (select intM_intP_t_4_7 (shift t_4 i_4)))
(IMPLIES (<= result0 0)
(FORALL (i_4_0)
(IMPLIES (EQ i_4_0 (+ i_4 1))
(EQ count (num_of_pos 0 (- i_4_0 1) t_4 intM_intP_t_4_7)))))))))))))))))

;; MullerTheory_m_ensures_default_po_16, File "HOME/tests/java/MullerTheory.java", line 33, characters 8-14
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0) (IMPLIES (EQ count0 0) (<= 0 0))))))))))))))))))

;; MullerTheory_m_ensures_default_po_17, File "HOME/tests/java/MullerTheory.java", line 33, characters 13-26
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(<= 0 (+ (offset_max Object_t_4_7_alloc_table t_4) 1)))))))))))))))))))

;; MullerTheory_m_ensures_default_po_18, File "HOME/tests/java/MullerTheory.java", line 34, characters 8-18
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0) (IMPLIES (EQ count0 0) (<= 0 count0))))))))))))))))))

;; MullerTheory_m_ensures_default_po_19, File "HOME/tests/java/MullerTheory.java", line 34, characters 13-23
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0) (IMPLIES (EQ count0 0) (<= count0 0))))))))))))))))))

;; MullerTheory_m_ensures_default_po_20, File "HOME/tests/java/MullerTheory.java", line 35, characters 8-36
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(EQ count0 (num_of_pos 0 (- 0 1) t_4 intM_intP_t_4_7)))))))))))))))))))

;; MullerTheory_m_ensures_default_po_21, File "HOME/tests/java/MullerTheory.java", line 33, characters 8-14
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(FORALL (intM_intP_MullerTheory_m_9)
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1)
(FORALL (result2)
(IMPLIES (EQ result2 (select intM_intP_t_4_7 (shift t_4 i_5)))
(IMPLIES (> result2 0)
(FORALL (result3)
(IMPLIES (EQ result3 (select intM_intP_t_4_7 (shift t_4 i_5)))
(FORALL (count2)
(IMPLIES (EQ count2 (+ count1 1))
(FORALL (intM_intP_MullerTheory_m_9_0)
(IMPLIES (EQ intM_intP_MullerTheory_m_9_0
         (|why__store|
         intM_intP_MullerTheory_m_9 (shift result0 count1) result3))
(FORALL (i_5_0) (IMPLIES (EQ i_5_0 (+ i_5 1)) (<= 0 i_5_0))))))))))))))))))))))))))))))))))))

;; MullerTheory_m_ensures_default_po_22, File "HOME/tests/java/MullerTheory.java", line 33, characters 13-26
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(FORALL (intM_intP_MullerTheory_m_9)
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1)
(FORALL (result2)
(IMPLIES (EQ result2 (select intM_intP_t_4_7 (shift t_4 i_5)))
(IMPLIES (> result2 0)
(FORALL (result3)
(IMPLIES (EQ result3 (select intM_intP_t_4_7 (shift t_4 i_5)))
(FORALL (count2)
(IMPLIES (EQ count2 (+ count1 1))
(FORALL (intM_intP_MullerTheory_m_9_0)
(IMPLIES (EQ intM_intP_MullerTheory_m_9_0
         (|why__store|
         intM_intP_MullerTheory_m_9 (shift result0 count1) result3))
(FORALL (i_5_0)
(IMPLIES (EQ i_5_0 (+ i_5 1))
(<= i_5_0 (+ (offset_max Object_t_4_7_alloc_table t_4) 1)))))))))))))))))))))))))))))))))))))

;; MullerTheory_m_ensures_default_po_23, File "HOME/tests/java/MullerTheory.java", line 34, characters 8-18
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(FORALL (intM_intP_MullerTheory_m_9)
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1)
(FORALL (result2)
(IMPLIES (EQ result2 (select intM_intP_t_4_7 (shift t_4 i_5)))
(IMPLIES (> result2 0)
(FORALL (result3)
(IMPLIES (EQ result3 (select intM_intP_t_4_7 (shift t_4 i_5)))
(FORALL (count2)
(IMPLIES (EQ count2 (+ count1 1))
(FORALL (intM_intP_MullerTheory_m_9_0)
(IMPLIES (EQ intM_intP_MullerTheory_m_9_0
         (|why__store|
         intM_intP_MullerTheory_m_9 (shift result0 count1) result3))
(FORALL (i_5_0) (IMPLIES (EQ i_5_0 (+ i_5 1)) (<= 0 count2))))))))))))))))))))))))))))))))))))

;; MullerTheory_m_ensures_default_po_24, File "HOME/tests/java/MullerTheory.java", line 34, characters 13-23
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(FORALL (intM_intP_MullerTheory_m_9)
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1)
(FORALL (result2)
(IMPLIES (EQ result2 (select intM_intP_t_4_7 (shift t_4 i_5)))
(IMPLIES (> result2 0)
(FORALL (result3)
(IMPLIES (EQ result3 (select intM_intP_t_4_7 (shift t_4 i_5)))
(FORALL (count2)
(IMPLIES (EQ count2 (+ count1 1))
(FORALL (intM_intP_MullerTheory_m_9_0)
(IMPLIES (EQ intM_intP_MullerTheory_m_9_0
         (|why__store|
         intM_intP_MullerTheory_m_9 (shift result0 count1) result3))
(FORALL (i_5_0) (IMPLIES (EQ i_5_0 (+ i_5 1)) (<= count2 i_5_0))))))))))))))))))))))))))))))))))))

;; MullerTheory_m_ensures_default_po_25, File "HOME/tests/java/MullerTheory.java", line 35, characters 8-36
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(FORALL (intM_intP_MullerTheory_m_9)
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1)
(FORALL (result2)
(IMPLIES (EQ result2 (select intM_intP_t_4_7 (shift t_4 i_5)))
(IMPLIES (> result2 0)
(FORALL (result3)
(IMPLIES (EQ result3 (select intM_intP_t_4_7 (shift t_4 i_5)))
(FORALL (count2)
(IMPLIES (EQ count2 (+ count1 1))
(FORALL (intM_intP_MullerTheory_m_9_0)
(IMPLIES (EQ intM_intP_MullerTheory_m_9_0
         (|why__store|
         intM_intP_MullerTheory_m_9 (shift result0 count1) result3))
(FORALL (i_5_0)
(IMPLIES (EQ i_5_0 (+ i_5 1))
(EQ count2 (num_of_pos 0 (- i_5_0 1) t_4 intM_intP_t_4_7)))))))))))))))))))))))))))))))))))))

;; MullerTheory_m_ensures_default_po_26, File "HOME/tests/java/MullerTheory.java", line 33, characters 8-14
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1)
(FORALL (result2)
(IMPLIES (EQ result2 (select intM_intP_t_4_7 (shift t_4 i_5)))
(IMPLIES (<= result2 0)
(FORALL (i_5_0) (IMPLIES (EQ i_5_0 (+ i_5 1)) (<= 0 i_5_0)))))))))))))))))))))))))))))

;; MullerTheory_m_ensures_default_po_27, File "HOME/tests/java/MullerTheory.java", line 33, characters 13-26
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1)
(FORALL (result2)
(IMPLIES (EQ result2 (select intM_intP_t_4_7 (shift t_4 i_5)))
(IMPLIES (<= result2 0)
(FORALL (i_5_0)
(IMPLIES (EQ i_5_0 (+ i_5 1))
(<= i_5_0 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))))))))))))))))))))))))))))))

;; MullerTheory_m_ensures_default_po_28, File "HOME/tests/java/MullerTheory.java", line 34, characters 8-18
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1)
(FORALL (result2)
(IMPLIES (EQ result2 (select intM_intP_t_4_7 (shift t_4 i_5)))
(IMPLIES (<= result2 0)
(FORALL (i_5_0) (IMPLIES (EQ i_5_0 (+ i_5 1)) (<= 0 count1)))))))))))))))))))))))))))))

;; MullerTheory_m_ensures_default_po_29, File "HOME/tests/java/MullerTheory.java", line 34, characters 13-23
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1)
(FORALL (result2)
(IMPLIES (EQ result2 (select intM_intP_t_4_7 (shift t_4 i_5)))
(IMPLIES (<= result2 0)
(FORALL (i_5_0) (IMPLIES (EQ i_5_0 (+ i_5 1)) (<= count1 i_5_0)))))))))))))))))))))))))))))

;; MullerTheory_m_ensures_default_po_30, File "HOME/tests/java/MullerTheory.java", line 35, characters 8-36
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1)
(FORALL (result2)
(IMPLIES (EQ result2 (select intM_intP_t_4_7 (shift t_4 i_5)))
(IMPLIES (<= result2 0)
(FORALL (i_5_0)
(IMPLIES (EQ i_5_0 (+ i_5 1))
(EQ count1 (num_of_pos 0 (- i_5_0 1) t_4 intM_intP_t_4_7))))))))))))))))))))))))))))))

;; MullerTheory_m_safety_po_1, File "HOME/tests/java/MullerTheory.java", line 27, characters 39-43
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_4 result) (<= (offset_min Object_t_4_7_alloc_table t_4) i_4))))))))))))

;; MullerTheory_m_safety_po_2, File "HOME/tests/java/MullerTheory.java", line 27, characters 39-43
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_4 result) (<= i_4 (offset_max Object_t_4_7_alloc_table t_4)))))))))))))

;; MullerTheory_m_safety_po_3, File "HOME/tests/java/MullerTheory.java", line 25, characters 18-30
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_4 result)
(IMPLIES (AND (<= (offset_min Object_t_4_7_alloc_table t_4) i_4)
         (<= i_4 (offset_max Object_t_4_7_alloc_table t_4)))
(FORALL (result0)
(IMPLIES (EQ result0 (select intM_intP_t_4_7 (shift t_4 i_4)))
(IMPLIES (> result0 0)
(FORALL (count0)
(IMPLIES (EQ count0 (+ count 1))
(FORALL (i_4_0)
(IMPLIES (EQ i_4_0 (+ i_4 1))
(<= 0 (- (+ (offset_max Object_t_4_7_alloc_table t_4) 1) i_4)))))))))))))))))))))

;; MullerTheory_m_safety_po_4, File "HOME/tests/java/MullerTheory.java", line 25, characters 18-30
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_4 result)
(IMPLIES (AND (<= (offset_min Object_t_4_7_alloc_table t_4) i_4)
         (<= i_4 (offset_max Object_t_4_7_alloc_table t_4)))
(FORALL (result0)
(IMPLIES (EQ result0 (select intM_intP_t_4_7 (shift t_4 i_4)))
(IMPLIES (> result0 0)
(FORALL (count0)
(IMPLIES (EQ count0 (+ count 1))
(FORALL (i_4_0)
(IMPLIES (EQ i_4_0 (+ i_4 1))
(< (- (+ (offset_max Object_t_4_7_alloc_table t_4) 1) i_4_0) (- (+ (offset_max
                                                                   Object_t_4_7_alloc_table t_4) 1) i_4)))))))))))))))))))))

;; MullerTheory_m_safety_po_5, File "HOME/tests/java/MullerTheory.java", line 25, characters 18-30
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_4 result)
(IMPLIES (AND (<= (offset_min Object_t_4_7_alloc_table t_4) i_4)
         (<= i_4 (offset_max Object_t_4_7_alloc_table t_4)))
(FORALL (result0)
(IMPLIES (EQ result0 (select intM_intP_t_4_7 (shift t_4 i_4)))
(IMPLIES (<= result0 0)
(FORALL (i_4_0)
(IMPLIES (EQ i_4_0 (+ i_4 1))
(<= 0 (- (+ (offset_max Object_t_4_7_alloc_table t_4) 1) i_4)))))))))))))))))))

;; MullerTheory_m_safety_po_6, File "HOME/tests/java/MullerTheory.java", line 25, characters 18-30
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_4 result)
(IMPLIES (AND (<= (offset_min Object_t_4_7_alloc_table t_4) i_4)
         (<= i_4 (offset_max Object_t_4_7_alloc_table t_4)))
(FORALL (result0)
(IMPLIES (EQ result0 (select intM_intP_t_4_7 (shift t_4 i_4)))
(IMPLIES (<= result0 0)
(FORALL (i_4_0)
(IMPLIES (EQ i_4_0 (+ i_4 1))
(< (- (+ (offset_max Object_t_4_7_alloc_table t_4) 1) i_4_0) (- (+ (offset_max
                                                                   Object_t_4_7_alloc_table t_4) 1) i_4)))))))))))))))))))

;; MullerTheory_m_safety_po_7, File "HOME/tests/java/MullerTheory.java", line 29, characters 11-25
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result) (>= count 0))))))))))))

;; MullerTheory_m_safety_po_8, File "HOME/tests/java/MullerTheory.java", line 39, characters 9-13
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(IMPLIES (>= count 0)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1) (<= (offset_min Object_t_4_7_alloc_table t_4) i_5)))))))))))))))))))))))))))

;; MullerTheory_m_safety_po_9, File "HOME/tests/java/MullerTheory.java", line 39, characters 9-13
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(IMPLIES (>= count 0)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1) (<= i_5 (offset_max Object_t_4_7_alloc_table t_4))))))))))))))))))))))))))))

;; MullerTheory_m_safety_po_10, File "HOME/tests/java/MullerTheory.java", line 39, characters 19-36
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(IMPLIES (>= count 0)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1)
(IMPLIES (AND (<= (offset_min Object_t_4_7_alloc_table t_4) i_5)
         (<= i_5 (offset_max Object_t_4_7_alloc_table t_4)))
(FORALL (result2)
(IMPLIES (EQ result2 (select intM_intP_t_4_7 (shift t_4 i_5)))
(IMPLIES (> result2 0)
(IMPLIES (AND (<= (offset_min Object_t_4_7_alloc_table t_4) i_5)
         (<= i_5 (offset_max Object_t_4_7_alloc_table t_4)))
(FORALL (result3)
(IMPLIES (EQ result3 (select intM_intP_t_4_7 (shift t_4 i_5)))
(FORALL (count2)
(IMPLIES (EQ count2 (+ count1 1))
(<= (offset_min Object_MullerTheory_m_9_alloc_table0 result0) count1))))))))))))))))))))))))))))))))))))

;; MullerTheory_m_safety_po_11, File "HOME/tests/java/MullerTheory.java", line 39, characters 19-36
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(IMPLIES (>= count 0)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1)
(IMPLIES (AND (<= (offset_min Object_t_4_7_alloc_table t_4) i_5)
         (<= i_5 (offset_max Object_t_4_7_alloc_table t_4)))
(FORALL (result2)
(IMPLIES (EQ result2 (select intM_intP_t_4_7 (shift t_4 i_5)))
(IMPLIES (> result2 0)
(IMPLIES (AND (<= (offset_min Object_t_4_7_alloc_table t_4) i_5)
         (<= i_5 (offset_max Object_t_4_7_alloc_table t_4)))
(FORALL (result3)
(IMPLIES (EQ result3 (select intM_intP_t_4_7 (shift t_4 i_5)))
(FORALL (count2)
(IMPLIES (EQ count2 (+ count1 1))
(<= count1 (offset_max Object_MullerTheory_m_9_alloc_table0 result0)))))))))))))))))))))))))))))))))))))

;; MullerTheory_m_safety_po_12, File "HOME/tests/java/MullerTheory.java", line 36, characters 18-30
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(IMPLIES (>= count 0)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(FORALL (intM_intP_MullerTheory_m_9)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1)
(IMPLIES (AND (<= (offset_min Object_t_4_7_alloc_table t_4) i_5)
         (<= i_5 (offset_max Object_t_4_7_alloc_table t_4)))
(FORALL (result2)
(IMPLIES (EQ result2 (select intM_intP_t_4_7 (shift t_4 i_5)))
(IMPLIES (> result2 0)
(IMPLIES (AND (<= (offset_min Object_t_4_7_alloc_table t_4) i_5)
         (<= i_5 (offset_max Object_t_4_7_alloc_table t_4)))
(FORALL (result3)
(IMPLIES (EQ result3 (select intM_intP_t_4_7 (shift t_4 i_5)))
(FORALL (count2)
(IMPLIES (EQ count2 (+ count1 1))
(IMPLIES (AND
         (<= (offset_min Object_MullerTheory_m_9_alloc_table0 result0) count1)
         (<= count1 (offset_max Object_MullerTheory_m_9_alloc_table0 result0)))
(FORALL (intM_intP_MullerTheory_m_9_0)
(IMPLIES (EQ intM_intP_MullerTheory_m_9_0
         (|why__store|
         intM_intP_MullerTheory_m_9 (shift result0 count1) result3))
(FORALL (i_5_0)
(IMPLIES (EQ i_5_0 (+ i_5 1))
(<= 0 (- (+ (offset_max Object_t_4_7_alloc_table t_4) 1) i_5)))))))))))))))))))))))))))))))))))))))))))

;; MullerTheory_m_safety_po_13, File "HOME/tests/java/MullerTheory.java", line 36, characters 18-30
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(IMPLIES (>= count 0)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(FORALL (intM_intP_MullerTheory_m_9)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1)
(IMPLIES (AND (<= (offset_min Object_t_4_7_alloc_table t_4) i_5)
         (<= i_5 (offset_max Object_t_4_7_alloc_table t_4)))
(FORALL (result2)
(IMPLIES (EQ result2 (select intM_intP_t_4_7 (shift t_4 i_5)))
(IMPLIES (> result2 0)
(IMPLIES (AND (<= (offset_min Object_t_4_7_alloc_table t_4) i_5)
         (<= i_5 (offset_max Object_t_4_7_alloc_table t_4)))
(FORALL (result3)
(IMPLIES (EQ result3 (select intM_intP_t_4_7 (shift t_4 i_5)))
(FORALL (count2)
(IMPLIES (EQ count2 (+ count1 1))
(IMPLIES (AND
         (<= (offset_min Object_MullerTheory_m_9_alloc_table0 result0) count1)
         (<= count1 (offset_max Object_MullerTheory_m_9_alloc_table0 result0)))
(FORALL (intM_intP_MullerTheory_m_9_0)
(IMPLIES (EQ intM_intP_MullerTheory_m_9_0
         (|why__store|
         intM_intP_MullerTheory_m_9 (shift result0 count1) result3))
(FORALL (i_5_0)
(IMPLIES (EQ i_5_0 (+ i_5 1))
(< (- (+ (offset_max Object_t_4_7_alloc_table t_4) 1) i_5_0) (- (+ (offset_max
                                                                   Object_t_4_7_alloc_table t_4) 1) i_5)))))))))))))))))))))))))))))))))))))))))))

;; MullerTheory_m_safety_po_14, File "HOME/tests/java/MullerTheory.java", line 36, characters 18-30
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(IMPLIES (>= count 0)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1)
(IMPLIES (AND (<= (offset_min Object_t_4_7_alloc_table t_4) i_5)
         (<= i_5 (offset_max Object_t_4_7_alloc_table t_4)))
(FORALL (result2)
(IMPLIES (EQ result2 (select intM_intP_t_4_7 (shift t_4 i_5)))
(IMPLIES (<= result2 0)
(FORALL (i_5_0)
(IMPLIES (EQ i_5_0 (+ i_5 1))
(<= 0 (- (+ (offset_max Object_t_4_7_alloc_table t_4) 1) i_5))))))))))))))))))))))))))))))))))

;; MullerTheory_m_safety_po_15, File "HOME/tests/java/MullerTheory.java", line 36, characters 18-30
(FORALL (t_4)
(FORALL (Object_t_4_7_alloc_table)
(FORALL (intM_intP_t_4_7)
(FORALL (Object_MullerTheory_m_9_alloc_table)
(IMPLIES (AND (left_valid_struct_intM t_4 0 Object_t_4_7_alloc_table)
         (Non_null_intM t_4 Object_t_4_7_alloc_table))
(FORALL (count)
(FORALL (i_4)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_4)
         (AND (<= i_4 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count)
         (AND (<= count i_4)
         (EQ count (num_of_pos 0 (- i_4 1) t_4 intM_intP_t_4_7))))))
(FORALL (result)
(IMPLIES (AND (<= result constant_too_large_2147483647)
         (AND (>= result 0)
         (AND (EQ result (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (>= i_4 result)
(IMPLIES (>= count 0)
(FORALL (result0)
(FORALL (Object_MullerTheory_m_9_alloc_table0)
(FORALL (Object_MullerTheory_m_9_tag_table)
(IMPLIES (AND
         (strict_valid_struct_intM
         result0 0 (- count 1) Object_MullerTheory_m_9_alloc_table0)
         (AND
         (EQ (alloc_extends
         Object_MullerTheory_m_9_alloc_table Object_MullerTheory_m_9_alloc_table0) |@true|)
         (AND (alloc_fresh Object_MullerTheory_m_9_alloc_table result0 count)
         (instanceof Object_MullerTheory_m_9_tag_table result0 intM_tag))))
(FORALL (count0)
(IMPLIES (EQ count0 0)
(FORALL (count1)
(FORALL (i_5)
(IMPLIES TRUE
(IMPLIES (AND (<= 0 i_5)
         (AND (<= i_5 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (AND (<= 0 count1)
         (AND (<= count1 i_5)
         (EQ count1 (num_of_pos 0 (- i_5 1) t_4 intM_intP_t_4_7))))))
(FORALL (result1)
(IMPLIES (AND (<= result1 constant_too_large_2147483647)
         (AND (>= result1 0)
         (AND (EQ result1 (+ (offset_max Object_t_4_7_alloc_table t_4) 1))
         (EQ |@true| |@true|))))
(IMPLIES (< i_5 result1)
(IMPLIES (AND (<= (offset_min Object_t_4_7_alloc_table t_4) i_5)
         (<= i_5 (offset_max Object_t_4_7_alloc_table t_4)))
(FORALL (result2)
(IMPLIES (EQ result2 (select intM_intP_t_4_7 (shift t_4 i_5)))
(IMPLIES (<= result2 0)
(FORALL (i_5_0)
(IMPLIES (EQ i_5_0 (+ i_5 1))
(< (- (+ (offset_max Object_t_4_7_alloc_table t_4) 1) i_5_0) (- (+ (offset_max
                                                                   Object_t_4_7_alloc_table t_4) 1) i_5))))))))))))))))))))))))))))))))))

========== running Simplify ==========
Running Simplify on proof obligations
(. = valid * = invalid ? = unknown # = timeout ! = failure)
simplify/MullerTheory_why.sx  : ?............................................. (45/0/1/0/0)
total   :  46
valid   :  45 ( 98%)
invalid :   0 (  0%)
unknown :   1 (  2%)
timeout :   0 (  0%)
failure :   0 (  0%)
========== generation of alt-ergo VC output ==========
why -alt-ergo [...] why/MullerTheory.why
========== file tests/java/why/MullerTheory_why.why ==========
logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic div_int : int, int -> int

logic mod_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

logic bool_and : bool, bool -> bool

logic bool_or : bool, bool -> bool

logic bool_xor : bool, bool -> bool

logic bool_not : bool -> bool

axiom bool_and_def:
  (forall a:bool.
    (forall b:bool.
      ((bool_and(a, b) = true) <-> ((a = true) and (b = true)))))

axiom bool_or_def:
  (forall a:bool.
    (forall b:bool. ((bool_or(a, b) = true) <-> ((a = true) or (b = true)))))

axiom bool_xor_def:
  (forall a:bool. (forall b:bool. ((bool_xor(a, b) = true) <-> (a <> b))))

axiom bool_not_def: (forall a:bool. ((bool_not(a) = true) <-> (a = false)))

logic ite : bool, 'a1, 'a1 -> 'a1

axiom ite_true: (forall x:'a1. (forall y:'a1. (ite(true, x, y) = x)))

axiom ite_false: (forall x:'a1. (forall y:'a1. (ite(false, x, y) = y)))

logic lt_int_bool : int, int -> bool

logic le_int_bool : int, int -> bool

logic gt_int_bool : int, int -> bool

logic ge_int_bool : int, int -> bool

logic eq_int_bool : int, int -> bool

logic neq_int_bool : int, int -> bool

axiom lt_int_bool_axiom:
  (forall x:int. (forall y:int. ((lt_int_bool(x, y) = true) <-> (x < y))))

axiom le_int_bool_axiom:
  (forall x:int. (forall y:int. ((le_int_bool(x, y) = true) <-> (x <= y))))

axiom gt_int_bool_axiom:
  (forall x:int. (forall y:int. ((gt_int_bool(x, y) = true) <-> (x > y))))

axiom ge_int_bool_axiom:
  (forall x:int. (forall y:int. ((ge_int_bool(x, y) = true) <-> (x >= y))))

axiom eq_int_bool_axiom:
  (forall x:int. (forall y:int. ((eq_int_bool(x, y) = true) <-> (x = y))))

axiom neq_int_bool_axiom:
  (forall x:int. (forall y:int. ((neq_int_bool(x, y) = true) <-> (x <> y))))

logic abs_int : int -> int

axiom abs_int_pos: (forall x:int. ((x >= 0) -> (abs_int(x) = x)))

axiom abs_int_neg: (forall x:int. ((x <= 0) -> (abs_int(x) = (-x))))

logic int_max : int, int -> int

logic int_min : int, int -> int

axiom int_max_is_ge:
  (forall x:int.
    (forall y:int. ((int_max(x, y) >= x) and (int_max(x, y) >= y))))

axiom int_max_is_some:
  (forall x:int.
    (forall y:int. ((int_max(x, y) = x) or (int_max(x, y) = y))))

axiom int_min_is_le:
  (forall x:int.
    (forall y:int. ((int_min(x, y) <= x) and (int_min(x, y) <= y))))

axiom int_min_is_some:
  (forall x:int.
    (forall y:int. ((int_min(x, y) = x) or (int_min(x, y) = y))))

logic lt_real : real, real -> prop

logic le_real : real, real -> prop

logic gt_real : real, real -> prop

logic ge_real : real, real -> prop

logic eq_real : real, real -> prop

logic neq_real : real, real -> prop

logic add_real : real, real -> real

logic sub_real : real, real -> real

logic mul_real : real, real -> real

logic div_real : real, real -> real

logic neg_real : real -> real

logic real_of_int : int -> real

logic int_of_real : real -> int

logic lt_real_bool : real, real -> bool

logic le_real_bool : real, real -> bool

logic gt_real_bool : real, real -> bool

logic ge_real_bool : real, real -> bool

logic eq_real_bool : real, real -> bool

logic neq_real_bool : real, real -> bool

axiom lt_real_bool_axiom:
  (forall x:real. (forall y:real. ((lt_real_bool(x, y) = true) <-> (x < y))))

axiom le_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((le_real_bool(x, y) = true) <-> (x <= y))))

axiom gt_real_bool_axiom:
  (forall x:real. (forall y:real. ((gt_real_bool(x, y) = true) <-> (x > y))))

axiom ge_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((ge_real_bool(x, y) = true) <-> (x >= y))))

axiom eq_real_bool_axiom:
  (forall x:real. (forall y:real. ((eq_real_bool(x, y) = true) <-> (x = y))))

axiom neq_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((neq_real_bool(x, y) = true) <-> (x <> y))))

logic real_max : real, real -> real

logic real_min : real, real -> real

axiom real_max_is_ge:
  (forall x:real.
    (forall y:real. ((real_max(x, y) >= x) and (real_max(x, y) >= y))))

axiom real_max_is_some:
  (forall x:real.
    (forall y:real. ((real_max(x, y) = x) or (real_max(x, y) = y))))

axiom real_min_is_le:
  (forall x:real.
    (forall y:real. ((real_min(x, y) <= x) and (real_min(x, y) <= y))))

axiom real_min_is_some:
  (forall x:real.
    (forall y:real. ((real_min(x, y) = x) or (real_min(x, y) = y))))

logic sqrt_real : real -> real

logic pow_real : real, real -> real

logic abs_real : real -> real

axiom abs_real_pos:
  (forall x:real [abs_real(x)]. ((x >= 0.0) -> (abs_real(x) = x)))

axiom abs_real_neg:
  (forall x:real [abs_real(x)]. ((x <= 0.0) -> (abs_real(x) = (-x))))

logic exp : real -> real

logic log : real -> real

logic log10 : real -> real

axiom log_exp: (forall x:real. (log(exp(x)) = x))

logic cos : real -> real

logic sin : real -> real

logic tan : real -> real

logic cosh : real -> real

logic sinh : real -> real

logic tanh : real -> real

logic acos : real -> real

logic asin : real -> real

logic atan : real -> real

logic atan2 : real, real -> real

logic hypot : real, real -> real

type 't alloc_table

type 't pointer

type 't block

logic base_block : 'a1 pointer -> 'a1 block

logic pointer_address : 'a1 pointer -> unit pointer

logic absolute_address : int -> unit pointer

logic address : 'a1 pointer -> int

logic offset_max : 'a1 alloc_table, 'a1 pointer -> int

logic offset_min : 'a1 alloc_table, 'a1 pointer -> int

predicate valid(a: 'a1 alloc_table, p: 'a1 pointer) =
  ((offset_min(a, p) <= 0) and (offset_max(a, p) >= 0))

predicate same_block(p: 'a1 pointer, q: 'a1 pointer) =
  (base_block(p) = base_block(q))

logic sub_pointer : 'a1 pointer, 'a1 pointer -> int

logic shift : 'a1 pointer, int -> 'a1 pointer

logic null :  -> 'a1 pointer

axiom address_injective:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. ((p = q) <-> (address(p) = address(q)))))

axiom address_null: (address(null) = 0)

axiom address_positive: (forall p:'a1 pointer. (0 <= address(p)))

axiom address_shift_lt:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) < address(shift(p, j))) <-> (i < j)))))

axiom address_shift_le:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) <= address(shift(p, j))) <-> (i <= j)))))

axiom shift_zero: (forall p:'a1 pointer [shift(p, 0)]. (shift(p, 0) = p))

axiom shift_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(shift(p, i), j)]. (shift(shift(p, i),
        j) = shift(p, (i + j))))))

axiom offset_max_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_max(a, shift(p, i)) = (offset_max(a, p) - i)))))

axiom offset_min_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_min(a, shift(p, i)) = (offset_min(a, p) - i)))))

axiom neq_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(p, i), shift(p, j)].
        ((i <> j) -> (shift(p, i) <> shift(p, j))))))

axiom null_not_valid: (forall a:'a1 alloc_table. (not valid(a, null)))

axiom null_pointer:
  (forall a:'a1 alloc_table.
    ((offset_min(a, null) >= 0) and (offset_max(a, null) <= (-2))))

logic eq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

logic neq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

axiom eq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer. ((eq_pointer_bool(p1, p2) = true) <-> (p1 = p2))))

axiom neq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer.
      ((neq_pointer_bool(p1, p2) = true) <-> (p1 <> p2))))

axiom same_block_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(p, shift(q, i))].
        (same_block(p, q) -> same_block(p, shift(q, i))))))

axiom same_block_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(shift(q, i), p)].
        (same_block(q, p) -> same_block(shift(q, i), p)))))

axiom sub_pointer_shift:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> (p = shift(q, sub_pointer(p, q))))))

axiom sub_pointer_self:
  (forall p:'a1 pointer [sub_pointer(p, p)]. (sub_pointer(p, p) = 0))

axiom sub_pointer_zero:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> ((sub_pointer(p, q) = 0) -> (p = q)))))

axiom sub_pointer_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(shift(p, i), q)]. (sub_pointer(shift(p, i),
        q) = (sub_pointer(p, q) + i)))))

axiom sub_pointer_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(p, shift(q, i))]. (sub_pointer(p, shift(q,
        i)) = (sub_pointer(p, q) - i)))))

type ('t, 'v) memory

logic select : ('a2, 'a1) memory, 'a2 pointer -> 'a1

logic store : ('a1, 'a2) memory, 'a1 pointer, 'a2 -> ('a1, 'a2) memory

axiom select_store_eq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 = p2) -> (select(store(m, p1, a), p2) = a))))))

axiom select_store_neq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 <> p2) -> (select(store(m, p1, a), p2) = select(m, p2)))))))

type 't pset

logic pset_empty :  -> 'a1 pset

logic pset_singleton : 'a1 pointer -> 'a1 pset

logic pset_deref : ('a2, 'a1 pointer) memory, 'a2 pset -> 'a1 pset

logic pset_union : 'a1 pset, 'a1 pset -> 'a1 pset

logic pset_all : 'a1 pset -> 'a1 pset

logic pset_range : 'a1 pset, int, int -> 'a1 pset

logic pset_range_left : 'a1 pset, int -> 'a1 pset

logic pset_range_right : 'a1 pset, int -> 'a1 pset

logic in_pset : 'a1 pointer, 'a1 pset -> prop

logic valid_pset : 'a1 alloc_table, 'a1 pset -> prop

predicate pset_disjoint(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (not (in_pset(p, ps1) and in_pset(p, ps2))))

predicate pset_included(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (in_pset(p, ps1) -> in_pset(p, ps2)))

axiom pset_included_self: (forall ps:'a1 pset. pset_included(ps, ps))

axiom pset_included_range:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))].
            (((c <= a) and (b <= d)) -> pset_included(pset_range(ps, a, b),
             pset_range(ps, c, d))))))))

axiom pset_included_range_all:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))]. pset_included(pset_range(ps, a, b), pset_all(ps)))))))

axiom in_pset_empty: (forall p:'a1 pointer. (not in_pset(p, pset_empty)))

axiom in_pset_singleton:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. (in_pset(p, pset_singleton(q)) <-> (p = q))))

axiom in_pset_deref:
  (forall p:'a1 pointer.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (in_pset(p, pset_deref(m, q)) <->
         (exists r:'a2 pointer. (in_pset(r, q) and (p = select(m, r))))))))

axiom in_pset_all:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (in_pset(p, pset_all(q)) <->
       (exists i:int.
         (exists r:'a1 pointer. (in_pset(r, q) and (p = shift(r, i))))))))

axiom in_pset_range:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (forall b:int.
          (in_pset(p, pset_range(q, a, b)) <->
           (exists i:int.
             (exists r:'a1 pointer.
               ((a <= i) and
                ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))))

axiom in_pset_range_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall b:int.
        (in_pset(p, pset_range_left(q, b)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_range_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (in_pset(p, pset_range_right(q, a)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((a <= i) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_union:
  (forall p:'a1 pointer.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (in_pset(p, pset_union(s1, s2)) <->
         (in_pset(p, s1) or in_pset(p, s2))))))

axiom valid_pset_empty: (forall a:'a1 alloc_table. valid_pset(a, pset_empty))

axiom valid_pset_singleton:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (valid_pset(a, pset_singleton(p)) <-> valid(a, p))))

axiom valid_pset_deref:
  (forall a:'a1 alloc_table.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (valid_pset(a, pset_deref(m, q)) <->
         (forall r:'a2 pointer.
           (forall p:'a1 pointer.
             ((in_pset(r, q) and (p = select(m, r))) -> valid(a, p))))))))

axiom valid_pset_range:
  (forall a:'a1 alloc_table.
    (forall q:'a1 pset.
      (forall c:int.
        (forall d:int.
          (valid_pset(a, pset_range(q, c, d)) <->
           (forall i:int.
             (forall r:'a1 pointer.
               ((in_pset(r, q) and ((c <= i) and (i <= d))) -> valid(a,
                shift(r, i))))))))))

axiom valid_pset_union:
  (forall a:'a1 alloc_table.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (valid_pset(a, pset_union(s1, s2)) <->
         (valid_pset(a, s1) and valid_pset(a, s2))))))

predicate not_assigns(a: 'a1 alloc_table, m1: ('a1, 'a2) memory, m2: ('a1,
  'a2) memory, l: 'a1 pset) =
  (forall p:'a1 pointer.
    ((valid(a, p) and (not in_pset(p, l))) -> (select(m2, p) = select(m1, p))))

axiom not_assigns_refl:
  (forall a:'a1 alloc_table.
    (forall m:('a1, 'a2) memory.
      (forall l:'a1 pset. not_assigns(a, m, m, l))))

axiom not_assigns_trans:
  (forall a:'a1 alloc_table.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory.
          (forall l:'a1 pset [not_assigns(a, m1, m2, l), not_assigns(a, m1,
            m3, l)].
            (not_assigns(a, m1, m2, l) ->
             (not_assigns(a, m2, m3, l) -> not_assigns(a, m1, m3, l))))))))

logic full_separated : 'a1 pointer, 'a2 pointer -> prop

axiom full_separated_shift1:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(p, shift(q, i))))))

axiom full_separated_shift2:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift3:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift4:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(p, shift(q, i))))))

type 't tag_table

type 't tag_id

logic int_of_tag : 'a1 tag_id -> int

logic typeof : 'a1 tag_table, 'a1 pointer -> 'a1 tag_id

logic parenttag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag_bool : 'a1 tag_id, 'a1 tag_id -> bool

axiom subtag_bool_def:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id. ((subtag_bool(t1, t2) = true) <-> subtag(t1, t2))))

axiom subtag_refl: (forall t:'a1 tag_id. subtag(t, t))

axiom subtag_parent:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id.
      (forall t3:'a1 tag_id.
        (subtag(t1, t2) -> (parenttag(t2, t3) -> subtag(t1, t3))))))

predicate instanceof(a: 'a1 tag_table, p: 'a1 pointer, t: 'a1 tag_id) =
  subtag(typeof(a, p), t)

logic downcast : 'a1 tag_table, 'a1 pointer, 'a1 tag_id -> 'a1 pointer

axiom downcast_instanceof:
  (forall a:'a1 tag_table.
    (forall p:'a1 pointer.
      (forall s:'a1 tag_id. (instanceof(a, p, s) -> (downcast(a, p, s) = p)))))

logic bottom_tag :  -> 'a1 tag_id

axiom bottom_tag_axiom: (forall t:'a1 tag_id. subtag(t, bottom_tag))

predicate root_tag(t: 'a1 tag_id) = parenttag(t, bottom_tag)

axiom root_subtag:
  (forall a:'a1 tag_id.
    (forall b:'a1 tag_id.
      (forall c:'a1 tag_id.
        (root_tag(a) ->
         (root_tag(b) -> ((a <> b) -> (subtag(c, a) -> (not subtag(c, b)))))))))

predicate fully_packed(tag_table: 'a1 tag_table, mutable: ('a1,
  'a1 tag_id) memory, this: 'a1 pointer) = (select(mutable,
  this) = typeof(tag_table, this))

logic bw_compl : int -> int

logic bw_and : int, int -> int

axiom bw_and_not_null:
  (forall a:int.
    (forall b:int. ((bw_and(a, b) <> 0) -> ((a <> 0) and (b <> 0)))))

logic bw_xor : int, int -> int

logic bw_or : int, int -> int

logic lsl : int, int -> int

axiom lsl_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsl(a, b)))))

axiom lsl_left_positive_monotone:
  (forall a1:int.
    (forall a2:int.
      (forall b:int.
        (((0 <= a1) and ((a1 <= a2) and (0 <= b))) -> (lsl(a1, b) <= lsl(a2,
         b))))))

logic lsr : int, int -> int

axiom lsr_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsr(a, b)))))

axiom lsr_left_positive_decreases:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(a, b) <= a))))

logic asr : int, int -> int

axiom asr_positive_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= asr(a, b)))))

axiom asr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) <= a))))

axiom asr_lsr_same_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) = lsr(a, b)))))

axiom lsl_of_lsr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsl(lsr(a, b), b) <= a))))

axiom lsr_of_lsl_identity_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(lsl(a, b), b) = a))))

logic alloc_extends : 'a1 alloc_table, 'a1 alloc_table -> prop

predicate alloc_fresh(a: 'a1 alloc_table, p: 'a1 pointer, n: int) =
  (forall i:int. (((0 <= i) and (i < n)) -> (not valid(a, shift(p, i)))))

axiom alloc_extends_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_min(a1, p) = offset_min(a2, p)))))))

axiom alloc_extends_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_max(a1, p) = offset_max(a2, p)))))))

axiom alloc_extends_not_assigns_empty:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory.
          (forall l:'a1 pset.
            (forall p:'a1 pointer.
              (forall n:int [alloc_extends(a1, a2), alloc_fresh(a1, p, n),
                not_assigns(a2, m1, m2, l)].
                ((alloc_extends(a1, a2) and
                  (alloc_fresh(a1, p, n) and
                   (not_assigns(a2, m1, m2, l) and pset_included(l,
                    pset_all(pset_singleton(p)))))) ->
                 not_assigns(a1, m1, m2, pset_empty)))))))))

logic alloc_extends_except : 'a1 alloc_table, 'a1 alloc_table,
'a1 pset -> prop

axiom alloc_extends_except_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_min(a1,
            p) = offset_min(a2, p))))))))

axiom alloc_extends_except_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_max(a1,
            p) = offset_max(a2, p))))))))

type bitvector

logic concat_bitvector : bitvector, bitvector -> bitvector

logic offset_min_bytes : 'a1 alloc_table, 'a1 pointer, int -> int

logic offset_max_bytes : 'a1 alloc_table, 'a1 pointer, int -> int

axiom offset_min_bytes_def:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall s:int [offset_min_bytes(a, p, s)].
        ((0 < s) ->
         ((offset_min(a, p) <= (s * offset_min_bytes(a, p, s))) and
          (((s * offset_min_bytes(a, p, s)) - s) < offset_min(a, p)))))))

axiom offset_max_bytes_def:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall s:int [offset_max_bytes(a, p, s)].
        ((0 < s) ->
         (((((s * offset_max_bytes(a, p, s)) + s) - 1) <= offset_max(a,
          p)) and (offset_max(a, p) < ((((s * offset_max_bytes(a, p,
          s)) + s) + s) - 1)))))))

logic extract_bytes : bitvector, int, int -> bitvector

logic replace_bytes : bitvector, int, int, bitvector -> bitvector

axiom select_store_eq_union:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector [extract_bytes(replace_bytes(v1, o1, s1,
              v2), o2, s2)].
              (((o1 = o2) and (s1 = s2)) -> (extract_bytes(replace_bytes(v1,
               o1, s1, v2), o2, s2) = v2))))))))

axiom select_store_neq_union:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector [extract_bytes(replace_bytes(v1, o1, s1,
              v2), o2, s2)].
              ((((o2 + s2) <= o1) or ((o1 + s2) <= o2)) ->
               (extract_bytes(replace_bytes(v1, o1, s1, v2), o2,
               s2) = extract_bytes(v1, o2, s2)))))))))

axiom concat_replace_bytes_up:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector.
              (forall v3:bitvector [replace_bytes(replace_bytes(v1, o1, s1,
                v2), o2, s2, v3)].
                (((o1 + s1) = o2) -> (replace_bytes(replace_bytes(v1, o1, s1,
                 v2), o2, s2, v3) = replace_bytes(v1, o1, (s1 + s2),
                 concat_bitvector(v2, v3)))))))))))

axiom concat_replace_bytes_down:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v1:bitvector.
            (forall v2:bitvector.
              (forall v3:bitvector [replace_bytes(replace_bytes(v1, o1, s1,
                v2), o2, s2, v3)].
                (((o2 + s2) = o1) -> (replace_bytes(replace_bytes(v1, o1, s1,
                 v2), o2, s2, v3) = replace_bytes(v1, o2, (s1 + s2),
                 concat_bitvector(v3, v2)))))))))))

axiom concat_extract_bytes:
  (forall o1:int.
    (forall s1:int.
      (forall o2:int.
        (forall s2:int.
          (forall v:bitvector [concat_bitvector(extract_bytes(v, o1, s1),
            extract_bytes(v, o2, s2))].
            (((o1 + s1) = o2) -> (concat_bitvector(extract_bytes(v, o1, s1),
             extract_bytes(v, o2, s2)) = extract_bytes(v, o1, (s1 + s2)))))))))

logic select_bytes : ('a1, bitvector) memory, 'a1 pointer, int,
int -> bitvector

logic store_bytes : ('a1, bitvector) memory, 'a1 pointer, int, int,
bitvector -> ('a1, bitvector) memory

axiom select_store_eq_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall o1:int.
          (forall s1:int.
            (forall o2:int.
              (forall s2:int.
                (forall v:bitvector [select_bytes(store_bytes(m, p1, o1, s1,
                  v), p2, o2, s2)].
                  (((p1 = p2) and ((o1 = o2) and (s1 = s2))) ->
                   (select_bytes(store_bytes(m, p1, o1, s1, v), p2, o2,
                   s2) = v))))))))))

axiom select_store_neq_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall o1:int.
          (forall s1:int.
            (forall o2:int.
              (forall s2:int.
                (forall v:bitvector [select_bytes(store_bytes(m, p1, o1, s1,
                  v), p2, o2, s2)].
                  (pset_disjoint(pset_range(pset_singleton(p1), o1,
                   (o1 + s1)), pset_range(pset_singleton(p2), o2,
                   (o2 + s2))) -> (select_bytes(store_bytes(m, p1, o1, s1,
                   v), p2, o2, s2) = select_bytes(m, p2, o2, s2)))))))))))

axiom shift_store_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall i:int.
        (forall o:int.
          (forall s:int.
            (forall v:bitvector [store_bytes(m, shift(p, i), o, s, v)].
              (store_bytes(m, shift(p, i), o, s, v) = store_bytes(m, p,
              (o + i), s, v))))))))

axiom shift_select_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall i:int.
        (forall o:int.
          (forall s:int.
            (forall v:bitvector [select_bytes(m, shift(p, i), o, s)].
              (select_bytes(m, shift(p, i), o, s) = select_bytes(m, p,
              (o + i), s))))))))

axiom concat_store_bytes_up:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall o1:int.
        (forall s1:int.
          (forall o2:int.
            (forall s2:int.
              (forall v1:bitvector.
                (forall v2:bitvector [store_bytes(store_bytes(m, p, o1, s1,
                  v1), p, o2, s2, v2)].
                  (((o1 + s1) = o2) -> (store_bytes(store_bytes(m, p, o1, s1,
                   v1), p, o2, s2, v2) = store_bytes(m, p, o1, (s1 + s2),
                   concat_bitvector(v1, v2))))))))))))

axiom concat_store_bytes_down:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall o1:int.
        (forall s1:int.
          (forall o2:int.
            (forall s2:int.
              (forall v1:bitvector.
                (forall v2:bitvector [store_bytes(store_bytes(m, p, o1, s1,
                  v1), p, o2, s2, v2)].
                  (((o2 + s2) = o1) -> (store_bytes(store_bytes(m, p, o1, s1,
                   v1), p, o2, s2, v2) = store_bytes(m, p, o2, (s1 + s2),
                   concat_bitvector(v2, v1))))))))))))

axiom concat_select_bytes:
  (forall m:('a1, bitvector) memory.
    (forall p:'a1 pointer.
      (forall o1:int.
        (forall s1:int.
          (forall o2:int.
            (forall s2:int [concat_bitvector(select_bytes(m, p, o1, s1),
              select_bytes(m, p, o2, s2))].
              (((o1 + s1) = o2) -> (concat_bitvector(select_bytes(m, p, o1,
               s1), select_bytes(m, p, o2, s2)) = select_bytes(m, p, o1,
               (s1 + s2))))))))))

type Object

type interface

logic Exception_tag :  -> Object tag_id

logic Object_tag :  -> Object tag_id

axiom Exception_parenttag_Object: parenttag(Exception_tag, Object_tag)

logic MullerTheory_tag :  -> Object tag_id

axiom MullerTheory_parenttag_Object: parenttag(MullerTheory_tag, Object_tag)

predicate Non_null_Object(x_0: Object pointer,
  Object_x_3_alloc_table: Object alloc_table) =
  (offset_max(Object_x_3_alloc_table, x_0) = 0)

predicate Non_null_intM(x: Object pointer,
  Object_x_2_alloc_table: Object alloc_table) =
  (offset_max(Object_x_2_alloc_table, x) >= (-1))

axiom Object_int: (int_of_tag(Object_tag) = 1)

logic Object_of_bitvector : bitvector -> Object pointer

logic bitvector_of_Object : Object pointer -> bitvector

axiom Object_of_bitvector_of_bitvector_of_Object:
  (forall x:Object pointer.
    (Object_of_bitvector(bitvector_of_Object(x)) = x))

logic Object_of_pointer_address : unit pointer -> Object pointer

axiom Object_of_pointer_address_of_pointer_addr:
  (forall p:Object pointer.
    (p = Object_of_pointer_address(pointer_address(p))))

axiom Object_parenttag_bottom: parenttag(Object_tag, bottom_tag)

axiom Object_tags:
  (forall x:Object pointer.
    (forall Object_tag_table:Object tag_table. instanceof(Object_tag_table,
      x, Object_tag)))

logic String_tag :  -> Object tag_id

axiom String_parenttag_Object: parenttag(String_tag, Object_tag)

logic Throwable_tag :  -> Object tag_id

axiom Throwable_parenttag_Object: parenttag(Throwable_tag, Object_tag)

axiom bitvector_of_Object_of_Object_of_bitvector:
  (forall x:bitvector. (bitvector_of_Object(Object_of_bitvector(x)) = x))

logic bitvector_of_interface : interface pointer -> bitvector

logic interface_of_bitvector : bitvector -> interface pointer

axiom bitvector_of_interface_of_interface_of_bitvector:
  (forall x:bitvector.
    (bitvector_of_interface(interface_of_bitvector(x)) = x))

logic intM_tag :  -> Object tag_id

axiom intM_parenttag_Object: parenttag(intM_tag, Object_tag)

logic interface_tag :  -> interface tag_id

axiom interface_int: (int_of_tag(interface_tag) = 1)

axiom interface_of_bitvector_of_bitvector_of_interface:
  (forall x:interface pointer.
    (interface_of_bitvector(bitvector_of_interface(x)) = x))

logic interface_of_pointer_address : unit pointer -> interface pointer

axiom interface_of_pointer_address_of_pointer_addr:
  (forall p:interface pointer.
    (p = interface_of_pointer_address(pointer_address(p))))

axiom interface_parenttag_bottom: parenttag(interface_tag, bottom_tag)

axiom interface_tags:
  (forall x:interface pointer.
    (forall interface_tag_table:interface tag_table.
      instanceof(interface_tag_table, x, interface_tag)))

predicate left_valid_struct_Object(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = (offset_min(Object_alloc_table,
  p) <= a)

predicate left_valid_struct_Exception(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_MullerTheory(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_String(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_Throwable(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_intM(p: Object pointer, a: int,
  Object_alloc_table: Object alloc_table) = left_valid_struct_Object(p, a,
  Object_alloc_table)

predicate left_valid_struct_interface(p: interface pointer, a: int,
  interface_alloc_table: interface alloc_table) =
  (offset_min(interface_alloc_table, p) <= a)

logic num_of_pos : int, int, Object pointer, (Object, int) memory -> int

axiom num_of_pos_empty:
  (forall intM_intP_t_1_at_L:(Object, int) memory.
    (forall i_0:int.
      (forall j_0:int.
        (forall t_0:Object pointer.
          ((i_0 > j_0) -> (num_of_pos(i_0, j_0, t_0, intM_intP_t_1_at_L) = 0))))))

axiom num_of_pos_false_case:
  (forall intM_intP_t_1_at_L:(Object, int) memory.
    (forall i_2:int.
      (forall j_2:int.
        (forall k_0:int.
          (forall t_2:Object pointer.
            (((i_2 <= j_2) and (not (select(intM_intP_t_1_at_L, shift(t_2,
              j_2)) > 0))) ->
             (num_of_pos(i_2, j_2, t_2, intM_intP_t_1_at_L) = num_of_pos(i_2,
             (j_2 - 1), t_2, intM_intP_t_1_at_L))))))))

goal num_of_pos_strictly_increasing:
  (forall intM_intP_t_3_14_at_L:(Object, int) memory.
    (forall i_3:int.
      (forall j_3:int.
        (forall k_1:int.
          (forall l:int.
            (forall t_3:Object pointer.
              (((j_3 < k_1) and
                ((k_1 <= l) and (select(intM_intP_t_3_14_at_L, shift(t_3,
                 k_1)) > 0))) ->
               (num_of_pos(i_3, j_3, t_3,
               intM_intP_t_3_14_at_L) < num_of_pos(i_3, l, t_3,
               intM_intP_t_3_14_at_L)))))))))

axiom num_of_pos_strictly_increasing_as_axiom:
  (forall intM_intP_t_3_14_at_L:(Object, int) memory.
    (forall i_3:int.
      (forall j_3:int.
        (forall k_1:int.
          (forall l:int.
            (forall t_3:Object pointer.
              (((j_3 < k_1) and
                ((k_1 <= l) and (select(intM_intP_t_3_14_at_L, shift(t_3,
                 k_1)) > 0))) ->
               (num_of_pos(i_3, j_3, t_3,
               intM_intP_t_3_14_at_L) < num_of_pos(i_3, l, t_3,
               intM_intP_t_3_14_at_L)))))))))

axiom num_of_pos_true_case:
  (forall intM_intP_t_1_at_L:(Object, int) memory.
    (forall i_1:int.
      (forall j_1:int.
        (forall k:int.
          (forall t_1:Object pointer.
            (((i_1 <= j_1) and (select(intM_intP_t_1_at_L, shift(t_1,
              j_1)) > 0)) ->
             (num_of_pos(i_1, j_1, t_1,
             intM_intP_t_1_at_L) = (num_of_pos(i_1, (j_1 - 1), t_1,
             intM_intP_t_1_at_L) + 1))))))))

axiom pointer_addr_of_Object_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(Object_of_pointer_address(p))))

axiom pointer_addr_of_interface_of_pointer_address:
  (forall p:unit pointer.
    (p = pointer_address(interface_of_pointer_address(p))))

predicate right_valid_struct_Object(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = (offset_max(Object_alloc_table,
  p) >= b)

predicate right_valid_struct_Exception(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_MullerTheory(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_String(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_Throwable(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_intM(p: Object pointer, b: int,
  Object_alloc_table: Object alloc_table) = right_valid_struct_Object(p, b,
  Object_alloc_table)

predicate right_valid_struct_interface(p: interface pointer, b: int,
  interface_alloc_table: interface alloc_table) =
  (offset_max(interface_alloc_table, p) >= b)

predicate strict_valid_root_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) = a) and
   (offset_max(Object_alloc_table, p) = b))

predicate strict_valid_root_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) = a) and
   (offset_max(interface_alloc_table, p) = b))

predicate strict_valid_struct_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) = a) and
   (offset_max(Object_alloc_table, p) = b))

predicate strict_valid_struct_Exception(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_MullerTheory(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_String(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_Throwable(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_intM(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = strict_valid_struct_Object(p, a,
  b, Object_alloc_table)

predicate strict_valid_struct_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) = a) and
   (offset_max(interface_alloc_table, p) = b))

predicate valid_bitvector_struct_Object(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_Exception(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) = valid_bitvector_struct_Object(p,
  a, b, bitvector_alloc_table)

predicate valid_bitvector_struct_MullerTheory(p: unit pointer, a: int,
  b: int, bitvector_alloc_table: unit alloc_table) =
  valid_bitvector_struct_Object(p, a, b, bitvector_alloc_table)

predicate valid_bitvector_struct_String(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) = valid_bitvector_struct_Object(p,
  a, b, bitvector_alloc_table)

predicate valid_bitvector_struct_Throwable(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) = valid_bitvector_struct_Object(p,
  a, b, bitvector_alloc_table)

predicate valid_bitvector_struct_intM(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) = valid_bitvector_struct_Object(p,
  a, b, bitvector_alloc_table)

predicate valid_bitvector_struct_interface(p: unit pointer, a: int, b: int,
  bitvector_alloc_table: unit alloc_table) =
  ((offset_min(bitvector_alloc_table, p) = a) and
   (offset_max(bitvector_alloc_table, p) = b))

predicate valid_root_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) <= a) and
   (offset_max(Object_alloc_table, p) >= b))

predicate valid_root_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) <= a) and
   (offset_max(interface_alloc_table, p) >= b))

predicate valid_struct_Object(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) =
  ((offset_min(Object_alloc_table, p) <= a) and
   (offset_max(Object_alloc_table, p) >= b))

predicate valid_struct_Exception(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_MullerTheory(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_String(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_Throwable(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_intM(p: Object pointer, a: int, b: int,
  Object_alloc_table: Object alloc_table) = valid_struct_Object(p, a, b,
  Object_alloc_table)

predicate valid_struct_interface(p: interface pointer, a: int, b: int,
  interface_alloc_table: interface alloc_table) =
  ((offset_min(interface_alloc_table, p) <= a) and
   (offset_max(interface_alloc_table, p) >= b))

goal MullerTheory_m_ensures_default_po_1:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  ("JC_75": ("JC_70": ("JC_70": (0 <= 0))))

goal MullerTheory_m_ensures_default_po_2:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  ("JC_75":
  ("JC_71":
  ("JC_71": (0 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1)))))

goal MullerTheory_m_ensures_default_po_3:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  ("JC_75": ("JC_72": ("JC_72": (0 <= 0))))

goal MullerTheory_m_ensures_default_po_4:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  ("JC_75": ("JC_73": ("JC_73": (0 <= 0))))

goal MullerTheory_m_ensures_default_po_5:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  ("JC_75":
  ("JC_74": ("JC_74": (0 = num_of_pos(0, (0 - 1), t_4, intM_intP_t_4_7)))))

goal MullerTheory_m_ensures_default_po_6:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 > 0) ->
  forall count0:int.
  (count0 = (count + 1)) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75": ("JC_70": ("JC_70": (0 <= i_4_0))))

goal MullerTheory_m_ensures_default_po_7:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 > 0) ->
  forall count0:int.
  (count0 = (count + 1)) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75":
  ("JC_71":
  ("JC_71": (i_4_0 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1)))))

goal MullerTheory_m_ensures_default_po_8:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 > 0) ->
  forall count0:int.
  (count0 = (count + 1)) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75": ("JC_72": ("JC_72": (0 <= count0))))

goal MullerTheory_m_ensures_default_po_9:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 > 0) ->
  forall count0:int.
  (count0 = (count + 1)) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75": ("JC_73": ("JC_73": (count0 <= i_4_0))))

goal MullerTheory_m_ensures_default_po_10:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 > 0) ->
  forall count0:int.
  (count0 = (count + 1)) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75":
  ("JC_74":
  ("JC_74": (count0 = num_of_pos(0, (i_4_0 - 1), t_4, intM_intP_t_4_7)))))

goal MullerTheory_m_ensures_default_po_11:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 <= 0) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75": ("JC_70": ("JC_70": (0 <= i_4_0))))

goal MullerTheory_m_ensures_default_po_12:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 <= 0) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75":
  ("JC_71":
  ("JC_71": (i_4_0 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1)))))

goal MullerTheory_m_ensures_default_po_13:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 <= 0) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75": ("JC_72": ("JC_72": (0 <= count))))

goal MullerTheory_m_ensures_default_po_14:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 <= 0) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75": ("JC_73": ("JC_73": (count <= i_4_0))))

goal MullerTheory_m_ensures_default_po_15:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 <= 0) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  ("JC_75":
  ("JC_74":
  ("JC_74": (count = num_of_pos(0, (i_4_0 - 1), t_4, intM_intP_t_4_7)))))

goal MullerTheory_m_ensures_default_po_16:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  ("JC_87": ("JC_82": ("JC_82": (0 <= 0))))

goal MullerTheory_m_ensures_default_po_17:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  ("JC_87":
  ("JC_83":
  ("JC_83": (0 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1)))))

goal MullerTheory_m_ensures_default_po_18:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  ("JC_87": ("JC_84": ("JC_84": (0 <= count0))))

goal MullerTheory_m_ensures_default_po_19:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  ("JC_87": ("JC_85": ("JC_85": (count0 <= 0))))

goal MullerTheory_m_ensures_default_po_20:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  ("JC_87":
  ("JC_86":
  ("JC_86": (count0 = num_of_pos(0, (0 - 1), t_4, intM_intP_t_4_7)))))

goal MullerTheory_m_ensures_default_po_21:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  forall intM_intP_MullerTheory_m_9:(Object,
  int) memory.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  forall intM_intP_MullerTheory_m_9_0:(Object,
  int) memory.
  (intM_intP_MullerTheory_m_9_0 = store(intM_intP_MullerTheory_m_9,
  shift(result0, count1), result3)) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87": ("JC_82": ("JC_82": (0 <= i_5_0))))

goal MullerTheory_m_ensures_default_po_22:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  forall intM_intP_MullerTheory_m_9:(Object,
  int) memory.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  forall intM_intP_MullerTheory_m_9_0:(Object,
  int) memory.
  (intM_intP_MullerTheory_m_9_0 = store(intM_intP_MullerTheory_m_9,
  shift(result0, count1), result3)) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87":
  ("JC_83":
  ("JC_83": (i_5_0 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1)))))

goal MullerTheory_m_ensures_default_po_23:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  forall intM_intP_MullerTheory_m_9:(Object,
  int) memory.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  forall intM_intP_MullerTheory_m_9_0:(Object,
  int) memory.
  (intM_intP_MullerTheory_m_9_0 = store(intM_intP_MullerTheory_m_9,
  shift(result0, count1), result3)) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87": ("JC_84": ("JC_84": (0 <= count2))))

goal MullerTheory_m_ensures_default_po_24:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  forall intM_intP_MullerTheory_m_9:(Object,
  int) memory.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  forall intM_intP_MullerTheory_m_9_0:(Object,
  int) memory.
  (intM_intP_MullerTheory_m_9_0 = store(intM_intP_MullerTheory_m_9,
  shift(result0, count1), result3)) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87": ("JC_85": ("JC_85": (count2 <= i_5_0))))

goal MullerTheory_m_ensures_default_po_25:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  forall intM_intP_MullerTheory_m_9:(Object,
  int) memory.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  forall intM_intP_MullerTheory_m_9_0:(Object,
  int) memory.
  (intM_intP_MullerTheory_m_9_0 = store(intM_intP_MullerTheory_m_9,
  shift(result0, count1), result3)) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87":
  ("JC_86":
  ("JC_86": (count2 = num_of_pos(0, (i_5_0 - 1), t_4, intM_intP_t_4_7)))))

goal MullerTheory_m_ensures_default_po_26:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 <= 0) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87": ("JC_82": ("JC_82": (0 <= i_5_0))))

goal MullerTheory_m_ensures_default_po_27:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 <= 0) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87":
  ("JC_83":
  ("JC_83": (i_5_0 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1)))))

goal MullerTheory_m_ensures_default_po_28:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 <= 0) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87": ("JC_84": ("JC_84": (0 <= count1))))

goal MullerTheory_m_ensures_default_po_29:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 <= 0) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87": ("JC_85": ("JC_85": (count1 <= i_5_0))))

goal MullerTheory_m_ensures_default_po_30:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_75":
  (("JC_70": (0 <= i_4)) and
   (("JC_71": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_72": (0 <= count)) and
     (("JC_73": (count <= i_4)) and
      ("JC_74": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_87":
  (("JC_82": (0 <= i_5)) and
   (("JC_83": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_84": (0 <= count1)) and
     (("JC_85": (count1 <= i_5)) and
      ("JC_86": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 <= 0) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  ("JC_87":
  ("JC_86":
  ("JC_86": (count1 = num_of_pos(0, (i_5_0 - 1), t_4, intM_intP_t_4_7)))))

goal MullerTheory_m_safety_po_1:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  (offset_min(Object_t_4_7_alloc_table, t_4) <= i_4)

goal MullerTheory_m_safety_po_2:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  (i_4 <= offset_max(Object_t_4_7_alloc_table, t_4))

goal MullerTheory_m_safety_po_3:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_4) and
   (i_4 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 > 0) ->
  forall count0:int.
  (count0 = (count + 1)) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  (0 <= ("JC_52": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_4)))

goal MullerTheory_m_safety_po_4:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_4) and
   (i_4 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 > 0) ->
  forall count0:int.
  (count0 = (count + 1)) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  (("JC_52": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_4_0)) < 
  ("JC_52": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_4)))

goal MullerTheory_m_safety_po_5:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_4) and
   (i_4 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 <= 0) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  (0 <= ("JC_52": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_4)))

goal MullerTheory_m_safety_po_6:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 < result) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_4) and
   (i_4 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result0:int.
  (result0 = select(intM_intP_t_4_7, shift(t_4, i_4))) ->
  (result0 <= 0) ->
  forall i_4_0:int.
  (i_4_0 = (i_4 + 1)) ->
  (("JC_52": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_4_0)) < 
  ("JC_52": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_4)))

goal MullerTheory_m_safety_po_7:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0)

goal MullerTheory_m_safety_po_8:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_62": true) ->
  ("JC_60":
  (("JC_55": (0 <= i_5)) and
   (("JC_56": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_57": (0 <= count1)) and
     (("JC_58": (count1 <= i_5)) and
      ("JC_59": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  (offset_min(Object_t_4_7_alloc_table, t_4) <= i_5)

goal MullerTheory_m_safety_po_9:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_62": true) ->
  ("JC_60":
  (("JC_55": (0 <= i_5)) and
   (("JC_56": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_57": (0 <= count1)) and
     (("JC_58": (count1 <= i_5)) and
      ("JC_59": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))

goal MullerTheory_m_safety_po_10:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_62": true) ->
  ("JC_60":
  (("JC_55": (0 <= i_5)) and
   (("JC_56": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_57": (0 <= count1)) and
     (("JC_58": (count1 <= i_5)) and
      ("JC_59": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  (offset_min(Object_MullerTheory_m_9_alloc_table0, result0) <= count1)

goal MullerTheory_m_safety_po_11:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_62": true) ->
  ("JC_60":
  (("JC_55": (0 <= i_5)) and
   (("JC_56": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_57": (0 <= count1)) and
     (("JC_58": (count1 <= i_5)) and
      ("JC_59": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  (count1 <= offset_max(Object_MullerTheory_m_9_alloc_table0, result0))

goal MullerTheory_m_safety_po_12:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  forall intM_intP_MullerTheory_m_9:(Object,
  int) memory.
  ("JC_62": true) ->
  ("JC_60":
  (("JC_55": (0 <= i_5)) and
   (("JC_56": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_57": (0 <= count1)) and
     (("JC_58": (count1 <= i_5)) and
      ("JC_59": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  ((offset_min(Object_MullerTheory_m_9_alloc_table0, result0) <= count1) and
   (count1 <= offset_max(Object_MullerTheory_m_9_alloc_table0, result0))) ->
  forall intM_intP_MullerTheory_m_9_0:(Object,
  int) memory.
  (intM_intP_MullerTheory_m_9_0 = store(intM_intP_MullerTheory_m_9,
  shift(result0, count1), result3)) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  (0 <= ("JC_69": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_5)))

goal MullerTheory_m_safety_po_13:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  forall intM_intP_MullerTheory_m_9:(Object,
  int) memory.
  ("JC_62": true) ->
  ("JC_60":
  (("JC_55": (0 <= i_5)) and
   (("JC_56": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_57": (0 <= count1)) and
     (("JC_58": (count1 <= i_5)) and
      ("JC_59": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 > 0) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result3:int.
  (result3 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  forall count2:int.
  (count2 = (count1 + 1)) ->
  ((offset_min(Object_MullerTheory_m_9_alloc_table0, result0) <= count1) and
   (count1 <= offset_max(Object_MullerTheory_m_9_alloc_table0, result0))) ->
  forall intM_intP_MullerTheory_m_9_0:(Object,
  int) memory.
  (intM_intP_MullerTheory_m_9_0 = store(intM_intP_MullerTheory_m_9,
  shift(result0, count1), result3)) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  (("JC_69": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_5_0)) < 
  ("JC_69": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_5)))

goal MullerTheory_m_safety_po_14:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_62": true) ->
  ("JC_60":
  (("JC_55": (0 <= i_5)) and
   (("JC_56": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_57": (0 <= count1)) and
     (("JC_58": (count1 <= i_5)) and
      ("JC_59": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 <= 0) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  (0 <= ("JC_69": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_5)))

goal MullerTheory_m_safety_po_15:
  forall t_4:Object pointer.
  forall Object_t_4_7_alloc_table:Object alloc_table.
  forall intM_intP_t_4_7:(Object,
  int) memory.
  forall Object_MullerTheory_m_9_alloc_table:Object alloc_table.
  (left_valid_struct_intM(t_4, 0, Object_t_4_7_alloc_table) and
   ("JC_35": Non_null_intM(t_4, Object_t_4_7_alloc_table))) ->
  forall count:int.
  forall i_4:int.
  ("JC_48": true) ->
  ("JC_46":
  (("JC_41": (0 <= i_4)) and
   (("JC_42": (i_4 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_43": (0 <= count)) and
     (("JC_44": (count <= i_4)) and
      ("JC_45": (count = num_of_pos(0, (i_4 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result:int.
  ("JC_21":
  ((result <= 2147483647) and
   ((result >= 0) and
    ((result = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_4 >= result) ->
  (count >= 0) ->
  forall result0:Object pointer.
  forall Object_MullerTheory_m_9_alloc_table0:Object alloc_table.
  forall Object_MullerTheory_m_9_tag_table:Object tag_table.
  (strict_valid_struct_intM(result0, 0, (count - 1),
   Object_MullerTheory_m_9_alloc_table0) and
   (alloc_extends(Object_MullerTheory_m_9_alloc_table,
    Object_MullerTheory_m_9_alloc_table0) and
    (alloc_fresh(Object_MullerTheory_m_9_alloc_table, result0, count) and
     instanceof(Object_MullerTheory_m_9_tag_table, result0, intM_tag)))) ->
  forall count0:int.
  (count0 = 0) ->
  forall count1:int.
  forall i_5:int.
  ("JC_62": true) ->
  ("JC_60":
  (("JC_55": (0 <= i_5)) and
   (("JC_56": (i_5 <= (offset_max(Object_t_4_7_alloc_table, t_4) + 1))) and
    (("JC_57": (0 <= count1)) and
     (("JC_58": (count1 <= i_5)) and
      ("JC_59": (count1 = num_of_pos(0, (i_5 - 1), t_4, intM_intP_t_4_7)))))))) ->
  forall result1:int.
  ("JC_21":
  ((result1 <= 2147483647) and
   ((result1 >= 0) and
    ((result1 = (offset_max(Object_t_4_7_alloc_table, t_4) + 1)) and
     (true = true))))) ->
  (i_5 < result1) ->
  ((offset_min(Object_t_4_7_alloc_table, t_4) <= i_5) and
   (i_5 <= offset_max(Object_t_4_7_alloc_table, t_4))) ->
  forall result2:int.
  (result2 = select(intM_intP_t_4_7, shift(t_4, i_5))) ->
  (result2 <= 0) ->
  forall i_5_0:int.
  (i_5_0 = (i_5 + 1)) ->
  (("JC_69": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_5_0)) < 
  ("JC_69": ((offset_max(Object_t_4_7_alloc_table, t_4) + 1) - i_5)))

========== running alt-ergo ==========
Running Alt-Ergo on proof obligations
(. = valid * = invalid ? = unknown # = timeout ! = failure)
why/MullerTheory_why.why      : ?............................................. (45/0/1/0/0)
total   :  46
valid   :  45 ( 98%)
invalid :   0 (  0%)
unknown :   1 (  2%)
timeout :   0 (  0%)
failure :   0 (  0%)
