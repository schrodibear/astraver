========== file tests/c/duplets.c ==========
/*
COST Verification Competition. vladimir@cost-ic0701.org

Challenge 3: Two equal elements

Given: An integer array a of length n+2 with n>=2. It is known that at
least two values stored in the array appear twice (i.e., there are at
least two duplets).

Implement and verify a program finding such two values.

You may assume that the array contains values between 0 and n-1.
*/

#define NULL (void*)0

/* equality between an integer and a possibly null int* */
/*@ predicate eq_opt{L}(integer x, int *o) =
  @   o != \null && x == *o ;
  @*/

/* A duplet in array a is a pair of indexes (i,j) in the bounds of array
   a such that a[i] = a[j] */
/*@ predicate is_duplet{L}(int *a, integer len, integer i, integer j) =
  @    0 <= i < j < len && a[i] == a[j];
  @*/

/* duplet(a) returns the indexes (i,j) of a duplet in a.
 * moreover, if except is not null, the value of this duplet must
 * be different from it.
 */
/*@ requires 2 <= len &&
  @   \valid_range(a,0,len-1) && \valid(pi) && \valid(pj) &&
  @   ( except == \null || \valid(except)) &&
  @   \exists integer i,j;
  @     is_duplet(a,len,i,j) && ! eq_opt(a[i],except) ;
  @ assigns *pi,*pj;
  @ ensures
  @   is_duplet(a,len,*pi,*pj) &&
  @   ! eq_opt(a[*pi],except);
  @*/
void duplet(int *a, int len, int *except, int *pi, int *pj) {
  /*@ loop invariant 0 <= i <= len-1 &&
    @  \forall integer k,l; 0 <= k < i && k < l < len ==>
    @    ! eq_opt(a[k],except) ==> ! is_duplet(a,len,k,l);
    @ loop variant len - i;
    @*/
  for(int i=0; i <= len - 2; i++) {
    int v = a[i];
    if (except == NULL || *except != v) {
      /*@ loop invariant i+1 <= j <= len &&
        @   \forall integer l; i < l < j ==> ! is_duplet(a,len,i,l);
        @ loop variant len - j;
        @*/
      for (int j=i+1; j < len; j++) {
        if (a[j] == v) {
          *pi = i; *pj = j; return;
        }
      }
    }
  }
  // assert \forall integer i j; ! is_duplet(a,i,j);
  //@ assert \false;
}



/*@ requires 4 <= len && 
  @   \valid_range(a,0,len-1) && \valid(pi) && \valid(pj) &&
  @   \valid(pk) && \valid(pl) &&
  @   \exists integer i,j,k,l;
  @     is_duplet(a,len,i,j) && is_duplet(a,len,k,l) && a[i] != a[k];
  @ assigns *pi,*pj,*pk,*pl;
  @ ensures is_duplet(a,len,*pi,*pj) &&
  @   is_duplet(a,len,*pk,*pl) &&
  @   a[*pi] != a[*pk];
  @*/
void duplets(int a[], int len, int *pi, int *pj, int *pk, int *pl) {
  duplet(a,len,NULL,pi,pj);
  duplet(a,len,&a[*pi],pk,pl);
}


/*
Local Variables:
compile-command: "make duplets.why3ml"
End:
*/

========== frama-c -jessie execution ==========
[kernel] preprocessing with "gcc -C -E -I.  -dD tests/c/duplets.c"
[jessie] Starting Jessie translation
[jessie] Producing Jessie files in subdir tests/c/duplets.jessie
[jessie] File tests/c/duplets.jessie/duplets.jc written.
[jessie] File tests/c/duplets.jessie/duplets.cloc written.
========== file tests/c/duplets.jessie/duplets.jc ==========
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type int32 = -2147483648..2147483647

type int8 = -128..127

tag intP = {
  int32 intM: 32;
}

type intP = [intP]

tag charP = {
  int8 charM: 8;
}

type charP = [charP]

tag voidP = {
}

type voidP = [voidP]

predicate eq_opt{L}(integer x, intP[..] o) =
((o != null) && (x == o.intM))

predicate is_duplet{L}(intP[..] a, integer len, integer i, integer j) =
(((0 <= i) && ((i < j) && (j < len))) && ((a + i).intM == (a + j).intM))

unit duplet(intP[..] a, int32 len, intP[..] except, intP[..] pi, intP[..] pj)
  requires (C_39 : ((((((C_44 : (2 <= len)) &&
                         ((C_46 : (\offset_min(a) <= 0)) &&
                           (C_47 : (\offset_max(a) >= (len - 1))))) &&
                        ((C_49 : (\offset_min(pi) <= 0)) &&
                          (C_50 : (\offset_max(pi) >= 0)))) &&
                       ((C_52 : (\offset_min(pj) <= 0)) &&
                         (C_53 : (\offset_max(pj) >= 0)))) &&
                      (C_54 : ((except == null) ||
                                ((\offset_min(except) <= 0) &&
                                  (\offset_max(except) >= 0))))) &&
                     (C_55 : (\exists integer i_0;
                               (\exists integer j_0;
                                 (is_duplet{Here}(a, len, i_0, j_0) &&
                                   (! eq_opt{Here}((a + i_0).intM, except))))))));
behavior default:
  assigns pi.intM,
  pj.intM;
  ensures (C_36 : ((C_37 : is_duplet{Here}(\at(a,Old), \at(len,Old),
                                           \at(pi,Old).intM, \at(pj,Old).intM)) &&
                    (C_38 : (! eq_opt{Here}((\at(a,Old) + \at(pi,Old).intM).intM,
                                            \at(except,Old))))));
{  
   (var int32 i);
   
   (var int32 v);
   
   (var int32 j);
   
   {  
      {  (C_1 : (i = 0));
         
         loop 
         behavior default:
           invariant (C_3 : (((C_5 : (0 <= i)) && (C_6 : (i <= (len - 1)))) &&
                              (C_7 : (\forall integer k;
                                       (\forall integer l_0;
                                         ((((0 <= k) && (k < i)) &&
                                            ((k < l_0) && (l_0 < len))) ==>
                                           ((! eq_opt{Here}((a + k).intM,
                                                            except)) ==>
                                             (! is_duplet{Here}(a, len, k,
                                                                l_0)))))))));
         variant (C_2 : (len - i));
         while (true)
         {  
            {  (if (i <= (C_9 : ((C_8 : (len - 2)) :> int32))) then () else 
               (goto while_0_break));
               
               {  (C_12 : (v = (C_11 : (C_10 : (a + i)).intM)));
                  (if (except == null) then 
                  (goto _LOR) else (if ((C_13 : except.intM) != v) then 
                                   (goto _LOR) else ()));
                  
                  (goto _LOR_0);
                  (_LOR : 
                  {  (C_16 : (j = (C_15 : ((C_14 : (i + 1)) :> int32))));
                     
                     loop 
                     behavior default:
                       invariant (C_18 : (((C_20 : ((i + 1) <= j)) &&
                                            (C_21 : (j <= len))) &&
                                           (C_22 : (\forall integer l;
                                                     (((i < l) && (l < j)) ==>
                                                       (! is_duplet{Here}(
                                                       a, len, i, l)))))));
                     variant (C_17 : (len - j));
                     while (true)
                     {  
                        {  (if (j < len) then () else 
                           (goto while_1_break));
                           
                           {  (if ((C_28 : (C_27 : (a + j)).intM) == v) then 
                              {  (C_24 : ((C_23 : pi.intM) = i));
                                 (C_26 : ((C_25 : pj.intM) = j));
                                 
                                 (goto return_label)
                              } else ())
                           };
                           (C_31 : (j = (C_30 : ((C_29 : (j + 1)) :> int32))))
                        }
                     };
                     (while_1_break : ())
                  });
                  (_LOR_0 : ())
               };
               (C_34 : (i = (C_33 : ((C_32 : (i + 1)) :> int32))))
            }
         };
         (while_0_break : ())
      };
      
      {  
         (assert for default: (C_35 : false));
         ()
      };
      (return_label : 
      (return ()))
   }
}

unit duplets(intP[..] a_0, int32 len_0, intP[..] pi_0, intP[..] pj_0,
             intP[..] pk, intP[..] pl)
  requires (C_65 : (((((((C_71 : (4 <= len_0)) &&
                          ((C_73 : (\offset_min(a_0) <= 0)) &&
                            (C_74 : (\offset_max(a_0) >= (len_0 - 1))))) &&
                         ((C_76 : (\offset_min(pi_0) <= 0)) &&
                           (C_77 : (\offset_max(pi_0) >= 0)))) &&
                        ((C_79 : (\offset_min(pj_0) <= 0)) &&
                          (C_80 : (\offset_max(pj_0) >= 0)))) &&
                       ((C_82 : (\offset_min(pk) <= 0)) &&
                         (C_83 : (\offset_max(pk) >= 0)))) &&
                      ((C_85 : (\offset_min(pl) <= 0)) &&
                        (C_86 : (\offset_max(pl) >= 0)))) &&
                     (C_87 : (\exists integer i_1;
                               (\exists integer j_1;
                                 (\exists integer k_0;
                                   (\exists integer l_1;
                                     ((is_duplet{Here}(a_0, len_0, i_1, j_1) &&
                                        is_duplet{Here}(a_0, len_0, k_0, l_1)) &&
                                       ((a_0 + i_1).intM != (a_0 + k_0).intM)))))))));
behavior default:
  assigns pi_0.intM,
  pj_0.intM,
  pk.intM,
  pl.intM;
  ensures (C_60 : (((C_62 : is_duplet{Here}(\at(a_0,Old), \at(len_0,Old),
                                            \at(pi_0,Old).intM,
                                            \at(pj_0,Old).intM)) &&
                     (C_63 : is_duplet{Here}(\at(a_0,Old), \at(len_0,Old),
                                             \at(pk,Old).intM,
                                             \at(pl,Old).intM))) &&
                    (C_64 : ((\at(a_0,Old) + \at(pi_0,Old).intM).intM !=
                              (\at(a_0,Old) + \at(pk,Old).intM).intM))));
{  
   {  (C_56 : duplet(a_0, len_0, null, pi_0, pj_0));
      (C_59 : duplet(a_0, len_0, (C_58 : (a_0 + (C_57 : pi_0.intM))), pk, pl));
      
      (return ())
   }
}
========== file tests/c/duplets.jessie/duplets.cloc ==========
[C_50]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 33
end = 43

[C_51]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 47
end = 57

[duplets]
name = "Function duplets"
file = "HOME/tests/c/duplets.c"
line = 78
begin = 5
end = 12

[C_52]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 47
end = 57

[C_53]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 47
end = 57

[C_54]
file = "HOME/tests/c/duplets.c"
line = 34
begin = 6
end = 42

[C_55]
file = "HOME/tests/c/duplets.c"
line = 35
begin = 6
end = 80

[C_56]
file = "HOME/tests/c/duplets.c"
line = 79
begin = 2
end = 30

[C_57]
file = "HOME/tests/c/duplets.c"
line = 80
begin = 18
end = 21

[C_58]
file = "HOME/tests/c/duplets.c"
line = 80
begin = 16
end = 17

[C_59]
file = "HOME/tests/c/duplets.c"
line = 80
begin = 2
end = 29

[duplet]
name = "Function duplet"
file = "HOME/tests/c/duplets.c"
line = 42
begin = 5
end = 11

[C_60]
file = "HOME/tests/c/duplets.c"
line = 74
begin = 12
end = 96

[C_61]
file = "HOME/tests/c/duplets.c"
line = 74
begin = 12
end = 70

[C_62]
file = "HOME/tests/c/duplets.c"
line = 74
begin = 12
end = 36

[C_10]
file = "HOME/tests/c/duplets.c"
line = 49
begin = 12
end = 13

[C_63]
file = "HOME/tests/c/duplets.c"
line = 75
begin = 6
end = 30

[C_11]
file = "HOME/tests/c/duplets.c"
line = 49
begin = 12
end = 16

[C_64]
file = "HOME/tests/c/duplets.c"
line = 76
begin = 6
end = 22

[C_12]
file = "HOME/tests/c/duplets.c"
line = 49
begin = 4
end = 7

[C_65]
file = "HOME/tests/c/duplets.c"
line = 68
begin = 13
end = 219

[C_13]
file = "HOME/tests/c/duplets.c"
line = 50
begin = 30
end = 37

[C_66]
file = "HOME/tests/c/duplets.c"
line = 68
begin = 13
end = 116

[C_14]
file = "HOME/tests/c/duplets.c"
line = 55
begin = 17
end = 20

[C_67]
file = "HOME/tests/c/duplets.c"
line = 68
begin = 13
end = 102

[C_15]
file = "HOME/tests/c/duplets.c"
line = 55
begin = 17
end = 20

[C_68]
file = "HOME/tests/c/duplets.c"
line = 68
begin = 13
end = 82

[C_16]
file = "HOME/tests/c/duplets.c"
line = 55
begin = 11
end = 14

[C_69]
file = "HOME/tests/c/duplets.c"
line = 68
begin = 13
end = 68

[C_17]
file = "HOME/tests/c/duplets.c"
line = 53
begin = 23
end = 30

[C_18]
file = "HOME/tests/c/duplets.c"
line = 51
begin = 25
end = 111

[C_19]
file = "HOME/tests/c/duplets.c"
line = 51
begin = 25
end = 40

[C_1]
file = "HOME/tests/c/duplets.c"
line = 48
begin = 6
end = 9

[C_2]
file = "HOME/tests/c/duplets.c"
line = 46
begin = 19
end = 26

[C_70]
file = "HOME/tests/c/duplets.c"
line = 68
begin = 13
end = 54

[C_3]
file = "HOME/tests/c/duplets.c"
line = 43
begin = 21
end = 155

[C_71]
file = "HOME/tests/c/duplets.c"
line = 68
begin = 13
end = 21

[C_4]
file = "HOME/tests/c/duplets.c"
line = 43
begin = 21
end = 36

[C_72]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 6
end = 29

[C_20]
file = "HOME/tests/c/duplets.c"
line = 51
begin = 25
end = 33

[C_5]
file = "HOME/tests/c/duplets.c"
line = 43
begin = 21
end = 27

[C_73]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 6
end = 29

[C_21]
file = "HOME/tests/c/duplets.c"
line = 51
begin = 32
end = 40

[C_6]
file = "HOME/tests/c/duplets.c"
line = 43
begin = 26
end = 36

[C_74]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 6
end = 29

[C_22]
file = "HOME/tests/c/duplets.c"
line = 52
begin = 12
end = 67

[C_7]
file = "HOME/tests/c/duplets.c"
line = 44
begin = 7
end = 115

[C_75]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 33
end = 43

[C_23]
file = "HOME/tests/c/duplets.c"
line = 57
begin = 16
end = 17

[C_8]
file = "HOME/tests/c/duplets.c"
line = 48
begin = 20
end = 27

[C_76]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 33
end = 43

[C_24]
file = "HOME/tests/c/duplets.c"
line = 57
begin = 16
end = 17

[C_9]
file = "HOME/tests/c/duplets.c"
line = 48
begin = 20
end = 27

[C_77]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 33
end = 43

[C_25]
file = "HOME/tests/c/duplets.c"
line = 57
begin = 25
end = 26

[C_78]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 47
end = 57

[C_26]
file = "HOME/tests/c/duplets.c"
line = 57
begin = 25
end = 26

[C_79]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 47
end = 57

[C_27]
file = "HOME/tests/c/duplets.c"
line = 56
begin = 12
end = 13

[C_28]
file = "HOME/tests/c/duplets.c"
line = 56
begin = 12
end = 16

[C_29]
file = "HOME/tests/c/duplets.c"
line = 55
begin = 31
end = 34

[C_80]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 47
end = 57

[C_81]
file = "HOME/tests/c/duplets.c"
line = 70
begin = 6
end = 16

[C_82]
file = "HOME/tests/c/duplets.c"
line = 70
begin = 6
end = 16

[C_30]
file = "HOME/tests/c/duplets.c"
line = 55
begin = 31
end = 34

[C_83]
file = "HOME/tests/c/duplets.c"
line = 70
begin = 6
end = 16

[C_31]
file = "HOME/tests/c/duplets.c"
line = 55
begin = 31
end = 34

[C_84]
file = "HOME/tests/c/duplets.c"
line = 70
begin = 20
end = 30

[C_32]
file = "HOME/tests/c/duplets.c"
line = 48
begin = 29
end = 32

[C_85]
file = "HOME/tests/c/duplets.c"
line = 70
begin = 20
end = 30

[C_33]
file = "HOME/tests/c/duplets.c"
line = 48
begin = 29
end = 32

[C_86]
file = "HOME/tests/c/duplets.c"
line = 70
begin = 20
end = 30

[C_34]
file = "HOME/tests/c/duplets.c"
line = 48
begin = 29
end = 32

[C_87]
file = "HOME/tests/c/duplets.c"
line = 71
begin = 6
end = 99

[C_35]
file = "HOME/tests/c/duplets.c"
line = 63
begin = 13
end = 19

[C_36]
file = "HOME/tests/c/duplets.c"
line = 39
begin = 6
end = 63

[C_37]
file = "HOME/tests/c/duplets.c"
line = 39
begin = 6
end = 30

[C_38]
file = "HOME/tests/c/duplets.c"
line = 40
begin = 6
end = 29

[C_39]
file = "HOME/tests/c/duplets.c"
line = 32
begin = 13
end = 212

[C_40]
file = "HOME/tests/c/duplets.c"
line = 32
begin = 13
end = 128

[C_41]
file = "HOME/tests/c/duplets.c"
line = 32
begin = 13
end = 82

[C_42]
file = "HOME/tests/c/duplets.c"
line = 32
begin = 13
end = 68

[C_43]
file = "HOME/tests/c/duplets.c"
line = 32
begin = 13
end = 54

[C_44]
file = "HOME/tests/c/duplets.c"
line = 32
begin = 13
end = 21

[C_45]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 6
end = 29

[C_46]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 6
end = 29

[C_47]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 6
end = 29

[C_48]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 33
end = 43

[C_49]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 33
end = 43

========== jessie execution ==========
Generating Why function duplet
Generating Why function duplets
========== file tests/c/duplets.jessie/duplets.makefile ==========
# this makefile was automatically generated; do not edit 

TIMEOUT ?= 10

DP ?= why-dp -timeout $(TIMEOUT)
WHYEXEC ?= why
GWHYEXEC ?= gwhy-bin
WHYLIB ?= HOME/lib

WHY=WHYLIB=$(WHYLIB) $(WHYEXEC) $(WHYOPT)  -split-user-conj -explain -locs duplets.loc

GWHY=WHYLIB=$(WHYLIB) $(GWHYEXEC) $(WHYOPT)  -split-user-conj -explain -locs duplets.loc

JESSIELIBFILES ?= $(WHYLIB)/why/jessie.why
JESSIE3LIB ?=$(WHYLIB)/why3

COQDEP = coqdep

.PHONY: all coq pvs simplify vampire cvcl harvey smtlib zenon

all: simplify/duplets_why.sx

project: why/duplets.wpr

why/%.wpr:  WHYOPT=--project -dir why
why/%.wpr: why/%.why
	@echo 'why --project [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

goals: why/duplets_ctx.why

why/%_ctx.why: WHYOPT=--multi-why -dir why
why/%_ctx.why: why/%.why
	@echo 'why --multi-why [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

coq: coq/duplets_why.vo

coq/duplets_why.v: WHYOPT=-coq -dir coq -coq-preamble "Require Export jessie_why." -coq-tactic "intuition"
coq/duplets_why.v: why/duplets.why
	@echo 'why -coq [...] why/duplets.why' && $(WHY) $(JESSIELIBFILES) why/duplets.why && rm -f coq/jessie_why.v

coq-goals: goals coq/duplets_ctx_why.vo
	for f in why/*_po*.why; do make -f duplets.makefile coq/`basename $$f .why`_why.v ; done

coq/duplets_ctx_why.v: WHYOPT=-no-pervasives -coq -dir coq -coq-preamble "Require Export jessie_why." -coq-tactic "intuition"
coq/duplets_ctx_why.v: why/duplets_ctx.why
	@echo 'why -coq [...] why/duplets_ctx.why' && $(WHY) why/duplets_ctx.why

coq/%_why.v: WHYOPT=-no-pervasives -coq -dir coq -coq-preamble "Require Export duplets_ctx_why." -coq-tactic "intuition"
coq/%_why.v: why/%.why
	@echo 'why -coq [...] why/$*.why' && $(WHY) why/duplets_ctx.why why/$*.why

coq/%.vo: coq/%.v
	coqc -I coq $<
coq/%_po_why.vo: coq/duplets_ctx_why.vo

pvs: pvs/duplets_why.pvs

pvs/%_why.pvs: WHYOPT=-pvs -dir pvs -pvs-preamble "IMPORTING why@jessie"
pvs/%_why.pvs: why/%.why
	$(WHY) $(JESSIELIBFILES) why/$*.why

pvs/jessie_why.pvs:WHYOPT=-pvs -dir pvs -pvs-preamble "IMPORTING why@why"
pvs/jessie_why.pvs:
	$(WHY) $(JESSIELIBFILES)

isabelle: isabelle/duplets_why.thy

isabelle/%_why.thy: WHYOPT=-isabelle -dir isabelle -isabelle-base-theory jessie_why
isabelle/%_why.thy: why/%.why
	$(WHY) $(JESSIELIBFILES) why/$*.why
	cp -f HOME/lib/isabelle/jessie_why.thy isabelle/

simplify: simplify/duplets_why.sx
	@echo 'Running Simplify on proof obligations' && ($(DP) $^)

simplify/%_why.sx: WHYOPT=-simplify -dir simplify
simplify/%_why.sx: why/%.why
	@echo 'why -simplify [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

vampire: vampire/duplets_why.vp
	@echo 'Running Vampire on proof obligations' && ($(DP) $^)

vampire/%_why.vp: WHYOPT=-vampire -dir vampire
vampire/%_why.vp: why/%.why
	@echo 'why -vampire [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

alt-ergo ergo: why/duplets_why.why
	@echo 'Running Alt-Ergo on proof obligations' && ($(DP) $^)

why/%_why.why: WHYOPT=-alt-ergo -dir why
why/%_why.why: why/%.why
	@echo 'why -alt-ergo [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

gappa: gappa/duplets_why.gappa
	@echo 'Running Gappa on proof obligations' && ($(DP) $^)

gappa/%_why.gappa: WHYOPT=-gappa -dir gappa
gappa/%_why.gappa: why/%.why
	@echo 'why -gappa [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

cvcl: cvcl/duplets_why.cvc

	@echo 'Running CVC Lite on proof obligations' && ($(DP) $^)

cvcl/%_why.cvc: WHYOPT=-cvcl -dir cvcl
cvcl/%_why.cvc: why/%.why
	@echo 'why -cvcl [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

harvey: harvey/duplets_why.rv
	@echo 'Running haRVey on proof obligations' && ($(DP) $^)

harvey/%_why.rv: WHYOPT=-harvey -dir harvey
harvey/%_why.rv: why/%.why
	@echo 'why -harvey [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

zenon: zenon/duplets_why.znn
	@echo 'Running Zenon on proof obligations' && ($(DP) $^)

zenon/%_why.znn: WHYOPT=-zenon -dir zenon
zenon/%_why.znn: why/%.why
	@echo 'why -zenon [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

smtlib: smtlib/duplets_why.smt
	@echo 'Running Z3 on proof obligations' && ($(DP) $^)

smtlib/%_why.smt:  WHYOPT=-smtlib --encoding sstrat --exp goal -dir smtlib
smtlib/%_why.smt: why/%.why
	@echo 'why -smtlib [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

z3: smtlib/duplets_why.smt
	@echo 'Running Z3 on proof obligations' && ($(DP) -smt-solver z3 $^)

yices: smtlib/duplets_why.smt
	@echo 'Running Yices on proof obligations' && ($(DP) -smt-solver yices $^)

cvc3: smtlib/duplets_why.smt
	@echo 'Running CVC3 on proof obligations' && ($(DP) -smt-solver cvc3 $^)

smtlib-v1: smtlib-v1/duplets_why.smt
smtlib-v1/%_why.smt:  WHYOPT=-smtlib --smtlib-v1 --encoding sstrat --exp goal -dir smtlib-v1
smtlib-v1/%_why.smt: why/%.why
	@echo 'why -smtlib [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why

verit: smtlib-v1/duplets_why.smt
	@echo 'Running VeriT on proof obligations' && ($(DP) -smt-solver verit $^)

gui stat: duplets.stat

%.stat: why/%.why
	@echo 'gwhy-bin [...] why/$*.why' && $(GWHY) $(JESSIELIBFILES) why/$*.why

why3: why/duplets_why3.why
why/%_why3.why:  WHYOPT=-why3
why/%_why3.why: why/%.why
	@echo 'why -why3 [...] why/$*.why' && $(WHY) $(JESSIELIBFILES) why/$*.why
why3ide: why/duplets_why3.why
	@echo 'why3ide [...] $<' && why3ide $<

why3ml: duplets.mlw
	@echo 'why3ml [...] $<' && why3ide -I $(JESSIE3LIB) $<

-include duplets.depend

depend: coq/duplets_why.v
	-$(COQDEP) -I coq coq/duplets*_why.v > duplets.depend

clean:
	rm -f coq/*.vo

========== file tests/c/duplets.jessie/duplets.loc ==========
[duplets_safety]
name = "Function duplets"
behavior = "Safety"
file = "HOME/tests/c/duplets.c"
line = 78
begin = 5
end = 12

[JC_90]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 47
end = 57

[JC_91]
file = "HOME/tests/c/duplets.c"
line = 70
begin = 6
end = 16

[JC_92]
file = "HOME/tests/c/duplets.c"
line = 70
begin = 6
end = 16

[JC_40]
file = "HOME/tests/c/duplets.c"
line = 43
begin = 26
end = 36

[JC_93]
file = "HOME/tests/c/duplets.c"
line = 70
begin = 20
end = 30

[JC_41]
file = "HOME/tests/c/duplets.c"
line = 44
begin = 7
end = 115

[JC_94]
file = "HOME/tests/c/duplets.c"
line = 70
begin = 20
end = 30

[JC_42]
file = "HOME/tests/c/duplets.c"
line = 43
begin = 21
end = 155

[JC_95]
file = "HOME/tests/c/duplets.c"
line = 71
begin = 6
end = 99

[JC_43]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_96]
file = "HOME/tests/c/duplets.c"
line = 68
begin = 13
end = 219

[JC_44]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 72
begin = 9
end = 2749

[JC_97]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_45]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 72
begin = 9
end = 2749

[JC_98]
file = "HOME/tests/c/duplets.c"
line = 68
begin = 13
end = 21

[JC_46]
kind = ArithOverflow
file = "HOME/tests/c/duplets.c"
line = 48
begin = 20
end = 27

[JC_1]
file = "HOME/tests/c/duplets.c"
line = 32
begin = 13
end = 21

[duplets_ensures_default]
name = "Function duplets"
behavior = "default behavior"
file = "HOME/tests/c/duplets.c"
line = 78
begin = 5
end = 12

[JC_100]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 6
end = 29

[JC_99]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 6
end = 29

[JC_47]
kind = PointerDeref
file = "HOME/tests/c/duplets.c"
line = 49
begin = 12
end = 16

[JC_2]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 6
end = 29

[JC_101]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 33
end = 43

[JC_48]
kind = PointerDeref
file = "HOME/tests/c/duplets.c"
line = 50
begin = 30
end = 37

[JC_3]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 6
end = 29

[JC_102]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 33
end = 43

[JC_49]
kind = ArithOverflow
file = "HOME/tests/c/duplets.c"
line = 55
begin = 17
end = 20

[JC_4]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 33
end = 43

[JC_103]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 47
end = 57

[JC_5]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 33
end = 43

[JC_104]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 47
end = 57

[JC_6]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 47
end = 57

[JC_105]
file = "HOME/tests/c/duplets.c"
line = 70
begin = 6
end = 16

[JC_7]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 47
end = 57

[JC_106]
file = "HOME/tests/c/duplets.c"
line = 70
begin = 6
end = 16

[JC_8]
file = "HOME/tests/c/duplets.c"
line = 34
begin = 6
end = 42

[JC_107]
file = "HOME/tests/c/duplets.c"
line = 70
begin = 20
end = 30

[JC_9]
file = "HOME/tests/c/duplets.c"
line = 35
begin = 6
end = 80

[JC_108]
file = "HOME/tests/c/duplets.c"
line = 70
begin = 20
end = 30

[JC_109]
file = "HOME/tests/c/duplets.c"
line = 71
begin = 6
end = 99

[JC_50]
file = "HOME/tests/c/duplets.c"
line = 51
begin = 25
end = 33

[JC_51]
file = "HOME/tests/c/duplets.c"
line = 51
begin = 32
end = 40

[JC_52]
file = "HOME/tests/c/duplets.c"
line = 52
begin = 12
end = 67

[JC_53]
file = "HOME/tests/c/duplets.c"
line = 51
begin = 25
end = 111

[JC_54]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_55]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 98
begin = 21
end = 1241

[JC_56]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 98
begin = 21
end = 1241

[JC_110]
file = "HOME/tests/c/duplets.c"
line = 68
begin = 13
end = 219

[JC_57]
kind = PointerDeref
file = "HOME/tests/c/duplets.c"
line = 56
begin = 12
end = 16

[JC_111]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_58]
kind = ArithOverflow
file = "HOME/tests/c/duplets.c"
line = 55
begin = 31
end = 34

[JC_112]
file = "HOME/tests/c/duplets.c"
line = 74
begin = 12
end = 36

[JC_59]
file = "HOME/tests/c/duplets.c"
line = 53
begin = 23
end = 30

[JC_113]
file = "HOME/tests/c/duplets.c"
line = 75
begin = 6
end = 30

[JC_114]
file = "HOME/tests/c/duplets.c"
line = 76
begin = 6
end = 22

[JC_115]
file = "HOME/tests/c/duplets.c"
line = 74
begin = 12
end = 96

[JC_116]
file = "HOME/tests/c/duplets.c"
line = 78
begin = 5
end = 12

[JC_117]
file = "HOME/tests/c/duplets.c"
line = 78
begin = 5
end = 12

[duplet_safety]
name = "Function duplet"
behavior = "Safety"
file = "HOME/tests/c/duplets.c"
line = 42
begin = 5
end = 11

[JC_118]
file = "HOME/tests/c/duplets.c"
line = 78
begin = 5
end = 12

[JC_119]
file = "HOME/tests/c/duplets.c"
line = 78
begin = 5
end = 12

[JC_60]
kind = ArithOverflow
file = "HOME/tests/c/duplets.c"
line = 48
begin = 29
end = 32

[JC_61]
file = "HOME/tests/c/duplets.c"
line = 46
begin = 19
end = 26

[JC_62]
file = "HOME/tests/c/duplets.c"
line = 63
begin = 13
end = 19

[JC_10]
file = "HOME/tests/c/duplets.c"
line = 32
begin = 13
end = 212

[JC_63]
kind = PointerDeref
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 113
begin = 42
end = 62

[JC_11]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_64]
kind = PointerDeref
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 114
begin = 42
end = 62

[JC_12]
file = "HOME/tests/c/duplets.c"
line = 32
begin = 13
end = 21

[JC_65]
file = "HOME/tests/c/duplets.c"
line = 43
begin = 21
end = 27

[JC_13]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 6
end = 29

[JC_66]
file = "HOME/tests/c/duplets.c"
line = 43
begin = 26
end = 36

[JC_14]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 6
end = 29

[JC_120]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 162
begin = 10
end = 54

[JC_67]
file = "HOME/tests/c/duplets.c"
line = 44
begin = 7
end = 115

[JC_15]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 33
end = 43

[JC_121]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 161
begin = 9
end = 16

[JC_68]
file = "HOME/tests/c/duplets.c"
line = 43
begin = 21
end = 155

[JC_16]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 33
end = 43

[JC_122]
file = "HOME/tests/c/duplets.c"
line = 74
begin = 12
end = 36

[JC_69]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_17]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 47
end = 57

[JC_123]
file = "HOME/tests/c/duplets.c"
line = 75
begin = 6
end = 30

[JC_18]
file = "HOME/tests/c/duplets.c"
line = 33
begin = 47
end = 57

[JC_124]
file = "HOME/tests/c/duplets.c"
line = 76
begin = 6
end = 22

[JC_19]
file = "HOME/tests/c/duplets.c"
line = 34
begin = 6
end = 42

[JC_125]
file = "HOME/tests/c/duplets.c"
line = 74
begin = 12
end = 96

[JC_126]
file = "HOME/tests/c/duplets.c"
line = 78
begin = 5
end = 12

[JC_127]
file = "HOME/tests/c/duplets.c"
line = 78
begin = 5
end = 12

[JC_128]
file = "HOME/tests/c/duplets.c"
line = 78
begin = 5
end = 12

[JC_129]
file = "HOME/tests/c/duplets.c"
line = 78
begin = 5
end = 12

[JC_70]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 72
begin = 9
end = 2749

[JC_71]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 72
begin = 9
end = 2749

[JC_72]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 72
begin = 9
end = 2749

[JC_20]
file = "HOME/tests/c/duplets.c"
line = 35
begin = 6
end = 80

[JC_73]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 72
begin = 9
end = 2749

[JC_21]
file = "HOME/tests/c/duplets.c"
line = 32
begin = 13
end = 212

[JC_74]
file = "HOME/tests/c/duplets.c"
line = 51
begin = 25
end = 33

[JC_22]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_75]
file = "HOME/tests/c/duplets.c"
line = 51
begin = 32
end = 40

[JC_23]
file = "HOME/tests/c/duplets.c"
line = 39
begin = 6
end = 30

[JC_76]
file = "HOME/tests/c/duplets.c"
line = 52
begin = 12
end = 67

[JC_24]
file = "HOME/tests/c/duplets.c"
line = 40
begin = 6
end = 29

[JC_130]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 162
begin = 10
end = 54

[JC_77]
file = "HOME/tests/c/duplets.c"
line = 51
begin = 25
end = 111

[JC_25]
file = "HOME/tests/c/duplets.c"
line = 39
begin = 6
end = 63

[JC_131]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 161
begin = 9
end = 16

[JC_78]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_26]
file = "HOME/tests/c/duplets.c"
line = 42
begin = 5
end = 11

[JC_132]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_79]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 98
begin = 21
end = 1241

[JC_27]
file = "HOME/tests/c/duplets.c"
line = 42
begin = 5
end = 11

[JC_133]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_28]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 56
begin = 10
end = 28

[JC_134]
kind = UserCall
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 175
begin = 14
end = 50

[JC_29]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 55
begin = 9
end = 16

[JC_135]
kind = PointerDeref
file = "HOME/tests/c/duplets.c"
line = 80
begin = 18
end = 21

[JC_136]
kind = UserCall
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 176
begin = 14
end = 77

[JC_137]
kind = UserCall
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 175
begin = 14
end = 50

[JC_138]
kind = UserCall
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 176
begin = 14
end = 77

[duplet_ensures_default]
name = "Function duplet"
behavior = "default behavior"
file = "HOME/tests/c/duplets.c"
line = 42
begin = 5
end = 11

[JC_80]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 98
begin = 21
end = 1241

[JC_81]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 98
begin = 21
end = 1241

[JC_82]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 98
begin = 21
end = 1241

[JC_30]
file = "HOME/tests/c/duplets.c"
line = 39
begin = 6
end = 30

[JC_83]
file = "HOME/tests/c/duplets.c"
line = 63
begin = 13
end = 19

[JC_31]
file = "HOME/tests/c/duplets.c"
line = 40
begin = 6
end = 29

[JC_84]
file = "HOME/tests/c/duplets.c"
line = 68
begin = 13
end = 21

[JC_32]
file = "HOME/tests/c/duplets.c"
line = 39
begin = 6
end = 63

[JC_85]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 6
end = 29

[JC_33]
file = "HOME/tests/c/duplets.c"
line = 42
begin = 5
end = 11

[JC_86]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 6
end = 29

[JC_34]
file = "HOME/tests/c/duplets.c"
line = 42
begin = 5
end = 11

[JC_87]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 33
end = 43

[JC_35]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 56
begin = 10
end = 28

[JC_88]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 33
end = 43

[JC_36]
file = "HOME/tests/c/duplets.jessie/duplets.jc"
line = 55
begin = 9
end = 16

[JC_89]
file = "HOME/tests/c/duplets.c"
line = 69
begin = 47
end = 57

[JC_37]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_38]
file = "HOME/"
line = 0
begin = -1
end = -1

[JC_39]
file = "HOME/tests/c/duplets.c"
line = 43
begin = 21
end = 27

========== file tests/c/duplets.jessie/why/duplets.why ==========
type charP

type int32

type int8

type intP

type padding

type voidP

logic charP_tag:  -> charP tag_id

axiom charP_int : (int_of_tag(charP_tag) = (1))

logic charP_of_pointer_address: unit pointer -> charP pointer

axiom charP_of_pointer_address_of_pointer_addr :
 (forall p:charP pointer. (p = charP_of_pointer_address(pointer_address(p))))

axiom charP_parenttag_bottom : parenttag(charP_tag, bottom_tag)

axiom charP_tags :
 (forall x:charP pointer.
  (forall charP_tag_table:charP tag_table.
   instanceof(charP_tag_table, x, charP_tag)))

logic integer_of_int32: int32 -> int

predicate eq_int32(x:int32, y:int32) =
 eq_int(integer_of_int32(x), integer_of_int32(y))

logic integer_of_int8: int8 -> int

predicate eq_int8(x:int8, y:int8) =
 eq_int(integer_of_int8(x), integer_of_int8(y))

predicate eq_opt(x_0:int, o:intP pointer,
 intP_intM_o_1_at_L:(intP, int32) memory) =
 ((o <> null) and (x_0 = integer_of_int32(select(intP_intM_o_1_at_L, o))))

logic int32_of_integer: int -> int32

axiom int32_coerce :
 (forall x:int.
  ((le_int((-2147483648), x) and le_int(x, (2147483647))) ->
   eq_int(integer_of_int32(int32_of_integer(x)), x)))

axiom int32_extensionality :
 (forall x:int32.
  (forall y:int32.
   (eq_int(integer_of_int32(x), integer_of_int32(y)) -> (x = y))))

axiom int32_range :
 (forall x:int32.
  (le_int((-2147483648), integer_of_int32(x))
  and le_int(integer_of_int32(x), (2147483647))))

logic int8_of_integer: int -> int8

axiom int8_coerce :
 (forall x:int.
  ((le_int((-128), x) and le_int(x, (127))) ->
   eq_int(integer_of_int8(int8_of_integer(x)), x)))

axiom int8_extensionality :
 (forall x:int8.
  (forall y:int8.
   (eq_int(integer_of_int8(x), integer_of_int8(y)) -> (x = y))))

axiom int8_range :
 (forall x:int8.
  (le_int((-128), integer_of_int8(x)) and le_int(integer_of_int8(x), (127))))

logic intP_tag:  -> intP tag_id

axiom intP_int : (int_of_tag(intP_tag) = (1))

logic intP_of_pointer_address: unit pointer -> intP pointer

axiom intP_of_pointer_address_of_pointer_addr :
 (forall p:intP pointer. (p = intP_of_pointer_address(pointer_address(p))))

axiom intP_parenttag_bottom : parenttag(intP_tag, bottom_tag)

axiom intP_tags :
 (forall x:intP pointer.
  (forall intP_tag_table:intP tag_table.
   instanceof(intP_tag_table, x, intP_tag)))

predicate is_duplet(a:intP pointer, len:int, i:int, j:int,
 intP_intM_a_2_at_L:(intP, int32) memory) =
 (le_int((0), i)
 and (lt_int(i, j)
     and (lt_int(j, len)
         and (integer_of_int32(select(intP_intM_a_2_at_L, shift(a, i))) = 
             integer_of_int32(select(intP_intM_a_2_at_L, shift(a, j)))))))

predicate left_valid_struct_charP(p:charP pointer, a:int,
 charP_alloc_table:charP alloc_table) =
 (offset_min(charP_alloc_table, p) <= a)

predicate left_valid_struct_intP(p:intP pointer, a:int,
 intP_alloc_table:intP alloc_table) = (offset_min(intP_alloc_table, p) <= a)

predicate left_valid_struct_voidP(p:voidP pointer, a:int,
 voidP_alloc_table:voidP alloc_table) =
 (offset_min(voidP_alloc_table, p) <= a)

axiom pointer_addr_of_charP_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(charP_of_pointer_address(p))))

axiom pointer_addr_of_intP_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(intP_of_pointer_address(p))))

logic voidP_of_pointer_address: unit pointer -> voidP pointer

axiom pointer_addr_of_voidP_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(voidP_of_pointer_address(p))))

predicate right_valid_struct_charP(p:charP pointer, b:int,
 charP_alloc_table:charP alloc_table) =
 (offset_max(charP_alloc_table, p) >= b)

predicate right_valid_struct_intP(p:intP pointer, b:int,
 intP_alloc_table:intP alloc_table) = (offset_max(intP_alloc_table, p) >= b)

predicate right_valid_struct_voidP(p:voidP pointer, b:int,
 voidP_alloc_table:voidP alloc_table) =
 (offset_max(voidP_alloc_table, p) >= b)

predicate strict_valid_root_charP(p:charP pointer, a:int, b:int,
 charP_alloc_table:charP alloc_table) =
 ((offset_min(charP_alloc_table, p) = a)
 and (offset_max(charP_alloc_table, p) = b))

predicate strict_valid_root_intP(p:intP pointer, a:int, b:int,
 intP_alloc_table:intP alloc_table) =
 ((offset_min(intP_alloc_table, p) = a)
 and (offset_max(intP_alloc_table, p) = b))

predicate strict_valid_root_voidP(p:voidP pointer, a:int, b:int,
 voidP_alloc_table:voidP alloc_table) =
 ((offset_min(voidP_alloc_table, p) = a)
 and (offset_max(voidP_alloc_table, p) = b))

predicate strict_valid_struct_charP(p:charP pointer, a:int, b:int,
 charP_alloc_table:charP alloc_table) =
 ((offset_min(charP_alloc_table, p) = a)
 and (offset_max(charP_alloc_table, p) = b))

predicate strict_valid_struct_intP(p:intP pointer, a:int, b:int,
 intP_alloc_table:intP alloc_table) =
 ((offset_min(intP_alloc_table, p) = a)
 and (offset_max(intP_alloc_table, p) = b))

predicate strict_valid_struct_voidP(p:voidP pointer, a:int, b:int,
 voidP_alloc_table:voidP alloc_table) =
 ((offset_min(voidP_alloc_table, p) = a)
 and (offset_max(voidP_alloc_table, p) = b))

predicate valid_root_charP(p:charP pointer, a:int, b:int,
 charP_alloc_table:charP alloc_table) =
 ((offset_min(charP_alloc_table, p) <= a)
 and (offset_max(charP_alloc_table, p) >= b))

predicate valid_root_intP(p:intP pointer, a:int, b:int,
 intP_alloc_table:intP alloc_table) =
 ((offset_min(intP_alloc_table, p) <= a)
 and (offset_max(intP_alloc_table, p) >= b))

predicate valid_root_voidP(p:voidP pointer, a:int, b:int,
 voidP_alloc_table:voidP alloc_table) =
 ((offset_min(voidP_alloc_table, p) <= a)
 and (offset_max(voidP_alloc_table, p) >= b))

predicate valid_struct_charP(p:charP pointer, a:int, b:int,
 charP_alloc_table:charP alloc_table) =
 ((offset_min(charP_alloc_table, p) <= a)
 and (offset_max(charP_alloc_table, p) >= b))

predicate valid_struct_intP(p:intP pointer, a:int, b:int,
 intP_alloc_table:intP alloc_table) =
 ((offset_min(intP_alloc_table, p) <= a)
 and (offset_max(intP_alloc_table, p) >= b))

predicate valid_struct_voidP(p:voidP pointer, a:int, b:int,
 voidP_alloc_table:voidP alloc_table) =
 ((offset_min(voidP_alloc_table, p) <= a)
 and (offset_max(voidP_alloc_table, p) >= b))

logic voidP_tag:  -> voidP tag_id

axiom voidP_int : (int_of_tag(voidP_tag) = (1))

axiom voidP_of_pointer_address_of_pointer_addr :
 (forall p:voidP pointer. (p = voidP_of_pointer_address(pointer_address(p))))

axiom voidP_parenttag_bottom : parenttag(voidP_tag, bottom_tag)

axiom voidP_tags :
 (forall x:voidP pointer.
  (forall voidP_tag_table:voidP tag_table.
   instanceof(voidP_tag_table, x, voidP_tag)))

exception Goto__LOR_0_exc of unit

exception Goto__LOR_exc of unit

exception Goto_while_0_break_exc of unit

exception Goto_while_1_break_exc of unit

exception Loop_continue_exc of unit

exception Loop_exit_exc of unit

exception Return_label_exc of unit

parameter charP_alloc_table : charP alloc_table ref

parameter charP_tag_table : charP tag_table ref

parameter alloc_struct_charP :
 n:int ->
  charP_alloc_table:charP alloc_table ref ->
   charP_tag_table:charP tag_table ref ->
    { } charP pointer writes charP_alloc_table,charP_tag_table
    { (strict_valid_struct_charP(result, (0), sub_int(n, (1)),
       charP_alloc_table)
      and (alloc_extends(charP_alloc_table@, charP_alloc_table)
          and (alloc_fresh(charP_alloc_table@, result, n)
              and instanceof(charP_tag_table, result, charP_tag)))) }

parameter alloc_struct_charP_requires :
 n:int ->
  charP_alloc_table:charP alloc_table ref ->
   charP_tag_table:charP tag_table ref ->
    { ge_int(n, (0))} charP pointer writes charP_alloc_table,charP_tag_table
    { (strict_valid_struct_charP(result, (0), sub_int(n, (1)),
       charP_alloc_table)
      and (alloc_extends(charP_alloc_table@, charP_alloc_table)
          and (alloc_fresh(charP_alloc_table@, result, n)
              and instanceof(charP_tag_table, result, charP_tag)))) }

parameter intP_alloc_table : intP alloc_table ref

parameter intP_tag_table : intP tag_table ref

parameter alloc_struct_intP :
 n:int ->
  intP_alloc_table:intP alloc_table ref ->
   intP_tag_table:intP tag_table ref ->
    { } intP pointer writes intP_alloc_table,intP_tag_table
    { (strict_valid_struct_intP(result, (0), sub_int(n, (1)),
       intP_alloc_table)
      and (alloc_extends(intP_alloc_table@, intP_alloc_table)
          and (alloc_fresh(intP_alloc_table@, result, n)
              and instanceof(intP_tag_table, result, intP_tag)))) }

parameter alloc_struct_intP_requires :
 n:int ->
  intP_alloc_table:intP alloc_table ref ->
   intP_tag_table:intP tag_table ref ->
    { ge_int(n, (0))} intP pointer writes intP_alloc_table,intP_tag_table
    { (strict_valid_struct_intP(result, (0), sub_int(n, (1)),
       intP_alloc_table)
      and (alloc_extends(intP_alloc_table@, intP_alloc_table)
          and (alloc_fresh(intP_alloc_table@, result, n)
              and instanceof(intP_tag_table, result, intP_tag)))) }

parameter voidP_alloc_table : voidP alloc_table ref

parameter voidP_tag_table : voidP tag_table ref

parameter alloc_struct_voidP :
 n:int ->
  voidP_alloc_table:voidP alloc_table ref ->
   voidP_tag_table:voidP tag_table ref ->
    { } voidP pointer writes voidP_alloc_table,voidP_tag_table
    { (strict_valid_struct_voidP(result, (0), sub_int(n, (1)),
       voidP_alloc_table)
      and (alloc_extends(voidP_alloc_table@, voidP_alloc_table)
          and (alloc_fresh(voidP_alloc_table@, result, n)
              and instanceof(voidP_tag_table, result, voidP_tag)))) }

parameter alloc_struct_voidP_requires :
 n:int ->
  voidP_alloc_table:voidP alloc_table ref ->
   voidP_tag_table:voidP tag_table ref ->
    { ge_int(n, (0))} voidP pointer writes voidP_alloc_table,voidP_tag_table
    { (strict_valid_struct_voidP(result, (0), sub_int(n, (1)),
       voidP_alloc_table)
      and (alloc_extends(voidP_alloc_table@, voidP_alloc_table)
          and (alloc_fresh(voidP_alloc_table@, result, n)
              and instanceof(voidP_tag_table, result, voidP_tag)))) }

parameter any_int32 : unit -> { } int32 { true }

parameter any_int8 : unit -> { } int8 { true }

parameter duplet :
 a_0:intP pointer ->
  len_0:int32 ->
   except:intP pointer ->
    pi:intP pointer ->
     pj:intP pointer ->
      intP_intM_pj_6:(intP, int32) memory ref ->
       intP_intM_pi_5:(intP, int32) memory ref ->
        intP_pj_6_alloc_table:intP alloc_table ->
         intP_pi_5_alloc_table:intP alloc_table ->
          intP_except_4_alloc_table:intP alloc_table ->
           intP_a_3_alloc_table:intP alloc_table ->
            intP_intM_except_4:(intP, int32) memory ->
             intP_intM_a_3:(intP, int32) memory ->
              { } unit reads intP_intM_pi_5,intP_intM_pj_6
              writes intP_intM_pi_5,intP_intM_pj_6
              { (JC_36:
                ((JC_32:
                 ((JC_30:
                  is_duplet(a_0, integer_of_int32(len_0),
                  integer_of_int32(select(intP_intM_pi_5, pi)),
                  integer_of_int32(select(intP_intM_pj_6, pj)),
                  intP_intM_a_3))
                 and (JC_31:
                     (not eq_opt(integer_of_int32(select(intP_intM_a_3,
                                                  shift(a_0,
                                                  integer_of_int32(select(intP_intM_pi_5,
                                                                   pi))))),
                          except, intP_intM_except_4)))))
                and (JC_35:
                    ((JC_33:
                     not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5@,
                     intP_intM_pi_5, pset_singleton(pi)))
                    and (JC_34:
                        not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6@,
                        intP_intM_pj_6, pset_singleton(pj))))))) }

parameter duplet_requires :
 a_0:intP pointer ->
  len_0:int32 ->
   except:intP pointer ->
    pi:intP pointer ->
     pj:intP pointer ->
      intP_intM_pj_6:(intP, int32) memory ref ->
       intP_intM_pi_5:(intP, int32) memory ref ->
        intP_pj_6_alloc_table:intP alloc_table ->
         intP_pi_5_alloc_table:intP alloc_table ->
          intP_except_4_alloc_table:intP alloc_table ->
           intP_a_3_alloc_table:intP alloc_table ->
            intP_intM_except_4:(intP, int32) memory ->
             intP_intM_a_3:(intP, int32) memory ->
              { (JC_10:
                ((JC_1: le_int((2), integer_of_int32(len_0)))
                and ((JC_2:
                     le_int(offset_min(intP_a_3_alloc_table, a_0), (0)))
                    and ((JC_3:
                         ge_int(offset_max(intP_a_3_alloc_table, a_0),
                         sub_int(integer_of_int32(len_0), (1))))
                        and ((JC_4:
                             le_int(offset_min(intP_pi_5_alloc_table, pi),
                             (0)))
                            and ((JC_5:
                                 ge_int(offset_max(intP_pi_5_alloc_table, pi),
                                 (0)))
                                and ((JC_6:
                                     le_int(offset_min(intP_pj_6_alloc_table,
                                            pj),
                                     (0)))
                                    and ((JC_7:
                                         ge_int(offset_max(intP_pj_6_alloc_table,
                                                pj),
                                         (0)))
                                        and ((JC_8:
                                             ((except = null)
                                             or (le_int(offset_min(intP_except_4_alloc_table,
                                                        except),
                                                 (0))
                                                and ge_int(offset_max(intP_except_4_alloc_table,
                                                           except),
                                                    (0)))))
                                            and (JC_9:
                                                (exists i_0:int.
                                                 (exists j_0:int.
                                                  (is_duplet(a_0,
                                                   integer_of_int32(len_0),
                                                   i_0, j_0, intP_intM_a_3)
                                                  and (not eq_opt(integer_of_int32(
                                                                  select(intP_intM_a_3,
                                                                  shift(a_0,
                                                                  i_0))),
                                                           except,
                                                           intP_intM_except_4)))))))))))))))}
              unit reads intP_intM_pi_5,intP_intM_pj_6
              writes intP_intM_pi_5,intP_intM_pj_6
              { (JC_36:
                ((JC_32:
                 ((JC_30:
                  is_duplet(a_0, integer_of_int32(len_0),
                  integer_of_int32(select(intP_intM_pi_5, pi)),
                  integer_of_int32(select(intP_intM_pj_6, pj)),
                  intP_intM_a_3))
                 and (JC_31:
                     (not eq_opt(integer_of_int32(select(intP_intM_a_3,
                                                  shift(a_0,
                                                  integer_of_int32(select(intP_intM_pi_5,
                                                                   pi))))),
                          except, intP_intM_except_4)))))
                and (JC_35:
                    ((JC_33:
                     not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5@,
                     intP_intM_pi_5, pset_singleton(pi)))
                    and (JC_34:
                        not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6@,
                        intP_intM_pj_6, pset_singleton(pj))))))) }

parameter duplets :
 a_0_0:intP pointer ->
  len_0_0:int32 ->
   pi_0:intP pointer ->
    pj_0:intP pointer ->
     pk:intP pointer ->
      pl:intP pointer ->
       intP_intM_pl_11:(intP, int32) memory ref ->
        intP_intM_pk_10:(intP, int32) memory ref ->
         intP_intM_pj_0_9:(intP, int32) memory ref ->
          intP_intM_pi_0_8:(intP, int32) memory ref ->
           intP_pl_11_alloc_table:intP alloc_table ->
            intP_pk_10_alloc_table:intP alloc_table ->
             intP_pj_0_9_alloc_table:intP alloc_table ->
              intP_pi_0_8_alloc_table:intP alloc_table ->
               intP_a_0_7_alloc_table:intP alloc_table ->
                intP_intM_a_0_7:(intP, int32) memory ->
                 { } unit
                 reads intP_intM_pi_0_8,intP_intM_pj_0_9,intP_intM_pk_10,intP_intM_pl_11
                 writes intP_intM_pi_0_8,intP_intM_pj_0_9,intP_intM_pk_10,intP_intM_pl_11
                 { (JC_131:
                   ((JC_125:
                    ((JC_122:
                     is_duplet(a_0_0, integer_of_int32(len_0_0),
                     integer_of_int32(select(intP_intM_pi_0_8, pi_0)),
                     integer_of_int32(select(intP_intM_pj_0_9, pj_0)),
                     intP_intM_a_0_7))
                    and ((JC_123:
                         is_duplet(a_0_0, integer_of_int32(len_0_0),
                         integer_of_int32(select(intP_intM_pk_10, pk)),
                         integer_of_int32(select(intP_intM_pl_11, pl)),
                         intP_intM_a_0_7))
                        and (JC_124:
                            (integer_of_int32(select(intP_intM_a_0_7,
                                              shift(a_0_0,
                                              integer_of_int32(select(intP_intM_pi_0_8,
                                                               pi_0))))) <> 
                            integer_of_int32(select(intP_intM_a_0_7,
                                             shift(a_0_0,
                                             integer_of_int32(select(intP_intM_pk_10,
                                                              pk))))))))))
                   and (JC_130:
                       ((((JC_126:
                          not_assigns(intP_pi_0_8_alloc_table,
                          intP_intM_pi_0_8@, intP_intM_pi_0_8,
                          pset_singleton(pi_0)))
                         and (JC_127:
                             not_assigns(intP_pj_0_9_alloc_table,
                             intP_intM_pj_0_9@, intP_intM_pj_0_9,
                             pset_singleton(pj_0))))
                        and (JC_128:
                            not_assigns(intP_pk_10_alloc_table,
                            intP_intM_pk_10@, intP_intM_pk_10,
                            pset_singleton(pk))))
                       and (JC_129:
                           not_assigns(intP_pl_11_alloc_table,
                           intP_intM_pl_11@, intP_intM_pl_11,
                           pset_singleton(pl))))))) }

parameter duplets_requires :
 a_0_0:intP pointer ->
  len_0_0:int32 ->
   pi_0:intP pointer ->
    pj_0:intP pointer ->
     pk:intP pointer ->
      pl:intP pointer ->
       intP_intM_pl_11:(intP, int32) memory ref ->
        intP_intM_pk_10:(intP, int32) memory ref ->
         intP_intM_pj_0_9:(intP, int32) memory ref ->
          intP_intM_pi_0_8:(intP, int32) memory ref ->
           intP_pl_11_alloc_table:intP alloc_table ->
            intP_pk_10_alloc_table:intP alloc_table ->
             intP_pj_0_9_alloc_table:intP alloc_table ->
              intP_pi_0_8_alloc_table:intP alloc_table ->
               intP_a_0_7_alloc_table:intP alloc_table ->
                intP_intM_a_0_7:(intP, int32) memory ->
                 { (JC_96:
                   ((JC_84: le_int((4), integer_of_int32(len_0_0)))
                   and ((JC_85:
                        le_int(offset_min(intP_a_0_7_alloc_table, a_0_0),
                        (0)))
                       and ((JC_86:
                            ge_int(offset_max(intP_a_0_7_alloc_table, a_0_0),
                            sub_int(integer_of_int32(len_0_0), (1))))
                           and ((JC_87:
                                le_int(offset_min(intP_pi_0_8_alloc_table,
                                       pi_0),
                                (0)))
                               and ((JC_88:
                                    ge_int(offset_max(intP_pi_0_8_alloc_table,
                                           pi_0),
                                    (0)))
                                   and ((JC_89:
                                        le_int(offset_min(intP_pj_0_9_alloc_table,
                                               pj_0),
                                        (0)))
                                       and ((JC_90:
                                            ge_int(offset_max(intP_pj_0_9_alloc_table,
                                                   pj_0),
                                            (0)))
                                           and ((JC_91:
                                                le_int(offset_min(intP_pk_10_alloc_table,
                                                       pk),
                                                (0)))
                                               and ((JC_92:
                                                    ge_int(offset_max(intP_pk_10_alloc_table,
                                                           pk),
                                                    (0)))
                                                   and ((JC_93:
                                                        le_int(offset_min(intP_pl_11_alloc_table,
                                                               pl),
                                                        (0)))
                                                       and ((JC_94:
                                                            ge_int(offset_max(intP_pl_11_alloc_table,
                                                                   pl),
                                                            (0)))
                                                           and (JC_95:
                                                               (exists i_1_0:int.
                                                                (exists j_1_0:int.
                                                                 (exists k_0:int.
                                                                  (exists l_1:int.
                                                                   (is_duplet(a_0_0,
                                                                    integer_of_int32(len_0_0),
                                                                    i_1_0,
                                                                    j_1_0,
                                                                    intP_intM_a_0_7)
                                                                   and 
                                                                   (is_duplet(a_0_0,
                                                                    integer_of_int32(len_0_0),
                                                                    k_0, l_1,
                                                                    intP_intM_a_0_7)
                                                                   and 
                                                                   (integer_of_int32(
                                                                    select(intP_intM_a_0_7,
                                                                    shift(a_0_0,
                                                                    i_1_0))) <> 
                                                                   integer_of_int32(
                                                                   select(intP_intM_a_0_7,
                                                                   shift(a_0_0,
                                                                   k_0)))))))))))))))))))))))}
                 unit
                 reads intP_intM_pi_0_8,intP_intM_pj_0_9,intP_intM_pk_10,intP_intM_pl_11
                 writes intP_intM_pi_0_8,intP_intM_pj_0_9,intP_intM_pk_10,intP_intM_pl_11
                 { (JC_131:
                   ((JC_125:
                    ((JC_122:
                     is_duplet(a_0_0, integer_of_int32(len_0_0),
                     integer_of_int32(select(intP_intM_pi_0_8, pi_0)),
                     integer_of_int32(select(intP_intM_pj_0_9, pj_0)),
                     intP_intM_a_0_7))
                    and ((JC_123:
                         is_duplet(a_0_0, integer_of_int32(len_0_0),
                         integer_of_int32(select(intP_intM_pk_10, pk)),
                         integer_of_int32(select(intP_intM_pl_11, pl)),
                         intP_intM_a_0_7))
                        and (JC_124:
                            (integer_of_int32(select(intP_intM_a_0_7,
                                              shift(a_0_0,
                                              integer_of_int32(select(intP_intM_pi_0_8,
                                                               pi_0))))) <> 
                            integer_of_int32(select(intP_intM_a_0_7,
                                             shift(a_0_0,
                                             integer_of_int32(select(intP_intM_pk_10,
                                                              pk))))))))))
                   and (JC_130:
                       ((((JC_126:
                          not_assigns(intP_pi_0_8_alloc_table,
                          intP_intM_pi_0_8@, intP_intM_pi_0_8,
                          pset_singleton(pi_0)))
                         and (JC_127:
                             not_assigns(intP_pj_0_9_alloc_table,
                             intP_intM_pj_0_9@, intP_intM_pj_0_9,
                             pset_singleton(pj_0))))
                        and (JC_128:
                            not_assigns(intP_pk_10_alloc_table,
                            intP_intM_pk_10@, intP_intM_pk_10,
                            pset_singleton(pk))))
                       and (JC_129:
                           not_assigns(intP_pl_11_alloc_table,
                           intP_intM_pl_11@, intP_intM_pl_11,
                           pset_singleton(pl))))))) }

parameter int32_of_integer_ :
 x:int ->
  { (le_int((-2147483648), x) and le_int(x, (2147483647)))} int32
  { eq_int(integer_of_int32(result), x) }

parameter int8_of_integer_ :
 x:int ->
  { (le_int((-128), x) and le_int(x, (127)))} int8
  { eq_int(integer_of_int8(result), x) }

parameter safe_int32_of_integer_ :
 x:int -> { } int32 { eq_int(integer_of_int32(result), x) }

parameter safe_int8_of_integer_ :
 x:int -> { } int8 { eq_int(integer_of_int8(result), x) }

let duplet_ensures_default =
 fun (a_0 : intP pointer) (len_0 : int32) (except : intP pointer) (pi : intP pointer) (pj : intP pointer) (intP_intM_pi_5 : (intP, int32) memory ref) (intP_intM_pj_6 : (intP, int32) memory ref) (intP_a_3_alloc_table : intP alloc_table) (intP_except_4_alloc_table : intP alloc_table) (intP_pi_5_alloc_table : intP alloc_table) (intP_pj_6_alloc_table : intP alloc_table) (intP_intM_a_3 : (intP, int32) memory) (intP_intM_except_4 : (intP, int32) memory) ->
  { (JC_21:
    ((JC_12: le_int((2), integer_of_int32(len_0)))
    and ((JC_13: le_int(offset_min(intP_a_3_alloc_table, a_0), (0)))
        and ((JC_14:
             ge_int(offset_max(intP_a_3_alloc_table, a_0),
             sub_int(integer_of_int32(len_0), (1))))
            and ((JC_15: le_int(offset_min(intP_pi_5_alloc_table, pi), (0)))
                and ((JC_16:
                     ge_int(offset_max(intP_pi_5_alloc_table, pi), (0)))
                    and ((JC_17:
                         le_int(offset_min(intP_pj_6_alloc_table, pj), (0)))
                        and ((JC_18:
                             ge_int(offset_max(intP_pj_6_alloc_table, pj),
                             (0)))
                            and ((JC_19:
                                 ((except = null)
                                 or (le_int(offset_min(intP_except_4_alloc_table,
                                            except),
                                     (0))
                                    and ge_int(offset_max(intP_except_4_alloc_table,
                                               except),
                                        (0)))))
                                and (JC_20:
                                    (exists i_0:int.
                                     (exists j_0:int.
                                      (is_duplet(a_0,
                                       integer_of_int32(len_0), i_0, j_0,
                                       intP_intM_a_3)
                                      and (not eq_opt(integer_of_int32(
                                                      select(intP_intM_a_3,
                                                      shift(a_0, i_0))),
                                               except, intP_intM_except_4))))))))))))))) }
  (init:
  try
   begin
     (let i_1 = ref (any_int32 void) in
     (let v = ref (any_int32 void) in
     (let j_1 = ref (any_int32 void) in
     try
      begin
        try
         (C_1:
         begin
           (let jessie_<num> = (i_1 := (safe_int32_of_integer_ (0))) in void);
          (loop_3:
          while true do
          { invariant
              ((JC_68:
               ((JC_65: le_int((0), integer_of_int32(i_1)))
               and ((JC_66:
                    le_int(integer_of_int32(i_1),
                    sub_int(integer_of_int32(len_0), (1))))
                   and (JC_67:
                       (forall k:int.
                        (forall l_0:int.
                         ((le_int((0), k)
                          and (lt_int(k, integer_of_int32(i_1))
                              and (lt_int(k, l_0)
                                  and lt_int(l_0, integer_of_int32(len_0))))) ->
                          ((not eq_opt(integer_of_int32(select(intP_intM_a_3,
                                                        shift(a_0, k))),
                                except, intP_intM_except_4)) ->
                           (not is_duplet(a_0, integer_of_int32(len_0), k,
                                l_0, intP_intM_a_3))))))))))
              and (JC_72:
                  ((JC_70:
                   not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5@init,
                   intP_intM_pi_5, pset_singleton(pi)))
                  and (JC_71:
                      not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6@init,
                      intP_intM_pj_6, pset_singleton(pj))))))  }
           begin
             [ { } unit { true } ];
            try
             begin
               (let jessie_<num> =
               (C_34:
               begin
                 (if ((le_int_ (integer_of_int32 !i_1)) (integer_of_int32 
                                                         (C_9:
                                                         (safe_int32_of_integer_ 
                                                          (C_8:
                                                          ((sub_int (integer_of_int32 len_0)) (2)))))))
                 then void else (raise (Goto_while_0_break_exc void)));
                try
                 begin
                   try
                    (C_12:
                    begin
                      (let jessie_<num> =
                      (v := (C_11:
                            ((safe_acc_ intP_intM_a_3) (C_10:
                                                       ((shift a_0) (integer_of_int32 !i_1)))))) in
                      void);
                     (if ((safe_eq_pointer except) null)
                     then (raise (Goto__LOR_exc void))
                     else
                      (if ((neq_int_ (integer_of_int32 (C_13:
                                                       ((safe_acc_ intP_intM_except_4) except)))) 
                           (integer_of_int32 !v))
                      then (raise (Goto__LOR_exc void)) else void));
                     (raise (Goto__LOR_0_exc void));
                     (raise (Goto__LOR_exc void)) end) with
                    Goto__LOR_exc jessie_<num> ->
                    (_LOR:
                    try
                     (C_16:
                     begin
                       (let jessie_<num> =
                       (j_1 := (C_15:
                               (safe_int32_of_integer_ (C_14:
                                                       ((add_int (integer_of_int32 !i_1)) (1)))))) in
                       void);
                      (loop_4:
                      while true do
                      { invariant
                          ((JC_77:
                           ((JC_74:
                            le_int(add_int(integer_of_int32(i_1), (1)),
                            integer_of_int32(j_1)))
                           and ((JC_75:
                                le_int(integer_of_int32(j_1),
                                integer_of_int32(len_0)))
                               and (JC_76:
                                   (forall l:int.
                                    ((lt_int(integer_of_int32(i_1), l)
                                     and lt_int(l, integer_of_int32(j_1))) ->
                                     (not is_duplet(a_0,
                                          integer_of_int32(len_0),
                                          integer_of_int32(i_1), l,
                                          intP_intM_a_3))))))))
                          and (JC_81:
                              ((JC_79:
                               not_assigns(intP_pi_5_alloc_table,
                               intP_intM_pi_5@init, intP_intM_pi_5,
                               pset_singleton(pi)))
                              and (JC_80:
                                  not_assigns(intP_pj_6_alloc_table,
                                  intP_intM_pj_6@init, intP_intM_pj_6,
                                  pset_singleton(pj))))))  }
                       begin
                         [ { } unit { true } ];
                        try
                         begin
                           (let jessie_<num> =
                           (C_31:
                           begin
                             (if ((lt_int_ (integer_of_int32 !j_1)) (integer_of_int32 len_0))
                             then void
                             else (raise (Goto_while_1_break_exc void)));
                            (if ((eq_int_ (integer_of_int32 (C_28:
                                                            ((safe_acc_ intP_intM_a_3) 
                                                             (C_27:
                                                             ((shift a_0) 
                                                              (integer_of_int32 !j_1))))))) 
                                 (integer_of_int32 !v))
                            then
                             (C_24:
                             (C_26:
                             begin
                               (let jessie_<num> = !i_1 in
                               (let jessie_<num> = pi in
                               (((safe_upd_ intP_intM_pi_5) jessie_<num>) jessie_<num>)));
                              (let jessie_<num> = !j_1 in
                              (let jessie_<num> = pj in
                              (((safe_upd_ intP_intM_pj_6) jessie_<num>) jessie_<num>)));
                              (raise (Return_label_exc void)) end))
                            else void);
                            (j_1 := (C_30:
                                    (safe_int32_of_integer_ (C_29:
                                                            ((add_int 
                                                              (integer_of_int32 !j_1)) (1))))));
                            !j_1 end) in void);
                          (raise (Loop_continue_exc void)) end with
                         Loop_continue_exc jessie_<num> -> void end end done);
                      (raise (Goto_while_1_break_exc void)) end) with
                     Goto_while_1_break_exc jessie_<num> ->
                     (while_1_break: void) end) end;
                  (raise (Goto__LOR_0_exc void)) end with
                 Goto__LOR_0_exc jessie_<num> -> (_LOR_0: void) end;
                (i_1 := (C_33:
                        (safe_int32_of_integer_ (C_32:
                                                ((add_int (integer_of_int32 !i_1)) (1))))));
                !i_1 end) in void); (raise (Loop_continue_exc void)) end with
             Loop_continue_exc jessie_<num> -> void end end done);
          (raise (Goto_while_0_break_exc void)) end) with
         Goto_while_0_break_exc jessie_<num> -> (while_0_break: void) end;
       (assert { (JC_83: (false = true)) }; void); void;
       (raise (Return_label_exc void)) end with Return_label_exc jessie_<num> ->
      (return_label: (raise Return)) end))); (raise Return) end with
   Return -> void end)
  { (JC_29:
    ((JC_25:
     ((JC_23:
      is_duplet(a_0, integer_of_int32(len_0),
      integer_of_int32(select(intP_intM_pi_5, pi)),
      integer_of_int32(select(intP_intM_pj_6, pj)), intP_intM_a_3))
     and (JC_24:
         (not eq_opt(integer_of_int32(select(intP_intM_a_3,
                                      shift(a_0,
                                      integer_of_int32(select(intP_intM_pi_5,
                                                       pi))))),
              except, intP_intM_except_4)))))
    and (JC_28:
        ((JC_26:
         not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5@, intP_intM_pi_5,
         pset_singleton(pi)))
        and (JC_27:
            not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6@,
            intP_intM_pj_6, pset_singleton(pj))))))) }

let duplet_safety =
 fun (a_0 : intP pointer) (len_0 : int32) (except : intP pointer) (pi : intP pointer) (pj : intP pointer) (intP_intM_pi_5 : (intP, int32) memory ref) (intP_intM_pj_6 : (intP, int32) memory ref) (intP_a_3_alloc_table : intP alloc_table) (intP_except_4_alloc_table : intP alloc_table) (intP_pi_5_alloc_table : intP alloc_table) (intP_pj_6_alloc_table : intP alloc_table) (intP_intM_a_3 : (intP, int32) memory) (intP_intM_except_4 : (intP, int32) memory) ->
  { (JC_21:
    ((JC_12: le_int((2), integer_of_int32(len_0)))
    and ((JC_13: le_int(offset_min(intP_a_3_alloc_table, a_0), (0)))
        and ((JC_14:
             ge_int(offset_max(intP_a_3_alloc_table, a_0),
             sub_int(integer_of_int32(len_0), (1))))
            and ((JC_15: le_int(offset_min(intP_pi_5_alloc_table, pi), (0)))
                and ((JC_16:
                     ge_int(offset_max(intP_pi_5_alloc_table, pi), (0)))
                    and ((JC_17:
                         le_int(offset_min(intP_pj_6_alloc_table, pj), (0)))
                        and ((JC_18:
                             ge_int(offset_max(intP_pj_6_alloc_table, pj),
                             (0)))
                            and ((JC_19:
                                 ((except = null)
                                 or (le_int(offset_min(intP_except_4_alloc_table,
                                            except),
                                     (0))
                                    and ge_int(offset_max(intP_except_4_alloc_table,
                                               except),
                                        (0)))))
                                and (JC_20:
                                    (exists i_0:int.
                                     (exists j_0:int.
                                      (is_duplet(a_0,
                                       integer_of_int32(len_0), i_0, j_0,
                                       intP_intM_a_3)
                                      and (not eq_opt(integer_of_int32(
                                                      select(intP_intM_a_3,
                                                      shift(a_0, i_0))),
                                               except, intP_intM_except_4))))))))))))))) }
  (init:
  try
   begin
     (let i_1 = ref (any_int32 void) in
     (let v = ref (any_int32 void) in
     (let j_1 = ref (any_int32 void) in
     try
      begin
        try
         (C_1:
         begin
           (let jessie_<num> = (i_1 := (safe_int32_of_integer_ (0))) in void);
          (loop_1:
          while true do
          { invariant (JC_44: true)
            variant (JC_61 : sub_int(integer_of_int32(len_0),
                             integer_of_int32(i_1))) }
           begin
             [ { } unit reads i_1
               { (JC_42:
                 ((JC_39: le_int((0), integer_of_int32(i_1)))
                 and ((JC_40:
                      le_int(integer_of_int32(i_1),
                      sub_int(integer_of_int32(len_0), (1))))
                     and (JC_41:
                         (forall k:int.
                          (forall l_0:int.
                           ((le_int((0), k)
                            and (lt_int(k, integer_of_int32(i_1))
                                and (lt_int(k, l_0)
                                    and lt_int(l_0, integer_of_int32(len_0))))) ->
                            ((not eq_opt(integer_of_int32(select(intP_intM_a_3,
                                                          shift(a_0, k))),
                                  except, intP_intM_except_4)) ->
                             (not is_duplet(a_0, integer_of_int32(len_0), k,
                                  l_0, intP_intM_a_3)))))))))) } ];
            try
             begin
               (let jessie_<num> =
               (C_34:
               begin
                 (if ((le_int_ (integer_of_int32 !i_1)) (integer_of_int32 
                                                         (C_9:
                                                         (JC_46:
                                                         (int32_of_integer_ 
                                                          (C_8:
                                                          ((sub_int (integer_of_int32 len_0)) (2))))))))
                 then void else (raise (Goto_while_0_break_exc void)));
                try
                 begin
                   try
                    (C_12:
                    begin
                      (let jessie_<num> =
                      (v := (C_11:
                            (JC_47:
                            ((((offset_acc_ intP_a_3_alloc_table) intP_intM_a_3) a_0) 
                             (integer_of_int32 !i_1))))) in void);
                     (if ((eq_pointer except) null)
                     then (raise (Goto__LOR_exc void))
                     else
                      (if ((neq_int_ (integer_of_int32 (C_13:
                                                       (JC_48:
                                                       (((acc_ intP_except_4_alloc_table) intP_intM_except_4) except))))) 
                           (integer_of_int32 !v))
                      then (raise (Goto__LOR_exc void)) else void));
                     (raise (Goto__LOR_0_exc void));
                     (raise (Goto__LOR_exc void)) end) with
                    Goto__LOR_exc jessie_<num> ->
                    (_LOR:
                    try
                     (C_16:
                     begin
                       (let jessie_<num> =
                       (j_1 := (C_15:
                               (JC_49:
                               (int32_of_integer_ (C_14:
                                                  ((add_int (integer_of_int32 !i_1)) (1))))))) in
                       void);
                      (loop_2:
                      while true do
                      { invariant (JC_55: true)
                        variant (JC_59 : sub_int(integer_of_int32(len_0),
                                         integer_of_int32(j_1))) }
                       begin
                         [ { } unit reads i_1,j_1
                           { (JC_53:
                             ((JC_50:
                              le_int(add_int(integer_of_int32(i_1), (1)),
                              integer_of_int32(j_1)))
                             and ((JC_51:
                                  le_int(integer_of_int32(j_1),
                                  integer_of_int32(len_0)))
                                 and (JC_52:
                                     (forall l:int.
                                      ((lt_int(integer_of_int32(i_1), l)
                                       and lt_int(l, integer_of_int32(j_1))) ->
                                       (not is_duplet(a_0,
                                            integer_of_int32(len_0),
                                            integer_of_int32(i_1), l,
                                            intP_intM_a_3)))))))) } ];
                        try
                         begin
                           (let jessie_<num> =
                           (C_31:
                           begin
                             (if ((lt_int_ (integer_of_int32 !j_1)) (integer_of_int32 len_0))
                             then void
                             else (raise (Goto_while_1_break_exc void)));
                            (if ((eq_int_ (integer_of_int32 (C_28:
                                                            (JC_57:
                                                            ((((offset_acc_ intP_a_3_alloc_table) intP_intM_a_3) a_0) 
                                                             (integer_of_int32 !j_1)))))) 
                                 (integer_of_int32 !v))
                            then
                             (C_24:
                             (C_26:
                             begin
                               (let jessie_<num> = !i_1 in
                               (let jessie_<num> = pi in
                               (JC_63:
                               ((((upd_ intP_pi_5_alloc_table) intP_intM_pi_5) jessie_<num>) jessie_<num>))));
                              (let jessie_<num> = !j_1 in
                              (let jessie_<num> = pj in
                              (JC_64:
                              ((((upd_ intP_pj_6_alloc_table) intP_intM_pj_6) jessie_<num>) jessie_<num>))));
                              (raise (Return_label_exc void)) end))
                            else void);
                            (j_1 := (C_30:
                                    (JC_58:
                                    (int32_of_integer_ (C_29:
                                                       ((add_int (integer_of_int32 !j_1)) (1)))))));
                            !j_1 end) in void);
                          (raise (Loop_continue_exc void)) end with
                         Loop_continue_exc jessie_<num> -> void end end done);
                      (raise (Goto_while_1_break_exc void)) end) with
                     Goto_while_1_break_exc jessie_<num> ->
                     (while_1_break: void) end) end;
                  (raise (Goto__LOR_0_exc void)) end with
                 Goto__LOR_0_exc jessie_<num> -> (_LOR_0: void) end;
                (i_1 := (C_33:
                        (JC_60:
                        (int32_of_integer_ (C_32:
                                           ((add_int (integer_of_int32 !i_1)) (1)))))));
                !i_1 end) in void); (raise (Loop_continue_exc void)) end with
             Loop_continue_exc jessie_<num> -> void end end done);
          (raise (Goto_while_0_break_exc void)) end) with
         Goto_while_0_break_exc jessie_<num> -> (while_0_break: void) end;
       [ { } unit { (JC_62: (false = true)) } ]; void;
       (raise (Return_label_exc void)) end with Return_label_exc jessie_<num> ->
      (return_label: (raise Return)) end))); (raise Return) end with
   Return -> void end) { true }

let duplets_ensures_default =
 fun (a_0_0 : intP pointer) (len_0_0 : int32) (pi_0 : intP pointer) (pj_0 : intP pointer) (pk : intP pointer) (pl : intP pointer) (intP_intM_pi_0_8 : (intP, int32) memory ref) (intP_intM_pj_0_9 : (intP, int32) memory ref) (intP_intM_pk_10 : (intP, int32) memory ref) (intP_intM_pl_11 : (intP, int32) memory ref) (intP_a_0_7_alloc_table : intP alloc_table) (intP_pi_0_8_alloc_table : intP alloc_table) (intP_pj_0_9_alloc_table : intP alloc_table) (intP_pk_10_alloc_table : intP alloc_table) (intP_pl_11_alloc_table : intP alloc_table) (intP_intM_a_0_7 : (intP, int32) memory) ->
  { (JC_110:
    ((JC_98: le_int((4), integer_of_int32(len_0_0)))
    and ((JC_99: le_int(offset_min(intP_a_0_7_alloc_table, a_0_0), (0)))
        and ((JC_100:
             ge_int(offset_max(intP_a_0_7_alloc_table, a_0_0),
             sub_int(integer_of_int32(len_0_0), (1))))
            and ((JC_101:
                 le_int(offset_min(intP_pi_0_8_alloc_table, pi_0), (0)))
                and ((JC_102:
                     ge_int(offset_max(intP_pi_0_8_alloc_table, pi_0), (0)))
                    and ((JC_103:
                         le_int(offset_min(intP_pj_0_9_alloc_table, pj_0),
                         (0)))
                        and ((JC_104:
                             ge_int(offset_max(intP_pj_0_9_alloc_table, pj_0),
                             (0)))
                            and ((JC_105:
                                 le_int(offset_min(intP_pk_10_alloc_table,
                                        pk),
                                 (0)))
                                and ((JC_106:
                                     ge_int(offset_max(intP_pk_10_alloc_table,
                                            pk),
                                     (0)))
                                    and ((JC_107:
                                         le_int(offset_min(intP_pl_11_alloc_table,
                                                pl),
                                         (0)))
                                        and ((JC_108:
                                             ge_int(offset_max(intP_pl_11_alloc_table,
                                                    pl),
                                             (0)))
                                            and (JC_109:
                                                (exists i_1_0:int.
                                                 (exists j_1_0:int.
                                                  (exists k_0:int.
                                                   (exists l_1:int.
                                                    (is_duplet(a_0_0,
                                                     integer_of_int32(len_0_0),
                                                     i_1_0, j_1_0,
                                                     intP_intM_a_0_7)
                                                    and (is_duplet(a_0_0,
                                                         integer_of_int32(len_0_0),
                                                         k_0, l_1,
                                                         intP_intM_a_0_7)
                                                        and (integer_of_int32(
                                                             select(intP_intM_a_0_7,
                                                             shift(a_0_0,
                                                             i_1_0))) <> 
                                                            integer_of_int32(
                                                            select(intP_intM_a_0_7,
                                                            shift(a_0_0, k_0))))))))))))))))))))))) }
  (init:
  try
   begin
     (let intP_intM_null_15 = (any_memory void) in
     (let intP_null_15_alloc_table = (any_alloc_table void) in
     (C_56:
     (C_59:
     begin
       (let jessie_<num> = a_0_0 in
       (let jessie_<num> = len_0_0 in
       (let jessie_<num> = null in
       (let jessie_<num> = pi_0 in
       (let jessie_<num> = pj_0 in
       (JC_137:
       (((((((((((((duplet jessie_<num>) jessie_<num>) jessie_<num>) jessie_<num>) jessie_<num>) intP_intM_pj_0_9) intP_intM_pi_0_8) intP_pj_0_9_alloc_table) intP_pi_0_8_alloc_table) intP_null_15_alloc_table) intP_a_0_7_alloc_table) intP_intM_null_15) intP_intM_a_0_7)))))));
      (let jessie_<num> = a_0_0 in
      (let jessie_<num> = len_0_0 in
      (let jessie_<num> =
      (C_58:
      ((shift a_0_0) (integer_of_int32 (C_57:
                                       ((safe_acc_ !intP_intM_pi_0_8) pi_0))))) in
      (let jessie_<num> = pk in
      (let jessie_<num> = pl in
      (JC_138:
      (((((((((((((duplet jessie_<num>) jessie_<num>) jessie_<num>) jessie_<num>) jessie_<num>) intP_intM_pl_11) intP_intM_pk_10) intP_pl_11_alloc_table) intP_pk_10_alloc_table) intP_a_0_7_alloc_table) intP_a_0_7_alloc_table) intP_intM_a_0_7) intP_intM_a_0_7)))))));
      (raise Return) end)))); (raise Return) end with Return -> void end)
  { (JC_121:
    ((JC_115:
     ((JC_112:
      is_duplet(a_0_0, integer_of_int32(len_0_0),
      integer_of_int32(select(intP_intM_pi_0_8, pi_0)),
      integer_of_int32(select(intP_intM_pj_0_9, pj_0)), intP_intM_a_0_7))
     and ((JC_113:
          is_duplet(a_0_0, integer_of_int32(len_0_0),
          integer_of_int32(select(intP_intM_pk_10, pk)),
          integer_of_int32(select(intP_intM_pl_11, pl)), intP_intM_a_0_7))
         and (JC_114:
             (integer_of_int32(select(intP_intM_a_0_7,
                               shift(a_0_0,
                               integer_of_int32(select(intP_intM_pi_0_8,
                                                pi_0))))) <> integer_of_int32(
                                                             select(intP_intM_a_0_7,
                                                             shift(a_0_0,
                                                             integer_of_int32(
                                                             select(intP_intM_pk_10,
                                                             pk))))))))))
    and (JC_120:
        ((((JC_116:
           not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8@,
           intP_intM_pi_0_8, pset_singleton(pi_0)))
          and (JC_117:
              not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9@,
              intP_intM_pj_0_9, pset_singleton(pj_0))))
         and (JC_118:
             not_assigns(intP_pk_10_alloc_table, intP_intM_pk_10@,
             intP_intM_pk_10, pset_singleton(pk))))
        and (JC_119:
            not_assigns(intP_pl_11_alloc_table, intP_intM_pl_11@,
            intP_intM_pl_11, pset_singleton(pl))))))) }

let duplets_safety =
 fun (a_0_0 : intP pointer) (len_0_0 : int32) (pi_0 : intP pointer) (pj_0 : intP pointer) (pk : intP pointer) (pl : intP pointer) (intP_intM_pi_0_8 : (intP, int32) memory ref) (intP_intM_pj_0_9 : (intP, int32) memory ref) (intP_intM_pk_10 : (intP, int32) memory ref) (intP_intM_pl_11 : (intP, int32) memory ref) (intP_a_0_7_alloc_table : intP alloc_table) (intP_pi_0_8_alloc_table : intP alloc_table) (intP_pj_0_9_alloc_table : intP alloc_table) (intP_pk_10_alloc_table : intP alloc_table) (intP_pl_11_alloc_table : intP alloc_table) (intP_intM_a_0_7 : (intP, int32) memory) ->
  { (JC_110:
    ((JC_98: le_int((4), integer_of_int32(len_0_0)))
    and ((JC_99: le_int(offset_min(intP_a_0_7_alloc_table, a_0_0), (0)))
        and ((JC_100:
             ge_int(offset_max(intP_a_0_7_alloc_table, a_0_0),
             sub_int(integer_of_int32(len_0_0), (1))))
            and ((JC_101:
                 le_int(offset_min(intP_pi_0_8_alloc_table, pi_0), (0)))
                and ((JC_102:
                     ge_int(offset_max(intP_pi_0_8_alloc_table, pi_0), (0)))
                    and ((JC_103:
                         le_int(offset_min(intP_pj_0_9_alloc_table, pj_0),
                         (0)))
                        and ((JC_104:
                             ge_int(offset_max(intP_pj_0_9_alloc_table, pj_0),
                             (0)))
                            and ((JC_105:
                                 le_int(offset_min(intP_pk_10_alloc_table,
                                        pk),
                                 (0)))
                                and ((JC_106:
                                     ge_int(offset_max(intP_pk_10_alloc_table,
                                            pk),
                                     (0)))
                                    and ((JC_107:
                                         le_int(offset_min(intP_pl_11_alloc_table,
                                                pl),
                                         (0)))
                                        and ((JC_108:
                                             ge_int(offset_max(intP_pl_11_alloc_table,
                                                    pl),
                                             (0)))
                                            and (JC_109:
                                                (exists i_1_0:int.
                                                 (exists j_1_0:int.
                                                  (exists k_0:int.
                                                   (exists l_1:int.
                                                    (is_duplet(a_0_0,
                                                     integer_of_int32(len_0_0),
                                                     i_1_0, j_1_0,
                                                     intP_intM_a_0_7)
                                                    and (is_duplet(a_0_0,
                                                         integer_of_int32(len_0_0),
                                                         k_0, l_1,
                                                         intP_intM_a_0_7)
                                                        and (integer_of_int32(
                                                             select(intP_intM_a_0_7,
                                                             shift(a_0_0,
                                                             i_1_0))) <> 
                                                            integer_of_int32(
                                                            select(intP_intM_a_0_7,
                                                            shift(a_0_0, k_0))))))))))))))))))))))) }
  (init:
  try
   begin
     (let intP_intM_null_15 = (any_memory void) in
     (let intP_null_15_alloc_table = (any_alloc_table void) in
     (C_56:
     (C_59:
     begin
       (let jessie_<num> = a_0_0 in
       (let jessie_<num> = len_0_0 in
       (let jessie_<num> = null in
       (let jessie_<num> = pi_0 in
       (let jessie_<num> = pj_0 in
       (JC_134:
       (((((((((((((duplet_requires jessie_<num>) jessie_<num>) jessie_<num>) jessie_<num>) jessie_<num>) intP_intM_pj_0_9) intP_intM_pi_0_8) intP_pj_0_9_alloc_table) intP_pi_0_8_alloc_table) intP_null_15_alloc_table) intP_a_0_7_alloc_table) intP_intM_null_15) intP_intM_a_0_7)))))));
      (let jessie_<num> = a_0_0 in
      (let jessie_<num> = len_0_0 in
      (let jessie_<num> =
      (C_58:
      ((shift a_0_0) (integer_of_int32 (C_57:
                                       (JC_135:
                                       (((acc_ intP_pi_0_8_alloc_table) !intP_intM_pi_0_8) pi_0)))))) in
      (let jessie_<num> = pk in
      (let jessie_<num> = pl in
      (JC_136:
      (((((((((((((duplet_requires jessie_<num>) jessie_<num>) jessie_<num>) jessie_<num>) jessie_<num>) intP_intM_pl_11) intP_intM_pk_10) intP_pl_11_alloc_table) intP_pk_10_alloc_table) intP_a_0_7_alloc_table) intP_a_0_7_alloc_table) intP_intM_a_0_7) intP_intM_a_0_7)))))));
      (raise Return) end)))); (raise Return) end with Return -> void end)
  { true }


========== generation of alt-ergo VC output ==========
why -alt-ergo [...] why/duplets.why
========== file tests/c/duplets.jessie/why/duplets_why.why ==========
logic eq_unit : unit, unit -> prop

logic neq_unit : unit, unit -> prop

logic eq_bool : bool, bool -> prop

logic neq_bool : bool, bool -> prop

logic lt_int : int, int -> prop

logic le_int : int, int -> prop

logic gt_int : int, int -> prop

logic ge_int : int, int -> prop

logic eq_int : int, int -> prop

logic neq_int : int, int -> prop

logic add_int : int, int -> int

logic sub_int : int, int -> int

logic mul_int : int, int -> int

logic neg_int : int -> int

predicate zwf_zero(a: int, b: int) = ((0 <= b) and (a < b))

logic bool_and : bool, bool -> bool

logic bool_or : bool, bool -> bool

logic bool_xor : bool, bool -> bool

logic bool_not : bool -> bool

axiom bool_and_def:
  (forall a:bool.
    (forall b:bool.
      ((bool_and(a, b) = true) <-> ((a = true) and (b = true)))))

axiom bool_or_def:
  (forall a:bool.
    (forall b:bool. ((bool_or(a, b) = true) <-> ((a = true) or (b = true)))))

axiom bool_xor_def:
  (forall a:bool. (forall b:bool. ((bool_xor(a, b) = true) <-> (a <> b))))

axiom bool_not_def: (forall a:bool. ((bool_not(a) = true) <-> (a = false)))

logic ite : bool, 'a1, 'a1 -> 'a1

axiom ite_true: (forall x:'a1. (forall y:'a1. (ite(true, x, y) = x)))

axiom ite_false: (forall x:'a1. (forall y:'a1. (ite(false, x, y) = y)))

logic lt_int_bool : int, int -> bool

logic le_int_bool : int, int -> bool

logic gt_int_bool : int, int -> bool

logic ge_int_bool : int, int -> bool

logic eq_int_bool : int, int -> bool

logic neq_int_bool : int, int -> bool

axiom lt_int_bool_axiom:
  (forall x:int. (forall y:int. ((lt_int_bool(x, y) = true) <-> (x < y))))

axiom le_int_bool_axiom:
  (forall x:int. (forall y:int. ((le_int_bool(x, y) = true) <-> (x <= y))))

axiom gt_int_bool_axiom:
  (forall x:int. (forall y:int. ((gt_int_bool(x, y) = true) <-> (x > y))))

axiom ge_int_bool_axiom:
  (forall x:int. (forall y:int. ((ge_int_bool(x, y) = true) <-> (x >= y))))

axiom eq_int_bool_axiom:
  (forall x:int. (forall y:int. ((eq_int_bool(x, y) = true) <-> (x = y))))

axiom neq_int_bool_axiom:
  (forall x:int. (forall y:int. ((neq_int_bool(x, y) = true) <-> (x <> y))))

logic abs_int : int -> int

axiom abs_int_pos: (forall x:int. ((x >= 0) -> (abs_int(x) = x)))

axiom abs_int_neg: (forall x:int. ((x <= 0) -> (abs_int(x) = (-x))))

logic int_max : int, int -> int

logic int_min : int, int -> int

axiom int_max_is_ge:
  (forall x:int.
    (forall y:int. ((int_max(x, y) >= x) and (int_max(x, y) >= y))))

axiom int_max_is_some:
  (forall x:int.
    (forall y:int. ((int_max(x, y) = x) or (int_max(x, y) = y))))

axiom int_min_is_le:
  (forall x:int.
    (forall y:int. ((int_min(x, y) <= x) and (int_min(x, y) <= y))))

axiom int_min_is_some:
  (forall x:int.
    (forall y:int. ((int_min(x, y) = x) or (int_min(x, y) = y))))

logic lt_real : real, real -> prop

logic le_real : real, real -> prop

logic gt_real : real, real -> prop

logic ge_real : real, real -> prop

logic eq_real : real, real -> prop

logic neq_real : real, real -> prop

logic add_real : real, real -> real

logic sub_real : real, real -> real

logic mul_real : real, real -> real

logic div_real : real, real -> real

logic neg_real : real -> real

logic real_of_int : int -> real

axiom real_of_int_zero: (real_of_int(0) = 0.0)

axiom real_of_int_one: (real_of_int(1) = 1.0)

axiom real_of_int_add:
  (forall x:int.
    (forall y:int.
      (real_of_int((x + y)) = (real_of_int(x) + real_of_int(y)))))

axiom real_of_int_sub:
  (forall x:int.
    (forall y:int.
      (real_of_int((x - y)) = (real_of_int(x) - real_of_int(y)))))

logic truncate_real_to_int : real -> int

axiom truncate_down_pos:
  (forall x:real.
    ((x >= 0.0) ->
     ((real_of_int(truncate_real_to_int(x)) <= x) and
      (x < real_of_int((truncate_real_to_int(x) + 1))))))

axiom truncate_up_neg:
  (forall x:real.
    ((x <= 0.0) ->
     ((real_of_int((truncate_real_to_int(x) - 1)) < x) and
      (x <= real_of_int(truncate_real_to_int(x))))))

logic floor_real_to_int : real -> int

logic ceil_real_to_int : real -> int

logic lt_real_bool : real, real -> bool

logic le_real_bool : real, real -> bool

logic gt_real_bool : real, real -> bool

logic ge_real_bool : real, real -> bool

logic eq_real_bool : real, real -> bool

logic neq_real_bool : real, real -> bool

axiom lt_real_bool_axiom:
  (forall x:real. (forall y:real. ((lt_real_bool(x, y) = true) <-> (x < y))))

axiom le_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((le_real_bool(x, y) = true) <-> (x <= y))))

axiom gt_real_bool_axiom:
  (forall x:real. (forall y:real. ((gt_real_bool(x, y) = true) <-> (x > y))))

axiom ge_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((ge_real_bool(x, y) = true) <-> (x >= y))))

axiom eq_real_bool_axiom:
  (forall x:real. (forall y:real. ((eq_real_bool(x, y) = true) <-> (x = y))))

axiom neq_real_bool_axiom:
  (forall x:real.
    (forall y:real. ((neq_real_bool(x, y) = true) <-> (x <> y))))

logic real_max : real, real -> real

logic real_min : real, real -> real

axiom real_max_is_ge:
  (forall x:real.
    (forall y:real. ((real_max(x, y) >= x) and (real_max(x, y) >= y))))

axiom real_max_is_some:
  (forall x:real.
    (forall y:real. ((real_max(x, y) = x) or (real_max(x, y) = y))))

axiom real_min_is_le:
  (forall x:real.
    (forall y:real. ((real_min(x, y) <= x) and (real_min(x, y) <= y))))

axiom real_min_is_some:
  (forall x:real.
    (forall y:real. ((real_min(x, y) = x) or (real_min(x, y) = y))))

function sqr_real(x: real) : real = (x * x)

logic sqrt_real : real -> real

axiom sqrt_pos: (forall x:real. ((x >= 0.0) -> (sqrt_real(x) >= 0.0)))

axiom sqrt_sqr: (forall x:real. ((x >= 0.0) -> (sqr_real(sqrt_real(x)) = x)))

axiom sqr_sqrt: (forall x:real. ((x >= 0.0) -> (sqrt_real((x * x)) = x)))

logic pow_real : real, real -> real

logic abs_real : real -> real

axiom abs_real_pos:
  (forall x:real [abs_real(x)]. ((x >= 0.0) -> (abs_real(x) = x)))

axiom abs_real_neg:
  (forall x:real [abs_real(x)]. ((x <= 0.0) -> (abs_real(x) = (-x))))

logic exp : real -> real

logic log : real -> real

logic log10 : real -> real

axiom log_exp: (forall x:real. (log(exp(x)) = x))

axiom exp_log: (forall x:real. ((x > 0.0) -> (exp(log(x)) = x)))

logic cos : real -> real

logic sin : real -> real

logic tan : real -> real

logic pi : real

logic cosh : real -> real

logic sinh : real -> real

logic tanh : real -> real

logic acos : real -> real

logic asin : real -> real

logic atan : real -> real

logic atan2 : real, real -> real

logic hypot : real, real -> real

axiom prod_pos:
  (forall x:real.
    (forall y:real.
      ((((x > 0.0) and (y > 0.0)) -> ((x * y) > 0.0)) and
       (((x < 0.0) and (y < 0.0)) -> ((x * y) > 0.0)))))

axiom abs_minus: (forall x:real. (abs_real((-x)) = abs_real(x)))

logic computer_div : int, int -> int

logic computer_mod : int, int -> int

logic math_div : int, int -> int

logic math_mod : int, int -> int

axiom math_div_mod:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> (x = ((y * math_div(x, y)) + math_mod(x, y))))))

axiom math_mod_bound:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> ((0 <= math_mod(x, y)) and (math_mod(x, y) < abs_int(y))))))

axiom computer_div_mod:
  (forall x:int.
    (forall y:int [computer_div(x, y), computer_mod(x, y)].
      ((y <> 0) -> (x = ((y * computer_div(x, y)) + computer_mod(x, y))))))

axiom computer_div_bound:
  (forall x:int.
    (forall y:int.
      (((x >= 0) and (y > 0)) ->
       ((0 <= computer_div(x, y)) and (computer_div(x, y) <= x)))))

axiom computer_mod_bound:
  (forall x:int.
    (forall y:int. ((y <> 0) -> (abs_int(computer_mod(x, y)) < abs_int(y)))))

axiom computer_mod_sign_pos:
  (forall x:int.
    (forall y:int. (((x >= 0) and (y <> 0)) -> (computer_mod(x, y) >= 0))))

axiom computer_mod_sign_neg:
  (forall x:int.
    (forall y:int. (((x <= 0) and (y <> 0)) -> (computer_mod(x, y) <= 0))))

axiom computer_rounds_toward_zero:
  (forall x:int.
    (forall y:int.
      ((y <> 0) -> (abs_int((computer_div(x, y) * y)) <= abs_int(x)))))

type 't alloc_table

type 't pointer

type 't block

logic base_block : 'a1 pointer -> 'a1 block

logic offset_max : 'a1 alloc_table, 'a1 pointer -> int

logic offset_min : 'a1 alloc_table, 'a1 pointer -> int

predicate valid(a: 'a1 alloc_table, p: 'a1 pointer) =
  ((offset_min(a, p) <= 0) and (offset_max(a, p) >= 0))

predicate same_block(p: 'a1 pointer, q: 'a1 pointer) =
  (base_block(p) = base_block(q))

logic sub_pointer : 'a1 pointer, 'a1 pointer -> int

logic shift : 'a1 pointer, int -> 'a1 pointer

logic null : 'a1 pointer

logic pointer_address : 'a1 pointer -> unit pointer

logic absolute_address : int -> unit pointer

logic address : 'a1 pointer -> int

axiom address_injective:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. ((p = q) <-> (address(p) = address(q)))))

axiom address_null: (address(null) = 0)

axiom address_shift_lt:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) < address(shift(p, j))) <-> (i < j)))))

axiom address_shift_le:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [address(shift(p, i)), address(shift(p, j))].
        ((address(shift(p, i)) <= address(shift(p, j))) <-> (i <= j)))))

axiom shift_zero: (forall p:'a1 pointer [shift(p, 0)]. (shift(p, 0) = p))

axiom shift_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(shift(p, i), j)]. (shift(shift(p, i),
        j) = shift(p, (i + j))))))

axiom offset_max_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_max(a, shift(p, i)) = (offset_max(a, p) - i)))))

axiom offset_min_shift:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (forall i:int. (offset_min(a, shift(p, i)) = (offset_min(a, p) - i)))))

axiom neq_shift:
  (forall p:'a1 pointer.
    (forall i:int.
      (forall j:int [shift(p, i), shift(p, j)].
        ((i <> j) -> (shift(p, i) <> shift(p, j))))))

axiom null_not_valid: (forall a:'a1 alloc_table. (not valid(a, null)))

axiom null_pointer:
  (forall a:'a1 alloc_table.
    ((offset_min(a, null) >= 0) and (offset_max(a, null) <= (-2))))

logic eq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

logic neq_pointer_bool : 'a1 pointer, 'a1 pointer -> bool

axiom eq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer. ((eq_pointer_bool(p1, p2) = true) <-> (p1 = p2))))

axiom neq_pointer_bool_def:
  (forall p1:'a1 pointer.
    (forall p2:'a1 pointer.
      ((neq_pointer_bool(p1, p2) = true) <-> (p1 <> p2))))

axiom same_block_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(p, shift(q, i))].
        (same_block(p, q) -> same_block(p, shift(q, i))))))

axiom same_block_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [same_block(shift(q, i), p)].
        (same_block(q, p) -> same_block(shift(q, i), p)))))

axiom sub_pointer_shift:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> (p = shift(q, sub_pointer(p, q))))))

axiom sub_pointer_self:
  (forall p:'a1 pointer [sub_pointer(p, p)]. (sub_pointer(p, p) = 0))

axiom sub_pointer_zero:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer [sub_pointer(p, q)].
      (same_block(p, q) -> ((sub_pointer(p, q) = 0) -> (p = q)))))

axiom sub_pointer_shift_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(shift(p, i), q)]. (sub_pointer(shift(p, i),
        q) = (sub_pointer(p, q) + i)))))

axiom sub_pointer_shift_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [sub_pointer(p, shift(q, i))]. (sub_pointer(p, shift(q,
        i)) = (sub_pointer(p, q) - i)))))

type ('t, 'v) memory

logic select : ('a2, 'a1) memory, 'a2 pointer -> 'a1

logic store : ('a1, 'a2) memory, 'a1 pointer, 'a2 -> ('a1, 'a2) memory

axiom select_store_eq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 = p2) -> (select(store(m, p1, a), p2) = a))))))

axiom select_store_neq:
  (forall m:('a1, 'a2) memory.
    (forall p1:'a1 pointer.
      (forall p2:'a1 pointer.
        (forall a:'a2 [store(m, p1, a), p2].
          ((p1 <> p2) -> (select(store(m, p1, a), p2) = select(m, p2)))))))

type 't pset

logic pset_empty : 'a1 pset

logic pset_singleton : 'a1 pointer -> 'a1 pset

logic pset_deref : ('a2, 'a1 pointer) memory, 'a2 pset -> 'a1 pset

logic pset_union : 'a1 pset, 'a1 pset -> 'a1 pset

logic pset_all : 'a1 pset -> 'a1 pset

logic pset_range : 'a1 pset, int, int -> 'a1 pset

logic pset_range_left : 'a1 pset, int -> 'a1 pset

logic pset_range_right : 'a1 pset, int -> 'a1 pset

logic in_pset : 'a1 pointer, 'a1 pset -> prop

logic valid_pset : 'a1 alloc_table, 'a1 pset -> prop

predicate pset_disjoint(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (not (in_pset(p, ps1) and in_pset(p, ps2))))

predicate pset_included(ps1: 'a1 pset, ps2: 'a1 pset) =
  (forall p:'a1 pointer. (in_pset(p, ps1) -> in_pset(p, ps2)))

axiom pset_included_self: (forall ps:'a1 pset. pset_included(ps, ps))

axiom pset_included_range:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))].
            (((c <= a) and (b <= d)) -> pset_included(pset_range(ps, a, b),
             pset_range(ps, c, d))))))))

axiom pset_included_range_all:
  (forall ps:'a1 pset.
    (forall a:int.
      (forall b:int.
        (forall c:int.
          (forall d:int [pset_included(pset_range(ps, a, b), pset_range(ps,
            c, d))]. pset_included(pset_range(ps, a, b), pset_all(ps)))))))

axiom in_pset_empty: (forall p:'a1 pointer. (not in_pset(p, pset_empty)))

axiom in_pset_singleton:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer. (in_pset(p, pset_singleton(q)) <-> (p = q))))

axiom in_pset_deref:
  (forall p:'a1 pointer.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (in_pset(p, pset_deref(m, q)) <->
         (exists r:'a2 pointer. (in_pset(r, q) and (p = select(m, r))))))))

axiom in_pset_all:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (in_pset(p, pset_all(q)) <->
       (exists i:int.
         (exists r:'a1 pointer. (in_pset(r, q) and (p = shift(r, i))))))))

axiom in_pset_range:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (forall b:int.
          (in_pset(p, pset_range(q, a, b)) <->
           (exists i:int.
             (exists r:'a1 pointer.
               ((a <= i) and
                ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))))

axiom in_pset_range_left:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall b:int.
        (in_pset(p, pset_range_left(q, b)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((i <= b) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_range_right:
  (forall p:'a1 pointer.
    (forall q:'a1 pset.
      (forall a:int.
        (in_pset(p, pset_range_right(q, a)) <->
         (exists i:int.
           (exists r:'a1 pointer.
             ((a <= i) and (in_pset(r, q) and (p = shift(r, i))))))))))

axiom in_pset_union:
  (forall p:'a1 pointer.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (in_pset(p, pset_union(s1, s2)) <->
         (in_pset(p, s1) or in_pset(p, s2))))))

axiom valid_pset_empty: (forall a:'a1 alloc_table. valid_pset(a, pset_empty))

axiom valid_pset_singleton:
  (forall a:'a1 alloc_table.
    (forall p:'a1 pointer.
      (valid_pset(a, pset_singleton(p)) <-> valid(a, p))))

axiom valid_pset_deref:
  (forall a:'a1 alloc_table.
    (forall m:('a2, 'a1 pointer) memory.
      (forall q:'a2 pset.
        (valid_pset(a, pset_deref(m, q)) <->
         (forall r:'a2 pointer.
           (forall p:'a1 pointer.
             ((in_pset(r, q) and (p = select(m, r))) -> valid(a, p))))))))

axiom valid_pset_range:
  (forall a:'a1 alloc_table.
    (forall q:'a1 pset.
      (forall c:int.
        (forall d:int.
          (valid_pset(a, pset_range(q, c, d)) <->
           (forall i:int.
             (forall r:'a1 pointer.
               ((in_pset(r, q) and ((c <= i) and (i <= d))) -> valid(a,
                shift(r, i))))))))))

axiom valid_pset_union:
  (forall a:'a1 alloc_table.
    (forall s1:'a1 pset.
      (forall s2:'a1 pset.
        (valid_pset(a, pset_union(s1, s2)) <->
         (valid_pset(a, s1) and valid_pset(a, s2))))))

predicate not_assigns(a: 'a1 alloc_table, m1: ('a1, 'a2) memory, m2: ('a1,
  'a2) memory, l: 'a1 pset) =
  (forall p:'a1 pointer.
    ((valid(a, p) and (not in_pset(p, l))) -> (select(m2, p) = select(m1, p))))

axiom not_assigns_refl:
  (forall a:'a1 alloc_table.
    (forall m:('a1, 'a2) memory.
      (forall l:'a1 pset. not_assigns(a, m, m, l))))

axiom not_assigns_trans:
  (forall a:'a1 alloc_table.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory.
          (forall l:'a1 pset [not_assigns(a, m1, m2, l), not_assigns(a, m1,
            m3, l)].
            (not_assigns(a, m1, m2, l) ->
             (not_assigns(a, m2, m3, l) -> not_assigns(a, m1, m3, l))))))))

logic full_separated : 'a1 pointer, 'a2 pointer -> prop

axiom full_separated_shift1:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(p, shift(q, i))))))

axiom full_separated_shift2:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(p, q), shift(q, i)].
        (full_separated(p, q) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift3:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(shift(q, i), p)))))

axiom full_separated_shift4:
  (forall p:'a1 pointer.
    (forall q:'a1 pointer.
      (forall i:int [full_separated(q, p), shift(q, i)].
        (full_separated(q, p) -> full_separated(p, shift(q, i))))))

type 't tag_table

type 't tag_id

logic int_of_tag : 'a1 tag_id -> int

logic typeof : 'a1 tag_table, 'a1 pointer -> 'a1 tag_id

logic parenttag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag : 'a1 tag_id, 'a1 tag_id -> prop

logic subtag_bool : 'a1 tag_id, 'a1 tag_id -> bool

axiom subtag_bool_def:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id. ((subtag_bool(t1, t2) = true) <-> subtag(t1, t2))))

axiom subtag_refl: (forall t:'a1 tag_id. subtag(t, t))

axiom subtag_parent:
  (forall t1:'a1 tag_id.
    (forall t2:'a1 tag_id.
      (forall t3:'a1 tag_id.
        (subtag(t1, t2) -> (parenttag(t2, t3) -> subtag(t1, t3))))))

predicate instanceof(a: 'a1 tag_table, p: 'a1 pointer, t: 'a1 tag_id) =
  subtag(typeof(a, p), t)

logic downcast : 'a1 tag_table, 'a1 pointer, 'a1 tag_id -> 'a1 pointer

axiom downcast_instanceof:
  (forall a:'a1 tag_table.
    (forall p:'a1 pointer.
      (forall s:'a1 tag_id. (instanceof(a, p, s) -> (downcast(a, p, s) = p)))))

logic bottom_tag : 'a1 tag_id

axiom bottom_tag_axiom: (forall t:'a1 tag_id. subtag(t, bottom_tag))

predicate root_tag(t: 'a1 tag_id) = parenttag(t, bottom_tag)

axiom root_subtag:
  (forall a:'a1 tag_id.
    (forall b:'a1 tag_id.
      (forall c:'a1 tag_id.
        (root_tag(a) ->
         (root_tag(b) -> ((a <> b) -> (subtag(c, a) -> (not subtag(c, b)))))))))

predicate fully_packed(tag_table: 'a1 tag_table, mutable: ('a1,
  'a1 tag_id) memory, this: 'a1 pointer) = (select(mutable,
  this) = typeof(tag_table, this))

logic bw_compl : int -> int

logic bw_and : int, int -> int

axiom bw_and_not_null:
  (forall a:int.
    (forall b:int. ((bw_and(a, b) <> 0) -> ((a <> 0) and (b <> 0)))))

logic bw_xor : int, int -> int

logic bw_or : int, int -> int

logic lsl : int, int -> int

axiom lsl_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsl(a, b)))))

axiom lsl_left_positive_monotone:
  (forall a1:int.
    (forall a2:int.
      (forall b:int.
        (((0 <= a1) and ((a1 <= a2) and (0 <= b))) -> (lsl(a1, b) <= lsl(a2,
         b))))))

logic lsr : int, int -> int

axiom lsr_left_positive_returns_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= lsr(a, b)))))

axiom lsr_left_positive_decreases:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(a, b) <= a))))

logic asr : int, int -> int

axiom asr_positive_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (0 <= asr(a, b)))))

axiom asr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) <= a))))

axiom asr_lsr_same_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (asr(a, b) = lsr(a, b)))))

axiom lsl_of_lsr_decreases_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsl(lsr(a, b), b) <= a))))

axiom lsr_of_lsl_identity_on_positive:
  (forall a:int.
    (forall b:int. (((0 <= a) and (0 <= b)) -> (lsr(lsl(a, b), b) = a))))

logic alloc_extends : 'a1 alloc_table, 'a1 alloc_table -> prop

predicate alloc_fresh(a: 'a1 alloc_table, p: 'a1 pointer, n: int) =
  (forall i:int. (((0 <= i) and (i < n)) -> (not valid(a, shift(p, i)))))

axiom alloc_extends_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_min(a1, p) = offset_min(a2, p)))))))

axiom alloc_extends_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table [alloc_extends(a1, a2)].
      (alloc_extends(a1, a2) ->
       (forall p:'a1 pointer.
         (valid(a1, p) -> (offset_max(a1, p) = offset_max(a2, p)))))))

axiom alloc_extends_not_assigns_empty:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory.
          (forall l:'a1 pset.
            (forall p:'a1 pointer.
              (forall n:int [alloc_extends(a1, a2), alloc_fresh(a1, p, n),
                not_assigns(a2, m1, m2, l)].
                ((alloc_extends(a1, a2) and
                  (alloc_fresh(a1, p, n) and
                   (not_assigns(a2, m1, m2, l) and pset_included(l,
                    pset_all(pset_singleton(p)))))) ->
                 not_assigns(a1, m1, m2, pset_empty)))))))))

logic alloc_extends_except : 'a1 alloc_table, 'a1 alloc_table,
'a1 pset -> prop

axiom alloc_extends_except_offset_min:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_min(a1,
            p) = offset_min(a2, p))))))))

axiom alloc_extends_except_offset_max:
  (forall a1:'a1 alloc_table.
    (forall a2:'a1 alloc_table.
      (forall l:'a1 pset [alloc_extends_except(a1, a2, l)].
        (alloc_extends_except(a1, a2, l) ->
         (forall p:'a1 pointer.
           ((valid(a1, p) and (not in_pset(p, l))) -> (offset_max(a1,
            p) = offset_max(a2, p))))))))

type 'a mybag

logic in_mybag : 'a1, 'a1 mybag -> prop

logic disj_mybag : 'a1 mybag, 'a1 mybag -> prop

axiom disj_sym:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag [disj_mybag(s1, s2)].
      (disj_mybag(s1, s2) -> disj_mybag(s2, s1))))

logic sub_mybag : 'a1 mybag, 'a1 mybag -> prop

axiom sub_refl:
  (forall sa:'a1 pointer mybag [sub_mybag(sa, sa)]. sub_mybag(sa, sa))

axiom sub_disj:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall s3:'a1 mybag [disj_mybag(s1, s2), sub_mybag(s2, s3)|
        disj_mybag(s1, s3), sub_mybag(s2, s3)].
        (disj_mybag(s1, s2) -> (sub_mybag(s2, s3) -> disj_mybag(s1, s3))))))

axiom sub_in:
  (forall s1:'a1 mybag.
    (forall s2:'a1 mybag.
      (forall p:'a1 [in_mybag(p, s1), sub_mybag(s1, s2)| in_mybag(p, s2),
        sub_mybag(s1, s2)].
        ((not in_mybag(p, s2)) ->
         (sub_mybag(s1, s2) -> (not in_mybag(p, s1)))))))

logic frame_between : 'a1 pointer mybag, ('a1, 'a2) memory, ('a1,
'a2) memory -> prop

axiom frame_between_refl:
  (forall sa:'a1 pointer mybag.
    (forall m:('a1, 'a2) memory [frame_between(sa, m, m)]. frame_between(sa,
      m, m)))

axiom frame_between_gen:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall p:'a1 pointer.
          (forall v:'a2 [frame_between(sa, m1, store(m2, p, v))].
            (frame_between(sa, m1, m2) ->
             (in_mybag(p, sa) -> frame_between(sa, store(m1, p, v), m2))))))))

axiom frame_between_gen2:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall m3:('a1, 'a2) memory [frame_between(sa, m1, m2),
          frame_between(sa, m1, m3)| frame_between(sa, m2, m3),
          frame_between(sa, m1, m3)].
          (frame_between(sa, m1, m2) ->
           (frame_between(sa, m2, m3) -> frame_between(sa, m1, m3)))))))

axiom frame_between_gen_sub1:
  (forall s12:'a1 pointer mybag.
    (forall s23:'a1 pointer mybag.
      (forall s13:'a1 pointer mybag.
        (forall m1:('a1, 'a2) memory.
          (forall m2:('a1, 'a2) memory.
            (forall m3:('a1, 'a2) memory [frame_between(s12, m1, m2),
              frame_between(s13, m1, m3)].
              (sub_mybag(s12, s13) ->
               (frame_between(s12, m1, m2) ->
                (frame_between(s23, m2, m3) -> frame_between(s13, m1, m3))))))))))

axiom frame_between_gen_sub2:
  (forall s12:'a1 pointer mybag.
    (forall s23:'a1 pointer mybag.
      (forall s13:'a1 pointer mybag.
        (forall m1:('a1, 'a2) memory.
          (forall m2:('a1, 'a2) memory.
            (forall m3:('a1, 'a2) memory [frame_between(s23, m2, m3),
              frame_between(s13, m1, m3)].
              (frame_between(s12, m1, m2) ->
               (sub_mybag(s23, s13) ->
                (frame_between(s23, m2, m3) -> frame_between(s13, m1, m3))))))))))

axiom frame_between_pointer:
  (forall sa:'a1 pointer mybag.
    (forall m1:('a1, 'a2) memory.
      (forall m2:('a1, 'a2) memory.
        (forall p:'a1 pointer.
          (forall v:'a2 [frame_between(sa, m1, m2), select(m1, p)|
            frame_between(sa, m1, m2), select(m2, p)].
            (frame_between(sa, m1, m2) ->
             ((not in_mybag(p, sa)) -> (select(m1, p) = select(m2, p)))))))))

axiom frame_between_sub:
  (forall sa:'a1 pointer mybag.
    (forall sb:'a1 pointer mybag.
      (forall m1:('a1, 'a2) memory.
        (forall m2:('a1, 'a2) memory [frame_between(sa, m1, m2),
          sub_mybag(sa, sb)].
          (frame_between(sa, m1, m2) ->
           (sub_mybag(sa, sb) -> frame_between(sb, m1, m2)))))))

type charP

type int32

type int8

type intP

type padding

type voidP

logic charP_tag : charP tag_id

axiom charP_int: (int_of_tag(charP_tag) = 1)

logic charP_of_pointer_address : unit pointer -> charP pointer

axiom charP_of_pointer_address_of_pointer_addr:
  (forall p:charP pointer.
    (p = charP_of_pointer_address(pointer_address(p))))

axiom charP_parenttag_bottom: parenttag(charP_tag, bottom_tag)

axiom charP_tags:
  (forall x:charP pointer.
    (forall charP_tag_table:charP tag_table. instanceof(charP_tag_table, x,
      charP_tag)))

logic integer_of_int32 : int32 -> int

predicate eq_int32(x: int32, y: int32) =
  (integer_of_int32(x) = integer_of_int32(y))

logic integer_of_int8 : int8 -> int

predicate eq_int8(x: int8, y: int8) =
  (integer_of_int8(x) = integer_of_int8(y))

predicate eq_opt(x_0: int, o: intP pointer, intP_intM_o_1_at_L: (intP,
  int32) memory) =
  ((o <> null) and (x_0 = integer_of_int32(select(intP_intM_o_1_at_L, o))))

logic int32_of_integer : int -> int32

axiom int32_coerce:
  (forall x:int.
    ((((-2147483648) <= x) and (x <= 2147483647)) ->
     (integer_of_int32(int32_of_integer(x)) = x)))

axiom int32_extensionality:
  (forall x:int32.
    (forall y:int32.
      ((integer_of_int32(x) = integer_of_int32(y)) -> (x = y))))

axiom int32_range:
  (forall x:int32.
    (((-2147483648) <= integer_of_int32(x)) and
     (integer_of_int32(x) <= 2147483647)))

logic int8_of_integer : int -> int8

axiom int8_coerce:
  (forall x:int.
    ((((-128) <= x) and (x <= 127)) ->
     (integer_of_int8(int8_of_integer(x)) = x)))

axiom int8_extensionality:
  (forall x:int8.
    (forall y:int8. ((integer_of_int8(x) = integer_of_int8(y)) -> (x = y))))

axiom int8_range:
  (forall x:int8.
    (((-128) <= integer_of_int8(x)) and (integer_of_int8(x) <= 127)))

logic intP_tag : intP tag_id

axiom intP_int: (int_of_tag(intP_tag) = 1)

logic intP_of_pointer_address : unit pointer -> intP pointer

axiom intP_of_pointer_address_of_pointer_addr:
  (forall p:intP pointer. (p = intP_of_pointer_address(pointer_address(p))))

axiom intP_parenttag_bottom: parenttag(intP_tag, bottom_tag)

axiom intP_tags:
  (forall x:intP pointer.
    (forall intP_tag_table:intP tag_table. instanceof(intP_tag_table, x,
      intP_tag)))

predicate is_duplet(a: intP pointer, len: int, i: int, j: int,
  intP_intM_a_2_at_L: (intP, int32) memory) =
  ((0 <= i) and
   ((i < j) and
    ((j < len) and (integer_of_int32(select(intP_intM_a_2_at_L, shift(a,
     i))) = integer_of_int32(select(intP_intM_a_2_at_L, shift(a, j)))))))

predicate left_valid_struct_charP(p: charP pointer, a: int,
  charP_alloc_table: charP alloc_table) = (offset_min(charP_alloc_table,
  p) <= a)

predicate left_valid_struct_intP(p: intP pointer, a: int,
  intP_alloc_table: intP alloc_table) = (offset_min(intP_alloc_table,
  p) <= a)

predicate left_valid_struct_voidP(p: voidP pointer, a: int,
  voidP_alloc_table: voidP alloc_table) = (offset_min(voidP_alloc_table,
  p) <= a)

axiom pointer_addr_of_charP_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(charP_of_pointer_address(p))))

axiom pointer_addr_of_intP_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(intP_of_pointer_address(p))))

logic voidP_of_pointer_address : unit pointer -> voidP pointer

axiom pointer_addr_of_voidP_of_pointer_address:
  (forall p:unit pointer. (p = pointer_address(voidP_of_pointer_address(p))))

predicate right_valid_struct_charP(p: charP pointer, b: int,
  charP_alloc_table: charP alloc_table) = (offset_max(charP_alloc_table,
  p) >= b)

predicate right_valid_struct_intP(p: intP pointer, b: int,
  intP_alloc_table: intP alloc_table) = (offset_max(intP_alloc_table,
  p) >= b)

predicate right_valid_struct_voidP(p: voidP pointer, b: int,
  voidP_alloc_table: voidP alloc_table) = (offset_max(voidP_alloc_table,
  p) >= b)

predicate strict_valid_root_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) = a) and (offset_max(charP_alloc_table,
   p) = b))

predicate strict_valid_root_intP(p: intP pointer, a: int, b: int,
  intP_alloc_table: intP alloc_table) =
  ((offset_min(intP_alloc_table, p) = a) and (offset_max(intP_alloc_table,
   p) = b))

predicate strict_valid_root_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) = a) and (offset_max(voidP_alloc_table,
   p) = b))

predicate strict_valid_struct_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) = a) and (offset_max(charP_alloc_table,
   p) = b))

predicate strict_valid_struct_intP(p: intP pointer, a: int, b: int,
  intP_alloc_table: intP alloc_table) =
  ((offset_min(intP_alloc_table, p) = a) and (offset_max(intP_alloc_table,
   p) = b))

predicate strict_valid_struct_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) = a) and (offset_max(voidP_alloc_table,
   p) = b))

predicate valid_root_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) <= a) and (offset_max(charP_alloc_table,
   p) >= b))

predicate valid_root_intP(p: intP pointer, a: int, b: int,
  intP_alloc_table: intP alloc_table) =
  ((offset_min(intP_alloc_table, p) <= a) and (offset_max(intP_alloc_table,
   p) >= b))

predicate valid_root_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) <= a) and (offset_max(voidP_alloc_table,
   p) >= b))

predicate valid_struct_charP(p: charP pointer, a: int, b: int,
  charP_alloc_table: charP alloc_table) =
  ((offset_min(charP_alloc_table, p) <= a) and (offset_max(charP_alloc_table,
   p) >= b))

predicate valid_struct_intP(p: intP pointer, a: int, b: int,
  intP_alloc_table: intP alloc_table) =
  ((offset_min(intP_alloc_table, p) <= a) and (offset_max(intP_alloc_table,
   p) >= b))

predicate valid_struct_voidP(p: voidP pointer, a: int, b: int,
  voidP_alloc_table: voidP alloc_table) =
  ((offset_min(voidP_alloc_table, p) <= a) and (offset_max(voidP_alloc_table,
   p) >= b))

logic voidP_tag : voidP tag_id

axiom voidP_int: (int_of_tag(voidP_tag) = 1)

axiom voidP_of_pointer_address_of_pointer_addr:
  (forall p:voidP pointer.
    (p = voidP_of_pointer_address(pointer_address(p))))

axiom voidP_parenttag_bottom: parenttag(voidP_tag, bottom_tag)

axiom voidP_tags:
  (forall x:voidP pointer.
    (forall voidP_tag_table:voidP tag_table. instanceof(voidP_tag_table, x,
      voidP_tag)))

goal duplet_ensures_default_po_1:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  ("JC_68": ("JC_65": (0 <= integer_of_int32(i_1))))

goal duplet_ensures_default_po_2:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  ("JC_68":
  ("JC_66": (integer_of_int32(i_1) <= (integer_of_int32(len_0) - 1))))

goal duplet_ensures_default_po_3:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall k:int.
  forall l_0:int.
  ((0 <= k) and
   ((k < integer_of_int32(i_1)) and
    ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
  (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))), except,
  intP_intM_except_4)) ->
  ("JC_68":
  ("JC_67": (not is_duplet(a_0, integer_of_int32(len_0), k, l_0,
  intP_intM_a_3))))

goal duplet_ensures_default_po_4:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  ("JC_72":
  ("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
  intP_intM_pi_5, pset_singleton(pi))))

goal duplet_ensures_default_po_5:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  ("JC_72":
  ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
  intP_intM_pj_6, pset_singleton(pj))))

goal duplet_ensures_default_po_6:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  ("JC_77":
  ("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1))))

goal duplet_ensures_default_po_7:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  ("JC_77": ("JC_75": (integer_of_int32(j_1) <= integer_of_int32(len_0))))

goal duplet_ensures_default_po_8:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall l:int.
  ((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1))) ->
  ("JC_77":
  ("JC_76": (not is_duplet(a_0, integer_of_int32(len_0),
  integer_of_int32(i_1_0), l, intP_intM_a_3))))

goal duplet_ensures_default_po_9:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  ("JC_81":
  ("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
  intP_intM_pi_5_0, pset_singleton(pi))))

goal duplet_ensures_default_po_10:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  ("JC_81":
  ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
  intP_intM_pj_6_0, pset_singleton(pj))))

goal duplet_ensures_default_po_11:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) = integer_of_int32(v)) ->
  forall intP_intM_pi_5_2:(intP,
  int32) memory.
  (intP_intM_pi_5_2 = store(intP_intM_pi_5_1, pi, i_1_0)) ->
  forall intP_intM_pj_6_2:(intP,
  int32) memory.
  (intP_intM_pj_6_2 = store(intP_intM_pj_6_1, pj, j_1_0)) ->
  ("JC_29":
  ("JC_25":
  ("JC_23": is_duplet(a_0, integer_of_int32(len_0),
  integer_of_int32(select(intP_intM_pi_5_2, pi)),
  integer_of_int32(select(intP_intM_pj_6_2, pj)), intP_intM_a_3))))

goal duplet_ensures_default_po_12:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) = integer_of_int32(v)) ->
  forall intP_intM_pi_5_2:(intP,
  int32) memory.
  (intP_intM_pi_5_2 = store(intP_intM_pi_5_1, pi, i_1_0)) ->
  forall intP_intM_pj_6_2:(intP,
  int32) memory.
  (intP_intM_pj_6_2 = store(intP_intM_pj_6_1, pj, j_1_0)) ->
  ("JC_29":
  ("JC_25":
  ("JC_24": (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
  integer_of_int32(select(intP_intM_pi_5_2, pi))))), except,
  intP_intM_except_4)))))

goal duplet_ensures_default_po_13:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) = integer_of_int32(v)) ->
  forall intP_intM_pi_5_2:(intP,
  int32) memory.
  (intP_intM_pi_5_2 = store(intP_intM_pi_5_1, pi, i_1_0)) ->
  forall intP_intM_pj_6_2:(intP,
  int32) memory.
  (intP_intM_pj_6_2 = store(intP_intM_pj_6_1, pj, j_1_0)) ->
  ("JC_29":
  ("JC_28":
  ("JC_26": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
  intP_intM_pi_5_2, pset_singleton(pi)))))

goal duplet_ensures_default_po_14:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) = integer_of_int32(v)) ->
  forall intP_intM_pi_5_2:(intP,
  int32) memory.
  (intP_intM_pi_5_2 = store(intP_intM_pi_5_1, pi, i_1_0)) ->
  forall intP_intM_pj_6_2:(intP,
  int32) memory.
  (intP_intM_pj_6_2 = store(intP_intM_pj_6_1, pj, j_1_0)) ->
  ("JC_29":
  ("JC_28":
  ("JC_27": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
  intP_intM_pj_6_2, pset_singleton(pj)))))

goal duplet_ensures_default_po_15:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) <> integer_of_int32(v)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(j_1_0) + 1)) ->
  forall j_1_1:int32.
  (j_1_1 = result4) ->
  ("JC_77":
  ("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_1))))

goal duplet_ensures_default_po_16:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) <> integer_of_int32(v)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(j_1_0) + 1)) ->
  forall j_1_1:int32.
  (j_1_1 = result4) ->
  ("JC_77": ("JC_75": (integer_of_int32(j_1_1) <= integer_of_int32(len_0))))

goal duplet_ensures_default_po_17:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) <> integer_of_int32(v)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(j_1_0) + 1)) ->
  forall j_1_1:int32.
  (j_1_1 = result4) ->
  forall l:int.
  ((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_1))) ->
  ("JC_77":
  ("JC_76": (not is_duplet(a_0, integer_of_int32(len_0),
  integer_of_int32(i_1_0), l, intP_intM_a_3))))

goal duplet_ensures_default_po_18:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) <> integer_of_int32(v)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(j_1_0) + 1)) ->
  forall j_1_1:int32.
  (j_1_1 = result4) ->
  ("JC_81":
  ("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
  intP_intM_pi_5_1, pset_singleton(pi))))

goal duplet_ensures_default_po_19:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) <> integer_of_int32(v)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(j_1_0) + 1)) ->
  forall j_1_1:int32.
  (j_1_1 = result4) ->
  ("JC_81":
  ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
  intP_intM_pj_6_1, pset_singleton(pj))))

goal duplet_ensures_default_po_20:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) >= integer_of_int32(len_0)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result3) ->
  ("JC_68": ("JC_65": (0 <= integer_of_int32(i_1_1))))

goal duplet_ensures_default_po_21:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) >= integer_of_int32(len_0)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result3) ->
  ("JC_68":
  ("JC_66": (integer_of_int32(i_1_1) <= (integer_of_int32(len_0) - 1))))

goal duplet_ensures_default_po_22:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) >= integer_of_int32(len_0)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result3) ->
  forall k:int.
  forall l_0:int.
  ((0 <= k) and
   ((k < integer_of_int32(i_1_1)) and
    ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
  (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))), except,
  intP_intM_except_4)) ->
  ("JC_68":
  ("JC_67": (not is_duplet(a_0, integer_of_int32(len_0), k, l_0,
  intP_intM_a_3))))

goal duplet_ensures_default_po_23:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) >= integer_of_int32(len_0)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result3) ->
  ("JC_72":
  ("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
  intP_intM_pi_5_1, pset_singleton(pi))))

goal duplet_ensures_default_po_24:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except = null) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) >= integer_of_int32(len_0)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result3) ->
  ("JC_72":
  ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
  intP_intM_pj_6_1, pset_singleton(pj))))

goal duplet_ensures_default_po_25:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  ("JC_77":
  ("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1))))

goal duplet_ensures_default_po_26:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  ("JC_77": ("JC_75": (integer_of_int32(j_1) <= integer_of_int32(len_0))))

goal duplet_ensures_default_po_27:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall l:int.
  ((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1))) ->
  ("JC_77":
  ("JC_76": (not is_duplet(a_0, integer_of_int32(len_0),
  integer_of_int32(i_1_0), l, intP_intM_a_3))))

goal duplet_ensures_default_po_28:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  ("JC_81":
  ("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
  intP_intM_pi_5_0, pset_singleton(pi))))

goal duplet_ensures_default_po_29:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  ("JC_81":
  ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
  intP_intM_pj_6_0, pset_singleton(pj))))

goal duplet_ensures_default_po_30:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) = integer_of_int32(v)) ->
  forall intP_intM_pi_5_2:(intP,
  int32) memory.
  (intP_intM_pi_5_2 = store(intP_intM_pi_5_1, pi, i_1_0)) ->
  forall intP_intM_pj_6_2:(intP,
  int32) memory.
  (intP_intM_pj_6_2 = store(intP_intM_pj_6_1, pj, j_1_0)) ->
  ("JC_29":
  ("JC_25":
  ("JC_23": is_duplet(a_0, integer_of_int32(len_0),
  integer_of_int32(select(intP_intM_pi_5_2, pi)),
  integer_of_int32(select(intP_intM_pj_6_2, pj)), intP_intM_a_3))))

goal duplet_ensures_default_po_31:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) = integer_of_int32(v)) ->
  forall intP_intM_pi_5_2:(intP,
  int32) memory.
  (intP_intM_pi_5_2 = store(intP_intM_pi_5_1, pi, i_1_0)) ->
  forall intP_intM_pj_6_2:(intP,
  int32) memory.
  (intP_intM_pj_6_2 = store(intP_intM_pj_6_1, pj, j_1_0)) ->
  ("JC_29":
  ("JC_25":
  ("JC_24": (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
  integer_of_int32(select(intP_intM_pi_5_2, pi))))), except,
  intP_intM_except_4)))))

goal duplet_ensures_default_po_32:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) = integer_of_int32(v)) ->
  forall intP_intM_pi_5_2:(intP,
  int32) memory.
  (intP_intM_pi_5_2 = store(intP_intM_pi_5_1, pi, i_1_0)) ->
  forall intP_intM_pj_6_2:(intP,
  int32) memory.
  (intP_intM_pj_6_2 = store(intP_intM_pj_6_1, pj, j_1_0)) ->
  ("JC_29":
  ("JC_28":
  ("JC_26": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
  intP_intM_pi_5_2, pset_singleton(pi)))))

goal duplet_ensures_default_po_33:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) = integer_of_int32(v)) ->
  forall intP_intM_pi_5_2:(intP,
  int32) memory.
  (intP_intM_pi_5_2 = store(intP_intM_pi_5_1, pi, i_1_0)) ->
  forall intP_intM_pj_6_2:(intP,
  int32) memory.
  (intP_intM_pj_6_2 = store(intP_intM_pj_6_1, pj, j_1_0)) ->
  ("JC_29":
  ("JC_28":
  ("JC_27": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
  intP_intM_pj_6_2, pset_singleton(pj)))))

goal duplet_ensures_default_po_34:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) <> integer_of_int32(v)) ->
  forall result5:int32.
  (integer_of_int32(result5) = (integer_of_int32(j_1_0) + 1)) ->
  forall j_1_1:int32.
  (j_1_1 = result5) ->
  ("JC_77":
  ("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_1))))

goal duplet_ensures_default_po_35:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) <> integer_of_int32(v)) ->
  forall result5:int32.
  (integer_of_int32(result5) = (integer_of_int32(j_1_0) + 1)) ->
  forall j_1_1:int32.
  (j_1_1 = result5) ->
  ("JC_77": ("JC_75": (integer_of_int32(j_1_1) <= integer_of_int32(len_0))))

goal duplet_ensures_default_po_36:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) <> integer_of_int32(v)) ->
  forall result5:int32.
  (integer_of_int32(result5) = (integer_of_int32(j_1_0) + 1)) ->
  forall j_1_1:int32.
  (j_1_1 = result5) ->
  forall l:int.
  ((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_1))) ->
  ("JC_77":
  ("JC_76": (not is_duplet(a_0, integer_of_int32(len_0),
  integer_of_int32(i_1_0), l, intP_intM_a_3))))

goal duplet_ensures_default_po_37:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) <> integer_of_int32(v)) ->
  forall result5:int32.
  (integer_of_int32(result5) = (integer_of_int32(j_1_0) + 1)) ->
  forall j_1_1:int32.
  (j_1_1 = result5) ->
  ("JC_81":
  ("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
  intP_intM_pi_5_1, pset_singleton(pi))))

goal duplet_ensures_default_po_38:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) <> integer_of_int32(v)) ->
  forall result5:int32.
  (integer_of_int32(result5) = (integer_of_int32(j_1_0) + 1)) ->
  forall j_1_1:int32.
  (j_1_1 = result5) ->
  ("JC_81":
  ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
  intP_intM_pj_6_1, pset_singleton(pj))))

goal duplet_ensures_default_po_39:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) >= integer_of_int32(len_0)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result4) ->
  ("JC_68": ("JC_65": (0 <= integer_of_int32(i_1_1))))

goal duplet_ensures_default_po_40:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) >= integer_of_int32(len_0)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result4) ->
  ("JC_68":
  ("JC_66": (integer_of_int32(i_1_1) <= (integer_of_int32(len_0) - 1))))

goal duplet_ensures_default_po_41:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) >= integer_of_int32(len_0)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result4) ->
  forall k:int.
  forall l_0:int.
  ((0 <= k) and
   ((k < integer_of_int32(i_1_1)) and
    ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
  (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))), except,
  intP_intM_except_4)) ->
  ("JC_68":
  ("JC_67": (not is_duplet(a_0, integer_of_int32(len_0), k, l_0,
  intP_intM_a_3))))

goal duplet_ensures_default_po_42:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) >= integer_of_int32(len_0)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result4) ->
  ("JC_72":
  ("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
  intP_intM_pi_5_1, pset_singleton(pi))))

goal duplet_ensures_default_po_43:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall intP_intM_pi_5_1:(intP, int32) memory.
  forall intP_intM_pj_6_1:(intP,
  int32) memory.
  forall j_1_0:int32.
  (("JC_77":
   (("JC_74": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
    (("JC_75": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
     ("JC_76":
     (forall l:int.
       (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
        (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
        l, intP_intM_a_3)))))))) and
   ("JC_81":
   (("JC_79": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_1, pset_singleton(pi))) and
    ("JC_80": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_1, pset_singleton(pj)))))) ->
  (integer_of_int32(j_1_0) >= integer_of_int32(len_0)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result4) ->
  ("JC_72":
  ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
  intP_intM_pj_6_1, pset_singleton(pj))))

goal duplet_ensures_default_po_44:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) = integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result3) ->
  ("JC_68": ("JC_65": (0 <= integer_of_int32(i_1_1))))

goal duplet_ensures_default_po_45:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) = integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result3) ->
  ("JC_68":
  ("JC_66": (integer_of_int32(i_1_1) <= (integer_of_int32(len_0) - 1))))

goal duplet_ensures_default_po_46:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) = integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result3) ->
  forall k:int.
  forall l_0:int.
  ((0 <= k) and
   ((k < integer_of_int32(i_1_1)) and
    ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
  (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))), except,
  intP_intM_except_4)) ->
  ("JC_68":
  ("JC_67": (not is_duplet(a_0, integer_of_int32(len_0), k, l_0,
  intP_intM_a_3))))

goal duplet_ensures_default_po_47:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) = integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result3) ->
  ("JC_72":
  ("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
  intP_intM_pi_5_0, pset_singleton(pi))))

goal duplet_ensures_default_po_48:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (except <> null) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) = integer_of_int32(v)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result3) ->
  ("JC_72":
  ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
  intP_intM_pj_6_0, pset_singleton(pj))))

goal duplet_ensures_default_po_49:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) > integer_of_int32(result0)) ->
  ("JC_83": (false = true))

goal duplet_ensures_default_po_50:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) > integer_of_int32(result0)) ->
  ("JC_83": (false = true)) ->
  ("JC_29":
  ("JC_25":
  ("JC_23": is_duplet(a_0, integer_of_int32(len_0),
  integer_of_int32(select(intP_intM_pi_5_0, pi)),
  integer_of_int32(select(intP_intM_pj_6_0, pj)), intP_intM_a_3))))

goal duplet_ensures_default_po_51:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) > integer_of_int32(result0)) ->
  ("JC_83": (false = true)) ->
  ("JC_29":
  ("JC_25":
  ("JC_24": (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
  integer_of_int32(select(intP_intM_pi_5_0, pi))))), except,
  intP_intM_except_4)))))

goal duplet_ensures_default_po_52:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) > integer_of_int32(result0)) ->
  ("JC_83": (false = true)) ->
  ("JC_29":
  ("JC_28":
  ("JC_26": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
  intP_intM_pi_5_0, pset_singleton(pi)))))

goal duplet_ensures_default_po_53:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP, int32) memory.
  forall intP_intM_pi_5:(intP, int32) memory.
  forall intP_intM_pj_6:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  forall intP_intM_pi_5_0:(intP, int32) memory.
  forall intP_intM_pj_6_0:(intP,
  int32) memory.
  (("JC_68":
   (("JC_65": (0 <= integer_of_int32(i_1_0))) and
    (("JC_66": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
     ("JC_67":
     (forall k:int.
       (forall l_0:int.
         (((0 <= k) and
           ((k < integer_of_int32(i_1_0)) and
            ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
          ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
           k))), except, intP_intM_except_4)) -> (not is_duplet(a_0,
           integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) and
   ("JC_72":
   (("JC_70": not_assigns(intP_pi_5_alloc_table, intP_intM_pi_5,
    intP_intM_pi_5_0, pset_singleton(pi))) and
    ("JC_71": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
    intP_intM_pj_6_0, pset_singleton(pj)))))) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) > integer_of_int32(result0)) ->
  ("JC_83": (false = true)) ->
  ("JC_29":
  ("JC_28":
  ("JC_27": not_assigns(intP_pj_6_alloc_table, intP_intM_pj_6,
  intP_intM_pj_6_0, pset_singleton(pj)))))

goal duplet_safety_po_1:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  ((-2147483648) <= (integer_of_int32(len_0) - 2))

goal duplet_safety_po_2:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  ((integer_of_int32(len_0) - 2) <= 2147483647)

goal duplet_safety_po_3:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  (offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0))

goal duplet_safety_po_4:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))

goal duplet_safety_po_5:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null)))

goal duplet_safety_po_6:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except = null) ->
  ((-2147483648) <= (integer_of_int32(i_1_0) + 1))

goal duplet_safety_po_7:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except = null) ->
  ((integer_of_int32(i_1_0) + 1) <= 2147483647)

goal duplet_safety_po_8:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except = null) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  (offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0))

goal duplet_safety_po_9:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except = null) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))

goal duplet_safety_po_10:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except = null) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0)) and
   (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) = integer_of_int32(v)) ->
  (offset_min(intP_pi_5_alloc_table, pi) <= 0)

goal duplet_safety_po_11:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except = null) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0)) and
   (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) = integer_of_int32(v)) ->
  (0 <= offset_max(intP_pi_5_alloc_table, pi))

goal duplet_safety_po_12:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except = null) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall intP_intM_pi_5:(intP,
  int32) memory.
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0)) and
   (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) = integer_of_int32(v)) ->
  ((offset_min(intP_pi_5_alloc_table, pi) <= 0) and
   (0 <= offset_max(intP_pi_5_alloc_table, pi))) ->
  forall intP_intM_pi_5_0:(intP,
  int32) memory.
  (intP_intM_pi_5_0 = store(intP_intM_pi_5, pi, i_1_0)) ->
  (offset_min(intP_pj_6_alloc_table, pj) <= 0)

goal duplet_safety_po_13:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except = null) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall intP_intM_pi_5:(intP,
  int32) memory.
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0)) and
   (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) = integer_of_int32(v)) ->
  ((offset_min(intP_pi_5_alloc_table, pi) <= 0) and
   (0 <= offset_max(intP_pi_5_alloc_table, pi))) ->
  forall intP_intM_pi_5_0:(intP,
  int32) memory.
  (intP_intM_pi_5_0 = store(intP_intM_pi_5, pi, i_1_0)) ->
  (0 <= offset_max(intP_pj_6_alloc_table, pj))

goal duplet_safety_po_14:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except = null) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0)) and
   (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) <> integer_of_int32(v)) ->
  ((-2147483648) <= (integer_of_int32(j_1_0) + 1))

goal duplet_safety_po_15:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except = null) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0)) and
   (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) <> integer_of_int32(v)) ->
  ((integer_of_int32(j_1_0) + 1) <= 2147483647)

goal duplet_safety_po_16:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except = null) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0)) and
   (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) <> integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(j_1_0) + 1)) and
   ((integer_of_int32(j_1_0) + 1) <= 2147483647)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(j_1_0) + 1)) ->
  forall j_1_1:int32.
  (j_1_1 = result4) ->
  (0 <= ("JC_59": (integer_of_int32(len_0) - integer_of_int32(j_1_0))))

goal duplet_safety_po_17:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except = null) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0)) and
   (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result3:int32.
  (result3 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result3) <> integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(j_1_0) + 1)) and
   ((integer_of_int32(j_1_0) + 1) <= 2147483647)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(j_1_0) + 1)) ->
  forall j_1_1:int32.
  (j_1_1 = result4) ->
  (("JC_59": (integer_of_int32(len_0) - integer_of_int32(j_1_1))) < ("JC_59":
                                                                    (integer_of_int32(len_0) - integer_of_int32(j_1_0))))

goal duplet_safety_po_18:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except = null) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) >= integer_of_int32(len_0)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result3) ->
  (0 <= ("JC_61": (integer_of_int32(len_0) - integer_of_int32(i_1_0))))

goal duplet_safety_po_19:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except = null) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result2:int32.
  (integer_of_int32(result2) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result2) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) >= integer_of_int32(len_0)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result3) ->
  (("JC_61": (integer_of_int32(len_0) - integer_of_int32(i_1_1))) < ("JC_61":
                                                                    (integer_of_int32(len_0) - integer_of_int32(i_1_0))))

goal duplet_safety_po_20:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  (offset_min(intP_except_4_alloc_table, except) <= 0)

goal duplet_safety_po_21:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  (0 <= offset_max(intP_except_4_alloc_table, except))

goal duplet_safety_po_22:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  ((-2147483648) <= (integer_of_int32(i_1_0) + 1))

goal duplet_safety_po_23:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  ((integer_of_int32(i_1_0) + 1) <= 2147483647)

goal duplet_safety_po_24:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  (offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0))

goal duplet_safety_po_25:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))

goal duplet_safety_po_26:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0)) and
   (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) = integer_of_int32(v)) ->
  (offset_min(intP_pi_5_alloc_table, pi) <= 0)

goal duplet_safety_po_27:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0)) and
   (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) = integer_of_int32(v)) ->
  (0 <= offset_max(intP_pi_5_alloc_table, pi))

goal duplet_safety_po_28:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall intP_intM_pi_5:(intP,
  int32) memory.
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0)) and
   (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) = integer_of_int32(v)) ->
  ((offset_min(intP_pi_5_alloc_table, pi) <= 0) and
   (0 <= offset_max(intP_pi_5_alloc_table, pi))) ->
  forall intP_intM_pi_5_0:(intP,
  int32) memory.
  (intP_intM_pi_5_0 = store(intP_intM_pi_5, pi, i_1_0)) ->
  (offset_min(intP_pj_6_alloc_table, pj) <= 0)

goal duplet_safety_po_29:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall intP_intM_pi_5:(intP,
  int32) memory.
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0)) and
   (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) = integer_of_int32(v)) ->
  ((offset_min(intP_pi_5_alloc_table, pi) <= 0) and
   (0 <= offset_max(intP_pi_5_alloc_table, pi))) ->
  forall intP_intM_pi_5_0:(intP,
  int32) memory.
  (intP_intM_pi_5_0 = store(intP_intM_pi_5, pi, i_1_0)) ->
  (0 <= offset_max(intP_pj_6_alloc_table, pj))

goal duplet_safety_po_30:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0)) and
   (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) <> integer_of_int32(v)) ->
  ((-2147483648) <= (integer_of_int32(j_1_0) + 1))

goal duplet_safety_po_31:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0)) and
   (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) <> integer_of_int32(v)) ->
  ((integer_of_int32(j_1_0) + 1) <= 2147483647)

goal duplet_safety_po_32:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0)) and
   (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) <> integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(j_1_0) + 1)) and
   ((integer_of_int32(j_1_0) + 1) <= 2147483647)) ->
  forall result5:int32.
  (integer_of_int32(result5) = (integer_of_int32(j_1_0) + 1)) ->
  forall j_1_1:int32.
  (j_1_1 = result5) ->
  (0 <= ("JC_59": (integer_of_int32(len_0) - integer_of_int32(j_1_0))))

goal duplet_safety_po_33:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) < integer_of_int32(len_0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(j_1_0)) and
   (integer_of_int32(j_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result4:int32.
  (result4 = select(intP_intM_a_3, shift(a_0, integer_of_int32(j_1_0)))) ->
  (integer_of_int32(result4) <> integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(j_1_0) + 1)) and
   ((integer_of_int32(j_1_0) + 1) <= 2147483647)) ->
  forall result5:int32.
  (integer_of_int32(result5) = (integer_of_int32(j_1_0) + 1)) ->
  forall j_1_1:int32.
  (j_1_1 = result5) ->
  (("JC_59": (integer_of_int32(len_0) - integer_of_int32(j_1_1))) < ("JC_59":
                                                                    (integer_of_int32(len_0) - integer_of_int32(j_1_0))))

goal duplet_safety_po_34:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) >= integer_of_int32(len_0)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result4) ->
  (0 <= ("JC_61": (integer_of_int32(len_0) - integer_of_int32(i_1_0))))

goal duplet_safety_po_35:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) <> integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall j_1:int32.
  (j_1 = result3) ->
  forall j_1_0:int32.
  ("JC_55": true) ->
  ("JC_53":
  (("JC_50": ((integer_of_int32(i_1_0) + 1) <= integer_of_int32(j_1_0))) and
   (("JC_51": (integer_of_int32(j_1_0) <= integer_of_int32(len_0))) and
    ("JC_52":
    (forall l:int.
      (((integer_of_int32(i_1_0) < l) and (l < integer_of_int32(j_1_0))) ->
       (not is_duplet(a_0, integer_of_int32(len_0), integer_of_int32(i_1_0),
       l, intP_intM_a_3)))))))) ->
  (integer_of_int32(j_1_0) >= integer_of_int32(len_0)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result4:int32.
  (integer_of_int32(result4) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result4) ->
  (("JC_61": (integer_of_int32(len_0) - integer_of_int32(i_1_1))) < ("JC_61":
                                                                    (integer_of_int32(len_0) - integer_of_int32(i_1_0))))

goal duplet_safety_po_36:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) = integer_of_int32(v)) ->
  ((-2147483648) <= (integer_of_int32(i_1_0) + 1))

goal duplet_safety_po_37:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) = integer_of_int32(v)) ->
  ((integer_of_int32(i_1_0) + 1) <= 2147483647)

goal duplet_safety_po_38:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) = integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result3) ->
  (0 <= ("JC_61": (integer_of_int32(len_0) - integer_of_int32(i_1_0))))

goal duplet_safety_po_39:
  forall a_0:intP pointer.
  forall len_0:int32.
  forall except:intP pointer.
  forall pi:intP pointer.
  forall pj:intP pointer.
  forall intP_a_3_alloc_table:intP alloc_table.
  forall intP_except_4_alloc_table:intP alloc_table.
  forall intP_pi_5_alloc_table:intP alloc_table.
  forall intP_pj_6_alloc_table:intP alloc_table.
  forall intP_intM_a_3:(intP, int32) memory.
  forall intP_intM_except_4:(intP,
  int32) memory.
  ("JC_21":
  (("JC_12": (2 <= integer_of_int32(len_0))) and
   (("JC_13": (offset_min(intP_a_3_alloc_table, a_0) <= 0)) and
    (("JC_14": (offset_max(intP_a_3_alloc_table,
     a_0) >= (integer_of_int32(len_0) - 1))) and
     (("JC_15": (offset_min(intP_pi_5_alloc_table, pi) <= 0)) and
      (("JC_16": (offset_max(intP_pi_5_alloc_table, pi) >= 0)) and
       (("JC_17": (offset_min(intP_pj_6_alloc_table, pj) <= 0)) and
        (("JC_18": (offset_max(intP_pj_6_alloc_table, pj) >= 0)) and
         (("JC_19":
          ((except = null) or
           ((offset_min(intP_except_4_alloc_table, except) <= 0) and
            (offset_max(intP_except_4_alloc_table, except) >= 0)))) and
          ("JC_20":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0, integer_of_int32(len_0), i_0, j_0,
               intP_intM_a_3) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0,
               i_0))), except, intP_intM_except_4))))))))))))))) ->
  forall result:int32.
  (integer_of_int32(result) = 0) ->
  forall i_1:int32.
  (i_1 = result) ->
  forall i_1_0:int32.
  ("JC_44": true) ->
  ("JC_42":
  (("JC_39": (0 <= integer_of_int32(i_1_0))) and
   (("JC_40": (integer_of_int32(i_1_0) <= (integer_of_int32(len_0) - 1))) and
    ("JC_41":
    (forall k:int.
      (forall l_0:int.
        (((0 <= k) and
          ((k < integer_of_int32(i_1_0)) and
           ((k < l_0) and (l_0 < integer_of_int32(len_0))))) ->
         ((not eq_opt(integer_of_int32(select(intP_intM_a_3, shift(a_0, k))),
          except, intP_intM_except_4)) -> (not is_duplet(a_0,
          integer_of_int32(len_0), k, l_0, intP_intM_a_3)))))))))) ->
  (((-2147483648) <= (integer_of_int32(len_0) - 2)) and
   ((integer_of_int32(len_0) - 2) <= 2147483647)) ->
  forall result0:int32.
  (integer_of_int32(result0) = (integer_of_int32(len_0) - 2)) ->
  (integer_of_int32(i_1_0) <= integer_of_int32(result0)) ->
  ((offset_min(intP_a_3_alloc_table, a_0) <= integer_of_int32(i_1_0)) and
   (integer_of_int32(i_1_0) <= offset_max(intP_a_3_alloc_table, a_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_a_3, shift(a_0, integer_of_int32(i_1_0)))) ->
  forall v:int32.
  (v = result1) ->
  (same_block(except, null) or ((except = null) or (null = null))) ->
  (except <> null) ->
  ((offset_min(intP_except_4_alloc_table, except) <= 0) and
   (0 <= offset_max(intP_except_4_alloc_table, except))) ->
  forall result2:int32.
  (result2 = select(intP_intM_except_4, except)) ->
  (integer_of_int32(result2) = integer_of_int32(v)) ->
  (((-2147483648) <= (integer_of_int32(i_1_0) + 1)) and
   ((integer_of_int32(i_1_0) + 1) <= 2147483647)) ->
  forall result3:int32.
  (integer_of_int32(result3) = (integer_of_int32(i_1_0) + 1)) ->
  forall i_1_1:int32.
  (i_1_1 = result3) ->
  (("JC_61": (integer_of_int32(len_0) - integer_of_int32(i_1_1))) < ("JC_61":
                                                                    (integer_of_int32(len_0) - integer_of_int32(i_1_0))))

goal duplets_ensures_default_po_1:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP, int32) memory.
  forall intP_intM_pk_10:(intP, int32) memory.
  forall intP_intM_pl_11:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP, int32) memory.
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  forall result0:int32.
  (result0 = select(intP_intM_pi_0_8_0, pi_0)) ->
  forall intP_intM_pk_10_0:(intP,
  int32) memory.
  forall intP_intM_pl_11_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pk_10_0, pk)),
    integer_of_int32(select(intP_intM_pl_11_0, pl)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pk_10_0, pk))))),
    shift(a_0_0, integer_of_int32(result0)), intP_intM_a_0_7))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pk_10_alloc_table, intP_intM_pk_10,
    intP_intM_pk_10_0, pset_singleton(pk))) and
    ("JC_34": not_assigns(intP_pl_11_alloc_table, intP_intM_pl_11,
    intP_intM_pl_11_0, pset_singleton(pl))))))) ->
  ("JC_121":
  ("JC_115":
  ("JC_112": is_duplet(a_0_0, integer_of_int32(len_0_0),
  integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
  integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7))))

goal duplets_ensures_default_po_2:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP, int32) memory.
  forall intP_intM_pk_10:(intP, int32) memory.
  forall intP_intM_pl_11:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP, int32) memory.
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  forall result0:int32.
  (result0 = select(intP_intM_pi_0_8_0, pi_0)) ->
  forall intP_intM_pk_10_0:(intP,
  int32) memory.
  forall intP_intM_pl_11_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pk_10_0, pk)),
    integer_of_int32(select(intP_intM_pl_11_0, pl)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pk_10_0, pk))))),
    shift(a_0_0, integer_of_int32(result0)), intP_intM_a_0_7))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pk_10_alloc_table, intP_intM_pk_10,
    intP_intM_pk_10_0, pset_singleton(pk))) and
    ("JC_34": not_assigns(intP_pl_11_alloc_table, intP_intM_pl_11,
    intP_intM_pl_11_0, pset_singleton(pl))))))) ->
  ("JC_121":
  ("JC_115":
  ("JC_113": is_duplet(a_0_0, integer_of_int32(len_0_0),
  integer_of_int32(select(intP_intM_pk_10_0, pk)),
  integer_of_int32(select(intP_intM_pl_11_0, pl)), intP_intM_a_0_7))))

goal duplets_ensures_default_po_3:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP, int32) memory.
  forall intP_intM_pk_10:(intP, int32) memory.
  forall intP_intM_pl_11:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP, int32) memory.
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  forall result0:int32.
  (result0 = select(intP_intM_pi_0_8_0, pi_0)) ->
  forall intP_intM_pk_10_0:(intP,
  int32) memory.
  forall intP_intM_pl_11_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pk_10_0, pk)),
    integer_of_int32(select(intP_intM_pl_11_0, pl)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pk_10_0, pk))))),
    shift(a_0_0, integer_of_int32(result0)), intP_intM_a_0_7))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pk_10_alloc_table, intP_intM_pk_10,
    intP_intM_pk_10_0, pset_singleton(pk))) and
    ("JC_34": not_assigns(intP_pl_11_alloc_table, intP_intM_pl_11,
    intP_intM_pl_11_0, pset_singleton(pl))))))) ->
  ("JC_121":
  ("JC_115":
  ("JC_114": (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
  integer_of_int32(select(intP_intM_pi_0_8_0,
  pi_0))))) <> integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
  integer_of_int32(select(intP_intM_pk_10_0, pk)))))))))

goal duplets_ensures_default_po_4:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP, int32) memory.
  forall intP_intM_pk_10:(intP, int32) memory.
  forall intP_intM_pl_11:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP, int32) memory.
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  forall result0:int32.
  (result0 = select(intP_intM_pi_0_8_0, pi_0)) ->
  forall intP_intM_pk_10_0:(intP,
  int32) memory.
  forall intP_intM_pl_11_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pk_10_0, pk)),
    integer_of_int32(select(intP_intM_pl_11_0, pl)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pk_10_0, pk))))),
    shift(a_0_0, integer_of_int32(result0)), intP_intM_a_0_7))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pk_10_alloc_table, intP_intM_pk_10,
    intP_intM_pk_10_0, pset_singleton(pk))) and
    ("JC_34": not_assigns(intP_pl_11_alloc_table, intP_intM_pl_11,
    intP_intM_pl_11_0, pset_singleton(pl))))))) ->
  ("JC_121":
  ("JC_120":
  ("JC_116": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
  intP_intM_pi_0_8_0, pset_singleton(pi_0)))))

goal duplets_ensures_default_po_5:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP, int32) memory.
  forall intP_intM_pk_10:(intP, int32) memory.
  forall intP_intM_pl_11:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP, int32) memory.
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  forall result0:int32.
  (result0 = select(intP_intM_pi_0_8_0, pi_0)) ->
  forall intP_intM_pk_10_0:(intP,
  int32) memory.
  forall intP_intM_pl_11_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pk_10_0, pk)),
    integer_of_int32(select(intP_intM_pl_11_0, pl)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pk_10_0, pk))))),
    shift(a_0_0, integer_of_int32(result0)), intP_intM_a_0_7))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pk_10_alloc_table, intP_intM_pk_10,
    intP_intM_pk_10_0, pset_singleton(pk))) and
    ("JC_34": not_assigns(intP_pl_11_alloc_table, intP_intM_pl_11,
    intP_intM_pl_11_0, pset_singleton(pl))))))) ->
  ("JC_121":
  ("JC_120":
  ("JC_117": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
  intP_intM_pj_0_9_0, pset_singleton(pj_0)))))

goal duplets_ensures_default_po_6:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP, int32) memory.
  forall intP_intM_pk_10:(intP, int32) memory.
  forall intP_intM_pl_11:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP, int32) memory.
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  forall result0:int32.
  (result0 = select(intP_intM_pi_0_8_0, pi_0)) ->
  forall intP_intM_pk_10_0:(intP,
  int32) memory.
  forall intP_intM_pl_11_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pk_10_0, pk)),
    integer_of_int32(select(intP_intM_pl_11_0, pl)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pk_10_0, pk))))),
    shift(a_0_0, integer_of_int32(result0)), intP_intM_a_0_7))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pk_10_alloc_table, intP_intM_pk_10,
    intP_intM_pk_10_0, pset_singleton(pk))) and
    ("JC_34": not_assigns(intP_pl_11_alloc_table, intP_intM_pl_11,
    intP_intM_pl_11_0, pset_singleton(pl))))))) ->
  ("JC_121":
  ("JC_120":
  ("JC_118": not_assigns(intP_pk_10_alloc_table, intP_intM_pk_10,
  intP_intM_pk_10_0, pset_singleton(pk)))))

goal duplets_ensures_default_po_7:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP, int32) memory.
  forall intP_intM_pk_10:(intP, int32) memory.
  forall intP_intM_pl_11:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP, int32) memory.
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  forall result0:int32.
  (result0 = select(intP_intM_pi_0_8_0, pi_0)) ->
  forall intP_intM_pk_10_0:(intP,
  int32) memory.
  forall intP_intM_pl_11_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pk_10_0, pk)),
    integer_of_int32(select(intP_intM_pl_11_0, pl)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pk_10_0, pk))))),
    shift(a_0_0, integer_of_int32(result0)), intP_intM_a_0_7))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pk_10_alloc_table, intP_intM_pk_10,
    intP_intM_pk_10_0, pset_singleton(pk))) and
    ("JC_34": not_assigns(intP_pl_11_alloc_table, intP_intM_pl_11,
    intP_intM_pl_11_0, pset_singleton(pl))))))) ->
  ("JC_121":
  ("JC_120":
  ("JC_119": not_assigns(intP_pl_11_alloc_table, intP_intM_pl_11,
  intP_intM_pl_11_0, pset_singleton(pl)))))

goal duplets_safety_po_1:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  ("JC_10": ("JC_1": (2 <= integer_of_int32(len_0_0))))

goal duplets_safety_po_2:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  ("JC_10": ("JC_2": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)))

goal duplets_safety_po_3:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  ("JC_10":
  ("JC_3": (offset_max(intP_a_0_7_alloc_table,
  a_0_0) >= (integer_of_int32(len_0_0) - 1))))

goal duplets_safety_po_4:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  ("JC_10": ("JC_4": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)))

goal duplets_safety_po_5:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  ("JC_10": ("JC_5": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)))

goal duplets_safety_po_6:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  ("JC_10": ("JC_6": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)))

goal duplets_safety_po_7:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  ("JC_10": ("JC_7": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)))

goal duplets_safety_po_8:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result0:intP alloc_table.
  ("JC_10":
  ("JC_8":
  ((null = null) or
   ((offset_min(result0, null) <= 0) and (offset_max(result0, null) >= 0)))))

goal duplets_safety_po_9:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP,
  int32) memory.
  ("JC_10":
  ("JC_9":
  (exists i_0:int.
    (exists j_0:int.
      (is_duplet(a_0_0, integer_of_int32(len_0_0), i_0, j_0,
       intP_intM_a_0_7) and
       (not eq_opt(integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
       i_0))), null, result)))))))

goal duplets_safety_po_10:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP,
  int32) memory.
  forall result0:intP alloc_table.
  ("JC_10":
  (("JC_1": (2 <= integer_of_int32(len_0_0))) and
   (("JC_2": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_3": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_4": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_5": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_6": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_7": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_8":
          ((null = null) or
           ((offset_min(result0, null) <= 0) and (offset_max(result0,
            null) >= 0)))) and
          ("JC_9":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0_0, integer_of_int32(len_0_0), i_0, j_0,
               intP_intM_a_0_7) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
               shift(a_0_0, i_0))), null, result))))))))))))))) ->
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)

goal duplets_safety_po_11:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP,
  int32) memory.
  forall result0:intP alloc_table.
  ("JC_10":
  (("JC_1": (2 <= integer_of_int32(len_0_0))) and
   (("JC_2": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_3": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_4": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_5": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_6": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_7": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_8":
          ((null = null) or
           ((offset_min(result0, null) <= 0) and (offset_max(result0,
            null) >= 0)))) and
          ("JC_9":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0_0, integer_of_int32(len_0_0), i_0, j_0,
               intP_intM_a_0_7) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
               shift(a_0_0, i_0))), null, result))))))))))))))) ->
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  (0 <= offset_max(intP_pi_0_8_alloc_table, pi_0))

goal duplets_safety_po_12:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP,
  int32) memory.
  forall result0:intP alloc_table.
  ("JC_10":
  (("JC_1": (2 <= integer_of_int32(len_0_0))) and
   (("JC_2": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_3": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_4": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_5": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_6": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_7": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_8":
          ((null = null) or
           ((offset_min(result0, null) <= 0) and (offset_max(result0,
            null) >= 0)))) and
          ("JC_9":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0_0, integer_of_int32(len_0_0), i_0, j_0,
               intP_intM_a_0_7) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
               shift(a_0_0, i_0))), null, result))))))))))))))) ->
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  ((offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0) and
   (0 <= offset_max(intP_pi_0_8_alloc_table, pi_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_pi_0_8_0, pi_0)) ->
  ("JC_10": ("JC_2": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)))

goal duplets_safety_po_13:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP,
  int32) memory.
  forall result0:intP alloc_table.
  ("JC_10":
  (("JC_1": (2 <= integer_of_int32(len_0_0))) and
   (("JC_2": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_3": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_4": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_5": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_6": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_7": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_8":
          ((null = null) or
           ((offset_min(result0, null) <= 0) and (offset_max(result0,
            null) >= 0)))) and
          ("JC_9":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0_0, integer_of_int32(len_0_0), i_0, j_0,
               intP_intM_a_0_7) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
               shift(a_0_0, i_0))), null, result))))))))))))))) ->
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  ((offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0) and
   (0 <= offset_max(intP_pi_0_8_alloc_table, pi_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_pi_0_8_0, pi_0)) ->
  ("JC_10":
  ("JC_3": (offset_max(intP_a_0_7_alloc_table,
  a_0_0) >= (integer_of_int32(len_0_0) - 1))))

goal duplets_safety_po_14:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP,
  int32) memory.
  forall result0:intP alloc_table.
  ("JC_10":
  (("JC_1": (2 <= integer_of_int32(len_0_0))) and
   (("JC_2": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_3": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_4": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_5": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_6": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_7": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_8":
          ((null = null) or
           ((offset_min(result0, null) <= 0) and (offset_max(result0,
            null) >= 0)))) and
          ("JC_9":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0_0, integer_of_int32(len_0_0), i_0, j_0,
               intP_intM_a_0_7) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
               shift(a_0_0, i_0))), null, result))))))))))))))) ->
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  ((offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0) and
   (0 <= offset_max(intP_pi_0_8_alloc_table, pi_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_pi_0_8_0, pi_0)) ->
  ("JC_10": ("JC_4": (offset_min(intP_pk_10_alloc_table, pk) <= 0)))

goal duplets_safety_po_15:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP,
  int32) memory.
  forall result0:intP alloc_table.
  ("JC_10":
  (("JC_1": (2 <= integer_of_int32(len_0_0))) and
   (("JC_2": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_3": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_4": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_5": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_6": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_7": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_8":
          ((null = null) or
           ((offset_min(result0, null) <= 0) and (offset_max(result0,
            null) >= 0)))) and
          ("JC_9":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0_0, integer_of_int32(len_0_0), i_0, j_0,
               intP_intM_a_0_7) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
               shift(a_0_0, i_0))), null, result))))))))))))))) ->
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  ((offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0) and
   (0 <= offset_max(intP_pi_0_8_alloc_table, pi_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_pi_0_8_0, pi_0)) ->
  ("JC_10": ("JC_5": (offset_max(intP_pk_10_alloc_table, pk) >= 0)))

goal duplets_safety_po_16:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP,
  int32) memory.
  forall result0:intP alloc_table.
  ("JC_10":
  (("JC_1": (2 <= integer_of_int32(len_0_0))) and
   (("JC_2": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_3": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_4": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_5": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_6": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_7": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_8":
          ((null = null) or
           ((offset_min(result0, null) <= 0) and (offset_max(result0,
            null) >= 0)))) and
          ("JC_9":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0_0, integer_of_int32(len_0_0), i_0, j_0,
               intP_intM_a_0_7) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
               shift(a_0_0, i_0))), null, result))))))))))))))) ->
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  ((offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0) and
   (0 <= offset_max(intP_pi_0_8_alloc_table, pi_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_pi_0_8_0, pi_0)) ->
  ("JC_10": ("JC_6": (offset_min(intP_pl_11_alloc_table, pl) <= 0)))

goal duplets_safety_po_17:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP,
  int32) memory.
  forall result0:intP alloc_table.
  ("JC_10":
  (("JC_1": (2 <= integer_of_int32(len_0_0))) and
   (("JC_2": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_3": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_4": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_5": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_6": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_7": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_8":
          ((null = null) or
           ((offset_min(result0, null) <= 0) and (offset_max(result0,
            null) >= 0)))) and
          ("JC_9":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0_0, integer_of_int32(len_0_0), i_0, j_0,
               intP_intM_a_0_7) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
               shift(a_0_0, i_0))), null, result))))))))))))))) ->
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  ((offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0) and
   (0 <= offset_max(intP_pi_0_8_alloc_table, pi_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_pi_0_8_0, pi_0)) ->
  ("JC_10": ("JC_7": (offset_max(intP_pl_11_alloc_table, pl) >= 0)))

goal duplets_safety_po_18:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP,
  int32) memory.
  forall result0:intP alloc_table.
  ("JC_10":
  (("JC_1": (2 <= integer_of_int32(len_0_0))) and
   (("JC_2": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_3": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_4": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_5": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_6": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_7": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_8":
          ((null = null) or
           ((offset_min(result0, null) <= 0) and (offset_max(result0,
            null) >= 0)))) and
          ("JC_9":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0_0, integer_of_int32(len_0_0), i_0, j_0,
               intP_intM_a_0_7) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
               shift(a_0_0, i_0))), null, result))))))))))))))) ->
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  ((offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0) and
   (0 <= offset_max(intP_pi_0_8_alloc_table, pi_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_pi_0_8_0, pi_0)) ->
  ("JC_10":
  ("JC_8":
  ((shift(a_0_0, integer_of_int32(result1)) = null) or
   ((offset_min(intP_a_0_7_alloc_table, shift(a_0_0,
    integer_of_int32(result1))) <= 0) and (offset_max(intP_a_0_7_alloc_table,
    shift(a_0_0, integer_of_int32(result1))) >= 0)))))

goal duplets_safety_po_19:
  forall a_0_0:intP pointer.
  forall len_0_0:int32.
  forall pi_0:intP pointer.
  forall pj_0:intP pointer.
  forall pk:intP pointer.
  forall pl:intP pointer.
  forall intP_a_0_7_alloc_table:intP alloc_table.
  forall intP_pi_0_8_alloc_table:intP alloc_table.
  forall intP_pj_0_9_alloc_table:intP alloc_table.
  forall intP_pk_10_alloc_table:intP alloc_table.
  forall intP_pl_11_alloc_table:intP alloc_table.
  forall intP_intM_a_0_7:(intP, int32) memory.
  forall intP_intM_pi_0_8:(intP, int32) memory.
  forall intP_intM_pj_0_9:(intP,
  int32) memory.
  ("JC_110":
  (("JC_98": (4 <= integer_of_int32(len_0_0))) and
   (("JC_99": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_100": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_101": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_102": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_103": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_104": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_105": (offset_min(intP_pk_10_alloc_table, pk) <= 0)) and
          (("JC_106": (offset_max(intP_pk_10_alloc_table, pk) >= 0)) and
           (("JC_107": (offset_min(intP_pl_11_alloc_table, pl) <= 0)) and
            (("JC_108": (offset_max(intP_pl_11_alloc_table, pl) >= 0)) and
             ("JC_109":
             (exists i_1_0:int.
               (exists j_1_0:int.
                 (exists k_0:int.
                   (exists l_1:int.
                     (is_duplet(a_0_0, integer_of_int32(len_0_0), i_1_0,
                      j_1_0, intP_intM_a_0_7) and
                      (is_duplet(a_0_0, integer_of_int32(len_0_0), k_0, l_1,
                       intP_intM_a_0_7) and
                       (integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
                       i_1_0))) <> integer_of_int32(select(intP_intM_a_0_7,
                       shift(a_0_0, k_0))))))))))))))))))))))) ->
  forall result:(intP,
  int32) memory.
  forall result0:intP alloc_table.
  ("JC_10":
  (("JC_1": (2 <= integer_of_int32(len_0_0))) and
   (("JC_2": (offset_min(intP_a_0_7_alloc_table, a_0_0) <= 0)) and
    (("JC_3": (offset_max(intP_a_0_7_alloc_table,
     a_0_0) >= (integer_of_int32(len_0_0) - 1))) and
     (("JC_4": (offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0)) and
      (("JC_5": (offset_max(intP_pi_0_8_alloc_table, pi_0) >= 0)) and
       (("JC_6": (offset_min(intP_pj_0_9_alloc_table, pj_0) <= 0)) and
        (("JC_7": (offset_max(intP_pj_0_9_alloc_table, pj_0) >= 0)) and
         (("JC_8":
          ((null = null) or
           ((offset_min(result0, null) <= 0) and (offset_max(result0,
            null) >= 0)))) and
          ("JC_9":
          (exists i_0:int.
            (exists j_0:int.
              (is_duplet(a_0_0, integer_of_int32(len_0_0), i_0, j_0,
               intP_intM_a_0_7) and
               (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
               shift(a_0_0, i_0))), null, result))))))))))))))) ->
  forall intP_intM_pi_0_8_0:(intP,
  int32) memory.
  forall intP_intM_pj_0_9_0:(intP,
  int32) memory.
  ("JC_36":
  (("JC_32":
   (("JC_30": is_duplet(a_0_0, integer_of_int32(len_0_0),
    integer_of_int32(select(intP_intM_pi_0_8_0, pi_0)),
    integer_of_int32(select(intP_intM_pj_0_9_0, pj_0)), intP_intM_a_0_7)) and
    ("JC_31": (not eq_opt(integer_of_int32(select(intP_intM_a_0_7,
    shift(a_0_0, integer_of_int32(select(intP_intM_pi_0_8_0, pi_0))))), null,
    result))))) and
   ("JC_35":
   (("JC_33": not_assigns(intP_pi_0_8_alloc_table, intP_intM_pi_0_8,
    intP_intM_pi_0_8_0, pset_singleton(pi_0))) and
    ("JC_34": not_assigns(intP_pj_0_9_alloc_table, intP_intM_pj_0_9,
    intP_intM_pj_0_9_0, pset_singleton(pj_0))))))) ->
  ((offset_min(intP_pi_0_8_alloc_table, pi_0) <= 0) and
   (0 <= offset_max(intP_pi_0_8_alloc_table, pi_0))) ->
  forall result1:int32.
  (result1 = select(intP_intM_pi_0_8_0, pi_0)) ->
  ("JC_10":
  ("JC_9":
  (exists i_0:int.
    (exists j_0:int.
      (is_duplet(a_0_0, integer_of_int32(len_0_0), i_0, j_0,
       intP_intM_a_0_7) and
       (not eq_opt(integer_of_int32(select(intP_intM_a_0_7, shift(a_0_0,
       i_0))), shift(a_0_0, integer_of_int32(result1)), intP_intM_a_0_7)))))))

========== running alt-ergo ==========
Running Alt-Ergo on proof obligations
(. = valid * = invalid ? = unknown # = timeout ! = failure)
why/duplets_why.why           : ..........#..................#................................................................#......................# (114/0/0/4/0)
total   : 118
valid   : 114 ( 97%)
invalid :   0 (  0%)
unknown :   0 (  0%)
timeout :   4 (  3%)
failure :   0 (  0%)
