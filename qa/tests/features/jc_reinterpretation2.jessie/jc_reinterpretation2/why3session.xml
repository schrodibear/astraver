<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC3" version="2.4.1" timelimit="47" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.4" timelimit="5" memlimit="3300"/>
<prover id="2" name="CVC4 FULL" version="1.4" timelimit="5" memlimit="3300"/>
<prover id="3" name="Alt-Ergo" version="0.95.2" timelimit="5" memlimit="1000"/>
<file name="../jc_reinterpretation2.mlw" expanded="true">
<theory name="Jessie_model" sum="d41d8cd98f00b204e9800998ecf8427e" expanded="true">
</theory>
<theory name="Jessie_program" sum="001427b1dcf9bc4e4a328d376aac4a1c" expanded="true">
 <goal name="WP_parameter init_buffer_ensures_default" expl="Function init_buffer, default behavior" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="WP_parameter init_buffer_ensures_default.1" expl="1. Assertion in line 52">
  <transf name="inline_goal">
   <goal name="WP_parameter init_buffer_ensures_default.1.1" expl="1. Assertion in line 52">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.28"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter init_buffer_ensures_default.2" expl="2. Assertion in line 53">
  <proof prover="1" timelimit="40" memlimit="1000"><result status="valid" time="29.55"/></proof>
  <proof prover="2" timelimit="40" memlimit="1000"><result status="valid" time="42.19"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_ensures_default.3" expl="3. Assertion in line 55">
  <proof prover="0"><result status="valid" time="0.72"/></proof>
  <proof prover="1" timelimit="47" memlimit="1000"><result status="valid" time="0.40"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_ensures_default.4" expl="4. Assertion in line 56">
  <proof prover="1" memlimit="1000"><result status="valid" time="1.16"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_ensures_default.5" expl="5. Assertion in line 58">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.51"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_ensures_default.6" expl="6. Assertion in line 64">
  <transf name="inline_goal">
   <goal name="WP_parameter init_buffer_ensures_default.6.1" expl="1. Assertion in line 64">
   <transf name="inline_goal">
    <goal name="WP_parameter init_buffer_ensures_default.6.1.1" expl="1. Assertion in line 64">
    <proof prover="1" memlimit="1000"><result status="valid" time="0.68"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter init_buffer_ensures_default.7" expl="7. Assertion in line 67">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.32"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_ensures_default.8" expl="8. Assertion in line 69">
  <proof prover="1" timelimit="40" memlimit="1000"><result status="valid" time="34.29"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_ensures_default.9" expl="9. Assertion in line 76">
  <proof prover="0"><result status="valid" time="18.98"/></proof>
  <proof prover="1" timelimit="47" memlimit="1000"><result status="valid" time="16.30"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_ensures_default.10" expl="10. Assertion in line 78">
  <transf name="inline_goal">
   <goal name="WP_parameter init_buffer_ensures_default.10.1" expl="1. Assertion in line 78">
   <transf name="inline_goal">
    <goal name="WP_parameter init_buffer_ensures_default.10.1.1" expl="1. Assertion in line 78">
    <proof prover="1" timelimit="40" memlimit="1000"><result status="valid" time="1.18"/></proof>
    <proof prover="2" timelimit="40" memlimit="1000"><result status="valid" time="1.58"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter init_buffer_ensures_default.11" expl="11. Assertion in line 87">
  <transf name="inline_all">
   <goal name="WP_parameter init_buffer_ensures_default.11.1" expl="1. Assertion in line 87">
   <proof prover="1" timelimit="49" memlimit="1000"><result status="valid" time="7.39"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter init_buffer_ensures_default.12" expl="12. Assertion in line 88">
  <transf name="inline_all">
   <goal name="WP_parameter init_buffer_ensures_default.12.1" expl="1. Assertion in line 88">
   <transf name="split_goal_wp">
    <goal name="WP_parameter init_buffer_ensures_default.12.1.1" expl="1. Assertion in line 88">
    <proof prover="1" timelimit="49" memlimit="1000"><result status="valid" time="2.19"/></proof>
    <proof prover="2" timelimit="49" memlimit="1000"><result status="valid" time="3.66"/></proof>
    </goal>
    <goal name="WP_parameter init_buffer_ensures_default.12.1.2" expl="2. Assertion in line 88">
    <proof prover="1" timelimit="49" memlimit="1000"><result status="valid" time="2.23"/></proof>
    <proof prover="2" timelimit="49" memlimit="1000"><result status="valid" time="3.66"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter init_buffer_ensures_default.13" expl="13. Postcondition" expanded="true">
  <transf name="split_goal_wp" expanded="true">
   <goal name="WP_parameter init_buffer_ensures_default.13.1" expl="1. Allocates clause" expanded="true">
   <transf name="split_all_full" expanded="true">
    <goal name="WP_parameter init_buffer_ensures_default.13.1.1" expl="1. Allocates clause">
    <proof prover="1" memlimit="1000"><result status="valid" time="0.38"/></proof>
    </goal>
    <goal name="WP_parameter init_buffer_ensures_default.13.1.2" expl="2. Allocates clause" expanded="true">
    <transf name="inline_goal" expanded="true">
     <goal name="WP_parameter init_buffer_ensures_default.13.1.2.1" expl="1. Allocates clause" expanded="true">
     <transf name="inline_goal" expanded="true">
      <goal name="WP_parameter init_buffer_ensures_default.13.1.2.1.1" expl="1. Allocates clause" expanded="true">
      <proof prover="1" timelimit="78" memlimit="1000"><result status="valid" time="56.71"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter init_buffer_ensures_default.13.2" expl="2. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.36"/></proof>
   </goal>
   <goal name="WP_parameter init_buffer_ensures_default.13.3" expl="3. Assigns clause">
   <transf name="inline_goal">
    <goal name="WP_parameter init_buffer_ensures_default.13.3.1" expl="1. Assigns clause">
    <proof prover="2" timelimit="105"><result status="valid" time="8.12"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter init_buffer_ensures_default.13.4" expl="4. Assigns clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="4.21"/></proof>
   </goal>
   <goal name="WP_parameter init_buffer_ensures_default.13.5" expl="5. Assigns clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="2.75"/></proof>
   </goal>
   <goal name="WP_parameter init_buffer_ensures_default.13.6" expl="6. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="WP_parameter init_buffer_ensures_default.13.7" expl="7. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.36"/></proof>
   </goal>
   <goal name="WP_parameter init_buffer_ensures_default.13.8" expl="8. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="WP_parameter init_buffer_ensures_default.13.9" expl="9. Ensures clause">
   <proof prover="1" timelimit="47" memlimit="1000"><result status="valid" time="27.54"/></proof>
   </goal>
   <goal name="WP_parameter init_buffer_ensures_default.13.10" expl="10. Ensures clause">
   <proof prover="1" timelimit="47" memlimit="1000"><result status="valid" time="32.20"/></proof>
   </goal>
   <goal name="WP_parameter init_buffer_ensures_default.13.11" expl="11. Ensures clause" expanded="true">
   <transf name="eliminate_if" expanded="true">
    <goal name="WP_parameter init_buffer_ensures_default.13.11.1" expl="1. Ensures clause" expanded="true">
    <proof prover="1" timelimit="109" memlimit="1000"><result status="valid" time="151.63"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter init_buffer_ensures_default.13.12" expl="12. Ensures clause">
   <transf name="inline_goal">
    <goal name="WP_parameter init_buffer_ensures_default.13.12.1" expl="1. Ensures clause">
    <transf name="inline_goal">
     <goal name="WP_parameter init_buffer_ensures_default.13.12.1.1" expl="1. Ensures clause">
     <proof prover="2" timelimit="105"><result status="valid" time="3.99"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter init_buffer_ensures_default.13.13" expl="13. Ensures clause" expanded="true">
   <proof prover="1" memlimit="1000"><result status="valid" time="2.50"/></proof>
   <proof prover="2" memlimit="1000"><result status="valid" time="3.85"/></proof>
   </goal>
   <goal name="WP_parameter init_buffer_ensures_default.13.14" expl="14. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="2.08"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter init_buffer_safety" expl="Function init_buffer, safety" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="WP_parameter init_buffer_safety.1" expl="1. Allocation size (precondition)">
  <proof prover="1" timelimit="50" memlimit="1000"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_safety.2" expl="2. Precondition for memset_char_0 (External. Requires clause)">
  <proof prover="1" timelimit="50" memlimit="1000"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_safety.3" expl="3. Pointer dereference (Assignment)">
  <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_safety.4" expl="4. Pointer dereference (Assignment with offset)">
  <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_safety.5" expl="5. Reinterpret cast">
  <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_safety.6" expl="6. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.40"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_safety.7" expl="7. Pointer dereference (Assignment with offset)">
  <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_safety.8" expl="8. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.43"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_safety.9" expl="9. Pointer dereference (Assignment)">
  <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_safety.10" expl="10. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_safety.11" expl="11. Reinterpret cast">
  <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.48"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_safety.12" expl="12. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.70"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_safety.13" expl="13. Pointer dereference (Assignment)">
  <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.37"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_safety.14" expl="14. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.72"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_safety.15" expl="15. Pointer dereference (Assignment with offset)">
  <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.30"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_safety.16" expl="16. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="WP_parameter init_buffer_safety.17" expl="17. Reinterpret cast">
  <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.84"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter get_char_ensures_default" expl="Function get_char, default behavior">
 <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
 </goal>
 <goal name="WP_parameter get_char_safety" expl="Function get_char, safety">
 <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
 </goal>
 <goal name="WP_parameter get_int_ensures_default" expl="Function get_int, default behavior" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="WP_parameter get_int_ensures_default.1" expl="1. Postcondition" expanded="true">
  <transf name="split_goal_wp" expanded="true">
   <goal name="WP_parameter get_int_ensures_default.1.1" expl="1. Allocates clause">
   <transf name="inline_goal">
    <goal name="WP_parameter get_int_ensures_default.1.1.1" expl="1. Allocates clause">
    <proof prover="1" timelimit="57" memlimit="1000"><result status="valid" time="18.78"/></proof>
    <proof prover="2" timelimit="10" memlimit="1000"><result status="valid" time="8.42"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter get_int_ensures_default.1.2" expl="2. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="WP_parameter get_int_ensures_default.1.3" expl="3. Assigns clause">
   <transf name="inline_goal">
    <goal name="WP_parameter get_int_ensures_default.1.3.1" expl="1. Assigns clause">
    <proof prover="1" memlimit="1000"><result status="valid" time="0.56"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter get_int_ensures_default.1.4" expl="4. Assigns clause" expanded="true">
   <proof prover="3"><result status="valid" time="0.95"/></proof>
   </goal>
   <goal name="WP_parameter get_int_ensures_default.1.5" expl="5. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.66"/></proof>
   <proof prover="2" memlimit="1000"><result status="valid" time="1.24"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter get_int_safety" expl="Function get_int, safety">
 <transf name="split_goal_wp">
  <goal name="WP_parameter get_int_safety.1" expl="1. Reinterpret cast">
  <proof prover="1" timelimit="41" memlimit="1000"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="WP_parameter get_int_safety.2" expl="2. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" timelimit="41" memlimit="1000"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter get_int_safety.3" expl="3. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="1" timelimit="41" memlimit="1000"><result status="valid" time="0.49"/></proof>
  </goal>
  <goal name="WP_parameter get_int_safety.4" expl="4. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" timelimit="41" memlimit="1000"><result status="valid" time="0.29"/></proof>
  </goal>
  <goal name="WP_parameter get_int_safety.5" expl="5. Reinterpret cast">
  <proof prover="1" timelimit="41" memlimit="1000"><result status="valid" time="0.38"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter get_int2_ensures_default" expl="Function get_int2, default behavior">
 <proof prover="1" memlimit="1000"><result status="valid" time="0.07"/></proof>
 </goal>
 <goal name="WP_parameter get_int2_safety" expl="Function get_int2, safety">
 <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
 </goal>
 <goal name="WP_parameter get_int3_ensures_default" expl="Function get_int3, default behavior">
 <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
 </goal>
 <goal name="WP_parameter get_int3_safety" expl="Function get_int3, safety">
 <transf name="split_goal_wp">
  <goal name="WP_parameter get_int3_safety.1" expl="1. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter get_ulong_ensures_default" expl="Function get_ulong, default behavior">
 <transf name="split_goal_wp">
  <goal name="WP_parameter get_ulong_ensures_default.1" expl="1. Postcondition">
  <transf name="split_goal_wp">
   <goal name="WP_parameter get_ulong_ensures_default.1.1" expl="1. Allocates clause">
   <transf name="inline_goal">
    <goal name="WP_parameter get_ulong_ensures_default.1.1.1" expl="1. Allocates clause">
    <transf name="inline_goal">
     <goal name="WP_parameter get_ulong_ensures_default.1.1.1.1" expl="1. Allocates clause">
     <proof prover="2" timelimit="30" memlimit="1000"><result status="valid" time="14.02"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter get_ulong_ensures_default.1.2" expl="2. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="WP_parameter get_ulong_ensures_default.1.3" expl="3. Assigns clause">
   <transf name="inline_goal">
    <goal name="WP_parameter get_ulong_ensures_default.1.3.1" expl="1. Assigns clause">
    <proof prover="1" memlimit="1000"><result status="valid" time="0.80"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter get_ulong_ensures_default.1.4" expl="4. Assigns clause">
   <transf name="inline_goal">
    <goal name="WP_parameter get_ulong_ensures_default.1.4.1" expl="1. Assigns clause">
    <proof prover="1" memlimit="1000"><result status="valid" time="0.42"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter get_ulong_ensures_default.1.5" expl="5. Ensures clause">
   <transf name="inline_goal">
    <goal name="WP_parameter get_ulong_ensures_default.1.5.1" expl="1. Ensures clause">
    <proof prover="1" timelimit="30" memlimit="1000"><result status="valid" time="7.13"/></proof>
    <proof prover="2" timelimit="30" memlimit="1000"><result status="valid" time="7.73"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter get_ulong_safety" expl="Function get_ulong, safety">
 <transf name="split_goal_wp">
  <goal name="WP_parameter get_ulong_safety.1" expl="1. Reinterpret cast">
  <proof prover="1" timelimit="30" memlimit="1000"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="WP_parameter get_ulong_safety.2" expl="2. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" timelimit="30" memlimit="1000"><result status="valid" time="0.33"/></proof>
  </goal>
  <goal name="WP_parameter get_ulong_safety.3" expl="3. Pointer dereference (Validity)">
  <proof prover="1" timelimit="30" memlimit="1000"><result status="valid" time="1.68"/></proof>
  </goal>
  <goal name="WP_parameter get_ulong_safety.4" expl="4. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" timelimit="30" memlimit="1000"><result status="valid" time="0.32"/></proof>
  </goal>
  <goal name="WP_parameter get_ulong_safety.5" expl="5. Reinterpret cast">
  <proof prover="1" timelimit="30" memlimit="1000"><result status="valid" time="0.82"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter set_char_ensures_default" expl="Function set_char, default behavior">
 <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.14"/></proof>
 </goal>
 <goal name="WP_parameter set_char_safety" expl="Function set_char, safety">
 <proof prover="1" timelimit="26" memlimit="1000"><result status="valid" time="0.10"/></proof>
 </goal>
 <goal name="WP_parameter set_int_ensures_default" expl="Function set_int, default behavior">
 <transf name="split_goal_wp">
  <goal name="WP_parameter set_int_ensures_default.1" expl="1. Assertion in line 175">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="WP_parameter set_int_ensures_default.2" expl="2. Postcondition">
  <transf name="split_goal_wp">
   <goal name="WP_parameter set_int_ensures_default.2.1" expl="1. Allocates clause">
   <transf name="inline_goal">
    <goal name="WP_parameter set_int_ensures_default.2.1.1" expl="1. Allocates clause">
    <transf name="inline_goal">
     <goal name="WP_parameter set_int_ensures_default.2.1.1.1" expl="1. Allocates clause">
     <proof prover="2" timelimit="15" memlimit="1000"><result status="valid" time="16.73"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter set_int_ensures_default.2.2" expl="2. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.21"/></proof>
   <proof prover="2" memlimit="1000"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="WP_parameter set_int_ensures_default.2.3" expl="3. Assigns clause">
   <transf name="inline_all">
    <goal name="WP_parameter set_int_ensures_default.2.3.1" expl="1. Assigns clause">
    <proof prover="1" timelimit="88" memlimit="4000"><result status="valid" time="1.08"/></proof>
    <proof prover="2" timelimit="88" memlimit="4000"><result status="valid" time="1.18"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter set_int_ensures_default.2.4" expl="4. Assigns clause">
   <transf name="inline_goal">
    <goal name="WP_parameter set_int_ensures_default.2.4.1" expl="1. Assigns clause">
    <transf name="inline_goal">
     <goal name="WP_parameter set_int_ensures_default.2.4.1.1" expl="1. Assigns clause">
     <proof prover="1" timelimit="26" memlimit="1000"><result status="valid" time="0.58"/></proof>
     <proof prover="2" timelimit="26" memlimit="1000"><result status="valid" time="0.52"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter set_int_ensures_default.2.5" expl="5. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.87"/></proof>
   <proof prover="2" memlimit="1000"><result status="valid" time="1.19"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter set_int_safety" expl="Function set_int, safety">
 <transf name="split_goal_wp">
  <goal name="WP_parameter set_int_safety.1" expl="1. Reinterpret cast">
  <proof prover="1" timelimit="26" memlimit="1000"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="WP_parameter set_int_safety.2" expl="2. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" timelimit="26" memlimit="1000"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter set_int_safety.3" expl="3. Pointer dereference (Assignment)">
  <proof prover="1" timelimit="26" memlimit="1000"><result status="valid" time="0.63"/></proof>
  </goal>
  <goal name="WP_parameter set_int_safety.4" expl="4. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" timelimit="26" memlimit="1000"><result status="valid" time="0.40"/></proof>
  </goal>
  <goal name="WP_parameter set_int_safety.5" expl="5. Reinterpret cast">
  <proof prover="1" timelimit="26" memlimit="1000"><result status="valid" time="0.43"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter set_int2_ensures_default" expl="Function set_int2, default behavior">
 <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.27"/></proof>
 </goal>
 <goal name="WP_parameter set_int2_safety" expl="Function set_int2, safety">
 <transf name="split_goal_wp">
  <goal name="WP_parameter set_int2_safety.1" expl="1. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" timelimit="26" memlimit="1000"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="WP_parameter set_int2_safety.2" expl="2. Pointer dereference (Assignment with offset)">
  <proof prover="1" timelimit="26" memlimit="1000"><result status="valid" time="0.24"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter set_int3_ensures_default" expl="Function set_int3, default behavior">
 <proof prover="1" memlimit="1000"><result status="valid" time="0.27"/></proof>
 <transf name="split_goal_wp">
  <goal name="WP_parameter set_int3_ensures_default.1" expl="1. Postcondition">
  <transf name="split_goal_wp">
   <goal name="WP_parameter set_int3_ensures_default.1.1" expl="1. Assigns clause">
   <proof prover="1" timelimit="26" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter set_int3_ensures_default.1.2" expl="2. Ensures clause">
   <proof prover="1" timelimit="26" memlimit="1000"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter set_int3_safety" expl="Function set_int3, safety">
 <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
 <transf name="split_goal_wp">
  <goal name="WP_parameter set_int3_safety.1" expl="1. Pointer dereference (Assignment with offset)">
  <proof prover="1" timelimit="26" memlimit="1000"><result status="valid" time="0.11"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter store_in_buf_ensures_default" expl="Function store_in_buf, default behavior">
 <transf name="split_goal_wp">
  <goal name="WP_parameter store_in_buf_ensures_default.1" expl="1. Postcondition">
  <transf name="split_goal_wp">
   <goal name="WP_parameter store_in_buf_ensures_default.1.1" expl="1. Allocates clause">
   <proof prover="1" timelimit="105"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter store_in_buf_ensures_default.1.2" expl="2. Allocates clause">
   <proof prover="1" timelimit="105"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="WP_parameter store_in_buf_ensures_default.1.3" expl="3. Assigns clause">
   <proof prover="1" timelimit="105"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter store_in_buf_ensures_default.1.4" expl="4. Assigns clause">
   <proof prover="1" timelimit="105"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter store_in_buf_ensures_default.1.5" expl="5. Assigns clause">
   <proof prover="1" timelimit="105"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter store_in_buf_ensures_default.1.6" expl="6. Ensures clause">
   <proof prover="1" timelimit="105"><result status="valid" time="0.74"/></proof>
   </goal>
   <goal name="WP_parameter store_in_buf_ensures_default.1.7" expl="7. Ensures clause">
   <proof prover="1" timelimit="105"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter store_in_buf_ensures_default.1.8" expl="8. Ensures clause">
   <proof prover="1" timelimit="105"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter store_in_buf_ensures_default.1.9" expl="9. Ensures clause">
   <proof prover="1" timelimit="105"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="WP_parameter store_in_buf_ensures_default.1.10" expl="10. Ensures clause">
   <proof prover="1" timelimit="105"><result status="valid" time="0.89"/></proof>
   </goal>
   <goal name="WP_parameter store_in_buf_ensures_default.1.11" expl="11. Ensures clause">
   <proof prover="1" timelimit="105"><result status="valid" time="0.66"/></proof>
   </goal>
   <goal name="WP_parameter store_in_buf_ensures_default.1.12" expl="12. Ensures clause">
   <proof prover="1" timelimit="105"><result status="valid" time="0.93"/></proof>
   </goal>
   <goal name="WP_parameter store_in_buf_ensures_default.1.13" expl="13. Ensures clause">
   <proof prover="1" timelimit="105"><result status="valid" time="0.92"/></proof>
   </goal>
   <goal name="WP_parameter store_in_buf_ensures_default.1.14" expl="14. Ensures clause">
   <proof prover="1" timelimit="105"><result status="valid" time="0.94"/></proof>
   </goal>
   <goal name="WP_parameter store_in_buf_ensures_default.1.15" expl="15. Ensures clause">
   <proof prover="1" timelimit="105"><result status="valid" time="0.76"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter store_in_buf_safety" expl="Function store_in_buf, safety">
 <proof prover="1" timelimit="67" memlimit="1000"><result status="valid" time="0.06"/></proof>
 </goal>
 <goal name="WP_parameter test_ensures_default" expl="Function test, default behavior" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="WP_parameter test_ensures_default.1" expl="1. Assertion in line 242">
  <proof prover="1" memlimit="1000"><result status="valid" time="1.52"/></proof>
  </goal>
  <goal name="WP_parameter test_ensures_default.2" expl="2. Assertion in line 243">
  <proof prover="1" timelimit="40" memlimit="1000"><result status="valid" time="43.94"/></proof>
  </goal>
  <goal name="WP_parameter test_ensures_default.3" expl="3. Assertion in line 244">
  <proof prover="1" timelimit="47" memlimit="1000"><result status="valid" time="13.10"/></proof>
  <proof prover="2" timelimit="47" memlimit="1000"><result status="valid" time="13.20"/></proof>
  </goal>
  <goal name="WP_parameter test_ensures_default.4" expl="4. Assertion in line 246">
  <transf name="inline_goal">
   <goal name="WP_parameter test_ensures_default.4.1" expl="1. Assertion in line 246">
   <proof prover="1" timelimit="46" memlimit="1000"><result status="valid" time="3.71"/></proof>
   <proof prover="2" timelimit="46" memlimit="1000"><result status="valid" time="4.19"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter test_ensures_default.5" expl="5. Postcondition">
  <transf name="split_goal_wp">
   <goal name="WP_parameter test_ensures_default.5.1" expl="1. Allocates clause">
   <transf name="inline_goal">
    <goal name="WP_parameter test_ensures_default.5.1.1" expl="1. Allocates clause">
    <transf name="inline_goal">
     <goal name="WP_parameter test_ensures_default.5.1.1.1" expl="1. Allocates clause">
     <transf name="inline_goal">
      <goal name="WP_parameter test_ensures_default.5.1.1.1.1" expl="1. Allocates clause">
      <proof prover="1" memlimit="1000"><result status="valid" time="1.97"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter test_ensures_default.5.2" expl="2. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="1.29"/></proof>
   </goal>
   <goal name="WP_parameter test_ensures_default.5.3" expl="3. Assigns clause">
   <transf name="inline_goal">
    <goal name="WP_parameter test_ensures_default.5.3.1" expl="1. Assigns clause">
    <proof prover="1" memlimit="1000"><result status="valid" time="5.36"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter test_ensures_default.5.4" expl="4. Assigns clause">
   <transf name="inline_goal">
    <goal name="WP_parameter test_ensures_default.5.4.1" expl="1. Assigns clause">
    <proof prover="1" memlimit="1000"><result status="valid" time="0.62"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter test_ensures_default.5.5" expl="5. Assigns clause">
   <transf name="inline_goal">
    <goal name="WP_parameter test_ensures_default.5.5.1" expl="1. Assigns clause">
    <proof prover="2" memlimit="1000"><result status="valid" time="5.63"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter test_safety" expl="Function test, safety">
 <transf name="split_goal_wp">
  <goal name="WP_parameter test_safety.1" expl="1. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter test_safety.2" expl="2. Precondition for set_int (Requires clause. Internal)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="WP_parameter test_safety.3" expl="3. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.82"/></proof>
  </goal>
  <goal name="WP_parameter test_safety.4" expl="4. Precondition for get_char (Requires clause. Internal)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.99"/></proof>
  </goal>
  <goal name="WP_parameter test_safety.5" expl="5. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter test_safety.6" expl="6. Precondition for get_int (Requires clause. Internal)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.98"/></proof>
  </goal>
  <goal name="WP_parameter test_safety.7" expl="7. Pointer cast (Prefix or reinterpret)">
  <proof prover="1" memlimit="1000"><result status="valid" time="1.13"/></proof>
  </goal>
  <goal name="WP_parameter test_safety.8" expl="8. Precondition for get_ulong (Requires clause. Internal)">
  <proof prover="1" memlimit="1000"><result status="valid" time="1.30"/></proof>
  </goal>
  <goal name="WP_parameter test_safety.9" expl="9. Deallocation">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.49"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter test3_ensures_default" expl="Function test3, default behavior">
 <transf name="split_goal_wp">
  <goal name="WP_parameter test3_ensures_default.1" expl="1. Postcondition">
  <transf name="split_goal_wp">
   <goal name="WP_parameter test3_ensures_default.1.1" expl="1. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter test3_ensures_default.1.2" expl="2. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="WP_parameter test3_ensures_default.1.3" expl="3. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter test3_safety" expl="Function test3, safety">
 <proof prover="0" timelimit="5"><result status="valid" time="0.07"/></proof>
 </goal>
</theory>
</file>
</why3session>
