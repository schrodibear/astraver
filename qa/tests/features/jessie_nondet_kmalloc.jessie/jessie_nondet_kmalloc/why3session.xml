<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC3" version="2.4.1" timelimit="60" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.4" timelimit="24" memlimit="4000"/>
<prover id="2" name="CVC4 FULL" version="1.4" timelimit="60" memlimit="1000"/>
<file name="../jessie_nondet_kmalloc.mlw" expanded="true">
<theory name="Jessie_model" sum="d41d8cd98f00b204e9800998ecf8427e" expanded="true">
</theory>
<theory name="Jessie_program" sum="5b2991264e9958a30f733c0d970a1814" expanded="true">
 <goal name="WP_parameter main_ensures_default" expl="Function main, default behavior">
 <transf name="split_goal_wp">
  <goal name="WP_parameter main_ensures_default.1" expl="1. Assertion in line 108">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="WP_parameter main_ensures_default.2" expl="2. Assertion in line 115">
  <proof prover="1" memlimit="1000"><result status="valid" time="4.63"/></proof>
  <proof prover="2"><result status="valid" time="0.72"/></proof>
  </goal>
  <goal name="WP_parameter main_ensures_default.3" expl="3. Assertion in line 117">
  <transf name="inline_goal">
   <goal name="WP_parameter main_ensures_default.3.1" expl="1. Assertion in line 117">
   <proof prover="1" memlimit="1000"><result status="valid" time="1.78"/></proof>
   <proof prover="2"><result status="valid" time="1.61"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter main_ensures_default.4" expl="4. Postcondition (Ensures clause)">
  <transf name="inline_goal">
   <goal name="WP_parameter main_ensures_default.4.1" expl="1. Postcondition (Ensures clause)">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.61"/></proof>
   <proof prover="2"><result status="valid" time="0.61"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter main_ensures_default.5" expl="5. Postcondition (Ensures clause)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
  <proof prover="2"><result status="valid" time="0.27"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter main_safety" expl="Function main, safety">
 <proof prover="1" timelimit="54"><result status="valid" time="0.29"/></proof>
 <transf name="split_goal_wp">
  <goal name="WP_parameter main_safety.1" expl="1. Precondition for initialize_fstr (Requires clause. Internal)">
  <proof prover="1" timelimit="60" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2"><result status="valid" time="0.16"/></proof>
  <transf name="split_goal_wp">
   <goal name="WP_parameter main_safety.1.1" expl="1. Requires clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="WP_parameter main_safety.1.2" expl="2. Global invariant fstr_init">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="WP_parameter main_safety.1.3" expl="3. Global invariant typeof_fstr">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="WP_parameter main_safety.1.4" expl="4. Global invariant valid_fstr">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="WP_parameter main_safety.1.5" expl="5. Global invariant contents_of___string_String_constant">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="WP_parameter main_safety.1.6" expl="6. Global invariant proxy_string_constant_literal_for___string_String_constant">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="WP_parameter main_safety.1.7" expl="7. Global invariant contents_of___string_AAA">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="WP_parameter main_safety.1.8" expl="8. Global invariant proxy_aaa_literal_for___string_AAA">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="WP_parameter main_safety.1.9" expl="9. Global invariant contents_of___string_AAAU">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="WP_parameter main_safety.1.10" expl="10. Global invariant proxy_aaau_literal_for___string_AAAU">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="WP_parameter main_safety.1.11" expl="11. Global invariant contents_of_fstr_literal">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="WP_parameter main_safety.1.12" expl="12. Global invariant typeof___string_String_constant">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="WP_parameter main_safety.1.13" expl="13. Global invariant valid___string_String_constant">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="WP_parameter main_safety.1.14" expl="14. Global invariant typeof___string_AAA">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="WP_parameter main_safety.1.15" expl="15. Global invariant valid___string_AAA">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="WP_parameter main_safety.1.16" expl="16. Global invariant typeof___string_AAAU">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="WP_parameter main_safety.1.17" expl="17. Global invariant valid___string_AAAU">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter main_safety.2" expl="2. Precondition for f (Requires clause. Internal)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="WP_parameter main_safety.3" expl="3. Pointer inequality">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="WP_parameter main_safety.4" expl="4. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.21"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.30"/></proof>
  <proof prover="2"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="WP_parameter main_safety.5" expl="5. Precondition for memcmp_char_0 (External. Requires clause)">
  <proof prover="0"><result status="valid" time="1.06"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.32"/></proof>
  <proof prover="2"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="WP_parameter main_safety.6" expl="6. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.22"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
  <proof prover="2"><result status="valid" time="0.27"/></proof>
  </goal>
  <goal name="WP_parameter main_safety.7" expl="7. Precondition for memcmp_char_0 (External. Requires clause)">
  <proof prover="0"><result status="valid" time="1.02"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.31"/></proof>
  <proof prover="2"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="WP_parameter main_safety.8" expl="8. Arithmetic overflow (Bounded int32)">
  <proof prover="0"><result status="valid" time="0.76"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.30"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter main_safety.9" expl="9. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.22"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter main_safety.10" expl="10. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.21"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.27"/></proof>
  <proof prover="2"><result status="valid" time="0.15"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter initialize_fstr_ensures_default" expl="Function initialize_fstr, default behavior" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="WP_parameter initialize_fstr_ensures_default.1" expl="1. Postcondition" expanded="true">
  <transf name="split_goal_wp" expanded="true">
   <goal name="WP_parameter initialize_fstr_ensures_default.1.1" expl="1. Assigns clause">
   <proof prover="0"><result status="valid" time="0.33"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.45"/></proof>
   <proof prover="2"><result status="valid" time="0.46"/></proof>
   </goal>
   <goal name="WP_parameter initialize_fstr_ensures_default.1.2" expl="2. Ensures clause">
   <proof prover="0"><result status="valid" time="0.12"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.19"/></proof>
   <proof prover="2"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="WP_parameter initialize_fstr_ensures_default.1.3" expl="3. Ensures clause">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.55"/></proof>
   <proof prover="2"><result status="valid" time="0.57"/></proof>
   </goal>
   <goal name="WP_parameter initialize_fstr_ensures_default.1.4" expl="4. Ensures clause">
   <proof prover="0"><result status="valid" time="0.13"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.21"/></proof>
   <proof prover="2"><result status="valid" time="0.18"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter initialize_fstr_safety" expl="Function initialize_fstr, safety" expanded="true">
 <proof prover="0"><result status="valid" time="0.14"/></proof>
 <proof prover="1" memlimit="1000"><result status="valid" time="0.21"/></proof>
 <proof prover="2"><result status="valid" time="0.22"/></proof>
 </goal>
 <goal name="WP_parameter f_ensures_default" expl="Function f, default behavior">
 <transf name="split_goal_wp">
  <goal name="WP_parameter f_ensures_default.1" expl="1. Assertion in line 72">
  <transf name="inline_goal">
   <goal name="WP_parameter f_ensures_default.1.1" expl="1. Assertion in line 72">
   <transf name="inline_goal">
    <goal name="WP_parameter f_ensures_default.1.1.1" expl="1. Assertion in line 72">
    <proof prover="1" memlimit="1000"><result status="valid" time="22.86"/></proof>
    <proof prover="2" timelimit="24"><result status="valid" time="13.86"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.2" expl="2. Assertion in line 81">
  <proof prover="0"><result status="valid" time="0.48"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.71"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.3" expl="3. Assertion in line 82">
  <transf name="inline_goal">
   <goal name="WP_parameter f_ensures_default.3.1" expl="1. Assertion in line 82">
   <transf name="inline_goal">
    <goal name="WP_parameter f_ensures_default.3.1.1" expl="1. Assertion in line 82">
    <proof prover="1" memlimit="1000"><result status="valid" time="1.45"/></proof>
    <proof prover="2" timelimit="24"><result status="valid" time="1.76"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.4" expl="4. Assertion in line 84">
  <transf name="inline_goal">
   <goal name="WP_parameter f_ensures_default.4.1" expl="1. Assertion in line 84">
   <proof prover="1" memlimit="1000"><result status="valid" time="6.48"/></proof>
   <proof prover="2"><result status="valid" time="7.17"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.5" expl="5. Assertion in line 85">
  <transf name="inline_goal">
   <goal name="WP_parameter f_ensures_default.5.1" expl="1. Assertion in line 85">
   <transf name="inline_goal">
    <goal name="WP_parameter f_ensures_default.5.1.1" expl="1. Assertion in line 85">
    <proof prover="1" memlimit="1000"><result status="valid" time="1.24"/></proof>
    <proof prover="2"><result status="valid" time="1.36"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.6" expl="6. Postcondition">
  <transf name="split_goal_wp">
   <goal name="WP_parameter f_ensures_default.6.1" expl="1. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="4.40"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.6.2" expl="2. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="4.83"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.6.3" expl="3. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="4.87"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.6.4" expl="4. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.6.5" expl="5. Assigns clause">
   <transf name="inline_goal">
    <goal name="WP_parameter f_ensures_default.6.5.1" expl="1. Assigns clause">
    <transf name="inline_goal">
     <goal name="WP_parameter f_ensures_default.6.5.1.1" expl="1. Assigns clause">
     <proof prover="1" memlimit="1000"><result status="valid" time="24.56"/></proof>
     <proof prover="2" timelimit="24"><result status="valid" time="6.25"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter f_ensures_default.6.6" expl="6. Assigns clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="4.88"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.7" expl="7. Postcondition">
  <transf name="split_goal_wp">
   <goal name="WP_parameter f_ensures_default.7.1" expl="1. Allocates clause">
   <proof prover="0"><result status="valid" time="0.61"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.77"/></proof>
   <proof prover="2"><result status="valid" time="0.76"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.7.2" expl="2. Allocates clause">
   <proof prover="0"><result status="valid" time="0.71"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.78"/></proof>
   <proof prover="2"><result status="valid" time="0.73"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.7.3" expl="3. Allocates clause">
   <proof prover="0"><result status="valid" time="0.66"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.77"/></proof>
   <proof prover="2"><result status="valid" time="0.67"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.7.4" expl="4. Allocates clause">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.30"/></proof>
   <proof prover="2"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.7.5" expl="5. Assigns clause">
   <proof prover="0"><result status="valid" time="0.64"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.76"/></proof>
   <proof prover="2"><result status="valid" time="0.78"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.7.6" expl="6. Assigns clause">
   <proof prover="0"><result status="valid" time="0.74"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.75"/></proof>
   <proof prover="2"><result status="valid" time="0.65"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.8" expl="8. Assertion in line 81">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.9" expl="9. Assertion in line 82">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.10" expl="10. Assertion in line 84">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.11" expl="11. Assertion in line 85">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.12" expl="12. Postcondition">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.27"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.13" expl="13. Postcondition">
  <transf name="split_goal_wp">
   <goal name="WP_parameter f_ensures_default.13.1" expl="1. Allocates clause">
   <transf name="inline_goal">
    <goal name="WP_parameter f_ensures_default.13.1.1" expl="1. Allocates clause">
    <proof prover="1" memlimit="1000"><result status="valid" time="0.68"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter f_ensures_default.13.2" expl="2. Allocates clause">
   <transf name="inline_goal">
    <goal name="WP_parameter f_ensures_default.13.2.1" expl="1. Allocates clause">
    <transf name="inline_goal">
     <goal name="WP_parameter f_ensures_default.13.2.1.1" expl="1. Allocates clause">
     <transf name="inline_goal">
      <goal name="WP_parameter f_ensures_default.13.2.1.1.1" expl="1. Allocates clause">
      <proof prover="1" memlimit="1000"><result status="valid" time="0.66"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter f_ensures_default.13.3" expl="3. Allocates clause">
   <proof prover="0" timelimit="23"><result status="valid" time="0.18"/></proof>
   <proof prover="1" timelimit="23" memlimit="1000"><result status="valid" time="0.25"/></proof>
   <proof prover="2"><result status="valid" time="0.28"/></proof>
   <transf name="inline_goal">
    <goal name="WP_parameter f_ensures_default.13.3.1" expl="1. Allocates clause">
    <proof prover="0" timelimit="23"><result status="valid" time="0.54"/></proof>
    <proof prover="1" memlimit="1000"><result status="valid" time="0.69"/></proof>
    <proof prover="2" timelimit="23"><result status="valid" time="0.94"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter f_ensures_default.13.4" expl="4. Allocates clause">
   <proof prover="0" timelimit="23"><result status="valid" time="0.14"/></proof>
   <proof prover="1" timelimit="23" memlimit="1000"><result status="valid" time="0.27"/></proof>
   <proof prover="2"><result status="valid" time="0.27"/></proof>
   <transf name="inline_goal">
    <goal name="WP_parameter f_ensures_default.13.4.1" expl="1. Allocates clause">
    <proof prover="0" timelimit="23"><result status="valid" time="0.49"/></proof>
    <proof prover="1" memlimit="1000"><result status="valid" time="0.86"/></proof>
    <proof prover="2" timelimit="23"><result status="valid" time="0.80"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter f_ensures_default.13.5" expl="5. Assigns clause">
   <proof prover="2"><result status="valid" time="3.55"/></proof>
   <transf name="inline_goal">
    <goal name="WP_parameter f_ensures_default.13.5.1" expl="1. Assigns clause">
    <proof prover="2" timelimit="23"><result status="valid" time="1.15"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter f_ensures_default.13.6" expl="6. Assigns clause">
   <transf name="inline_goal">
    <goal name="WP_parameter f_ensures_default.13.6.1" expl="1. Assigns clause">
    <proof prover="1" timelimit="23" memlimit="1000"><result status="valid" time="0.78"/></proof>
    <proof prover="2"><result status="valid" time="0.66"/></proof>
    <transf name="inline_goal">
     <goal name="WP_parameter f_ensures_default.13.6.1.1" expl="1. Assigns clause">
     <proof prover="1" memlimit="1000"><result status="valid" time="0.84"/></proof>
     <proof prover="2" timelimit="23"><result status="valid" time="0.66"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.14" expl="14. Postcondition">
  <proof prover="0"><result status="valid" time="0.41"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="2.13"/></proof>
  <proof prover="2"><result status="valid" time="2.17"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.15" expl="15. Assertion in line 72">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.16" expl="16. Assertion in line 81">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.17" expl="17. Assertion in line 82">
  <proof prover="0"><result status="valid" time="0.18"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.18" expl="18. Assertion in line 84">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.19" expl="19. Assertion in line 85">
  <transf name="inline_goal">
   <goal name="WP_parameter f_ensures_default.19.1" expl="1. Assertion in line 85">
   <transf name="inline_goal">
    <goal name="WP_parameter f_ensures_default.19.1.1" expl="1. Assertion in line 85">
    <proof prover="1" memlimit="1000"><result status="valid" time="0.34"/></proof>
    <proof prover="2" timelimit="58"><result status="valid" time="0.32"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.20" expl="20. Postcondition">
  <transf name="split_goal_wp">
   <goal name="WP_parameter f_ensures_default.20.1" expl="1. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.20.2" expl="2. Allocates clause">
   <transf name="inline_goal">
    <goal name="WP_parameter f_ensures_default.20.2.1" expl="1. Allocates clause">
    <transf name="inline_goal">
     <goal name="WP_parameter f_ensures_default.20.2.1.1" expl="1. Allocates clause">
     <proof prover="1" memlimit="1000"><result status="valid" time="0.28"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter f_ensures_default.20.3" expl="3. Allocates clause">
   <proof prover="0"><result status="valid" time="0.12"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
   <proof prover="2"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.20.4" expl="4. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
   <proof prover="2"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.20.5" expl="5. Assigns clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.21"/></proof>
   <proof prover="2"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.20.6" expl="6. Assigns clause">
   <transf name="inline_goal">
    <goal name="WP_parameter f_ensures_default.20.6.1" expl="1. Assigns clause">
    <transf name="inline_goal">
     <goal name="WP_parameter f_ensures_default.20.6.1.1" expl="1. Assigns clause">
     <proof prover="1" memlimit="1000"><result status="valid" time="0.27"/></proof>
     <proof prover="2"><result status="valid" time="0.29"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.21" expl="21. Postcondition">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.26"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.22" expl="22. Assertion in line 81">
  <transf name="inline_goal">
   <goal name="WP_parameter f_ensures_default.22.1" expl="1. Assertion in line 81">
   <transf name="split_goal_wp">
    <goal name="WP_parameter f_ensures_default.22.1.1" expl="1. Assertion in line 81">
    <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
    <proof prover="2" timelimit="58"><result status="valid" time="0.28"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.23" expl="23. Assertion in line 82">
  <transf name="inline_goal">
   <goal name="WP_parameter f_ensures_default.23.1" expl="1. Assertion in line 82">
   <proof prover="0"><result status="valid" time="0.50"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.28"/></proof>
   <proof prover="2"><result status="valid" time="0.18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.24" expl="24. Assertion in line 84">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.25" expl="25. Assertion in line 85">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.26"/></proof>
  <proof prover="2"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.26" expl="26. Postcondition">
  <transf name="split_goal_wp">
   <goal name="WP_parameter f_ensures_default.26.1" expl="1. Allocates clause">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.26.2" expl="2. Allocates clause">
   <proof prover="0"><result status="valid" time="0.19"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.26.3" expl="3. Allocates clause">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
   <proof prover="2"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.26.4" expl="4. Allocates clause">
   <proof prover="0"><result status="valid" time="0.17"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
   <proof prover="2"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.26.5" expl="5. Assigns clause">
   <proof prover="0"><result status="valid" time="0.17"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.27"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.26.6" expl="6. Assigns clause">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.27" expl="27. Postcondition">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.28" expl="28. Postcondition">
  <transf name="split_goal_wp">
   <goal name="WP_parameter f_ensures_default.28.1" expl="1. Allocates clause">
   <transf name="inline_goal">
    <goal name="WP_parameter f_ensures_default.28.1.1" expl="1. Allocates clause">
    <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter f_ensures_default.28.2" expl="2. Allocates clause">
   <transf name="inline_goal">
    <goal name="WP_parameter f_ensures_default.28.2.1" expl="1. Allocates clause">
    <proof prover="0" timelimit="5"><result status="valid" time="0.96"/></proof>
    <proof prover="1" memlimit="1000"><result status="valid" time="0.65"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter f_ensures_default.28.3" expl="3. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.28.4" expl="4. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.28.5" expl="5. Assigns clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.28.6" expl="6. Assigns clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="1.30"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.29" expl="29. Postcondition">
  <proof prover="0"><result status="valid" time="0.40"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.59"/></proof>
  <proof prover="2"><result status="valid" time="0.61"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.30" expl="30. Assertion in line 72">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.22"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.31" expl="31. Assertion in line 81">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.32" expl="32. Assertion in line 82">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.33" expl="33. Assertion in line 84">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.34" expl="34. Assertion in line 85">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.35" expl="35. Postcondition">
  <transf name="split_goal_wp">
   <goal name="WP_parameter f_ensures_default.35.1" expl="1. Allocates clause">
   <proof prover="0"><result status="valid" time="0.12"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.20"/></proof>
   <proof prover="2"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.35.2" expl="2. Allocates clause">
   <proof prover="0"><result status="valid" time="0.12"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.20"/></proof>
   <proof prover="2"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.35.3" expl="3. Allocates clause">
   <proof prover="0"><result status="valid" time="0.12"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.19"/></proof>
   <proof prover="2"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.35.4" expl="4. Allocates clause">
   <proof prover="0"><result status="valid" time="0.12"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.19"/></proof>
   <proof prover="2"><result status="valid" time="0.19"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.35.5" expl="5. Assigns clause">
   <proof prover="0"><result status="valid" time="0.14"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
   <proof prover="2"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.35.6" expl="6. Assigns clause">
   <proof prover="0"><result status="valid" time="0.13"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
   <proof prover="2"><result status="valid" time="0.21"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.36" expl="36. Postcondition">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.37" expl="37. Assertion in line 81">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.22"/></proof>
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.38" expl="38. Assertion in line 82">
  <transf name="inline_goal">
   <goal name="WP_parameter f_ensures_default.38.1" expl="1. Assertion in line 82">
   <proof prover="0"><result status="valid" time="0.44"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.27"/></proof>
   <proof prover="2"><result status="valid" time="0.27"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.39" expl="39. Assertion in line 84">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.40" expl="40. Assertion in line 85">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.41" expl="41. Postcondition">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.42" expl="42. Postcondition">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.43" expl="43. Postcondition">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.22"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.44" expl="44. Assertion in line 72">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
  <proof prover="2"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.45" expl="45. Assertion in line 81">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.46" expl="46. Assertion in line 82">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.47" expl="47. Assertion in line 84">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
  <proof prover="2"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.48" expl="48. Assertion in line 85">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.49" expl="49. Postcondition">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.50" expl="50. Postcondition">
  <transf name="split_goal_wp">
   <goal name="WP_parameter f_ensures_default.50.1" expl="1. Allocates clause">
   <proof prover="0"><result status="valid" time="0.16"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
   <proof prover="2"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.50.2" expl="2. Allocates clause">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
   <proof prover="2"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.50.3" expl="3. Allocates clause">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
   <proof prover="2"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.50.4" expl="4. Allocates clause">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
   <proof prover="2"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.50.5" expl="5. Assigns clause">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   <proof prover="2"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.50.6" expl="6. Assigns clause">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.51" expl="51. Assertion in line 81">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.52" expl="52. Assertion in line 82">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
  <proof prover="2"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.53" expl="53. Assertion in line 84">
  <transf name="split_goal_wp">
   <goal name="WP_parameter f_ensures_default.53.1" expl="1. Assertion in line 84">
   <transf name="inline_goal">
    <goal name="WP_parameter f_ensures_default.53.1.1" expl="1. Assertion in line 84">
    <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
    <proof prover="2" timelimit="58"><result status="valid" time="0.16"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.54" expl="54. Assertion in line 85">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
  <proof prover="2"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.55" expl="55. Postcondition">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  <transf name="split_goal_wp">
   <goal name="WP_parameter f_ensures_default.55.1" expl="1. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.55.2" expl="2. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.55.3" expl="3. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.19"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.55.4" expl="4. Allocates clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.55.5" expl="5. Assigns clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_default.55.6" expl="6. Assigns clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_default.56" expl="56. Postcondition">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.57" expl="57. Postcondition">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_default.58" expl="58. Postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.16"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter f_ensures_failure" expl="Function f, behavior failure">
 <transf name="split_goal_wp">
  <goal name="WP_parameter f_ensures_failure.1" expl="1. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.2" expl="2. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.3" expl="3. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.4" expl="4. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="2.11"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.5" expl="5. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="1.82"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.6" expl="6. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.7" expl="7. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.8" expl="8. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.9" expl="9. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.10" expl="10. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="9.03"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.11" expl="11. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.44"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.12" expl="12. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.13" expl="13. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.14" expl="14. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.15" expl="15. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.16" expl="16. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.17" expl="17. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.18" expl="18. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.19" expl="19. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.20" expl="20. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.21" expl="21. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_failure.22" expl="22. Postcondition (Ensures clause)">
  <proof prover="1" timelimit="65" memlimit="1000"><result status="valid" time="2.52"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter f_ensures_success" expl="Function f, behavior success" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="WP_parameter f_ensures_success.1" expl="1. Postcondition (Ensures clause)" expanded="true">
  <transf name="split_goal_wp" expanded="true">
   <goal name="WP_parameter f_ensures_success.1.1" expl="1. Ensures clause">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.32"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.2" expl="2. Ensures clause">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.11"/></proof>
   <proof prover="2"><result status="valid" time="0.32"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.3" expl="3. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="4.13"/></proof>
   <proof prover="2"><result status="valid" time="4.08"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.4" expl="4. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="4.24"/></proof>
   <proof prover="2"><result status="valid" time="4.29"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.5" expl="5. Ensures clause">
   <proof prover="0"><result status="valid" time="0.67"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.31"/></proof>
   <proof prover="2"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.6" expl="6. Ensures clause">
   <proof prover="0"><result status="valid" time="0.77"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.31"/></proof>
   <proof prover="2"><result status="valid" time="0.32"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.7" expl="7. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.31"/></proof>
   <proof prover="2"><result status="valid" time="0.33"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.8" expl="8. Ensures clause">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
   <proof prover="2"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.9" expl="9. Ensures clause">
   <proof prover="0"><result status="valid" time="0.76"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.88"/></proof>
   <proof prover="2"><result status="valid" time="0.80"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.10" expl="10. Global invariant fstr_init">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.22"/></proof>
   <proof prover="2"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.11" expl="11. Global invariant typeof_fstr">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.12" expl="12. Global invariant valid_fstr">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.13" expl="13. Global invariant contents_of___string_String_constant">
   <proof prover="0"><result status="valid" time="0.16"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.14" expl="14. Global invariant proxy_string_constant_literal_for___string_String_constant">
   <proof prover="0"><result status="valid" time="0.16"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
   <proof prover="2"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.15" expl="15. Global invariant contents_of___string_AAA">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.11"/></proof>
   <proof prover="2"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.16" expl="16. Global invariant proxy_aaa_literal_for___string_AAA">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
   <proof prover="2"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.17" expl="17. Global invariant contents_of___string_AAAU">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.22"/></proof>
   <proof prover="2"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.18" expl="18. Global invariant proxy_aaau_literal_for___string_AAAU">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.19" expl="19. Global invariant contents_of_fstr_literal">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.20" expl="20. Global invariant typeof___string_String_constant">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
   <proof prover="2"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.21" expl="21. Global invariant valid___string_String_constant">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.22"/></proof>
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.22" expl="22. Global invariant typeof___string_AAA">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.21"/></proof>
   <proof prover="2"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.23" expl="23. Global invariant valid___string_AAA">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.22"/></proof>
   <proof prover="2"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.24" expl="24. Global invariant typeof___string_AAAU">
   <proof prover="0"><result status="valid" time="0.16"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.1.25" expl="25. Global invariant valid___string_AAAU">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.21"/></proof>
   <proof prover="2"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_success.2" expl="2. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.3" expl="3. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.4" expl="4. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.5" expl="5. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.6" expl="6. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
  <proof prover="2"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.7" expl="7. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.8" expl="8. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.20"/></proof>
  <proof prover="2"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.9" expl="9. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.10" expl="10. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  <proof prover="1" timelimit="60" memlimit="1000"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  <transf name="split_goal_wp">
   <goal name="WP_parameter f_ensures_success.10.1" expl="1. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.2" expl="2. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.3" expl="3. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.4" expl="4. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.5" expl="5. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.6" expl="6. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.7" expl="7. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.8" expl="8. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.9" expl="9. Ensures clause">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.10" expl="10. Global invariant fstr_init">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.11" expl="11. Global invariant typeof_fstr">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.12" expl="12. Global invariant valid_fstr">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.13" expl="13. Global invariant contents_of___string_String_constant">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.14" expl="14. Global invariant proxy_string_constant_literal_for___string_String_constant">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.15" expl="15. Global invariant contents_of___string_AAA">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.16" expl="16. Global invariant proxy_aaa_literal_for___string_AAA">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.17" expl="17. Global invariant contents_of___string_AAAU">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.18" expl="18. Global invariant proxy_aaau_literal_for___string_AAAU">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.19" expl="19. Global invariant contents_of_fstr_literal">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.20" expl="20. Global invariant typeof___string_String_constant">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.21" expl="21. Global invariant valid___string_String_constant">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.22" expl="22. Global invariant typeof___string_AAA">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.23" expl="23. Global invariant valid___string_AAA">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.24" expl="24. Global invariant typeof___string_AAAU">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.10.25" expl="25. Global invariant valid___string_AAAU">
   <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_success.11" expl="11. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.12" expl="12. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.11"/></proof>
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.13" expl="13. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.14" expl="14. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.15" expl="15. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.16" expl="16. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.17" expl="17. Postcondition (Ensures clause)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.18" expl="18. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.18"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.19" expl="19. Postcondition (Ensures clause)">
  <transf name="split_goal_wp">
   <goal name="WP_parameter f_ensures_success.19.1" expl="1. Ensures clause">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
   <proof prover="2"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.2" expl="2. Ensures clause">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.3" expl="3. Ensures clause">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.26"/></proof>
   <proof prover="2"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.4" expl="4. Ensures clause">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
   <proof prover="2"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.5" expl="5. Ensures clause">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.6" expl="6. Ensures clause">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
   <proof prover="2"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.7" expl="7. Ensures clause">
   <proof prover="0"><result status="valid" time="0.17"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.8" expl="8. Ensures clause">
   <proof prover="0"><result status="valid" time="0.17"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
   <proof prover="2"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.9" expl="9. Ensures clause">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.10" expl="10. Global invariant fstr_init">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
   <proof prover="2"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.11" expl="11. Global invariant typeof_fstr">
   <proof prover="0"><result status="valid" time="0.17"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
   <proof prover="2"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.12" expl="12. Global invariant valid_fstr">
   <proof prover="0"><result status="valid" time="0.17"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
   <proof prover="2"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.13" expl="13. Global invariant contents_of___string_String_constant">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
   <proof prover="2"><result status="valid" time="0.19"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.14" expl="14. Global invariant proxy_string_constant_literal_for___string_String_constant">
   <proof prover="0"><result status="valid" time="0.17"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
   <proof prover="2"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.15" expl="15. Global invariant contents_of___string_AAA">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.16" expl="16. Global invariant proxy_aaa_literal_for___string_AAA">
   <proof prover="0"><result status="valid" time="0.17"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
   <proof prover="2"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.17" expl="17. Global invariant contents_of___string_AAAU">
   <proof prover="0"><result status="valid" time="0.17"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
   <proof prover="2"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.18" expl="18. Global invariant proxy_aaau_literal_for___string_AAAU">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
   <proof prover="2"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.19" expl="19. Global invariant contents_of_fstr_literal">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.20" expl="20. Global invariant typeof___string_String_constant">
   <proof prover="0"><result status="valid" time="0.17"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.21" expl="21. Global invariant valid___string_String_constant">
   <proof prover="0"><result status="valid" time="0.17"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.22" expl="22. Global invariant typeof___string_AAA">
   <proof prover="0"><result status="valid" time="0.17"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.23" expl="23. Global invariant valid___string_AAA">
   <proof prover="0"><result status="valid" time="0.17"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
   <proof prover="2"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.24" expl="24. Global invariant typeof___string_AAAU">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
   <goal name="WP_parameter f_ensures_success.19.25" expl="25. Global invariant valid___string_AAAU">
   <proof prover="0"><result status="valid" time="0.17"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
   <proof prover="2"><result status="valid" time="0.24"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_ensures_success.20" expl="20. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.19"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.21" expl="21. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="WP_parameter f_ensures_success.22" expl="22. Postcondition (Ensures clause)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.19"/></proof>
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter f_safety" expl="Function f, safety" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="WP_parameter f_safety.1" expl="1. Precondition for jessie_nondet_int (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.2" expl="2. Allocation size (precondition)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.3" expl="3. Pointer inequality">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.11"/></proof>
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.4" expl="4. Precondition for jessie_nondet_int (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.20"/></proof>
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.5" expl="5. Allocation size (precondition)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.6" expl="6. Pointer dereference (Assignment)">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.7" expl="7. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.19"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.11"/></proof>
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.8" expl="8. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.9" expl="9. Pointer inequality">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
  <proof prover="2"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.10" expl="10. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.11" expl="11. Precondition for memcpy_char_0 (External. Requires clause)" expanded="true">
  <transf name="split_goal_wp" expanded="true">
   <goal name="WP_parameter f_safety.11.1" expl="1. Requires clause">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.2" expl="2. Requires clause">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.3" expl="3. Requires clause">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.4" expl="4. Requires clause">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.5" expl="5. Requires clause">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.6" expl="6. Requires clause">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.25"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.7" expl="7. Requires clause" expanded="true">
   <transf name="inline_goal" expanded="true">
    <goal name="WP_parameter f_safety.11.7.1" expl="1. Requires clause">
    <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.18"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter f_safety.11.8" expl="8. Global invariant fstr_init">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.9" expl="9. Global invariant typeof_fstr">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.10" expl="10. Global invariant valid_fstr">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.11" expl="11. Global invariant contents_of___string_String_constant">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.12" expl="12. Global invariant proxy_string_constant_literal_for___string_String_constant">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.13" expl="13. Global invariant contents_of___string_AAA">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.14" expl="14. Global invariant proxy_aaa_literal_for___string_AAA">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.15" expl="15. Global invariant contents_of___string_AAAU">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.16" expl="16. Global invariant proxy_aaau_literal_for___string_AAAU">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.17" expl="17. Global invariant contents_of_fstr_literal">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.18" expl="18. Global invariant typeof___string_String_constant">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.19" expl="19. Global invariant valid___string_String_constant">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.20" expl="20. Global invariant typeof___string_AAA">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.21" expl="21. Global invariant valid___string_AAA">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.22" expl="22. Global invariant typeof___string_AAAU">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.11.23" expl="23. Global invariant valid___string_AAAU">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_safety.12" expl="12. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.13" expl="13. Precondition for memset_char_0 (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.44"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.14" expl="14. Precondition for jessie_nondet_int (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.15" expl="15. Allocation size (precondition)">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.16" expl="16. Pointer dereference (Assignment with offset)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.17" expl="17. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.18" expl="18. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.19" expl="19. Pointer inequality">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.20" expl="20. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.21" expl="21. Precondition for memcpy_char_0 (External. Requires clause)" expanded="true">
  <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.41"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.22" expl="22. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.09"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.23" expl="23. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.24" expl="24. Deallocation">
  <proof prover="0"><result status="valid" time="0.90"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.39"/></proof>
  <proof prover="2"><result status="valid" time="0.54"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.25" expl="25. Deallocation">
  <proof prover="0"><result status="valid" time="0.18"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.27"/></proof>
  <proof prover="2"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.26" expl="26. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.27" expl="27. Pointer dereference (Assignment with offset)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.28" expl="28. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.26"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.29" expl="29. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.30" expl="30. Pointer inequality">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
  <proof prover="2"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.31" expl="31. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.26"/></proof>
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.32" expl="32. Precondition for memcpy_char_0 (External. Requires clause)" expanded="true">
  <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.33" expl="33. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.34" expl="34. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.35" expl="35. Deallocation">
  <proof prover="0"><result status="valid" time="0.35"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.36" expl="36. Deallocation">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.22"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.37" expl="37. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.38" expl="38. Deallocation">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.39" expl="39. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.19"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.40" expl="40. Pointer dereference (Assignment)">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.41" expl="41. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.42" expl="42. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.43" expl="43. Pointer inequality">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.11"/></proof>
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.44" expl="44. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.45" expl="45. Precondition for memcpy_char_0 (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.46" expl="46. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.47" expl="47. Precondition for memset_char_0 (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.22"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.48" expl="48. Precondition for jessie_nondet_int (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.49" expl="49. Allocation size (precondition)">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.50" expl="50. Pointer dereference (Assignment with offset)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.51" expl="51. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.52" expl="52. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.53" expl="53. Pointer inequality">
  <proof prover="0"><result status="valid" time="0.19"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.54" expl="54. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.55" expl="55. Precondition for memcpy_char_0 (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.11"/></proof>
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.56" expl="56. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.57" expl="57. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.58" expl="58. Deallocation">
  <proof prover="0"><result status="valid" time="0.11"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.19"/></proof>
  <proof prover="2"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.59" expl="59. Deallocation">
  <proof prover="0"><result status="valid" time="0.18"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.60" expl="60. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.61" expl="61. Pointer dereference (Assignment with offset)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.62" expl="62. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.63" expl="63. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.64" expl="64. Pointer inequality">
  <transf name="split_goal_wp">
   <goal name="WP_parameter f_safety.64.1" expl="1. Pointer inequality">
   <proof prover="0"><result status="valid" time="0.09"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
   <proof prover="2"><result status="valid" time="0.19"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_safety.65" expl="65. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.66" expl="66. Precondition for memcpy_char_0 (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.67" expl="67. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.26"/></proof>
  <proof prover="2"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.68" expl="68. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.69" expl="69. Deallocation">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.19"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.70" expl="70. Deallocation">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.71" expl="71. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.72" expl="72. Deallocation">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.73" expl="73. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.74" expl="74. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.75" expl="75. Pointer inequality">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.76" expl="76. Precondition for jessie_nondet_int (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
  <proof prover="2"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.77" expl="77. Allocation size (precondition)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.08"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.78" expl="78. Pointer dereference (Assignment)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.79" expl="79. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.80" expl="80. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.81" expl="81. Pointer inequality">
  <transf name="split_goal_wp">
   <goal name="WP_parameter f_safety.81.1" expl="1. Pointer inequality">
   <proof prover="0"><result status="valid" time="0.18"/></proof>
   <proof prover="1" memlimit="1000"><result status="valid" time="0.09"/></proof>
   <proof prover="2"><result status="valid" time="0.21"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_safety.82" expl="82. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.18"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.83" expl="83. Precondition for memcpy_char_0 (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.22"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.84" expl="84. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.85" expl="85. Precondition for memset_char_0 (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.86" expl="86. Precondition for jessie_nondet_int (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.87" expl="87. Allocation size (precondition)">
  <proof prover="0"><result status="valid" time="0.11"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.88" expl="88. Pointer dereference (Assignment with offset)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.89" expl="89. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.90" expl="90. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.18"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.23"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.91" expl="91. Pointer inequality">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.11"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.92" expl="92. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.93" expl="93. Precondition for memcpy_char_0 (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.18"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.94" expl="94. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.95" expl="95. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.18"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.21"/></proof>
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.96" expl="96. Deallocation">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.97" expl="97. Deallocation">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.98" expl="98. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.99" expl="99. Pointer dereference (Assignment with offset)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.100" expl="100. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.101" expl="101. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.102" expl="102. Pointer inequality">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.103" expl="103. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.104" expl="104. Precondition for memcpy_char_0 (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.26"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.105" expl="105. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.106" expl="106. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.107" expl="107. Deallocation">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.108" expl="108. Deallocation">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.109" expl="109. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.20"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.110" expl="110. Deallocation">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.11"/></proof>
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.111" expl="111. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
  <proof prover="2"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.112" expl="112. Pointer dereference (Assignment)">
  <proof prover="0"><result status="valid" time="0.18"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.11"/></proof>
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.113" expl="113. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.114" expl="114. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.115" expl="115. Pointer inequality">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.116" expl="116. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.18"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.117" expl="117. Precondition for memcpy_char_0 (External. Requires clause)" expanded="true">
  <transf name="split_goal_wp" expanded="true">
   <goal name="WP_parameter f_safety.117.1" expl="1. Requires clause">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.2" expl="2. Requires clause">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.3" expl="3. Requires clause">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.4" expl="4. Requires clause">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.5" expl="5. Requires clause">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.6" expl="6. Requires clause">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.7" expl="7. Requires clause" expanded="true">
   <proof prover="1" timelimit="49" memlimit="1000"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.8" expl="8. Global invariant fstr_init">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.9" expl="9. Global invariant typeof_fstr">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.10" expl="10. Global invariant valid_fstr">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.11" expl="11. Global invariant contents_of___string_String_constant">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.12" expl="12. Global invariant proxy_string_constant_literal_for___string_String_constant">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.13" expl="13. Global invariant contents_of___string_AAA">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.14" expl="14. Global invariant proxy_aaa_literal_for___string_AAA">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.15" expl="15. Global invariant contents_of___string_AAAU">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.16" expl="16. Global invariant proxy_aaau_literal_for___string_AAAU">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.17" expl="17. Global invariant contents_of_fstr_literal">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.18" expl="18. Global invariant typeof___string_String_constant">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.19" expl="19. Global invariant valid___string_String_constant">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.20" expl="20. Global invariant typeof___string_AAA">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.21" expl="21. Global invariant valid___string_AAA">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.22" expl="22. Global invariant typeof___string_AAAU">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="WP_parameter f_safety.117.23" expl="23. Global invariant valid___string_AAAU">
   <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter f_safety.118" expl="118. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.119" expl="119. Precondition for memset_char_0 (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.120" expl="120. Precondition for jessie_nondet_int (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.121" expl="121. Allocation size (precondition)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.122" expl="122. Pointer dereference (Assignment with offset)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.123" expl="123. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.124" expl="124. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.18"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.13"/></proof>
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.125" expl="125. Pointer inequality">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.06"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.126" expl="126. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.127" expl="127. Precondition for memcpy_char_0 (External. Requires clause)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.128" expl="128. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.16"/></proof>
  <proof prover="2"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.129" expl="129. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.18"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.130" expl="130. Deallocation">
  <proof prover="0"><result status="valid" time="0.12"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.22"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.131" expl="131. Deallocation">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.132" expl="132. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.133" expl="133. Pointer dereference (Assignment with offset)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.134" expl="134. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.135" expl="135. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.136" expl="136. Pointer inequality">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.137" expl="137. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.11"/></proof>
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.138" expl="138. Precondition for memcpy_char_0 (External. Requires clause)" expanded="true">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.139" expl="139. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.10"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.140" expl="140. Pointer dereference (Validity)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.17"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.141" expl="141. Deallocation">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.24"/></proof>
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.142" expl="142. Deallocation">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.25"/></proof>
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.143" expl="143. Postcondition (Ensures clause)" expanded="true">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.144" expl="144. Deallocation">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.11"/></proof>
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.145" expl="145. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="WP_parameter f_safety.146" expl="146. Postcondition (Ensures clause)">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="1" memlimit="1000"><result status="valid" time="0.15"/></proof>
  <proof prover="2"><result status="valid" time="0.09"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
