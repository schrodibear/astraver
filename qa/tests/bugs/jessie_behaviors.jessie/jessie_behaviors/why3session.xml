<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC4" version="1.4" timelimit="5" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="0.95.2" timelimit="5" memlimit="1000"/>
<file name="../jessie_behaviors.mlw" expanded="true">
<theory name="Jessie_model" sum="d41d8cd98f00b204e9800998ecf8427e" expanded="true">
</theory>
<theory name="Jessie_program" sum="d178207728cb37485fcbe6ac273cbd5a" expanded="true">
 <goal name="WP_parameter my_add_ensures_default" expl="Function my_add, default behavior" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="WP_parameter my_add_ensures_default.1" expl="1. Behavior disjointness check">
  <proof prover="1"><result status="valid" time="0.04" steps="48"/></proof>
  </goal>
  <goal name="WP_parameter my_add_ensures_default.2" expl="2. Behavior completeness check">
  <proof prover="1"><result status="valid" time="0.04" steps="53"/></proof>
  </goal>
  <goal name="WP_parameter my_add_ensures_default.3" expl="3. Postcondition">
  <proof prover="1"><result status="valid" time="0.04" steps="63"/></proof>
  </goal>
  <goal name="WP_parameter my_add_ensures_default.4" expl="4. Postcondition">
  <proof prover="0"><result status="valid" time="0.92"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter my_add_ensures_full" expl="Function my_add, behavior full">
 <transf name="split_goal_wp">
  <goal name="WP_parameter my_add_ensures_full.1" expl="1. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.04" steps="51"/></proof>
  </goal>
  <goal name="WP_parameter my_add_ensures_full.2" expl="2. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.04" steps="56"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter my_add_ensures_non_full" expl="Function my_add, behavior non_full">
 <transf name="split_goal_wp">
  <goal name="WP_parameter my_add_ensures_non_full.1" expl="1. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.06" steps="51"/></proof>
  </goal>
  <goal name="WP_parameter my_add_ensures_non_full.2" expl="2. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.12" steps="90"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter my_add_safety" expl="Function my_add, safety">
 <transf name="split_goal_wp">
  <goal name="WP_parameter my_add_safety.1" expl="1. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.04" steps="51"/></proof>
  </goal>
  <goal name="WP_parameter my_add_safety.2" expl="2. Arithmetic overflow (Bounded uint32)">
  <proof prover="1"><result status="valid" time="0.04" steps="55"/></proof>
  </goal>
  <goal name="WP_parameter my_add_safety.3" expl="3. Division by zero (precondition)">
  <proof prover="1"><result status="valid" time="0.04" steps="51"/></proof>
  </goal>
  <goal name="WP_parameter my_add_safety.4" expl="4. Arithmetic overflow (Bounded uint32)">
  <proof prover="1"><result status="valid" time="0.08" steps="67"/></proof>
  </goal>
  <goal name="WP_parameter my_add_safety.5" expl="5. Pointer dereference (Assignment with offset)">
  <proof prover="1"><result status="valid" time="0.11" steps="83"/></proof>
  </goal>
  <goal name="WP_parameter my_add_safety.6" expl="6. Arithmetic overflow (Bounded uint32)">
  <proof prover="1"><result status="valid" time="0.04" steps="63"/></proof>
  </goal>
  <goal name="WP_parameter my_add_safety.7" expl="7. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.05" steps="71"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter my_remove_ensures_default" expl="Function my_remove, default behavior">
 <transf name="split_goal_wp">
  <goal name="WP_parameter my_remove_ensures_default.1" expl="1. Behavior disjointness check">
  <proof prover="1"><result status="valid" time="0.04" steps="50"/></proof>
  </goal>
  <goal name="WP_parameter my_remove_ensures_default.2" expl="2. Behavior completeness check">
  <proof prover="1"><result status="valid" time="0.04" steps="52"/></proof>
  </goal>
  <goal name="WP_parameter my_remove_ensures_default.3" expl="3. Postcondition">
  <proof prover="1"><result status="valid" time="0.04" steps="63"/></proof>
  </goal>
  <goal name="WP_parameter my_remove_ensures_default.4" expl="4. Postcondition">
  <proof prover="1"><result status="valid" time="0.08" steps="98"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter my_remove_ensures_empty" expl="Function my_remove, behavior empty">
 <transf name="split_goal_wp">
  <goal name="WP_parameter my_remove_ensures_empty.1" expl="1. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.04" steps="61"/></proof>
  </goal>
  <goal name="WP_parameter my_remove_ensures_empty.2" expl="2. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.04" steps="58"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter my_remove_ensures_non_empty" expl="Function my_remove, behavior non_empty" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="WP_parameter my_remove_ensures_non_empty.1" expl="1. Postcondition (Ensures clause)" expanded="true">
  <proof prover="1"><result status="valid" time="0.07" steps="53"/></proof>
  </goal>
  <goal name="WP_parameter my_remove_ensures_non_empty.2" expl="2. Postcondition (Ensures clause)" expanded="true">
  <proof prover="0"><result status="valid" time="2.30"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter my_remove_safety" expl="Function my_remove, safety" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="WP_parameter my_remove_safety.1" expl="1. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.06" steps="51"/></proof>
  </goal>
  <goal name="WP_parameter my_remove_safety.2" expl="2. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="1"><result status="valid" time="0.07" steps="57"/></proof>
  </goal>
  <goal name="WP_parameter my_remove_safety.3" expl="3. Pointer dereference (Assignment)">
  <proof prover="1"><result status="valid" time="0.06" steps="54"/></proof>
  </goal>
  <goal name="WP_parameter my_remove_safety.4" expl="4. Arithmetic overflow (Bounded uint32)">
  <proof prover="1"><result status="valid" time="0.08" steps="60"/></proof>
  </goal>
  <goal name="WP_parameter my_remove_safety.5" expl="5. Division by zero (precondition)">
  <proof prover="1"><result status="valid" time="0.06" steps="57"/></proof>
  </goal>
  <goal name="WP_parameter my_remove_safety.6" expl="6. Arithmetic overflow (Bounded uint32)">
  <proof prover="1"><result status="valid" time="0.18" steps="73"/></proof>
  </goal>
  <goal name="WP_parameter my_remove_safety.7" expl="7. Arithmetic overflow (Bounded uint32)">
  <proof prover="1"><result status="valid" time="0.06" steps="67"/></proof>
  </goal>
  <goal name="WP_parameter my_remove_safety.8" expl="8. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.31" steps="115"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter exists_ensures_default" expl="Function exists, default behavior" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="WP_parameter exists_ensures_default.1" expl="1. Postcondition">
  <proof prover="1"><result status="valid" time="0.06" steps="67"/></proof>
  </goal>
  <goal name="WP_parameter exists_ensures_default.2" expl="2. loop invariant init">
  <proof prover="1"><result status="valid" time="0.10" steps="85"/></proof>
  </goal>
  <goal name="WP_parameter exists_ensures_default.3" expl="3. Postcondition">
  <proof prover="1"><result status="valid" time="0.18" steps="114"/></proof>
  </goal>
  <goal name="WP_parameter exists_ensures_default.4" expl="4. loop invariant preservation" expanded="true">
  <transf name="split_goal_wp" expanded="true">
   <goal name="WP_parameter exists_ensures_default.4.1" expl="1.">
   <proof prover="1"><result status="valid" time="0.05" steps="81"/></proof>
   </goal>
   <goal name="WP_parameter exists_ensures_default.4.2" expl="2.">
   <proof prover="0"><result status="valid" time="3.68"/></proof>
   </goal>
   <goal name="WP_parameter exists_ensures_default.4.3" expl="3.">
   <proof prover="1"><result status="valid" time="0.04" steps="63"/></proof>
   </goal>
   <goal name="WP_parameter exists_ensures_default.4.4" expl="4.">
   <proof prover="1"><result status="valid" time="0.04" steps="63"/></proof>
   </goal>
   <goal name="WP_parameter exists_ensures_default.4.5" expl="5. Assigns clause">
   <proof prover="1"><result status="valid" time="0.04" steps="63"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter exists_ensures_default.5" expl="5. Postcondition">
  <proof prover="1"><result status="valid" time="0.17" steps="109"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter exists_safety" expl="Function exists, safety" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="WP_parameter exists_safety.1" expl="1. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.07" steps="52"/></proof>
  </goal>
  <goal name="WP_parameter exists_safety.2" expl="2. Arithmetic overflow (Bounded uint32)">
  <proof prover="1"><result status="valid" time="0.06" steps="59"/></proof>
  </goal>
  <goal name="WP_parameter exists_safety.3" expl="3. Pointer dereference (Dereference by offset. Validity)">
  <proof prover="1"><result status="valid" time="0.26" steps="99"/></proof>
  </goal>
  <goal name="WP_parameter exists_safety.4" expl="4. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.06" steps="63"/></proof>
  </goal>
  <goal name="WP_parameter exists_safety.5" expl="5. Arithmetic overflow (Bounded uint32)">
  <proof prover="1"><result status="valid" time="0.03" steps="102"/></proof>
  </goal>
  <goal name="WP_parameter exists_safety.6" expl="6. Division by zero (precondition)">
  <proof prover="1"><result status="valid" time="0.05" steps="63"/></proof>
  </goal>
  <goal name="WP_parameter exists_safety.7" expl="7. Arithmetic overflow (Bounded uint32)">
  <proof prover="1"><result status="valid" time="0.10" steps="79"/></proof>
  </goal>
  <goal name="WP_parameter exists_safety.8" expl="8. Arithmetic overflow (Bounded int32)">
  <proof prover="1"><result status="valid" time="0.04" steps="73"/></proof>
  </goal>
  <goal name="WP_parameter exists_safety.9" expl="9. loop variant decrease">
  <proof prover="1"><result status="valid" time="0.06" steps="72"/></proof>
  </goal>
  <goal name="WP_parameter exists_safety.10" expl="10. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.04" steps="60"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter ready_ensures_default" expl="Function ready, default behavior" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="WP_parameter ready_ensures_default.1" expl="1. Behavior disjointness check">
  <proof prover="1"><result status="valid" time="0.06" steps="49"/></proof>
  </goal>
  <goal name="WP_parameter ready_ensures_default.2" expl="2. Postcondition">
  <proof prover="1"><result status="valid" time="0.04" steps="57"/></proof>
  </goal>
  <goal name="WP_parameter ready_ensures_default.3" expl="3. Postcondition">
  <proof prover="1"><result status="valid" time="0.04" steps="57"/></proof>
  </goal>
  <goal name="WP_parameter ready_ensures_default.4" expl="4. Postcondition">
  <proof prover="1"><result status="valid" time="0.06" steps="63"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter ready_ensures_in_queue" expl="Function ready, behavior in_queue" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="WP_parameter ready_ensures_in_queue.1" expl="1. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.07" steps="58"/></proof>
  </goal>
  <goal name="WP_parameter ready_ensures_in_queue.2" expl="2. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.04" steps="57"/></proof>
  </goal>
  <goal name="WP_parameter ready_ensures_in_queue.3" expl="3. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.05" steps="53"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter ready_ensures_not_in_queue" expl="Function ready, behavior not_in_queue" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="WP_parameter ready_ensures_not_in_queue.1" expl="1. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.07" steps="57"/></proof>
  </goal>
  <goal name="WP_parameter ready_ensures_not_in_queue.2" expl="2. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.05" steps="58"/></proof>
  </goal>
  <goal name="WP_parameter ready_ensures_not_in_queue.3" expl="3. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.04" steps="52"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter ready_safety" expl="Function ready, safety" expanded="true">
 <transf name="split_goal_wp" expanded="true">
  <goal name="WP_parameter ready_safety.1" expl="1. Precondition for exists (Requires clause. Internal)">
  <proof prover="1"><result status="valid" time="0.06" steps="48"/></proof>
  </goal>
  <goal name="WP_parameter ready_safety.2" expl="2. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.04" steps="57"/></proof>
  </goal>
  <goal name="WP_parameter ready_safety.3" expl="3. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.04" steps="57"/></proof>
  </goal>
  <goal name="WP_parameter ready_safety.4" expl="4. Postcondition (Ensures clause)">
  <proof prover="1"><result status="valid" time="0.04" steps="51"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
