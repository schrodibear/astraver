(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Why.
Require Omega.

Lemma swap_po_1 : 
  (N: Z)
  (i: Z)
  (j: Z)
  (Pre5: `0 <= i` /\ `i < N` /\ (`0 <= j` /\ `j < N`))
  `0 <= i` /\ `i < N`.
Proof.
Intros; Omega.
Save.

Lemma swap_po_2 : 
  (N: Z)
  (i: Z)
  (j: Z)
  (t: (array N Z))
  (Pre5: `0 <= i` /\ `i < N` /\ (`0 <= j` /\ `j < N`))
  (Pre1: `0 <= i` /\ `i < N`)
  (result: Z)
  (Post1: result = (access t i))
  `0 <= j` /\ `j < N`.
Proof.
Intros; Omega.
Save.

Lemma swap_po_3 : 
  (N: Z)
  (i: Z)
  (j: Z)
  (t: (array N Z))
  (Pre5: `0 <= i` /\ `i < N` /\ (`0 <= j` /\ `j < N`))
  (Pre1: `0 <= i` /\ `i < N`)
  (result: Z)
  (Post1: result = (access t i))
  (Pre2: `0 <= j` /\ `j < N`)
  (t0: (array N Z))
  (Post2: t0 = (store t i (access t j)))
  (t1: (array N Z))
  (Post3: t1 = (store t0 j result))
  (exchange t1 t i j).
Proof.
Intros; Rewrite Post3; Rewrite Post2; Rewrite Post1.
Auto with datatypes.
Save.

