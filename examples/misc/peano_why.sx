(BG_PUSH (FORALL (t i v) (EQ (array_length (store t i v)) (array_length t))))

; added distributivity of * over -
(BG_PUSH
  (FORALL (x y z) (EQ (* x (- y z)) (- (* x y) (* x z))))
)

;; DO NOT EDIT BELOW THIS LINE

;; add1_po_1, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (y)
(FORALL (x) (IMPLIES (>= y 0) (AND (<= 0 y) (EQ x (+ x (- y y)))))))

;; add1_po_2, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (y)
(FORALL (x)
(IMPLIES (>= y 0)
(FORALL (x0)
(FORALL (z)
(IMPLIES (AND (<= 0 z) (EQ x0 (+ x (- y z))))
(IMPLIES (> z 0)
(FORALL (x1)
(IMPLIES (EQ x1 (+ x0 1))
(FORALL (z0)
(IMPLIES (EQ z0 (- z 1))
(AND (AND (<= 0 z0) (EQ x1 (+ x (- y z0)))) (AND (<= 0 z) (< z0 z))))))))))))))

;; add1_po_3, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (y)
(FORALL (x)
(IMPLIES (>= y 0)
(FORALL (x0)
(FORALL (z)
(IMPLIES (AND (<= 0 z) (EQ x0 (+ x (- y z))))
(IMPLIES (<= z 0) (EQ x0 (+ x y)))))))))

;; u1_po_1, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (r) (IMPLIES (EQ r (+ 3 7)) (EQ r 10)))

;; u1_po_2, Why obligation from file "peano.mlw", line 0, characters 0-0:
(>= 7 0)

;; rec_add1_po_1, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (y)
(FORALL (x)
(IMPLIES (>= y 0)
(IMPLIES (< 0 y)
(FORALL (x0)
(IMPLIES (EQ x0 (+ x 1))
(FORALL (x1) (IMPLIES (EQ x1 (+ x0 (- y 1))) (EQ x1 (+ x y))))))))))

;; rec_add1_po_2, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (y)
(FORALL (x)
(IMPLIES (>= y 0)
(IMPLIES (< 0 y)
(FORALL (x0) (IMPLIES (EQ x0 (+ x 1)) (AND (<= 0 y) (< (- y 1) y))))))))

;; rec_add1_po_3, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (y)
(FORALL (x)
(IMPLIES (>= y 0)
(IMPLIES (< 0 y) (FORALL (x0) (IMPLIES (EQ x0 (+ x 1)) (>= (- y 1) 0)))))))

;; rec_add1_po_4, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (y)
(FORALL (x) (IMPLIES (>= y 0) (IMPLIES (>= 0 y) (EQ x (+ x y))))))

;; u11_po_1, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (r) (IMPLIES (EQ r (+ 3 7)) (EQ r 10)))

;; u11_po_2, Why obligation from file "peano.mlw", line 0, characters 0-0:
(>= 7 0)

;; mult1_po_1, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (y)
(FORALL (x)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (x0)
(IMPLIES (EQ x0 0) (LBLNEG |I| (AND (<= 0 y) (EQ x0 (* x (- y y))))))))))

;; mult1_po_2, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (y)
(FORALL (x)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (x0)
(IMPLIES (EQ x0 0)
(FORALL (x1)
(FORALL (z)
(IMPLIES (LBLPOS |I| (AND (<= 0 z) (EQ x1 (* x (- y z)))))
(IMPLIES (> z 0)
(FORALL (x2)
(IMPLIES (EQ x2 (+ x1 x))
(FORALL (z0)
(IMPLIES (EQ z0 (- z 1))
(AND (LBLNEG |I| (AND (<= 0 z0) (EQ x2 (* x (- y z0)))))
(AND (<= 0 z) (< z0 z))))))))))))))))

;; mult1_po_3, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (y)
(FORALL (x)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (x0)
(IMPLIES (EQ x0 0)
(FORALL (x1)
(FORALL (z)
(IMPLIES (LBLPOS |I| (AND (<= 0 z) (EQ x1 (* x (- y z)))))
(IMPLIES (<= z 0) (EQ x1 (* x y)))))))))))

;; u2_po_1, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (r) (IMPLIES (EQ r (* 4 6)) (EQ r 24)))

;; u2_po_2, Why obligation from file "peano.mlw", line 0, characters 0-0:
(AND (>= 4 0) (>= 6 0))

;; mult2_po_1, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (a)
(FORALL (b) (IMPLIES (>= a 0) (IMPLIES (EQ a 0) (EQ b (+ a b)))))))))

;; mult2_po_2, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (a)
(FORALL (b)
(IMPLIES (>= a 0)
(IMPLIES (NEQ a 0)
(FORALL (result)
(IMPLIES (EQ result (+ (- a 1) (+ b 1))) (EQ result (+ a b)))))))))))

;; mult2_po_3, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (a)
(IMPLIES (>= a 0) (IMPLIES (NEQ a 0) (AND (<= 0 a) (< (- a 1) a))))))))

;; mult2_po_4, Why obligation from file "peano.mlw", line 0, characters 0-0:
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (a) (IMPLIES (>= a 0) (IMPLIES (NEQ a 0) (>= (- a 1) 0)))))))

