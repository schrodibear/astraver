
;; DO NOT EDIT BELOW THIS LINE

(BG_PUSH (NEQ |@true| |@false|))

(BG_PUSH
 ;; Why axiom lt_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (lt_int_bool x y) |@true|) (< x y)))))

(BG_PUSH
 ;; Why axiom le_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (le_int_bool x y) |@true|) (<= x y)))))

(BG_PUSH
 ;; Why axiom gt_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (gt_int_bool x y) |@true|) (> x y)))))

(BG_PUSH
 ;; Why axiom ge_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (ge_int_bool x y) |@true|) (>= x y)))))

(BG_PUSH
 ;; Why axiom eq_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (eq_int_bool x y) |@true|) (EQ x y)))))

(BG_PUSH
 ;; Why axiom neq_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (neq_int_bool x y) |@true|) (NEQ x y)))))

(BG_PUSH
 ;; Why axiom ite_true
 (FORALL (x) (FORALL (y) (EQ (ite |@true| x y) x))))

(BG_PUSH
 ;; Why axiom ite_false
 (FORALL (x) (FORALL (y) (EQ (ite |@false| x y) y))))

(BG_PUSH
 ;; Why axiom access_update
 (FORALL (t) (FORALL (i) (FORALL (v) (EQ (access (update t i v) i) v)))))

(BG_PUSH
 ;; Why axiom access_update_neq
 (FORALL (t)
 (FORALL (i)
 (FORALL (j)
 (FORALL (v) (IMPLIES (NEQ i j) (EQ (access (update t i v) j) (access t j)))))))

 (FORALL (i)
 (FORALL (j)
 (IMPLIES (NEQ i j)
 (FORALL (t) (FORALL (v) (EQ (access (update t i v) j) (access t j))))))))

(DEFPRED (sorted_array t i j)
  (FORALL (k)
  (IMPLIES (AND (<= i k) (< k j)) (<= (access t k) (access t (+ k 1))))))

(DEFPRED (exchange t1 t2 i j)
  (AND (EQ (array_length t1) (array_length t2))
  (AND (EQ (access t1 i) (access t2 j))
  (AND (EQ (access t2 i) (access t1 j))
  (FORALL (k)
  (IMPLIES (AND (NEQ k i) (NEQ k j)) (EQ (access t1 k) (access t2 k))))))))

(BG_PUSH
 ;; Why axiom permut_refl
 (FORALL (t) (EQ (permut t t) |@true|)))

(BG_PUSH
 ;; Why axiom permut_sym
 (FORALL (t1)
 (FORALL (t2)
 (IMPLIES (EQ (permut t1 t2) |@true|) (EQ (permut t2 t1) |@true|)))))

(BG_PUSH
 ;; Why axiom permut_trans
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (t3)
 (IMPLIES (AND (EQ (permut t1 t2) |@true|) (EQ (permut t2 t3) |@true|))
 (EQ (permut t1 t3) |@true|))))))

(BG_PUSH
 ;; Why axiom permut_exchange
 (FORALL (t)
 (FORALL (i)
 (FORALL (j)
 (EQ (permut t (update (update t i (access t j)) j (access t i))) |@true|)))))

(BG_PUSH
 ;; Why axiom sub_permut_refl
 (FORALL (t) (FORALL (g) (FORALL (d) (EQ (sub_permut g d t t) |@true|)))))

(BG_PUSH
 ;; Why axiom sub_permut_sym
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (EQ (sub_permut g d t2 t1) |@true|)))))))

(BG_PUSH
 ;; Why axiom sub_permut_trans
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (t3)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (IMPLIES (EQ (sub_permut g d t2 t3) |@true|)
 (EQ (sub_permut g d t1 t3) |@true|))))))))

 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (FORALL (t3)
 (IMPLIES (EQ (sub_permut g d t2 t3) |@true|)
 (EQ (sub_permut g d t1 t3) |@true|)))))))))

(BG_PUSH
 ;; Why axiom sub_permut_exchange_1
 (FORALL (t)
 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES (AND (<= g i) (AND (<= i d) (AND (<= g j) (<= j d))))
 (EQ (sub_permut g d t
 (update (update t i (access t j)) j (access t i))) |@true|)))))))

 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES (AND (<= g i) (AND (<= i d) (AND (<= g j) (<= j d))))
 (FORALL (t)
 (EQ (sub_permut g d t
 (update (update t i (access t j)) j (access t i))) |@true|))))))))

(BG_PUSH
 ;; Why axiom sub_permut_exchange_2
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES
 (AND (<= g i)
 (AND (<= i d) (AND (<= g j) (AND (<= j d) (exchange t1 t2 i j)))))
 (EQ (sub_permut g d t1 t2) |@true|)))))))))

(BG_PUSH
 ;; Why axiom sub_permut_permut
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|) (EQ (permut t1 t2) |@true|)))))))

(BG_PUSH
 ;; Why axiom array_length_update
 (FORALL (t)
 (FORALL (i)
 (FORALL (v) (EQ (array_length (update t i v)) (array_length t))))))

(BG_PUSH
 ;; Why axiom sub_permut_array_length
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (EQ (array_length t1) (array_length t2))))))))

(BG_PUSH
 ;; Why axiom permut_array_length
 (FORALL (t1)
 (FORALL (t2)
 (IMPLIES (EQ (permut t1 t2) |@true|)
 (EQ (array_length t1) (array_length t2))))))

;; search1_po_1, Why obligation from file "search.mlw", line 16, characters 6-212:
(FORALL (t)
(AND (<= 0 0)
(FORALL (k) (IMPLIES (AND (<= 0 k) (< k 0)) (NEQ (access t k) 0)))))

;; search1_po_2, Why obligation from file "search.mlw", line 19, characters 11-16:
(FORALL (t)
(FORALL (i)
(IMPLIES (AND (<= 0 i)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k i)) (NEQ (access t k) 0))))
(FORALL (result)
(IMPLIES (EQ result (array_length t))
(IMPLIES (< i result) (AND (<= 0 i) (< i (array_length t)))))))))

;; search1_po_3, Why obligation from file "search.mlw", line 25, characters 6-7:
(FORALL (t)
(FORALL (i)
(IMPLIES (AND (<= 0 i)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k i)) (NEQ (access t k) 0))))
(FORALL (result)
(IMPLIES (EQ result (array_length t))
(IMPLIES (< i result)
(IMPLIES (AND (<= 0 i) (< i (array_length t)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t i))
(IMPLIES (EQ result0 0) (EQ (access t i) 0)))))))))))

;; search1_po_4, Why obligation from file "search.mlw", line 20, characters 8-19:
(FORALL (t)
(FORALL (i)
(IMPLIES (AND (<= 0 i)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k i)) (NEQ (access t k) 0))))
(FORALL (result)
(IMPLIES (EQ result (array_length t))
(IMPLIES (< i result)
(IMPLIES (AND (<= 0 i) (< i (array_length t)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t i))
(IMPLIES (NEQ result0 0)
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1))
(AND
(AND (<= 0 i0)
(FORALL (k) (IMPLIES (AND (<= 0 k) (< k i0)) (NEQ (access t k) 0))))
(AND (<= 0 (- (array_length t) i))
(< (- (array_length t) i0) (- (array_length t) i))))))))))))))))

;; search1_po_5, Why obligation from file "search.mlw", line 22, characters 6-27:
(FORALL (t)
(FORALL (i)
(IMPLIES (AND (<= 0 i)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k i)) (NEQ (access t k) 0))))
(FORALL (result)
(IMPLIES (EQ result (array_length t))
(IMPLIES (>= i result)
(FORALL (k)
(IMPLIES (AND (<= 0 k) (< k (array_length t))) (NEQ (access t k) 0)))))))))

;; search2_po_1, Why obligation from file "search.mlw", line 40, characters 6-206:
(FORALL (t)
(AND (<= 0 0)
(FORALL (k) (IMPLIES (AND (<= 0 k) (< k 0)) (NEQ (access t k) 0)))))

;; search2_po_2, Why obligation from file "search.mlw", line 43, characters 11-16:
(FORALL (t)
(FORALL (i)
(IMPLIES (AND (<= 0 i)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k i)) (NEQ (access t k) 0))))
(FORALL (result)
(IMPLIES (EQ result (array_length t))
(IMPLIES (< i result) (AND (<= 0 i) (< i (array_length t)))))))))

;; search2_po_3, Why obligation from file "search.mlw", line 49, characters 6-8:
(FORALL (t)
(FORALL (i)
(IMPLIES (AND (<= 0 i)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k i)) (NEQ (access t k) 0))))
(FORALL (result)
(IMPLIES (EQ result (array_length t))
(IMPLIES (< i result)
(IMPLIES (AND (<= 0 i) (< i (array_length t)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t i))
(IMPLIES (EQ result0 0) (EQ (access t i) 0)))))))))))

;; search2_po_4, Why obligation from file "search.mlw", line 44, characters 8-19:
(FORALL (t)
(FORALL (i)
(IMPLIES (AND (<= 0 i)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k i)) (NEQ (access t k) 0))))
(FORALL (result)
(IMPLIES (EQ result (array_length t))
(IMPLIES (< i result)
(IMPLIES (AND (<= 0 i) (< i (array_length t)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t i))
(IMPLIES (NEQ result0 0)
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1))
(AND
(AND (<= 0 i0)
(FORALL (k) (IMPLIES (AND (<= 0 k) (< k i0)) (NEQ (access t k) 0))))
(AND (<= 0 (- (array_length t) i))
(< (- (array_length t) i0) (- (array_length t) i))))))))))))))))

;; search2_po_5, Why obligation from file "search.mlw", line 46, characters 6-27:
(FORALL (t)
(FORALL (i)
(IMPLIES (AND (<= 0 i)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k i)) (NEQ (access t k) 0))))
(FORALL (result)
(IMPLIES (EQ result (array_length t))
(IMPLIES (>= i result)
(FORALL (k)
(IMPLIES (AND (<= 0 k) (< k (array_length t))) (NEQ (access t k) 0)))))))))

;; search3_po_1, Why obligation from file "search.mlw", line 67, characters 5-17:
(FORALL (t)
(IMPLIES (<= 0 (array_length t)) (AND (<= 0 0) (<= 0 (array_length t)))))

;; search3_po_2, Why obligation from file "search.mlw", line 67, characters 5-17:
(FORALL (t)
(IMPLIES (<= 0 (array_length t))
(IMPLIES (AND (<= 0 0) (<= 0 (array_length t)))
(IMPLIES (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k (array_length t))) (NEQ (access t k) 0)))
(FORALL (k)
(IMPLIES (AND (<= 0 k) (< k (array_length t))) (NEQ (access t k) 0)))))))

;; search3_po_3, Why obligation from file "search.mlw", line 61, characters 38-59:
(FORALL (t)
(IMPLIES (<= 0 (array_length t))
(FORALL (i)
(FORALL (t0)
(IMPLIES (AND (<= 0 i) (<= i (array_length t0)))
(FORALL (result)
(IMPLIES (EQ result (array_length t0))
(IMPLIES (EQ i result)
(FORALL (k)
(IMPLIES (AND (<= i k) (< k (array_length t0))) (NEQ (access t0 k) 0)))))))))))

;; search3_po_4, Why obligation from file "search.mlw", line 62, characters 16-20:
(FORALL (t)
(IMPLIES (<= 0 (array_length t))
(FORALL (i)
(FORALL (t0)
(IMPLIES (AND (<= 0 i) (<= i (array_length t0)))
(FORALL (result)
(IMPLIES (EQ result (array_length t0))
(IMPLIES (NEQ i result) (AND (<= 0 i) (< i (array_length t0)))))))))))

;; search3_po_5, Why obligation from file "search.mlw", line 62, characters 30-31:
(FORALL (t)
(IMPLIES (<= 0 (array_length t))
(FORALL (i)
(FORALL (t0)
(IMPLIES (AND (<= 0 i) (<= i (array_length t0)))
(FORALL (result)
(IMPLIES (EQ result (array_length t0))
(IMPLIES (NEQ i result)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i))
(IMPLIES (EQ result0 0) (EQ (access t0 i) 0)))))))))))))

;; search3_po_6, Why obligation from file "search.mlw", line 63, characters 14-32:
(FORALL (t)
(IMPLIES (<= 0 (array_length t))
(FORALL (i)
(FORALL (t0)
(IMPLIES (AND (<= 0 i) (<= i (array_length t0)))
(FORALL (result)
(IMPLIES (EQ result (array_length t0))
(IMPLIES (NEQ i result)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i))
(IMPLIES (NEQ result0 0)
(AND (<= 0 (- (array_length t0) i))
(< (- (array_length t0) (+ i 1)) (- (array_length t0) i)))))))))))))))

;; search3_po_7, Why obligation from file "search.mlw", line 63, characters 14-32:
(FORALL (t)
(IMPLIES (<= 0 (array_length t))
(FORALL (i)
(FORALL (t0)
(IMPLIES (AND (<= 0 i) (<= i (array_length t0)))
(FORALL (result)
(IMPLIES (EQ result (array_length t0))
(IMPLIES (NEQ i result)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i))
(IMPLIES (NEQ result0 0)
(IMPLIES (AND (<= 0 (- (array_length t0) i))
         (< (- (array_length t0) (+ i 1)) (- (array_length t0) i)))
(AND (<= 0 (+ i 1)) (<= (+ i 1) (array_length t0))))))))))))))))

;; search3_po_8, Why obligation from file "search.mlw", line 63, characters 14-32:
(FORALL (t)
(IMPLIES (<= 0 (array_length t))
(FORALL (i)
(FORALL (t0)
(IMPLIES (AND (<= 0 i) (<= i (array_length t0)))
(FORALL (result)
(IMPLIES (EQ result (array_length t0))
(IMPLIES (NEQ i result)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i))
(IMPLIES (NEQ result0 0)
(IMPLIES (AND (<= 0 (- (array_length t0) i))
         (< (- (array_length t0) (+ i 1)) (- (array_length t0) i)))
(IMPLIES (AND (<= 0 (+ i 1)) (<= (+ i 1) (array_length t0)))
(IMPLIES (FORALL (k)
         (IMPLIES (AND (<= (+ i 1) k) (< k (array_length t0)))
         (NEQ (access t0 k) 0)))
(FORALL (k)
(IMPLIES (AND (<= i k) (< k (array_length t0))) (NEQ (access t0 k) 0))))))))))))))))))

