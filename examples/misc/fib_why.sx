(BG_PUSH (FORALL (t i v) (EQ (array_length (store t i v)) (array_length t))))

; axiomatization of Fibonacci function F
(BG_PUSH
  (EQ (F 0) 1)
  (EQ (F 1) 1)
  (FORALL (n) (IMPLIES (>= n 2) (EQ (F n) (+ (F (- n 1)) (F (- n 2))))))
  ; wierd: we need this one too
  (FORALL (n) (IMPLIES (>= n 1) (EQ (F (+ n 1)) (+ (F n) (F (- n 1))))))
)

;; DO NOT EDIT BELOW THIS LINE

;; fib1_po_1, Why obligation from file "fib.mlw", characters 447-448
(FORALL (n)
(IMPLIES (>= n 0)
(FORALL (Variant1)
(FORALL (n0)
(IMPLIES (EQ Variant1 n0)
(IMPLIES (>= n0 0)
(IMPLIES (<= n0 1)
(FORALL (result0) (IMPLIES (EQ result0 1) (EQ result0 (F n0)))))))))))

;; fib1_po_2, Why obligation from file "fib.mlw", characters 480-494
(FORALL (n)
(IMPLIES (>= n 0)
(FORALL (Variant1)
(FORALL (n0)
(IMPLIES (EQ Variant1 n0)
(IMPLIES (>= n0 0) (IMPLIES (> n0 1) (>= (- n0 2) 0))))))))

;; fib1_po_3, Why obligation from file "fib.mlw", characters 413-515
(FORALL (n)
(IMPLIES (>= n 0)
(FORALL (Variant1)
(FORALL (n0)
(IMPLIES (EQ Variant1 n0)
(IMPLIES (>= n0 0)
(IMPLIES (> n0 1)
(IMPLIES (>= (- n0 2) 0)
(FORALL (result0)
(IMPLIES (EQ result0 (- n0 2))
(IMPLIES (>= (- n0 2) 0) (AND (<= 0 Variant1) (< result0 Variant1)))))))))))))

;; fib1_po_4, Why obligation from file "fib.mlw", characters 463-477
(FORALL (n)
(IMPLIES (>= n 0)
(FORALL (Variant1)
(FORALL (n0)
(IMPLIES (EQ Variant1 n0)
(IMPLIES (>= n0 0)
(IMPLIES (> n0 1)
(IMPLIES (>= (- n0 2) 0)
(FORALL (aux_6) (IMPLIES (EQ aux_6 (F (- n0 2))) (>= (- n0 1) 0)))))))))))

;; fib1_po_5, Why obligation from file "fib.mlw", characters 413-515
(FORALL (n)
(IMPLIES (>= n 0)
(FORALL (Variant1)
(FORALL (n0)
(IMPLIES (EQ Variant1 n0)
(IMPLIES (>= n0 0)
(IMPLIES (> n0 1)
(IMPLIES (>= (- n0 2) 0)
(FORALL (aux_6)
(IMPLIES (EQ aux_6 (F (- n0 2)))
(IMPLIES (>= (- n0 1) 0)
(FORALL (result0)
(IMPLIES (EQ result0 (- n0 1))
(IMPLIES (>= (- n0 1) 0) (AND (<= 0 Variant1) (< result0 Variant1))))))))))))))))

;; fib1_po_6, Why obligation from file "fib.mlw", characters 463-494
(FORALL (n)
(IMPLIES (>= n 0)
(FORALL (Variant1)
(FORALL (n0)
(IMPLIES (EQ Variant1 n0)
(IMPLIES (>= n0 0)
(IMPLIES (> n0 1)
(IMPLIES (>= (- n0 2) 0)
(FORALL (aux_6)
(IMPLIES (EQ aux_6 (F (- n0 2)))
(IMPLIES (>= (- n0 1) 0)
(FORALL (aux_5)
(IMPLIES (EQ aux_5 (F (- n0 1)))
(FORALL (result0) (IMPLIES (EQ result0 (+ aux_5 aux_6)) (EQ result0 (F n0)))))))))))))))))

;; fib2_aux_po_1, Why obligation from file "fib.mlw", characters 713-715
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 1 x) (<= x n))
         (AND (EQ fx (F x)) (EQ fx_1 (F (- x 1)))))
(FORALL (Variant1)
(FORALL (n0)
(FORALL (x0)
(FORALL (fx0)
(FORALL (fx_1_0)
(IMPLIES (EQ Variant1 (- n0 x0))
(IMPLIES (AND (AND (<= 1 x0) (<= x0 n0))
         (AND (EQ fx0 (F x0)) (EQ fx_1_0 (F (- x0 1)))))
(IMPLIES (EQ x0 n0)
(FORALL (result0) (IMPLIES (EQ result0 fx0) (EQ result0 (F n0)))))))))))))))))

;; fib2_aux_po_2, Why obligation from file "fib.mlw", characters 731-762
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 1 x) (<= x n))
         (AND (EQ fx (F x)) (EQ fx_1 (F (- x 1)))))
(FORALL (Variant1)
(FORALL (n0)
(FORALL (x0)
(FORALL (fx0)
(FORALL (fx_1_0)
(IMPLIES (EQ Variant1 (- n0 x0))
(IMPLIES (AND (AND (<= 1 x0) (<= x0 n0))
         (AND (EQ fx0 (F x0)) (EQ fx_1_0 (F (- x0 1)))))
(IMPLIES (NEQ x0 n0)
(AND (AND (<= 1 (+ x0 1)) (<= (+ x0 1) n0))
(AND (EQ (+ fx0 fx_1_0) (F (+ x0 1))) (EQ fx0 (F (- (+ x0 1) 1))))))))))))))))))

;; fib2_po_1, Why obligation from file "fib.mlw", characters 842-843
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (<= n 1)
(FORALL (result0) (IMPLIES (EQ result0 1) (EQ result0 (F n)))))))

;; fib2_po_2, Why obligation from file "fib.mlw", characters 849-867
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 1)
(AND (AND (<= 1 1) (<= 1 n)) (AND (EQ 1 (F 1)) (EQ 1 (F (- 1 1))))))))

;; fib3_po_1, Why obligation from file "fib.mlw", characters 1144-1210
(FORALL (n)
(IMPLIES (>= n 0)
(FORALL (k)
(IMPLIES (EQ k 1)
(FORALL (x)
(IMPLIES (EQ x 1)
(FORALL (y)
(IMPLIES (EQ y 1)
(IMPLIES (> n 0)
(FORALL (Variant1)
(FORALL (k1)
(FORALL (x1)
(FORALL (y1)
(IMPLIES (EQ Variant1 (- n k1))
(IMPLIES (AND (AND (<= 1 k1) (<= k1 n))
         (AND (EQ x1 (F k1)) (EQ y1 (F (- k1 1)))))
(IMPLIES (< k1 n)
(FORALL (t)
(IMPLIES (EQ t y1)
(FORALL (y2)
(IMPLIES (EQ y2 x1)
(FORALL (x2)
(IMPLIES (EQ x2 (+ x1 t))
(FORALL (k2)
(IMPLIES (EQ k2 (+ k1 1))
(AND
(AND (AND (<= 1 k2) (<= k2 n)) (AND (EQ x2 (F k2)) (EQ y2 (F (- k2 1)))))
(AND (<= 0 (- n k1)) (< (- n k2) (- n k1))))))))))))))))))))))))))))

;; fib3_po_2, Why obligation from file "fib.mlw", characters 1027-1219
(FORALL (n)
(IMPLIES (>= n 0)
(FORALL (k)
(IMPLIES (EQ k 1)
(FORALL (x)
(IMPLIES (EQ x 1)
(FORALL (y)
(IMPLIES (EQ y 1)
(IMPLIES (> n 0)
(FORALL (Variant1)
(FORALL (k1)
(FORALL (x1)
(FORALL (y1)
(IMPLIES (EQ Variant1 (- n k1))
(IMPLIES (AND (AND (<= 1 k1) (<= k1 n))
         (AND (EQ x1 (F k1)) (EQ y1 (F (- k1 1)))))
(IMPLIES (>= k1 n)
(FORALL (result) (IMPLIES (EQ result x1) (EQ result (F n))))))))))))))))))))

;; fib3_po_3, Why obligation from file "fib.mlw", characters 1061-1100
(FORALL (n)
(IMPLIES (>= n 0)
(FORALL (k)
(IMPLIES (EQ k 1)
(FORALL (x)
(IMPLIES (EQ x 1)
(FORALL (y)
(IMPLIES (EQ y 1)
(IMPLIES (> n 0)
(AND (AND (<= 1 k) (<= k n)) (AND (EQ x (F k)) (EQ y (F (- k 1))))))))))))))

;; fib3_po_4, Why obligation from file "fib.mlw", characters 1219-1219
(FORALL (n)
(IMPLIES (>= n 0)
(FORALL (k)
(IMPLIES (EQ k 1)
(FORALL (x)
(IMPLIES (EQ x 1)
(FORALL (y)
(IMPLIES (EQ y 1)
(IMPLIES (<= n 0)
(FORALL (result0)
(IMPLIES (EQ result0 tt)
(FORALL (result) (IMPLIES (EQ result x) (EQ result (F n)))))))))))))))

;; fib4_po_1, Why obligation from file "fib.mlw", characters 1393-1394
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (<= n 1)
(FORALL (result0) (IMPLIES (EQ result0 1) (EQ result0 (F n))))))))

;; fib4_po_2, Why obligation from file "fib.mlw", characters 1414-1423
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(FORALL (aux_2)
(IMPLIES (EQ aux_2 1)
(FORALL (aux_1)
(IMPLIES (EQ aux_1 0) (AND (<= 0 aux_1) (< aux_1 (array_length t)))))))))))

;; fib4_po_3, Why obligation from file "fib.mlw", characters 1414-1423
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(FORALL (aux_2)
(IMPLIES (EQ aux_2 1)
(FORALL (aux_1)
(IMPLIES (EQ aux_1 0)
(IMPLIES (AND (<= 0 aux_1) (< aux_1 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (store t aux_1 aux_2))
(FORALL (result)
(IMPLIES (EQ result 1)
(FORALL (result0)
(IMPLIES (EQ result0 1)
(AND
(FORALL (t1)
(IMPLIES (EQ t1 (store t0 result0 result))
(FORALL (result)
(IMPLIES (EQ result 2)
(AND
(AND (AND (<= 2 result) (<= result (+ n 1)))
(AND (EQ (array_length t1) (array_length t))
(FORALL (i) (IMPLIES (AND (<= 0 i) (< i result)) (EQ (select t1 i) (F i))))))
(FORALL (k)
(FORALL (t0)
(IMPLIES
(AND (AND (<= 2 k) (<= k (+ n 1)))
(AND (EQ (array_length t0) (array_length t))
(FORALL (i) (IMPLIES (AND (<= 0 i) (< i k)) (EQ (select t0 i) (F i))))))
(AND
(IMPLIES (<= k n)
(AND
(AND
(FORALL (result)
(IMPLIES (EQ result (+ (select t0 (- k 1)) (select t0 (- k 2))))
(FORALL (result0)
(IMPLIES (EQ result0 k)
(AND
(FORALL (t1)
(IMPLIES (EQ t1 (store t0 result0 result))
(FORALL (k0)
(IMPLIES (EQ k0 (+ k 1))
(AND
(AND (AND (<= 2 k0) (<= k0 (+ n 1)))
(AND (EQ (array_length t1) (array_length t))
(FORALL (i) (IMPLIES (AND (<= 0 i) (< i k0)) (EQ (select t1 i) (F i))))))
(AND (<= 0 (- (+ n 1) k)) (< (- (+ n 1) k0) (- (+ n 1) k))))))))
(AND (<= 0 result0) (< result0 (array_length t0))))))))
(AND (<= 0 (- k 2)) (< (- k 2) (array_length t0))))
(AND (<= 0 (- k 1)) (< (- k 1) (array_length t0)))))
(IMPLIES (> k n)
(AND (FORALL (result) (IMPLIES (EQ result (select t0 n)) (EQ result (F n))))
(AND (<= 0 n) (< n (array_length t0))))))))))))))
(AND (<= 0 result0) (< result0 (array_length t0)))))))))))))))))))

