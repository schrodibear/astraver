(BG_PUSH (FORALL (t i v) (EQ (array_length (store t i v)) (array_length t))))

; axiomatization of Fibonacci function F
(BG_PUSH
  (EQ (F 0) 1)
  (EQ (F 1) 1)
  (FORALL (n) (IMPLIES (>= n 2) (EQ (F n) (+ (F (- n 1)) (F (- n 2))))))
  ; wierd: we need this one too
  (FORALL (n) (IMPLIES (>= n 1) (EQ (F (+ n 1)) (+ (F n) (F (- n 1))))))
)

;; DO NOT EDIT BELOW THIS LINE

;; fib1_po_1, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (<= n 1) (EQ 1 (F n)))))

;; fib1_po_2, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 1)
(FORALL (result)
(IMPLIES (EQ result (F (- n 1)))
(FORALL (result0)
(IMPLIES (EQ result0 (F (- n 2))) (EQ (+ result result0) (F n)))))))))

;; fib1_po_3, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 1)
(FORALL (result)
(IMPLIES (EQ result (F (- n 1))) (AND (<= 0 n) (< (- n 2) n)))))))

;; fib1_po_4, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 1)
(FORALL (result) (IMPLIES (EQ result (F (- n 1))) (>= (- n 2) 0))))))

;; fib1_po_5, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(IMPLIES (>= n 0) (IMPLIES (> n 1) (AND (<= 0 n) (< (- n 1) n)))))

;; fib1_po_6, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (> n 1) (>= (- n 1) 0))))

;; fib2_aux_po_1, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 1 x) (<= x n))
         (AND (EQ fx (F x)) (EQ fx_1 (F (- x 1)))))
(IMPLIES (EQ x n) (EQ fx (F n))))))))

;; fib2_aux_po_2, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 1 x) (<= x n))
         (AND (EQ fx (F x)) (EQ fx_1 (F (- x 1)))))
(IMPLIES (NEQ x n) (AND (<= 0 (- n x)) (< (- n (+ x 1)) (- n x)))))))))

;; fib2_aux_po_3, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 1 x) (<= x n))
         (AND (EQ fx (F x)) (EQ fx_1 (F (- x 1)))))
(IMPLIES (NEQ x n)
(AND (AND (<= 1 (+ x 1)) (<= (+ x 1) n))
(AND (EQ (+ fx fx_1) (F (+ x 1))) (EQ fx (F (- (+ x 1) 1)))))))))))

;; fib2_po_1, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (<= n 1) (EQ 1 (F n)))))

;; fib2_po_2, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 1)
(AND (AND (<= 1 1) (<= 1 n)) (AND (EQ 1 (F 1)) (EQ 1 (F (- 1 1))))))))

;; fib3_po_1, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 0)
(AND (AND (<= 1 1) (<= 1 n)) (AND (EQ 1 (F 1)) (EQ 1 (F (- 1 1))))))))

;; fib3_po_2, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 0)
(FORALL (k)
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (AND (<= 1 k) (<= k n)) (AND (EQ x (F k)) (EQ y (F (- k 1)))))
(IMPLIES (< k n)
(FORALL (y0)
(IMPLIES (EQ y0 x)
(FORALL (x0)
(IMPLIES (EQ x0 (+ x y))
(FORALL (k0)
(IMPLIES (EQ k0 (+ k 1))
(AND
(AND (AND (<= 1 k0) (<= k0 n)) (AND (EQ x0 (F k0)) (EQ y0 (F (- k0 1)))))
(AND (<= 0 (- n k)) (< (- n k0) (- n k))))))))))))))))))

;; fib3_po_3, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 0)
(FORALL (k)
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (AND (<= 1 k) (<= k n)) (AND (EQ x (F k)) (EQ y (F (- k 1)))))
(IMPLIES (>= k n) (EQ x (F n))))))))))

;; fib3_po_4, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (<= n 0) (EQ 1 (F n)))))

;; fib4_po_1, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (<= n 1) (EQ 1 (F n))))))

;; fib4_po_2, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(AND (AND (<= 2 2) (<= 2 (+ n 1)))
(AND (EQ (array_length t1) (array_length t))
(FORALL (i) (IMPLIES (AND (<= 0 i) (< i 2)) (EQ (select t1 i) (F i))))))))))))))

;; fib4_po_3, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (select t2 i) (F i))))))
(IMPLIES (<= k n)
(FORALL (result)
(IMPLIES (EQ result (select t2 (- k 1)))
(FORALL (result0)
(IMPLIES (EQ result0 (select t2 (- k 2)))
(FORALL (t3)
(IMPLIES (EQ t3 (update t2 k (+ result result0)))
(FORALL (k0)
(IMPLIES (EQ k0 (+ k 1))
(AND
(AND (AND (<= 2 k0) (<= k0 (+ n 1)))
(AND (EQ (array_length t3) (array_length t))
(FORALL (i) (IMPLIES (AND (<= 0 i) (< i k0)) (EQ (select t3 i) (F i))))))
(AND (<= 0 (- (+ n 1) k)) (< (- (+ n 1) k0) (- (+ n 1) k))))))))))))))))))))))))

;; fib4_po_4, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (select t2 i) (F i))))))
(IMPLIES (<= k n)
(FORALL (result)
(IMPLIES (EQ result (select t2 (- k 1)))
(FORALL (result0)
(IMPLIES (EQ result0 (select t2 (- k 2)))
(AND (<= 0 k) (< k (array_length t2)))))))))))))))))))

;; fib4_po_5, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (select t2 i) (F i))))))
(IMPLIES (<= k n)
(FORALL (result)
(IMPLIES (EQ result (select t2 (- k 1)))
(AND (<= 0 (- k 2)) (< (- k 2) (array_length t2)))))))))))))))))

;; fib4_po_6, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (select t2 i) (F i))))))
(IMPLIES (<= k n) (AND (<= 0 (- k 1)) (< (- k 1) (array_length t2)))))))))))))))

;; fib4_po_7, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (select t2 i) (F i))))))
(IMPLIES (> k n)
(FORALL (result) (IMPLIES (EQ result (select t2 n)) (EQ result (F n))))))))))))))))

;; fib4_po_8, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (select t2 i) (F i))))))
(IMPLIES (> k n) (AND (<= 0 n) (< n (array_length t2)))))))))))))))

;; fib4_po_9, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1)) (AND (<= 0 1) (< 1 (array_length t0)))))))))

;; fib4_po_10, Why obligation from file "fib.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1) (AND (<= 0 0) (< 0 (array_length t)))))))

