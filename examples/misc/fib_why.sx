
;; DO NOT EDIT BELOW THIS LINE

(BG_PUSH (NEQ |@true| |@false|))

(BG_PUSH
 ;; Why axiom bool_and_def
 (FORALL (a b)
 (IFF (EQ (bool_and a b) |@true|) (AND (EQ a |@true|) (EQ b |@true|)))))

(BG_PUSH
 ;; Why axiom bool_or_def
 (FORALL (a b)
 (IFF (EQ (bool_or a b) |@true|) (OR (EQ a |@true|) (EQ b |@true|)))))

(BG_PUSH
 ;; Why axiom bool_xor_def
 (FORALL (a b) (IFF (EQ (bool_xor a b) |@true|) (NEQ a b))))

(BG_PUSH
 ;; Why axiom bool_not_def
 (FORALL (a) (IFF (EQ (bool_not a) |@true|) (EQ a |@false|))))

(BG_PUSH
 ;; Why axiom ite_true
 (FORALL (x y) (EQ (ite |@true| x y) x)))

(BG_PUSH
 ;; Why axiom ite_false
 (FORALL (x y) (EQ (ite |@false| x y) y)))

(BG_PUSH
 ;; Why axiom lt_int_bool_axiom
 (FORALL (x y) (IFF (EQ (lt_int_bool x y) |@true|) (< x y))))

(BG_PUSH
 ;; Why axiom le_int_bool_axiom
 (FORALL (x y) (IFF (EQ (le_int_bool x y) |@true|) (<= x y))))

(BG_PUSH
 ;; Why axiom gt_int_bool_axiom
 (FORALL (x y) (IFF (EQ (gt_int_bool x y) |@true|) (> x y))))

(BG_PUSH
 ;; Why axiom ge_int_bool_axiom
 (FORALL (x y) (IFF (EQ (ge_int_bool x y) |@true|) (>= x y))))

(BG_PUSH
 ;; Why axiom eq_int_bool_axiom
 (FORALL (x y) (IFF (EQ (eq_int_bool x y) |@true|) (EQ x y))))

(BG_PUSH
 ;; Why axiom neq_int_bool_axiom
 (FORALL (x y) (IFF (EQ (neq_int_bool x y) |@true|) (NEQ x y))))

(BG_PUSH
 ;; Why axiom lt_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (lt_real_bool x y) |@true|) (EQ (lt_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom le_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (le_real_bool x y) |@true|) (EQ (le_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom gt_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (gt_real_bool x y) |@true|) (EQ (gt_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom ge_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (ge_real_bool x y) |@true|) (EQ (ge_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom eq_real_bool_axiom
 (FORALL (x y) (IFF (EQ (eq_real_bool x y) |@true|) (EQ x y))))

(BG_PUSH
 ;; Why axiom neq_real_bool_axiom
 (FORALL (x y) (IFF (EQ (neq_real_bool x y) |@true|) (NEQ x y))))

(DEFPRED (zwf_zero a b) (AND (<= 0 b) (< a b)))

(BG_PUSH
 ;; Why axiom access_update
 (FORALL (a i v) (EQ (access (update a i v) i) v)))

(BG_PUSH
 ;; Why axiom access_update_neq
 (FORALL (a i j v)
 (IMPLIES (NEQ i j) (EQ (access (update a i v) j) (access a j))))

 (FORALL (i j)
 (IMPLIES (NEQ i j)
 (FORALL (a v) (EQ (access (update a i v) j) (access a j))))))

(DEFPRED (sorted_array t i j)
  (FORALL (k1 k2)
  (IMPLIES (AND (AND (<= i k1) (<= k1 k2)) (<= k2 j))
  (<= (access t k1) (access t k2)))))

(DEFPRED (exchange a1 a2 i j)
  (AND (EQ (array_length a1) (array_length a2))
  (AND (EQ (access a1 i) (access a2 j))
  (AND (EQ (access a2 i) (access a1 j))
  (FORALL (k)
  (IMPLIES (AND (NEQ k i) (NEQ k j)) (EQ (access a1 k) (access a2 k))))))))

(BG_PUSH
 ;; Why axiom permut_refl
 (FORALL (t l u) (EQ (permut t t l u) |@true|)))

(BG_PUSH
 ;; Why axiom permut_sym
 (FORALL (t1 t2 l u)
 (IMPLIES (EQ (permut t1 t2 l u) |@true|) (EQ (permut t2 t1 l u) |@true|))))

(BG_PUSH
 ;; Why axiom permut_trans
 (FORALL (t1 t2 t3 l u)
 (IMPLIES (EQ (permut t1 t2 l u) |@true|)
 (IMPLIES (EQ (permut t2 t3 l u) |@true|) (EQ (permut t1 t3 l u) |@true|))))

 (FORALL (t1 t2 l u)
 (IMPLIES (EQ (permut t1 t2 l u) |@true|)
 (FORALL (t3)
 (IMPLIES (EQ (permut t2 t3 l u) |@true|) (EQ (permut t1 t3 l u) |@true|))))))

(BG_PUSH
 ;; Why axiom permut_exchange
 (FORALL (a1 a2 l u i j)
 (IMPLIES (AND (<= l i) (<= i u))
 (IMPLIES (AND (<= l j) (<= j u))
 (IMPLIES (exchange a1 a2 i j) (EQ (permut a1 a2 l u) |@true|)))))

 (FORALL (l u i)
 (IMPLIES (AND (<= l i) (<= i u))
 (FORALL (j)
 (IMPLIES (AND (<= l j) (<= j u))
 (FORALL (a1 a2)
 (IMPLIES (exchange a1 a2 i j) (EQ (permut a1 a2 l u) |@true|))))))))

(BG_PUSH
 ;; Why axiom exchange_upd
 (FORALL (a i j)
 (exchange a (update (update a i (access a j)) j (access a i)) i j)))

(BG_PUSH
 ;; Why axiom permut_weakening
 (FORALL (a1 a2 l1 r1 l2 r2)
 (IMPLIES (AND (AND (<= l1 l2) (<= l2 r2)) (<= r2 r1))
 (IMPLIES (EQ (permut a1 a2 l2 r2) |@true|)
 (EQ (permut a1 a2 l1 r1) |@true|))))

 (FORALL (l1 r1 l2 r2)
 (IMPLIES (AND (AND (<= l1 l2) (<= l2 r2)) (<= r2 r1))
 (FORALL (a2 a1)
 (IMPLIES (EQ (permut a1 a2 l2 r2) |@true|)
 (EQ (permut a1 a2 l1 r1) |@true|))))))

(BG_PUSH
 ;; Why axiom permut_eq
 (FORALL (a1 a2 l u)
 (IMPLIES (<= l u)
 (IMPLIES (EQ (permut a1 a2 l u) |@true|)
 (FORALL (i) (IMPLIES (OR (< i l) (< u i)) (EQ (access a2 i) (access a1 i)))))))

 (FORALL (l u)
 (IMPLIES (<= l u)
 (FORALL (a2 a1)
 (IMPLIES (EQ (permut a1 a2 l u) |@true|)
 (FORALL (i) (IMPLIES (OR (< i l) (< u i)) (EQ (access a2 i) (access a1 i)))))))))

(DEFPRED (permutation a1 a2)
  (EQ (permut a1 a2 0 (- (array_length a1) 1)) |@true|))

(BG_PUSH
 ;; Why axiom array_length_update
 (FORALL (a i v) (EQ (array_length (update a i v)) (array_length a))))

(BG_PUSH
 ;; Why axiom permut_array_length
 (FORALL (a1 a2 l u)
 (IMPLIES (EQ (permut a1 a2 l u) |@true|)
 (EQ (array_length a1) (array_length a2)))))

(BG_PUSH
 ;; Why axiom F_0
 (EQ (F 0) 1))

(BG_PUSH
 ;; Why axiom F_1
 (EQ (F 1) 1))

(BG_PUSH
 ;; Why axiom F_n
 (FORALL (n) (IMPLIES (>= n 2) (EQ (F n) (+ (F (- n 1)) (F (- n 2)))))))

;; fib1_po_1, File "fib.mlw", line 24, characters 4-17
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (<= n 1) (EQ 1 (F n)))))

;; fib1_po_2, File "fib.mlw", line 23, characters 6-18
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (> n 1) (<= 0 n))))

;; fib1_po_3, File "fib.mlw", line 23, characters 6-18
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (> n 1) (< (- n 1) n))))

;; fib1_po_4, File "fib.mlw", line 23, characters 6-18
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 1) (IMPLIES (AND (<= 0 n) (< (- n 1) n)) (>= (- n 1) 0)))))

;; fib1_po_5, File "fib.mlw", line 23, characters 23-35
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 n) (< (- n 1) n))
(IMPLIES (>= (- n 1) 0)
(FORALL (result) (IMPLIES (EQ result (F (- n 1))) (<= 0 n))))))))

;; fib1_po_6, File "fib.mlw", line 23, characters 23-35
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 n) (< (- n 1) n))
(IMPLIES (>= (- n 1) 0)
(FORALL (result) (IMPLIES (EQ result (F (- n 1))) (< (- n 2) n))))))))

;; fib1_po_7, File "fib.mlw", line 23, characters 23-35
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 n) (< (- n 1) n))
(IMPLIES (>= (- n 1) 0)
(FORALL (result)
(IMPLIES (EQ result (F (- n 1)))
(IMPLIES (AND (<= 0 n) (< (- n 2) n)) (>= (- n 2) 0)))))))))

;; fib1_po_8, File "fib.mlw", line 24, characters 4-17
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 n) (< (- n 1) n))
(IMPLIES (>= (- n 1) 0)
(FORALL (result)
(IMPLIES (EQ result (F (- n 1)))
(IMPLIES (AND (<= 0 n) (< (- n 2) n))
(IMPLIES (>= (- n 2) 0)
(FORALL (result0)
(IMPLIES (EQ result0 (F (- n 2))) (EQ (+ result result0) (F n)))))))))))))

;; fib2_aux_po_1, File "fib.mlw", line 34, characters 4-17
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 1 x) (<= x n))
         (AND (EQ fx (F x)) (EQ fx_1 (F (- x 1)))))
(IMPLIES (EQ x n) (EQ fx (F n))))))))

;; fib2_aux_po_2, File "fib.mlw", line 33, characters 6-35
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 1 x) (<= x n))
         (AND (EQ fx (F x)) (EQ fx_1 (F (- x 1)))))
(IMPLIES (NEQ x n) (<= 0 (- n x))))))))

;; fib2_aux_po_3, File "fib.mlw", line 33, characters 6-35
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 1 x) (<= x n))
         (AND (EQ fx (F x)) (EQ fx_1 (F (- x 1)))))
(IMPLIES (NEQ x n) (< (- n (+ x 1)) (- n x))))))))

;; fib2_aux_po_4, File "fib.mlw", line 33, characters 6-35
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 1 x) (<= x n))
         (AND (EQ fx (F x)) (EQ fx_1 (F (- x 1)))))
(IMPLIES (NEQ x n)
(IMPLIES (AND (<= 0 (- n x)) (< (- n (+ x 1)) (- n x))) (<= 1 (+ x 1)))))))))

;; fib2_aux_po_5, File "fib.mlw", line 33, characters 6-35
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 1 x) (<= x n))
         (AND (EQ fx (F x)) (EQ fx_1 (F (- x 1)))))
(IMPLIES (NEQ x n)
(IMPLIES (AND (<= 0 (- n x)) (< (- n (+ x 1)) (- n x))) (<= (+ x 1) n))))))))

;; fib2_aux_po_6, File "fib.mlw", line 33, characters 6-35
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 1 x) (<= x n))
         (AND (EQ fx (F x)) (EQ fx_1 (F (- x 1)))))
(IMPLIES (NEQ x n)
(IMPLIES (AND (<= 0 (- n x)) (< (- n (+ x 1)) (- n x)))
(EQ (+ fx fx_1) (F (+ x 1))))))))))

;; fib2_aux_po_7, File "fib.mlw", line 33, characters 6-35
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 1 x) (<= x n))
         (AND (EQ fx (F x)) (EQ fx_1 (F (- x 1)))))
(IMPLIES (NEQ x n)
(IMPLIES (AND (<= 0 (- n x)) (< (- n (+ x 1)) (- n x)))
(EQ fx (F (- (+ x 1) 1))))))))))

;; fib2_po_1, File "fib.mlw", line 39, characters 4-17
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (<= n 1) (EQ 1 (F n)))))

;; fib2_po_2, File "fib.mlw", line 38, characters 26-42
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (> n 1) (<= 1 1))))

;; fib2_po_3, File "fib.mlw", line 38, characters 26-42
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (> n 1) (<= 1 n))))

;; fib2_po_4, File "fib.mlw", line 38, characters 26-42
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (> n 1) (EQ 1 (F 1)))))

;; fib2_po_5, File "fib.mlw", line 38, characters 26-42
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (> n 1) (EQ 1 (F (- 1 1))))))

;; fib2b_po_1, File "fib.mlw", line 49, characters 24-40
(FORALL (n) (IMPLIES (> n 1) (<= 0 (- n 1))))

;; fib2b_po_2, File "fib.mlw", line 49, characters 24-40
(FORALL (n) (IMPLIES (> n 1) (< (- n 1) n)))

;; fib2b_po_3, File "fib.mlw", line 49, characters 24-40
(FORALL (n) (IMPLIES (> n 1) (EQ 1 (F (- n (- n 1))))))

;; fib2b_po_4, File "fib.mlw", line 49, characters 24-40
(FORALL (n) (IMPLIES (> n 1) (EQ 1 (F (- (- n (- n 1)) 1)))))

;; fib2b_po_5, File "fib.mlw", line 47, characters 6-19
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 0 x) (< x n))
         (AND (EQ fx (F (- n x))) (EQ fx_1 (F (- (- n x) 1)))))
(IMPLIES (EQ x 0) (EQ fx (F n))))))))

;; fib2b_po_6, File "fib.mlw", line 46, characters 26-51
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 0 x) (< x n))
         (AND (EQ fx (F (- n x))) (EQ fx_1 (F (- (- n x) 1)))))
(IMPLIES (NEQ x 0) (<= 0 x)))))))

;; fib2b_po_7, File "fib.mlw", line 46, characters 26-51
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 0 x) (< x n))
         (AND (EQ fx (F (- n x))) (EQ fx_1 (F (- (- n x) 1)))))
(IMPLIES (NEQ x 0) (< (- x 1) x)))))))

;; fib2b_po_8, File "fib.mlw", line 46, characters 26-51
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 0 x) (< x n))
         (AND (EQ fx (F (- n x))) (EQ fx_1 (F (- (- n x) 1)))))
(IMPLIES (NEQ x 0) (IMPLIES (AND (<= 0 x) (< (- x 1) x)) (<= 0 (- x 1)))))))))

;; fib2b_po_9, File "fib.mlw", line 46, characters 26-51
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 0 x) (< x n))
         (AND (EQ fx (F (- n x))) (EQ fx_1 (F (- (- n x) 1)))))
(IMPLIES (NEQ x 0) (IMPLIES (AND (<= 0 x) (< (- x 1) x)) (< (- x 1) n))))))))

;; fib2b_po_10, File "fib.mlw", line 46, characters 26-51
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 0 x) (< x n))
         (AND (EQ fx (F (- n x))) (EQ fx_1 (F (- (- n x) 1)))))
(IMPLIES (NEQ x 0)
(IMPLIES (AND (<= 0 x) (< (- x 1) x)) (EQ (+ fx fx_1) (F (- n (- x 1)))))))))))

;; fib2b_po_11, File "fib.mlw", line 46, characters 26-51
(FORALL (n)
(FORALL (x)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (AND (AND (<= 0 x) (< x n))
         (AND (EQ fx (F (- n x))) (EQ fx_1 (F (- (- n x) 1)))))
(IMPLIES (NEQ x 0)
(IMPLIES (AND (<= 0 x) (< (- x 1) x)) (EQ fx (F (- (- n (- x 1)) 1))))))))))

;; fib2c_aux_po_1, File "fib.mlw", line 56, characters 4-67
(FORALL (n)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (<= 0 n)
(IMPLIES (EQ n 0)
(FORALL (x)
(IMPLIES (<= 1 x)
(IMPLIES (EQ fx (F x)) (IMPLIES (EQ fx_1 (F (- x 1))) (EQ fx (F (+ x n))))))))))))

;; fib2c_aux_po_2, File "fib.mlw", line 55, characters 24-52
(FORALL (n) (IMPLIES (<= 0 n) (IMPLIES (NEQ n 0) (< (- n 1) n))))

;; fib2c_aux_po_3, File "fib.mlw", line 55, characters 24-52
(FORALL (n)
(IMPLIES (<= 0 n)
(IMPLIES (NEQ n 0) (IMPLIES (AND (<= 0 n) (< (- n 1) n)) (<= 0 (- n 1))))))

;; fib2c_aux_po_4, File "fib.mlw", line 56, characters 4-67
(FORALL (n)
(FORALL (fx)
(FORALL (fx_1)
(IMPLIES (<= 0 n)
(IMPLIES (NEQ n 0)
(IMPLIES (AND (<= 0 n) (< (- n 1) n))
(IMPLIES (<= 0 (- n 1))
(FORALL (result)
(IMPLIES (FORALL (x)
         (IMPLIES (<= 1 x)
         (IMPLIES (EQ (+ fx fx_1) (F x))
         (IMPLIES (EQ fx (F (- x 1))) (EQ result (F (+ x (- n 1))))))))
(FORALL (x)
(IMPLIES (<= 1 x)
(IMPLIES (EQ fx (F x))
(IMPLIES (EQ fx_1 (F (- x 1))) (EQ result (F (+ x n))))))))))))))))

;; fib2c_po_1, File "fib.mlw", line 61, characters 4-17
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (<= n 1) (EQ 1 (F n)))))

;; fib2c_po_2, File "fib.mlw", line 60, characters 25-44
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (> n 1) (<= 0 (- n 1)))))

;; fib2c_po_3, File "fib.mlw", line 61, characters 4-17
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 1)
(IMPLIES (<= 0 (- n 1))
(FORALL (result)
(IMPLIES (FORALL (x)
         (IMPLIES (<= 1 x)
         (IMPLIES (EQ 1 (F x))
         (IMPLIES (EQ 1 (F (- x 1))) (EQ result (F (+ x (- n 1))))))))
(EQ result (F n))))))))

;; fib3_po_1, File "fib.mlw", line 73, characters 18-57
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (> n 0) (<= 1 1))))

;; fib3_po_2, File "fib.mlw", line 73, characters 18-57
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (> n 0) (<= 1 n))))

;; fib3_po_3, File "fib.mlw", line 73, characters 18-57
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (> n 0) (EQ 1 (F 1)))))

;; fib3_po_4, File "fib.mlw", line 73, characters 18-57
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (> n 0) (EQ 1 (F (- 1 1))))))

;; fib3_po_5, File "fib.mlw", line 73, characters 18-57
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 0)
(FORALL (k)
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (AND (<= 1 k) (<= k n)) (AND (EQ x (F k)) (EQ y (F (- k 1)))))
(IMPLIES (< k n)
(FORALL (y0)
(IMPLIES (EQ y0 x)
(FORALL (x0)
(IMPLIES (EQ x0 (+ x y)) (FORALL (k0) (IMPLIES (EQ k0 (+ k 1)) (<= 1 k0)))))))))))))))

;; fib3_po_6, File "fib.mlw", line 73, characters 18-57
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 0)
(FORALL (k)
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (AND (<= 1 k) (<= k n)) (AND (EQ x (F k)) (EQ y (F (- k 1)))))
(IMPLIES (< k n)
(FORALL (y0)
(IMPLIES (EQ y0 x)
(FORALL (x0)
(IMPLIES (EQ x0 (+ x y)) (FORALL (k0) (IMPLIES (EQ k0 (+ k 1)) (<= k0 n)))))))))))))))

;; fib3_po_7, File "fib.mlw", line 73, characters 18-57
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 0)
(FORALL (k)
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (AND (<= 1 k) (<= k n)) (AND (EQ x (F k)) (EQ y (F (- k 1)))))
(IMPLIES (< k n)
(FORALL (y0)
(IMPLIES (EQ y0 x)
(FORALL (x0)
(IMPLIES (EQ x0 (+ x y))
(FORALL (k0) (IMPLIES (EQ k0 (+ k 1)) (EQ x0 (F k0))))))))))))))))

;; fib3_po_8, File "fib.mlw", line 73, characters 18-57
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 0)
(FORALL (k)
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (AND (<= 1 k) (<= k n)) (AND (EQ x (F k)) (EQ y (F (- k 1)))))
(IMPLIES (< k n)
(FORALL (y0)
(IMPLIES (EQ y0 x)
(FORALL (x0)
(IMPLIES (EQ x0 (+ x y))
(FORALL (k0) (IMPLIES (EQ k0 (+ k 1)) (EQ y0 (F (- k0 1)))))))))))))))))

;; fib3_po_9, File "fib.mlw", line 73, characters 67-72
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 0)
(FORALL (k)
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (AND (<= 1 k) (<= k n)) (AND (EQ x (F k)) (EQ y (F (- k 1)))))
(IMPLIES (< k n)
(FORALL (y0)
(IMPLIES (EQ y0 x)
(FORALL (x0)
(IMPLIES (EQ x0 (+ x y))
(FORALL (k0) (IMPLIES (EQ k0 (+ k 1)) (<= 0 (- n k))))))))))))))))

;; fib3_po_10, File "fib.mlw", line 73, characters 67-72
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 0)
(FORALL (k)
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (AND (<= 1 k) (<= k n)) (AND (EQ x (F k)) (EQ y (F (- k 1)))))
(IMPLIES (< k n)
(FORALL (y0)
(IMPLIES (EQ y0 x)
(FORALL (x0)
(IMPLIES (EQ x0 (+ x y))
(FORALL (k0) (IMPLIES (EQ k0 (+ k 1)) (< (- n k0) (- n k))))))))))))))))

;; fib3_po_11, File "fib.mlw", line 83, characters 3-16
(FORALL (n)
(IMPLIES (>= n 0)
(IMPLIES (> n 0)
(FORALL (k)
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (AND (<= 1 k) (<= k n)) (AND (EQ x (F k)) (EQ y (F (- k 1)))))
(IMPLIES (>= k n) (EQ x (F n))))))))))

;; fib3_po_12, File "fib.mlw", line 83, characters 3-16
(FORALL (n) (IMPLIES (>= n 0) (IMPLIES (<= n 0) (EQ 1 (F n)))))

;; fib4_po_1, File "fib.mlw", line 107, characters 4-17
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (<= n 1) (EQ 1 (F n))))))

;; fib4_po_2, File "fib.mlw", line 95, characters 5-14
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t))) (IMPLIES (> n 1) (<= 0 0)))))

;; fib4_po_3, File "fib.mlw", line 95, characters 5-14
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1) (< 0 (array_length t))))))

;; fib4_po_4, File "fib.mlw", line 96, characters 5-14
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0) (IMPLIES (EQ t0 (update t 0 1)) (<= 0 1))))))))

;; fib4_po_5, File "fib.mlw", line 96, characters 5-14
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0) (IMPLIES (EQ t0 (update t 0 1)) (< 1 (array_length t0)))))))))

;; fib4_po_6, File "fib.mlw", line 99, characters 19-131
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1) (IMPLIES (EQ t1 (update t0 1 1)) (<= 2 2)))))))))))

;; fib4_po_7, File "fib.mlw", line 99, characters 19-131
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1) (IMPLIES (EQ t1 (update t0 1 1)) (<= 2 (+ n 1))))))))))))

;; fib4_po_8, File "fib.mlw", line 99, characters 19-131
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1)) (EQ (array_length t1) (array_length t))))))))))))

;; fib4_po_9, File "fib.mlw", line 99, characters 19-131
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (i) (IMPLIES (AND (<= 0 i) (< i 2)) (EQ (access t1 i) (F i))))))))))))))

;; fib4_po_10, File "fib.mlw", line 102, characters 16-25
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (access t2 i) (F i))))))
(IMPLIES (<= k n) (<= 0 (- k 1))))))))))))))))

;; fib4_po_11, File "fib.mlw", line 102, characters 16-25
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (access t2 i) (F i))))))
(IMPLIES (<= k n) (< (- k 1) (array_length t2))))))))))))))))

;; fib4_po_12, File "fib.mlw", line 102, characters 28-37
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (access t2 i) (F i))))))
(IMPLIES (<= k n)
(IMPLIES (AND (<= 0 (- k 1)) (< (- k 1) (array_length t2)))
(FORALL (result) (IMPLIES (EQ result (access t2 (- k 1))) (<= 0 (- k 2)))))))))))))))))))

;; fib4_po_13, File "fib.mlw", line 102, characters 28-37
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (access t2 i) (F i))))))
(IMPLIES (<= k n)
(IMPLIES (AND (<= 0 (- k 1)) (< (- k 1) (array_length t2)))
(FORALL (result)
(IMPLIES (EQ result (access t2 (- k 1))) (< (- k 2) (array_length t2)))))))))))))))))))

;; fib4_po_14, File "fib.mlw", line 102, characters 7-37
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (access t2 i) (F i))))))
(IMPLIES (<= k n)
(IMPLIES (AND (<= 0 (- k 1)) (< (- k 1) (array_length t2)))
(FORALL (result)
(IMPLIES (EQ result (access t2 (- k 1)))
(IMPLIES (AND (<= 0 (- k 2)) (< (- k 2) (array_length t2)))
(FORALL (result0) (IMPLIES (EQ result0 (access t2 (- k 2))) (<= 0 k)))))))))))))))))))))

;; fib4_po_15, File "fib.mlw", line 102, characters 7-37
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (access t2 i) (F i))))))
(IMPLIES (<= k n)
(IMPLIES (AND (<= 0 (- k 1)) (< (- k 1) (array_length t2)))
(FORALL (result)
(IMPLIES (EQ result (access t2 (- k 1)))
(IMPLIES (AND (<= 0 (- k 2)) (< (- k 2) (array_length t2)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t2 (- k 2))) (< k (array_length t2))))))))))))))))))))))

;; fib4_po_16, File "fib.mlw", line 99, characters 19-131
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (access t2 i) (F i))))))
(IMPLIES (<= k n)
(IMPLIES (AND (<= 0 (- k 1)) (< (- k 1) (array_length t2)))
(FORALL (result)
(IMPLIES (EQ result (access t2 (- k 1)))
(IMPLIES (AND (<= 0 (- k 2)) (< (- k 2) (array_length t2)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t2 (- k 2)))
(IMPLIES (AND (<= 0 k) (< k (array_length t2)))
(FORALL (t3)
(IMPLIES (EQ t3 (update t2 k (+ result result0)))
(FORALL (k0) (IMPLIES (EQ k0 (+ k 1)) (<= 2 k0))))))))))))))))))))))))))

;; fib4_po_17, File "fib.mlw", line 99, characters 19-131
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (access t2 i) (F i))))))
(IMPLIES (<= k n)
(IMPLIES (AND (<= 0 (- k 1)) (< (- k 1) (array_length t2)))
(FORALL (result)
(IMPLIES (EQ result (access t2 (- k 1)))
(IMPLIES (AND (<= 0 (- k 2)) (< (- k 2) (array_length t2)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t2 (- k 2)))
(IMPLIES (AND (<= 0 k) (< k (array_length t2)))
(FORALL (t3)
(IMPLIES (EQ t3 (update t2 k (+ result result0)))
(FORALL (k0) (IMPLIES (EQ k0 (+ k 1)) (<= k0 (+ n 1)))))))))))))))))))))))))))

;; fib4_po_18, File "fib.mlw", line 99, characters 19-131
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (access t2 i) (F i))))))
(IMPLIES (<= k n)
(IMPLIES (AND (<= 0 (- k 1)) (< (- k 1) (array_length t2)))
(FORALL (result)
(IMPLIES (EQ result (access t2 (- k 1)))
(IMPLIES (AND (<= 0 (- k 2)) (< (- k 2) (array_length t2)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t2 (- k 2)))
(IMPLIES (AND (<= 0 k) (< k (array_length t2)))
(FORALL (t3)
(IMPLIES (EQ t3 (update t2 k (+ result result0)))
(FORALL (k0)
(IMPLIES (EQ k0 (+ k 1)) (EQ (array_length t3) (array_length t)))))))))))))))))))))))))))

;; fib4_po_19, File "fib.mlw", line 99, characters 19-131
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (access t2 i) (F i))))))
(IMPLIES (<= k n)
(IMPLIES (AND (<= 0 (- k 1)) (< (- k 1) (array_length t2)))
(FORALL (result)
(IMPLIES (EQ result (access t2 (- k 1)))
(IMPLIES (AND (<= 0 (- k 2)) (< (- k 2) (array_length t2)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t2 (- k 2)))
(IMPLIES (AND (<= 0 k) (< k (array_length t2)))
(FORALL (t3)
(IMPLIES (EQ t3 (update t2 k (+ result result0)))
(FORALL (k0)
(IMPLIES (EQ k0 (+ k 1))
(FORALL (i) (IMPLIES (AND (<= 0 i) (< i k0)) (EQ (access t3 i) (F i)))))))))))))))))))))))))))))

;; fib4_po_20, File "fib.mlw", line 101, characters 17-24
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (access t2 i) (F i))))))
(IMPLIES (<= k n)
(IMPLIES (AND (<= 0 (- k 1)) (< (- k 1) (array_length t2)))
(FORALL (result)
(IMPLIES (EQ result (access t2 (- k 1)))
(IMPLIES (AND (<= 0 (- k 2)) (< (- k 2) (array_length t2)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t2 (- k 2)))
(IMPLIES (AND (<= 0 k) (< k (array_length t2)))
(FORALL (t3)
(IMPLIES (EQ t3 (update t2 k (+ result result0)))
(FORALL (k0) (IMPLIES (EQ k0 (+ k 1)) (<= 0 (- (+ n 1) k)))))))))))))))))))))))))))

;; fib4_po_21, File "fib.mlw", line 101, characters 17-24
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (access t2 i) (F i))))))
(IMPLIES (<= k n)
(IMPLIES (AND (<= 0 (- k 1)) (< (- k 1) (array_length t2)))
(FORALL (result)
(IMPLIES (EQ result (access t2 (- k 1)))
(IMPLIES (AND (<= 0 (- k 2)) (< (- k 2) (array_length t2)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t2 (- k 2)))
(IMPLIES (AND (<= 0 k) (< k (array_length t2)))
(FORALL (t3)
(IMPLIES (EQ t3 (update t2 k (+ result result0)))
(FORALL (k0) (IMPLIES (EQ k0 (+ k 1)) (< (- (+ n 1) k0) (- (+ n 1) k)))))))))))))))))))))))))))

;; fib4_po_22, File "fib.mlw", line 105, characters 5-9
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (access t2 i) (F i))))))
(IMPLIES (> k n) (< n (array_length t2))))))))))))))))

;; fib4_po_23, File "fib.mlw", line 107, characters 4-17
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n) (< n (array_length t)))
(IMPLIES (> n 1)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (update t 0 1))
(IMPLIES (AND (<= 0 1) (< 1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 1 1))
(FORALL (k)
(FORALL (t2)
(IMPLIES (AND (AND (<= 2 k) (<= k (+ n 1)))
         (AND (EQ (array_length t2) (array_length t))
         (FORALL (i)
         (IMPLIES (AND (<= 0 i) (< i k)) (EQ (access t2 i) (F i))))))
(IMPLIES (> k n)
(IMPLIES (AND (<= 0 n) (< n (array_length t2)))
(FORALL (result) (IMPLIES (EQ result (access t2 n)) (EQ result (F n)))))))))))))))))))

