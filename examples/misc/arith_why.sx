(BG_PUSH 
  (FORALL (t i v) (EQ (array_length (store t i v)) (array_length t)))
  (FORALL (x) (OR (EQ (int_mod x 2) 0) (EQ (int_mod x 2) 1)))
  (FORALL (x) (IMPLIES (EQ (int_mod x 2) 0) (EQ x (* 2 (int_div x 2)))))
  (FORALL (x) (IMPLIES (EQ (int_mod x 2) 1) 
	               (EQ x (+ (* 2 (int_div x 2)) 1))))
  (FORALL (x) (EQ x (+ (* 2 (int_div x 2)) (int_mod x 2))))
  (EQ (int_div 1 2) 0)
)


;; DO NOT EDIT BELOW THIS LINE

;; mult_po_1, Why obligation from file "arith.mlw", characters 358-367
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (a)
(IMPLIES (EQ a x)
(FORALL (b)
(IMPLIES (EQ b y)
(FORALL (p)
(IMPLIES (EQ p 0)
(FORALL (Variant1)
(FORALL (a1)
(FORALL (b1)
(FORALL (p1)
(IMPLIES (EQ Variant1 a1)
(IMPLIES (AND (>= a1 0) (EQ (+ p1 (* a1 b1)) (* x y)))
(IMPLIES (NEQ a1 0) (NEQ 2 0)))))))))))))))))

;; mult_po_2, Why obligation from file "arith.mlw", characters 374-385
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (a)
(IMPLIES (EQ a x)
(FORALL (b)
(IMPLIES (EQ b y)
(FORALL (p)
(IMPLIES (EQ p 0)
(FORALL (Variant1)
(FORALL (a1)
(FORALL (b1)
(FORALL (p1)
(IMPLIES (EQ Variant1 a1)
(IMPLIES (AND (>= a1 0) (EQ (+ p1 (* a1 b1)) (* x y)))
(IMPLIES (NEQ a1 0)
(IMPLIES (NEQ 2 0)
(IMPLIES (EQ (int_mod a1 2) 1)
(FORALL (p2)
(IMPLIES (EQ p2 (+ p1 b1))
(FORALL (a)
(IMPLIES (EQ a (int_div a1 2))
(FORALL (b)
(IMPLIES (EQ b (* 2 b1))
(AND (AND (>= a 0) (EQ (+ p2 (* a b)) (* x y))) (AND (<= 0 a1) (< a a1)))))))))))))))))))))))))))

;; mult_po_3, Why obligation from file "arith.mlw", characters 385-385
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (a)
(IMPLIES (EQ a x)
(FORALL (b)
(IMPLIES (EQ b y)
(FORALL (p)
(IMPLIES (EQ p 0)
(FORALL (Variant1)
(FORALL (a1)
(FORALL (b1)
(FORALL (p1)
(IMPLIES (EQ Variant1 a1)
(IMPLIES (AND (>= a1 0) (EQ (+ p1 (* a1 b1)) (* x y)))
(IMPLIES (NEQ a1 0)
(IMPLIES (NEQ 2 0)
(IMPLIES (NEQ (int_mod a1 2) 1)
(FORALL (result1)
(IMPLIES (EQ result1 tt)
(FORALL (a)
(IMPLIES (EQ a (int_div a1 2))
(FORALL (b)
(IMPLIES (EQ b (* 2 b1))
(AND (AND (>= a 0) (EQ (+ p1 (* a b)) (* x y))) (AND (<= 0 a1) (< a a1)))))))))))))))))))))))))))

;; mult_po_4, Why obligation from file "arith.mlw", characters 268-432
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (a)
(IMPLIES (EQ a x)
(FORALL (b)
(IMPLIES (EQ b y)
(FORALL (p)
(IMPLIES (EQ p 0)
(FORALL (Variant1)
(FORALL (a1)
(FORALL (b1)
(FORALL (p1)
(IMPLIES (EQ Variant1 a1)
(IMPLIES (AND (>= a1 0) (EQ (+ p1 (* a1 b1)) (* x y)))
(IMPLIES (EQ a1 0)
(FORALL (result) (IMPLIES (EQ result p1) (EQ result (* x y))))))))))))))))))))

;; mult_po_5, Why obligation from file "arith.mlw", characters 304-330
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (a)
(IMPLIES (EQ a x)
(FORALL (b)
(IMPLIES (EQ b y)
(FORALL (p) (IMPLIES (EQ p 0) (AND (>= a 0) (EQ (+ p (* a b)) (* x y))))))))))))

