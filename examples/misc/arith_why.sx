(BG_PUSH 
  (FORALL (t i v) (EQ (array_length (store t i v)) (array_length t)))
  (FORALL (x) (OR (EQ (int_mod x 2) 0) (EQ (int_mod x 2) 1)))
  (FORALL (x) (IMPLIES (EQ (int_mod x 2) 0) (EQ x (* 2 (int_div x 2)))))
  (FORALL (x) (IMPLIES (EQ (int_mod x 2) 1) 
	               (EQ x (+ (* 2 (int_div x 2)) 1))))
  (FORALL (x) (EQ x (+ (* 2 (int_div x 2)) (int_mod x 2))))
  (EQ (int_div 1 2) 0)
)


;; DO NOT EDIT BELOW THIS LINE

;; mult_po_1, Why obligation from file "arith.mlw", line 0, characters 0-0:
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (>= x 0) (>= y 0)) (AND (>= x 0) (EQ (+ 0 (* x y)) (* x y))))))

;; mult_po_2, Why obligation from file "arith.mlw", line 0, characters 0-0:
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (a)
(FORALL (b)
(FORALL (p)
(IMPLIES (AND (>= a 0) (EQ (+ p (* a b)) (* x y)))
(IMPLIES (NEQ a 0)
(IMPLIES (EQ (int_mod a 2) 1)
(FORALL (p0)
(IMPLIES (EQ p0 (+ p b))
(FORALL (result)
(IMPLIES (EQ result (int_div a 2))
(FORALL (a0)
(IMPLIES (EQ a0 result)
(FORALL (b0)
(IMPLIES (EQ b0 (* 2 b))
(AND (AND (>= a0 0) (EQ (+ p0 (* a0 b0)) (* x y))) (AND (<= 0 a) (< a0 a))))))))))))))))))))

;; mult_po_3, Why obligation from file "arith.mlw", line 0, characters 0-0:
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (a)
(FORALL (b)
(FORALL (p)
(IMPLIES (AND (>= a 0) (EQ (+ p (* a b)) (* x y)))
(IMPLIES (NEQ a 0)
(IMPLIES (EQ (int_mod a 2) 1)
(FORALL (p0) (IMPLIES (EQ p0 (+ p b)) (NEQ 2 0))))))))))))

;; mult_po_4, Why obligation from file "arith.mlw", line 0, characters 0-0:
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (a)
(FORALL (b)
(FORALL (p)
(IMPLIES (AND (>= a 0) (EQ (+ p (* a b)) (* x y)))
(IMPLIES (NEQ a 0)
(IMPLIES (NEQ (int_mod a 2) 1)
(FORALL (result)
(IMPLIES (EQ result (int_div a 2))
(FORALL (a0)
(IMPLIES (EQ a0 result)
(FORALL (b0)
(IMPLIES (EQ b0 (* 2 b))
(AND (AND (>= a0 0) (EQ (+ p (* a0 b0)) (* x y))) (AND (<= 0 a) (< a0 a))))))))))))))))))

;; mult_po_5, Why obligation from file "arith.mlw", line 0, characters 0-0:
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (a)
(FORALL (b)
(FORALL (p)
(IMPLIES (AND (>= a 0) (EQ (+ p (* a b)) (* x y)))
(IMPLIES (NEQ a 0) (IMPLIES (NEQ (int_mod a 2) 1) (NEQ 2 0))))))))))

;; mult_po_6, Why obligation from file "arith.mlw", line 0, characters 0-0:
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (>= x 0) (>= y 0))
(FORALL (a)
(FORALL (b)
(FORALL (p)
(IMPLIES (AND (>= a 0) (EQ (+ p (* a b)) (* x y)))
(IMPLIES (EQ a 0) (EQ p (* x y))))))))))

