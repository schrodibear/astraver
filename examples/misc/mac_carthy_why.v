(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Why.

Lemma f91_po_1 : 
  (well_founded ? (Zwf ZERO)).
Proof.
Auto with *.
Save.

Definition max : Z->Z->Z := 
  [x,y] Cases (Z_le_gt_dec x y) of (left _) => y | (right _) => x end.

Lemma f91_po_2 : 
  (n: Z)
  (Variant1: Z)
  (n: Z)
  (Pre2: Variant1 = (max `0` `101 - n`))
  (Test2: `n <= 100`)
  (Zwf `0` (max `0` `101 - (n + 11)`) Variant1).
Proof.
Intros n Variant1 n0. Unfold Zwf max.
Case (Z_le_gt_dec `0` `101-n0`); Intros Pre2 Test2 H;
Case (Z_le_gt_dec `0` `101-(n0+11)`); Intuition; Omega.
Save.

Lemma f91_po_3 : 
  (n: Z)
  (Variant1: Z)
  (n: Z)
  (Pre2: Variant1 = (max `0` `101 - n`))
  (Test2: `n <= 100`)
  (result0: Z)
  (Post5: `n + 11 <= 100` /\ result0 = `91` \/ `n + 11 >= 101` /\
          result0 = `n + 11 - 10`)
  (Zwf `0` (max `0` `101 - result0`) Variant1).
Proof.
Intros n Variant1 n0. Unfold Zwf max.
Case (Z_le_gt_dec `0` `101-n0`); Intros H Pre2 Test2 result0 Post5;
Case (Z_le_gt_dec `0` `101-result0`); Intuition Omega.
Save.

Lemma f91_po_4 : 
  (n: Z)
  (Variant1: Z)
  (n: Z)
  (Pre2: Variant1 = (max `0` `101 - n`))
  (Test2: `n <= 100`)
  (result0: Z)
  (Post5: `n + 11 <= 100` /\ result0 = `91` \/ `n + 11 >= 101` /\
          result0 = `n + 11 - 10`)
  (result1: Z)
  (Post7: `result0 <= 100` /\ result1 = `91` \/ `result0 >= 101` /\
          result1 = `result0 - 10`)
  `n <= 100` /\ result1 = `91` \/ `n >= 101` /\ result1 = `n - 10`.
Proof.
Intuition Omega.
Save.

Lemma f91_po_5 : 
  (n: Z)
  (Variant1: Z)
  (n: Z)
  (Pre2: Variant1 = (max `0` `101 - n`))
  (Test1: `n > 100`)
  `n <= 100` /\ `n - 10` = `91` \/ `n >= 101` /\ `n - 10` = `n - 10`.
Proof.
Intuition Omega.
Save.

