
;; DO NOT EDIT BELOW THIS LINE

(BG_PUSH
 ;; Why axiom lt_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (lt_int_bool x y) |@true|) (< x y)))))

(BG_PUSH
 ;; Why axiom le_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (le_int_bool x y) |@true|) (<= x y)))))

(BG_PUSH
 ;; Why axiom gt_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (gt_int_bool x y) |@true|) (> x y)))))

(BG_PUSH
 ;; Why axiom ge_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (ge_int_bool x y) |@true|) (>= x y)))))

(BG_PUSH
 ;; Why axiom eq_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (eq_int_bool x y) |@true|) (EQ x y)))))

(BG_PUSH
 ;; Why axiom neq_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (neq_int_bool x y) |@true|) (NEQ x y)))))

(BG_PUSH
 ;; Why axiom sorted_array_def
 (FORALL (t)
 (FORALL (i)
 (FORALL (j)
 (IFF (EQ (sorted_array t i j) |@true|)
 (FORALL (k)
 (IMPLIES (AND (<= i k) (< k j)) (<= (select t k) (select t (+ k 1))))))))))

(BG_PUSH
 ;; Why axiom exchange_def
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (i)
 (FORALL (j)
 (IFF (EQ (exchange t1 t2 i j) |@true|)
 (AND (EQ (array_length t1) (array_length t2))
 (AND (EQ (select t1 i) (select t2 j))
 (AND (EQ (select t2 i) (select t1 j))
 (FORALL (k)
 (IMPLIES (AND (NEQ k i) (NEQ k j)) (EQ (select t1 k) (select t2 k)))))))))))))

(BG_PUSH
 ;; Why axiom permut_refl
 (FORALL (t) (EQ (permut t t) |@true|)))

(BG_PUSH
 ;; Why axiom permut_sym
 (FORALL (t1)
 (FORALL (t2)
 (IMPLIES (EQ (permut t1 t2) |@true|) (EQ (permut t2 t1) |@true|)))))

(BG_PUSH
 ;; Why axiom permut_trans
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (t3)
 (IMPLIES (AND (EQ (permut t1 t2) |@true|) (EQ (permut t2 t3) |@true|))
 (EQ (permut t1 t3) |@true|))))))

(BG_PUSH
 ;; Why axiom permut_exchange
 (FORALL (t)
 (FORALL (i)
 (FORALL (j)
 (EQ (permut t (update (update t i (select t j)) j (select t i))) |@true|)))))

(BG_PUSH
 ;; Why axiom sub_permut_refl
 (FORALL (t) (FORALL (g) (FORALL (d) (EQ (sub_permut g d t t) |@true|)))))

(BG_PUSH
 ;; Why axiom sub_permut_sym
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (EQ (sub_permut g d t2 t1) |@true|)))))))

(BG_PUSH
 ;; Why axiom sub_permut_trans
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (t3)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (IMPLIES (EQ (sub_permut g d t2 t3) |@true|)
 (EQ (sub_permut g d t1 t3) |@true|))))))))

 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (FORALL (t3)
 (IMPLIES (EQ (sub_permut g d t2 t3) |@true|)
 (EQ (sub_permut g d t1 t3) |@true|)))))))))

(BG_PUSH
 ;; Why axiom sub_permut_exchange_1
 (FORALL (t)
 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES (AND (<= g i) (AND (<= i d) (AND (<= g j) (<= j d))))
 (EQ (sub_permut g d t
 (update (update t i (select t j)) j (select t i))) |@true|)))))))

 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES (AND (<= g i) (AND (<= i d) (AND (<= g j) (<= j d))))
 (FORALL (t)
 (EQ (sub_permut g d t
 (update (update t i (select t j)) j (select t i))) |@true|))))))))

(BG_PUSH
 ;; Why axiom sub_permut_exchange_2
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES
 (AND (<= g i)
 (AND (<= i d)
 (AND (<= g j) (AND (<= j d) (EQ (exchange t1 t2 i j) |@true|)))))
 (EQ (sub_permut g d t1 t2) |@true|)))))))))

(BG_PUSH
 ;; Why axiom sub_permut_permut
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|) (EQ (permut t1 t2) |@true|)))))))

(BG_PUSH
 ;; Why axiom array_length_update
 (FORALL (t)
 (FORALL (i)
 (FORALL (v) (EQ (array_length (update t i v)) (array_length t))))))

(BG_PUSH
 ;; Why axiom sub_permut_array_length
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (EQ (array_length t1) (array_length t2))))))))

(BG_PUSH
 ;; Why axiom permut_array_length
 (FORALL (t1)
 (FORALL (t2)
 (IMPLIES (EQ (permut t1 t2) |@true|)
 (EQ (array_length t1) (array_length t2))))))

;; power1_po_1, Why obligation from file "", line 0, characters 0-0:
(FORALL (n)
(IMPLIES (>= n 0)
(FORALL (m)
(IMPLIES (EQ m x)
(FORALL (y)
(IMPLIES (EQ y 1) (AND (EQ (Zpower x n) (* y (Zpower m n))) (>= n 0))))))))

;; power1_po_2, Why obligation from file "", line 0, characters 0-0:
(FORALL (n)
(IMPLIES (>= n 0)
(FORALL (m)
(IMPLIES (EQ m x)
(FORALL (y)
(IMPLIES (EQ y 1)
(IMPLIES (AND (EQ (Zpower x n) (* y (Zpower m n))) (>= n 0))
(FORALL (m0)
(FORALL (n0)
(FORALL (y0)
(IMPLIES (AND (EQ (Zpower x n) (* y0 (Zpower m0 n0))) (>= n0 0))
(IMPLIES (> n0 0)
(IMPLIES (EQ (Zodd n0) |@true|)
(FORALL (y1)
(IMPLIES (EQ y1 (* y0 m0))
(FORALL (m1)
(IMPLIES (EQ m1 (* m0 m0))
(FORALL (n1)
(IMPLIES (EQ n1 (div2 n0))
(AND (AND (EQ (Zpower x n) (* y1 (Zpower m1 n1))) (>= n1 0))
(AND (<= 0 n0) (< n1 n0))))))))))))))))))))))

;; power1_po_3, Why obligation from file "", line 0, characters 0-0:
(FORALL (n)
(IMPLIES (>= n 0)
(FORALL (m)
(IMPLIES (EQ m x)
(FORALL (y)
(IMPLIES (EQ y 1)
(IMPLIES (AND (EQ (Zpower x n) (* y (Zpower m n))) (>= n 0))
(FORALL (m0)
(FORALL (n0)
(FORALL (y0)
(IMPLIES (AND (EQ (Zpower x n) (* y0 (Zpower m0 n0))) (>= n0 0))
(IMPLIES (> n0 0)
(IMPLIES (EQ (Zeven n0) |@true|)
(FORALL (m1)
(IMPLIES (EQ m1 (* m0 m0))
(FORALL (n1)
(IMPLIES (EQ n1 (div2 n0))
(AND (AND (EQ (Zpower x n) (* y0 (Zpower m1 n1))) (>= n1 0))
(AND (<= 0 n0) (< n1 n0))))))))))))))))))))

;; power1_po_4, Why obligation from file "", line 0, characters 0-0:
(FORALL (n)
(IMPLIES (>= n 0)
(FORALL (m)
(IMPLIES (EQ m x)
(FORALL (y)
(IMPLIES (EQ y 1)
(IMPLIES (AND (EQ (Zpower x n) (* y (Zpower m n))) (>= n 0))
(FORALL (m0)
(FORALL (n0)
(FORALL (y0)
(IMPLIES (AND (EQ (Zpower x n) (* y0 (Zpower m0 n0))) (>= n0 0))
(IMPLIES (<= n0 0) (EQ y0 (Zpower x n))))))))))))))

