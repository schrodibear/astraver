(BG_PUSH 
  ; array_length
  (FORALL (t i v) (EQ (array_length (store t i v)) (array_length t)))
  ; booleans
  (DISTINCT |@true| |@false|)
  ; exchange
  (FORALL (t1 t2 i j)
	  (IFF (EQ (exchange t1 t2 i j) |@true|)
	       (AND (EQ (array_length t1) (array_length t2))
		    (EQ (select t1 i) (select t2 j))
		    (EQ (select t1 j) (select t2 i))
		    (FORALL (k) (IMPLIES (AND (NEQ k i) (NEQ k j))
					 (EQ (select t1 k) (select t2 k)))))))
  (FORALL (t1 t2 i j)
	  (IMPLIES (EQ (exchange t1 t2 i j) |@true|)
		   (EQ (array_length t1) (array_length t2))))
  ; permut
  (FORALL (t) (EQ (permut t t) |@true|))
  (FORALL (t1 t2) (IMPLIES (EQ (permut t1 t2) |@true|)
			   (EQ (permut t2 t1) |@true|)))
  (FORALL (t1 t2 t3) (IMPLIES (AND (EQ (permut t1 t2) |@true|)
				   (EQ (permut t2 t3) |@true|))
			      (EQ (permut t1 t3) |@true|)))
  (FORALL 
   (t i j) 
   (EQ (permut t (store (store t i (select t j)) j (select t i))) |@true|))
  (FORALL (t1 t2)
	  (IMPLIES (EQ (permut t1 t2) |@true|)
		   (EQ (array_length t1) (array_length t2))))
  ; sub_permut
  (FORALL (t g d) (EQ (sub_permut g d t t) |@true|))
  (FORALL (t1 t2 g d) (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
			   (EQ (sub_permut g d t2 t1) |@true|)))
  (FORALL (t1 t2 t3 g d) (IMPLIES (AND (EQ (sub_permut g d t1 t2) |@true|)
				       (EQ (sub_permut g d t2 t3) |@true|))
				  (EQ (sub_permut g d t1 t3) |@true|)))
  (FORALL 
   (t g d i j) 
   (IMPLIES (AND (<= g i) (<= i d) (<= g j) (<= j d))
	    (EQ (sub_permut g d t 
			    (store (store t i (select t j)) j (select t i))) 
		|@true|)))
  (FORALL 
   (t1 t2 g d i j)
   (IMPLIES (AND (EQ (exchange t1 t2 i j) |@true|)
		 (<= g i) (<= i d) (<= g j) (<= j d))
	    (EQ (sub_permut g d t1 t2) |@true|)))
  (FORALL (t1 t2 i j) 
	  (IMPLIES (EQ (sub_permut i j t1 t2) |@true|)
		   (EQ (permut t1 t2) |@true|)))
  (FORALL (t1 t2 i j)
	  (IMPLIES (EQ (sub_permut i j t1 t2) |@true|)
		   (EQ (array_length t1) (array_length t2))))
  ; sorted_array
  (FORALL 
   (t i j) 
   (IFF (EQ (sorted_array t i j) |@true|)
	(IMPLIES (<= i j)
		 (FORALL (k) (IMPLIES (AND (<= i k) (< k j))
				      (<= (select t k) (select t (+ k 1))))))))
)

;; DO NOT EDIT BELOW THIS LINE

(DEFPRED (is_color c) (OR (EQ c blue) (OR (EQ c white) (EQ c red))))

(BG_PUSH
 ;; Why axiom acc_upd_eq
 (FORALL (a) (FORALL (i) (FORALL (c) (EQ (acc (upd a i c) i) c)))))

(BG_PUSH
 ;; Why axiom acc_upd_neq
 (FORALL (a)
 (FORALL (i)
 (FORALL (j)
 (FORALL (c) (IMPLIES (NEQ i j) (EQ (acc (upd a j c) i) (acc a i)))))))

 (FORALL (i)
 (FORALL (j)
 (IMPLIES (NEQ i j)
 (FORALL (a) (FORALL (c) (EQ (acc (upd a j c) i) (acc a i))))))))

(BG_PUSH
 ;; Why axiom length_update
 (FORALL (a) (FORALL (i) (FORALL (c) (EQ (length (upd a i c)) (length a))))))

(DEFPRED (monochrome t i j
c) (FORALL (k) (IMPLIES (AND (<= i k) (< k j)) (EQ (acc t k) c))))

;; swap_po_1, Why obligation from file "flag_ax.mlw", line 0, characters 0-0:
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (length t)))
         (AND (<= 0 j) (< j (length t))))
(FORALL (result)
(IMPLIES (EQ result (acc t i))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t j))
(FORALL (t0)
(IMPLIES (EQ t0 (upd t i result0))
(FORALL (t1)
(IMPLIES (EQ t1 (upd t0 j result))
(EQ t1 (upd (upd t i (acc t j)) j (acc t i)))))))))))))))

;; swap_po_2, Why obligation from file "flag_ax.mlw", line 0, characters 0-0:
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (length t)))
         (AND (<= 0 j) (< j (length t))))
(FORALL (result)
(IMPLIES (EQ result (acc t i))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t j))
(FORALL (t0)
(IMPLIES (EQ t0 (upd t i result0)) (AND (<= 0 j) (< j (length t0)))))))))))))

;; dutch_flag_po_1, Why obligation from file "flag_ax.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(AND (AND (<= 0 0) (<= 0 0))
(AND (AND (<= 0 n) (<= n n))
(AND (monochrome t 0 0 blue)
(AND (monochrome t 0 0 white)
(AND (monochrome t n n red)
(AND (EQ (length t) n)
(FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k)))))))))))))

;; dutch_flag_po_2, Why obligation from file "flag_ax.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))))))))
(IMPLIES (< i r)
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (EQ result blue)
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 b (acc t0 i)) i (acc t0 b)))
(FORALL (b0)
(IMPLIES (EQ b0 (+ b 1))
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1))
(AND
(AND (AND (<= 0 b0) (<= b0 i0))
(AND (AND (<= i0 r) (<= r n))
(AND (monochrome t1 0 b0 blue)
(AND (monochrome t1 b0 i0 white)
(AND (monochrome t1 r n red)
(AND (EQ (length t1) n)
(FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t1 k))))))))))
(AND (<= 0 (- r i)) (< (- r i0) (- r i))))))))))))))))))))))

;; dutch_flag_po_3, Why obligation from file "flag_ax.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))))))))
(IMPLIES (< i r)
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (EQ result blue)
(AND (AND (<= 0 b) (< b (length t0))) (AND (<= 0 i) (< i (length t0))))))))))))))))

;; dutch_flag_po_4, Why obligation from file "flag_ax.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))))))))
(IMPLIES (< i r)
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (EQ result0 white)
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1))
(AND
(AND (AND (<= 0 b) (<= b i0))
(AND (AND (<= i0 r) (<= r n))
(AND (monochrome t0 0 b blue)
(AND (monochrome t0 b i0 white)
(AND (monochrome t0 r n red)
(AND (EQ (length t0) n)
(FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))))))))
(AND (<= 0 (- r i)) (< (- r i0) (- r i)))))))))))))))))))))

;; dutch_flag_po_5, Why obligation from file "flag_ax.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))))))))
(IMPLIES (< i r)
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 r0 (acc t0 i)) i (acc t0 r0)))
(AND
(AND (AND (<= 0 b) (<= b i))
(AND (AND (<= i r0) (<= r0 n))
(AND (monochrome t1 0 b blue)
(AND (monochrome t1 b i white)
(AND (monochrome t1 r0 n red)
(AND (EQ (length t1) n)
(FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t1 k))))))))))
(AND (<= 0 (- r i)) (< (- r0 i) (- r i)))))))))))))))))))))))

;; dutch_flag_po_6, Why obligation from file "flag_ax.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))))))))
(IMPLIES (< i r)
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1))
(AND (AND (<= 0 r0) (< r0 (length t0))) (AND (<= 0 i) (< i (length t0)))))))))))))))))))))

;; dutch_flag_po_7, Why obligation from file "flag_ax.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))))))))
(IMPLIES (< i r)
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue) (AND (<= 0 i) (< i (length t0)))))))))))))))

;; dutch_flag_po_8, Why obligation from file "flag_ax.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))))))))
(IMPLIES (< i r) (AND (<= 0 i) (< i (length t0))))))))))))

;; dutch_flag_po_9, Why obligation from file "flag_ax.mlw", line 0, characters 0-0:
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))))))))
(IMPLIES (>= i r)
(EXISTS (b)
(EXISTS (r)
(AND (monochrome t0 0 b blue)
(AND (monochrome t0 b r white) (monochrome t0 r n red))))))))))))))

