
;; DO NOT EDIT BELOW THIS LINE

(BG_PUSH (NEQ |@true| |@false|))

(BG_PUSH
 ;; Why axiom bool_and_def
 (FORALL (a b)
 (IFF (EQ (bool_and a b) |@true|) (AND (EQ a |@true|) (EQ b |@true|)))))

(BG_PUSH
 ;; Why axiom bool_or_def
 (FORALL (a b)
 (IFF (EQ (bool_or a b) |@true|) (OR (EQ a |@true|) (EQ b |@true|)))))

(BG_PUSH
 ;; Why axiom bool_xor_def
 (FORALL (a b) (IFF (EQ (bool_xor a b) |@true|) (NEQ a b))))

(BG_PUSH
 ;; Why axiom bool_not_def
 (FORALL (a) (IFF (EQ (bool_not a) |@true|) (EQ a |@false|))))

(BG_PUSH
 ;; Why axiom ite_true
 (FORALL (x y) (EQ (ite |@true| x y) x)))

(BG_PUSH
 ;; Why axiom ite_false
 (FORALL (x y) (EQ (ite |@false| x y) y)))

(BG_PUSH
 ;; Why axiom lt_int_bool_axiom
 (FORALL (x y) (IFF (EQ (lt_int_bool x y) |@true|) (< x y))))

(BG_PUSH
 ;; Why axiom le_int_bool_axiom
 (FORALL (x y) (IFF (EQ (le_int_bool x y) |@true|) (<= x y))))

(BG_PUSH
 ;; Why axiom gt_int_bool_axiom
 (FORALL (x y) (IFF (EQ (gt_int_bool x y) |@true|) (> x y))))

(BG_PUSH
 ;; Why axiom ge_int_bool_axiom
 (FORALL (x y) (IFF (EQ (ge_int_bool x y) |@true|) (>= x y))))

(BG_PUSH
 ;; Why axiom eq_int_bool_axiom
 (FORALL (x y) (IFF (EQ (eq_int_bool x y) |@true|) (EQ x y))))

(BG_PUSH
 ;; Why axiom neq_int_bool_axiom
 (FORALL (x y) (IFF (EQ (neq_int_bool x y) |@true|) (NEQ x y))))

(BG_PUSH
 ;; Why axiom lt_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (lt_real_bool x y) |@true|) (EQ (lt_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom le_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (le_real_bool x y) |@true|) (EQ (le_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom gt_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (gt_real_bool x y) |@true|) (EQ (gt_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom ge_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (ge_real_bool x y) |@true|) (EQ (ge_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom eq_real_bool_axiom
 (FORALL (x y) (IFF (EQ (eq_real_bool x y) |@true|) (EQ x y))))

(BG_PUSH
 ;; Why axiom neq_real_bool_axiom
 (FORALL (x y) (IFF (EQ (neq_real_bool x y) |@true|) (NEQ x y))))

(DEFPRED (zwf_zero a b) (AND (<= 0 b) (< a b)))

(BG_PUSH
 ;; Why axiom access_update
 (FORALL (a i v) (EQ (access (update a i v) i) v)))

(BG_PUSH
 ;; Why axiom access_update_neq
 (FORALL (a i j v)
 (IMPLIES (NEQ i j) (EQ (access (update a i v) j) (access a j))))

 (FORALL (i j)
 (IMPLIES (NEQ i j)
 (FORALL (a v) (EQ (access (update a i v) j) (access a j))))))

(DEFPRED (sorted_array t i j)
  (FORALL (k1 k2)
  (IMPLIES (AND (AND (<= i k1) (<= k1 k2)) (<= k2 j))
  (<= (access t k1) (access t k2)))))

(DEFPRED (exchange a1 a2 i j)
  (AND (EQ (array_length a1) (array_length a2))
  (AND (EQ (access a1 i) (access a2 j))
  (AND (EQ (access a2 i) (access a1 j))
  (FORALL (k)
  (IMPLIES (AND (NEQ k i) (NEQ k j)) (EQ (access a1 k) (access a2 k))))))))

(BG_PUSH
 ;; Why axiom permut_refl
 (FORALL (t l u) (EQ (permut t t l u) |@true|)))

(BG_PUSH
 ;; Why axiom permut_sym
 (FORALL (t1 t2 l u)
 (IMPLIES (EQ (permut t1 t2 l u) |@true|) (EQ (permut t2 t1 l u) |@true|))))

(BG_PUSH
 ;; Why axiom permut_trans
 (FORALL (t1 t2 t3 l u)
 (IMPLIES (EQ (permut t1 t2 l u) |@true|)
 (IMPLIES (EQ (permut t2 t3 l u) |@true|) (EQ (permut t1 t3 l u) |@true|))))

 (FORALL (t1 t2 l u)
 (IMPLIES (EQ (permut t1 t2 l u) |@true|)
 (FORALL (t3)
 (IMPLIES (EQ (permut t2 t3 l u) |@true|) (EQ (permut t1 t3 l u) |@true|))))))

(BG_PUSH
 ;; Why axiom permut_exchange
 (FORALL (a1 a2 l u i j)
 (IMPLIES (AND (<= l i) (<= i u))
 (IMPLIES (AND (<= l j) (<= j u))
 (IMPLIES (exchange a1 a2 i j) (EQ (permut a1 a2 l u) |@true|)))))

 (FORALL (l u i)
 (IMPLIES (AND (<= l i) (<= i u))
 (FORALL (j)
 (IMPLIES (AND (<= l j) (<= j u))
 (FORALL (a1 a2)
 (IMPLIES (exchange a1 a2 i j) (EQ (permut a1 a2 l u) |@true|))))))))

(BG_PUSH
 ;; Why axiom exchange_upd
 (FORALL (a i j)
 (exchange a (update (update a i (access a j)) j (access a i)) i j)))

(BG_PUSH
 ;; Why axiom permut_weakening
 (FORALL (a1 a2 l1 r1 l2 r2)
 (IMPLIES (AND (AND (<= l1 l2) (<= l2 r2)) (<= r2 r1))
 (IMPLIES (EQ (permut a1 a2 l2 r2) |@true|)
 (EQ (permut a1 a2 l1 r1) |@true|))))

 (FORALL (l1 r1 l2 r2)
 (IMPLIES (AND (AND (<= l1 l2) (<= l2 r2)) (<= r2 r1))
 (FORALL (a2 a1)
 (IMPLIES (EQ (permut a1 a2 l2 r2) |@true|)
 (EQ (permut a1 a2 l1 r1) |@true|))))))

(BG_PUSH
 ;; Why axiom permut_eq
 (FORALL (a1 a2 l u)
 (IMPLIES (<= l u)
 (IMPLIES (EQ (permut a1 a2 l u) |@true|)
 (FORALL (i) (IMPLIES (OR (< i l) (< u i)) (EQ (access a2 i) (access a1 i)))))))

 (FORALL (l u)
 (IMPLIES (<= l u)
 (FORALL (a2 a1)
 (IMPLIES (EQ (permut a1 a2 l u) |@true|)
 (FORALL (i) (IMPLIES (OR (< i l) (< u i)) (EQ (access a2 i) (access a1 i)))))))))

(DEFPRED (permutation a1 a2)
  (EQ (permut a1 a2 0 (- (array_length a1) 1)) |@true|))

(BG_PUSH
 ;; Why axiom array_length_update
 (FORALL (a i v) (EQ (array_length (update a i v)) (array_length a))))

(BG_PUSH
 ;; Why axiom permut_array_length
 (FORALL (a1 a2 l u)
 (IMPLIES (EQ (permut a1 a2 l u) |@true|)
 (EQ (array_length a1) (array_length a2)))))

(BG_PUSH
 ;; Why axiom l_pos
 (< 0 l))

;; pgm_max_end_po_1, File "max.mlw", line 24, characters 18-102
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x) (IMPLIES (EQ x 0) (FORALL (y) (IMPLIES (EQ y 1) (<= 0 y)))))))

;; pgm_max_end_po_2, File "max.mlw", line 24, characters 18-102
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x) (IMPLIES (EQ x 0) (FORALL (y) (IMPLIES (EQ y 1) (<= y l)))))))

;; pgm_max_end_po_3, File "max.mlw", line 24, characters 18-102
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x) (IMPLIES (EQ x 0) (FORALL (y) (IMPLIES (EQ y 1) (<= 0 x)))))))

;; pgm_max_end_po_4, File "max.mlw", line 24, characters 18-102
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x) (IMPLIES (EQ x 0) (FORALL (y) (IMPLIES (EQ y 1) (< x l)))))))

;; pgm_max_end_po_5, File "max.mlw", line 24, characters 18-102
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (k) (IMPLIES (AND (<= 0 k) (< k y)) (<= (access a k) (access a x))))))))))

;; pgm_max_end_po_6, File "max.mlw", line 27, characters 9-14
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l) (<= 0 y0)))))))))))

;; pgm_max_end_po_7, File "max.mlw", line 27, characters 9-14
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l) (< y0 (array_length a))))))))))))

;; pgm_max_end_po_8, File "max.mlw", line 27, characters 17-22
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l)
(IMPLIES (AND (<= 0 y0) (< y0 (array_length a)))
(FORALL (result) (IMPLIES (EQ result (access a y0)) (<= 0 x0))))))))))))))

;; pgm_max_end_po_9, File "max.mlw", line 27, characters 17-22
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l)
(IMPLIES (AND (<= 0 y0) (< y0 (array_length a)))
(FORALL (result) (IMPLIES (EQ result (access a y0)) (< x0 (array_length a)))))))))))))))

;; pgm_max_end_po_10, File "max.mlw", line 24, characters 18-102
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l)
(IMPLIES (AND (<= 0 y0) (< y0 (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a y0))
(IMPLIES (AND (<= 0 x0) (< x0 (array_length a)))
(FORALL (result0)
(IMPLIES (EQ result0 (access a x0))
(IMPLIES (> result result0)
(FORALL (x1)
(IMPLIES (EQ x1 y0) (FORALL (y1) (IMPLIES (EQ y1 (+ y0 1)) (<= 0 y1))))))))))))))))))))))

;; pgm_max_end_po_11, File "max.mlw", line 24, characters 18-102
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l)
(IMPLIES (AND (<= 0 y0) (< y0 (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a y0))
(IMPLIES (AND (<= 0 x0) (< x0 (array_length a)))
(FORALL (result0)
(IMPLIES (EQ result0 (access a x0))
(IMPLIES (> result result0)
(FORALL (x1)
(IMPLIES (EQ x1 y0) (FORALL (y1) (IMPLIES (EQ y1 (+ y0 1)) (<= y1 l))))))))))))))))))))))

;; pgm_max_end_po_12, File "max.mlw", line 24, characters 18-102
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l)
(IMPLIES (AND (<= 0 y0) (< y0 (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a y0))
(IMPLIES (AND (<= 0 x0) (< x0 (array_length a)))
(FORALL (result0)
(IMPLIES (EQ result0 (access a x0))
(IMPLIES (> result result0)
(FORALL (x1)
(IMPLIES (EQ x1 y0) (FORALL (y1) (IMPLIES (EQ y1 (+ y0 1)) (<= 0 x1))))))))))))))))))))))

;; pgm_max_end_po_13, File "max.mlw", line 24, characters 18-102
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l)
(IMPLIES (AND (<= 0 y0) (< y0 (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a y0))
(IMPLIES (AND (<= 0 x0) (< x0 (array_length a)))
(FORALL (result0)
(IMPLIES (EQ result0 (access a x0))
(IMPLIES (> result result0)
(FORALL (x1)
(IMPLIES (EQ x1 y0) (FORALL (y1) (IMPLIES (EQ y1 (+ y0 1)) (< x1 l))))))))))))))))))))))

;; pgm_max_end_po_14, File "max.mlw", line 24, characters 18-102
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l)
(IMPLIES (AND (<= 0 y0) (< y0 (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a y0))
(IMPLIES (AND (<= 0 x0) (< x0 (array_length a)))
(FORALL (result0)
(IMPLIES (EQ result0 (access a x0))
(IMPLIES (> result result0)
(FORALL (x1)
(IMPLIES (EQ x1 y0)
(FORALL (y1)
(IMPLIES (EQ y1 (+ y0 1))
(FORALL (k)
(IMPLIES (AND (<= 0 k) (< k y1)) (<= (access a k) (access a x1)))))))))))))))))))))))))

;; pgm_max_end_po_15, File "max.mlw", line 26, characters 16-19
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l)
(IMPLIES (AND (<= 0 y0) (< y0 (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a y0))
(IMPLIES (AND (<= 0 x0) (< x0 (array_length a)))
(FORALL (result0)
(IMPLIES (EQ result0 (access a x0))
(IMPLIES (> result result0)
(FORALL (x1)
(IMPLIES (EQ x1 y0) (FORALL (y1) (IMPLIES (EQ y1 (+ y0 1)) (<= 0 (- l y0)))))))))))))))))))))))

;; pgm_max_end_po_16, File "max.mlw", line 26, characters 16-19
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l)
(IMPLIES (AND (<= 0 y0) (< y0 (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a y0))
(IMPLIES (AND (<= 0 x0) (< x0 (array_length a)))
(FORALL (result0)
(IMPLIES (EQ result0 (access a x0))
(IMPLIES (> result result0)
(FORALL (x1)
(IMPLIES (EQ x1 y0)
(FORALL (y1) (IMPLIES (EQ y1 (+ y0 1)) (< (- l y1) (- l y0)))))))))))))))))))))))

;; pgm_max_end_po_17, File "max.mlw", line 24, characters 18-102
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l)
(IMPLIES (AND (<= 0 y0) (< y0 (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a y0))
(IMPLIES (AND (<= 0 x0) (< x0 (array_length a)))
(FORALL (result0)
(IMPLIES (EQ result0 (access a x0))
(IMPLIES (<= result result0)
(FORALL (y1) (IMPLIES (EQ y1 (+ y0 1)) (<= 0 y1))))))))))))))))))))

;; pgm_max_end_po_18, File "max.mlw", line 24, characters 18-102
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l)
(IMPLIES (AND (<= 0 y0) (< y0 (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a y0))
(IMPLIES (AND (<= 0 x0) (< x0 (array_length a)))
(FORALL (result0)
(IMPLIES (EQ result0 (access a x0))
(IMPLIES (<= result result0)
(FORALL (y1) (IMPLIES (EQ y1 (+ y0 1)) (<= y1 l))))))))))))))))))))

;; pgm_max_end_po_19, File "max.mlw", line 24, characters 18-102
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l)
(IMPLIES (AND (<= 0 y0) (< y0 (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a y0))
(IMPLIES (AND (<= 0 x0) (< x0 (array_length a)))
(FORALL (result0)
(IMPLIES (EQ result0 (access a x0))
(IMPLIES (<= result result0)
(FORALL (y1) (IMPLIES (EQ y1 (+ y0 1)) (< x0 l))))))))))))))))))))

;; pgm_max_end_po_20, File "max.mlw", line 24, characters 18-102
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l)
(IMPLIES (AND (<= 0 y0) (< y0 (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a y0))
(IMPLIES (AND (<= 0 x0) (< x0 (array_length a)))
(FORALL (result0)
(IMPLIES (EQ result0 (access a x0))
(IMPLIES (<= result result0)
(FORALL (y1)
(IMPLIES (EQ y1 (+ y0 1))
(FORALL (k)
(IMPLIES (AND (<= 0 k) (< k y1)) (<= (access a k) (access a x0)))))))))))))))))))))))

;; pgm_max_end_po_21, File "max.mlw", line 26, characters 16-19
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l)
(IMPLIES (AND (<= 0 y0) (< y0 (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a y0))
(IMPLIES (AND (<= 0 x0) (< x0 (array_length a)))
(FORALL (result0)
(IMPLIES (EQ result0 (access a x0))
(IMPLIES (<= result result0)
(FORALL (y1) (IMPLIES (EQ y1 (+ y0 1)) (<= 0 (- l y0)))))))))))))))))))))

;; pgm_max_end_po_22, File "max.mlw", line 26, characters 16-19
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (< y0 l)
(IMPLIES (AND (<= 0 y0) (< y0 (array_length a)))
(FORALL (result)
(IMPLIES (EQ result (access a y0))
(IMPLIES (AND (<= 0 x0) (< x0 (array_length a)))
(FORALL (result0)
(IMPLIES (EQ result0 (access a x0))
(IMPLIES (<= result result0)
(FORALL (y1) (IMPLIES (EQ y1 (+ y0 1)) (< (- l y1) (- l y0)))))))))))))))))))))

;; pgm_max_end_po_23, File "max.mlw", line 32, characters 4-155
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (>= y0 l)
(IMPLIES (EQ (array_length a) l)
(FORALL (a0)
(IMPLIES (AND (EQ (array_length a0) l)
         (AND (EQ (access a0 x0) (access a (- l 1)))
         (AND (EQ (access a0 (- l 1)) (access a x0))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k l))
         (IMPLIES (NEQ k x0)
         (IMPLIES (NEQ k (- l 1)) (EQ (access a0 k) (access a k)))))))))
(FORALL (k)
(IMPLIES (AND (<= 0 k) (< k (- l 1)))
(IMPLIES (NEQ k x0) (EQ (access a0 k) (access a k))))))))))))))))))

;; pgm_max_end_po_24, File "max.mlw", line 32, characters 4-155
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (>= y0 l)
(IMPLIES (EQ (array_length a) l)
(FORALL (a0)
(IMPLIES (AND (EQ (array_length a0) l)
         (AND (EQ (access a0 x0) (access a (- l 1)))
         (AND (EQ (access a0 (- l 1)) (access a x0))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k l))
         (IMPLIES (NEQ k x0)
         (IMPLIES (NEQ k (- l 1)) (EQ (access a0 k) (access a k)))))))))
(EQ (access a0 x0) (access a (- l 1))))))))))))))))

;; pgm_max_end_po_25, File "max.mlw", line 32, characters 4-155
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (>= y0 l)
(IMPLIES (EQ (array_length a) l)
(FORALL (a0)
(IMPLIES (AND (EQ (array_length a0) l)
         (AND (EQ (access a0 x0) (access a (- l 1)))
         (AND (EQ (access a0 (- l 1)) (access a x0))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k l))
         (IMPLIES (NEQ k x0)
         (IMPLIES (NEQ k (- l 1)) (EQ (access a0 k) (access a k)))))))))
(EQ (access a0 (- l 1)) (access a x0)))))))))))))))

;; pgm_max_end_po_26, File "max.mlw", line 32, characters 4-155
(FORALL (a)
(IMPLIES (EQ (array_length a) l)
(FORALL (x)
(IMPLIES (EQ x 0)
(FORALL (y)
(IMPLIES (EQ y 1)
(FORALL (x0)
(FORALL (y0)
(IMPLIES (AND (AND (<= 0 y0) (<= y0 l))
         (AND (AND (<= 0 x0) (< x0 l))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k y0)) (<= (access a k) (access a x0))))))
(IMPLIES (>= y0 l)
(IMPLIES (EQ (array_length a) l)
(FORALL (a0)
(IMPLIES (AND (EQ (array_length a0) l)
         (AND (EQ (access a0 x0) (access a (- l 1)))
         (AND (EQ (access a0 (- l 1)) (access a x0))
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (< k l))
         (IMPLIES (NEQ k x0)
         (IMPLIES (NEQ k (- l 1)) (EQ (access a0 k) (access a k)))))))))
(FORALL (k)
(IMPLIES (AND (<= 0 k) (< k (- l 1))) (<= (access a0 k) (access a0 (- l 1))))))))))))))))))

