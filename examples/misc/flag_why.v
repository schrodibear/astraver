(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Import Why.
Require Import Sumbool.

(*Why*) Parameter N : Z.

Axiom N_non_negative : (0 <= N)%Z.

Inductive color : Set :=
  | blue : color
  | white : color
  | red : color.

Lemma eq_color_dec : forall c1 c2:color, {c1 = c2} + {c1 <> c2}.
 Proof.
 intros; decide equality c1 c2.
Qed.

Definition eq_blue c := bool_of_sumbool (eq_color_dec c blue).
Definition eq_white c := bool_of_sumbool (eq_color_dec c white).

Definition monochrome (t:array color) (i j:Z) (c:color) : Prop :=
  forall k:Z, (i <= k < j)%Z -> access t k = c.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma dutch_flag_po_1 : 
  forall (t: (array color)),
  forall (HW_1: (array_length t) = N),
  (0 <= 0 /\ 0 <= 0) /\ (0 <= N /\ N <= N) /\ (monochrome t 0 0 blue) /\
  (monochrome t 0 0 white) /\ (monochrome t N N red) /\ (array_length t) = N.
Proof.
unfold monochrome; intuition; try (elimtype False; omega).
exact N_non_negative.
Qed.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma dutch_flag_po_2 : 
  forall (t: (array color)),
  forall (HW_1: (array_length t) = N),
  forall (HW_2: (0 <= 0 /\ 0 <= 0) /\ (0 <= N /\ N <= N) /\
                (monochrome t 0 0 blue) /\ (monochrome t 0 0 white) /\
                (monochrome t N N red) /\ (array_length t) = N),
  forall (b: Z),
  forall (i: Z),
  forall (r: Z),
  forall (t0: (array color)),
  forall (HW_3: (0 <= b /\ b <= i) /\ (i <= r /\ r <= N) /\
                (monochrome t0 0 b blue) /\ (monochrome t0 b i white) /\
                (monochrome t0 r N red) /\ (array_length t0) = N),
  forall (HW_4: i < r),
  forall (result: color),
  forall (HW_5: result = (access t0 i)),
  forall (HW_6: result = blue),
  forall (result0: color),
  forall (HW_7: result0 = (access t0 b)),
  forall (result1: color),
  forall (HW_8: result1 = (access t0 i)),
  forall (t1: (array color)),
  forall (HW_9: t1 = (update t0 b result1)),
  forall (t2: (array color)),
  forall (HW_10: t2 = (update t1 i result0)),
  forall (b0: Z),
  forall (HW_11: b0 = (b + 1)),
  forall (i0: Z),
  forall (HW_12: i0 = (i + 1)),
  ((0 <= b0 /\ b0 <= i0) /\ (i0 <= r /\ r <= N) /\
  (monochrome t2 0 b0 blue) /\ (monochrome t2 b0 i0 white) /\
  (monochrome t2 r N red) /\ (array_length t2) = N) /\
  (Zwf 0 (r - i0) (r - i)).
Proof.
unfold monochrome, Zwf; intuition try omega.
assert (h: (k < b)%Z \/ k = b).
 omega.
 intuition.
subst t2; AccessOther.
subst t1; AccessOther.
auto.
subst; simpl; auto.
subst; simpl; omega.
ArraySubst t1.
assert (h: b = i \/ (b < i)).
 omega.
 intuition.
subst.
AccessSame.
assumption.
subst t2; AccessOther.
subst; AccessSame.
assumption.
subst t1; simpl; omega.
subst t1; simpl; omega.
assert (h: k = i \/ (k < i)).
 omega.
 intuition.
subst; AccessSame.
auto with *.
subst t2; AccessOther.
subst; AccessOther.
auto with *.
subst t1; simpl; omega.
subst t1; simpl; omega.
subst t2; AccessOther.
subst; AccessOther.
auto with *.
subst t1; simpl; omega.
subst t1; simpl; omega.
subst t2 t1; simpl; auto.
Qed.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma dutch_flag_po_3 : 
  forall (t: (array color)),
  forall (HW_1: (array_length t) = N),
  forall (HW_2: (0 <= 0 /\ 0 <= 0) /\ (0 <= N /\ N <= N) /\
                (monochrome t 0 0 blue) /\ (monochrome t 0 0 white) /\
                (monochrome t N N red) /\ (array_length t) = N),
  forall (b: Z),
  forall (i: Z),
  forall (r: Z),
  forall (t0: (array color)),
  forall (HW_3: (0 <= b /\ b <= i) /\ (i <= r /\ r <= N) /\
                (monochrome t0 0 b blue) /\ (monochrome t0 b i white) /\
                (monochrome t0 r N red) /\ (array_length t0) = N),
  forall (HW_4: i < r),
  forall (result: color),
  forall (HW_5: result = (access t0 i)),
  forall (HW_6: result = blue),
  forall (result0: color),
  forall (HW_7: result0 = (access t0 b)),
  forall (result1: color),
  forall (HW_8: result1 = (access t0 i)),
  forall (t1: (array color)),
  forall (HW_9: t1 = (update t0 b result1)),
  forall (HW_13: (forall (t:(array color)),
                  (t = (update t1 i result0) ->
                   (forall (b0:Z),
                    (b0 = (b + 1) ->
                     (forall (i0:Z),
                      (i0 = (i + 1) -> ((0 <= b0 /\ b0 <= i0) /\ (i0 <= r /\
                       r <= N) /\ (monochrome t 0 b0 blue) /\
                       (monochrome t b0 i0 white) /\
                       (monochrome t r N red) /\ (array_length t) = N) /\
                       (Zwf 0 (r - i0) (r - i))))))))),
  0 <= i /\ i < (array_length t1).
Proof.
intuition.
ArraySubst t1.
Qed.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma dutch_flag_po_4 : 
  forall (t: (array color)),
  forall (HW_1: (array_length t) = N),
  forall (HW_2: (0 <= 0 /\ 0 <= 0) /\ (0 <= N /\ N <= N) /\
                (monochrome t 0 0 blue) /\ (monochrome t 0 0 white) /\
                (monochrome t N N red) /\ (array_length t) = N),
  forall (b: Z),
  forall (i: Z),
  forall (r: Z),
  forall (t0: (array color)),
  forall (HW_3: (0 <= b /\ b <= i) /\ (i <= r /\ r <= N) /\
                (monochrome t0 0 b blue) /\ (monochrome t0 b i white) /\
                (monochrome t0 r N red) /\ (array_length t0) = N),
  forall (HW_4: i < r),
  forall (result: color),
  forall (HW_5: result = (access t0 i)),
  forall (HW_6: result = blue),
  forall (result0: color),
  forall (HW_7: result0 = (access t0 b)),
  forall (result1: color),
  forall (HW_8: result1 = (access t0 i)),
  forall (HW_14: (forall (t:(array color)),
                  (t = (update t0 b result1) ->
                   (forall (t0:(array color)),
                    (t0 = (update t i result0) ->
                     (forall (b0:Z),
                      (b0 = (b + 1) ->
                       (forall (i0:Z),
                        (i0 = (i + 1) -> ((0 <= b0 /\ b0 <= i0) /\ (i0 <=
                         r /\ r <= N) /\ (monochrome t0 0 b0 blue) /\
                         (monochrome t0 b0 i0 white) /\
                         (monochrome t0 r N red) /\ (array_length t0) = N) /\
                         (Zwf 0 (r - i0) (r - i)))))))) /\
                   0 <= i /\ i < (array_length t)))),
  0 <= b /\ b < (array_length t0).
Proof.
intuition.
Qed.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma dutch_flag_po_5 : 
  forall (t: (array color)),
  forall (HW_1: (array_length t) = N),
  forall (HW_2: (0 <= 0 /\ 0 <= 0) /\ (0 <= N /\ N <= N) /\
                (monochrome t 0 0 blue) /\ (monochrome t 0 0 white) /\
                (monochrome t N N red) /\ (array_length t) = N),
  forall (b: Z),
  forall (i: Z),
  forall (r: Z),
  forall (t0: (array color)),
  forall (HW_3: (0 <= b /\ b <= i) /\ (i <= r /\ r <= N) /\
                (monochrome t0 0 b blue) /\ (monochrome t0 b i white) /\
                (monochrome t0 r N red) /\ (array_length t0) = N),
  forall (HW_4: i < r),
  forall (result: color),
  forall (HW_5: result = (access t0 i)),
  forall (HW_6: result = blue),
  forall (result0: color),
  forall (HW_7: result0 = (access t0 b)),
  forall (HW_15: (forall (result:color),
                  (result = (access t0 i) ->
                   (forall (t:(array color)),
                    (t = (update t0 b result) ->
                     (forall (t0:(array color)),
                      (t0 = (update t i result0) ->
                       (forall (b0:Z),
                        (b0 = (b + 1) ->
                         (forall (i0:Z),
                          (i0 = (i + 1) -> ((0 <= b0 /\ b0 <= i0) /\ (i0 <=
                           r /\ r <= N) /\ (monochrome t0 0 b0 blue) /\
                           (monochrome t0 b0 i0 white) /\
                           (monochrome t0 r N red) /\ (array_length t0) =
                           N) /\ (Zwf 0 (r - i0) (r - i)))))))) /\
                     0 <= i /\ i < (array_length t))) /\
                   0 <= b /\ b < (array_length t0)))),
  0 <= i /\ i < (array_length t0).
Proof.
intuition; subst; auto.
Qed.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma dutch_flag_po_6 : 
  forall (t: (array color)),
  forall (HW_1: (array_length t) = N),
  forall (HW_2: (0 <= 0 /\ 0 <= 0) /\ (0 <= N /\ N <= N) /\
                (monochrome t 0 0 blue) /\ (monochrome t 0 0 white) /\
                (monochrome t N N red) /\ (array_length t) = N),
  forall (b: Z),
  forall (i: Z),
  forall (r: Z),
  forall (t0: (array color)),
  forall (HW_3: (0 <= b /\ b <= i) /\ (i <= r /\ r <= N) /\
                (monochrome t0 0 b blue) /\ (monochrome t0 b i white) /\
                (monochrome t0 r N red) /\ (array_length t0) = N),
  forall (HW_4: i < r),
  forall (result: color),
  forall (HW_5: result = (access t0 i)),
  forall (HW_6: result = blue),
  forall (HW_16: (forall (result:color),
                  (result = (access t0 b) ->
                   (forall (result0:color),
                    (result0 = (access t0 i) ->
                     (forall (t:(array color)),
                      (t = (update t0 b result0) ->
                       (forall (t0:(array color)),
                        (t0 = (update t i result) ->
                         (forall (b0:Z),
                          (b0 = (b + 1) ->
                           (forall (i0:Z),
                            (i0 = (i + 1) -> ((0 <= b0 /\ b0 <= i0) /\ (i0 <=
                             r /\ r <= N) /\ (monochrome t0 0 b0 blue) /\
                             (monochrome t0 b0 i0 white) /\
                             (monochrome t0 r N red) /\ (array_length t0) =
                             N) /\ (Zwf 0 (r - i0) (r - i)))))))) /\
                       0 <= i /\ i < (array_length t))) /\
                     0 <= b /\ b < (array_length t0))) /\
                   0 <= i /\ i < (array_length t0)))),
  0 <= b /\ b < (array_length t0).
Proof.
intuition.
Qed.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma dutch_flag_po_7 : 
  forall (t: (array color)),
  forall (HW_1: (array_length t) = N),
  forall (HW_2: (0 <= 0 /\ 0 <= 0) /\ (0 <= N /\ N <= N) /\
                (monochrome t 0 0 blue) /\ (monochrome t 0 0 white) /\
                (monochrome t N N red) /\ (array_length t) = N),
  forall (b: Z),
  forall (i: Z),
  forall (r: Z),
  forall (t0: (array color)),
  forall (HW_3: (0 <= b /\ b <= i) /\ (i <= r /\ r <= N) /\
                (monochrome t0 0 b blue) /\ (monochrome t0 b i white) /\
                (monochrome t0 r N red) /\ (array_length t0) = N),
  forall (HW_4: i < r),
  forall (result: color),
  forall (HW_5: result = (access t0 i)),
  forall (HW_17: ~(result = blue)),
  forall (result0: color),
  forall (HW_18: result0 = (access t0 i)),
  forall (HW_19: result0 = white),
  forall (i0: Z),
  forall (HW_20: i0 = (i + 1)),
  ((0 <= b /\ b <= i0) /\ (i0 <= r /\ r <= N) /\ (monochrome t0 0 b blue) /\
  (monochrome t0 b i0 white) /\ (monochrome t0 r N red) /\
  (array_length t0) = N) /\ (Zwf 0 (r - i0) (r - i)).
Proof.
unfold monochrome, Zwf; intuition try omega.
assert (h: (k < i)%Z \/ k = i).
 omega.
 intuition.
subst; assumption.
Qed.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma dutch_flag_po_8 : 
  forall (t: (array color)),
  forall (HW_1: (array_length t) = N),
  forall (HW_2: (0 <= 0 /\ 0 <= 0) /\ (0 <= N /\ N <= N) /\
                (monochrome t 0 0 blue) /\ (monochrome t 0 0 white) /\
                (monochrome t N N red) /\ (array_length t) = N),
  forall (b: Z),
  forall (i: Z),
  forall (r: Z),
  forall (t0: (array color)),
  forall (HW_3: (0 <= b /\ b <= i) /\ (i <= r /\ r <= N) /\
                (monochrome t0 0 b blue) /\ (monochrome t0 b i white) /\
                (monochrome t0 r N red) /\ (array_length t0) = N),
  forall (HW_4: i < r),
  forall (result: color),
  forall (HW_5: result = (access t0 i)),
  forall (HW_17: ~(result = blue)),
  forall (result0: color),
  forall (HW_18: result0 = (access t0 i)),
  forall (HW_21: ~(result0 = white)),
  forall (r0: Z),
  forall (HW_22: r0 = (r - 1)),
  forall (result1: color),
  forall (HW_23: result1 = (access t0 r0)),
  forall (result2: color),
  forall (HW_24: result2 = (access t0 i)),
  forall (t1: (array color)),
  forall (HW_25: t1 = (update t0 r0 result2)),
  forall (t2: (array color)),
  forall (HW_26: t2 = (update t1 i result1)),
  ((0 <= b /\ b <= i) /\ (i <= r0 /\ r0 <= N) /\ (monochrome t2 0 b blue) /\
  (monochrome t2 b i white) /\ (monochrome t2 r0 N red) /\
  (array_length t2) = N) /\ (Zwf 0 (r0 - i) (r - i)).
Proof.
unfold monochrome, Zwf; intuition try omega.
subst t2 t1; do 2 AccessOther.
apply H; omega.
subst t2 t1; do 2 AccessOther.
 auto with *.
assert (h: k = r0 \/ (r0 < k)).
 omega.
 intuition.
assert (h': k = i \/ (i < k)).
 omega.
 intuition.
subst; subst i; AccessSame.
destruct (access t0 (r-1)); tauto.
subst; AccessOther.
destruct (access t0 i); tauto.
subst; do 2 AccessOther.
auto with *.
subst t2 t1; simpl; trivial.
Qed.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma dutch_flag_po_9 : 
  forall (t: (array color)),
  forall (HW_1: (array_length t) = N),
  forall (HW_2: (0 <= 0 /\ 0 <= 0) /\ (0 <= N /\ N <= N) /\
                (monochrome t 0 0 blue) /\ (monochrome t 0 0 white) /\
                (monochrome t N N red) /\ (array_length t) = N),
  forall (b: Z),
  forall (i: Z),
  forall (r: Z),
  forall (t0: (array color)),
  forall (HW_3: (0 <= b /\ b <= i) /\ (i <= r /\ r <= N) /\
                (monochrome t0 0 b blue) /\ (monochrome t0 b i white) /\
                (monochrome t0 r N red) /\ (array_length t0) = N),
  forall (HW_4: i < r),
  forall (result: color),
  forall (HW_5: result = (access t0 i)),
  forall (HW_17: ~(result = blue)),
  forall (result0: color),
  forall (HW_18: result0 = (access t0 i)),
  forall (HW_21: ~(result0 = white)),
  forall (r0: Z),
  forall (HW_22: r0 = (r - 1)),
  forall (result1: color),
  forall (HW_23: result1 = (access t0 r0)),
  forall (result2: color),
  forall (HW_24: result2 = (access t0 i)),
  forall (t1: (array color)),
  forall (HW_25: t1 = (update t0 r0 result2)),
  forall (HW_27: (forall (t:(array color)),
                  (t = (update t1 i result1) -> ((0 <= b /\ b <= i) /\ (i <=
                   r0 /\ r0 <= N) /\ (monochrome t 0 b blue) /\
                   (monochrome t b i white) /\ (monochrome t r0 N red) /\
                   (array_length t) = N) /\ (Zwf 0 (r0 - i) (r - i))))),
  0 <= i /\ i < (array_length t1).
Proof.
intuition.
ArraySubst t1.
Qed.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma dutch_flag_po_10 : 
  forall (t: (array color)),
  forall (HW_1: (array_length t) = N),
  forall (HW_2: (0 <= 0 /\ 0 <= 0) /\ (0 <= N /\ N <= N) /\
                (monochrome t 0 0 blue) /\ (monochrome t 0 0 white) /\
                (monochrome t N N red) /\ (array_length t) = N),
  forall (b: Z),
  forall (i: Z),
  forall (r: Z),
  forall (t0: (array color)),
  forall (HW_3: (0 <= b /\ b <= i) /\ (i <= r /\ r <= N) /\
                (monochrome t0 0 b blue) /\ (monochrome t0 b i white) /\
                (monochrome t0 r N red) /\ (array_length t0) = N),
  forall (HW_4: i < r),
  forall (result: color),
  forall (HW_5: result = (access t0 i)),
  forall (HW_17: ~(result = blue)),
  forall (result0: color),
  forall (HW_18: result0 = (access t0 i)),
  forall (HW_21: ~(result0 = white)),
  forall (r0: Z),
  forall (HW_22: r0 = (r - 1)),
  forall (result1: color),
  forall (HW_23: result1 = (access t0 r0)),
  forall (result2: color),
  forall (HW_24: result2 = (access t0 i)),
  forall (HW_28: (forall (t:(array color)),
                  (t = (update t0 r0 result2) ->
                   (forall (t0:(array color)),
                    (t0 = (update t i result1) -> ((0 <= b /\ b <= i) /\
                     (i <= r0 /\ r0 <= N) /\ (monochrome t0 0 b blue) /\
                     (monochrome t0 b i white) /\ (monochrome t0 r0 N red) /\
                     (array_length t0) = N) /\ (Zwf 0 (r0 - i) (r - i)))) /\
                   0 <= i /\ i < (array_length t)))),
  0 <= r0 /\ r0 < (array_length t0).
Proof.
intuition.
Qed.


(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma dutch_flag_po_11 : 
  forall (t: (array color)),
  forall (HW_1: (array_length t) = N),
  forall (HW_2: (0 <= 0 /\ 0 <= 0) /\ (0 <= N /\ N <= N) /\
                (monochrome t 0 0 blue) /\ (monochrome t 0 0 white) /\
                (monochrome t N N red) /\ (array_length t) = N),
  forall (b: Z),
  forall (i: Z),
  forall (r: Z),
  forall (t0: (array color)),
  forall (HW_3: (0 <= b /\ b <= i) /\ (i <= r /\ r <= N) /\
                (monochrome t0 0 b blue) /\ (monochrome t0 b i white) /\
                (monochrome t0 r N red) /\ (array_length t0) = N),
  forall (HW_4: i < r),
  forall (result: color),
  forall (HW_5: result = (access t0 i)),
  forall (HW_17: ~(result = blue)),
  forall (result0: color),
  forall (HW_18: result0 = (access t0 i)),
  forall (HW_21: ~(result0 = white)),
  forall (r0: Z),
  forall (HW_22: r0 = (r - 1)),
  forall (result1: color),
  forall (HW_23: result1 = (access t0 r0)),
  forall (HW_29: (forall (result:color),
                  (result = (access t0 i) ->
                   (forall (t:(array color)),
                    (t = (update t0 r0 result) ->
                     (forall (t0:(array color)),
                      (t0 = (update t i result1) -> ((0 <= b /\ b <= i) /\
                       (i <= r0 /\ r0 <= N) /\ (monochrome t0 0 b blue) /\
                       (monochrome t0 b i white) /\
                       (monochrome t0 r0 N red) /\ (array_length t0) = N) /\
                       (Zwf 0 (r0 - i) (r - i)))) /\
                     0 <= i /\ i < (array_length t))) /\
                   0 <= r0 /\ r0 < (array_length t0)))),
  0 <= i /\ i < (array_length t0).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma dutch_flag_po_12 : 
  forall (t: (array color)),
  forall (HW_1: (array_length t) = N),
  forall (HW_2: (0 <= 0 /\ 0 <= 0) /\ (0 <= N /\ N <= N) /\
                (monochrome t 0 0 blue) /\ (monochrome t 0 0 white) /\
                (monochrome t N N red) /\ (array_length t) = N),
  forall (b: Z),
  forall (i: Z),
  forall (r: Z),
  forall (t0: (array color)),
  forall (HW_3: (0 <= b /\ b <= i) /\ (i <= r /\ r <= N) /\
                (monochrome t0 0 b blue) /\ (monochrome t0 b i white) /\
                (monochrome t0 r N red) /\ (array_length t0) = N),
  forall (HW_4: i < r),
  forall (result: color),
  forall (HW_5: result = (access t0 i)),
  forall (HW_17: ~(result = blue)),
  forall (result0: color),
  forall (HW_18: result0 = (access t0 i)),
  forall (HW_21: ~(result0 = white)),
  forall (r0: Z),
  forall (HW_22: r0 = (r - 1)),
  forall (HW_30: (forall (result:color),
                  (result = (access t0 r0) ->
                   (forall (result0:color),
                    (result0 = (access t0 i) ->
                     (forall (t:(array color)),
                      (t = (update t0 r0 result0) ->
                       (forall (t0:(array color)),
                        (t0 = (update t i result) -> ((0 <= b /\ b <= i) /\
                         (i <= r0 /\ r0 <= N) /\ (monochrome t0 0 b blue) /\
                         (monochrome t0 b i white) /\
                         (monochrome t0 r0 N red) /\ (array_length t0) =
                         N) /\ (Zwf 0 (r0 - i) (r - i)))) /\
                       0 <= i /\ i < (array_length t))) /\
                     0 <= r0 /\ r0 < (array_length t0))) /\
                   0 <= i /\ i < (array_length t0)))),
  0 <= r0 /\ r0 < (array_length t0).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma dutch_flag_po_13 : 
  forall (t: (array color)),
  forall (HW_1: (array_length t) = N),
  forall (HW_2: (0 <= 0 /\ 0 <= 0) /\ (0 <= N /\ N <= N) /\
                (monochrome t 0 0 blue) /\ (monochrome t 0 0 white) /\
                (monochrome t N N red) /\ (array_length t) = N),
  forall (b: Z),
  forall (i: Z),
  forall (r: Z),
  forall (t0: (array color)),
  forall (HW_3: (0 <= b /\ b <= i) /\ (i <= r /\ r <= N) /\
                (monochrome t0 0 b blue) /\ (monochrome t0 b i white) /\
                (monochrome t0 r N red) /\ (array_length t0) = N),
  forall (HW_4: i < r),
  forall (result: color),
  forall (HW_5: result = (access t0 i)),
  forall (HW_17: ~(result = blue)),
  forall (HW_31: (forall (result:color),
                  (result = (access t0 i) ->
                   ((result = white ->
                     (forall (i0:Z),
                      (i0 = (i + 1) -> ((0 <= b /\ b <= i0) /\ (i0 <= r /\
                       r <= N) /\ (monochrome t0 0 b blue) /\
                       (monochrome t0 b i0 white) /\
                       (monochrome t0 r N red) /\ (array_length t0) = N) /\
                       (Zwf 0 (r - i0) (r - i)))))) /\
                   ((~(result = white) ->
                     (forall (r0:Z),
                      (r0 = (r - 1) ->
                       (forall (result:color),
                        (result = (access t0 r0) ->
                         (forall (result0:color),
                          (result0 = (access t0 i) ->
                           (forall (t:(array color)),
                            (t = (update t0 r0 result0) ->
                             (forall (t0:(array color)),
                              (t0 = (update t i result) -> ((0 <= b /\ b <=
                               i) /\ (i <= r0 /\ r0 <= N) /\
                               (monochrome t0 0 b blue) /\
                               (monochrome t0 b i white) /\
                               (monochrome t0 r0 N red) /\
                               (array_length t0) = N) /\
                               (Zwf 0 (r0 - i) (r - i)))) /\
                             0 <= i /\ i < (array_length t))) /\
                           0 <= r0 /\ r0 < (array_length t0))) /\
                         0 <= i /\ i < (array_length t0))) /\
                       0 <= r0 /\ r0 < (array_length t0)))))))),
  0 <= i /\ i < (array_length t0).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma dutch_flag_po_14 : 
  forall (t: (array color)),
  forall (HW_1: (array_length t) = N),
  forall (HW_2: (0 <= 0 /\ 0 <= 0) /\ (0 <= N /\ N <= N) /\
                (monochrome t 0 0 blue) /\ (monochrome t 0 0 white) /\
                (monochrome t N N red) /\ (array_length t) = N),
  forall (b: Z),
  forall (i: Z),
  forall (r: Z),
  forall (t0: (array color)),
  forall (HW_3: (0 <= b /\ b <= i) /\ (i <= r /\ r <= N) /\
                (monochrome t0 0 b blue) /\ (monochrome t0 b i white) /\
                (monochrome t0 r N red) /\ (array_length t0) = N),
  forall (HW_4: i < r),
  forall (HW_32: (forall (result:color),
                  (result = (access t0 i) ->
                   ((result = blue ->
                     (forall (result:color),
                      (result = (access t0 b) ->
                       (forall (result0:color),
                        (result0 = (access t0 i) ->
                         (forall (t:(array color)),
                          (t = (update t0 b result0) ->
                           (forall (t0:(array color)),
                            (t0 = (update t i result) ->
                             (forall (b0:Z),
                              (b0 = (b + 1) ->
                               (forall (i0:Z),
                                (i0 = (i + 1) -> ((0 <= b0 /\ b0 <= i0) /\
                                 (i0 <= r /\ r <= N) /\
                                 (monochrome t0 0 b0 blue) /\
                                 (monochrome t0 b0 i0 white) /\
                                 (monochrome t0 r N red) /\
                                 (array_length t0) = N) /\
                                 (Zwf 0 (r - i0) (r - i)))))))) /\
                           0 <= i /\ i < (array_length t))) /\
                         0 <= b /\ b < (array_length t0))) /\
                       0 <= i /\ i < (array_length t0))) /\
                     0 <= b /\ b < (array_length t0))) /\
                   ((~(result = blue) ->
                     (forall (result:color),
                      (result = (access t0 i) ->
                       ((result = white ->
                         (forall (i0:Z),
                          (i0 = (i + 1) -> ((0 <= b /\ b <= i0) /\ (i0 <=
                           r /\ r <= N) /\ (monochrome t0 0 b blue) /\
                           (monochrome t0 b i0 white) /\
                           (monochrome t0 r N red) /\ (array_length t0) =
                           N) /\ (Zwf 0 (r - i0) (r - i)))))) /\
                       ((~(result = white) ->
                         (forall (r0:Z),
                          (r0 = (r - 1) ->
                           (forall (result:color),
                            (result = (access t0 r0) ->
                             (forall (result0:color),
                              (result0 = (access t0 i) ->
                               (forall (t:(array color)),
                                (t = (update t0 r0 result0) ->
                                 (forall (t0:(array color)),
                                  (t0 = (update t i result) -> ((0 <= b /\
                                   b <= i) /\ (i <= r0 /\ r0 <= N) /\
                                   (monochrome t0 0 b blue) /\
                                   (monochrome t0 b i white) /\
                                   (monochrome t0 r0 N red) /\
                                   (array_length t0) = N) /\
                                   (Zwf 0 (r0 - i) (r - i)))) /\
                                 0 <= i /\ i < (array_length t))) /\
                               0 <= r0 /\ r0 < (array_length t0))) /\
                             0 <= i /\ i < (array_length t0))) /\
                           0 <= r0 /\ r0 < (array_length t0))))))) /\
                     0 <= i /\ i < (array_length t0)))))),
  0 <= i /\ i < (array_length t0).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma dutch_flag_po_15 : 
  forall (t: (array color)),
  forall (HW_1: (array_length t) = N),
  forall (HW_2: (0 <= 0 /\ 0 <= 0) /\ (0 <= N /\ N <= N) /\
                (monochrome t 0 0 blue) /\ (monochrome t 0 0 white) /\
                (monochrome t N N red) /\ (array_length t) = N),
  forall (b: Z),
  forall (i: Z),
  forall (r: Z),
  forall (t0: (array color)),
  forall (HW_3: (0 <= b /\ b <= i) /\ (i <= r /\ r <= N) /\
                (monochrome t0 0 b blue) /\ (monochrome t0 b i white) /\
                (monochrome t0 r N red) /\ (array_length t0) = N),
  forall (HW_33: i >= r),
  (monochrome t0 0 b blue) /\ (monochrome t0 b r white) /\
  (monochrome t0 r N red).
Proof.
intuition.
replace r with i.
 trivial.
 omega.
Save.

