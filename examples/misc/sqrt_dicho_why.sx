(BG_PUSH (FORALL (t i v) (EQ (array_length (store t i v)) (array_length t))))

(BG_PUSH
  (FORALL (x y) (IMPLIES (<= x y) (<= x (int_div (+ x y) 2))))
  (FORALL (x y) (IMPLIES (< x y) (< (int_div (+ x y) 2) y)))
  ;(FORALL (a b) (EQ (int_div (+ a (* b 2)) 2) (+ (int_div a 2) b)))
)

;; DO NOT EDIT BELOW THIS LINE

;; sqrt_po_1, Why obligation from file "sqrt_dicho.mlw", line 0, characters 0-0:
(FORALL (x)
(IMPLIES (>= x 0)
(AND (<= (* 0 0) x) (AND (< x (* (+ x 1) (+ x 1))) (< 0 (+ x 1))))))

;; sqrt_po_2, Why obligation from file "sqrt_dicho.mlw", line 0, characters 0-0:
(FORALL (x)
(IMPLIES (>= x 0)
(FORALL (inf)
(FORALL (sup)
(IMPLIES (AND (<= (* inf inf) x) (AND (< x (* sup sup)) (< inf sup)))
(IMPLIES (NEQ (+ inf 1) sup)
(FORALL (result)
(IMPLIES (EQ result (int_div (+ (+ inf sup) 1) 2))
(FORALL (mil)
(IMPLIES (EQ mil result)
(IMPLIES (< x (* mil mil))
(FORALL (sup0)
(IMPLIES (EQ sup0 mil)
(AND (AND (<= (* inf inf) x) (AND (< x (* sup0 sup0)) (< inf sup0)))
(AND (<= 0 (- sup inf)) (< (- sup0 inf) (- sup inf)))))))))))))))))

;; sqrt_po_3, Why obligation from file "sqrt_dicho.mlw", line 0, characters 0-0:
(FORALL (x)
(IMPLIES (>= x 0)
(FORALL (inf)
(FORALL (sup)
(IMPLIES (AND (<= (* inf inf) x) (AND (< x (* sup sup)) (< inf sup)))
(IMPLIES (NEQ (+ inf 1) sup)
(FORALL (result)
(IMPLIES (EQ result (int_div (+ (+ inf sup) 1) 2))
(FORALL (mil)
(IMPLIES (EQ mil result)
(IMPLIES (>= x (* mil mil))
(FORALL (inf0)
(IMPLIES (EQ inf0 mil)
(AND (AND (<= (* inf0 inf0) x) (AND (< x (* sup sup)) (< inf0 sup)))
(AND (<= 0 (- sup inf)) (< (- sup inf0) (- sup inf)))))))))))))))))

;; sqrt_po_4, Why obligation from file "sqrt_dicho.mlw", line 0, characters 0-0:
(FORALL (x)
(IMPLIES (>= x 0)
(FORALL (inf)
(FORALL (sup)
(IMPLIES (AND (<= (* inf inf) x) (AND (< x (* sup sup)) (< inf sup)))
(IMPLIES (NEQ (+ inf 1) sup) (NEQ 2 0)))))))

;; sqrt_po_5, Why obligation from file "sqrt_dicho.mlw", line 0, characters 0-0:
(FORALL (x)
(IMPLIES (>= x 0)
(FORALL (inf)
(FORALL (sup)
(IMPLIES (AND (<= (* inf inf) x) (AND (< x (* sup sup)) (< inf sup)))
(IMPLIES (EQ (+ inf 1) sup)
(AND (<= (* inf inf) x) (< x (* (+ inf 1) (+ inf 1))))))))))

