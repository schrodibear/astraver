(* Load Programs. *)(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Import Why.
Require Import WhyFloat.

Axiom magic : False.
Ltac Magic := elim magic.

(* Why obligation from file , characters 156-159 *)
Lemma copy_po_1 :
 forall (n:Z) (t1 t2:array Z)
   (Pre6:(array_length t1 >= n)%Z /\ (array_length t2 >= n)%Z) 
   (i:Z) (Post5:i = n) (Variant1 i1:Z) (t2_0:array Z)
   (Pre5:Variant1 = i1)
   (Pre4:(array_length t2_0 >= n)%Z /\
         (i1 <= n)%Z /\
         (forall k:Z,
            (i1 <= k)%Z /\ (k < n)%Z -> access t2_0 k = access t1 k))
   (Test2:true = true) (c_aux_2:Z) (Post2:c_aux_2 = i1) (i2:Z)
   (Post1:i2 = (i1 - 1)%Z),
   ((c_aux_2 > 0)%Z ->
    forall result:Z,
      result = i2 ->
      ((forall t2:array Z,
          t2 = store t2_0 result (access t1 i2) ->
          ((array_length t2 >= n)%Z /\
           (i2 <= n)%Z /\
           (forall k:Z,
              (i2 <= k)%Z /\ (k < n)%Z -> access t2 k = access t1 k)) /\
          Zwf 0 i2 i1) /\
       (0 <= result)%Z /\ (result < array_length t2_0)%Z) /\
      (0 <= i2)%Z /\ (i2 < array_length t1)%Z) /\
   ((c_aux_2 <= 0)%Z ->
    forall k:Z, (0 <= k)%Z /\ (k < n)%Z -> access t2_0 k = access t1 k).
Proof.
intuition.
subst t0; trivial.
assert (k = i2 \/ (i2 < k)%Z).
 omega.
 intuition.
subst result k t0.
AccessSame.
subst result t0; AccessOther.
apply H4; omega.
Qed.

(* Why obligation from file , characters 185-281 *)
Lemma copy_po_2 :
 forall (n:Z) (t1 t2:array Z)
   (Pre6:(array_length t1 >= n)%Z /\ (array_length t2 >= n)%Z) 
   (i:Z) (Post5:i = n),
   (array_length t2 >= n)%Z /\
   (i <= n)%Z /\
   (forall k:Z, (i <= k)%Z /\ (k < n)%Z -> access t2 k = access t1 k).
Proof.
auto with *.
Qed.

