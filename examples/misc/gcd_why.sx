(BG_PUSH (FORALL (t i v) (EQ (array_length (store t i v)) (array_length t))))

; axiomatization of gcd
(BG_PUSH
  (FORALL (a b) (EQ (gcd a b) (gcd (- a b) b)))
  (FORALL (a b) (EQ (gcd a b) (gcd a (- b a))))
  (FORALL (a) (EQ (gcd a a) a))
  (FORALL (a) (EQ (gcd a 0) a))
  (FORALL (a b) (EQ (gcd a b) (gcd b (int_mod a b))))
)

; definition of max
(BG_PUSH
(FORALL (a b)
  (PATS (max a b))
  (>= (max a b) a))
(FORALL (a b)
  (PATS (max a b))
  (>= (max a b) b))
(FORALL (a b)
  (PATS (max a b))
  (OR (EQ (max a b) a) (EQ (max a b) b)))
)

; 0 <= int_mod x y < y
(BG_PUSH
  (FORALL (x y) (IMPLIES (AND (<= 0 x) (<= 0 y)) (<= 0 (int_mod x y))))
  (FORALL (x y) (IMPLIES (AND (<= 0 x) (<= 0 y)) (< (int_mod x y) y)))
)

;; DO NOT EDIT BELOW THIS LINE

;; gcd1_po_1, Why obligation from file "gcd.mlw", line 0, characters 0-0:
(FORALL (a)
(FORALL (b)
(IMPLIES (AND (> a 0) (> b 0))
(AND (< 0 a) (AND (< 0 b) (EQ (gcd a b) (gcd a b)))))))

;; gcd1_po_2, Why obligation from file "gcd.mlw", line 0, characters 0-0:
(FORALL (a)
(FORALL (b)
(IMPLIES (AND (> a 0) (> b 0))
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (< 0 x) (AND (< 0 y) (EQ (gcd x y) (gcd a b))))
(IMPLIES (NEQ x y)
(IMPLIES (> x y)
(FORALL (x0)
(IMPLIES (EQ x0 (- x y))
(AND (AND (< 0 x0) (AND (< 0 y) (EQ (gcd x0 y) (gcd a b))))
(AND (<= 0 (max x y)) (< (max x0 y) (max x y))))))))))))))

;; gcd1_po_3, Why obligation from file "gcd.mlw", line 0, characters 0-0:
(FORALL (a)
(FORALL (b)
(IMPLIES (AND (> a 0) (> b 0))
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (< 0 x) (AND (< 0 y) (EQ (gcd x y) (gcd a b))))
(IMPLIES (NEQ x y)
(IMPLIES (<= x y)
(FORALL (y0)
(IMPLIES (EQ y0 (- y x))
(AND (AND (< 0 x) (AND (< 0 y0) (EQ (gcd x y0) (gcd a b))))
(AND (<= 0 (max x y)) (< (max x y0) (max x y))))))))))))))

;; gcd1_po_4, Why obligation from file "gcd.mlw", line 0, characters 0-0:
(FORALL (a)
(FORALL (b)
(IMPLIES (AND (> a 0) (> b 0))
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (< 0 x) (AND (< 0 y) (EQ (gcd x y) (gcd a b))))
(IMPLIES (EQ x y) (EQ x (gcd a b)))))))))

;; gcd2_po_1, Why obligation from file "gcd.mlw", line 0, characters 0-0:
(FORALL (a)
(FORALL (b)
(IMPLIES (AND (>= a 0) (>= b 0))
(AND (<= 0 a) (AND (<= 0 b) (EQ (gcd a b) (gcd a b)))))))

;; gcd2_po_2, Why obligation from file "gcd.mlw", line 0, characters 0-0:
(FORALL (a)
(FORALL (b)
(IMPLIES (AND (>= a 0) (>= b 0))
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (<= 0 x) (AND (<= 0 y) (EQ (gcd x y) (gcd a b))))
(IMPLIES (NEQ y 0)
(FORALL (x0)
(IMPLIES (EQ x0 y)
(FORALL (y0)
(IMPLIES (EQ y0 (int_mod x y))
(AND (AND (<= 0 x0) (AND (<= 0 y0) (EQ (gcd x0 y0) (gcd a b))))
(AND (<= 0 y) (< y0 y))))))))))))))

;; gcd2_po_3, Why obligation from file "gcd.mlw", line 0, characters 0-0:
(FORALL (a)
(FORALL (b)
(IMPLIES (AND (>= a 0) (>= b 0))
(FORALL (x)
(FORALL (y)
(IMPLIES (AND (<= 0 x) (AND (<= 0 y) (EQ (gcd x y) (gcd a b))))
(IMPLIES (EQ y 0) (EQ x (gcd a b)))))))))

