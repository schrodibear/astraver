(* Load Programs. *)(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Import Why.


(* Why obligation from file , characters 383-388 *)
Lemma search1_po_1 :
 forall (t:array Z) (i:Z) (Post3:i = 0%Z) (Variant1 i1:Z)
   (Pre8:Variant1 = (array_length t - i1)%Z)
   (Pre7:(0 <= i1)%Z /\
         (forall k:Z, (0 <= k)%Z /\ (k < i1)%Z -> access t k <> 0%Z))
   (Test4:(i1 < array_length t)%Z),
   (0 <= i1)%Z /\ (i1 < array_length t)%Z.
Proof.
auto with *.
Qed.

(* Why obligation from file , characters 414-414 *)
Lemma search1_po_2 :
 forall (t:array Z) (i:Z) (Post3:i = 0%Z) (Variant1 i1:Z)
   (Pre8:Variant1 = (array_length t - i1)%Z)
   (Pre7:(0 <= i1)%Z /\
         (forall k:Z, (0 <= k)%Z /\ (k < i1)%Z -> access t k <> 0%Z))
   (Test4:(i1 < array_length t)%Z)
   (Pre6:(0 <= i1)%Z /\ (i1 < array_length t)%Z)
   (Test2:access t i1 <> 0%Z) (i:Z),
   i = (i1 + 1)%Z ->
   ((0 <= i)%Z /\
    (forall k:Z, (0 <= k)%Z /\ (k < i)%Z -> access t k <> 0%Z)) /\
   Zwf 0 (array_length t - i) (array_length t - i1).
Proof.
intuition.
assert (k = i1 \/ (k < i1)%Z).
 omega.
 intuition.
subst k.
 auto.
apply (H0 k).
 omega.
 assumption.
Qed.

(* Why obligation from file , characters 286-334 *)
Lemma search1_po_3 :
 forall (t:array Z) (i:Z) (Post3:i = 0%Z),
   (0 <= i)%Z /\
   (forall k:Z, (0 <= k)%Z /\ (k < i)%Z -> access t k <> 0%Z).
Proof.
intuition.
Qed.

(* Why obligation from file , characters 448-469 *)
Lemma search1_po_4 :
 forall (t:array Z) (i:Z) (Post3:i = 0%Z) (i1:Z)
   (Post2:((0 <= i1)%Z /\
           (forall k:Z, (0 <= k)%Z /\ (k < i1)%Z -> access t k <> 0%Z)) /\
          (i1 >= array_length t)%Z) (k:Z),
   (0 <= k)%Z /\ (k < array_length t)%Z -> access t k <> 0%Z.
Proof.
intuition.
apply (H2 k); omega.
Qed.


(* Why obligation from file , characters 885-890 *)
Lemma search2_po_1 :
 forall (t:array Z) (i:Z) (Post3:i = 0%Z) (Variant1 i1:Z)
   (Pre8:Variant1 = (array_length t - i1)%Z)
   (Pre7:(0 <= i1)%Z /\
         (forall k:Z, (0 <= k)%Z /\ (k < i1)%Z -> access t k <> 0%Z))
   (Test4:(i1 < array_length t)%Z),
   (0 <= i1)%Z /\ (i1 < array_length t)%Z.
Proof.
auto with *.
Qed.

(* Why obligation from file , characters 911-911 *)
Lemma search2_po_2 :
 forall (t:array Z) (i:Z) (Post3:i = 0%Z) (Variant1 i1:Z)
   (Pre8:Variant1 = (array_length t - i1)%Z)
   (Pre7:(0 <= i1)%Z /\
         (forall k:Z, (0 <= k)%Z /\ (k < i1)%Z -> access t k <> 0%Z))
   (Test4:(i1 < array_length t)%Z)
   (Pre6:(0 <= i1)%Z /\ (i1 < array_length t)%Z)
   (Test2:access t i1 <> 0%Z) (i:Z),
   i = (i1 + 1)%Z ->
   ((0 <= i)%Z /\
    (forall k:Z, (0 <= k)%Z /\ (k < i)%Z -> access t k <> 0%Z)) /\
   Zwf 0 (array_length t - i) (array_length t - i1).
Proof.
intuition.
assert (k = i1 \/ (k < i1)%Z).
 omega.
 intuition.
subst k.
 auto.
apply (H0 k).
 omega.
 assumption.
Qed.

(* Why obligation from file , characters 789-837 *)
Lemma search2_po_3 :
 forall (t:array Z) (i:Z) (Post3:i = 0%Z),
   (0 <= i)%Z /\
   (forall k:Z, (0 <= k)%Z /\ (k < i)%Z -> access t k <> 0%Z).
Proof.
intuition.
Qed.

(* Why obligation from file , characters 945-966 *)
Lemma search2_po_4 :
 forall (t:array Z) (i:Z) (Post3:i = 0%Z) (i1:Z)
   (Post2:((0 <= i1)%Z /\
           (forall k:Z, (0 <= k)%Z /\ (k < i1)%Z -> access t k <> 0%Z)) /\
          (i1 >= array_length t)%Z) (k:Z),
   (0 <= k)%Z /\ (k < array_length t)%Z -> access t k <> 0%Z.
Proof.
intuition.
apply (H2 k); omega.
Qed.


(* Why obligation from file , characters 1503-1517 *)
Lemma search3_po_1 :
 forall (t:array Z) (Pre17:(0 <= array_length t)%Z),
   (0 <= 0)%Z /\ (0 <= array_length t)%Z.
Proof.
intros; omega.
Qed.

(* Why obligation from file , characters 1314-1335 *)
Lemma search3_po_2 :
 forall (t:array Z) (Pre17:(0 <= array_length t)%Z)
   (Pre16 Pre14 Pre15:(0 <= 0)%Z /\ (0 <= array_length t)%Z)
   (Variant1 i0:Z) (Pre12:Variant1 = (array_length t - i0)%Z)
   (Pre11:(0 <= i0)%Z /\ (i0 <= array_length t)%Z)
   (Test4:i0 = array_length t) (k:Z),
   (i0 <= k)%Z /\ (k < array_length t)%Z -> access t k <> 0%Z.
Proof.
intros; omega.
Qed.

(* Why obligation from file , characters 1350-1354 *)
Lemma search3_po_3 :
 forall (t:array Z) (Pre17:(0 <= array_length t)%Z)
   (Pre16 Pre14 Pre15:(0 <= 0)%Z /\ (0 <= array_length t)%Z)
   (Variant1 i0:Z) (Pre12:Variant1 = (array_length t - i0)%Z)
   (Pre11:(0 <= i0)%Z /\ (i0 <= array_length t)%Z)
   (Test3:i0 <> array_length t), (0 <= i0)%Z /\ (i0 < array_length t)%Z.
Proof.
intuition.
Qed.

(* Why obligation from file , characters 1377-1397 *)
Lemma search3_po_4 :
 forall (t:array Z) (Pre17:(0 <= array_length t)%Z)
   (Pre16 Pre14 Pre15:(0 <= 0)%Z /\ (0 <= array_length t)%Z)
   (Variant1 i0:Z) (Pre12:Variant1 = (array_length t - i0)%Z)
   (Pre11:(0 <= i0)%Z /\ (i0 <= array_length t)%Z)
   (Test3:i0 <> array_length t)
   (Pre10:(0 <= i0)%Z /\ (i0 < array_length t)%Z)
   (Test1:access t i0 <> 0%Z),
   (0 <= i0 + 1)%Z /\ (i0 + 1 <= array_length t)%Z.
Proof.
intuition.
Qed.

(* Why obligation from file , characters 1249-1494 *)
Lemma search3_po_5 :
 forall (t:array Z) (Pre17:(0 <= array_length t)%Z)
   (Pre16 Pre14 Pre15:(0 <= 0)%Z /\ (0 <= array_length t)%Z)
   (Variant1 i0:Z) (Pre12:Variant1 = (array_length t - i0)%Z)
   (Pre11:(0 <= i0)%Z /\ (i0 <= array_length t)%Z)
   (Test3:i0 <> array_length t)
   (Pre10:(0 <= i0)%Z /\ (i0 < array_length t)%Z)
   (Test1:access t i0 <> 0%Z)
   (Pre9 Pre7 Pre8:(0 <= i0 + 1)%Z /\ (i0 + 1 <= array_length t)%Z),
   Zwf 0 (array_length t - (i0 + 1)) Variant1.
Proof.
unfold Zwf; intuition.
Qed.

(* Why obligation from file , characters 1377-1397 *)
Lemma search3_po_6 :
 forall (t:array Z) (Pre17:(0 <= array_length t)%Z)
   (Pre16 Pre14 Pre15:(0 <= 0)%Z /\ (0 <= array_length t)%Z)
   (Variant1 i0:Z) (Pre12:Variant1 = (array_length t - i0)%Z)
   (Pre11:(0 <= i0)%Z /\ (i0 <= array_length t)%Z)
   (Test3:i0 <> array_length t)
   (Pre10:(0 <= i0)%Z /\ (i0 < array_length t)%Z)
   (Test1:access t i0 <> 0%Z)
   (Pre9:(0 <= i0 + 1)%Z /\ (i0 + 1 <= array_length t)%Z)
   (Post11:forall k:Z,
             (i0 + 1 <= k)%Z /\ (k < array_length t)%Z ->
             access t k <> 0%Z) (k:Z),
   (i0 <= k)%Z /\ (k < array_length t)%Z -> access t k <> 0%Z.
Proof.
intuition.
assert (k = i0 \/ (i0 < k)%Z).
 omega.
 intuition.
subst k; auto.
apply Post11 with k; omega.
Qed.

(* Why obligation from file , characters 1149-1608 *)
Lemma search3_po_7 :
 forall (t:array Z) (Pre17:(0 <= array_length t)%Z)
   (Pre16:(0 <= 0)%Z /\ (0 <= array_length t)%Z)
   (Post23:forall k:Z,
             (0 <= k)%Z /\ (k < array_length t)%Z -> access t k <> 0%Z)
   (k:Z), (0 <= k)%Z /\ (k < array_length t)%Z -> access t k <> 0%Z.
Proof.
trivial.
Qed.

