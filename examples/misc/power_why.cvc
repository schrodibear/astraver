
UNIT: TYPE;
tt: UNIT;
array_length_INT: [ARRAY INT OF INT -> INT]; %% should be polymorphic
sqrt_real: [REAL -> REAL];
int_of_real: [REAL -> INT];
mod_int: [[INT, INT] -> INT];

Zpower: [[INT, INT] -> INT];
ASSERT FORALL (x,y,z:INT): Zpower(x,y+z) = Zpower(x,y) * Zpower(x,z);
ASSERT FORALL (x:INT): Zpower(x,0) = 1;

Zeven: [INT -> BOOLEAN];
ASSERT FORALL (x:INT): Zeven(x) <=> EXISTS (y:INT): x=2*y;
Zodd: [INT -> BOOLEAN];
ASSERT FORALL (x:INT): Zodd(x) <=> EXISTS (y:INT): x=2*y+1;

div2: [INT -> INT];
ASSERT FORALL (x:INT): x >= 0 => div2(x) >= 0;
ASSERT FORALL (x:INT): x > 0 => div2(x) < x;

%%%% DO NOT EDIT BELOW THIS LINE

%% Why parameter x
x: INT;

%% power1_po_1, Why obligation from file "power.mlw", characters 553-565
QUERY (FORALL (n:INT):
      ((n >= 0) =>
      (FORALL (m0:INT):
      ((m0 = x) =>
      (FORALL (y0:INT):
      ((y0 = 1) =>
      (FORALL (Variant1:INT):
      (FORALL (m1:INT):
      (FORALL (n0:INT):
      (FORALL (y1:INT):
      ((Variant1 = n0) =>
      (((Zpower(x, n) = (y1 * Zpower(m1, n0))) AND (n0 >= 0)) =>
      ((n0 > 0) =>
      (Zodd(n0) =>
      (FORALL (y2:INT):
      ((y2 = (y1 * m1)) =>
      (FORALL (m:INT):
      ((m = (m1 * m1)) =>
      (FORALL (n1:INT):
      ((n1 = div2(n0)) =>
      (((Zpower(x, n) = (y2 * Zpower(m, n1))) AND (n1 >= 0)) AND
      ((0 <= n0) AND (n1 < n0)))))))))))))))))))))));

%% power1_po_2, Why obligation from file "power.mlw", characters 565-565
QUERY (FORALL (n:INT):
      ((n >= 0) =>
      (FORALL (m0:INT):
      ((m0 = x) =>
      (FORALL (y0:INT):
      ((y0 = 1) =>
      (FORALL (Variant1:INT):
      (FORALL (m1:INT):
      (FORALL (n0:INT):
      (FORALL (y1:INT):
      ((Variant1 = n0) =>
      (((Zpower(x, n) = (y1 * Zpower(m1, n0))) AND (n0 >= 0)) =>
      ((n0 > 0) =>
      (Zeven(n0) =>
      (FORALL (result3:UNIT):
      ((result3 = tt) =>
      (FORALL (m:INT):
      ((m = (m1 * m1)) =>
      (FORALL (n1:INT):
      ((n1 = div2(n0)) =>
      (((Zpower(x, n) = (y1 * Zpower(m, n1))) AND (n1 >= 0)) AND
      ((0 <= n0) AND (n1 < n0)))))))))))))))))))))));

%% power1_po_3, Why obligation from file "power.mlw", characters 427-616
QUERY (FORALL (n:INT):
      ((n >= 0) =>
      (FORALL (m0:INT):
      ((m0 = x) =>
      (FORALL (y0:INT):
      ((y0 = 1) =>
      (FORALL (Variant1:INT):
      (FORALL (m1:INT):
      (FORALL (n0:INT):
      (FORALL (y1:INT):
      ((Variant1 = n0) =>
      (((Zpower(x, n) = (y1 * Zpower(m1, n0))) AND (n0 >= 0)) =>
      ((n0 <= 0) => (y1 = Zpower(x, n)))))))))))))));

%% power1_po_4, Why obligation from file "power.mlw", characters 461-506
QUERY (FORALL (n:INT):
      ((n >= 0) =>
      (FORALL (m0:INT):
      ((m0 = x) =>
      (FORALL (y0:INT):
      ((y0 = 1) => ((Zpower(x, n) = (y0 * Zpower(m0, n))) AND (n >= 0))))))));

