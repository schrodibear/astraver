
;; DO NOT EDIT BELOW THIS LINE

(BG_PUSH (NEQ |@true| |@false|))

(BG_PUSH
 ;; Why axiom lt_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (lt_int_bool x y) |@true|) (< x y)))))

(BG_PUSH
 ;; Why axiom le_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (le_int_bool x y) |@true|) (<= x y)))))

(BG_PUSH
 ;; Why axiom gt_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (gt_int_bool x y) |@true|) (> x y)))))

(BG_PUSH
 ;; Why axiom ge_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (ge_int_bool x y) |@true|) (>= x y)))))

(BG_PUSH
 ;; Why axiom eq_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (eq_int_bool x y) |@true|) (EQ x y)))))

(BG_PUSH
 ;; Why axiom neq_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (neq_int_bool x y) |@true|) (NEQ x y)))))

(BG_PUSH
 ;; Why axiom ite_true
 (FORALL (x) (FORALL (y) (EQ (ite |@true| x y) x))))

(BG_PUSH
 ;; Why axiom ite_false
 (FORALL (x) (FORALL (y) (EQ (ite |@false| x y) y))))

(BG_PUSH
 ;; Why axiom access_update
 (FORALL (t) (FORALL (i) (FORALL (v) (EQ (access (update t i v) i) v)))))

(BG_PUSH
 ;; Why axiom access_update_neq
 (FORALL (t)
 (FORALL (i)
 (FORALL (j)
 (FORALL (v) (IMPLIES (NEQ i j) (EQ (access (update t i v) j) (access t j)))))))

 (FORALL (i)
 (FORALL (j)
 (IMPLIES (NEQ i j)
 (FORALL (t) (FORALL (v) (EQ (access (update t i v) j) (access t j))))))))

(DEFPRED (sorted_array t i j)
  (FORALL (k)
  (IMPLIES (AND (<= i k) (< k j)) (<= (access t k) (access t (+ k 1))))))

(DEFPRED (exchange t1 t2 i j)
  (AND (EQ (array_length t1) (array_length t2))
  (AND (EQ (access t1 i) (access t2 j))
  (AND (EQ (access t2 i) (access t1 j))
  (FORALL (k)
  (IMPLIES (AND (NEQ k i) (NEQ k j)) (EQ (access t1 k) (access t2 k))))))))

(BG_PUSH
 ;; Why axiom permut_refl
 (FORALL (t) (EQ (permut t t) |@true|)))

(BG_PUSH
 ;; Why axiom permut_sym
 (FORALL (t1)
 (FORALL (t2)
 (IMPLIES (EQ (permut t1 t2) |@true|) (EQ (permut t2 t1) |@true|)))))

(BG_PUSH
 ;; Why axiom permut_trans
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (t3)
 (IMPLIES (AND (EQ (permut t1 t2) |@true|) (EQ (permut t2 t3) |@true|))
 (EQ (permut t1 t3) |@true|))))))

(BG_PUSH
 ;; Why axiom permut_exchange
 (FORALL (t)
 (FORALL (i)
 (FORALL (j)
 (EQ (permut t (update (update t i (access t j)) j (access t i))) |@true|)))))

(BG_PUSH
 ;; Why axiom sub_permut_refl
 (FORALL (t) (FORALL (g) (FORALL (d) (EQ (sub_permut g d t t) |@true|)))))

(BG_PUSH
 ;; Why axiom sub_permut_sym
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (EQ (sub_permut g d t2 t1) |@true|)))))))

(BG_PUSH
 ;; Why axiom sub_permut_trans
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (t3)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (IMPLIES (EQ (sub_permut g d t2 t3) |@true|)
 (EQ (sub_permut g d t1 t3) |@true|))))))))

 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (FORALL (t3)
 (IMPLIES (EQ (sub_permut g d t2 t3) |@true|)
 (EQ (sub_permut g d t1 t3) |@true|)))))))))

(BG_PUSH
 ;; Why axiom sub_permut_exchange_1
 (FORALL (t)
 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES (AND (<= g i) (AND (<= i d) (AND (<= g j) (<= j d))))
 (EQ (sub_permut g d t
 (update (update t i (access t j)) j (access t i))) |@true|)))))))

 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES (AND (<= g i) (AND (<= i d) (AND (<= g j) (<= j d))))
 (FORALL (t)
 (EQ (sub_permut g d t
 (update (update t i (access t j)) j (access t i))) |@true|))))))))

(BG_PUSH
 ;; Why axiom sub_permut_exchange_2
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES
 (AND (<= g i)
 (AND (<= i d) (AND (<= g j) (AND (<= j d) (exchange t1 t2 i j)))))
 (EQ (sub_permut g d t1 t2) |@true|)))))))))

(BG_PUSH
 ;; Why axiom sub_permut_permut
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|) (EQ (permut t1 t2) |@true|)))))))

(BG_PUSH
 ;; Why axiom array_length_update
 (FORALL (t)
 (FORALL (i)
 (FORALL (v) (EQ (array_length (update t i v)) (array_length t))))))

(BG_PUSH
 ;; Why axiom sub_permut_array_length
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (EQ (array_length t1) (array_length t2))))))))

(BG_PUSH
 ;; Why axiom permut_array_length
 (FORALL (t1)
 (FORALL (t2)
 (IMPLIES (EQ (permut t1 t2) |@true|)
 (EQ (array_length t1) (array_length t2))))))

;; dutch_flag_po_1, Why obligation from file "flag.mlw", line 22, characters 4-535:
(FORALL (t)
(IMPLIES (EQ (array_length t) N)
(AND (AND (<= 0 0) (<= 0 0))
(AND (AND (<= 0 N) (<= N N))
(AND (EQ (monochrome t 0 0 blue) |@true|)
(AND (EQ (monochrome t 0 0 white) |@true|)
(AND (EQ (monochrome t N N red) |@true|) (EQ (array_length t) N))))))))

;; dutch_flag_po_2, Why obligation from file "flag.mlw", line 29, characters 19-24:
(FORALL (t)
(IMPLIES (EQ (array_length t) N)
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r N))
         (AND (EQ (monochrome t0 0 b blue) |@true|)
         (AND (EQ (monochrome t0 b i white) |@true|)
         (AND (EQ (monochrome t0 r N red) |@true|) (EQ (array_length t0) N))))))
(IMPLIES (< i r) (AND (<= 0 i) (< i (array_length t0)))))))))))

;; dutch_flag_po_3, Why obligation from file "flag.mlw", line 30, characters 17-22:
(FORALL (t)
(IMPLIES (EQ (array_length t) N)
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r N))
         (AND (EQ (monochrome t0 0 b blue) |@true|)
         (AND (EQ (monochrome t0 b i white) |@true|)
         (AND (EQ (monochrome t0 r N red) |@true|) (EQ (array_length t0) N))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result)
(IMPLIES (EQ result (access t0 i))
(IMPLIES (EQ result blue) (AND (<= 0 b) (< b (array_length t0)))))))))))))))

;; dutch_flag_po_4, Why obligation from file "flag.mlw", line 30, characters 48-58:
(FORALL (t)
(IMPLIES (EQ (array_length t) N)
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r N))
         (AND (EQ (monochrome t0 0 b blue) |@true|)
         (AND (EQ (monochrome t0 b i white) |@true|)
         (AND (EQ (monochrome t0 r N red) |@true|) (EQ (array_length t0) N))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result)
(IMPLIES (EQ result (access t0 i))
(IMPLIES (EQ result blue)
(IMPLIES (AND (<= 0 b) (< b (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 b))
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t0 i))
(IMPLIES (AND (<= 0 b) (< b (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 b result1))
(AND (<= 0 i) (< i (array_length t1))))))))))))))))))))))))

;; dutch_flag_po_5, Why obligation from file "flag.mlw", line 30, characters 48-58:
(FORALL (t)
(IMPLIES (EQ (array_length t) N)
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r N))
         (AND (EQ (monochrome t0 0 b blue) |@true|)
         (AND (EQ (monochrome t0 b i white) |@true|)
         (AND (EQ (monochrome t0 r N red) |@true|) (EQ (array_length t0) N))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result)
(IMPLIES (EQ result (access t0 i))
(IMPLIES (EQ result blue)
(IMPLIES (AND (<= 0 b) (< b (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 b))
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t0 i))
(IMPLIES (AND (<= 0 b) (< b (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 b result1))
(IMPLIES (AND (<= 0 i) (< i (array_length t1)))
(FORALL (t2)
(IMPLIES (EQ t2 (update t1 i result0))
(FORALL (b0)
(IMPLIES (EQ b0 (+ b 1))
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1))
(AND
(AND (AND (<= 0 b0) (<= b0 i0))
(AND (AND (<= i0 r) (<= r N))
(AND (EQ (monochrome t2 0 b0 blue) |@true|)
(AND (EQ (monochrome t2 b0 i0 white) |@true|)
(AND (EQ (monochrome t2 r N red) |@true|) (EQ (array_length t2) N))))))
(AND (<= 0 (- r i)) (< (- r i0) (- r i))))))))))))))))))))))))))))))))

;; dutch_flag_po_6, Why obligation from file "flag.mlw", line 34, characters 9-20:
(FORALL (t)
(IMPLIES (EQ (array_length t) N)
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r N))
         (AND (EQ (monochrome t0 0 b blue) |@true|)
         (AND (EQ (monochrome t0 b i white) |@true|)
         (AND (EQ (monochrome t0 r N red) |@true|) (EQ (array_length t0) N))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result)
(IMPLIES (EQ result (access t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i))
(IMPLIES (EQ result0 white)
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1))
(AND
(AND (AND (<= 0 b) (<= b i0))
(AND (AND (<= i0 r) (<= r N))
(AND (EQ (monochrome t0 0 b blue) |@true|)
(AND (EQ (monochrome t0 b i0 white) |@true|)
(AND (EQ (monochrome t0 r N red) |@true|) (EQ (array_length t0) N))))))
(AND (<= 0 (- r i)) (< (- r i0) (- r i))))))))))))))))))))))

;; dutch_flag_po_7, Why obligation from file "flag.mlw", line 37, characters 17-22:
(FORALL (t)
(IMPLIES (EQ (array_length t) N)
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r N))
         (AND (EQ (monochrome t0 0 b blue) |@true|)
         (AND (EQ (monochrome t0 b i white) |@true|)
         (AND (EQ (monochrome t0 r N red) |@true|) (EQ (array_length t0) N))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result)
(IMPLIES (EQ result (access t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1)) (AND (<= 0 r0) (< r0 (array_length t0)))))))))))))))))))))

;; dutch_flag_po_8, Why obligation from file "flag.mlw", line 37, characters 48-58:
(FORALL (t)
(IMPLIES (EQ (array_length t) N)
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r N))
         (AND (EQ (monochrome t0 0 b blue) |@true|)
         (AND (EQ (monochrome t0 b i white) |@true|)
         (AND (EQ (monochrome t0 r N red) |@true|) (EQ (array_length t0) N))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result)
(IMPLIES (EQ result (access t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1))
(IMPLIES (AND (<= 0 r0) (< r0 (array_length t0)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t0 r0))
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result2)
(IMPLIES (EQ result2 (access t0 i))
(IMPLIES (AND (<= 0 r0) (< r0 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 r0 result2))
(AND (<= 0 i) (< i (array_length t1))))))))))))))))))))))))))))))

;; dutch_flag_po_9, Why obligation from file "flag.mlw", line 37, characters 48-58:
(FORALL (t)
(IMPLIES (EQ (array_length t) N)
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r N))
         (AND (EQ (monochrome t0 0 b blue) |@true|)
         (AND (EQ (monochrome t0 b i white) |@true|)
         (AND (EQ (monochrome t0 r N red) |@true|) (EQ (array_length t0) N))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result)
(IMPLIES (EQ result (access t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1))
(IMPLIES (AND (<= 0 r0) (< r0 (array_length t0)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t0 r0))
(IMPLIES (AND (<= 0 i) (< i (array_length t0)))
(FORALL (result2)
(IMPLIES (EQ result2 (access t0 i))
(IMPLIES (AND (<= 0 r0) (< r0 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 r0 result2))
(IMPLIES (AND (<= 0 i) (< i (array_length t1)))
(FORALL (t2)
(IMPLIES (EQ t2 (update t1 i result1))
(AND
(AND (AND (<= 0 b) (<= b i))
(AND (AND (<= i r0) (<= r0 N))
(AND (EQ (monochrome t2 0 b blue) |@true|)
(AND (EQ (monochrome t2 b i white) |@true|)
(AND (EQ (monochrome t2 r0 N red) |@true|) (EQ (array_length t2) N))))))
(AND (<= 0 (- r i)) (< (- r0 i) (- r i))))))))))))))))))))))))))))))))))

;; dutch_flag_po_10, Why obligation from file "flag.mlw", line 22, characters 4-535:
(FORALL (t)
(IMPLIES (EQ (array_length t) N)
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r N))
         (AND (EQ (monochrome t0 0 b blue) |@true|)
         (AND (EQ (monochrome t0 b i white) |@true|)
         (AND (EQ (monochrome t0 r N red) |@true|) (EQ (array_length t0) N))))))
(IMPLIES (>= i r)
(AND (EQ (monochrome t0 0 b blue) |@true|)
(AND (EQ (monochrome t0 b r white) |@true|)
(EQ (monochrome t0 r N red) |@true|)))))))))))

