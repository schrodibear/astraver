
(***
   	
C. A. R. Hoare 	 
Elliott Brothers Ltd., Hertfordshire, England, U.K.

Communications of the ACM  archive
Volume 4 ,  Issue 7  (July 1961) table of contents
Pages: 321 - 322   

***)

(* Algorithm 63 *)

parameter partition : 
  a : int array -> m:int -> n:int -> i:int ref -> j:int ref ->
  { m < n } 
  unit writes a,i,j
  { m <= j and j < i and i <= n and sub_permut(m,n,a@,a) and
    exists x:int.

      (forall r:int. m <= r <= j -> a[r] <= x) and
      (forall r:int. j < r < i -> a[r] = x) and
      (forall r:int. i <= r <= n -> a[r] >= x) }

(* Algorithm 64 *)

let rec quicksort (a:int array) (m:int) (n:int) : unit { variant n-m } =
  { m <= n }
  if m < n then begin
    let i = ref 0 in
    let j = ref 0 in
    partition a m n i j;
    quicksort a m !j;
    quicksort a !i n
  end
  { sub_permut(m,n,a@,a) and sorted_array(a,m,n) }

