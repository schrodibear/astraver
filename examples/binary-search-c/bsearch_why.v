(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Import Why.

Inductive In (t:array Z) (l u v:Z) : Prop :=
    In_cons :
      forall i:Z, (l <= i <= u)%Z -> access t i = v -> In t l u v.

Axiom le_mean : forall x y:Z, (0 <= x <= y)%Z -> (x <= (x + y) / 2)%Z.

Axiom ge_mean : forall x y:Z, (0 <= x <= y)%Z -> ((x + y) / 2 <= y)%Z.

Axiom
  In_right_side :
    forall (t:array Z) (v:Z),
      sorted_array t 0 (array_length t - 1) ->
      forall l u:Z,
        (0 <= l)%Z ->
        (u <= array_length t - 1)%Z ->
        (l <= u)%Z ->
        (l <= (l + u) / 2 <= u)%Z ->
        (In t 0 (array_length t - 1) v -> In t l u v) ->
        (access t ((l + u) / 2) < v)%Z ->
        In t 0 (array_length t - 1) v -> In t ((l + u) / 2 + 1) u v.

Axiom
  In_left_side :
    forall (t:array Z) (v:Z),
      sorted_array t 0 (array_length t - 1) ->
      forall l u:Z,
        (0 <= l)%Z ->
        (u <= array_length t - 1)%Z ->
        (l <= u)%Z ->
        (l <= (l + u) / 2 <= u)%Z ->
        (In t 0 (array_length t - 1) v -> In t l u v) ->
        (access t ((l + u) / 2) > v)%Z ->
        In t 0 (array_length t - 1) v -> In t l ((l + u) / 2 - 1) v.

(* Why obligation from file "bsearch.c", characters 631-642 *)
Lemma binary_search_po_1 : 
  forall (n: Z),
  forall (v: Z),
  forall (t: (array Z)),
  forall (Pre8: (array_length t) = n /\ n >= 0 /\ (sorted_array t 0 (n - 1))),
  forall (l1: Z),
  forall (Post1: l1 = 0),
  forall (u1: Z),
  forall (Post2: u1 = (n - 1)),
  forall (Variant1: Z),
  forall (l2: Z),
  forall (u2: Z),
  forall (Pre7: Variant1 = (2 + u2 - l2)),
  forall (Pre6: 0 <= l2 /\ u2 <= ((array_length t) - 1) /\
                (((In t 0 ((array_length t) - 1) v) -> (In t l2 u2 v)))),
  forall (Test2: l2 <= u2),
  ~(2 = 0).
Proof.
intros; omega.
Qed.

(* Why obligation from file "bsearch.c", characters 660-677 *)
Lemma binary_search_po_2 : 
  forall (n: Z),
  forall (v: Z),
  forall (t: (array Z)),
  forall (Pre8: (array_length t) = n /\ n >= 0 /\ (sorted_array t 0 (n - 1))),
  forall (l1: Z),
  forall (Post1: l1 = 0),
  forall (u1: Z),
  forall (Post2: u1 = (n - 1)),
  forall (Variant1: Z),
  forall (l2: Z),
  forall (u2: Z),
  forall (Pre7: Variant1 = (2 + u2 - l2)),
  forall (Pre6: 0 <= l2 /\ u2 <= ((array_length t) - 1) /\
                (((In t 0 ((array_length t) - 1) v) -> (In t l2 u2 v)))),
  forall (Test2: l2 <= u2),
  forall (Pre5: ~(2 = 0)),
  forall (m2: Z),
  forall (Post3: m2 = ((Zdiv (l2 + u2) 2))),
  l2 <= m2 /\ m2 <= u2.
Proof.
intuition; subst.
apply le_mean; omega.
apply ge_mean; omega.
Qed.

(* Why obligation from file "bsearch.c", characters 677-680 *)
Lemma binary_search_po_3 : 
  forall (n: Z),
  forall (v: Z),
  forall (t: (array Z)),
  forall (Pre8: (array_length t) = n /\ n >= 0 /\ (sorted_array t 0 (n - 1))),
  forall (l1: Z),
  forall (Post1: l1 = 0),
  forall (u1: Z),
  forall (Post2: u1 = (n - 1)),
  forall (Variant1: Z),
  forall (l2: Z),
  forall (u2: Z),
  forall (Pre7: Variant1 = (2 + u2 - l2)),
  forall (Pre6: 0 <= l2 /\ u2 <= ((array_length t) - 1) /\
                (((In t 0 ((array_length t) - 1) v) -> (In t l2 u2 v)))),
  forall (Test2: l2 <= u2),
  forall (Pre5: ~(2 = 0)),
  forall (m2: Z),
  forall (Post3: m2 = ((Zdiv (l2 + u2) 2))),
  forall (Pre4: l2 <= m2 /\ m2 <= u2),
  (forall (result:Z),
   (result = (access t m2) ->
    ((result < v ->
      (forall (l:Z),
       (l = (m2 + 1) -> (0 <= l /\ u2 <= ((array_length t) - 1) /\
        (((In t 0 ((array_length t) - 1) v) -> (In t l u2 v)))) /\
        (Zwf 0 (2 + u2 - l) (2 + u2 - l2)))))) /\
    ((result >= v ->
      (forall (result:Z),
       (result = (access t m2) ->
        ((result > v ->
          (forall (u:Z),
           (u = (m2 - 1) -> (0 <= l2 /\ u <= ((array_length t) - 1) /\
            (((In t 0 ((array_length t) - 1) v) -> (In t l2 u v)))) /\
            (Zwf 0 (2 + u - l2) (2 + u2 - l2)))))) /\
        ((result <= v -> (0 <= m2 /\ m2 <= ((array_length t) - 1)) /\
          (access t m2) = v \/ m2 = (Zopp 1) /\
          ~(In t 0 ((array_length t) - 1) v))))) /\
      0 <= m2 /\ m2 < (array_length t))))) /\
  0 <= m2 /\ m2 < (array_length t).
Proof.
unfold Zwf; intuition try omega.
subst; apply In_right_side; intuition.
rewrite H; assumption.
subst; apply In_left_side; intuition.
rewrite H; assumption.
Qed.

(* Why obligation from file "bsearch.c", characters 504-596 *)
Lemma binary_search_po_4 : 
  forall (n: Z),
  forall (v: Z),
  forall (t: (array Z)),
  forall (Pre8: (array_length t) = n /\ n >= 0 /\ (sorted_array t 0 (n - 1))),
  forall (l1: Z),
  forall (Post1: l1 = 0),
  forall (u1: Z),
  forall (Post2: u1 = (n - 1)),
  0 <= l1 /\ u1 <= ((array_length t) - 1) /\
  (((In t 0 ((array_length t) - 1) v) -> (In t l1 u1 v))).
Proof.
intuition.
subst; rewrite <- H; assumption.
Qed.

(* Why obligation from file "bsearch.c", characters 794-796 *)
Lemma binary_search_po_5 : 
  forall (n: Z),
  forall (v: Z),
  forall (t: (array Z)),
  forall (Pre8: (array_length t) = n /\ n >= 0 /\ (sorted_array t 0 (n - 1))),
  forall (l1: Z),
  forall (Post1: l1 = 0),
  forall (u1: Z),
  forall (Post2: u1 = (n - 1)),
  forall (l2: Z),
  forall (u2: Z),
  forall (Post8: (0 <= l2 /\ u2 <= ((array_length t) - 1) /\
                 (((In t 0 ((array_length t) - 1) v) -> (In t l2 u2 v)))) /\
                 l2 > u2),
  (0 <= (Zopp 1) /\ (Zopp 1) <= ((array_length t) - 1)) /\
  (access t (Zopp 1)) = v \/ (Zopp 1) = (Zopp 1) /\
  ~(In t 0 ((array_length t) - 1) v).
Proof.
intuition.
right.
split.
 trivial.
intuition.
decompose [In] H7.
absurd (l2 <= i <= u2)%Z; omega.
Qed.

