(BG_PUSH 
  ; array_length
  (FORALL (t i v) (EQ (array_length (store t i v)) (array_length t)))
  ; booleans
  (DISTINCT |@true| |@false|)
  ; exchange
  (FORALL (t1 t2 i j)
	  (IFF (EQ (exchange t1 t2 i j) |@true|)
	       (AND (EQ (array_length t1) (array_length t2))
		    (EQ (select t1 i) (select t2 j))
		    (EQ (select t1 j) (select t2 i))
		    (FORALL (k) (IMPLIES (AND (NEQ k i) (NEQ k j))
					 (EQ (select t1 k) (select t2 k)))))))
  (FORALL (t1 t2 i j)
	  (IMPLIES (EQ (exchange t1 t2 i j) |@true|)
		   (EQ (array_length t1) (array_length t2))))
  ; permut
  (FORALL (t) (EQ (permut t t) |@true|))
  (FORALL (t1 t2) (IMPLIES (EQ (permut t1 t2) |@true|)
			   (EQ (permut t2 t1) |@true|)))
  (FORALL (t1 t2 t3) (IMPLIES (AND (EQ (permut t1 t2) |@true|)
				   (EQ (permut t2 t3) |@true|))
			      (EQ (permut t1 t3) |@true|)))
  (FORALL 
   (t i j) 
   (EQ (permut t (store (store t i (select t j)) j (select t i))) |@true|))
  (FORALL (t1 t2)
	  (IMPLIES (EQ (permut t1 t2) |@true|)
		   (EQ (array_length t1) (array_length t2))))
  ; sub_permut
  (FORALL (t g d) (EQ (sub_permut g d t t) |@true|))
  (FORALL (t1 t2 g d) (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
			   (EQ (sub_permut g d t2 t1) |@true|)))
  (FORALL (t1 t2 t3 g d) (IMPLIES (AND (EQ (sub_permut g d t1 t2) |@true|)
				       (EQ (sub_permut g d t2 t3) |@true|))
				  (EQ (sub_permut g d t1 t3) |@true|)))
  (FORALL 
   (t g d i j) 
   (IMPLIES (AND (<= g i) (<= i d) (<= g j) (<= j d))
	    (EQ (sub_permut g d t 
			    (store (store t i (select t j)) j (select t i))) 
		|@true|)))
  (FORALL 
   (t1 t2 g d i j)
   (IMPLIES (AND (EQ (exchange t1 t2 i j) |@true|)
		 (<= g i) (<= i d) (<= g j) (<= j d))
	    (EQ (sub_permut g d t1 t2) |@true|)))
  (FORALL (t1 t2 i j) 
	  (IMPLIES (EQ (sub_permut i j t1 t2) |@true|)
		   (EQ (permut t1 t2) |@true|)))
  (FORALL (t1 t2 i j)
	  (IMPLIES (EQ (sub_permut i j t1 t2) |@true|)
		   (EQ (array_length t1) (array_length t2))))
  ; sorted_array
  (FORALL 
   (t i j) 
   (IFF (EQ (sorted_array t i j) |@true|)
	(IMPLIES (<= i j)
		 (FORALL (k) (IMPLIES (AND (<= i k) (< k j))
				      (<= (select t k) (select t (+ k 1))))))))
)

(BG_PUSH
 ;; Why axiom Maximize_def
 (FORALL (t)
 (FORALL (n)
 (FORALL (x)
 (FORALL (k)
 (IFF (EQ (Maximize t n x k) |@true|)
 (FORALL (i) (IMPLIES (AND (<= k i) (<= i n)) (<= (select t k) x)))))))))

;; DO NOT EDIT BELOW THIS LINE

;; swap_po_1, Why obligation from file "maximumsort.mlw", characters 206-210
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (array_length t)))
         (AND (<= 0 j) (< j (array_length t))))
(IMPLIES (AND (<= 0 i) (< i (array_length t)))
(FORALL (v)
(IMPLIES (EQ v (select t i)) (AND (<= 0 j) (< j (array_length t))))))))))

;; swap_po_2, Why obligation from file "maximumsort.mlw", characters 198-210
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (array_length t)))
         (AND (<= 0 j) (< j (array_length t))))
(IMPLIES (AND (<= 0 i) (< i (array_length t)))
(FORALL (v)
(IMPLIES (EQ v (select t i))
(IMPLIES (AND (<= 0 j) (< j (array_length t)))
(FORALL (aux_2)
(IMPLIES (EQ aux_2 (select t j))
(FORALL (aux_1)
(IMPLIES (EQ aux_1 i) (AND (<= 0 aux_1) (< aux_1 (array_length t)))))))))))))))

;; swap_po_3, Why obligation from file "maximumsort.mlw", characters 198-210
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (array_length t)))
         (AND (<= 0 j) (< j (array_length t))))
(IMPLIES (AND (<= 0 i) (< i (array_length t)))
(FORALL (v)
(IMPLIES (EQ v (select t i))
(IMPLIES (AND (<= 0 j) (< j (array_length t)))
(FORALL (aux_2)
(IMPLIES (EQ aux_2 (select t j))
(FORALL (aux_1)
(IMPLIES (EQ aux_1 i)
(IMPLIES (AND (<= 0 aux_1) (< aux_1 (array_length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (store t aux_1 aux_2))
(FORALL (result)
(IMPLIES (EQ result v)
(FORALL (result0)
(IMPLIES (EQ result0 j)
(AND
(FORALL (t1)
(IMPLIES (EQ t1 (store t0 result0 result)) (EQ (exchange t1 t i j) |@true|)))
(AND (<= 0 result0) (< result0 (array_length t0)))))))))))))))))))))))

;; maximum_po_1, Why obligation from file "maximumsort.mlw", characters 611-612
(FORALL (n)
(FORALL (k)
(FORALL (i)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 k) (<= k i))
         (AND (<= i n)
         (AND (< n (array_length t))
         (EQ (Maximize t n (select t i) k) |@true|))))
(FORALL (Variant1)
(FORALL (n0)
(FORALL (k0)
(FORALL (i0)
(IMPLIES (EQ Variant1 k0)
(IMPLIES (AND (AND (<= 0 k0) (<= k0 i0))
         (AND (<= i0 n0)
         (AND (< n0 (array_length t))
         (EQ (Maximize t n0 (select t i0) k0) |@true|))))
(IMPLIES (EQ k0 0)
(FORALL (result0)
(IMPLIES (EQ result0 i0)
(AND (AND (<= 0 result0) (<= result0 n0))
(EQ (Maximize t n0 (select t result0) 0) |@true|))))))))))))))))

;; maximum_po_2, Why obligation from file "maximumsort.mlw", characters 625-711
(FORALL (n)
(FORALL (k)
(FORALL (i)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 k) (<= k i))
         (AND (<= i n)
         (AND (< n (array_length t))
         (EQ (Maximize t n (select t i) k) |@true|))))
(FORALL (Variant1)
(FORALL (n0)
(FORALL (k0)
(FORALL (i0)
(IMPLIES (EQ Variant1 k0)
(IMPLIES (AND (AND (<= 0 k0) (<= k0 i0))
         (AND (<= i0 n0)
         (AND (< n0 (array_length t))
         (EQ (Maximize t n0 (select t i0) k0) |@true|))))
(IMPLIES (NEQ k0 0) (AND (<= 0 (- k0 1)) (< (- k0 1) (array_length t)))))))))))))))

;; maximum_po_3, Why obligation from file "maximumsort.mlw", characters 625-711
(FORALL (n)
(FORALL (k)
(FORALL (i)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 k) (<= k i))
         (AND (<= i n)
         (AND (< n (array_length t))
         (EQ (Maximize t n (select t i) k) |@true|))))
(FORALL (Variant1)
(FORALL (n0)
(FORALL (k0)
(FORALL (i0)
(IMPLIES (EQ Variant1 k0)
(IMPLIES (AND (AND (<= 0 k0) (<= k0 i0))
         (AND (<= i0 n0)
         (AND (< n0 (array_length t))
         (EQ (Maximize t n0 (select t i0) k0) |@true|))))
(IMPLIES (NEQ k0 0)
(IMPLIES (AND (<= 0 (- k0 1)) (< (- k0 1) (array_length t)))
(AND (<= 0 i0) (< i0 (array_length t))))))))))))))))

;; maximum_po_4, Why obligation from file "maximumsort.mlw", characters 625-711
(FORALL (n)
(FORALL (k)
(FORALL (i)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 k) (<= k i))
         (AND (<= i n)
         (AND (< n (array_length t))
         (EQ (Maximize t n (select t i) k) |@true|))))
(FORALL (Variant1)
(FORALL (n0)
(FORALL (k0)
(FORALL (i0)
(IMPLIES (EQ Variant1 k0)
(IMPLIES (AND (AND (<= 0 k0) (<= k0 i0))
         (AND (<= i0 n0)
         (AND (< n0 (array_length t))
         (EQ (Maximize t n0 (select t i0) k0) |@true|))))
(IMPLIES (NEQ k0 0)
(IMPLIES (AND (<= 0 (- k0 1)) (< (- k0 1) (array_length t)))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t)))
(IMPLIES (> (select t (- k0 1)) (select t i0))
(AND (AND (<= 0 (- k0 1)) (<= (- k0 1) (- k0 1)))
(AND (<= (- k0 1) n0)
(AND (< n0 (array_length t))
(EQ (Maximize t n0 (select t (- k0 1)) (- k0 1)) |@true|)))))))))))))))))))

;; maximum_po_5, Why obligation from file "maximumsort.mlw", characters 625-711
(FORALL (n)
(FORALL (k)
(FORALL (i)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 k) (<= k i))
         (AND (<= i n)
         (AND (< n (array_length t))
         (EQ (Maximize t n (select t i) k) |@true|))))
(FORALL (Variant1)
(FORALL (n0)
(FORALL (k0)
(FORALL (i0)
(IMPLIES (EQ Variant1 k0)
(IMPLIES (AND (AND (<= 0 k0) (<= k0 i0))
         (AND (<= i0 n0)
         (AND (< n0 (array_length t))
         (EQ (Maximize t n0 (select t i0) k0) |@true|))))
(IMPLIES (NEQ k0 0)
(IMPLIES (AND (<= 0 (- k0 1)) (< (- k0 1) (array_length t)))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t)))
(IMPLIES (IMPLIES (> (select t (- k0 1)) (select t i0))
         (AND (AND (<= 0 (- k0 1)) (<= (- k0 1) (- k0 1)))
         (AND (<= (- k0 1) n0)
         (AND (< n0 (array_length t))
         (EQ (Maximize t n0 (select t (- k0 1)) (- k0 1)) |@true|)))))
(IMPLIES (<= (select t (- k0 1)) (select t i0))
(AND (AND (<= 0 (- k0 1)) (<= (- k0 1) i0))
(AND (<= i0 n0)
(AND (< n0 (array_length t))
(EQ (Maximize t n0 (select t i0) (- k0 1)) |@true|))))))))))))))))))))

;; maximum_po_6, Why obligation from file "maximumsort.mlw", characters 625-711
(FORALL (n)
(FORALL (k)
(FORALL (i)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 k) (<= k i))
         (AND (<= i n)
         (AND (< n (array_length t))
         (EQ (Maximize t n (select t i) k) |@true|))))
(FORALL (Variant1)
(FORALL (n0)
(FORALL (k0)
(FORALL (i0)
(IMPLIES (EQ Variant1 k0)
(IMPLIES (AND (AND (<= 0 k0) (<= k0 i0))
         (AND (<= i0 n0)
         (AND (< n0 (array_length t))
         (EQ (Maximize t n0 (select t i0) k0) |@true|))))
(IMPLIES (NEQ k0 0)
(IMPLIES (AND (<= 0 (- k0 1)) (< (- k0 1) (array_length t)))
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t)))
(IMPLIES (IMPLIES (> (select t (- k0 1)) (select t i0))
         (AND (AND (<= 0 (- k0 1)) (<= (- k0 1) (- k0 1)))
         (AND (<= (- k0 1) n0)
         (AND (< n0 (array_length t))
         (EQ (Maximize t n0 (select t (- k0 1)) (- k0 1)) |@true|)))))
(IMPLIES (IMPLIES (<= (select t (- k0 1)) (select t i0))
         (AND (AND (<= 0 (- k0 1)) (<= (- k0 1) i0))
         (AND (<= i0 n0)
         (AND (< n0 (array_length t))
         (EQ (Maximize t n0 (select t i0) (- k0 1)) |@true|)))))
(FORALL (result0)
(IMPLIES (OR
         (AND (> (select t (- k0 1)) (select t i0))
         (AND (AND (<= 0 result0) (<= result0 n0))
         (EQ (Maximize t n0 (select t result0) 0) |@true|)))
         (AND (<= (select t (- k0 1)) (select t i0))
         (AND (AND (<= 0 result0) (<= result0 n0))
         (EQ (Maximize t n0 (select t result0) 0) |@true|))))
(AND (AND (<= 0 result0) (<= result0 n0))
(EQ (Maximize t n0 (select t result0) 0) |@true|))))))))))))))))))))

;; maxisort_po_1, Why obligation from file "maximumsort.mlw", characters 1140-1160
(FORALL (t)
(IMPLIES (<= 0 (array_length t))
(FORALL (i)
(IMPLIES (EQ i (- (array_length t) 1))
(FORALL (Variant1)
(FORALL (i1)
(FORALL (t0)
(IMPLIES (EQ Variant1 (+ i1 1))
(IMPLIES (AND (AND (<= 0 (+ i1 1)) (<= (+ i1 1) (array_length t0)))
         (AND (EQ (sorted_array t0 (+ i1 1) (- (array_length t0) 1)) |@true|)
         (AND (EQ (permut t0 t) |@true|)
         (IMPLIES (< (+ i1 1) (array_length t0))
         (EQ (Maximize t0 i1 (select t0 (+ i1 1)) 0) |@true|)))))
(IMPLIES (>= i1 0)
(AND (AND (<= 0 i1) (<= i1 i1))
(AND (<= i1 i1)
(AND (< i1 (array_length t0))
(EQ (Maximize t0 i1 (select t0 i1) i1) |@true|))))))))))))))

;; maxisort_po_2, Why obligation from file "maximumsort.mlw", characters 1172-1185
(FORALL (t)
(IMPLIES (<= 0 (array_length t))
(FORALL (i)
(IMPLIES (EQ i (- (array_length t) 1))
(FORALL (Variant1)
(FORALL (i1)
(FORALL (t0)
(IMPLIES (EQ Variant1 (+ i1 1))
(IMPLIES (AND (AND (<= 0 (+ i1 1)) (<= (+ i1 1) (array_length t0)))
         (AND (EQ (sorted_array t0 (+ i1 1) (- (array_length t0) 1)) |@true|)
         (AND (EQ (permut t0 t) |@true|)
         (IMPLIES (< (+ i1 1) (array_length t0))
         (EQ (Maximize t0 i1 (select t0 (+ i1 1)) 0) |@true|)))))
(IMPLIES (>= i1 0)
(IMPLIES (AND (AND (<= 0 i1) (<= i1 i1))
         (AND (<= i1 i1)
         (AND (< i1 (array_length t0))
         (EQ (Maximize t0 i1 (select t0 i1) i1) |@true|))))
(FORALL (r)
(IMPLIES (AND (AND (<= 0 r) (<= r i1))
         (EQ (Maximize t0 i1 (select t0 r) 0) |@true|))
(AND (AND (<= 0 i1) (< i1 (array_length t0)))
(AND (<= 0 r) (< r (array_length t0)))))))))))))))))

;; maxisort_po_3, Why obligation from file "maximumsort.mlw", characters 1132-1185
(FORALL (t)
(IMPLIES (<= 0 (array_length t))
(FORALL (i)
(IMPLIES (EQ i (- (array_length t) 1))
(FORALL (Variant1)
(FORALL (i1)
(FORALL (t0)
(IMPLIES (EQ Variant1 (+ i1 1))
(IMPLIES (AND (AND (<= 0 (+ i1 1)) (<= (+ i1 1) (array_length t0)))
         (AND (EQ (sorted_array t0 (+ i1 1) (- (array_length t0) 1)) |@true|)
         (AND (EQ (permut t0 t) |@true|)
         (IMPLIES (< (+ i1 1) (array_length t0))
         (EQ (Maximize t0 i1 (select t0 (+ i1 1)) 0) |@true|)))))
(IMPLIES (>= i1 0)
(IMPLIES (AND (AND (<= 0 i1) (<= i1 i1))
         (AND (<= i1 i1)
         (AND (< i1 (array_length t0))
         (EQ (Maximize t0 i1 (select t0 i1) i1) |@true|))))
(FORALL (r)
(IMPLIES (AND (AND (<= 0 r) (<= r i1))
         (EQ (Maximize t0 i1 (select t0 r) 0) |@true|))
(IMPLIES (AND (AND (<= 0 i1) (< i1 (array_length t0)))
         (AND (<= 0 r) (< r (array_length t0))))
(FORALL (t1)
(IMPLIES (EQ (exchange t1 t0 i1 r) |@true|)
(FORALL (i)
(IMPLIES (EQ i (- i1 1))
(AND
(AND (AND (<= 0 (+ i 1)) (<= (+ i 1) (array_length t1)))
(AND (EQ (sorted_array t1 (+ i 1) (- (array_length t1) 1)) |@true|)
(AND (EQ (permut t1 t) |@true|)
(IMPLIES (< (+ i 1) (array_length t1))
(EQ (Maximize t1 i (select t1 (+ i 1)) 0) |@true|)))))
(AND (<= 0 (+ i1 1)) (< (+ i 1) (+ i1 1))))))))))))))))))))))

;; maxisort_po_4, Why obligation from file "maximumsort.mlw", characters 892-1210
(FORALL (t)
(IMPLIES (<= 0 (array_length t))
(FORALL (i)
(IMPLIES (EQ i (- (array_length t) 1))
(FORALL (Variant1)
(FORALL (i1)
(FORALL (t0)
(IMPLIES (EQ Variant1 (+ i1 1))
(IMPLIES (AND (AND (<= 0 (+ i1 1)) (<= (+ i1 1) (array_length t0)))
         (AND (EQ (sorted_array t0 (+ i1 1) (- (array_length t0) 1)) |@true|)
         (AND (EQ (permut t0 t) |@true|)
         (IMPLIES (< (+ i1 1) (array_length t0))
         (EQ (Maximize t0 i1 (select t0 (+ i1 1)) 0) |@true|)))))
(IMPLIES (< i1 0)
(AND (EQ (sorted_array t0 0 (- (array_length t0) 1)) |@true|)
(EQ (permut t0 t) |@true|))))))))))))

;; maxisort_po_5, Why obligation from file "maximumsort.mlw", characters 927-1102
(FORALL (t)
(IMPLIES (<= 0 (array_length t))
(FORALL (i)
(IMPLIES (EQ i (- (array_length t) 1))
(AND (AND (<= 0 (+ i 1)) (<= (+ i 1) (array_length t)))
(AND (EQ (sorted_array t (+ i 1) (- (array_length t) 1)) |@true|)
(AND (EQ (permut t t) |@true|)
(IMPLIES (< (+ i 1) (array_length t))
(EQ (Maximize t i (select t (+ i 1)) 0) |@true|)))))))))

