Options are: -journal-disable -cpp-extra-args=-I PPCHOME/share/jessie -IFRAMAC_SHARE/libc -add-symbolic-path PPCHOME:PPCHOME -jessie -jessie-gen-only simple_cast.c
[kernel] preprocessing with "gcc -C -E -I. -I PPCHOME/share/jessie -IFRAMAC_SHARE/libc -dD PPCHOME/tests/jessie/simple_cast.c"
[jessie] Starting Jessie translation
[jessie] Producing Jessie files in subdir simple_cast.jessie
[jessie] File simple_cast.jessie/simple_cast.jc written.
[jessie] File simple_cast.jessie/simple_cast.cloc written.
# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type uint8 = 0..255

type int8 = -128..127

type int32 = -2147483648..2147483647

tag intP = {
  int32 intM: 32;
}

type intP = [intP]

tag unsigned_charP = {
  uint8 unsigned_charM: 8;
}

type unsigned_charP = [unsigned_charP]

tag charP = {
  int8 charM: 8;
}

type charP = [charP]

tag voidP = {
}

type voidP = [voidP]

unit zero(intP[..] x)
  requires (_C_18 : ((_C_19 : (\offset_min(x) <= 0)) &&
                      (_C_20 : (\offset_max(x) >= 0))));
behavior default:
  ensures (_C_17 : true);
{  
   (var charP[..] c);
   
   {  (_C_2 : (c = (_C_1 : (x :> charP[..]))));
      (_C_4 : ((_C_3 : c.charM) = 0));
      (_C_6 : (c = (_C_5 : (c + 1))));
      (_C_8 : ((_C_7 : c.charM) = 0));
      (_C_10 : (c = (_C_9 : (c + 1))));
      (_C_12 : ((_C_11 : c.charM) = 0));
      (_C_14 : (c = (_C_13 : (c + 1))));
      (_C_16 : ((_C_15 : c.charM) = 0));
      
      (return ())
   }
}
WHYLIB=WHYHOME/lib WHYHOME/bin/jessie.opt -why-opt -split-user-conj -why-opt -fast-wp -locs simple_cast.jessie/simple_cast.cloc simple_cast.jessie/simple_cast.jc
