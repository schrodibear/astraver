(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export find_spec.
Require find_lemmas.
Require find_proofs.

Require Why.
Require Omega.


(* Why obligation from file "find.mlw", characters 1612-1616 *)
Lemma find_po_1 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  `0 <= f` /\ `f < (array_length A0)`.
Proof.
Intros; Generalize le_f_N; Generalize le_1_f.
Intuition; SameLength A0 A; Omega.
Save.

(* Why obligation from file "find.mlw", characters 1985-1990 *)
Lemma find_po_2 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (Variant3: Z)
  (A1: (array Z))
  (i1: Z)
  (j1: Z)
  (Pre23: Variant3 = `N + 2 + j1 - i1`)
  (Inv_ij: (i_invariant m1 n1 i1 r A1) /\ (j_invariant m1 n1 j1 r A1) /\
           (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j1` /\
           `i1 <= N + 1` /\ (termination i1 j1 m1 n1 r A1) /\ (permut A1 A))
  (Test9: `i1 <= j1`)
  (Variant5: Z)
  (i2: Z)
  (Pre9: Variant5 = `N + 1 - i2`)
  (Inv_i: (i_invariant m1 n1 i2 r A1) /\ `i1 <= i2` /\ `i2 <= n1` /\
          (termination i2 j1 m1 n1 r A1))
  `0 <= i2` /\ `i2 < (array_length A1)`.
Proof.
Intuition SameLength A1 A.
Unfold i_invariant in H13; Omega.
Omega.
Save.

(* Why obligation from file "find.mlw", characters 1979-2199 *)
Lemma find_po_3 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (Variant3: Z)
  (A1: (array Z))
  (i1: Z)
  (j1: Z)
  (Pre23: Variant3 = `N + 2 + j1 - i1`)
  (Inv_ij: (i_invariant m1 n1 i1 r A1) /\ (j_invariant m1 n1 j1 r A1) /\
           (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j1` /\
           `i1 <= N + 1` /\ (termination i1 j1 m1 n1 r A1) /\ (permut A1 A))
  (Test9: `i1 <= j1`)
  (Variant5: Z)
  (i2: Z)
  (Pre9: Variant5 = `N + 1 - i2`)
  (Inv_i: (i_invariant m1 n1 i2 r A1) /\ `i1 <= i2` /\ `i2 <= n1` /\
          (termination i2 j1 m1 n1 r A1))
  (Pre8: `0 <= i2` /\ `i2 < (array_length A1)`)
  (Test4: `(access A1 i2) < r`)
  (i3: Z)
  (Post1: i3 = `i2 + 1`)
  ((i_invariant m1 n1 i3 r A1) /\ `i1 <= i3` /\ `i3 <= n1` /\
  (termination i3 j1 m1 n1 r A1)) /\ (Zwf `0` `N + 1 - i3` `N + 1 - i2`).
Proof.
Intros. 
Subst r.
Subst i3.
Generalize (subgoal_1 m1 n1 i1 j1 i2 A A0 A1 
              Inv_mn Test14 zero_f_SN Inv_ij Test9 Inv_i Test4).
Intuition.
Save.

(* Why obligation from file "find.mlw", characters 2020-2137 *)
Lemma find_po_4 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (Variant3: Z)
  (A1: (array Z))
  (i1: Z)
  (j1: Z)
  (Pre23: Variant3 = `N + 2 + j1 - i1`)
  (Inv_ij: (i_invariant m1 n1 i1 r A1) /\ (j_invariant m1 n1 j1 r A1) /\
           (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j1` /\
           `i1 <= N + 1` /\ (termination i1 j1 m1 n1 r A1) /\ (permut A1 A))
  (Test9: `i1 <= j1`)
  (i_invariant m1 n1 i1 r A1) /\ `i1 <= i1` /\ `i1 <= n1` /\
  (termination i1 j1 m1 n1 r A1).
Proof.
Intuition.
Unfold j_invariant in H8; Unfold termination in H12; Omega.
Save.

(* Why obligation from file "find.mlw", characters 2227-2232 *)
Lemma find_po_5 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (Variant3: Z)
  (A1: (array Z))
  (i1: Z)
  (j1: Z)
  (Pre23: Variant3 = `N + 2 + j1 - i1`)
  (Inv_ij: (i_invariant m1 n1 i1 r A1) /\ (j_invariant m1 n1 j1 r A1) /\
           (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j1` /\
           `i1 <= N + 1` /\ (termination i1 j1 m1 n1 r A1) /\ (permut A1 A))
  (Test9: `i1 <= j1`)
  (i2: Z)
  (Inv_i: ((i_invariant m1 n1 i2 r A1) /\ `i1 <= i2` /\ `i2 <= n1` /\
          (termination i2 j1 m1 n1 r A1)) /\ `(access A1 i2) >= r`)
  (Variant7: Z)
  (j2: Z)
  (Pre14: Variant7 = j2)
  (Inv_j: (j_invariant m1 n1 j2 r A1) /\ `j2 <= j1` /\ `m1 <= j2` /\
          (termination i2 j2 m1 n1 r A1))
  `0 <= j2` /\ `j2 < (array_length A1)`.
Proof.
Intuition SameLength A1 A.
Unfold j_invariant in H8; Unfold termination in H12; Omega.
Unfold j_invariant in H8; Unfold termination in H12; Omega.
Save.

(* Why obligation from file "find.mlw", characters 2217-2434 *)
Lemma find_po_6 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (Variant3: Z)
  (A1: (array Z))
  (i1: Z)
  (j1: Z)
  (Pre23: Variant3 = `N + 2 + j1 - i1`)
  (Inv_ij: (i_invariant m1 n1 i1 r A1) /\ (j_invariant m1 n1 j1 r A1) /\
           (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j1` /\
           `i1 <= N + 1` /\ (termination i1 j1 m1 n1 r A1) /\ (permut A1 A))
  (Test9: `i1 <= j1`)
  (i2: Z)
  (Inv_i: ((i_invariant m1 n1 i2 r A1) /\ `i1 <= i2` /\ `i2 <= n1` /\
          (termination i2 j1 m1 n1 r A1)) /\ `(access A1 i2) >= r`)
  (Variant7: Z)
  (j2: Z)
  (Pre14: Variant7 = j2)
  (Inv_j: (j_invariant m1 n1 j2 r A1) /\ `j2 <= j1` /\ `m1 <= j2` /\
          (termination i2 j2 m1 n1 r A1))
  (Pre13: `0 <= j2` /\ `j2 < (array_length A1)`)
  (Test6: `r < (access A1 j2)`)
  (j3: Z)
  (Post2: j3 = `j2 - 1`)
  ((j_invariant m1 n1 j3 r A1) /\ `j3 <= j1` /\ `m1 <= j3` /\
  (termination i2 j3 m1 n1 r A1)) /\ (Zwf `0` j3 j2).
Proof.
Intros. 
Subst r.
Subst j3.
Generalize (subgoal_2 m1 n1 i1 j1 i2 j2 A A0 A1
                  Inv_mn Test14 zero_f_SN Inv_ij Test9 Inv_i 
                  Inv_j Test6).
Intuition.
Save.

(* Why obligation from file "find.mlw", characters 2258-2375 *)
Lemma find_po_7 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (Variant3: Z)
  (A1: (array Z))
  (i1: Z)
  (j1: Z)
  (Pre23: Variant3 = `N + 2 + j1 - i1`)
  (Inv_ij: (i_invariant m1 n1 i1 r A1) /\ (j_invariant m1 n1 j1 r A1) /\
           (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j1` /\
           `i1 <= N + 1` /\ (termination i1 j1 m1 n1 r A1) /\ (permut A1 A))
  (Test9: `i1 <= j1`)
  (i2: Z)
  (Inv_i: ((i_invariant m1 n1 i2 r A1) /\ `i1 <= i2` /\ `i2 <= n1` /\
          (termination i2 j1 m1 n1 r A1)) /\ `(access A1 i2) >= r`)
  (j_invariant m1 n1 j1 r A1) /\ `j1 <= j1` /\ `m1 <= j1` /\
  (termination i2 j1 m1 n1 r A1).
Proof.
Intuition.
Unfold m_invariant in H7.
Unfold termination in H12.
Omega.
Save.

(* Why obligation from file "find.mlw", characters 2454-2477 *)
Lemma find_po_8 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (Variant3: Z)
  (A1: (array Z))
  (i1: Z)
  (j1: Z)
  (Pre23: Variant3 = `N + 2 + j1 - i1`)
  (Inv_ij: (i_invariant m1 n1 i1 r A1) /\ (j_invariant m1 n1 j1 r A1) /\
           (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j1` /\
           `i1 <= N + 1` /\ (termination i1 j1 m1 n1 r A1) /\ (permut A1 A))
  (Test9: `i1 <= j1`)
  (i2: Z)
  (Inv_i: ((i_invariant m1 n1 i2 r A1) /\ `i1 <= i2` /\ `i2 <= n1` /\
          (termination i2 j1 m1 n1 r A1)) /\ `(access A1 i2) >= r`)
  (j2: Z)
  (Inv_j: ((j_invariant m1 n1 j2 r A1) /\ `j2 <= j1` /\ `m1 <= j2` /\
          (termination i2 j2 m1 n1 r A1)) /\ `r >= (access A1 j2)`)
  `(access A1 j2) <= r` /\ `r <= (access A1 i2)`.
Proof.
Intuition.
Save.

(* Why obligation from file "find.mlw", characters 2531-2536 *)
Lemma find_po_9 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (Variant3: Z)
  (A1: (array Z))
  (i1: Z)
  (j1: Z)
  (Pre23: Variant3 = `N + 2 + j1 - i1`)
  (Inv_ij: (i_invariant m1 n1 i1 r A1) /\ (j_invariant m1 n1 j1 r A1) /\
           (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j1` /\
           `i1 <= N + 1` /\ (termination i1 j1 m1 n1 r A1) /\ (permut A1 A))
  (Test9: `i1 <= j1`)
  (i2: Z)
  (Inv_i: ((i_invariant m1 n1 i2 r A1) /\ `i1 <= i2` /\ `i2 <= n1` /\
          (termination i2 j1 m1 n1 r A1)) /\ `(access A1 i2) >= r`)
  (j2: Z)
  (Inv_j: ((j_invariant m1 n1 j2 r A1) /\ `j2 <= j1` /\ `m1 <= j2` /\
          (termination i2 j2 m1 n1 r A1)) /\ `r >= (access A1 j2)`)
  (Pre22: `(access A1 j2) <= r` /\ `r <= (access A1 i2)`)
  (Test8: `i2 <= j2`)
  `0 <= i2` /\ `i2 < (array_length A1)`.
Proof.
Intuition SameLength A1 A.
Unfold i_invariant in H16; Omega.
Unfold i_invariant in H16; Omega.
Save.

(* Why obligation from file "find.mlw", characters 2555-2560 *)
Lemma find_po_10 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (Variant3: Z)
  (A1: (array Z))
  (i1: Z)
  (j1: Z)
  (Pre23: Variant3 = `N + 2 + j1 - i1`)
  (Inv_ij: (i_invariant m1 n1 i1 r A1) /\ (j_invariant m1 n1 j1 r A1) /\
           (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j1` /\
           `i1 <= N + 1` /\ (termination i1 j1 m1 n1 r A1) /\ (permut A1 A))
  (Test9: `i1 <= j1`)
  (i2: Z)
  (Inv_i: ((i_invariant m1 n1 i2 r A1) /\ `i1 <= i2` /\ `i2 <= n1` /\
          (termination i2 j1 m1 n1 r A1)) /\ `(access A1 i2) >= r`)
  (j2: Z)
  (Inv_j: ((j_invariant m1 n1 j2 r A1) /\ `j2 <= j1` /\ `m1 <= j2` /\
          (termination i2 j2 m1 n1 r A1)) /\ `r >= (access A1 j2)`)
  (Pre22: `(access A1 j2) <= r` /\ `r <= (access A1 i2)`)
  (Test8: `i2 <= j2`)
  (Pre18: `0 <= i2` /\ `i2 < (array_length A1)`)
  (w: Z)
  (Post5: w = (access A1 i2))
  (Pre16: `0 <= i2` /\ `i2 < (array_length A1)`)
  `0 <= j2` /\ `j2 < (array_length A1)`.
Proof.
Intuition SameLength A1 A.
Unfold termination in H28; Unfold j_invariant in H25; Omega.
Unfold termination in H28; Unfold j_invariant in H25; Omega.
Save.

(* Why obligation from file "find.mlw", characters 2562-2572 *)
Lemma find_po_11 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (Variant3: Z)
  (A1: (array Z))
  (i1: Z)
  (j1: Z)
  (Pre23: Variant3 = `N + 2 + j1 - i1`)
  (Inv_ij: (i_invariant m1 n1 i1 r A1) /\ (j_invariant m1 n1 j1 r A1) /\
           (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j1` /\
           `i1 <= N + 1` /\ (termination i1 j1 m1 n1 r A1) /\ (permut A1 A))
  (Test9: `i1 <= j1`)
  (i2: Z)
  (Inv_i: ((i_invariant m1 n1 i2 r A1) /\ `i1 <= i2` /\ `i2 <= n1` /\
          (termination i2 j1 m1 n1 r A1)) /\ `(access A1 i2) >= r`)
  (j2: Z)
  (Inv_j: ((j_invariant m1 n1 j2 r A1) /\ `j2 <= j1` /\ `m1 <= j2` /\
          (termination i2 j2 m1 n1 r A1)) /\ `r >= (access A1 j2)`)
  (Pre22: `(access A1 j2) <= r` /\ `r <= (access A1 i2)`)
  (Test8: `i2 <= j2`)
  (Pre18: `0 <= i2` /\ `i2 < (array_length A1)`)
  (w: Z)
  (Post5: w = (access A1 i2))
  (Pre16: `0 <= i2` /\ `i2 < (array_length A1)`)
  (Pre17: `0 <= j2` /\ `j2 < (array_length A1)`)
  (A2: (array Z))
  (Post3: A2 = (store A1 i2 (access A1 j2)))
  `0 <= j2` /\ `j2 < (array_length A2)`.
Proof.
Intuition WhyArrays.
ArraySubst A2; Omega.
Save.

(* Why obligation from file "find.mlw", characters 2540-2576 *)
Lemma find_po_12 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (Variant3: Z)
  (A1: (array Z))
  (i1: Z)
  (j1: Z)
  (Pre23: Variant3 = `N + 2 + j1 - i1`)
  (Inv_ij: (i_invariant m1 n1 i1 r A1) /\ (j_invariant m1 n1 j1 r A1) /\
           (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j1` /\
           `i1 <= N + 1` /\ (termination i1 j1 m1 n1 r A1) /\ (permut A1 A))
  (Test9: `i1 <= j1`)
  (i2: Z)
  (Inv_i: ((i_invariant m1 n1 i2 r A1) /\ `i1 <= i2` /\ `i2 <= n1` /\
          (termination i2 j1 m1 n1 r A1)) /\ `(access A1 i2) >= r`)
  (j2: Z)
  (Inv_j: ((j_invariant m1 n1 j2 r A1) /\ `j2 <= j1` /\ `m1 <= j2` /\
          (termination i2 j2 m1 n1 r A1)) /\ `r >= (access A1 j2)`)
  (Pre22: `(access A1 j2) <= r` /\ `r <= (access A1 i2)`)
  (Test8: `i2 <= j2`)
  (Pre18: `0 <= i2` /\ `i2 < (array_length A1)`)
  (w: Z)
  (Post5: w = (access A1 i2))
  (Pre16: `0 <= i2` /\ `i2 < (array_length A1)`)
  (Pre17: `0 <= j2` /\ `j2 < (array_length A1)`)
  (A2: (array Z))
  (Post3: A2 = (store A1 i2 (access A1 j2)))
  (Pre15: `0 <= j2` /\ `j2 < (array_length A2)`)
  (A3: (array Z))
  (Post4: A3 = (store A2 j2 w))
  ((((i:Z)
     (i = `i2 + 1` ->
      ((j:Z)
       (j = `j2 - 1` -> ((i_invariant m1 n1 i r A3) /\
        (j_invariant m1 n1 j r A3) /\ (m_invariant m1 A3) /\
        (n_invariant n1 A3) /\ `0 <= j` /\ `i <= N + 1` /\
        (termination i j m1 n1 r A3) /\ (permut A3 A)) /\
        (Zwf `0` `N + 2 + j - i` `N + 2 + j1 - i1`))))) /\
  `r <= (access A3 j2)`) /\ `(access A3 i2) <= r`) /\ (exchange A3 A1 i2 j2).
Proof.
Intros.
Subst r.
Assert H:(exchange A3 A1 i2 j2).
Subst A3. Subst A2. Subst w.
Auto with datatypes.

Assert H0:`(access A3 i2) <= (access A0 f)`.
Elim H; Intros; Rewrite H3; Omega.
Assert H1:`(access A0 f) <= (access A3 j2)`.
Elim H; Intros; Rewrite H5; Omega.
Generalize (subgoal_3 m1 n1 i1 j1 i2 j2 A A0 A1 A3 Pre27 Inv_mn Test14 
  zero_f_SN Inv_ij 
  Test9 Inv_i Inv_j Pre22 Test8 H H0 H1).
Intuition Subst; Intuition.
Save.

(* Why obligation from file "find.mlw", characters 2490-2705 *)
Lemma find_po_13 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (Variant3: Z)
  (A1: (array Z))
  (i1: Z)
  (j1: Z)
  (Pre23: Variant3 = `N + 2 + j1 - i1`)
  (Inv_ij: (i_invariant m1 n1 i1 r A1) /\ (j_invariant m1 n1 j1 r A1) /\
           (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j1` /\
           `i1 <= N + 1` /\ (termination i1 j1 m1 n1 r A1) /\ (permut A1 A))
  (Test9: `i1 <= j1`)
  (i2: Z)
  (Inv_i: ((i_invariant m1 n1 i2 r A1) /\ `i1 <= i2` /\ `i2 <= n1` /\
          (termination i2 j1 m1 n1 r A1)) /\ `(access A1 i2) >= r`)
  (j2: Z)
  (Inv_j: ((j_invariant m1 n1 j2 r A1) /\ `j2 <= j1` /\ `m1 <= j2` /\
          (termination i2 j2 m1 n1 r A1)) /\ `r >= (access A1 j2)`)
  (Pre22: `(access A1 j2) <= r` /\ `r <= (access A1 i2)`)
  (Test7: `i2 > j2`)
  ((i_invariant m1 n1 i2 r A1) /\ (j_invariant m1 n1 j2 r A1) /\
  (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j2` /\ `i2 <= N + 1` /\
  (termination i2 j2 m1 n1 r A1) /\ (permut A1 A)) /\
  (Zwf `0` `N + 2 + j2 - i2` `N + 2 + j1 - i1`).
Proof.
Intuition. 
Save.

(* Why obligation from file "find.mlw", characters 1711-1924 *)
Lemma find_po_14 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (i_invariant m1 n1 i r A0) /\ (j_invariant m1 n1 j r A0) /\
  (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ `0 <= j` /\ `i <= N + 1` /\
  (termination i j m1 n1 r A0) /\ (permut A0 A).
Proof.
Intros; Subst r i j; Intuition.
Apply Lemma_4_14; Auto.
Elim H; Elim H3; Omega.
Apply Lemma_5_14'; Auto.
Elim H; Elim H3; Omega.
Unfold termination; Right; Elim H; Elim H3; Intros; Split.
Omega.
Auto.
Save.

(* Why obligation from file "find.mlw", characters 2734-2749 *)
Lemma find_po_15 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (A1: (array Z))
  (i1: Z)
  (j1: Z)
  (Inv_ij: ((i_invariant m1 n1 i1 r A1) /\ (j_invariant m1 n1 j1 r A1) /\
           (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j1` /\
           `i1 <= N + 1` /\ (termination i1 j1 m1 n1 r A1) /\
           (permut A1 A)) /\ `i1 > j1`)
  `m1 < i1` /\ `j1 < n1`.
Proof.
Intuition (Elim H13; Omega).
Save.

(* Why obligation from file "find.mlw", characters 2784-2791 *)
Lemma find_po_16 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (A1: (array Z))
  (i1: Z)
  (j1: Z)
  (Inv_ij: ((i_invariant m1 n1 i1 r A1) /\ (j_invariant m1 n1 j1 r A1) /\
           (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j1` /\
           `i1 <= N + 1` /\ (termination i1 j1 m1 n1 r A1) /\
           (permut A1 A)) /\ `i1 > j1`)
  (Pre24: `m1 < i1` /\ `j1 < n1`)
  (Test13: `f <= j1`)
  (n2: Z)
  (Post8: n2 = j1)
  ((m_invariant m1 A1) /\ (n_invariant n2 A1) /\ (permut A1 A) /\
  `1 <= m1` /\ `n2 <= N`) /\ (Zwf `0` `n2 - m1` `n1 - m1`).
Proof.
Intros; Subst n2 r.
Assert (array_length A0)=(array_length A).
Intuition; ProveSameLength A0 A.
Rewrite H in Pre25; Rewrite Pre27 in Pre25.
Generalize (subgoal_5 m1 n1 i1 j1 A A0 A1 
                 Inv_mn Test14 Pre25 Inv_ij Pre24 Test13).
Intuition.
Save.

(* Why obligation from file "find.mlw", characters 2827-2834 *)
Lemma find_po_17 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (A1: (array Z))
  (i1: Z)
  (j1: Z)
  (Inv_ij: ((i_invariant m1 n1 i1 r A1) /\ (j_invariant m1 n1 j1 r A1) /\
           (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j1` /\
           `i1 <= N + 1` /\ (termination i1 j1 m1 n1 r A1) /\
           (permut A1 A)) /\ `i1 > j1`)
  (Pre24: `m1 < i1` /\ `j1 < n1`)
  (Test12: `f > j1`)
  (Test11: `i1 <= f`)
  (m2: Z)
  (Post9: m2 = i1)
  ((m_invariant m2 A1) /\ (n_invariant n1 A1) /\ (permut A1 A) /\
  `1 <= m2` /\ `n1 <= N`) /\ (Zwf `0` `n1 - m2` `n1 - m1`).
Proof.
Intros; Subst m2 r.
Assert (array_length A0)=(array_length A).
Intuition; ProveSameLength A0 A.
Rewrite H in Pre25; Rewrite Pre27 in Pre25.
Generalize (subgoal_6 m1 n1 i1 j1 A A0 A1
                 Inv_mn Test14 Pre25 Inv_ij Pre24 Test12 Test11).
Intuition.
Save.

(* Why obligation from file "find.mlw", characters 2854-2878 *)
Lemma find_po_18 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (Variant1: Z)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Pre26: Variant1 = `n1 - m1`)
  (Inv_mn: (m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`)
  (Test14: `m1 < n1`)
  (Pre25: `0 <= f` /\ `f < (array_length A0)`)
  (r: Z)
  (Post14: r = (access A0 f))
  (i: Z)
  (Post13: i = m1)
  (j: Z)
  (Post12: j = n1)
  (A1: (array Z))
  (i1: Z)
  (j1: Z)
  (Inv_ij: ((i_invariant m1 n1 i1 r A1) /\ (j_invariant m1 n1 j1 r A1) /\
           (m_invariant m1 A1) /\ (n_invariant n1 A1) /\ `0 <= j1` /\
           `i1 <= N + 1` /\ (termination i1 j1 m1 n1 r A1) /\
           (permut A1 A)) /\ `i1 > j1`)
  (Pre24: `m1 < i1` /\ `j1 < n1`)
  (Test12: `f > j1`)
  (Test10: `i1 > f`)
  (n2: Z)
  (Post10: n2 = f)
  (m2: Z)
  (Post11: m2 = f)
  ((m_invariant m2 A1) /\ (n_invariant n2 A1) /\ (permut A1 A) /\
  `1 <= m2` /\ `n2 <= N`) /\ (Zwf `0` `n2 - m2` `n1 - m1`).
Proof.
Intros; Subst n2 m2 r.
Assert (array_length A0)=(array_length A).
Intuition; ProveSameLength A0 A.
Rewrite H in Pre25; Rewrite Pre27 in Pre25.
Generalize (subgoal_7 m1 n1 i1 j1 A A0 A1
                 Inv_mn Test14 Pre25 Inv_ij Pre24 Test12 Test10).
Intuition.
Save.

(* Why obligation from file "find.mlw", characters 1475-1579 *)
Lemma find_po_19 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (m_invariant m A) /\ (n_invariant n A) /\ (permut A A) /\ `1 <= m` /\
  `n <= N`.
Proof.
Intuition.
Subst m; Exact (Lemma_1 A).
Subst n; Exact (Lemma_2 A).
Save.

(* Why obligation from file "find.mlw", characters 1423-2893 *)
Lemma find_po_20 : 
  (A: (array Z))
  (Pre27: `(array_length A) = N + 1`)
  (m: Z)
  (Post16: m = `1`)
  (n: Z)
  (Post15: n = N)
  (A0: (array Z))
  (m1: Z)
  (n1: Z)
  (Inv_mn: ((m_invariant m1 A0) /\ (n_invariant n1 A0) /\ (permut A0 A) /\
           `1 <= m1` /\ `n1 <= N`) /\ `m1 >= n1`)
  (found A0) /\ (permut A0 A).
Proof.
Intuition.
Apply Lemma_3 with m:=m1 n:=n1; Auto.
Save.


