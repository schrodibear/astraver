#!/bin/sh

FILES=`cat bench-files`

# benchmark for caduceus
export CADUCEUSLIB=`pwd`/../../../lib/why
export WHYCOQ=`pwd`/../../../lib/coq
make="make WHYCOQ=$WHYCOQ"

echo "C interp (good)"
export CADUCEUSLIB=`pwd`/../../../lib

bench_c_good () {
    options="$* -why-opt -split-user-conj --loc-alias --arith-mem --abs-int " # -why-opt -show-time"  # --typing-predicates"
    echo "-------------------------------------------------------------------"
    echo "Bench Caduceus+Simplify/Yices with options: $options"
    parsing="../../../bin/caduceus.opt $options"

    rm -f why/*.why
    rm -f simplify/*_why.sx
    rm -f smtlib/*_why.smt
    VCS=""
    for f in $FILES; do
	echo -n "  Generating VCs for $f.c... "
	if $parsing  $f.c > /tmp/caduceus.tmp 2>&1; then
	    if $make -f $f.makefile simplify/${f}_why.sx > /tmp/caduceus.tmp 2>&1 ; then
		if $make -f $f.makefile smtlib/${f}_why.smt > /tmp/caduceus.tmp 2>&1 ; then
		    VCS="$VCS simplify/${f}_why.sx smtlib/${f}_why.smt"    
		    echo "ok"
		else
		    echo "why FAILED :"
		    cat /tmp/caduceus.tmp
		    exit 1
		fi
	    else
		echo "why FAILED :"
		cat /tmp/caduceus.tmp
		exit 1
	    fi
	else
	    echo "caduceus FAILED (rejected a good file) :"
	    cat /tmp/caduceus.tmp
	    exit 1
	fi
    done
    ../../../bin/dp.opt -timeout 20 $VCS 2>/dev/null || true
}

bench_c_good
bench_c_good -separation -no-zone-type

