
//# AnnotationPolicy = WeakPre
# AnnotationPolicy = Invariants
# AbstractDomain = Pol

type intP = {
    integer intM;
}

type int16 = -32768..32767
//type int32 = -2147483648..2147483647

integer binary_search(intP[..] t, integer n, integer v) {
    var integer low = 0;
    var integer up = (n-1) :> int16;
    while (low <= up ) {
 	var integer m = (low + (((up - low) :> int16) / 2) :> int16) :> int16;
	if ((t + m).intM < v) then
	    low = (m + 1) :> int16
	else if ((t + m).intM > v) then 
	    up = (m - 1) :> int16
	else {
	    return m;
	}
    };
    return -1;
}

/*
Local Variables: 
mode: java
compile-command: "make binary_search_overflow_ok"
End: 
*/
