
UNIT: TYPE;
tt: UNIT;
sqrt_real: [REAL -> REAL];
int_of_real: [REAL -> INT];
mod_int: [[INT, INT] -> INT];

%%%% DO NOT EDIT BELOW THIS LINE

%% Why logic sorted_array
sorted_array: [[ARRAY INT OF INT, INT, INT] -> BOOLEAN];

%% Why logic exchange
exchange: [[ARRAY INT OF INT, ARRAY INT OF INT, INT, INT] -> BOOLEAN];

%% Why logic sub_permut
sub_permut: [[INT, INT, ARRAY INT OF INT, ARRAY INT OF INT] -> BOOLEAN];

%% Why logic permut
permut: [[ARRAY INT OF INT, ARRAY INT OF INT] -> BOOLEAN];

%% Why logic array_le
array_le: [[ARRAY INT OF INT, INT, INT, INT] -> BOOLEAN];

%% Why logic array_ge
array_ge: [[ARRAY INT OF INT, INT, INT, INT] -> BOOLEAN];

%% Why logic array_length
array_length_INT: [ARRAY INT OF INT -> INT];

%% Why logic store
store_INT: [[ARRAY INT OF INT, INT, INT] -> UNIT];

%% Why axiom array_length_store
ASSERT (FORALL (t:ARRAY INT OF INT):
       (FORALL (i:INT):
       (FORALL (v:INT):
       (array_length_INT((t WITH [i] := v)) = array_length_INT(t)))));

%% Why logic access
access_INT: [[ARRAY INT OF INT, INT] -> INT];

%% Why axiom exchange_def
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT):
       (FORALL (i:INT):
       (FORALL (j:INT):
       (exchange(t1, t2, i, j) <=>
       ((array_length_INT(t1) = array_length_INT(t2)) AND
       ((t1[i] = t2[j]) AND
       ((t2[i] = t1[j]) AND
       (FORALL (k:INT): (((k /= i) AND (k /= j)) => (t1[k] = t2[k])))))))))));

%% Why axiom permut_refl
ASSERT (FORALL (t:ARRAY INT OF INT): permut(t, t));

%% Why axiom permut_sym
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT): (permut(t1, t2) => permut(t2, t1))));

%% Why axiom permut_trans
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT):
       (FORALL (t3:ARRAY INT OF INT):
       ((permut(t1, t2) AND permut(t2, t3)) => permut(t1, t3)))));

%% Why axiom permut_exchange
ASSERT (FORALL (t:ARRAY INT OF INT):
       (FORALL (i:INT):
       (FORALL (j:INT): permut(t, ((t WITH [i] := t[j]) WITH [j] := t[i])))));

%% Why axiom permut_array_length
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT):
       (permut(t1, t2) => (array_length_INT(t1) = array_length_INT(t2)))));

%% Why axiom sub_permut_refl
ASSERT (FORALL (t:ARRAY INT OF INT):
       (FORALL (g:INT): (FORALL (d:INT): sub_permut(g, d, t, t))));

%% Why axiom sub_permut_sym
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT):
       (FORALL (g:INT):
       (FORALL (d:INT):
       (sub_permut(g, d, t1, t2) => sub_permut(g, d, t2, t1))))));

%% Why axiom sub_permut_trans
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT):
       (FORALL (t3:ARRAY INT OF INT):
       (FORALL (g:INT):
       (FORALL (d:INT):
       (sub_permut(g, d, t1, t2) =>
       (sub_permut(g, d, t2, t3) => sub_permut(g, d, t1, t3))))))));

%% Why axiom sub_permut_exchange_1
ASSERT (FORALL (t:ARRAY INT OF INT):
       (FORALL (g:INT):
       (FORALL (d:INT):
       (FORALL (i:INT):
       (FORALL (j:INT):
       (((g <= i) AND ((i <= d) AND ((g <= j) AND (j <= d)))) =>
       sub_permut(g, d, t, ((t WITH [i] := t[j]) WITH [j] := t[i]))))))));

%% Why axiom sub_permut_exchange_2
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT):
       (FORALL (g:INT):
       (FORALL (d:INT):
       (FORALL (i:INT):
       (FORALL (j:INT):
       (((g <= i) AND
        ((i <= d) AND ((g <= j) AND ((j <= d) AND exchange(t1, t2, i, j))))) =>
       sub_permut(g, d, t1, t2))))))));

%% Why axiom sub_permut_permut
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT):
       (FORALL (g:INT):
       (FORALL (d:INT): (sub_permut(g, d, t1, t2) => permut(t1, t2))))));

%% Why axiom sub_permut_array_length
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT):
       (FORALL (g:INT):
       (FORALL (d:INT):
       (sub_permut(g, d, t1, t2) =>
       (array_length_INT(t1) = array_length_INT(t2)))))));

%% Why axiom sorted_array_def
ASSERT (FORALL (t:ARRAY INT OF INT):
       (FORALL (i:INT):
       (FORALL (j:INT):
       (sorted_array(t, i, j) <=>
       (FORALL (k:INT): (((i <= k) AND (k < j)) => (t[k] <= t[(k + 1)])))))));

%% swap_po_1, Why obligation from file "quicksort2.mlw", characters 227-231
QUERY (FORALL (i:INT):
      (FORALL (j:INT):
      (FORALL (t:(ARRAY INT OF INT)):
      ((((0 <= i) AND (i < array_length_INT(t))) AND
       ((0 <= j) AND (j < array_length_INT(t)))) =>
      (((0 <= i) AND (i < array_length_INT(t))) =>
      (FORALL (v:INT):
      ((v = t[i]) => ((0 <= j) AND (j < array_length_INT(t))))))))));

%% swap_po_2, Why obligation from file "quicksort2.mlw", characters 219-231
QUERY (FORALL (i:INT):
      (FORALL (j:INT):
      (FORALL (t:(ARRAY INT OF INT)):
      ((((0 <= i) AND (i < array_length_INT(t))) AND
       ((0 <= j) AND (j < array_length_INT(t)))) =>
      (((0 <= i) AND (i < array_length_INT(t))) =>
      (FORALL (v:INT):
      ((v = t[i]) =>
      (((0 <= j) AND (j < array_length_INT(t))) =>
      (FORALL (aux_2:INT):
      ((aux_2 = t[j]) =>
      (FORALL (aux_1:INT):
      ((aux_1 = i) => ((0 <= aux_1) AND (aux_1 < array_length_INT(t)))))))))))))));

%% swap_po_3, Why obligation from file "quicksort2.mlw", characters 219-231
QUERY (FORALL (i:INT):
      (FORALL (j:INT):
      (FORALL (t:(ARRAY INT OF INT)):
      ((((0 <= i) AND (i < array_length_INT(t))) AND
       ((0 <= j) AND (j < array_length_INT(t)))) =>
      (((0 <= i) AND (i < array_length_INT(t))) =>
      (FORALL (v:INT):
      ((v = t[i]) =>
      (((0 <= j) AND (j < array_length_INT(t))) =>
      (FORALL (aux_2:INT):
      ((aux_2 = t[j]) =>
      (FORALL (aux_1:INT):
      ((aux_1 = i) =>
      (((0 <= aux_1) AND (aux_1 < array_length_INT(t))) =>
      (FORALL (t0:(ARRAY INT OF INT)):
      ((t0 = (t WITH [aux_1] := aux_2)) =>
      (FORALL (result:INT):
      ((result = v) =>
      (FORALL (result0:INT):
      ((result0 = j) =>
      ((FORALL (t1:ARRAY INT OF INT):
       ((t1 = (t0 WITH [result0] := result)) => exchange(t1, t, i, j))) AND
      ((0 <= result0) AND (result0 < array_length_INT(t0)))))))))))))))))))))));

%% quick_rec_po_1, Why obligation from file "quicksort2.mlw", characters 523-527
QUERY (FORALL (l:INT):
      (FORALL (r:INT):
      (FORALL (t:(ARRAY INT OF INT)):
      (((0 <= l) AND (r < array_length_INT(t))) =>
      (FORALL (Variant1:INT):
      (FORALL (l0:INT):
      (FORALL (r0:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = ((1 + r0) - l0)) =>
      (((0 <= l0) AND (r0 < array_length_INT(t0))) =>
      ((l0 < r0) => ((0 <= l0) AND (l0 < array_length_INT(t0))))))))))))));

%% quick_rec_po_2, Why obligation from file "quicksort2.mlw", characters 884-893
QUERY (FORALL (l:INT):
      (FORALL (r:INT):
      (FORALL (t:(ARRAY INT OF INT)):
      (((0 <= l) AND (r < array_length_INT(t))) =>
      (FORALL (Variant1:INT):
      (FORALL (l0:INT):
      (FORALL (r0:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = ((1 + r0) - l0)) =>
      (((0 <= l0) AND (r0 < array_length_INT(t0))) =>
      ((l0 < r0) =>
      (((0 <= l0) AND (l0 < array_length_INT(t0))) =>
      (FORALL (v:INT):
      ((v = t0[l0]) =>
      (FORALL (m:INT):
      ((m = l0) =>
      (FORALL (i:INT):
      ((i = (l0 + 1)) =>
      (FORALL (Variant3:INT):
      (FORALL (i1:INT):
      (FORALL (m1:INT):
      (FORALL (t1:(ARRAY INT OF INT)):
      ((Variant3 = ((1 + r0) - i1)) =>
      (((FORALL (j:INT): (((l0 < j) AND (j <= m1)) => (t1[j] < v))) AND
       ((FORALL (j:INT): (((m1 < j) AND (j < i1)) => (t1[j] >= v))) AND
       (sub_permut(l0, r0, t1, t0) AND
       ((t1[l0] = v) AND (((l0 <= m1) AND (m1 < i1)) AND (i1 <= (r0 + 1))))))) =>
      ((i1 <= r0) => ((0 <= i1) AND (i1 < array_length_INT(t1))))))))))))))))))))))))))));

%% quick_rec_po_3, Why obligation from file "quicksort2.mlw", characters 918-932
QUERY (FORALL (l:INT):
      (FORALL (r:INT):
      (FORALL (t:(ARRAY INT OF INT)):
      (((0 <= l) AND (r < array_length_INT(t))) =>
      (FORALL (Variant1:INT):
      (FORALL (l0:INT):
      (FORALL (r0:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = ((1 + r0) - l0)) =>
      (((0 <= l0) AND (r0 < array_length_INT(t0))) =>
      ((l0 < r0) =>
      (((0 <= l0) AND (l0 < array_length_INT(t0))) =>
      (FORALL (v:INT):
      ((v = t0[l0]) =>
      (FORALL (m:INT):
      ((m = l0) =>
      (FORALL (i:INT):
      ((i = (l0 + 1)) =>
      (FORALL (Variant3:INT):
      (FORALL (i1:INT):
      (FORALL (m1:INT):
      (FORALL (t1:(ARRAY INT OF INT)):
      ((Variant3 = ((1 + r0) - i1)) =>
      (((FORALL (j:INT): (((l0 < j) AND (j <= m1)) => (t1[j] < v))) AND
       ((FORALL (j:INT): (((m1 < j) AND (j < i1)) => (t1[j] >= v))) AND
       (sub_permut(l0, r0, t1, t0) AND
       ((t1[l0] = v) AND (((l0 <= m1) AND (m1 < i1)) AND (i1 <= (r0 + 1))))))) =>
      ((i1 <= r0) =>
      (((0 <= i1) AND (i1 < array_length_INT(t1))) =>
      ((t1[i1] < v) =>
      (FORALL (m2:INT):
      ((m2 = (m1 + 1)) =>
      (((0 <= i1) AND (i1 < array_length_INT(t1))) AND
      ((0 <= m2) AND (m2 < array_length_INT(t1)))))))))))))))))))))))))))))))));

%% quick_rec_po_4, Why obligation from file "quicksort2.mlw", characters 899-936
QUERY (FORALL (l:INT):
      (FORALL (r:INT):
      (FORALL (t:(ARRAY INT OF INT)):
      (((0 <= l) AND (r < array_length_INT(t))) =>
      (FORALL (Variant1:INT):
      (FORALL (l0:INT):
      (FORALL (r0:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = ((1 + r0) - l0)) =>
      (((0 <= l0) AND (r0 < array_length_INT(t0))) =>
      ((l0 < r0) =>
      (((0 <= l0) AND (l0 < array_length_INT(t0))) =>
      (FORALL (v:INT):
      ((v = t0[l0]) =>
      (FORALL (m:INT):
      ((m = l0) =>
      (FORALL (i:INT):
      ((i = (l0 + 1)) =>
      (FORALL (Variant3:INT):
      (FORALL (i1:INT):
      (FORALL (m1:INT):
      (FORALL (t1:(ARRAY INT OF INT)):
      ((Variant3 = ((1 + r0) - i1)) =>
      (((FORALL (j:INT): (((l0 < j) AND (j <= m1)) => (t1[j] < v))) AND
       ((FORALL (j:INT): (((m1 < j) AND (j < i1)) => (t1[j] >= v))) AND
       (sub_permut(l0, r0, t1, t0) AND
       ((t1[l0] = v) AND (((l0 <= m1) AND (m1 < i1)) AND (i1 <= (r0 + 1))))))) =>
      ((i1 <= r0) =>
      (((0 <= i1) AND (i1 < array_length_INT(t1))) =>
      ((t1[i1] < v) =>
      (FORALL (m2:INT):
      ((m2 = (m1 + 1)) =>
      ((((0 <= i1) AND (i1 < array_length_INT(t1))) AND
       ((0 <= m2) AND (m2 < array_length_INT(t1)))) =>
      (FORALL (t2:(ARRAY INT OF INT)):
      (exchange(t2, t1, i1, m2) =>
      (FORALL (i:INT):
      ((i = (i1 + 1)) =>
      (((FORALL (j:INT): (((l0 < j) AND (j <= m2)) => (t2[j] < v))) AND
       ((FORALL (j:INT): (((m2 < j) AND (j < i)) => (t2[j] >= v))) AND
       (sub_permut(l0, r0, t2, t0) AND
       ((t2[l0] = v) AND (((l0 <= m2) AND (m2 < i)) AND (i <= (r0 + 1))))))) AND
      ((0 <= ((1 + r0) - i1)) AND (((1 + r0) - i) < ((1 + r0) - i1))))))))))))))))))))))))))))))))))))));

%% quick_rec_po_5, Why obligation from file "quicksort2.mlw", characters 936-936
QUERY (FORALL (l:INT):
      (FORALL (r:INT):
      (FORALL (t:(ARRAY INT OF INT)):
      (((0 <= l) AND (r < array_length_INT(t))) =>
      (FORALL (Variant1:INT):
      (FORALL (l0:INT):
      (FORALL (r0:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = ((1 + r0) - l0)) =>
      (((0 <= l0) AND (r0 < array_length_INT(t0))) =>
      ((l0 < r0) =>
      (((0 <= l0) AND (l0 < array_length_INT(t0))) =>
      (FORALL (v:INT):
      ((v = t0[l0]) =>
      (FORALL (m:INT):
      ((m = l0) =>
      (FORALL (i:INT):
      ((i = (l0 + 1)) =>
      (FORALL (Variant3:INT):
      (FORALL (i1:INT):
      (FORALL (m1:INT):
      (FORALL (t1:(ARRAY INT OF INT)):
      ((Variant3 = ((1 + r0) - i1)) =>
      (((FORALL (j:INT): (((l0 < j) AND (j <= m1)) => (t1[j] < v))) AND
       ((FORALL (j:INT): (((m1 < j) AND (j < i1)) => (t1[j] >= v))) AND
       (sub_permut(l0, r0, t1, t0) AND
       ((t1[l0] = v) AND (((l0 <= m1) AND (m1 < i1)) AND (i1 <= (r0 + 1))))))) =>
      ((i1 <= r0) =>
      (((0 <= i1) AND (i1 < array_length_INT(t1))) =>
      ((t1[i1] >= v) =>
      (FORALL (result2:UNIT):
      ((result2 = tt) =>
      (FORALL (i:INT):
      ((i = (i1 + 1)) =>
      (((FORALL (j:INT): (((l0 < j) AND (j <= m1)) => (t1[j] < v))) AND
       ((FORALL (j:INT): (((m1 < j) AND (j < i)) => (t1[j] >= v))) AND
       (sub_permut(l0, r0, t1, t0) AND
       ((t1[l0] = v) AND (((l0 <= m1) AND (m1 < i)) AND (i <= (r0 + 1))))))) AND
      ((0 <= ((1 + r0) - i1)) AND (((1 + r0) - i) < ((1 + r0) - i1)))))))))))))))))))))))))))))))))));

%% quick_rec_po_6, Why obligation from file "quicksort2.mlw", characters 610-968
QUERY (FORALL (l:INT):
      (FORALL (r:INT):
      (FORALL (t:(ARRAY INT OF INT)):
      (((0 <= l) AND (r < array_length_INT(t))) =>
      (FORALL (Variant1:INT):
      (FORALL (l0:INT):
      (FORALL (r0:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = ((1 + r0) - l0)) =>
      (((0 <= l0) AND (r0 < array_length_INT(t0))) =>
      ((l0 < r0) =>
      (((0 <= l0) AND (l0 < array_length_INT(t0))) =>
      (FORALL (v:INT):
      ((v = t0[l0]) =>
      (FORALL (m:INT):
      ((m = l0) =>
      (FORALL (i:INT):
      ((i = (l0 + 1)) =>
      (FORALL (Variant3:INT):
      (FORALL (i1:INT):
      (FORALL (m1:INT):
      (FORALL (t1:(ARRAY INT OF INT)):
      ((Variant3 = ((1 + r0) - i1)) =>
      (((FORALL (j:INT): (((l0 < j) AND (j <= m1)) => (t1[j] < v))) AND
       ((FORALL (j:INT): (((m1 < j) AND (j < i1)) => (t1[j] >= v))) AND
       (sub_permut(l0, r0, t1, t0) AND
       ((t1[l0] = v) AND (((l0 <= m1) AND (m1 < i1)) AND (i1 <= (r0 + 1))))))) =>
      ((i1 > r0) =>
      ((FORALL (t:ARRAY INT OF INT):
       (exchange(t, t1, l0, m1) =>
       ((FORALL (t1:ARRAY INT OF INT):
        ((sorted_array(t1, l0, (m1 - 1)) AND sub_permut(l0, (m1 - 1), t1, t)) =>
        ((FORALL (t:ARRAY INT OF INT):
         ((sorted_array(t, (m1 + 1), r0) AND sub_permut((m1 + 1), r0, t, t1)) =>
         (sorted_array(t, l0, r0) AND sub_permut(l0, r0, t, t0)))) AND
        ((0 <= (m1 + 1)) AND (r0 < array_length_INT(t1)))))) AND
       ((0 <= l0) AND ((m1 - 1) < array_length_INT(t)))))) AND
      (((0 <= l0) AND (l0 < array_length_INT(t1))) AND
      ((0 <= m1) AND (m1 < array_length_INT(t1))))))))))))))))))))))))))))));

%% quick_rec_po_7, Why obligation from file "quicksort2.mlw", characters 640-842
QUERY (FORALL (l:INT):
      (FORALL (r:INT):
      (FORALL (t:(ARRAY INT OF INT)):
      (((0 <= l) AND (r < array_length_INT(t))) =>
      (FORALL (Variant1:INT):
      (FORALL (l0:INT):
      (FORALL (r0:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = ((1 + r0) - l0)) =>
      (((0 <= l0) AND (r0 < array_length_INT(t0))) =>
      ((l0 < r0) =>
      (((0 <= l0) AND (l0 < array_length_INT(t0))) =>
      (FORALL (v:INT):
      ((v = t0[l0]) =>
      (FORALL (m:INT):
      ((m = l0) =>
      (FORALL (i:INT):
      ((i = (l0 + 1)) =>
      ((FORALL (j:INT): (((l0 < j) AND (j <= m)) => (t0[j] < v))) AND
      ((FORALL (j:INT): (((m < j) AND (j < i)) => (t0[j] >= v))) AND
      (sub_permut(l0, r0, t0, t0) AND
      ((t0[l0] = v) AND (((l0 <= m) AND (m < i)) AND (i <= (r0 + 1)))))))))))))))))))))))));

%% quick_rec_po_8, Why obligation from file "quicksort2.mlw", characters 459-1117
QUERY (FORALL (l:INT):
      (FORALL (r:INT):
      (FORALL (t:(ARRAY INT OF INT)):
      (((0 <= l) AND (r < array_length_INT(t))) =>
      (FORALL (Variant1:INT):
      (FORALL (l0:INT):
      (FORALL (r0:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = ((1 + r0) - l0)) =>
      (((0 <= l0) AND (r0 < array_length_INT(t0))) =>
      ((l0 < r0) =>
      (((0 <= l0) AND (l0 < array_length_INT(t0))) =>
      (FORALL (v:INT):
      ((v = t0[l0]) =>
      (FORALL (m:INT):
      ((m = l0) =>
      (FORALL (i:INT):
      ((i = (l0 + 1)) =>
      (FORALL (m1:INT):
      (FORALL (t1:(ARRAY INT OF INT)):
      ((((0 <= l0) AND (l0 < array_length_INT(t1))) AND
       ((0 <= m1) AND (m1 < array_length_INT(t1)))) =>
      (FORALL (t2:(ARRAY INT OF INT)):
      (exchange(t2, t1, l0, m1) =>
      (((0 <= l0) AND ((m1 - 1) < array_length_INT(t2))) =>
      (FORALL (result2:INT):
      ((result2 = (m1 - 1)) =>
      (FORALL (result3:INT):
      ((result3 = l0) =>
      (FORALL (r1:INT):
      (FORALL (t2_0:(ARRAY INT OF INT)):
      (((0 <= result3) AND (r1 < array_length_INT(t2_0))) =>
      ((0 <= Variant1) AND (((1 + r1) - result3) < Variant1)))))))))))))))))))))))))))))))));

%% quick_rec_po_9, Why obligation from file "quicksort2.mlw", characters 459-1117
QUERY (FORALL (l:INT):
      (FORALL (r:INT):
      (FORALL (t:(ARRAY INT OF INT)):
      (((0 <= l) AND (r < array_length_INT(t))) =>
      (FORALL (Variant1:INT):
      (FORALL (l0:INT):
      (FORALL (r0:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = ((1 + r0) - l0)) =>
      (((0 <= l0) AND (r0 < array_length_INT(t0))) =>
      ((l0 < r0) =>
      (((0 <= l0) AND (l0 < array_length_INT(t0))) =>
      (FORALL (v:INT):
      ((v = t0[l0]) =>
      (FORALL (m:INT):
      ((m = l0) =>
      (FORALL (i:INT):
      ((i = (l0 + 1)) =>
      (FORALL (m1:INT):
      (FORALL (t1:(ARRAY INT OF INT)):
      ((((0 <= l0) AND (l0 < array_length_INT(t1))) AND
       ((0 <= m1) AND (m1 < array_length_INT(t1)))) =>
      (FORALL (t2:(ARRAY INT OF INT)):
      (exchange(t2, t1, l0, m1) =>
      (((0 <= l0) AND ((m1 - 1) < array_length_INT(t2))) =>
      (FORALL (t3:(ARRAY INT OF INT)):
      ((sorted_array(t3, l0, (m1 - 1)) AND sub_permut(l0, (m1 - 1), t3, t2)) =>
      (((0 <= (m1 + 1)) AND (r0 < array_length_INT(t3))) =>
      (FORALL (result3:INT):
      ((result3 = r0) =>
      (FORALL (result4:INT):
      ((result4 = (m1 + 1)) =>
      (FORALL (r1:INT):
      (FORALL (t3_0:(ARRAY INT OF INT)):
      (((0 <= result4) AND (r1 < array_length_INT(t3_0))) =>
      ((0 <= Variant1) AND (((1 + r1) - result4) < Variant1))))))))))))))))))))))))))))))))))));

%% quick_rec_po_10, Why obligation from file "quicksort2.mlw", characters 1061-1061
QUERY (FORALL (l:INT):
      (FORALL (r:INT):
      (FORALL (t:(ARRAY INT OF INT)):
      (((0 <= l) AND (r < array_length_INT(t))) =>
      (FORALL (Variant1:INT):
      (FORALL (l0:INT):
      (FORALL (r0:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = ((1 + r0) - l0)) =>
      (((0 <= l0) AND (r0 < array_length_INT(t0))) =>
      ((l0 >= r0) =>
      (FORALL (result0:UNIT):
      ((result0 = tt) =>
      (sorted_array(t0, l0, r0) AND sub_permut(l0, r0, t0, t0)))))))))))))));

%% quicksort_po_1, Why obligation from file "quicksort2.mlw", characters 1221-1325
QUERY (FORALL (t:(ARRAY INT OF INT)):
      (FORALL (result:INT):
      ((result = (array_length_INT(t) - 1)) =>
      ((0 <= 0) AND ((array_length_INT(t) - 1) < array_length_INT(t))))));

%% quicksort_po_2, Why obligation from file "quicksort2.mlw", characters 1221-1325
QUERY (FORALL (t:(ARRAY INT OF INT)):
      (FORALL (result:INT):
      ((result = (array_length_INT(t) - 1)) =>
      (((0 <= 0) AND ((array_length_INT(t) - 1) < array_length_INT(t))) =>
      (FORALL (t0:(ARRAY INT OF INT)):
      ((sorted_array(t0, 0, (array_length_INT(t) - 1)) AND
       sub_permut(0, (array_length_INT(t) - 1), t0, t)) =>
      (sorted_array(t0, 0, (array_length_INT(t0) - 1)) AND permut(t0, t))))))));

