(BG_PUSH (FORALL (t i v) (EQ (array_length (store t i v)) (array_length t))))

(BG_PUSH
  ; exchange
  (FORALL (t1 t2 i j)
	  (IFF (EQ (exchange t1 t2 i j) |@true|)
	       (AND (EQ (array_length t1) (array_length t2))
		    (EQ (select t1 i) (select t2 j))
		    (EQ (select t1 j) (select t2 i))
		    (FORALL (k) (IMPLIES (AND (NEQ k i) (NEQ k j))
					 (EQ (select t1 k) (select t2 k)))))))
  (FORALL (t1 t2 i j)
	  (IMPLIES (EQ (exchange t1 t2 i j) |@true|)
		   (EQ (array_length t1) (array_length t2))))
  ; permut
  (FORALL (t) (EQ (permut t t) |@true|))
  (FORALL (t1 t2) (IMPLIES (EQ (permut t1 t2) |@true|)
			   (EQ (permut t2 t1) |@true|)))
  (FORALL (t1 t2 t3) (IMPLIES (AND (EQ (permut t1 t2) |@true|)
				   (EQ (permut t2 t3) |@true|))
			      (EQ (permut t1 t3) |@true|)))
  (FORALL 
   (t i j) 
   (EQ (permut t (store (store t i (select t j)) j (select t i))) |@true|))
  (FORALL (t1 t2)
	  (IMPLIES (EQ (permut t1 t2) |@true|)
		   (EQ (array_length t1) (array_length t2))))
  ; sub_permut
  (FORALL (t g d) (EQ (sub_permut g d t t) |@true|))
  (FORALL (t1 t2 g d) (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
			   (EQ (sub_permut g d t2 t1) |@true|)))
  (FORALL (t1 t2 t3 g d) (IMPLIES (AND (EQ (sub_permut g d t1 t2) |@true|)
				       (EQ (sub_permut g d t2 t3) |@true|))
				  (EQ (sub_permut g d t1 t3) |@true|)))
  (FORALL 
   (t g d i j) 
   (IMPLIES (AND (<= g i) (<= i d) (<= g j) (<= j d))
	    (EQ (sub_permut g d t 
			    (store (store t i (select t j)) j (select t i))) 
		|@true|)))
  (FORALL 
   (t1 t2 g d i j)
   (IMPLIES (AND (EQ (exchange t1 t2 i j) |@true|)
		 (<= g i) (<= i d) (<= g j) (<= j d))
	    (EQ (sub_permut g d t1 t2) |@true|)))
  (FORALL (t1 t2 i j) 
	  (IMPLIES (EQ (sub_permut i j t1 t2) |@true|)
		   (EQ (permut t1 t2) |@true|)))
  (FORALL (t1 t2 i j)
	  (IMPLIES (EQ (sub_permut i j t1 t2) |@true|)
		   (EQ (array_length t1) (array_length t2))))
  ; sorted_array
  (FORALL 
   (t i j) 
   (IFF (EQ (sorted_array t i j) |@true|)
	(IMPLIES (<= i j)
		 (FORALL (k) (IMPLIES (AND (<= i k) (< k j))
				      (<= (select t k) (select t (+ k 1))))))))
)

;; DO NOT EDIT BELOW THIS LINE

;; swap_po_1, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (array_length t)))
         (AND (<= 0 j) (< j (array_length t))))
(FORALL (result)
(IMPLIES (EQ result (select t i))
(FORALL (result0)
(IMPLIES (EQ result0 (select t j))
(FORALL (t0)
(IMPLIES (EQ t0 (update t i result0))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 j result)) (EQ (exchange t1 t i j) |@true|)))))))))))))

;; swap_po_2, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (array_length t)))
         (AND (<= 0 j) (< j (array_length t))))
(FORALL (result)
(IMPLIES (EQ result (select t i))
(FORALL (result0)
(IMPLIES (EQ result0 (select t j))
(FORALL (t0)
(IMPLIES (EQ t0 (update t i result0)) (AND (<= 0 j) (< j (array_length t0)))))))))))))

;; swap_po_3, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (array_length t)))
         (AND (<= 0 j) (< j (array_length t))))
(FORALL (result)
(IMPLIES (EQ result (select t i))
(FORALL (result0)
(IMPLIES (EQ result0 (select t j)) (AND (<= 0 i) (< i (array_length t)))))))))))

;; swap_po_4, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (array_length t)))
         (AND (<= 0 j) (< j (array_length t))))
(FORALL (result)
(IMPLIES (EQ result (select t i)) (AND (<= 0 j) (< j (array_length t)))))))))

;; swap_po_5, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (array_length t)))
         (AND (<= 0 j) (< j (array_length t))))
(AND (<= 0 i) (< i (array_length t)))))))

;; quick_rec_po_1, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r)
(FORALL (result)
(IMPLIES (EQ result (select t l))
(AND (FORALL (j) (IMPLIES (AND (< l j) (<= j l)) (< (select t j) result)))
(AND
(FORALL (j) (IMPLIES (AND (< l j) (< j (+ l 1))) (>= (select t j) result)))
(AND (EQ (sub_permut l r t t) |@true|)
(AND (EQ (select t l) result)
(AND (AND (<= l l) (< l (+ l 1))) (<= (+ l 1) (+ r 1))))))))))))))

;; quick_rec_po_2, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r)
(FORALL (result)
(IMPLIES (EQ result (select t l))
(FORALL (i)
(FORALL (m)
(FORALL (t0)
(IMPLIES (AND
         (FORALL (j)
         (IMPLIES (AND (< l j) (<= j m)) (< (select t0 j) result)))
         (AND
         (FORALL (j)
         (IMPLIES (AND (< m j) (< j i)) (>= (select t0 j) result)))
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (AND (EQ (select t0 l) result)
         (AND (AND (<= l m) (< m i)) (<= i (+ r 1)))))))
(IMPLIES (<= i r)
(FORALL (result0)
(IMPLIES (EQ result0 (select t0 i))
(IMPLIES (< result0 result)
(FORALL (m0)
(IMPLIES (EQ m0 (+ m 1))
(FORALL (t1)
(IMPLIES (EQ (exchange t1 t0 i m0) |@true|)
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1))
(AND
(AND (FORALL (j) (IMPLIES (AND (< l j) (<= j m0)) (< (select t1 j) result)))
(AND (FORALL (j) (IMPLIES (AND (< m0 j) (< j i0)) (>= (select t1 j) result)))
(AND (EQ (sub_permut l r t1 t) |@true|)
(AND (EQ (select t1 l) result)
(AND (AND (<= l m0) (< m0 i0)) (<= i0 (+ r 1)))))))
(AND (<= 0 (- (+ 1 r) i)) (< (- (+ 1 r) i0) (- (+ 1 r) i)))))))))))))))))))))))))

;; quick_rec_po_3, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r)
(FORALL (result)
(IMPLIES (EQ result (select t l))
(FORALL (i)
(FORALL (m)
(FORALL (t0)
(IMPLIES (AND
         (FORALL (j)
         (IMPLIES (AND (< l j) (<= j m)) (< (select t0 j) result)))
         (AND
         (FORALL (j)
         (IMPLIES (AND (< m j) (< j i)) (>= (select t0 j) result)))
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (AND (EQ (select t0 l) result)
         (AND (AND (<= l m) (< m i)) (<= i (+ r 1)))))))
(IMPLIES (<= i r)
(FORALL (result0)
(IMPLIES (EQ result0 (select t0 i))
(IMPLIES (< result0 result)
(FORALL (m0)
(IMPLIES (EQ m0 (+ m 1))
(AND (AND (<= 0 i) (< i (array_length t0)))
(AND (<= 0 m0) (< m0 (array_length t0)))))))))))))))))))))

;; quick_rec_po_4, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r)
(FORALL (result)
(IMPLIES (EQ result (select t l))
(FORALL (i)
(FORALL (m)
(FORALL (t0)
(IMPLIES (AND
         (FORALL (j)
         (IMPLIES (AND (< l j) (<= j m)) (< (select t0 j) result)))
         (AND
         (FORALL (j)
         (IMPLIES (AND (< m j) (< j i)) (>= (select t0 j) result)))
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (AND (EQ (select t0 l) result)
         (AND (AND (<= l m) (< m i)) (<= i (+ r 1)))))))
(IMPLIES (<= i r)
(FORALL (result0)
(IMPLIES (EQ result0 (select t0 i))
(IMPLIES (>= result0 result)
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1))
(AND
(AND (FORALL (j) (IMPLIES (AND (< l j) (<= j m)) (< (select t0 j) result)))
(AND (FORALL (j) (IMPLIES (AND (< m j) (< j i0)) (>= (select t0 j) result)))
(AND (EQ (sub_permut l r t0 t) |@true|)
(AND (EQ (select t0 l) result) (AND (AND (<= l m) (< m i0)) (<= i0 (+ r 1)))))))
(AND (<= 0 (- (+ 1 r) i)) (< (- (+ 1 r) i0) (- (+ 1 r) i)))))))))))))))))))))

;; quick_rec_po_5, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r)
(FORALL (result)
(IMPLIES (EQ result (select t l))
(FORALL (i)
(FORALL (m)
(FORALL (t0)
(IMPLIES (AND
         (FORALL (j)
         (IMPLIES (AND (< l j) (<= j m)) (< (select t0 j) result)))
         (AND
         (FORALL (j)
         (IMPLIES (AND (< m j) (< j i)) (>= (select t0 j) result)))
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (AND (EQ (select t0 l) result)
         (AND (AND (<= l m) (< m i)) (<= i (+ r 1)))))))
(IMPLIES (<= i r) (AND (<= 0 i) (< i (array_length t0)))))))))))))))

;; quick_rec_po_6, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r)
(FORALL (result)
(IMPLIES (EQ result (select t l))
(FORALL (i)
(FORALL (m)
(FORALL (t0)
(IMPLIES (AND
         (FORALL (j)
         (IMPLIES (AND (< l j) (<= j m)) (< (select t0 j) result)))
         (AND
         (FORALL (j)
         (IMPLIES (AND (< m j) (< j i)) (>= (select t0 j) result)))
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (AND (EQ (select t0 l) result)
         (AND (AND (<= l m) (< m i)) (<= i (+ r 1)))))))
(IMPLIES (> i r)
(FORALL (t1)
(IMPLIES (EQ (exchange t1 t0 l m) |@true|)
(FORALL (t2)
(IMPLIES (AND (EQ (sorted_array t2 l (- m 1)) |@true|)
         (EQ (sub_permut l (- m 1) t2 t1) |@true|))
(FORALL (t3)
(IMPLIES (AND (EQ (sorted_array t3 (+ m 1) r) |@true|)
         (EQ (sub_permut (+ m 1) r t3 t2) |@true|))
(AND (EQ (sorted_array t3 l r) |@true|) (EQ (sub_permut l r t3 t) |@true|))))))))))))))))))))

;; quick_rec_po_7, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r)
(FORALL (result)
(IMPLIES (EQ result (select t l))
(FORALL (i)
(FORALL (m)
(FORALL (t0)
(IMPLIES (AND
         (FORALL (j)
         (IMPLIES (AND (< l j) (<= j m)) (< (select t0 j) result)))
         (AND
         (FORALL (j)
         (IMPLIES (AND (< m j) (< j i)) (>= (select t0 j) result)))
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (AND (EQ (select t0 l) result)
         (AND (AND (<= l m) (< m i)) (<= i (+ r 1)))))))
(IMPLIES (> i r)
(FORALL (t1)
(IMPLIES (EQ (exchange t1 t0 l m) |@true|)
(FORALL (t2)
(IMPLIES (AND (EQ (sorted_array t2 l (- m 1)) |@true|)
         (EQ (sub_permut l (- m 1) t2 t1) |@true|))
(AND (<= 0 (- (+ 1 r) l)) (< (- (+ 1 r) (+ m 1)) (- (+ 1 r) l)))))))))))))))))))

;; quick_rec_po_8, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r)
(FORALL (result)
(IMPLIES (EQ result (select t l))
(FORALL (i)
(FORALL (m)
(FORALL (t0)
(IMPLIES (AND
         (FORALL (j)
         (IMPLIES (AND (< l j) (<= j m)) (< (select t0 j) result)))
         (AND
         (FORALL (j)
         (IMPLIES (AND (< m j) (< j i)) (>= (select t0 j) result)))
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (AND (EQ (select t0 l) result)
         (AND (AND (<= l m) (< m i)) (<= i (+ r 1)))))))
(IMPLIES (> i r)
(FORALL (t1)
(IMPLIES (EQ (exchange t1 t0 l m) |@true|)
(FORALL (t2)
(IMPLIES (AND (EQ (sorted_array t2 l (- m 1)) |@true|)
         (EQ (sub_permut l (- m 1) t2 t1) |@true|))
(AND (<= 0 (+ m 1)) (< r (array_length t2)))))))))))))))))))

;; quick_rec_po_9, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r)
(FORALL (result)
(IMPLIES (EQ result (select t l))
(FORALL (i)
(FORALL (m)
(FORALL (t0)
(IMPLIES (AND
         (FORALL (j)
         (IMPLIES (AND (< l j) (<= j m)) (< (select t0 j) result)))
         (AND
         (FORALL (j)
         (IMPLIES (AND (< m j) (< j i)) (>= (select t0 j) result)))
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (AND (EQ (select t0 l) result)
         (AND (AND (<= l m) (< m i)) (<= i (+ r 1)))))))
(IMPLIES (> i r)
(FORALL (t1)
(IMPLIES (EQ (exchange t1 t0 l m) |@true|)
(AND (<= 0 (- (+ 1 r) l)) (< (- (+ 1 (- m 1)) l) (- (+ 1 r) l)))))))))))))))))

;; quick_rec_po_10, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r)
(FORALL (result)
(IMPLIES (EQ result (select t l))
(FORALL (i)
(FORALL (m)
(FORALL (t0)
(IMPLIES (AND
         (FORALL (j)
         (IMPLIES (AND (< l j) (<= j m)) (< (select t0 j) result)))
         (AND
         (FORALL (j)
         (IMPLIES (AND (< m j) (< j i)) (>= (select t0 j) result)))
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (AND (EQ (select t0 l) result)
         (AND (AND (<= l m) (< m i)) (<= i (+ r 1)))))))
(IMPLIES (> i r)
(FORALL (t1)
(IMPLIES (EQ (exchange t1 t0 l m) |@true|)
(AND (<= 0 l) (< (- m 1) (array_length t1)))))))))))))))))

;; quick_rec_po_11, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r)
(FORALL (result)
(IMPLIES (EQ result (select t l))
(FORALL (i)
(FORALL (m)
(FORALL (t0)
(IMPLIES (AND
         (FORALL (j)
         (IMPLIES (AND (< l j) (<= j m)) (< (select t0 j) result)))
         (AND
         (FORALL (j)
         (IMPLIES (AND (< m j) (< j i)) (>= (select t0 j) result)))
         (AND (EQ (sub_permut l r t0 t) |@true|)
         (AND (EQ (select t0 l) result)
         (AND (AND (<= l m) (< m i)) (<= i (+ r 1)))))))
(IMPLIES (> i r)
(AND (AND (<= 0 l) (< l (array_length t0)))
(AND (<= 0 m) (< m (array_length t0))))))))))))))))

;; quick_rec_po_12, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (< l r) (AND (<= 0 l) (< l (array_length t))))))))

;; quick_rec_po_13, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (l)
(FORALL (r)
(FORALL (t)
(IMPLIES (AND (<= 0 l) (< r (array_length t)))
(IMPLIES (>= l r)
(AND (EQ (sorted_array t l r) |@true|) (EQ (sub_permut l r t t) |@true|)))))))

;; quicksort_po_1, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (t)
(FORALL (result)
(IMPLIES (EQ result (array_length t))
(FORALL (t0)
(IMPLIES (AND (EQ (sorted_array t0 0 (- result 1)) |@true|)
         (EQ (sub_permut 0 (- result 1) t0 t) |@true|))
(AND (EQ (sorted_array t0 0 (- (array_length t0) 1)) |@true|)
(EQ (permut t0 t) |@true|)))))))

;; quicksort_po_2, Why obligation from file "quicksort2.mlw", line 0, characters 0-0:
(FORALL (t)
(FORALL (result)
(IMPLIES (EQ result (array_length t))
(AND (<= 0 0) (< (- result 1) (array_length t))))))

