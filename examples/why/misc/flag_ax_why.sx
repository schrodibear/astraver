
;; DO NOT EDIT BELOW THIS LINE

(BG_PUSH (NEQ |@true| |@false|))

(BG_PUSH
 ;; Why axiom bool_and_def
 (FORALL (a b)
 (IFF (EQ (bool_and a b) |@true|) (AND (EQ a |@true|) (EQ b |@true|)))))

(BG_PUSH
 ;; Why axiom bool_or_def
 (FORALL (a b)
 (IFF (EQ (bool_or a b) |@true|) (OR (EQ a |@true|) (EQ b |@true|)))))

(BG_PUSH
 ;; Why axiom bool_xor_def
 (FORALL (a b) (IFF (EQ (bool_xor a b) |@true|) (NEQ a b))))

(BG_PUSH
 ;; Why axiom bool_not_def
 (FORALL (a) (IFF (EQ (bool_not a) |@true|) (EQ a |@false|))))

(BG_PUSH
 ;; Why axiom ite_true
 (FORALL (x y) (EQ (ite |@true| x y) x)))

(BG_PUSH
 ;; Why axiom ite_false
 (FORALL (x y) (EQ (ite |@false| x y) y)))

(BG_PUSH
 ;; Why axiom lt_int_bool_axiom
 (FORALL (x y) (IFF (EQ (lt_int_bool x y) |@true|) (< x y))))

(BG_PUSH
 ;; Why axiom le_int_bool_axiom
 (FORALL (x y) (IFF (EQ (le_int_bool x y) |@true|) (<= x y))))

(BG_PUSH
 ;; Why axiom gt_int_bool_axiom
 (FORALL (x y) (IFF (EQ (gt_int_bool x y) |@true|) (> x y))))

(BG_PUSH
 ;; Why axiom ge_int_bool_axiom
 (FORALL (x y) (IFF (EQ (ge_int_bool x y) |@true|) (>= x y))))

(BG_PUSH
 ;; Why axiom eq_int_bool_axiom
 (FORALL (x y) (IFF (EQ (eq_int_bool x y) |@true|) (EQ x y))))

(BG_PUSH
 ;; Why axiom neq_int_bool_axiom
 (FORALL (x y) (IFF (EQ (neq_int_bool x y) |@true|) (NEQ x y))))

(BG_PUSH
 ;; Why axiom lt_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (lt_real_bool x y) |@true|) (EQ (lt_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom le_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (le_real_bool x y) |@true|) (EQ (le_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom gt_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (gt_real_bool x y) |@true|) (EQ (gt_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom ge_real_bool_axiom
 (FORALL (x y)
 (IFF (EQ (ge_real_bool x y) |@true|) (EQ (ge_real x y) |@true|))))

(BG_PUSH
 ;; Why axiom eq_real_bool_axiom
 (FORALL (x y) (IFF (EQ (eq_real_bool x y) |@true|) (EQ x y))))

(BG_PUSH
 ;; Why axiom neq_real_bool_axiom
 (FORALL (x y) (IFF (EQ (neq_real_bool x y) |@true|) (NEQ x y))))

(DEFPRED (zwf_zero a b) (AND (<= 0 b) (< a b)))

(BG_PUSH
 ;; Why axiom access_update
 (FORALL (a i v) (EQ (access (update a i v) i) v)))

(BG_PUSH
 ;; Why axiom access_update_neq
 (FORALL (a i j v)
 (IMPLIES (NEQ i j) (EQ (access (update a i v) j) (access a j))))

 (FORALL (i j)
 (IMPLIES (NEQ i j)
 (FORALL (a v) (EQ (access (update a i v) j) (access a j))))))

(DEFPRED (sorted_array t i j)
  (FORALL (k1 k2)
  (IMPLIES (AND (AND (<= i k1) (<= k1 k2)) (<= k2 j))
  (<= (access t k1) (access t k2)))))

(DEFPRED (exchange a1 a2 i j)
  (AND (EQ (array_length a1) (array_length a2))
  (AND (EQ (access a1 i) (access a2 j))
  (AND (EQ (access a2 i) (access a1 j))
  (FORALL (k)
  (IMPLIES (AND (NEQ k i) (NEQ k j)) (EQ (access a1 k) (access a2 k))))))))

(BG_PUSH
 ;; Why axiom permut_refl
 (FORALL (t l u) (EQ (permut t t l u) |@true|)))

(BG_PUSH
 ;; Why axiom permut_sym
 (FORALL (t1 t2 l u)
 (IMPLIES (EQ (permut t1 t2 l u) |@true|) (EQ (permut t2 t1 l u) |@true|))))

(BG_PUSH
 ;; Why axiom permut_trans
 (FORALL (t1 t2 t3 l u)
 (IMPLIES (EQ (permut t1 t2 l u) |@true|)
 (IMPLIES (EQ (permut t2 t3 l u) |@true|) (EQ (permut t1 t3 l u) |@true|))))

 (FORALL (t1 t2 l u)
 (IMPLIES (EQ (permut t1 t2 l u) |@true|)
 (FORALL (t3)
 (IMPLIES (EQ (permut t2 t3 l u) |@true|) (EQ (permut t1 t3 l u) |@true|))))))

(BG_PUSH
 ;; Why axiom permut_exchange
 (FORALL (a1 a2 l u i j)
 (IMPLIES (AND (<= l i) (<= i u))
 (IMPLIES (AND (<= l j) (<= j u))
 (IMPLIES (exchange a1 a2 i j) (EQ (permut a1 a2 l u) |@true|)))))

 (FORALL (l u i)
 (IMPLIES (AND (<= l i) (<= i u))
 (FORALL (j)
 (IMPLIES (AND (<= l j) (<= j u))
 (FORALL (a1 a2)
 (IMPLIES (exchange a1 a2 i j) (EQ (permut a1 a2 l u) |@true|))))))))

(BG_PUSH
 ;; Why axiom exchange_upd
 (FORALL (a i j)
 (exchange a (update (update a i (access a j)) j (access a i)) i j)))

(BG_PUSH
 ;; Why axiom permut_weakening
 (FORALL (a1 a2 l1 r1 l2 r2)
 (IMPLIES (AND (AND (<= l1 l2) (<= l2 r2)) (<= r2 r1))
 (IMPLIES (EQ (permut a1 a2 l2 r2) |@true|)
 (EQ (permut a1 a2 l1 r1) |@true|))))

 (FORALL (l1 r1 l2 r2)
 (IMPLIES (AND (AND (<= l1 l2) (<= l2 r2)) (<= r2 r1))
 (FORALL (a2 a1)
 (IMPLIES (EQ (permut a1 a2 l2 r2) |@true|)
 (EQ (permut a1 a2 l1 r1) |@true|))))))

(BG_PUSH
 ;; Why axiom permut_eq
 (FORALL (a1 a2 l u)
 (IMPLIES (<= l u)
 (IMPLIES (EQ (permut a1 a2 l u) |@true|)
 (FORALL (i) (IMPLIES (OR (< i l) (< u i)) (EQ (access a2 i) (access a1 i)))))))

 (FORALL (l u)
 (IMPLIES (<= l u)
 (FORALL (a2 a1)
 (IMPLIES (EQ (permut a1 a2 l u) |@true|)
 (FORALL (i) (IMPLIES (OR (< i l) (< u i)) (EQ (access a2 i) (access a1 i)))))))))

(DEFPRED (permutation a1 a2)
  (EQ (permut a1 a2 0 (- (array_length a1) 1)) |@true|))

(BG_PUSH
 ;; Why axiom array_length_update
 (FORALL (a i v) (EQ (array_length (update a i v)) (array_length a))))

(BG_PUSH
 ;; Why axiom permut_array_length
 (FORALL (a1 a2 l u)
 (IMPLIES (EQ (permut a1 a2 l u) |@true|)
 (EQ (array_length a1) (array_length a2)))))

(DEFPRED (is_color c) (OR (EQ c blue) (OR (EQ c white) (EQ c red))))

(BG_PUSH
 ;; Why axiom acc_upd_eq
 (FORALL (a i c) (EQ (acc (upd a i c) i) c)))

(BG_PUSH
 ;; Why axiom acc_upd_neq
 (FORALL (a i j c) (IMPLIES (NEQ i j) (EQ (acc (upd a j c) i) (acc a i))))

 (FORALL (i j)
 (IMPLIES (NEQ i j) (FORALL (a c) (EQ (acc (upd a j c) i) (acc a i))))))

(BG_PUSH
 ;; Why axiom length_update
 (FORALL (a i c) (EQ (length (upd a i c)) (length a))))

(DEFPRED (monochrome t i j c)
  (FORALL (k) (IMPLIES (AND (<= i k) (< k j)) (EQ (acc t k) c))))

(BG_PUSH
 ;; Why axiom permut_refl
 (FORALL (t l r) (EQ (Permutation t t l r) |@true|)))

(BG_PUSH
 ;; Why axiom permut_swap
 (FORALL (t l r i j)
 (IMPLIES (AND (<= l i) (<= i r))
 (IMPLIES (AND (<= l j) (<= j r))
 (EQ (Permutation t (upd (upd t i (acc t j)) j (acc t i)) l r) |@true|))))

 (FORALL (l r i)
 (IMPLIES (AND (<= l i) (<= i r))
 (FORALL (j)
 (IMPLIES (AND (<= l j) (<= j r))
 (FORALL (t)
 (EQ (Permutation t (upd (upd t i (acc t j)) j (acc t i)) l r) |@true|)))))))

(BG_PUSH
 ;; Why axiom permut_sym
 (FORALL (t1 t2 l r)
 (IMPLIES (EQ (Permutation t1 t2 l r) |@true|)
 (EQ (Permutation t2 t1 l r) |@true|))))

(BG_PUSH
 ;; Why axiom permut_trans
 (FORALL (t1 t2 t3 l r)
 (IMPLIES (EQ (Permutation t1 t2 l r) |@true|)
 (IMPLIES (EQ (Permutation t2 t3 l r) |@true|)
 (EQ (Permutation t1 t3 l r) |@true|))))

 (FORALL (t1 t2 l r)
 (IMPLIES (EQ (Permutation t1 t2 l r) |@true|)
 (FORALL (t3)
 (IMPLIES (EQ (Permutation t2 t3 l r) |@true|)
 (EQ (Permutation t1 t3 l r) |@true|))))))

;; swap_po_1, File "flag_ax.mlw", line 61, characters 10-17
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (length t)))
         (AND (<= 0 j) (< j (length t))))
(<= 0 i)))))

;; swap_po_2, File "flag_ax.mlw", line 61, characters 10-17
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (length t)))
         (AND (<= 0 j) (< j (length t))))
(< i (length t))))))

;; swap_po_3, File "flag_ax.mlw", line 62, characters 11-18
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (length t)))
         (AND (<= 0 j) (< j (length t))))
(IMPLIES (AND (<= 0 i) (< i (length t)))
(FORALL (result) (IMPLIES (EQ result (acc t i)) (<= 0 j))))))))

;; swap_po_4, File "flag_ax.mlw", line 62, characters 11-18
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (length t)))
         (AND (<= 0 j) (< j (length t))))
(IMPLIES (AND (<= 0 i) (< i (length t)))
(FORALL (result) (IMPLIES (EQ result (acc t i)) (< j (length t)))))))))

;; swap_po_5, File "flag_ax.mlw", line 63, characters 2-11
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (length t)))
         (AND (<= 0 j) (< j (length t))))
(IMPLIES (AND (<= 0 i) (< i (length t)))
(FORALL (result)
(IMPLIES (EQ result (acc t i))
(IMPLIES (AND (<= 0 j) (< j (length t)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t j))
(IMPLIES (AND (<= 0 i) (< i (length t)))
(FORALL (t0) (IMPLIES (EQ t0 (upd t i result0)) (< j (length t0)))))))))))))))

;; swap_po_6, File "flag_ax.mlw", line 64, characters 4-46
(FORALL (i)
(FORALL (j)
(FORALL (t)
(IMPLIES (AND (AND (<= 0 i) (< i (length t)))
         (AND (<= 0 j) (< j (length t))))
(IMPLIES (AND (<= 0 i) (< i (length t)))
(FORALL (result)
(IMPLIES (EQ result (acc t i))
(IMPLIES (AND (<= 0 j) (< j (length t)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t j))
(IMPLIES (AND (<= 0 i) (< i (length t)))
(FORALL (t0)
(IMPLIES (EQ t0 (upd t i result0))
(IMPLIES (AND (<= 0 j) (< j (length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (upd t0 j result))
(EQ t1 (upd (upd t i (acc t j)) j (acc t i)))))))))))))))))))

;; dutch_flag_po_1, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(<= 0 0))))

;; dutch_flag_po_2, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(<= 0 0))))

;; dutch_flag_po_3, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(<= n n))))

;; dutch_flag_po_4, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(monochrome t 0 0 blue))))

;; dutch_flag_po_5, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(monochrome t 0 0 white))))

;; dutch_flag_po_6, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(monochrome t n n red))))

;; dutch_flag_po_7, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(EQ (length t) n))))

;; dutch_flag_po_8, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k)))))))

;; dutch_flag_po_9, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(EQ (Permutation t t 0 (- n 1)) |@true|))))

;; dutch_flag_po_10, File "flag_ax.mlw", line 82, characters 18-26
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r) (<= 0 i))))))))))

;; dutch_flag_po_11, File "flag_ax.mlw", line 82, characters 18-26
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r) (< i (length t0)))))))))))

;; dutch_flag_po_12, File "flag_ax.mlw", line 83, characters 7-19
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i)) (IMPLIES (EQ result blue) (<= 0 b))))))))))))))

;; dutch_flag_po_13, File "flag_ax.mlw", line 83, characters 7-19
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i)) (IMPLIES (EQ result blue) (< b (length t0)))))))))))))))

;; dutch_flag_po_14, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (EQ result blue)
(IMPLIES (AND (AND (<= 0 b) (< b (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 b (acc t0 i)) i (acc t0 b)))
(FORALL (b0)
(IMPLIES (EQ b0 (+ b 1)) (FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (<= 0 b0)))))))))))))))))))))

;; dutch_flag_po_15, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (EQ result blue)
(IMPLIES (AND (AND (<= 0 b) (< b (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 b (acc t0 i)) i (acc t0 b)))
(FORALL (b0)
(IMPLIES (EQ b0 (+ b 1)) (FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (<= b0 i0)))))))))))))))))))))

;; dutch_flag_po_16, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (EQ result blue)
(IMPLIES (AND (AND (<= 0 b) (< b (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 b (acc t0 i)) i (acc t0 b)))
(FORALL (b0)
(IMPLIES (EQ b0 (+ b 1)) (FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (<= i0 r)))))))))))))))))))))

;; dutch_flag_po_17, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (EQ result blue)
(IMPLIES (AND (AND (<= 0 b) (< b (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 b (acc t0 i)) i (acc t0 b)))
(FORALL (b0)
(IMPLIES (EQ b0 (+ b 1)) (FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (<= r n)))))))))))))))))))))

;; dutch_flag_po_18, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (EQ result blue)
(IMPLIES (AND (AND (<= 0 b) (< b (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 b (acc t0 i)) i (acc t0 b)))
(FORALL (b0)
(IMPLIES (EQ b0 (+ b 1))
(FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (monochrome t1 0 b0 blue)))))))))))))))))))))

;; dutch_flag_po_19, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (EQ result blue)
(IMPLIES (AND (AND (<= 0 b) (< b (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 b (acc t0 i)) i (acc t0 b)))
(FORALL (b0)
(IMPLIES (EQ b0 (+ b 1))
(FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (monochrome t1 b0 i0 white)))))))))))))))))))))

;; dutch_flag_po_20, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (EQ result blue)
(IMPLIES (AND (AND (<= 0 b) (< b (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 b (acc t0 i)) i (acc t0 b)))
(FORALL (b0)
(IMPLIES (EQ b0 (+ b 1))
(FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (monochrome t1 r n red)))))))))))))))))))))

;; dutch_flag_po_21, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (EQ result blue)
(IMPLIES (AND (AND (<= 0 b) (< b (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 b (acc t0 i)) i (acc t0 b)))
(FORALL (b0)
(IMPLIES (EQ b0 (+ b 1))
(FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (EQ (length t1) n)))))))))))))))))))))

;; dutch_flag_po_22, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (EQ result blue)
(IMPLIES (AND (AND (<= 0 b) (< b (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 b (acc t0 i)) i (acc t0 b)))
(FORALL (b0)
(IMPLIES (EQ b0 (+ b 1))
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1))
(FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t1 k))))))))))))))))))))))))

;; dutch_flag_po_23, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (EQ result blue)
(IMPLIES (AND (AND (<= 0 b) (< b (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 b (acc t0 i)) i (acc t0 b)))
(FORALL (b0)
(IMPLIES (EQ b0 (+ b 1))
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1)) (EQ (Permutation t1 t 0 (- n 1)) |@true|)))))))))))))))))))))

;; dutch_flag_po_24, File "flag_ax.mlw", line 81, characters 15-20
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (EQ result blue)
(IMPLIES (AND (AND (<= 0 b) (< b (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 b (acc t0 i)) i (acc t0 b)))
(FORALL (b0)
(IMPLIES (EQ b0 (+ b 1))
(FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (<= 0 (- r i))))))))))))))))))))))

;; dutch_flag_po_25, File "flag_ax.mlw", line 81, characters 15-20
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (EQ result blue)
(IMPLIES (AND (AND (<= 0 b) (< b (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 b (acc t0 i)) i (acc t0 b)))
(FORALL (b0)
(IMPLIES (EQ b0 (+ b 1))
(FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (< (- r i0) (- r i))))))))))))))))))))))

;; dutch_flag_po_26, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (EQ result0 white) (FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (<= 0 b))))))))))))))))))))

;; dutch_flag_po_27, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (EQ result0 white)
(FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (<= b i0))))))))))))))))))))

;; dutch_flag_po_28, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (EQ result0 white)
(FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (<= i0 r))))))))))))))))))))

;; dutch_flag_po_29, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (EQ result0 white) (FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (<= r n))))))))))))))))))))

;; dutch_flag_po_30, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (EQ result0 white)
(FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (monochrome t0 0 b blue))))))))))))))))))))

;; dutch_flag_po_31, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (EQ result0 white)
(FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (monochrome t0 b i0 white))))))))))))))))))))

;; dutch_flag_po_32, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (EQ result0 white)
(FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (monochrome t0 r n red))))))))))))))))))))

;; dutch_flag_po_33, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (EQ result0 white)
(FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (EQ (length t0) n))))))))))))))))))))

;; dutch_flag_po_34, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (EQ result0 white)
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1))
(FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k)))))))))))))))))))))))

;; dutch_flag_po_35, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (EQ result0 white)
(FORALL (i0)
(IMPLIES (EQ i0 (+ i 1)) (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))))))))))))))

;; dutch_flag_po_36, File "flag_ax.mlw", line 81, characters 15-20
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (EQ result0 white)
(FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (<= 0 (- r i)))))))))))))))))))))

;; dutch_flag_po_37, File "flag_ax.mlw", line 81, characters 15-20
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (EQ result0 white)
(FORALL (i0) (IMPLIES (EQ i0 (+ i 1)) (< (- r i0) (- r i)))))))))))))))))))))

;; dutch_flag_po_38, File "flag_ax.mlw", line 90, characters 7-19
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0) (IMPLIES (EQ r0 (- r 1)) (<= 0 r0))))))))))))))))))))

;; dutch_flag_po_39, File "flag_ax.mlw", line 90, characters 7-19
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0) (IMPLIES (EQ r0 (- r 1)) (< r0 (length t0)))))))))))))))))))))

;; dutch_flag_po_40, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1))
(IMPLIES (AND (AND (<= 0 r0) (< r0 (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 r0 (acc t0 i)) i (acc t0 r0))) (<= 0 b)))))))))))))))))))))))

;; dutch_flag_po_41, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1))
(IMPLIES (AND (AND (<= 0 r0) (< r0 (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 r0 (acc t0 i)) i (acc t0 r0))) (<= b i)))))))))))))))))))))))

;; dutch_flag_po_42, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1))
(IMPLIES (AND (AND (<= 0 r0) (< r0 (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 r0 (acc t0 i)) i (acc t0 r0))) (<= i r0)))))))))))))))))))))))

;; dutch_flag_po_43, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1))
(IMPLIES (AND (AND (<= 0 r0) (< r0 (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 r0 (acc t0 i)) i (acc t0 r0))) (<= r0 n)))))))))))))))))))))))

;; dutch_flag_po_44, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1))
(IMPLIES (AND (AND (<= 0 r0) (< r0 (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 r0 (acc t0 i)) i (acc t0 r0)))
(monochrome t1 0 b blue)))))))))))))))))))))))

;; dutch_flag_po_45, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1))
(IMPLIES (AND (AND (<= 0 r0) (< r0 (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 r0 (acc t0 i)) i (acc t0 r0)))
(monochrome t1 b i white)))))))))))))))))))))))

;; dutch_flag_po_46, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1))
(IMPLIES (AND (AND (<= 0 r0) (< r0 (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 r0 (acc t0 i)) i (acc t0 r0)))
(monochrome t1 r0 n red)))))))))))))))))))))))

;; dutch_flag_po_47, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1))
(IMPLIES (AND (AND (<= 0 r0) (< r0 (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 r0 (acc t0 i)) i (acc t0 r0)))
(EQ (length t1) n)))))))))))))))))))))))

;; dutch_flag_po_48, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1))
(IMPLIES (AND (AND (<= 0 r0) (< r0 (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 r0 (acc t0 i)) i (acc t0 r0)))
(FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t1 k))))))))))))))))))))))))))

;; dutch_flag_po_49, File "flag_ax.mlw", line 74, characters 17-290
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1))
(IMPLIES (AND (AND (<= 0 r0) (< r0 (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 r0 (acc t0 i)) i (acc t0 r0)))
(EQ (Permutation t1 t 0 (- n 1)) |@true|)))))))))))))))))))))))

;; dutch_flag_po_50, File "flag_ax.mlw", line 81, characters 15-20
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1))
(IMPLIES (AND (AND (<= 0 r0) (< r0 (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 r0 (acc t0 i)) i (acc t0 r0))) (<= 0 (- r i))))))))))))))))))))))))

;; dutch_flag_po_51, File "flag_ax.mlw", line 81, characters 15-20
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (< i r)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result)
(IMPLIES (EQ result (acc t0 i))
(IMPLIES (NEQ result blue)
(IMPLIES (AND (<= 0 i) (< i (length t0)))
(FORALL (result0)
(IMPLIES (EQ result0 (acc t0 i))
(IMPLIES (NEQ result0 white)
(FORALL (r0)
(IMPLIES (EQ r0 (- r 1))
(IMPLIES (AND (AND (<= 0 r0) (< r0 (length t0)))
         (AND (<= 0 i) (< i (length t0))))
(FORALL (t1)
(IMPLIES (EQ t1 (upd (upd t0 r0 (acc t0 i)) i (acc t0 r0)))
(< (- r0 i) (- r i))))))))))))))))))))))))

;; dutch_flag_po_52, File "flag_ax.mlw", line 93, characters 4-163
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (>= i r)
(EXISTS (b)
(EXISTS (r)
(AND (monochrome t0 0 b blue)
(AND (monochrome t0 b r white) (monochrome t0 r n red))))))))))))))

;; dutch_flag_po_53, File "flag_ax.mlw", line 93, characters 4-163
(FORALL (n)
(FORALL (t)
(IMPLIES (AND (<= 0 n)
         (AND (EQ (length t) n)
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t k))))))
(FORALL (b)
(FORALL (i)
(FORALL (r)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 b) (<= b i))
         (AND (AND (<= i r) (<= r n))
         (AND (monochrome t0 0 b blue)
         (AND (monochrome t0 b i white)
         (AND (monochrome t0 r n red)
         (AND (EQ (length t0) n)
         (AND
         (FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (is_color (acc t0 k))))
         (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))
(IMPLIES (>= i r) (EQ (Permutation t0 t 0 (- n 1)) |@true|))))))))))

