
UNIT: TYPE;
tt: UNIT;
sqrt_real: [REAL -> REAL];
int_of_real: [REAL -> INT];
mod_int: [[INT, INT] -> INT];

%%%% DO NOT EDIT BELOW THIS LINE

%% Why logic sorted_array
sorted_array: [[ARRAY INT OF INT, INT, INT] -> BOOLEAN];

%% Why logic exchange
exchange: [[ARRAY INT OF INT, ARRAY INT OF INT, INT, INT] -> BOOLEAN];

%% Why logic sub_permut
sub_permut: [[INT, INT, ARRAY INT OF INT, ARRAY INT OF INT] -> BOOLEAN];

%% Why logic permut
permut: [[ARRAY INT OF INT, ARRAY INT OF INT] -> BOOLEAN];

%% Why logic array_le
array_le: [[ARRAY INT OF INT, INT, INT, INT] -> BOOLEAN];

%% Why logic array_ge
array_ge: [[ARRAY INT OF INT, INT, INT, INT] -> BOOLEAN];

%% Why logic array_length
array_length_INT: [ARRAY INT OF INT -> INT];

%% Why logic store
store_INT: [[ARRAY INT OF INT, INT, INT] -> UNIT];

%% Why axiom array_length_store
ASSERT (FORALL (t:ARRAY INT OF INT):
       (FORALL (i:INT):
       (FORALL (v:INT):
       (array_length_INT((t WITH [i] := v)) = array_length_INT(t)))));

%% Why logic access
access_INT: [[ARRAY INT OF INT, INT] -> INT];

%% Why axiom exchange_def
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT):
       (FORALL (i:INT):
       (FORALL (j:INT):
       (exchange(t1, t2, i, j) <=>
       ((array_length_INT(t1) = array_length_INT(t2)) AND
       ((t1[i] = t2[j]) AND
       ((t2[i] = t1[j]) AND
       (FORALL (k:INT): (((k /= i) AND (k /= j)) => (t1[k] = t2[k])))))))))));

%% Why axiom permut_refl
ASSERT (FORALL (t:ARRAY INT OF INT): permut(t, t));

%% Why axiom permut_sym
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT): (permut(t1, t2) => permut(t2, t1))));

%% Why axiom permut_trans
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT):
       (FORALL (t3:ARRAY INT OF INT):
       ((permut(t1, t2) AND permut(t2, t3)) => permut(t1, t3)))));

%% Why axiom permut_exchange
ASSERT (FORALL (t:ARRAY INT OF INT):
       (FORALL (i:INT):
       (FORALL (j:INT): permut(t, ((t WITH [i] := t[j]) WITH [j] := t[i])))));

%% Why axiom permut_array_length
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT):
       (permut(t1, t2) => (array_length_INT(t1) = array_length_INT(t2)))));

%% Why axiom sub_permut_refl
ASSERT (FORALL (t:ARRAY INT OF INT):
       (FORALL (g:INT): (FORALL (d:INT): sub_permut(g, d, t, t))));

%% Why axiom sub_permut_sym
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT):
       (FORALL (g:INT):
       (FORALL (d:INT):
       (sub_permut(g, d, t1, t2) => sub_permut(g, d, t2, t1))))));

%% Why axiom sub_permut_trans
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT):
       (FORALL (t3:ARRAY INT OF INT):
       (FORALL (g:INT):
       (FORALL (d:INT):
       (sub_permut(g, d, t1, t2) =>
       (sub_permut(g, d, t2, t3) => sub_permut(g, d, t1, t3))))))));

%% Why axiom sub_permut_exchange_1
ASSERT (FORALL (t:ARRAY INT OF INT):
       (FORALL (g:INT):
       (FORALL (d:INT):
       (FORALL (i:INT):
       (FORALL (j:INT):
       (((g <= i) AND ((i <= d) AND ((g <= j) AND (j <= d)))) =>
       sub_permut(g, d, t, ((t WITH [i] := t[j]) WITH [j] := t[i]))))))));

%% Why axiom sub_permut_exchange_2
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT):
       (FORALL (g:INT):
       (FORALL (d:INT):
       (FORALL (i:INT):
       (FORALL (j:INT):
       (((g <= i) AND
        ((i <= d) AND ((g <= j) AND ((j <= d) AND exchange(t1, t2, i, j))))) =>
       sub_permut(g, d, t1, t2))))))));

%% Why axiom sub_permut_permut
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT):
       (FORALL (g:INT):
       (FORALL (d:INT): (sub_permut(g, d, t1, t2) => permut(t1, t2))))));

%% Why axiom sub_permut_array_length
ASSERT (FORALL (t1:ARRAY INT OF INT):
       (FORALL (t2:ARRAY INT OF INT):
       (FORALL (g:INT):
       (FORALL (d:INT):
       (sub_permut(g, d, t1, t2) =>
       (array_length_INT(t1) = array_length_INT(t2)))))));

%% Why axiom sorted_array_def
ASSERT (FORALL (t:ARRAY INT OF INT):
       (FORALL (i:INT):
       (FORALL (j:INT):
       (sorted_array(t, i, j) <=>
       (FORALL (k:INT): (((i <= k) AND (k < j)) => (t[k] <= t[(k + 1)])))))));

%% selection_po_1, Why obligation from file "selection.mlw", characters 804-819
QUERY (FORALL (t:(ARRAY INT OF INT)):
      ((array_length_INT(t) >= 1) =>
      (FORALL (i:INT):
      ((i = 0) =>
      (FORALL (Variant1:INT):
      (FORALL (i1:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = (array_length_INT(t0) - i1)) =>
      ((((0 <= i1) AND (i1 <= (array_length_INT(t0) - 1))) AND
       (sorted_array(t0, 0, (i1 - 1)) AND
       (permut(t0, t) AND
       (FORALL (k:INT):
       (FORALL (l:INT):
       (((0 <= k) AND (k < i1)) =>
       (((i1 <= l) AND (l < array_length_INT(t0))) => (t0[k] <= t0[l])))))))) =>
      ((i1 < (array_length_INT(t0) - 1)) =>
      (FORALL (min:INT):
      ((min = i1) =>
      (FORALL (j:INT):
      ((j = (i1 + 1)) =>
      (FORALL (Variant3:INT):
      (FORALL (j1:INT):
      (FORALL (min1:INT):
      ((Variant3 = (array_length_INT(t0) - j1)) =>
      (((((i1 + 1) <= j1) AND (j1 <= array_length_INT(t0))) AND
       (((i1 <= min1) AND (min1 < array_length_INT(t0))) AND
       (FORALL (k:INT): (((i1 <= k) AND (k < j1)) => (t0[min1] <= t0[k]))))) =>
      ((j1 < array_length_INT(t0)) =>
      ((0 <= j1) AND (j1 < array_length_INT(t0)))))))))))))))))))))));

%% selection_po_2, Why obligation from file "selection.mlw", characters 804-819
QUERY (FORALL (t:(ARRAY INT OF INT)):
      ((array_length_INT(t) >= 1) =>
      (FORALL (i:INT):
      ((i = 0) =>
      (FORALL (Variant1:INT):
      (FORALL (i1:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = (array_length_INT(t0) - i1)) =>
      ((((0 <= i1) AND (i1 <= (array_length_INT(t0) - 1))) AND
       (sorted_array(t0, 0, (i1 - 1)) AND
       (permut(t0, t) AND
       (FORALL (k:INT):
       (FORALL (l:INT):
       (((0 <= k) AND (k < i1)) =>
       (((i1 <= l) AND (l < array_length_INT(t0))) => (t0[k] <= t0[l])))))))) =>
      ((i1 < (array_length_INT(t0) - 1)) =>
      (FORALL (min:INT):
      ((min = i1) =>
      (FORALL (j:INT):
      ((j = (i1 + 1)) =>
      (FORALL (Variant3:INT):
      (FORALL (j1:INT):
      (FORALL (min1:INT):
      ((Variant3 = (array_length_INT(t0) - j1)) =>
      (((((i1 + 1) <= j1) AND (j1 <= array_length_INT(t0))) AND
       (((i1 <= min1) AND (min1 < array_length_INT(t0))) AND
       (FORALL (k:INT): (((i1 <= k) AND (k < j1)) => (t0[min1] <= t0[k]))))) =>
      ((j1 < array_length_INT(t0)) =>
      (((0 <= j1) AND (j1 < array_length_INT(t0))) =>
      ((0 <= min1) AND (min1 < array_length_INT(t0))))))))))))))))))))))));

%% selection_po_3, Why obligation from file "selection.mlw", characters 825-834
QUERY (FORALL (t:(ARRAY INT OF INT)):
      ((array_length_INT(t) >= 1) =>
      (FORALL (i:INT):
      ((i = 0) =>
      (FORALL (Variant1:INT):
      (FORALL (i1:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = (array_length_INT(t0) - i1)) =>
      ((((0 <= i1) AND (i1 <= (array_length_INT(t0) - 1))) AND
       (sorted_array(t0, 0, (i1 - 1)) AND
       (permut(t0, t) AND
       (FORALL (k:INT):
       (FORALL (l:INT):
       (((0 <= k) AND (k < i1)) =>
       (((i1 <= l) AND (l < array_length_INT(t0))) => (t0[k] <= t0[l])))))))) =>
      ((i1 < (array_length_INT(t0) - 1)) =>
      (FORALL (min:INT):
      ((min = i1) =>
      (FORALL (j:INT):
      ((j = (i1 + 1)) =>
      (FORALL (Variant3:INT):
      (FORALL (j1:INT):
      (FORALL (min1:INT):
      ((Variant3 = (array_length_INT(t0) - j1)) =>
      (((((i1 + 1) <= j1) AND (j1 <= array_length_INT(t0))) AND
       (((i1 <= min1) AND (min1 < array_length_INT(t0))) AND
       (FORALL (k:INT): (((i1 <= k) AND (k < j1)) => (t0[min1] <= t0[k]))))) =>
      ((j1 < array_length_INT(t0)) =>
      (((0 <= j1) AND (j1 < array_length_INT(t0))) =>
      (((0 <= min1) AND (min1 < array_length_INT(t0))) =>
      ((t0[j1] < t0[min1]) =>
      (FORALL (min2:INT):
      ((min2 = j1) =>
      (FORALL (j:INT):
      ((j = (j1 + 1)) =>
      (((((i1 + 1) <= j) AND (j <= array_length_INT(t0))) AND
       (((i1 <= min2) AND (min2 < array_length_INT(t0))) AND
       (FORALL (k:INT): (((i1 <= k) AND (k < j)) => (t0[min2] <= t0[k]))))) AND
      ((0 <= (array_length_INT(t0) - j1)) AND
      ((array_length_INT(t0) - j) < (array_length_INT(t0) - j1)))))))))))))))))))))))))))))));

%% selection_po_4, Why obligation from file "selection.mlw", characters 834-834
QUERY (FORALL (t:(ARRAY INT OF INT)):
      ((array_length_INT(t) >= 1) =>
      (FORALL (i:INT):
      ((i = 0) =>
      (FORALL (Variant1:INT):
      (FORALL (i1:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = (array_length_INT(t0) - i1)) =>
      ((((0 <= i1) AND (i1 <= (array_length_INT(t0) - 1))) AND
       (sorted_array(t0, 0, (i1 - 1)) AND
       (permut(t0, t) AND
       (FORALL (k:INT):
       (FORALL (l:INT):
       (((0 <= k) AND (k < i1)) =>
       (((i1 <= l) AND (l < array_length_INT(t0))) => (t0[k] <= t0[l])))))))) =>
      ((i1 < (array_length_INT(t0) - 1)) =>
      (FORALL (min:INT):
      ((min = i1) =>
      (FORALL (j:INT):
      ((j = (i1 + 1)) =>
      (FORALL (Variant3:INT):
      (FORALL (j1:INT):
      (FORALL (min1:INT):
      ((Variant3 = (array_length_INT(t0) - j1)) =>
      (((((i1 + 1) <= j1) AND (j1 <= array_length_INT(t0))) AND
       (((i1 <= min1) AND (min1 < array_length_INT(t0))) AND
       (FORALL (k:INT): (((i1 <= k) AND (k < j1)) => (t0[min1] <= t0[k]))))) =>
      ((j1 < array_length_INT(t0)) =>
      (((0 <= j1) AND (j1 < array_length_INT(t0))) =>
      (((0 <= min1) AND (min1 < array_length_INT(t0))) =>
      ((t0[j1] >= t0[min1]) =>
      (FORALL (result2:UNIT):
      ((result2 = tt) =>
      (FORALL (j:INT):
      ((j = (j1 + 1)) =>
      (((((i1 + 1) <= j) AND (j <= array_length_INT(t0))) AND
       (((i1 <= min1) AND (min1 < array_length_INT(t0))) AND
       (FORALL (k:INT): (((i1 <= k) AND (k < j)) => (t0[min1] <= t0[k]))))) AND
      ((0 <= (array_length_INT(t0) - j1)) AND
      ((array_length_INT(t0) - j) < (array_length_INT(t0) - j1)))))))))))))))))))))))))))))));

%% selection_po_5, Why obligation from file "selection.mlw", characters 573-856
QUERY (FORALL (t:(ARRAY INT OF INT)):
      ((array_length_INT(t) >= 1) =>
      (FORALL (i:INT):
      ((i = 0) =>
      (FORALL (Variant1:INT):
      (FORALL (i1:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = (array_length_INT(t0) - i1)) =>
      ((((0 <= i1) AND (i1 <= (array_length_INT(t0) - 1))) AND
       (sorted_array(t0, 0, (i1 - 1)) AND
       (permut(t0, t) AND
       (FORALL (k:INT):
       (FORALL (l:INT):
       (((0 <= k) AND (k < i1)) =>
       (((i1 <= l) AND (l < array_length_INT(t0))) => (t0[k] <= t0[l])))))))) =>
      ((i1 < (array_length_INT(t0) - 1)) =>
      (FORALL (min:INT):
      ((min = i1) =>
      (FORALL (j:INT):
      ((j = (i1 + 1)) =>
      (FORALL (Variant3:INT):
      (FORALL (j1:INT):
      (FORALL (min1:INT):
      ((Variant3 = (array_length_INT(t0) - j1)) =>
      (((((i1 + 1) <= j1) AND (j1 <= array_length_INT(t0))) AND
       (((i1 <= min1) AND (min1 < array_length_INT(t0))) AND
       (FORALL (k:INT): (((i1 <= k) AND (k < j1)) => (t0[min1] <= t0[k]))))) =>
      ((j1 >= array_length_INT(t0)) =>
      ((FORALL (result:INT):
       ((result = t0[min1]) =>
       ((FORALL (result0:INT):
        ((result0 = t0[i1]) =>
        (FORALL (result1:INT):
        ((result1 = min1) =>
        ((FORALL (t1:ARRAY INT OF INT):
         ((t1 = (t0 WITH [result1] := result0)) =>
         (FORALL (result0:INT):
         ((result0 = result) =>
         (FORALL (result:INT):
         ((result = i1) =>
         ((FORALL (t2:ARRAY INT OF INT):
          ((t2 = (t1 WITH [result] := result0)) =>
          (FORALL (i:INT):
          ((i = (i1 + 1)) =>
          ((((0 <= i) AND (i <= (array_length_INT(t2) - 1))) AND
           (sorted_array(t2, 0, (i - 1)) AND
           (permut(t2, t) AND
           (FORALL (k:INT):
           (FORALL (l:INT):
           (((0 <= k) AND (k < i)) =>
           (((i <= l) AND (l < array_length_INT(t2))) => (t2[k] <= t2[l])))))))) AND
          ((0 <= (array_length_INT(t0) - i1)) AND
          ((array_length_INT(t2) - i) < (array_length_INT(t0) - i1)))))))) AND
         ((0 <= result) AND (result < array_length_INT(t1)))))))))) AND
        ((0 <= result1) AND (result1 < array_length_INT(t0)))))))) AND
       ((0 <= i1) AND (i1 < array_length_INT(t0)))))) AND
      ((0 <= min1) AND (min1 < array_length_INT(t0))))))))))))))))))))))));

%% selection_po_6, Why obligation from file "selection.mlw", characters 619-755
QUERY (FORALL (t:(ARRAY INT OF INT)):
      ((array_length_INT(t) >= 1) =>
      (FORALL (i:INT):
      ((i = 0) =>
      (FORALL (Variant1:INT):
      (FORALL (i1:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = (array_length_INT(t0) - i1)) =>
      ((((0 <= i1) AND (i1 <= (array_length_INT(t0) - 1))) AND
       (sorted_array(t0, 0, (i1 - 1)) AND
       (permut(t0, t) AND
       (FORALL (k:INT):
       (FORALL (l:INT):
       (((0 <= k) AND (k < i1)) =>
       (((i1 <= l) AND (l < array_length_INT(t0))) => (t0[k] <= t0[l])))))))) =>
      ((i1 < (array_length_INT(t0) - 1)) =>
      (FORALL (min:INT):
      ((min = i1) =>
      (FORALL (j:INT):
      ((j = (i1 + 1)) =>
      ((((i1 + 1) <= j) AND (j <= array_length_INT(t0))) AND
      (((i1 <= min) AND (min < array_length_INT(t0))) AND
      (FORALL (k:INT): (((i1 <= k) AND (k < j)) => (t0[min] <= t0[k])))))))))))))))))));

%% selection_po_7, Why obligation from file "selection.mlw", characters 141-985
QUERY (FORALL (t:(ARRAY INT OF INT)):
      ((array_length_INT(t) >= 1) =>
      (FORALL (i:INT):
      ((i = 0) =>
      (FORALL (Variant1:INT):
      (FORALL (i1:INT):
      (FORALL (t0:(ARRAY INT OF INT)):
      ((Variant1 = (array_length_INT(t0) - i1)) =>
      ((((0 <= i1) AND (i1 <= (array_length_INT(t0) - 1))) AND
       (sorted_array(t0, 0, (i1 - 1)) AND
       (permut(t0, t) AND
       (FORALL (k:INT):
       (FORALL (l:INT):
       (((0 <= k) AND (k < i1)) =>
       (((i1 <= l) AND (l < array_length_INT(t0))) => (t0[k] <= t0[l])))))))) =>
      ((i1 >= (array_length_INT(t0) - 1)) =>
      (sorted_array(t0, 0, (array_length_INT(t0) - 1)) AND permut(t0, t))))))))))));

%% selection_po_8, Why obligation from file "selection.mlw", characters 232-424
QUERY (FORALL (t:(ARRAY INT OF INT)):
      ((array_length_INT(t) >= 1) =>
      (FORALL (i:INT):
      ((i = 0) =>
      (((0 <= i) AND (i <= (array_length_INT(t) - 1))) AND
      (sorted_array(t, 0, (i - 1)) AND
      (permut(t, t) AND
      (FORALL (k:INT):
      (FORALL (l:INT):
      (((0 <= k) AND (k < i)) =>
      (((i <= l) AND (l < array_length_INT(t))) => (t[k] <= t[l]))))))))))));

