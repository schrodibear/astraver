(BG_PUSH 
  ; array_length
  (FORALL (t i v) (EQ (array_length (store t i v)) (array_length t)))
  ; booleans
  (DISTINCT |@true| |@false|)
  ; exchange
  (FORALL (t1 t2 i j)
	  (IFF (EQ (exchange t1 t2 i j) |@true|)
	       (AND (EQ (array_length t1) (array_length t2))
		    (EQ (select t1 i) (select t2 j))
		    (EQ (select t1 j) (select t2 i))
		    (FORALL (k) (IMPLIES (AND (NEQ k i) (NEQ k j))
					 (EQ (select t1 k) (select t2 k)))))))
  (FORALL (t1 t2 i j)
	  (IMPLIES (EQ (exchange t1 t2 i j) |@true|)
		   (EQ (array_length t1) (array_length t2))))
  ; permut
  (FORALL (t) (EQ (permut t t) |@true|))
  (FORALL (t1 t2) (IMPLIES (EQ (permut t1 t2) |@true|)
			   (EQ (permut t2 t1) |@true|)))
  (FORALL (t1 t2 t3) (IMPLIES (AND (EQ (permut t1 t2) |@true|)
				   (EQ (permut t2 t3) |@true|))
			      (EQ (permut t1 t3) |@true|)))
  (FORALL 
   (t i j) 
   (EQ (permut t (store (store t i (select t j)) j (select t i))) |@true|))
  (FORALL (t1 t2)
	  (IMPLIES (EQ (permut t1 t2) |@true|)
		   (EQ (array_length t1) (array_length t2))))
  ; sub_permut
  (FORALL (t g d) (EQ (sub_permut g d t t) |@true|))
  (FORALL (t1 t2 g d) (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
			   (EQ (sub_permut g d t2 t1) |@true|)))
  (FORALL (t1 t2 t3 g d) (IMPLIES (AND (EQ (sub_permut g d t1 t2) |@true|)
				       (EQ (sub_permut g d t2 t3) |@true|))
				  (EQ (sub_permut g d t1 t3) |@true|)))
  (FORALL 
   (t g d i j) 
   (IMPLIES (AND (<= g i) (<= i d) (<= g j) (<= j d))
	    (EQ (sub_permut g d t 
			    (store (store t i (select t j)) j (select t i))) 
		|@true|)))
  (FORALL 
   (t1 t2 g d i j)
   (IMPLIES (AND (EQ (exchange t1 t2 i j) |@true|)
		 (<= g i) (<= i d) (<= g j) (<= j d))
	    (EQ (sub_permut g d t1 t2) |@true|)))
  (FORALL (t1 t2 i j) 
	  (IMPLIES (EQ (sub_permut i j t1 t2) |@true|)
		   (EQ (permut t1 t2) |@true|)))
  (FORALL (t1 t2 i j)
	  (IMPLIES (EQ (sub_permut i j t1 t2) |@true|)
		   (EQ (array_length t1) (array_length t2))))
  ; sorted_array
  (FORALL 
   (t i j) 
   (IFF (EQ (sorted_array t i j) |@true|)
	(IMPLIES (<= i j)
		 (FORALL (k) (IMPLIES (AND (<= i k) (< k j))
				      (<= (select t k) (select t (+ k 1))))))))
)

;; DO NOT EDIT BELOW THIS LINE

;; distance_po_1, Why obligation from file "distance.mlw", characters 1780-1796
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i0)
(IMPLIES (EQ i0 0)
(FORALL (Variant1)
(FORALL (i1)
(FORALL (t0)
(IMPLIES (EQ Variant1 (- (+ n2 1) i1))
(IMPLIES (AND (AND (<= 0 i1) (<= i1 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i1)) (EQ (select t0 j) (- n2 j))))))
(IMPLIES (<= i1 n2)
(FORALL (aux_2)
(IMPLIES (EQ aux_2 (- n2 i1))
(FORALL (aux_1)
(IMPLIES (EQ aux_1 i1) (AND (<= 0 aux_1) (< aux_1 (array_length t0)))))))))))))))))))

;; distance_po_2, Why obligation from file "distance.mlw", characters 1780-1796
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i0)
(IMPLIES (EQ i0 0)
(FORALL (Variant1)
(FORALL (i1)
(FORALL (t0)
(IMPLIES (EQ Variant1 (- (+ n2 1) i1))
(IMPLIES (AND (AND (<= 0 i1) (<= i1 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i1)) (EQ (select t0 j) (- n2 j))))))
(IMPLIES (<= i1 n2)
(FORALL (aux_2)
(IMPLIES (EQ aux_2 (- n2 i1))
(FORALL (aux_1)
(IMPLIES (EQ aux_1 i1)
(IMPLIES (AND (<= 0 aux_1) (< aux_1 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (store t0 aux_1 aux_2))
(FORALL (i)
(IMPLIES (EQ i (+ i1 1))
(AND
(AND (AND (<= 0 i) (<= i (+ n2 1)))
(AND (EQ (array_length t1) (+ n2 1))
(FORALL (j) (IMPLIES (AND (<= 0 j) (< j i)) (EQ (select t1 j) (- n2 j))))))
(AND (<= 0 (- (+ n2 1) i1)) (< (- (+ n2 1) i) (- (+ n2 1) i1)))))))))))))))))))))))))

;; distance_po_3, Why obligation from file "distance.mlw", characters 1607-1828
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i0)
(IMPLIES (EQ i0 0)
(FORALL (Variant1)
(FORALL (i1)
(FORALL (t0)
(IMPLIES (EQ Variant1 (- (+ n2 1) i1))
(IMPLIES (AND (AND (<= 0 i1) (<= i1 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i1)) (EQ (select t0 j) (- n2 j))))))
(IMPLIES (> i1 n2)
(FORALL (i)
(IMPLIES (EQ i (- n1 1))
(AND
(AND (AND (<= (- 0 1) i) (<= i (- n1 1)))
(AND (EQ (array_length t0) (+ n2 1))
(FORALL (j)
(IMPLIES (AND (<= 0 j) (<= j n2))
(EQ (min_suffix w1 w2 (+ i 1) j (select t0 j)) |@true|)))))
(FORALL (i)
(FORALL (t)
(IMPLIES
(AND (AND (<= (- 0 1) i) (<= i (- n1 1)))
(AND (EQ (array_length t) (+ n2 1))
(FORALL (j)
(IMPLIES (AND (<= 0 j) (<= j n2))
(EQ (min_suffix w1 w2 (+ i 1) j (select t j)) |@true|)))))
(AND
(IMPLIES (>= i 0)
(FORALL (old)
(IMPLIES (EQ old (select t n2))
(AND
(FORALL (result)
(IMPLIES (EQ result (+ (select t n2) 1))
(FORALL (result0)
(IMPLIES (EQ result0 n2)
(AND
(FORALL (t0)
(IMPLIES (EQ t0 (store t result0 result))
(FORALL (j)
(IMPLIES (EQ j (- n2 1))
(AND
(AND (AND (<= (- 0 1) j) (<= j (- n2 1)))
(AND (EQ (array_length t0) (+ n2 1))
(AND
(FORALL (k)
(IMPLIES (AND (< j k) (<= k n2))
(EQ (min_suffix w1 w2 i k (select t0 k)) |@true|)))
(AND
(FORALL (k)
(IMPLIES (AND (<= 0 k) (<= k j))
(EQ (min_suffix w1 w2 (+ i 1) k (select t0 k)) |@true|)))
(EQ (min_suffix w1 w2 (+ i 1) (+ j 1) old) |@true|)))))
(FORALL (j)
(FORALL (old)
(FORALL (t)
(IMPLIES
(AND (AND (<= (- 0 1) j) (<= j (- n2 1)))
(AND (EQ (array_length t) (+ n2 1))
(AND
(FORALL (k)
(IMPLIES (AND (< j k) (<= k n2))
(EQ (min_suffix w1 w2 i k (select t k)) |@true|)))
(AND
(FORALL (k)
(IMPLIES (AND (<= 0 k) (<= k j))
(EQ (min_suffix w1 w2 (+ i 1) k (select t k)) |@true|)))
(EQ (min_suffix w1 w2 (+ i 1) (+ j 1) old) |@true|)))))
(AND
(IMPLIES (>= j 0)
(FORALL (result)
(IMPLIES (EQ result old)
(FORALL (old)
(IMPLIES (EQ old (select t j))
(AND
(AND
(AND
(IMPLIES (EQ (select w1 i) (select w2 j))
(FORALL (result0)
(IMPLIES (EQ result0 result)
(FORALL (result)
(IMPLIES (EQ result j)
(AND
(FORALL (t0)
(IMPLIES (EQ t0 (store t result result0))
(FORALL (j0)
(IMPLIES (EQ j0 (- j 1))
(AND
(AND (AND (<= (- 0 1) j0) (<= j0 (- n2 1)))
(AND (EQ (array_length t0) (+ n2 1))
(AND
(FORALL (k)
(IMPLIES (AND (< j0 k) (<= k n2))
(EQ (min_suffix w1 w2 i k (select t0 k)) |@true|)))
(AND
(FORALL (k)
(IMPLIES (AND (<= 0 k) (<= k j0))
(EQ (min_suffix w1 w2 (+ i 1) k (select t0 k)) |@true|)))
(EQ (min_suffix w1 w2 (+ i 1) (+ j0 1) old) |@true|)))))
(AND (<= 0 (+ j 1)) (< (+ j0 1) (+ j 1))))))))
(AND (<= 0 result) (< result (array_length t)))))))))
(IMPLIES (NOT (EQ (select w1 i) (select w2 j)))
(AND
(AND
(FORALL (result)
(IMPLIES (EQ result (+ (Zmin (select t j) (select t (+ j 1))) 1))
(FORALL (result0)
(IMPLIES (EQ result0 j)
(AND
(FORALL (t0)
(IMPLIES (EQ t0 (store t result0 result))
(FORALL (j0)
(IMPLIES (EQ j0 (- j 1))
(AND
(AND (AND (<= (- 0 1) j0) (<= j0 (- n2 1)))
(AND (EQ (array_length t0) (+ n2 1))
(AND
(FORALL (k)
(IMPLIES (AND (< j0 k) (<= k n2))
(EQ (min_suffix w1 w2 i k (select t0 k)) |@true|)))
(AND
(FORALL (k)
(IMPLIES (AND (<= 0 k) (<= k j0))
(EQ (min_suffix w1 w2 (+ i 1) k (select t0 k)) |@true|)))
(EQ (min_suffix w1 w2 (+ i 1) (+ j0 1) old) |@true|)))))
(AND (<= 0 (+ j 1)) (< (+ j0 1) (+ j 1))))))))
(AND (<= 0 result0) (< result0 (array_length t))))))))
(AND (<= 0 (+ j 1)) (< (+ j 1) (array_length t))))
(AND (<= 0 j) (< j (array_length t))))))
(AND (<= 0 i) (< i (array_length w1))))
(AND (<= 0 j) (< j (array_length w2)))))))))
(IMPLIES (< j 0)
(FORALL (i0)
(IMPLIES (EQ i0 (- i 1))
(AND
(AND (AND (<= (- 0 1) i0) (<= i0 (- n1 1)))
(AND (EQ (array_length t) (+ n2 1))
(FORALL (j)
(IMPLIES (AND (<= 0 j) (<= j n2))
(EQ (min_suffix w1 w2 (+ i0 1) j (select t j)) |@true|)))))
(AND (<= 0 (+ i 1)) (< (+ i0 1) (+ i 1)))))))))))))))))
(AND (<= 0 result0) (< result0 (array_length t))))))))
(AND (<= 0 n2) (< n2 (array_length t)))))))
(IMPLIES (< i 0)
(AND
(FORALL (result)
(IMPLIES (EQ result (select t 0))
(EQ (min_dist (word_of_array n1 w1) (word_of_array n2 w2) result) |@true|)))
(AND (<= 0 0) (< 0 (array_length t))))))))))))))))))))))))

;; distance_po_4, Why obligation from file "distance.mlw", characters 1645-1744
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i0)
(IMPLIES (EQ i0 0)
(AND (AND (<= 0 i0) (<= i0 (+ n2 1)))
(AND (EQ (array_length t) (+ n2 1))
(FORALL (j) (IMPLIES (AND (<= 0 j) (< j i0)) (EQ (select t j) (- n2 j))))))))))))

;; distance_po_5, Why obligation from file "distance.mlw", characters 2074-2079
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i0)
(IMPLIES (EQ i0 0)
(FORALL (t0)
(FORALL (i2)
(IMPLIES (EQ i2 (- n1 1))
(FORALL (Variant3)
(FORALL (i3)
(FORALL (t1)
(IMPLIES (EQ Variant3 (+ i3 1))
(IMPLIES (AND (AND (<= (- 0 1) i3) (<= i3 (- n1 1)))
         (AND (EQ (array_length t1) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i3 1) j (select t1 j)) |@true|)))))
(IMPLIES (>= i3 0) (AND (<= 0 n2) (< n2 (array_length t1))))))))))))))))))

;; distance_po_6, Why obligation from file "distance.mlw", characters 2527-2532
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i0)
(IMPLIES (EQ i0 0)
(FORALL (t0)
(FORALL (i2)
(IMPLIES (EQ i2 (- n1 1))
(FORALL (Variant3)
(FORALL (i3)
(FORALL (t1)
(IMPLIES (EQ Variant3 (+ i3 1))
(IMPLIES (AND (AND (<= (- 0 1) i3) (<= i3 (- n1 1)))
         (AND (EQ (array_length t1) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i3 1) j (select t1 j)) |@true|)))))
(IMPLIES (>= i3 0)
(FORALL (old1)
(IMPLIES (EQ old1 (select t1 n2))
(FORALL (t2)
(FORALL (j1)
(IMPLIES (EQ j1 (- n2 1))
(FORALL (Variant5)
(FORALL (j2)
(FORALL (old2)
(FORALL (t3)
(IMPLIES (EQ Variant5 (+ j2 1))
(IMPLIES (AND (AND (<= (- 0 1) j2) (<= j2 (- n2 1)))
         (AND (EQ (array_length t3) (+ n2 1))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< j2 k) (<= k n2))
         (EQ (min_suffix w1 w2 i3 k (select t3 k)) |@true|)))
         (AND
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (<= k j2))
         (EQ (min_suffix w1 w2 (+ i3 1) k (select t3 k)) |@true|)))
         (EQ (min_suffix w1 w2 (+ i3 1) (+ j2 1) old2) |@true|)))))
(IMPLIES (>= j2 0)
(FORALL (temp)
(IMPLIES (EQ temp old2) (AND (<= 0 j2) (< j2 (array_length t3))))))))))))))))))))))))))))))))

