(BG_PUSH 
  ; array_length
  (FORALL (t i v) (EQ (array_length (store t i v)) (array_length t)))
  ; booleans
  (DISTINCT |@true| |@false|)
  ; exchange
  (FORALL (t1 t2 i j)
	  (IFF (EQ (exchange t1 t2 i j) |@true|)
	       (AND (EQ (array_length t1) (array_length t2))
		    (EQ (select t1 i) (select t2 j))
		    (EQ (select t1 j) (select t2 i))
		    (FORALL (k) (IMPLIES (AND (NEQ k i) (NEQ k j))
					 (EQ (select t1 k) (select t2 k)))))))
  (FORALL (t1 t2 i j)
	  (IMPLIES (EQ (exchange t1 t2 i j) |@true|)
		   (EQ (array_length t1) (array_length t2))))
  ; permut
  (FORALL (t) (EQ (permut t t) |@true|))
  (FORALL (t1 t2) (IMPLIES (EQ (permut t1 t2) |@true|)
			   (EQ (permut t2 t1) |@true|)))
  (FORALL (t1 t2 t3) (IMPLIES (AND (EQ (permut t1 t2) |@true|)
				   (EQ (permut t2 t3) |@true|))
			      (EQ (permut t1 t3) |@true|)))
  (FORALL 
   (t i j) 
   (EQ (permut t (store (store t i (select t j)) j (select t i))) |@true|))
  (FORALL (t1 t2)
	  (IMPLIES (EQ (permut t1 t2) |@true|)
		   (EQ (array_length t1) (array_length t2))))
  ; sub_permut
  (FORALL (t g d) (EQ (sub_permut g d t t) |@true|))
  (FORALL (t1 t2 g d) (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
			   (EQ (sub_permut g d t2 t1) |@true|)))
  (FORALL (t1 t2 t3 g d) (IMPLIES (AND (EQ (sub_permut g d t1 t2) |@true|)
				       (EQ (sub_permut g d t2 t3) |@true|))
				  (EQ (sub_permut g d t1 t3) |@true|)))
  (FORALL 
   (t g d i j) 
   (IMPLIES (AND (<= g i) (<= i d) (<= g j) (<= j d))
	    (EQ (sub_permut g d t 
			    (store (store t i (select t j)) j (select t i))) 
		|@true|)))
  (FORALL 
   (t1 t2 g d i j)
   (IMPLIES (AND (EQ (exchange t1 t2 i j) |@true|)
		 (<= g i) (<= i d) (<= g j) (<= j d))
	    (EQ (sub_permut g d t1 t2) |@true|)))
  (FORALL (t1 t2 i j) 
	  (IMPLIES (EQ (sub_permut i j t1 t2) |@true|)
		   (EQ (permut t1 t2) |@true|)))
  (FORALL (t1 t2 i j)
	  (IMPLIES (EQ (sub_permut i j t1 t2) |@true|)
		   (EQ (array_length t1) (array_length t2))))
  ; sorted_array
  (FORALL 
   (t i j) 
   (IFF (EQ (sorted_array t i j) |@true|)
	(IMPLIES (<= i j)
		 (FORALL (k) (IMPLIES (AND (<= i k) (< k j))
				      (<= (select t k) (select t (+ k 1))))))))
)

;; DO NOT EDIT BELOW THIS LINE

(BG_PUSH (NEQ |@true| |@false|))

(BG_PUSH
 ;; Why axiom lt_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (lt_int_bool x y) |@true|) (< x y)))))

(BG_PUSH
 ;; Why axiom le_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (le_int_bool x y) |@true|) (<= x y)))))

(BG_PUSH
 ;; Why axiom gt_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (gt_int_bool x y) |@true|) (> x y)))))

(BG_PUSH
 ;; Why axiom ge_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (ge_int_bool x y) |@true|) (>= x y)))))

(BG_PUSH
 ;; Why axiom eq_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (eq_int_bool x y) |@true|) (EQ x y)))))

(BG_PUSH
 ;; Why axiom neq_int_bool_axiom
 (FORALL (x) (FORALL (y) (IFF (EQ (neq_int_bool x y) |@true|) (NEQ x y)))))

(BG_PUSH
 ;; Why axiom ite_true
 (FORALL (x) (FORALL (y) (EQ (ite |@true| x y) x))))

(BG_PUSH
 ;; Why axiom ite_false
 (FORALL (x) (FORALL (y) (EQ (ite |@false| x y) y))))

(BG_PUSH
 ;; Why axiom sorted_array_def
 (FORALL (t)
 (FORALL (i)
 (FORALL (j)
 (IFF (EQ (sorted_array t i j) |@true|)
 (FORALL (k)
 (IMPLIES (AND (<= i k) (< k j)) (<= (access t k) (access t (+ k 1))))))))))

(BG_PUSH
 ;; Why axiom exchange_def
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (i)
 (FORALL (j)
 (IFF (EQ (exchange t1 t2 i j) |@true|)
 (AND (EQ (array_length t1) (array_length t2))
 (AND (EQ (access t1 i) (access t2 j))
 (AND (EQ (access t2 i) (access t1 j))
 (FORALL (k)
 (IMPLIES (AND (NEQ k i) (NEQ k j)) (EQ (access t1 k) (access t2 k)))))))))))))

(BG_PUSH
 ;; Why axiom permut_refl
 (FORALL (t) (EQ (permut t t) |@true|)))

(BG_PUSH
 ;; Why axiom permut_sym
 (FORALL (t1)
 (FORALL (t2)
 (IMPLIES (EQ (permut t1 t2) |@true|) (EQ (permut t2 t1) |@true|)))))

(BG_PUSH
 ;; Why axiom permut_trans
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (t3)
 (IMPLIES (AND (EQ (permut t1 t2) |@true|) (EQ (permut t2 t3) |@true|))
 (EQ (permut t1 t3) |@true|))))))

(BG_PUSH
 ;; Why axiom permut_exchange
 (FORALL (t)
 (FORALL (i)
 (FORALL (j)
 (EQ (permut t (update (update t i (access t j)) j (access t i))) |@true|)))))

(BG_PUSH
 ;; Why axiom sub_permut_refl
 (FORALL (t) (FORALL (g) (FORALL (d) (EQ (sub_permut g d t t) |@true|)))))

(BG_PUSH
 ;; Why axiom sub_permut_sym
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (EQ (sub_permut g d t2 t1) |@true|)))))))

(BG_PUSH
 ;; Why axiom sub_permut_trans
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (t3)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (IMPLIES (EQ (sub_permut g d t2 t3) |@true|)
 (EQ (sub_permut g d t1 t3) |@true|))))))))

 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (FORALL (t3)
 (IMPLIES (EQ (sub_permut g d t2 t3) |@true|)
 (EQ (sub_permut g d t1 t3) |@true|)))))))))

(BG_PUSH
 ;; Why axiom sub_permut_exchange_1
 (FORALL (t)
 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES (AND (<= g i) (AND (<= i d) (AND (<= g j) (<= j d))))
 (EQ (sub_permut g d t
 (update (update t i (access t j)) j (access t i))) |@true|)))))))

 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES (AND (<= g i) (AND (<= i d) (AND (<= g j) (<= j d))))
 (FORALL (t)
 (EQ (sub_permut g d t
 (update (update t i (access t j)) j (access t i))) |@true|))))))))

(BG_PUSH
 ;; Why axiom sub_permut_exchange_2
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (FORALL (i)
 (FORALL (j)
 (IMPLIES
 (AND (<= g i)
 (AND (<= i d)
 (AND (<= g j) (AND (<= j d) (EQ (exchange t1 t2 i j) |@true|)))))
 (EQ (sub_permut g d t1 t2) |@true|)))))))))

(BG_PUSH
 ;; Why axiom sub_permut_permut
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|) (EQ (permut t1 t2) |@true|)))))))

(BG_PUSH
 ;; Why axiom array_length_update
 (FORALL (t)
 (FORALL (i)
 (FORALL (v) (EQ (array_length (update t i v)) (array_length t))))))

(BG_PUSH
 ;; Why axiom sub_permut_array_length
 (FORALL (t1)
 (FORALL (t2)
 (FORALL (g)
 (FORALL (d)
 (IMPLIES (EQ (sub_permut g d t1 t2) |@true|)
 (EQ (array_length t1) (array_length t2))))))))

(BG_PUSH
 ;; Why axiom permut_array_length
 (FORALL (t1)
 (FORALL (t2)
 (IMPLIES (EQ (permut t1 t2) |@true|)
 (EQ (array_length t1) (array_length t2))))))

;; distance_po_1, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i)
(IMPLIES (EQ i 0)
(AND (AND (<= 0 i) (<= i (+ n2 1)))
(AND (EQ (array_length t) (+ n2 1))
(FORALL (j) (IMPLIES (AND (<= 0 j) (< j i)) (EQ (access t j) (- n2 j))))))))))))

;; distance_po_2, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i)
(IMPLIES (EQ i 0)
(IMPLIES (AND (AND (<= 0 i) (<= i (+ n2 1)))
         (AND (EQ (array_length t) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i)) (EQ (access t j) (- n2 j))))))
(FORALL (i0)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 i0) (<= i0 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i0)) (EQ (access t0 j) (- n2 j))))))
(IMPLIES (<= i0 n2) (AND (<= 0 i0) (< i0 (array_length t0))))))))))))))

;; distance_po_3, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i)
(IMPLIES (EQ i 0)
(IMPLIES (AND (AND (<= 0 i) (<= i (+ n2 1)))
         (AND (EQ (array_length t) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i)) (EQ (access t j) (- n2 j))))))
(FORALL (i0)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 i0) (<= i0 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i0)) (EQ (access t0 j) (- n2 j))))))
(IMPLIES (<= i0 n2)
(IMPLIES (AND (<= 0 i0) (< i0 (array_length t0)))
(FORALL (t1)
(IMPLIES (EQ t1 (update t0 i0 (- n2 i0)))
(FORALL (i1)
(IMPLIES (EQ i1 (+ i0 1))
(AND
(AND (AND (<= 0 i1) (<= i1 (+ n2 1)))
(AND (EQ (array_length t1) (+ n2 1))
(FORALL (j) (IMPLIES (AND (<= 0 j) (< j i1)) (EQ (access t1 j) (- n2 j))))))
(AND (<= 0 (- (+ n2 1) i0)) (< (- (+ n2 1) i1) (- (+ n2 1) i0))))))))))))))))))))

;; distance_po_4, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i)
(IMPLIES (EQ i 0)
(IMPLIES (AND (AND (<= 0 i) (<= i (+ n2 1)))
         (AND (EQ (array_length t) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i)) (EQ (access t j) (- n2 j))))))
(FORALL (i0)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 i0) (<= i0 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i0)) (EQ (access t0 j) (- n2 j))))))
(IMPLIES (> i0 n2)
(FORALL (i1)
(IMPLIES (EQ i1 (- n1 1))
(AND (AND (<= (- 0 1) i1) (<= i1 (- n1 1)))
(AND (EQ (array_length t0) (+ n2 1))
(FORALL (j)
(IMPLIES (AND (<= 0 j) (<= j n2))
(EQ (min_suffix w1 w2 (+ i1 1) j (access t0 j)) |@true|))))))))))))))))))

;; distance_po_5, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i)
(IMPLIES (EQ i 0)
(IMPLIES (AND (AND (<= 0 i) (<= i (+ n2 1)))
         (AND (EQ (array_length t) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i)) (EQ (access t j) (- n2 j))))))
(FORALL (i0)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 i0) (<= i0 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i0)) (EQ (access t0 j) (- n2 j))))))
(IMPLIES (> i0 n2)
(FORALL (i1)
(IMPLIES (EQ i1 (- n1 1))
(IMPLIES (AND (AND (<= (- 0 1) i1) (<= i1 (- n1 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i1 1) j (access t0 j)) |@true|)))))
(FORALL (i2)
(FORALL (t1)
(IMPLIES (AND (AND (<= (- 0 1) i2) (<= i2 (- n1 1)))
         (AND (EQ (array_length t1) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i2 1) j (access t1 j)) |@true|)))))
(IMPLIES (>= i2 0) (AND (<= 0 n2) (< n2 (array_length t1)))))))))))))))))))))

;; distance_po_6, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i)
(IMPLIES (EQ i 0)
(IMPLIES (AND (AND (<= 0 i) (<= i (+ n2 1)))
         (AND (EQ (array_length t) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i)) (EQ (access t j) (- n2 j))))))
(FORALL (i0)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 i0) (<= i0 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i0)) (EQ (access t0 j) (- n2 j))))))
(IMPLIES (> i0 n2)
(FORALL (i1)
(IMPLIES (EQ i1 (- n1 1))
(IMPLIES (AND (AND (<= (- 0 1) i1) (<= i1 (- n1 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i1 1) j (access t0 j)) |@true|)))))
(FORALL (i2)
(FORALL (t1)
(IMPLIES (AND (AND (<= (- 0 1) i2) (<= i2 (- n1 1)))
         (AND (EQ (array_length t1) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i2 1) j (access t1 j)) |@true|)))))
(IMPLIES (>= i2 0)
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (result)
(IMPLIES (EQ result (access t1 n2))
(FORALL (old)
(IMPLIES (EQ old result)
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t1 n2))
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (t2)
(IMPLIES (EQ t2 (update t1 n2 (+ result0 1)))
(FORALL (j)
(IMPLIES (EQ j (- n2 1))
(AND (AND (<= (- 0 1) j) (<= j (- n2 1)))
(AND (EQ (array_length t2) (+ n2 1))
(AND
(FORALL (k)
(IMPLIES (AND (< j k) (<= k n2))
(EQ (min_suffix w1 w2 i2 k (access t2 k)) |@true|)))
(AND
(FORALL (k)
(IMPLIES (AND (<= 0 k) (<= k j))
(EQ (min_suffix w1 w2 (+ i2 1) k (access t2 k)) |@true|)))
(EQ (min_suffix w1 w2 (+ i2 1) (+ j 1) old) |@true|))))))))))))))))))))))))))))))))))))

;; distance_po_7, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i)
(IMPLIES (EQ i 0)
(IMPLIES (AND (AND (<= 0 i) (<= i (+ n2 1)))
         (AND (EQ (array_length t) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i)) (EQ (access t j) (- n2 j))))))
(FORALL (i0)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 i0) (<= i0 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i0)) (EQ (access t0 j) (- n2 j))))))
(IMPLIES (> i0 n2)
(FORALL (i1)
(IMPLIES (EQ i1 (- n1 1))
(IMPLIES (AND (AND (<= (- 0 1) i1) (<= i1 (- n1 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i1 1) j (access t0 j)) |@true|)))))
(FORALL (i2)
(FORALL (t1)
(IMPLIES (AND (AND (<= (- 0 1) i2) (<= i2 (- n1 1)))
         (AND (EQ (array_length t1) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i2 1) j (access t1 j)) |@true|)))))
(IMPLIES (>= i2 0)
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (result)
(IMPLIES (EQ result (access t1 n2))
(FORALL (old)
(IMPLIES (EQ old result)
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t1 n2))
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (t2)
(IMPLIES (EQ t2 (update t1 n2 (+ result0 1)))
(FORALL (j)
(IMPLIES (EQ j (- n2 1))
(IMPLIES (AND (AND (<= (- 0 1) j) (<= j (- n2 1)))
         (AND (EQ (array_length t2) (+ n2 1))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< j k) (<= k n2))
         (EQ (min_suffix w1 w2 i2 k (access t2 k)) |@true|)))
         (AND
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (<= k j))
         (EQ (min_suffix w1 w2 (+ i2 1) k (access t2 k)) |@true|)))
         (EQ (min_suffix w1 w2 (+ i2 1) (+ j 1) old) |@true|)))))
(FORALL (j0)
(FORALL (old0)
(FORALL (t3)
(IMPLIES (AND (AND (<= (- 0 1) j0) (<= j0 (- n2 1)))
         (AND (EQ (array_length t3) (+ n2 1))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< j0 k) (<= k n2))
         (EQ (min_suffix w1 w2 i2 k (access t3 k)) |@true|)))
         (AND
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (<= k j0))
         (EQ (min_suffix w1 w2 (+ i2 1) k (access t3 k)) |@true|)))
         (EQ (min_suffix w1 w2 (+ i2 1) (+ j0 1) old0) |@true|)))))
(IMPLIES (>= j0 0) (AND (<= 0 j0) (< j0 (array_length t3))))))))))))))))))))))))))))))))))))))))

;; distance_po_8, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i)
(IMPLIES (EQ i 0)
(IMPLIES (AND (AND (<= 0 i) (<= i (+ n2 1)))
         (AND (EQ (array_length t) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i)) (EQ (access t j) (- n2 j))))))
(FORALL (i0)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 i0) (<= i0 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i0)) (EQ (access t0 j) (- n2 j))))))
(IMPLIES (> i0 n2)
(FORALL (i1)
(IMPLIES (EQ i1 (- n1 1))
(IMPLIES (AND (AND (<= (- 0 1) i1) (<= i1 (- n1 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i1 1) j (access t0 j)) |@true|)))))
(FORALL (i2)
(FORALL (t1)
(IMPLIES (AND (AND (<= (- 0 1) i2) (<= i2 (- n1 1)))
         (AND (EQ (array_length t1) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i2 1) j (access t1 j)) |@true|)))))
(IMPLIES (>= i2 0)
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (result)
(IMPLIES (EQ result (access t1 n2))
(FORALL (old)
(IMPLIES (EQ old result)
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t1 n2))
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (t2)
(IMPLIES (EQ t2 (update t1 n2 (+ result0 1)))
(FORALL (j)
(IMPLIES (EQ j (- n2 1))
(IMPLIES (AND (AND (<= (- 0 1) j) (<= j (- n2 1)))
         (AND (EQ (array_length t2) (+ n2 1))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< j k) (<= k n2))
         (EQ (min_suffix w1 w2 i2 k (access t2 k)) |@true|)))
         (AND
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (<= k j))
         (EQ (min_suffix w1 w2 (+ i2 1) k (access t2 k)) |@true|)))
         (EQ (min_suffix w1 w2 (+ i2 1) (+ j 1) old) |@true|)))))
(FORALL (j0)
(FORALL (old0)
(FORALL (t3)
(IMPLIES (AND (AND (<= (- 0 1) j0) (<= j0 (- n2 1)))
         (AND (EQ (array_length t3) (+ n2 1))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< j0 k) (<= k n2))
         (EQ (min_suffix w1 w2 i2 k (access t3 k)) |@true|)))
         (AND
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (<= k j0))
         (EQ (min_suffix w1 w2 (+ i2 1) k (access t3 k)) |@true|)))
         (EQ (min_suffix w1 w2 (+ i2 1) (+ j0 1) old0) |@true|)))))
(IMPLIES (>= j0 0)
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t3)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t3 j0))
(FORALL (old1)
(IMPLIES (EQ old1 result1) (AND (<= 0 i2) (< i2 (array_length w1)))))))))))))))))))))))))))))))))))))))))))))

;; distance_po_9, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i)
(IMPLIES (EQ i 0)
(IMPLIES (AND (AND (<= 0 i) (<= i (+ n2 1)))
         (AND (EQ (array_length t) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i)) (EQ (access t j) (- n2 j))))))
(FORALL (i0)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 i0) (<= i0 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i0)) (EQ (access t0 j) (- n2 j))))))
(IMPLIES (> i0 n2)
(FORALL (i1)
(IMPLIES (EQ i1 (- n1 1))
(IMPLIES (AND (AND (<= (- 0 1) i1) (<= i1 (- n1 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i1 1) j (access t0 j)) |@true|)))))
(FORALL (i2)
(FORALL (t1)
(IMPLIES (AND (AND (<= (- 0 1) i2) (<= i2 (- n1 1)))
         (AND (EQ (array_length t1) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i2 1) j (access t1 j)) |@true|)))))
(IMPLIES (>= i2 0)
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (result)
(IMPLIES (EQ result (access t1 n2))
(FORALL (old)
(IMPLIES (EQ old result)
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t1 n2))
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (t2)
(IMPLIES (EQ t2 (update t1 n2 (+ result0 1)))
(FORALL (j)
(IMPLIES (EQ j (- n2 1))
(IMPLIES (AND (AND (<= (- 0 1) j) (<= j (- n2 1)))
         (AND (EQ (array_length t2) (+ n2 1))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< j k) (<= k n2))
         (EQ (min_suffix w1 w2 i2 k (access t2 k)) |@true|)))
         (AND
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (<= k j))
         (EQ (min_suffix w1 w2 (+ i2 1) k (access t2 k)) |@true|)))
         (EQ (min_suffix w1 w2 (+ i2 1) (+ j 1) old) |@true|)))))
(FORALL (j0)
(FORALL (old0)
(FORALL (t3)
(IMPLIES (AND (AND (<= (- 0 1) j0) (<= j0 (- n2 1)))
         (AND (EQ (array_length t3) (+ n2 1))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< j0 k) (<= k n2))
         (EQ (min_suffix w1 w2 i2 k (access t3 k)) |@true|)))
         (AND
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (<= k j0))
         (EQ (min_suffix w1 w2 (+ i2 1) k (access t3 k)) |@true|)))
         (EQ (min_suffix w1 w2 (+ i2 1) (+ j0 1) old0) |@true|)))))
(IMPLIES (>= j0 0)
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t3)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t3 j0))
(FORALL (old1)
(IMPLIES (EQ old1 result1)
(IMPLIES (AND (<= 0 i2) (< i2 (array_length w1)))
(FORALL (result2)
(IMPLIES (EQ result2 (access w1 i2))
(AND (<= 0 j0) (< j0 (array_length w2))))))))))))))))))))))))))))))))))))))))))))))))

;; distance_po_10, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i)
(IMPLIES (EQ i 0)
(IMPLIES (AND (AND (<= 0 i) (<= i (+ n2 1)))
         (AND (EQ (array_length t) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i)) (EQ (access t j) (- n2 j))))))
(FORALL (i0)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 i0) (<= i0 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i0)) (EQ (access t0 j) (- n2 j))))))
(IMPLIES (> i0 n2)
(FORALL (i1)
(IMPLIES (EQ i1 (- n1 1))
(IMPLIES (AND (AND (<= (- 0 1) i1) (<= i1 (- n1 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i1 1) j (access t0 j)) |@true|)))))
(FORALL (i2)
(FORALL (t1)
(IMPLIES (AND (AND (<= (- 0 1) i2) (<= i2 (- n1 1)))
         (AND (EQ (array_length t1) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i2 1) j (access t1 j)) |@true|)))))
(IMPLIES (>= i2 0)
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (result)
(IMPLIES (EQ result (access t1 n2))
(FORALL (old)
(IMPLIES (EQ old result)
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t1 n2))
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (t2)
(IMPLIES (EQ t2 (update t1 n2 (+ result0 1)))
(FORALL (j)
(IMPLIES (EQ j (- n2 1))
(IMPLIES (AND (AND (<= (- 0 1) j) (<= j (- n2 1)))
         (AND (EQ (array_length t2) (+ n2 1))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< j k) (<= k n2))
         (EQ (min_suffix w1 w2 i2 k (access t2 k)) |@true|)))
         (AND
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (<= k j))
         (EQ (min_suffix w1 w2 (+ i2 1) k (access t2 k)) |@true|)))
         (EQ (min_suffix w1 w2 (+ i2 1) (+ j 1) old) |@true|)))))
(FORALL (j0)
(FORALL (old0)
(FORALL (t3)
(IMPLIES (AND (AND (<= (- 0 1) j0) (<= j0 (- n2 1)))
         (AND (EQ (array_length t3) (+ n2 1))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< j0 k) (<= k n2))
         (EQ (min_suffix w1 w2 i2 k (access t3 k)) |@true|)))
         (AND
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (<= k j0))
         (EQ (min_suffix w1 w2 (+ i2 1) k (access t3 k)) |@true|)))
         (EQ (min_suffix w1 w2 (+ i2 1) (+ j0 1) old0) |@true|)))))
(IMPLIES (>= j0 0)
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t3)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t3 j0))
(FORALL (old1)
(IMPLIES (EQ old1 result1)
(IMPLIES (AND (<= 0 i2) (< i2 (array_length w1)))
(FORALL (result2)
(IMPLIES (EQ result2 (access w1 i2))
(IMPLIES (AND (<= 0 j0) (< j0 (array_length w2)))
(FORALL (result3)
(IMPLIES (EQ result3 (access w2 j0))
(IMPLIES (EQ result2 result3)
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t3)))
(FORALL (t4)
(IMPLIES (EQ t4 (update t3 j0 old0))
(FORALL (j1)
(IMPLIES (EQ j1 (- j0 1))
(AND
(AND (AND (<= (- 0 1) j1) (<= j1 (- n2 1)))
(AND (EQ (array_length t4) (+ n2 1))
(AND
(FORALL (k)
(IMPLIES (AND (< j1 k) (<= k n2))
(EQ (min_suffix w1 w2 i2 k (access t4 k)) |@true|)))
(AND
(FORALL (k)
(IMPLIES (AND (<= 0 k) (<= k j1))
(EQ (min_suffix w1 w2 (+ i2 1) k (access t4 k)) |@true|)))
(EQ (min_suffix w1 w2 (+ i2 1) (+ j1 1) old1) |@true|)))))
(AND (<= 0 (+ j0 1)) (< (+ j1 1) (+ j0 1))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

;; distance_po_11, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i)
(IMPLIES (EQ i 0)
(IMPLIES (AND (AND (<= 0 i) (<= i (+ n2 1)))
         (AND (EQ (array_length t) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i)) (EQ (access t j) (- n2 j))))))
(FORALL (i0)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 i0) (<= i0 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i0)) (EQ (access t0 j) (- n2 j))))))
(IMPLIES (> i0 n2)
(FORALL (i1)
(IMPLIES (EQ i1 (- n1 1))
(IMPLIES (AND (AND (<= (- 0 1) i1) (<= i1 (- n1 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i1 1) j (access t0 j)) |@true|)))))
(FORALL (i2)
(FORALL (t1)
(IMPLIES (AND (AND (<= (- 0 1) i2) (<= i2 (- n1 1)))
         (AND (EQ (array_length t1) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i2 1) j (access t1 j)) |@true|)))))
(IMPLIES (>= i2 0)
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (result)
(IMPLIES (EQ result (access t1 n2))
(FORALL (old)
(IMPLIES (EQ old result)
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t1 n2))
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (t2)
(IMPLIES (EQ t2 (update t1 n2 (+ result0 1)))
(FORALL (j)
(IMPLIES (EQ j (- n2 1))
(IMPLIES (AND (AND (<= (- 0 1) j) (<= j (- n2 1)))
         (AND (EQ (array_length t2) (+ n2 1))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< j k) (<= k n2))
         (EQ (min_suffix w1 w2 i2 k (access t2 k)) |@true|)))
         (AND
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (<= k j))
         (EQ (min_suffix w1 w2 (+ i2 1) k (access t2 k)) |@true|)))
         (EQ (min_suffix w1 w2 (+ i2 1) (+ j 1) old) |@true|)))))
(FORALL (j0)
(FORALL (old0)
(FORALL (t3)
(IMPLIES (AND (AND (<= (- 0 1) j0) (<= j0 (- n2 1)))
         (AND (EQ (array_length t3) (+ n2 1))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< j0 k) (<= k n2))
         (EQ (min_suffix w1 w2 i2 k (access t3 k)) |@true|)))
         (AND
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (<= k j0))
         (EQ (min_suffix w1 w2 (+ i2 1) k (access t3 k)) |@true|)))
         (EQ (min_suffix w1 w2 (+ i2 1) (+ j0 1) old0) |@true|)))))
(IMPLIES (>= j0 0)
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t3)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t3 j0))
(FORALL (old1)
(IMPLIES (EQ old1 result1)
(IMPLIES (AND (<= 0 i2) (< i2 (array_length w1)))
(FORALL (result2)
(IMPLIES (EQ result2 (access w1 i2))
(IMPLIES (AND (<= 0 j0) (< j0 (array_length w2)))
(FORALL (result3)
(IMPLIES (EQ result3 (access w2 j0))
(IMPLIES (NOT (EQ result2 result3))
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t3)))
(FORALL (result4)
(IMPLIES (EQ result4 (access t3 j0))
(AND (<= 0 (+ j0 1)) (< (+ j0 1) (array_length t3)))))))))))))))))))))))))))))))))))))))))))))))))))))))

;; distance_po_12, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i)
(IMPLIES (EQ i 0)
(IMPLIES (AND (AND (<= 0 i) (<= i (+ n2 1)))
         (AND (EQ (array_length t) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i)) (EQ (access t j) (- n2 j))))))
(FORALL (i0)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 i0) (<= i0 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i0)) (EQ (access t0 j) (- n2 j))))))
(IMPLIES (> i0 n2)
(FORALL (i1)
(IMPLIES (EQ i1 (- n1 1))
(IMPLIES (AND (AND (<= (- 0 1) i1) (<= i1 (- n1 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i1 1) j (access t0 j)) |@true|)))))
(FORALL (i2)
(FORALL (t1)
(IMPLIES (AND (AND (<= (- 0 1) i2) (<= i2 (- n1 1)))
         (AND (EQ (array_length t1) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i2 1) j (access t1 j)) |@true|)))))
(IMPLIES (>= i2 0)
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (result)
(IMPLIES (EQ result (access t1 n2))
(FORALL (old)
(IMPLIES (EQ old result)
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t1 n2))
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (t2)
(IMPLIES (EQ t2 (update t1 n2 (+ result0 1)))
(FORALL (j)
(IMPLIES (EQ j (- n2 1))
(IMPLIES (AND (AND (<= (- 0 1) j) (<= j (- n2 1)))
         (AND (EQ (array_length t2) (+ n2 1))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< j k) (<= k n2))
         (EQ (min_suffix w1 w2 i2 k (access t2 k)) |@true|)))
         (AND
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (<= k j))
         (EQ (min_suffix w1 w2 (+ i2 1) k (access t2 k)) |@true|)))
         (EQ (min_suffix w1 w2 (+ i2 1) (+ j 1) old) |@true|)))))
(FORALL (j0)
(FORALL (old0)
(FORALL (t3)
(IMPLIES (AND (AND (<= (- 0 1) j0) (<= j0 (- n2 1)))
         (AND (EQ (array_length t3) (+ n2 1))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< j0 k) (<= k n2))
         (EQ (min_suffix w1 w2 i2 k (access t3 k)) |@true|)))
         (AND
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (<= k j0))
         (EQ (min_suffix w1 w2 (+ i2 1) k (access t3 k)) |@true|)))
         (EQ (min_suffix w1 w2 (+ i2 1) (+ j0 1) old0) |@true|)))))
(IMPLIES (>= j0 0)
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t3)))
(FORALL (result1)
(IMPLIES (EQ result1 (access t3 j0))
(FORALL (old1)
(IMPLIES (EQ old1 result1)
(IMPLIES (AND (<= 0 i2) (< i2 (array_length w1)))
(FORALL (result2)
(IMPLIES (EQ result2 (access w1 i2))
(IMPLIES (AND (<= 0 j0) (< j0 (array_length w2)))
(FORALL (result3)
(IMPLIES (EQ result3 (access w2 j0))
(IMPLIES (NOT (EQ result2 result3))
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t3)))
(FORALL (result4)
(IMPLIES (EQ result4 (access t3 j0))
(IMPLIES (AND (<= 0 (+ j0 1)) (< (+ j0 1) (array_length t3)))
(FORALL (result5)
(IMPLIES (EQ result5 (access t3 (+ j0 1)))
(IMPLIES (AND (<= 0 j0) (< j0 (array_length t3)))
(FORALL (t4)
(IMPLIES (EQ t4 (update t3 j0 (+ (Zmin result4 result5) 1)))
(FORALL (j1)
(IMPLIES (EQ j1 (- j0 1))
(AND
(AND (AND (<= (- 0 1) j1) (<= j1 (- n2 1)))
(AND (EQ (array_length t4) (+ n2 1))
(AND
(FORALL (k)
(IMPLIES (AND (< j1 k) (<= k n2))
(EQ (min_suffix w1 w2 i2 k (access t4 k)) |@true|)))
(AND
(FORALL (k)
(IMPLIES (AND (<= 0 k) (<= k j1))
(EQ (min_suffix w1 w2 (+ i2 1) k (access t4 k)) |@true|)))
(EQ (min_suffix w1 w2 (+ i2 1) (+ j1 1) old1) |@true|)))))
(AND (<= 0 (+ j0 1)) (< (+ j1 1) (+ j0 1))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

;; distance_po_13, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i)
(IMPLIES (EQ i 0)
(IMPLIES (AND (AND (<= 0 i) (<= i (+ n2 1)))
         (AND (EQ (array_length t) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i)) (EQ (access t j) (- n2 j))))))
(FORALL (i0)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 i0) (<= i0 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i0)) (EQ (access t0 j) (- n2 j))))))
(IMPLIES (> i0 n2)
(FORALL (i1)
(IMPLIES (EQ i1 (- n1 1))
(IMPLIES (AND (AND (<= (- 0 1) i1) (<= i1 (- n1 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i1 1) j (access t0 j)) |@true|)))))
(FORALL (i2)
(FORALL (t1)
(IMPLIES (AND (AND (<= (- 0 1) i2) (<= i2 (- n1 1)))
         (AND (EQ (array_length t1) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i2 1) j (access t1 j)) |@true|)))))
(IMPLIES (>= i2 0)
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (result)
(IMPLIES (EQ result (access t1 n2))
(FORALL (old)
(IMPLIES (EQ old result)
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (result0)
(IMPLIES (EQ result0 (access t1 n2))
(IMPLIES (AND (<= 0 n2) (< n2 (array_length t1)))
(FORALL (t2)
(IMPLIES (EQ t2 (update t1 n2 (+ result0 1)))
(FORALL (j)
(IMPLIES (EQ j (- n2 1))
(IMPLIES (AND (AND (<= (- 0 1) j) (<= j (- n2 1)))
         (AND (EQ (array_length t2) (+ n2 1))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< j k) (<= k n2))
         (EQ (min_suffix w1 w2 i2 k (access t2 k)) |@true|)))
         (AND
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (<= k j))
         (EQ (min_suffix w1 w2 (+ i2 1) k (access t2 k)) |@true|)))
         (EQ (min_suffix w1 w2 (+ i2 1) (+ j 1) old) |@true|)))))
(FORALL (j0)
(FORALL (old0)
(FORALL (t3)
(IMPLIES (AND (AND (<= (- 0 1) j0) (<= j0 (- n2 1)))
         (AND (EQ (array_length t3) (+ n2 1))
         (AND
         (FORALL (k)
         (IMPLIES (AND (< j0 k) (<= k n2))
         (EQ (min_suffix w1 w2 i2 k (access t3 k)) |@true|)))
         (AND
         (FORALL (k)
         (IMPLIES (AND (<= 0 k) (<= k j0))
         (EQ (min_suffix w1 w2 (+ i2 1) k (access t3 k)) |@true|)))
         (EQ (min_suffix w1 w2 (+ i2 1) (+ j0 1) old0) |@true|)))))
(IMPLIES (< j0 0)
(FORALL (i3)
(IMPLIES (EQ i3 (- i2 1))
(AND
(AND (AND (<= (- 0 1) i3) (<= i3 (- n1 1)))
(AND (EQ (array_length t3) (+ n2 1))
(FORALL (j)
(IMPLIES (AND (<= 0 j) (<= j n2))
(EQ (min_suffix w1 w2 (+ i3 1) j (access t3 j)) |@true|)))))
(AND (<= 0 (+ i2 1)) (< (+ i3 1) (+ i2 1)))))))))))))))))))))))))))))))))))))))))))

;; distance_po_14, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i)
(IMPLIES (EQ i 0)
(IMPLIES (AND (AND (<= 0 i) (<= i (+ n2 1)))
         (AND (EQ (array_length t) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i)) (EQ (access t j) (- n2 j))))))
(FORALL (i0)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 i0) (<= i0 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i0)) (EQ (access t0 j) (- n2 j))))))
(IMPLIES (> i0 n2)
(FORALL (i1)
(IMPLIES (EQ i1 (- n1 1))
(IMPLIES (AND (AND (<= (- 0 1) i1) (<= i1 (- n1 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i1 1) j (access t0 j)) |@true|)))))
(FORALL (i2)
(FORALL (t1)
(IMPLIES (AND (AND (<= (- 0 1) i2) (<= i2 (- n1 1)))
         (AND (EQ (array_length t1) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i2 1) j (access t1 j)) |@true|)))))
(IMPLIES (< i2 0) (AND (<= 0 0) (< 0 (array_length t1)))))))))))))))))))))

;; distance_po_15, Why obligation from file "", line 0, characters 0-0:
(FORALL (t)
(FORALL (w1)
(FORALL (w2)
(IMPLIES (AND (EQ (array_length w1) n1)
         (AND (EQ (array_length w2) n2) (EQ (array_length t) (+ n2 1))))
(FORALL (i)
(IMPLIES (EQ i 0)
(IMPLIES (AND (AND (<= 0 i) (<= i (+ n2 1)))
         (AND (EQ (array_length t) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i)) (EQ (access t j) (- n2 j))))))
(FORALL (i0)
(FORALL (t0)
(IMPLIES (AND (AND (<= 0 i0) (<= i0 (+ n2 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (< j i0)) (EQ (access t0 j) (- n2 j))))))
(IMPLIES (> i0 n2)
(FORALL (i1)
(IMPLIES (EQ i1 (- n1 1))
(IMPLIES (AND (AND (<= (- 0 1) i1) (<= i1 (- n1 1)))
         (AND (EQ (array_length t0) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i1 1) j (access t0 j)) |@true|)))))
(FORALL (i2)
(FORALL (t1)
(IMPLIES (AND (AND (<= (- 0 1) i2) (<= i2 (- n1 1)))
         (AND (EQ (array_length t1) (+ n2 1))
         (FORALL (j)
         (IMPLIES (AND (<= 0 j) (<= j n2))
         (EQ (min_suffix w1 w2 (+ i2 1) j (access t1 j)) |@true|)))))
(IMPLIES (< i2 0)
(IMPLIES (AND (<= 0 0) (< 0 (array_length t1)))
(FORALL (result)
(IMPLIES (EQ result (access t1 0))
(EQ (min_dist (word_of_array n1 w1) (word_of_array n2 w2) result) |@true|))))))))))))))))))))))

