(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export caduceus_spec_why.

(* Why obligation from file "why/abs.why", characters 89-104 *)
Lemma abs1_impl_po_1 : 
  forall (p: pointer),
  forall (alloc: alloc),
  (valid alloc p).
Proof.
intuition.
Admitted.

(* Why obligation from file "why/abs.why", characters 72-131 *)
Lemma abs1_impl_po_2 : 
  forall (p: pointer),
  forall (alloc: alloc),
  forall (intP: ((memory) Z)),
  forall (Pre3: (valid alloc p)),
  forall (caduceus_1: Z),
  forall (Post3: caduceus_1 = (acc intP p)),
  forall (result: bool),
  forall (Post5: (if result then caduceus_1 < 0 else caduceus_1 >= 0)),
  (if result
   then (forall (result:Z),
         (result = (acc intP p) ->
          (forall (intP0:((memory) Z)),
           (intP0 = (upd intP p (Zopp result)) -> (acc intP0 p) >= 0)) /\
          (valid alloc p))) /\
   (valid alloc p) else (acc intP p) >= 0).
Proof.
destruct result; intuition.
subst; caduceus.
Save.

(* Why obligation from file "why/abs.why", characters 316-375 *)
Lemma abs2_impl_po_1 : 
  forall (p: pointer),
  forall (alloc: alloc),
  forall (intP: ((memory) Z)),
  forall (Pre9: (valid alloc p)),
  forall (Pre3: (valid alloc p)),
  forall (caduceus_1: Z),
  forall (Post3: caduceus_1 = (acc intP p)),
  forall (result: bool),
  forall (Post5: (if result then caduceus_1 < 0 else caduceus_1 >= 0)),
  (if result
   then (forall (result:Z),
         (result = (acc intP p) ->
          (forall (intP0:((memory) Z)),
           (intP0 = (upd intP p (Zopp result)) -> (acc intP0 p) >= 0)) /\
          (valid alloc p))) /\
   (valid alloc p) else (acc intP p) >= 0).
Proof.
(* intuition. *)
destruct result; intuition.
subst intP0.
caduceus.
Save.

