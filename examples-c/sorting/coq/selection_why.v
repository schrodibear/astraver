(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export caduceus_spec_why.

(* Why obligation from file "why/selection.why", characters 1364-1479 *)
Lemma selection_impl_po_1 : 
  forall (t: pointer),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (Pre14: n >= 1 /\ (valid_range alloc t 0 (n - 1))),
  forall (i1: Z),
  forall (Post1: i1 = 0),
  forall (Variant1: Z),
  forall (i2: Z),
  forall (intP0: ((memory) Z)),
  forall (Pre13: Variant1 = (n - i2)),
  forall (Pre12: (((0 <= i2 /\ i2 <= (n - 1)) /\
                 (sorted alloc intP0 t 0 (i2 - 1))) /\
                 (mset intP0 t 0 (n - 1)) = (mset intP t 0 (n - 1))) /\
                 (forall (k:Z),
                  (forall (l:Z),
                   (0 <= k /\ k < i2 ->
                    (i2 <= l /\ l < n -> (acc intP0 (shift t k)) <=
                     (acc intP0 (shift t l))))))),
  forall (Test6: i2 < (n - 1)),
  forall (min2: Z),
  forall (Post3: min2 = i2),
  forall (j2: Z),
  forall (Post4: j2 = (i2 + 1)),
  forall (Variant3: Z),
  forall (j3: Z),
  forall (min3: Z),
  forall (Pre8: Variant3 = (n - j3)),
  forall (Pre7: (((i2 + 1) <= j3 /\ j3 <= n) /\ i2 <= min3 /\ min3 < n) /\
                (forall (k:Z),
                 (i2 <= k /\ k < j3 -> (acc intP0 (shift t min3)) <=
                  (acc intP0 (shift t k))))),
  forall (Test5: j3 < n),
  (valid alloc (shift t j3)).
Proof.
intuition.
Qed.

(* Why obligation from file "why/selection.why", characters 1364-1479 *)
Lemma selection_impl_po_2 : 
  forall (t: pointer),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (Pre14: n >= 1 /\ (valid_range alloc t 0 (n - 1))),
  forall (i1: Z),
  forall (Post1: i1 = 0),
  forall (Variant1: Z),
  forall (i2: Z),
  forall (intP0: ((memory) Z)),
  forall (Pre13: Variant1 = (n - i2)),
  forall (Pre12: (((0 <= i2 /\ i2 <= (n - 1)) /\
                 (sorted alloc intP0 t 0 (i2 - 1))) /\
                 (mset intP0 t 0 (n - 1)) = (mset intP t 0 (n - 1))) /\
                 (forall (k:Z),
                  (forall (l:Z),
                   (0 <= k /\ k < i2 ->
                    (i2 <= l /\ l < n -> (acc intP0 (shift t k)) <=
                     (acc intP0 (shift t l))))))),
  forall (Test6: i2 < (n - 1)),
  forall (min2: Z),
  forall (Post3: min2 = i2),
  forall (j2: Z),
  forall (Post4: j2 = (i2 + 1)),
  forall (Variant3: Z),
  forall (j3: Z),
  forall (min3: Z),
  forall (Pre8: Variant3 = (n - j3)),
  forall (Pre7: (((i2 + 1) <= j3 /\ j3 <= n) /\ i2 <= min3 /\ min3 < n) /\
                (forall (k:Z),
                 (i2 <= k /\ k < j3 -> (acc intP0 (shift t min3)) <=
                  (acc intP0 (shift t k))))),
  forall (Test5: j3 < n),
  forall (Pre4: (valid alloc (shift t j3))),
  (valid alloc (shift t min3)).
Proof.
intuition.
Qed.

(* Why obligation from file "why/selection.why", characters 1494-1503 *)
Lemma selection_impl_po_3 : 
  forall (t: pointer),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (Pre14: n >= 1 /\ (valid_range alloc t 0 (n - 1))),
  forall (i1: Z),
  forall (Post1: i1 = 0),
  forall (Variant1: Z),
  forall (i2: Z),
  forall (intP0: ((memory) Z)),
  forall (Pre13: Variant1 = (n - i2)),
  forall (Pre12: (((0 <= i2 /\ i2 <= (n - 1)) /\
                 (sorted alloc intP0 t 0 (i2 - 1))) /\
                 (mset intP0 t 0 (n - 1)) = (mset intP t 0 (n - 1))) /\
                 (forall (k:Z),
                  (forall (l:Z),
                   (0 <= k /\ k < i2 ->
                    (i2 <= l /\ l < n -> (acc intP0 (shift t k)) <=
                     (acc intP0 (shift t l))))))),
  forall (Test6: i2 < (n - 1)),
  forall (min2: Z),
  forall (Post3: min2 = i2),
  forall (j2: Z),
  forall (Post4: j2 = (i2 + 1)),
  forall (Variant3: Z),
  forall (j3: Z),
  forall (min3: Z),
  forall (Pre8: Variant3 = (n - j3)),
  forall (Pre7: (((i2 + 1) <= j3 /\ j3 <= n) /\ i2 <= min3 /\ min3 < n) /\
                (forall (k:Z),
                 (i2 <= k /\ k < j3 -> (acc intP0 (shift t min3)) <=
                  (acc intP0 (shift t k))))),
  forall (Test5: j3 < n),
  forall (Pre4: (valid alloc (shift t j3))),
  forall (Pre6: (valid alloc (shift t min3))),
  forall (Test4: (acc intP0 (shift t j3)) < (acc intP0 (shift t min3))),
  forall (min4: Z),
  forall (Post7: min4 = j3),
  (forall (j:Z),
   (j = (j3 + 1) -> ((((i2 + 1) <= j /\ j <= n) /\ i2 <= min4 /\ min4 < n) /\
    (forall (k:Z),
     (i2 <= k /\ k < j -> (acc intP0 (shift t min4)) <=
      (acc intP0 (shift t k))))) /\
    (Zwf 0 (n - j) (n - j3)))).
Proof.
intuition.
Admitted.
(****
unfold sorted in *|-*; intuition.
assert (k < i2-1 \/ k = i2-1).
omega.
intuition idtac.
rewrite H14; auto with *.
rewrite H14; auto with *.
subst.
rewrite H14; auto with *.
ring (i2 -1 +1).
rewrite H15; caduceus; auto with *.

Focus 2.
assert (k < i2 \/ k=i2).
omega.
intuition idtac.

rewrite H14; auto with *.

assert (l=min3\/l<>min3).
omega.
intuition idtac.
subst; rewrite H12; auto with *.
rewrite H14; auto with *.


subst; rewrite H15; auto with *.

assert (l=min3\/l<>min3).
omega.
intuition idtac.
subst; rewrite H12; auto with *.
rewrite H14; auto with *.

Admitted.
***)

(***
assert (k < j3 \/ k=j3).
omega.
intuition.
generalize (H7 k).
subst; auto with *.
subst; omega.

(* subgoal 2 *)
assert (k < j3 \/ k=j3).
omega.
intuition.
subst; auto with *.

subst; auto.

***)

(* Why obligation from file "why/selection.why", characters 1518-1522 *)
Lemma selection_impl_po_4 : 
  forall (t: pointer),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (Pre14: n >= 1 /\ (valid_range alloc t 0 (n - 1))),
  forall (i1: Z),
  forall (Post1: i1 = 0),
  forall (Variant1: Z),
  forall (i2: Z),
  forall (intP0: ((memory) Z)),
  forall (Pre13: Variant1 = (n - i2)),
  forall (Pre12: (((0 <= i2 /\ i2 <= (n - 1)) /\
                 (sorted alloc intP0 t 0 (i2 - 1))) /\
                 (mset intP0 t 0 (n - 1)) = (mset intP t 0 (n - 1))) /\
                 (forall (k:Z),
                  (forall (l:Z),
                   (0 <= k /\ k < i2 ->
                    (i2 <= l /\ l < n -> (acc intP0 (shift t k)) <=
                     (acc intP0 (shift t l))))))),
  forall (Test6: i2 < (n - 1)),
  forall (min2: Z),
  forall (Post3: min2 = i2),
  forall (j2: Z),
  forall (Post4: j2 = (i2 + 1)),
  forall (Variant3: Z),
  forall (j3: Z),
  forall (min3: Z),
  forall (Pre8: Variant3 = (n - j3)),
  forall (Pre7: (((i2 + 1) <= j3 /\ j3 <= n) /\ i2 <= min3 /\ min3 < n) /\
                (forall (k:Z),
                 (i2 <= k /\ k < j3 -> (acc intP0 (shift t min3)) <=
                  (acc intP0 (shift t k))))),
  forall (Test5: j3 < n),
  forall (Pre4: (valid alloc (shift t j3))),
  forall (Pre6: (valid alloc (shift t min3))),
  forall (Test3: (acc intP0 (shift t j3)) >= (acc intP0 (shift t min3))),
  forall (result5: unit),
  forall (Post6: result5 = tt),
  (forall (j:Z),
   (j = (j3 + 1) -> ((((i2 + 1) <= j /\ j <= n) /\ i2 <= min3 /\ min3 < n) /\
    (forall (k:Z),
     (i2 <= k /\ k < j -> (acc intP0 (shift t min3)) <=
      (acc intP0 (shift t k))))) /\
    (Zwf 0 (n - j) (n - j3)))).
Proof.
intuition.

assert (k=i2).
omega.
subst; omega.
Qed.

(* Why obligation from file "why/selection.why", characters 999-1567 *)
Lemma selection_impl_po_5 : 
  forall (t: pointer),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (Pre14: n >= 1 /\ (valid_range alloc t 0 (n - 1))),
  forall (i1: Z),
  forall (Post1: i1 = 0),
  forall (Variant1: Z),
  forall (i2: Z),
  forall (intP0: ((memory) Z)),
  forall (Pre13: Variant1 = (n - i2)),
  forall (Pre12: (((0 <= i2 /\ i2 <= (n - 1)) /\
                 (sorted alloc intP0 t 0 (i2 - 1))) /\
                 (mset intP0 t 0 (n - 1)) = (mset intP t 0 (n - 1))) /\
                 (forall (k:Z),
                  (forall (l:Z),
                   (0 <= k /\ k < i2 ->
                    (i2 <= l /\ l < n -> (acc intP0 (shift t k)) <=
                     (acc intP0 (shift t l))))))),
  forall (Test6: i2 < (n - 1)),
  forall (min2: Z),
  forall (Post3: min2 = i2),
  forall (j2: Z),
  forall (Post4: j2 = (i2 + 1)),
  forall (Variant3: Z),
  forall (j3: Z),
  forall (min3: Z),
  forall (Pre8: Variant3 = (n - j3)),
  forall (Pre7: (((i2 + 1) <= j3 /\ j3 <= n) /\ i2 <= min3 /\ min3 < n) /\
                (forall (k:Z),
                 (i2 <= k /\ k < j3 -> (acc intP0 (shift t min3)) <=
                  (acc intP0 (shift t k))))),
  forall (Test2: j3 >= n),
  (forall (result:Z),
   (result = min3 ->
    (forall (intP1:((memory) Z)),
     (((acc intP1 (shift t result)) = (acc intP0 (shift t i2)) /\
      (acc intP1 (shift t i2)) = (acc intP0 (shift t result))) /\
      (assigns alloc intP0 intP1
       (union_loc (pointer_loc (shift t i2)) (pointer_loc (shift t result)))) ->
      (forall (i:Z),
       (i = (i2 + 1) -> ((((0 <= i /\ i <= (n - 1)) /\
        (sorted alloc intP1 t 0 (i - 1))) /\
        (mset intP1 t 0 (n - 1)) = (mset intP t 0 (n - 1))) /\
        (forall (k:Z),
         (forall (l:Z),
          (0 <= k /\ k < i ->
           (i <= l /\ l < n -> (acc intP1 (shift t k)) <=
            (acc intP1 (shift t l))))))) /\
        (Zwf 0 (n - i) (n - i2)))))) /\
    (valid_index alloc t result) /\ (valid_index alloc t i2))).
Proof.
intuition.
unfold sorted in *|-*; intuition.
assert (k < n-2 \/ k=n-2).
omega.
intuition.
Save.


(* Why obligation from file "why/selection.why", characters 1056-1317 *)
Lemma selection_impl_po_6 : 
  forall (t: pointer),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (Pre14: n >= 1 /\ (valid_range alloc t 0 (n - 1))),
  forall (i1: Z),
  forall (Post1: i1 = 0),
  forall (Variant1: Z),
  forall (i2: Z),
  forall (intP0: ((memory) Z)),
  forall (Pre13: Variant1 = (n - i2)),
  forall (Pre12: (((0 <= i2 /\ i2 <= (n - 1)) /\
                 (sorted alloc intP0 t 0 (i2 - 1))) /\
                 (mset intP0 t 0 (n - 1)) = (mset intP t 0 (n - 1))) /\
                 (forall (k:Z),
                  (forall (l:Z),
                   (0 <= k /\ k < i2 ->
                    (i2 <= l /\ l < n -> (acc intP0 (shift t k)) <=
                     (acc intP0 (shift t l))))))),
  forall (Test6: i2 < (n - 1)),
  forall (min2: Z),
  forall (Post3: min2 = i2),
  forall (j2: Z),
  forall (Post4: j2 = (i2 + 1)),
  (((i2 + 1) <= j2 /\ j2 <= n) /\ i2 <= min2 /\ min2 < n) /\
  (forall (k:Z),
   (i2 <= k /\ k < j2 -> (acc intP0 (shift t min2)) <=
    (acc intP0 (shift t k)))).
Proof.
intuition.
red; intuition.
Save.



(* Why obligation from file "why/selection.why", characters 320-1697 *)
Lemma selection_impl_po_7 : 
  forall (t: pointer),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (Pre14: n >= 1 /\ (valid_range alloc t 0 (n - 1))),
  forall (i1: Z),
  forall (Post1: i1 = 0),
  forall (Variant1: Z),
  forall (i2: Z),
  forall (intP0: ((memory) Z)),
  forall (Pre13: Variant1 = (n - i2)),
  forall (Pre12: (((0 <= i2 /\ i2 <= (n - 1)) /\
                 (sorted alloc intP0 t 0 (i2 - 1))) /\
                 (mset intP0 t 0 (n - 1)) = (mset intP t 0 (n - 1))) /\
                 (forall (k:Z),
                  (forall (l:Z),
                   (0 <= k /\ k < i2 ->
                    (i2 <= l /\ l < n -> (acc intP0 (shift t k)) <=
                     (acc intP0 (shift t l))))))),
  forall (Test1: i2 >= (n - 1)),
  (sorted alloc intP0 t 0 (n - 1)) /\
  (mset intP0 t 0 (n - 1)) = (mset intP t 0 (n - 1)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/selection.why", characters 385-862 *)
Lemma selection_impl_po_8 : 
  forall (t: pointer),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (Pre14: n >= 1 /\ (valid_range alloc t 0 (n - 1))),
  forall (i1: Z),
  forall (Post1: i1 = 0),
  (((0 <= i1 /\ i1 <= (n - 1)) /\ (sorted alloc intP t 0 (i1 - 1))) /\
  (mset intP t 0 (n - 1)) = (mset intP t 0 (n - 1))) /\
  (forall (k:Z),
   (forall (l:Z),
    (0 <= k /\ k < i1 ->
     (i1 <= l /\ l < n -> (acc intP (shift t k)) <= (acc intP (shift t l)))))).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/selection.why", characters 2052-2080 *)
Lemma swap_impl_po_1 : 
  forall (t: pointer),
  forall (i: Z),
  forall (j: Z),
  forall (alloc: alloc_table),
  forall (Pre10: (valid_index alloc t i) /\ (valid_index alloc t j)),
  (valid alloc (shift t i)).
Proof.
intuition.
subst; auto.
Save.

(* Why obligation from file "why/selection.why", characters 2161-2189 *)
Lemma swap_impl_po_2 : 
  forall (t: pointer),
  forall (i: Z),
  forall (j: Z),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (Pre10: (valid_index alloc t i) /\ (valid_index alloc t j)),
  forall (Pre9: (valid alloc (shift t i))),
  forall (tmp: Z),
  forall (Post8: tmp = (acc intP (shift t i))),
  forall (caduceus_2: pointer),
  forall (Post4: caduceus_2 = (shift t i)),
  (valid alloc (shift t j)).
Proof.
intuition.
assert (i=j \/ i <> j).
omega.
intuition idtac.
subst; caduceus.
subst; caduceus.

assert (i=j \/ i <> j).
omega.
intuition idtac.
subst; caduceus.
subst; caduceus.

unfold assigns.
intros.
assert (p <> result3).
apply unchanged_pointer_elim.
eapply unchanged_union_elim1.
subst result3.
apply H8.
subst intP1; caduceus.
assert (p <> result0).
apply unchanged_pointer_elim.
eapply unchanged_union_elim2.
subst result0.
apply H8.
subst intP0; caduceus.
subst; auto.
subst; auto.
subst; auto.
Save.

(* Why obligation from file "why/selection.why", characters 2135-2190 *)
Lemma swap_impl_po_3 : 
  forall (t: pointer),
  forall (i: Z),
  forall (j: Z),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (Pre10: (valid_index alloc t i) /\ (valid_index alloc t j)),
  forall (Pre9: (valid alloc (shift t i))),
  forall (tmp: Z),
  forall (Post8: tmp = (acc intP (shift t i))),
  forall (caduceus_2: pointer),
  forall (Post4: caduceus_2 = (shift t i)),
  forall (Pre4: (valid alloc (shift t j))),
  forall (aux_3: Z),
  forall (Post3: aux_3 = (acc intP (shift t j))),
  (valid alloc caduceus_2).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/selection.why", characters 2135-2190 *)
Lemma swap_impl_po_4 : 
  forall (t: pointer),
  forall (i: Z),
  forall (j: Z),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (Pre10: (valid_index alloc t i) /\ (valid_index alloc t j)),
  forall (Pre9: (valid alloc (shift t i))),
  forall (tmp: Z),
  forall (Post8: tmp = (acc intP (shift t i))),
  forall (caduceus_2: pointer),
  forall (Post4: caduceus_2 = (shift t i)),
  forall (Pre4: (valid alloc (shift t j))),
  forall (aux_3: Z),
  forall (Post3: aux_3 = (acc intP (shift t j))),
  forall (Pre1: (valid alloc caduceus_2)),
  forall (intP0: ((memory) Z)),
  forall (Post11: intP0 = (upd intP caduceus_2 aux_3)),
  (forall (result:pointer),
   (result = (shift t j) ->
    (forall (intP1:((memory) Z)),
     (intP1 = (upd intP0 result tmp) -> ((acc intP1 (shift t i)) =
      (acc intP (shift t j)) /\ (acc intP1 (shift t j)) =
      (acc intP (shift t i))) /\
      (assigns alloc intP intP1
       (union_loc (pointer_loc (shift t j)) (pointer_loc (shift t i)))))) /\
    (valid alloc result))).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

