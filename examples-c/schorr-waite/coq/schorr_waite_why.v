(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export caduceus_spec_why.
Require Import BinTree.


(* Why obligation from file "why/schorr_waite.why", characters 248-569 *)
Lemma schorr_waite_impl_po_1 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  ((reachable alloc l r root x) -> (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x:pointer),
                  ((reachable alloc l r root x) ->
                   (reachable alloc l0 r0 t1 x) \/
                   (reachable alloc l0 r0 p1 x))) /\
                 (exists stack:plist,
                  ((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p:pointer), ((in_list p stack) -> (acc m0 p) <> 0))) /\
                  (forall (x:pointer),
                   ((reachable alloc l r root x) /\ (acc m0 x) <> 0 ->
                    (reachable alloc l0 r0 t1 x) \/
                    (forall (y:pointer),
                     ((in_list y stack) ->
                      (reachable alloc l0 r0 (acc r0 y) x)))))) /\
                  (forall (x:pointer),
                   (~(in_list x stack) -> (acc r0 x) = (acc r x) /\
                    (acc l0 x) = (acc l x)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 stack) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2)))))))),
  (p1 = null -> (~(t1 = null) -> (valid alloc t1))).
Proof.
(* validity of access t->m in the condition of while *)
intuition.
Admitted.

(* Why obligation from file "why/schorr_waite.why", characters 1981-2099 *)
Lemma schorr_waite_impl_po_2 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  ((reachable alloc l r root x) -> (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x:pointer),
                  ((reachable alloc l r root x) ->
                   (reachable alloc l0 r0 t1 x) \/
                   (reachable alloc l0 r0 p1 x))) /\
                 (exists stack:plist,
                  ((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p:pointer), ((in_list p stack) -> (acc m0 p) <> 0))) /\
                  (forall (x:pointer),
                   ((reachable alloc l r root x) /\ (acc m0 x) <> 0 ->
                    (reachable alloc l0 r0 t1 x) \/
                    (forall (y:pointer),
                     ((in_list y stack) ->
                      (reachable alloc l0 r0 (acc r0 y) x)))))) /\
                  (forall (x:pointer),
                   (~(in_list x stack) -> (acc r0 x) = (acc r x) /\
                    (acc l0 x) = (acc l x)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 stack) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2)))))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  (~(t1 = null) -> (valid alloc t1)).
Proof.
(* validity of access to t->m in the condition of the first if *)
intuition.
Admitted.

(* Why obligation from file "why/schorr_waite.why", characters 2121-2178 *)
Lemma schorr_waite_impl_po_3 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  ((reachable alloc l r root x) -> (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x:pointer),
                  ((reachable alloc l r root x) ->
                   (reachable alloc l0 r0 t1 x) \/
                   (reachable alloc l0 r0 p1 x))) /\
                 (exists stack:plist,
                  ((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p:pointer), ((in_list p stack) -> (acc m0 p) <> 0))) /\
                  (forall (x:pointer),
                   ((reachable alloc l r root x) /\ (acc m0 x) <> 0 ->
                    (reachable alloc l0 r0 t1 x) \/
                    (forall (y:pointer),
                     ((in_list y stack) ->
                      (reachable alloc l0 r0 (acc r0 y) x)))))) /\
                  (forall (x:pointer),
                   (~(in_list x stack) -> (acc r0 x) = (acc r x) /\
                    (acc l0 x) = (acc l x)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 stack) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2)))))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (Pre33: (~(t1 = null) -> (valid alloc t1))),
  forall (Test5: t1 = null \/ ~(t1 = null) /\ (acc m0 t1) <> 0),
  (valid alloc p1).
Proof.
(* validity of access to p->c in the condition of the second if *)
intuition.
Admitted.

(* Why obligation from file "why/schorr_waite.why", characters 2319-2343 *)
Lemma schorr_waite_impl_po_4 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  ((reachable alloc l r root x) -> (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x:pointer),
                  ((reachable alloc l r root x) ->
                   (reachable alloc l0 r0 t1 x) \/
                   (reachable alloc l0 r0 p1 x))) /\
                 (exists stack:plist,
                  ((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p:pointer), ((in_list p stack) -> (acc m0 p) <> 0))) /\
                  (forall (x:pointer),
                   ((reachable alloc l r root x) /\ (acc m0 x) <> 0 ->
                    (reachable alloc l0 r0 t1 x) \/
                    (forall (y:pointer),
                     ((in_list y stack) ->
                      (reachable alloc l0 r0 (acc r0 y) x)))))) /\
                  (forall (x:pointer),
                   (~(in_list x stack) -> (acc r0 x) = (acc r x) /\
                    (acc l0 x) = (acc l x)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 stack) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2)))))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (Pre33: (~(t1 = null) -> (valid alloc t1))),
  forall (Test5: t1 = null \/ ~(t1 = null) /\ (acc m0 t1) <> 0),
  forall (Pre32: (valid alloc p1)),
  forall (Test4: (acc c0 p1) <> 0),
  forall (q: pointer),
  forall (Post31: q = t1),
  forall (t2: pointer),
  forall (Post26: t2 = p1),
  forall (p2: pointer),
  forall (Post27: p2 = (acc r0 p1)),
  forall (caduceus_7: pointer),
  forall (Post30: caduceus_7 = t2),
  (valid alloc caduceus_7).
Proof.
(* validity of t in 't->r = q' in the first branch of if *)
 intuition;subst;auto.
Save.


(* Why obligation from file "why/schorr_waite.why", characters 2296-2343 *)
Lemma schorr_waite_impl_po_5 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  ((reachable alloc l r root x) -> (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x:pointer),
                  ((reachable alloc l r root x) ->
                   (reachable alloc l0 r0 t1 x) \/
                   (reachable alloc l0 r0 p1 x))) /\
                 (exists stack:plist,
                  ((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p:pointer), ((in_list p stack) -> (acc m0 p) <> 0))) /\
                  (forall (x:pointer),
                   ((reachable alloc l r root x) /\ (acc m0 x) <> 0 ->
                    (reachable alloc l0 r0 t1 x) \/
                    (forall (y:pointer),
                     ((in_list y stack) ->
                      (reachable alloc l0 r0 (acc r0 y) x)))))) /\
                  (forall (x:pointer),
                   (~(in_list x stack) -> (acc r0 x) = (acc r x) /\
                    (acc l0 x) = (acc l x)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 stack) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2)))))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (Pre33: (~(t1 = null) -> (valid alloc t1))),
  forall (Test5: t1 = null \/ ~(t1 = null) /\ (acc m0 t1) <> 0),
  forall (Pre32: (valid alloc p1)),
  forall (Test4: (acc c0 p1) <> 0),
  forall (q: pointer),
  forall (Post31: q = t1),
  forall (t2: pointer),
  forall (Post26: t2 = p1),
  forall (p2: pointer),
  forall (Post27: p2 = (acc r0 p1)),
  forall (caduceus_7: pointer),
  forall (Post30: caduceus_7 = t2),
  forall (Pre31: (valid alloc caduceus_7)),
  forall (r1: ((memory) pointer)),
  forall (Post64: r1 = (upd r0 caduceus_7 q)),
  ((forall (x:pointer),
    ((reachable alloc l r root x) -> (reachable alloc l0 r1 t2 x) \/
     (reachable alloc l0 r1 p2 x))) /\
  (exists stack:plist, ((((clr_list alloc c0 l0 r1 p2 stack) /\
   (forall (p:pointer), ((in_list p stack) -> (acc m0 p) <> 0))) /\
   (forall (x:pointer),
    ((reachable alloc l r root x) /\ (acc m0 x) <> 0 ->
     (reachable alloc l0 r1 t2 x) \/
     (forall (y:pointer),
      ((in_list y stack) -> (reachable alloc l0 r1 (acc r1 y) x)))))) /\
   (forall (x:pointer),
    (~(in_list x stack) -> (acc r1 x) = (acc r x) /\ (acc l0 x) = (acc l x)))) /\
   (forall (p1:pointer),
    (forall (p2:pointer),
     ((pair_in_list p1 p2 stack) ->
      (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\ (acc r p2) = p1)) /\
      (((acc c0 p2) = 0 -> (acc l p2) = p1 /\ (acc r p2) = (acc r1 p2)))))))) /\
  (Zwf 0 0 0).
Proof.
(* preservation of loop invariant for the first branch of if "pop" *)
Admitted.
(*
intuition.
subst.
generalize (H x H3).
intro.
inversion_clear H2.
left.
inversion H4;subst.
apply Path_right;auto.
assert (acc (upd r0 p1 null) p1 = null).
apply acc_upd.
rewrite H2.
apply Path_null.
inversion H2.
elim H6.
auto.
inversion H2.
elim H6.
auto.
inversion H4;subst.
left.
apply Path_null.
left.
apply Path_left;auto.




inversion_clear H0;subst.
exists (cons p1 x0).
intuition.
apply clr_list_cons.



Save.
*)

(* Why obligation from file "why/schorr_waite.why", characters 2489-2525 *)
Lemma schorr_waite_impl_po_6 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  ((reachable alloc l r root x) -> (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x:pointer),
                  ((reachable alloc l r root x) ->
                   (reachable alloc l0 r0 t1 x) \/
                   (reachable alloc l0 r0 p1 x))) /\
                 (exists stack:plist,
                  ((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p:pointer), ((in_list p stack) -> (acc m0 p) <> 0))) /\
                  (forall (x:pointer),
                   ((reachable alloc l r root x) /\ (acc m0 x) <> 0 ->
                    (reachable alloc l0 r0 t1 x) \/
                    (forall (y:pointer),
                     ((in_list y stack) ->
                      (reachable alloc l0 r0 (acc r0 y) x)))))) /\
                  (forall (x:pointer),
                   (~(in_list x stack) -> (acc r0 x) = (acc r x) /\
                    (acc l0 x) = (acc l x)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 stack) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2)))))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (Pre33: (~(t1 = null) -> (valid alloc t1))),
  forall (Test5: t1 = null \/ ~(t1 = null) /\ (acc m0 t1) <> 0),
  forall (Pre32: (valid alloc p1)),
  forall (Test3: (acc c0 p1) = 0),
  forall (q: pointer),
  forall (Post25: q = t1),
  forall (t2: pointer),
  forall (Post14: t2 = (acc r0 p1)),
  forall (caduceus_6: pointer),
  forall (Post18: caduceus_6 = p1),
  forall (Pre19: (valid alloc p1)),
  forall (aux_1: pointer),
  forall (Post17: aux_1 = (acc l0 p1)),
  (valid alloc caduceus_6).
Proof.
(* validity of p in "p->r = p->l" in second branch of if "swing" *)
intuition; subst;auto.
Qed.

(* Why obligation from file "why/schorr_waite.why", characters 2489-2525 *)
Lemma schorr_waite_impl_po_7 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  ((reachable alloc l r root x) -> (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x:pointer),
                  ((reachable alloc l r root x) ->
                   (reachable alloc l0 r0 t1 x) \/
                   (reachable alloc l0 r0 p1 x))) /\
                 (exists stack:plist,
                  ((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p:pointer), ((in_list p stack) -> (acc m0 p) <> 0))) /\
                  (forall (x:pointer),
                   ((reachable alloc l r root x) /\ (acc m0 x) <> 0 ->
                    (reachable alloc l0 r0 t1 x) \/
                    (forall (y:pointer),
                     ((in_list y stack) ->
                      (reachable alloc l0 r0 (acc r0 y) x)))))) /\
                  (forall (x:pointer),
                   (~(in_list x stack) -> (acc r0 x) = (acc r x) /\
                    (acc l0 x) = (acc l x)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 stack) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2)))))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (Pre33: (~(t1 = null) -> (valid alloc t1))),
  forall (Test5: t1 = null \/ ~(t1 = null) /\ (acc m0 t1) <> 0),
  forall (Pre32: (valid alloc p1)),
  forall (Test3: (acc c0 p1) = 0),
  forall (q: pointer),
  forall (Post25: q = t1),
  forall (t2: pointer),
  forall (Post14: t2 = (acc r0 p1)),
  forall (caduceus_6: pointer),
  forall (Post18: caduceus_6 = p1),
  forall (Pre19: (valid alloc p1)),
  forall (aux_1: pointer),
  forall (Post17: aux_1 = (acc l0 p1)),
  forall (Pre17: (valid alloc caduceus_6)),
  forall (r1: ((memory) pointer)),
  forall (Post56: r1 = (upd r0 caduceus_6 aux_1)),
  (forall (result:pointer),
   (result = p1 ->
    (forall (l1:((memory) pointer)),
     (l1 = (upd l0 result q) ->
      (forall (result:pointer),
       (result = p1 ->
        (forall (c:((memory) Z)),
         (c = (upd c0 result 1) ->
          ((forall (x:pointer),
            ((reachable alloc l r root x) -> (reachable alloc l1 r1 t2 x) \/
             (reachable alloc l1 r1 p1 x))) /\
          (exists stack:plist, ((((clr_list alloc c l1 r1 p1 stack) /\
           (forall (p:pointer), ((in_list p stack) -> (acc m0 p) <> 0))) /\
           (forall (x:pointer),
            ((reachable alloc l r root x) /\ (acc m0 x) <> 0 ->
             (reachable alloc l1 r1 t2 x) \/
             (forall (y:pointer),
              ((in_list y stack) -> (reachable alloc l1 r1 (acc r1 y) x)))))) /\
           (forall (x:pointer),
            (~(in_list x stack) -> (acc r1 x) = (acc r x) /\
             (acc l1 x) = (acc l x)))) /\
           (forall (p1:pointer),
            (forall (p2:pointer),
             ((pair_in_list p1 p2 stack) ->
              (((acc c p2) <> 0 -> (acc l p2) = (acc l1 p2) /\
                (acc r p2) = p1)) /\
              (((acc c p2) = 0 -> (acc l p2) = p1 /\ (acc r p2) = (acc r1 p2)))))))) /\
          (Zwf 0 0 0))) /\
        (valid alloc result))))) /\
    (valid alloc result))).
Proof.
(* preservation of loop invariant, and also ..., in the "swing" case *)
(*
intuition.
generalize (H x H7).
intros.
*)
Admitted.

(* Why obligation from file "why/schorr_waite.why", characters 2785-2797 *)
Lemma schorr_waite_impl_po_8 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  ((reachable alloc l r root x) -> (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x:pointer),
                  ((reachable alloc l r root x) ->
                   (reachable alloc l0 r0 t1 x) \/
                   (reachable alloc l0 r0 p1 x))) /\
                 (exists stack:plist,
                  ((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p:pointer), ((in_list p stack) -> (acc m0 p) <> 0))) /\
                  (forall (x:pointer),
                   ((reachable alloc l r root x) /\ (acc m0 x) <> 0 ->
                    (reachable alloc l0 r0 t1 x) \/
                    (forall (y:pointer),
                     ((in_list y stack) ->
                      (reachable alloc l0 r0 (acc r0 y) x)))))) /\
                  (forall (x:pointer),
                   (~(in_list x stack) -> (acc r0 x) = (acc r x) /\
                    (acc l0 x) = (acc l x)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 stack) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2)))))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (Pre33: (~(t1 = null) -> (valid alloc t1))),
  forall (Test2: ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (q: pointer),
  forall (Post13: q = p1),
  forall (p2: pointer),
  forall (Post2: p2 = t1),
  (valid alloc t1).
Proof.
(* validity of t in "t->l" in the "push" case *)
intuition.
Save.

(* Why obligation from file "why/schorr_waite.why", characters 2847-2871 *)
Lemma schorr_waite_impl_po_9 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  ((reachable alloc l r root x) -> (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x:pointer),
                  ((reachable alloc l r root x) ->
                   (reachable alloc l0 r0 t1 x) \/
                   (reachable alloc l0 r0 p1 x))) /\
                 (exists stack:plist,
                  ((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p:pointer), ((in_list p stack) -> (acc m0 p) <> 0))) /\
                  (forall (x:pointer),
                   ((reachable alloc l r root x) /\ (acc m0 x) <> 0 ->
                    (reachable alloc l0 r0 t1 x) \/
                    (forall (y:pointer),
                     ((in_list y stack) ->
                      (reachable alloc l0 r0 (acc r0 y) x)))))) /\
                  (forall (x:pointer),
                   (~(in_list x stack) -> (acc r0 x) = (acc r x) /\
                    (acc l0 x) = (acc l x)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 stack) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2)))))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (Pre33: (~(t1 = null) -> (valid alloc t1))),
  forall (Test2: ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (q: pointer),
  forall (Post13: q = p1),
  forall (p2: pointer),
  forall (Post2: p2 = t1),
  forall (t2: pointer),
  forall (Post3: t2 = (acc l0 t1)),
  forall (caduceus_3: pointer),
  forall (Post6: caduceus_3 = p2),
  (valid alloc caduceus_3).
Proof.
(* validity of p in "p->l = q" in the "push" case *)
intuition;subst;auto.
Save.

(* Why obligation from file "why/schorr_waite.why", characters 2824-2871 *)
Lemma schorr_waite_impl_po_10 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  ((reachable alloc l r root x) -> (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x:pointer),
                  ((reachable alloc l r root x) ->
                   (reachable alloc l0 r0 t1 x) \/
                   (reachable alloc l0 r0 p1 x))) /\
                 (exists stack:plist,
                  ((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p:pointer), ((in_list p stack) -> (acc m0 p) <> 0))) /\
                  (forall (x:pointer),
                   ((reachable alloc l r root x) /\ (acc m0 x) <> 0 ->
                    (reachable alloc l0 r0 t1 x) \/
                    (forall (y:pointer),
                     ((in_list y stack) ->
                      (reachable alloc l0 r0 (acc r0 y) x)))))) /\
                  (forall (x:pointer),
                   (~(in_list x stack) -> (acc r0 x) = (acc r x) /\
                    (acc l0 x) = (acc l x)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 stack) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2)))))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (Pre33: (~(t1 = null) -> (valid alloc t1))),
  forall (Test2: ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (q: pointer),
  forall (Post13: q = p1),
  forall (p2: pointer),
  forall (Post2: p2 = t1),
  forall (t2: pointer),
  forall (Post3: t2 = (acc l0 t1)),
  forall (caduceus_3: pointer),
  forall (Post6: caduceus_3 = p2),
  forall (Pre7: (valid alloc caduceus_3)),
  forall (l1: ((memory) pointer)),
  forall (Post48: l1 = (upd l0 caduceus_3 q)),
  (forall (result:pointer),
   (result = p2 ->
    (forall (m:((memory) Z)),
     (m = (upd m0 result 1) ->
      (forall (result:pointer),
       (result = p2 ->
        (forall (c:((memory) Z)),
         (c = (upd c0 result 0) ->
          ((forall (x:pointer),
            ((reachable alloc l r root x) -> (reachable alloc l1 r0 t2 x) \/
             (reachable alloc l1 r0 p2 x))) /\
          (exists stack:plist, ((((clr_list alloc c l1 r0 p2 stack) /\
           (forall (p:pointer), ((in_list p stack) -> (acc m p) <> 0))) /\
           (forall (x:pointer),
            ((reachable alloc l r root x) /\ (acc m x) <> 0 ->
             (reachable alloc l1 r0 t2 x) \/
             (forall (y:pointer),
              ((in_list y stack) -> (reachable alloc l1 r0 (acc r0 y) x)))))) /\
           (forall (x:pointer),
            (~(in_list x stack) -> (acc r0 x) = (acc r x) /\
             (acc l1 x) = (acc l x)))) /\
           (forall (p1:pointer),
            (forall (p2:pointer),
             ((pair_in_list p1 p2 stack) ->
              (((acc c p2) <> 0 -> (acc l p2) = (acc l1 p2) /\
                (acc r p2) = p1)) /\
              (((acc c p2) = 0 -> (acc l p2) = p1 /\ (acc r p2) = (acc r0 p2)))))))) /\
          (Zwf 0 0 0))) /\
        (valid alloc result))))) /\
    (valid alloc result))).
Proof.
(* preservation of the loop invariant in the "push" case *)
(*
intuition.
*)
Admitted.

(* Why obligation from file "why/schorr_waite.why", characters 241-3059 *)
Lemma schorr_waite_impl_po_11 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  ((reachable alloc l r root x) -> (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x:pointer),
                  ((reachable alloc l r root x) ->
                   (reachable alloc l0 r0 t1 x) \/
                   (reachable alloc l0 r0 p1 x))) /\
                 (exists stack:plist,
                  ((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p:pointer), ((in_list p stack) -> (acc m0 p) <> 0))) /\
                  (forall (x:pointer),
                   ((reachable alloc l r root x) /\ (acc m0 x) <> 0 ->
                    (reachable alloc l0 r0 t1 x) \/
                    (forall (y:pointer),
                     ((in_list y stack) ->
                      (reachable alloc l0 r0 (acc r0 y) x)))))) /\
                  (forall (x:pointer),
                   (~(in_list x stack) -> (acc r0 x) = (acc r x) /\
                    (acc l0 x) = (acc l x)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 stack) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2)))))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test1: p1 = null /\ (t1 = null \/ ~(t1 = null) /\ (acc m0 t1) <> 0)),
  ((forall (x:pointer), (acc l x) = (acc l0 x) /\ (acc r x) = (acc r0 x)) /\
  (forall (x:pointer), ((reachable alloc l0 r0 root x) -> (acc m0 x) <> 0))) /\
  (forall (x:pointer),
   (~(reachable alloc l0 r0 root x) -> (acc m0 x) = (acc m x))).
Proof.
(* post-condition of the function *)
(*
subst.
inversion_clear H0;intuition.
*)
Admitted.

(* Why obligation from file "why/schorr_waite.why", characters 599-1952 *)
Lemma schorr_waite_impl_po_12 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (c: ((memory) Z)),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  ((reachable alloc l r root x) -> (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  (forall (x:pointer),
   ((reachable alloc l r root x) -> (reachable alloc l r t x) \/
    (reachable alloc l r p x))) /\
  (exists stack:plist, ((((clr_list alloc c l r p stack) /\
   (forall (p:pointer), ((in_list p stack) -> (acc m p) <> 0))) /\
   (forall (x:pointer),
    ((reachable alloc l r root x) /\ (acc m x) <> 0 ->
     (reachable alloc l r t x) \/
     (forall (y:pointer),
      ((in_list y stack) -> (reachable alloc l r (acc r y) x)))))) /\
   (forall (x:pointer),
    (~(in_list x stack) -> (acc r x) = (acc r x) /\ (acc l x) = (acc l x)))) /\
   (forall (p1:pointer),
    (forall (p2:pointer),
     ((pair_in_list p1 p2 stack) ->
      (((acc c p2) <> 0 -> (acc l p2) = (acc l p2) /\ (acc r p2) = p1)) /\
      (((acc c p2) = 0 -> (acc l p2) = p1 /\ (acc r p2) = (acc r p2))))))).
Proof.
(* loop invariant true at the beginning *)
intuition.
left; subst; auto.
exists (@nil pointer).
intuition.
constructor.
left; subst; auto.
inversion H.
inversion H.
Save.

