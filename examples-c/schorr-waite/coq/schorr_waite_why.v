(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export caduceus_spec_why.
Require Import BinTree.


(* Why obligation from file "why/schorr_waite.why", characters 294-615 *)
Lemma schorr_waite_impl_po_1 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  (~(x = null) /\ (reachable alloc l r root x) ->
                   (valid alloc x) /\ (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x_7:pointer),
                  ((reachable alloc l r root x_7) ->
                   (reachable alloc l0 r0 t1 x_7) \/
                   (reachable alloc l0 r0 p1 x_7))) /\
                 (exists stack:plist,
                  ((((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p_0:pointer),
                   ((in_list p_0 stack) -> (acc m0 p_0) <> 0))) /\
                  (forall (x_6:pointer),
                   (((valid alloc x_6) /\ (reachable alloc l r root x_6)) /\
                    (acc m0 x_6) = 0 ->
                    (unmarked_reachable alloc l0 m0 r0 t1 x_6) \/
                    (exists y:pointer, (in_list y stack) /\
                     (unmarked_reachable alloc l0 m0 r0 (acc r0 y) x_6))))) /\
                  (forall (x_5:pointer),
                   (~(in_list x_5 stack) -> (acc r0 x_5) = (acc r x_5) /\
                    (acc l0 x_5) = (acc l x_5)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 (cons t1 stack)) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2))))))) /\
                  (forall (x_4:pointer),
                   (~(reachable alloc l r root x_4) -> (acc m0 x_4) =
                    (acc m x_4)))) /\
                  (forall (x_3:pointer),
                   (~(x_3 = null) /\ (reachable alloc l r root x_3) ->
                    (valid alloc x_3))))),
  (p1 = null -> (~(t1 = null) -> (valid alloc t1))).
Proof.
(* validity of access t->m in the condition of while *)
intuition.
inversion_clear H2;intuition.
apply H4;intuition.
Admitted.

(* Why obligation from file "why/schorr_waite.why", characters 2586-2704 *)
Lemma schorr_waite_impl_po_2 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  (~(x = null) /\ (reachable alloc l r root x) ->
                   (valid alloc x) /\ (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x_7:pointer),
                  ((reachable alloc l r root x_7) ->
                   (reachable alloc l0 r0 t1 x_7) \/
                   (reachable alloc l0 r0 p1 x_7))) /\
                 (exists stack:plist,
                  ((((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p_0:pointer),
                   ((in_list p_0 stack) -> (acc m0 p_0) <> 0))) /\
                  (forall (x_6:pointer),
                   (((valid alloc x_6) /\ (reachable alloc l r root x_6)) /\
                    (acc m0 x_6) = 0 ->
                    (unmarked_reachable alloc l0 m0 r0 t1 x_6) \/
                    (exists y:pointer, (in_list y stack) /\
                     (unmarked_reachable alloc l0 m0 r0 (acc r0 y) x_6))))) /\
                  (forall (x_5:pointer),
                   (~(in_list x_5 stack) -> (acc r0 x_5) = (acc r x_5) /\
                    (acc l0 x_5) = (acc l x_5)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 (cons t1 stack)) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2))))))) /\
                  (forall (x_4:pointer),
                   (~(reachable alloc l r root x_4) -> (acc m0 x_4) =
                    (acc m x_4)))) /\
                  (forall (x_3:pointer),
                   (~(x_3 = null) /\ (reachable alloc l r root x_3) ->
                    (valid alloc x_3))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  (~(t1 = null) -> (valid alloc t1)).
Proof.
(* validity of access to t->m in the condition of the first if *)
intuition.
Admitted.

(* Why obligation from file "why/schorr_waite.why", characters 2726-2783 *)
Lemma schorr_waite_impl_po_3 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  (~(x = null) /\ (reachable alloc l r root x) ->
                   (valid alloc x) /\ (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x_7:pointer),
                  ((reachable alloc l r root x_7) ->
                   (reachable alloc l0 r0 t1 x_7) \/
                   (reachable alloc l0 r0 p1 x_7))) /\
                 (exists stack:plist,
                  ((((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p_0:pointer),
                   ((in_list p_0 stack) -> (acc m0 p_0) <> 0))) /\
                  (forall (x_6:pointer),
                   (((valid alloc x_6) /\ (reachable alloc l r root x_6)) /\
                    (acc m0 x_6) = 0 ->
                    (unmarked_reachable alloc l0 m0 r0 t1 x_6) \/
                    (exists y:pointer, (in_list y stack) /\
                     (unmarked_reachable alloc l0 m0 r0 (acc r0 y) x_6))))) /\
                  (forall (x_5:pointer),
                   (~(in_list x_5 stack) -> (acc r0 x_5) = (acc r x_5) /\
                    (acc l0 x_5) = (acc l x_5)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 (cons t1 stack)) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2))))))) /\
                  (forall (x_4:pointer),
                   (~(reachable alloc l r root x_4) -> (acc m0 x_4) =
                    (acc m x_4)))) /\
                  (forall (x_3:pointer),
                   (~(x_3 = null) /\ (reachable alloc l r root x_3) ->
                    (valid alloc x_3))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (Pre33: (~(t1 = null) -> (valid alloc t1))),
  forall (Test5: t1 = null \/ ~(t1 = null) /\ (acc m0 t1) <> 0),
  (valid alloc p1).
Proof.
(* validity of access to p->c in the condition of the second if *)
intuition.
Admitted.

(* Why obligation from file "why/schorr_waite.why", characters 2924-2948 *)
Lemma schorr_waite_impl_po_4 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  (~(x = null) /\ (reachable alloc l r root x) ->
                   (valid alloc x) /\ (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x_7:pointer),
                  ((reachable alloc l r root x_7) ->
                   (reachable alloc l0 r0 t1 x_7) \/
                   (reachable alloc l0 r0 p1 x_7))) /\
                 (exists stack:plist,
                  ((((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p_0:pointer),
                   ((in_list p_0 stack) -> (acc m0 p_0) <> 0))) /\
                  (forall (x_6:pointer),
                   (((valid alloc x_6) /\ (reachable alloc l r root x_6)) /\
                    (acc m0 x_6) = 0 ->
                    (unmarked_reachable alloc l0 m0 r0 t1 x_6) \/
                    (exists y:pointer, (in_list y stack) /\
                     (unmarked_reachable alloc l0 m0 r0 (acc r0 y) x_6))))) /\
                  (forall (x_5:pointer),
                   (~(in_list x_5 stack) -> (acc r0 x_5) = (acc r x_5) /\
                    (acc l0 x_5) = (acc l x_5)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 (cons t1 stack)) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2))))))) /\
                  (forall (x_4:pointer),
                   (~(reachable alloc l r root x_4) -> (acc m0 x_4) =
                    (acc m x_4)))) /\
                  (forall (x_3:pointer),
                   (~(x_3 = null) /\ (reachable alloc l r root x_3) ->
                    (valid alloc x_3))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (Pre33: (~(t1 = null) -> (valid alloc t1))),
  forall (Test5: t1 = null \/ ~(t1 = null) /\ (acc m0 t1) <> 0),
  forall (Pre32: (valid alloc p1)),
  forall (Test4: (acc c0 p1) <> 0),
  forall (q: pointer),
  forall (Post31: q = t1),
  forall (t2: pointer),
  forall (Post26: t2 = p1),
  forall (p2: pointer),
  forall (Post27: p2 = (acc r0 p1)),
  forall (caduceus_7: pointer),
  forall (Post30: caduceus_7 = t2),
  (valid alloc caduceus_7).
Proof.
(* validity of t in 't->r = q' in the first branch of if *)
 intuition;subst;auto.
Save.

Axiom Essai :(forall (l : memory pointer), forall p: pointer, (upd l p null) = (upd (upd l p null) p null)). 
 
(* Why obligation from file "why/schorr_waite.why", characters 2901-2948 *)
Lemma schorr_waite_impl_po_5 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  (~(x = null) /\ (reachable alloc l r root x) ->
                   (valid alloc x) /\ (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x_7:pointer),
                  ((reachable alloc l r root x_7) ->
                   (reachable alloc l0 r0 t1 x_7) \/
                   (reachable alloc l0 r0 p1 x_7))) /\
                 (exists stack:plist,
                  ((((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p_0:pointer),
                   ((in_list p_0 stack) -> (acc m0 p_0) <> 0))) /\
                  (forall (x_6:pointer),
                   (((valid alloc x_6) /\ (reachable alloc l r root x_6)) /\
                    (acc m0 x_6) = 0 ->
                    (unmarked_reachable alloc l0 m0 r0 t1 x_6) \/
                    (exists y:pointer, (in_list y stack) /\
                     (unmarked_reachable alloc l0 m0 r0 (acc r0 y) x_6))))) /\
                  (forall (x_5:pointer),
                   (~(in_list x_5 stack) -> (acc r0 x_5) = (acc r x_5) /\
                    (acc l0 x_5) = (acc l x_5)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 (cons t1 stack)) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2))))))) /\
                  (forall (x_4:pointer),
                   (~(reachable alloc l r root x_4) -> (acc m0 x_4) =
                    (acc m x_4)))) /\
                  (forall (x_3:pointer),
                   (~(x_3 = null) /\ (reachable alloc l r root x_3) ->
                    (valid alloc x_3))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (Pre33: (~(t1 = null) -> (valid alloc t1))),
  forall (Test5: t1 = null \/ ~(t1 = null) /\ (acc m0 t1) <> 0),
  forall (Pre32: (valid alloc p1)),
  forall (Test4: (acc c0 p1) <> 0),
  forall (q: pointer),
  forall (Post31: q = t1),
  forall (t2: pointer),
  forall (Post26: t2 = p1),
  forall (p2: pointer),
  forall (Post27: p2 = (acc r0 p1)),
  forall (caduceus_7: pointer),
  forall (Post30: caduceus_7 = t2),
  forall (Pre31: (valid alloc caduceus_7)),
  forall (r1: ((memory) pointer)),
  forall (Post64: r1 = (upd r0 caduceus_7 q)),
  ((forall (x_7:pointer),
    ((reachable alloc l r root x_7) -> (reachable alloc l0 r1 t2 x_7) \/
     (reachable alloc l0 r1 p2 x_7))) /\
  (exists stack:plist, ((((((clr_list alloc c0 l0 r1 p2 stack) /\
   (forall (p_0:pointer), ((in_list p_0 stack) -> (acc m0 p_0) <> 0))) /\
   (forall (x_6:pointer),
    (((valid alloc x_6) /\ (reachable alloc l r root x_6)) /\ (acc m0 x_6) =
     0 -> (unmarked_reachable alloc l0 m0 r1 t2 x_6) \/
     (exists y:pointer, (in_list y stack) /\
      (unmarked_reachable alloc l0 m0 r1 (acc r1 y) x_6))))) /\
   (forall (x_5:pointer),
    (~(in_list x_5 stack) -> (acc r1 x_5) = (acc r x_5) /\
     (acc l0 x_5) = (acc l x_5)))) /\
   (forall (p1:pointer),
    (forall (p2:pointer),
     ((pair_in_list p1 p2 (cons t2 stack)) ->
      (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\ (acc r p2) = p1)) /\
      (((acc c0 p2) = 0 -> (acc l p2) = p1 /\ (acc r p2) = (acc r1 p2))))))) /\
   (forall (x_4:pointer),
    (~(reachable alloc l r root x_4) -> (acc m0 x_4) = (acc m x_4)))) /\
   (forall (x_3:pointer),
    (~(x_3 = null) /\ (reachable alloc l r root x_3) -> (valid alloc x_3))))) /\
  (Zwf 0 0 0).
Proof.
(* preservation of loop invariant for the first branch of if "pop" *)
intuition.
generalize (H x_7 H3).
subst.
intro.
inversion_clear H2.
left.
inversion H4;subst.
apply Path_right;auto.
assert (acc (upd r0 p1 null) p1 = null).
apply acc_upd.
rewrite H2.
apply Path_null.
inversion H2.
elim H6.
auto.
inversion H2.
elim H6.
auto.
inversion H4;subst.
left.
apply Path_null.
left.
apply Path_left;auto.
replace (upd (upd r0 p1 null) p1 null) with (upd r0 p1 null).
auto.
apply Essai.
right.
clear H H1 H3 H0 H4 H2 Pre31 Pre34 Pre32 Pre37 Pre33 Test4 root l m r.

induction H5.
apply Path_null.
apply Path_left;auto.



inversion_clear H0;subst.
exists (cons p1 x0).
intuition.
apply clr_list_cons.



Save.
*)

(* Why obligation from file "why/schorr_waite.why", characters 3096-3132 *)
Lemma schorr_waite_impl_po_6 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  (~(x = null) /\ (reachable alloc l r root x) ->
                   (valid alloc x) /\ (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x_7:pointer),
                  ((reachable alloc l r root x_7) ->
                   (reachable alloc l0 r0 t1 x_7) \/
                   (reachable alloc l0 r0 p1 x_7))) /\
                 (exists stack:plist,
                  ((((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p_0:pointer),
                   ((in_list p_0 stack) -> (acc m0 p_0) <> 0))) /\
                  (forall (x_6:pointer),
                   (((valid alloc x_6) /\ (reachable alloc l r root x_6)) /\
                    (acc m0 x_6) = 0 ->
                    (unmarked_reachable alloc l0 m0 r0 t1 x_6) \/
                    (exists y:pointer, (in_list y stack) /\
                     (unmarked_reachable alloc l0 m0 r0 (acc r0 y) x_6))))) /\
                  (forall (x_5:pointer),
                   (~(in_list x_5 stack) -> (acc r0 x_5) = (acc r x_5) /\
                    (acc l0 x_5) = (acc l x_5)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 (cons t1 stack)) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2))))))) /\
                  (forall (x_4:pointer),
                   (~(reachable alloc l r root x_4) -> (acc m0 x_4) =
                    (acc m x_4)))) /\
                  (forall (x_3:pointer),
                   (~(x_3 = null) /\ (reachable alloc l r root x_3) ->
                    (valid alloc x_3))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (Pre33: (~(t1 = null) -> (valid alloc t1))),
  forall (Test5: t1 = null \/ ~(t1 = null) /\ (acc m0 t1) <> 0),
  forall (Pre32: (valid alloc p1)),
  forall (Test3: (acc c0 p1) = 0),
  forall (q_0: pointer),
  forall (Post25: q_0 = t1),
  forall (t2: pointer),
  forall (Post14: t2 = (acc r0 p1)),
  forall (caduceus_6: pointer),
  forall (Post18: caduceus_6 = p1),
  forall (Pre19: (valid alloc p1)),
  forall (aux_1: pointer),
  forall (Post17: aux_1 = (acc l0 p1)),
  (valid alloc caduceus_6).
Proof.
(* validity of p in "p->r = p->l" in second branch of if "swing" *)
intuition; subst;auto.
Qed.

(* Why obligation from file "why/schorr_waite.why", characters 3096-3132 *)
Lemma schorr_waite_impl_po_7 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  (~(x = null) /\ (reachable alloc l r root x) ->
                   (valid alloc x) /\ (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x_7:pointer),
                  ((reachable alloc l r root x_7) ->
                   (reachable alloc l0 r0 t1 x_7) \/
                   (reachable alloc l0 r0 p1 x_7))) /\
                 (exists stack:plist,
                  ((((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p_0:pointer),
                   ((in_list p_0 stack) -> (acc m0 p_0) <> 0))) /\
                  (forall (x_6:pointer),
                   (((valid alloc x_6) /\ (reachable alloc l r root x_6)) /\
                    (acc m0 x_6) = 0 ->
                    (unmarked_reachable alloc l0 m0 r0 t1 x_6) \/
                    (exists y:pointer, (in_list y stack) /\
                     (unmarked_reachable alloc l0 m0 r0 (acc r0 y) x_6))))) /\
                  (forall (x_5:pointer),
                   (~(in_list x_5 stack) -> (acc r0 x_5) = (acc r x_5) /\
                    (acc l0 x_5) = (acc l x_5)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 (cons t1 stack)) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2))))))) /\
                  (forall (x_4:pointer),
                   (~(reachable alloc l r root x_4) -> (acc m0 x_4) =
                    (acc m x_4)))) /\
                  (forall (x_3:pointer),
                   (~(x_3 = null) /\ (reachable alloc l r root x_3) ->
                    (valid alloc x_3))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (Pre33: (~(t1 = null) -> (valid alloc t1))),
  forall (Test5: t1 = null \/ ~(t1 = null) /\ (acc m0 t1) <> 0),
  forall (Pre32: (valid alloc p1)),
  forall (Test3: (acc c0 p1) = 0),
  forall (q_0: pointer),
  forall (Post25: q_0 = t1),
  forall (t2: pointer),
  forall (Post14: t2 = (acc r0 p1)),
  forall (caduceus_6: pointer),
  forall (Post18: caduceus_6 = p1),
  forall (Pre19: (valid alloc p1)),
  forall (aux_1: pointer),
  forall (Post17: aux_1 = (acc l0 p1)),
  forall (Pre17: (valid alloc caduceus_6)),
  forall (r1: ((memory) pointer)),
  forall (Post56: r1 = (upd r0 caduceus_6 aux_1)),
  (forall (result:pointer),
   (result = p1 ->
    (forall (l1:((memory) pointer)),
     (l1 = (upd l0 result q_0) ->
      (forall (result:pointer),
       (result = p1 ->
        (forall (c:((memory) Z)),
         (c = (upd c0 result 1) ->
          ((forall (x_7:pointer),
            ((reachable alloc l r root x_7) ->
             (reachable alloc l1 r1 t2 x_7) \/ (reachable alloc l1 r1 p1 x_7))) /\
          (exists stack:plist, ((((((clr_list alloc c l1 r1 p1 stack) /\
           (forall (p_0:pointer), ((in_list p_0 stack) -> (acc m0 p_0) <> 0))) /\
           (forall (x_6:pointer),
            (((valid alloc x_6) /\ (reachable alloc l r root x_6)) /\
             (acc m0 x_6) = 0 ->
             (unmarked_reachable alloc l1 m0 r1 t2 x_6) \/
             (exists y:pointer, (in_list y stack) /\
              (unmarked_reachable alloc l1 m0 r1 (acc r1 y) x_6))))) /\
           (forall (x_5:pointer),
            (~(in_list x_5 stack) -> (acc r1 x_5) = (acc r x_5) /\
             (acc l1 x_5) = (acc l x_5)))) /\
           (forall (p1:pointer),
            (forall (p2:pointer),
             ((pair_in_list p1 p2 (cons t2 stack)) ->
              (((acc c p2) <> 0 -> (acc l p2) = (acc l1 p2) /\
                (acc r p2) = p1)) /\
              (((acc c p2) = 0 -> (acc l p2) = p1 /\ (acc r p2) = (acc r1 p2))))))) /\
           (forall (x_4:pointer),
            (~(reachable alloc l r root x_4) -> (acc m0 x_4) = (acc m x_4)))) /\
           (forall (x_3:pointer),
            (~(x_3 = null) /\ (reachable alloc l r root x_3) ->
             (valid alloc x_3))))) /\
          (Zwf 0 0 0))) /\
        (valid alloc result))))) /\
    (valid alloc result))).
Proof.
(* preservation of loop invariant, and also ..., in the "swing" case *)
(*
intuition.
generalize (H x H7).
intros.
*)
Admitted.

(* Why obligation from file "why/schorr_waite.why", characters 3396-3408 *)
Lemma schorr_waite_impl_po_8 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  (~(x = null) /\ (reachable alloc l r root x) ->
                   (valid alloc x) /\ (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x_7:pointer),
                  ((reachable alloc l r root x_7) ->
                   (reachable alloc l0 r0 t1 x_7) \/
                   (reachable alloc l0 r0 p1 x_7))) /\
                 (exists stack:plist,
                  ((((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p_0:pointer),
                   ((in_list p_0 stack) -> (acc m0 p_0) <> 0))) /\
                  (forall (x_6:pointer),
                   (((valid alloc x_6) /\ (reachable alloc l r root x_6)) /\
                    (acc m0 x_6) = 0 ->
                    (unmarked_reachable alloc l0 m0 r0 t1 x_6) \/
                    (exists y:pointer, (in_list y stack) /\
                     (unmarked_reachable alloc l0 m0 r0 (acc r0 y) x_6))))) /\
                  (forall (x_5:pointer),
                   (~(in_list x_5 stack) -> (acc r0 x_5) = (acc r x_5) /\
                    (acc l0 x_5) = (acc l x_5)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 (cons t1 stack)) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2))))))) /\
                  (forall (x_4:pointer),
                   (~(reachable alloc l r root x_4) -> (acc m0 x_4) =
                    (acc m x_4)))) /\
                  (forall (x_3:pointer),
                   (~(x_3 = null) /\ (reachable alloc l r root x_3) ->
                    (valid alloc x_3))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (Pre33: (~(t1 = null) -> (valid alloc t1))),
  forall (Test2: ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (q_1: pointer),
  forall (Post13: q_1 = p1),
  forall (p2: pointer),
  forall (Post2: p2 = t1),
  (valid alloc t1).
Proof.
(* validity of t in "t->l" in the "push" case *)
intuition.
Save.

(* Why obligation from file "why/schorr_waite.why", characters 3458-3484 *)
Lemma schorr_waite_impl_po_9 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  (~(x = null) /\ (reachable alloc l r root x) ->
                   (valid alloc x) /\ (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x_7:pointer),
                  ((reachable alloc l r root x_7) ->
                   (reachable alloc l0 r0 t1 x_7) \/
                   (reachable alloc l0 r0 p1 x_7))) /\
                 (exists stack:plist,
                  ((((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p_0:pointer),
                   ((in_list p_0 stack) -> (acc m0 p_0) <> 0))) /\
                  (forall (x_6:pointer),
                   (((valid alloc x_6) /\ (reachable alloc l r root x_6)) /\
                    (acc m0 x_6) = 0 ->
                    (unmarked_reachable alloc l0 m0 r0 t1 x_6) \/
                    (exists y:pointer, (in_list y stack) /\
                     (unmarked_reachable alloc l0 m0 r0 (acc r0 y) x_6))))) /\
                  (forall (x_5:pointer),
                   (~(in_list x_5 stack) -> (acc r0 x_5) = (acc r x_5) /\
                    (acc l0 x_5) = (acc l x_5)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 (cons t1 stack)) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2))))))) /\
                  (forall (x_4:pointer),
                   (~(reachable alloc l r root x_4) -> (acc m0 x_4) =
                    (acc m x_4)))) /\
                  (forall (x_3:pointer),
                   (~(x_3 = null) /\ (reachable alloc l r root x_3) ->
                    (valid alloc x_3))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (Pre33: (~(t1 = null) -> (valid alloc t1))),
  forall (Test2: ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (q_1: pointer),
  forall (Post13: q_1 = p1),
  forall (p2: pointer),
  forall (Post2: p2 = t1),
  forall (t2: pointer),
  forall (Post3: t2 = (acc l0 t1)),
  forall (caduceus_3: pointer),
  forall (Post6: caduceus_3 = p2),
  (valid alloc caduceus_3).
Proof.
(* validity of p in "p->l = q" in the "push" case *)
intuition;subst;auto.
Save.

(* Why obligation from file "why/schorr_waite.why", characters 3435-3484 *)
Lemma schorr_waite_impl_po_10 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  (~(x = null) /\ (reachable alloc l r root x) ->
                   (valid alloc x) /\ (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x_7:pointer),
                  ((reachable alloc l r root x_7) ->
                   (reachable alloc l0 r0 t1 x_7) \/
                   (reachable alloc l0 r0 p1 x_7))) /\
                 (exists stack:plist,
                  ((((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p_0:pointer),
                   ((in_list p_0 stack) -> (acc m0 p_0) <> 0))) /\
                  (forall (x_6:pointer),
                   (((valid alloc x_6) /\ (reachable alloc l r root x_6)) /\
                    (acc m0 x_6) = 0 ->
                    (unmarked_reachable alloc l0 m0 r0 t1 x_6) \/
                    (exists y:pointer, (in_list y stack) /\
                     (unmarked_reachable alloc l0 m0 r0 (acc r0 y) x_6))))) /\
                  (forall (x_5:pointer),
                   (~(in_list x_5 stack) -> (acc r0 x_5) = (acc r x_5) /\
                    (acc l0 x_5) = (acc l x_5)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 (cons t1 stack)) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2))))))) /\
                  (forall (x_4:pointer),
                   (~(reachable alloc l r root x_4) -> (acc m0 x_4) =
                    (acc m x_4)))) /\
                  (forall (x_3:pointer),
                   (~(x_3 = null) /\ (reachable alloc l r root x_3) ->
                    (valid alloc x_3))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test6: ~(p1 = null) \/ p1 = null /\ ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (Pre33: (~(t1 = null) -> (valid alloc t1))),
  forall (Test2: ~(t1 = null) /\ (acc m0 t1) = 0),
  forall (q_1: pointer),
  forall (Post13: q_1 = p1),
  forall (p2: pointer),
  forall (Post2: p2 = t1),
  forall (t2: pointer),
  forall (Post3: t2 = (acc l0 t1)),
  forall (caduceus_3: pointer),
  forall (Post6: caduceus_3 = p2),
  forall (Pre7: (valid alloc caduceus_3)),
  forall (l1: ((memory) pointer)),
  forall (Post48: l1 = (upd l0 caduceus_3 q_1)),
  (forall (result:pointer),
   (result = p2 ->
    (forall (m1:((memory) Z)),
     (m1 = (upd m0 result 1) ->
      (forall (result:pointer),
       (result = p2 ->
        (forall (c:((memory) Z)),
         (c = (upd c0 result 0) ->
          ((forall (x_7:pointer),
            ((reachable alloc l r root x_7) ->
             (reachable alloc l1 r0 t2 x_7) \/ (reachable alloc l1 r0 p2 x_7))) /\
          (exists stack:plist, ((((((clr_list alloc c l1 r0 p2 stack) /\
           (forall (p_0:pointer), ((in_list p_0 stack) -> (acc m1 p_0) <> 0))) /\
           (forall (x_6:pointer),
            (((valid alloc x_6) /\ (reachable alloc l r root x_6)) /\
             (acc m1 x_6) = 0 ->
             (unmarked_reachable alloc l1 m1 r0 t2 x_6) \/
             (exists y:pointer, (in_list y stack) /\
              (unmarked_reachable alloc l1 m1 r0 (acc r0 y) x_6))))) /\
           (forall (x_5:pointer),
            (~(in_list x_5 stack) -> (acc r0 x_5) = (acc r x_5) /\
             (acc l1 x_5) = (acc l x_5)))) /\
           (forall (p1:pointer),
            (forall (p2:pointer),
             ((pair_in_list p1 p2 (cons t2 stack)) ->
              (((acc c p2) <> 0 -> (acc l p2) = (acc l1 p2) /\
                (acc r p2) = p1)) /\
              (((acc c p2) = 0 -> (acc l p2) = p1 /\ (acc r p2) = (acc r0 p2))))))) /\
           (forall (x_4:pointer),
            (~(reachable alloc l r root x_4) -> (acc m1 x_4) = (acc m x_4)))) /\
           (forall (x_3:pointer),
            (~(x_3 = null) /\ (reachable alloc l r root x_3) ->
             (valid alloc x_3))))) /\
          (Zwf 0 0 0))) /\
        (valid alloc result))))) /\
    (valid alloc result))).
Proof.
(* preservation of the loop invariant in the "push" case *)
(*
intuition.
*)
Admitted.

(* Why obligation from file "why/schorr_waite.why", characters 287-3672 *)
Lemma schorr_waite_impl_po_11 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  (~(x = null) /\ (reachable alloc l r root x) ->
                   (valid alloc x) /\ (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  forall (Variant1: Z),
  forall (c0: ((memory) Z)),
  forall (l0: ((memory) pointer)),
  forall (m0: ((memory) Z)),
  forall (p1: pointer),
  forall (r0: ((memory) pointer)),
  forall (t1: pointer),
  forall (Pre36: Variant1 = 0),
  forall (Pre35: (forall (x_7:pointer),
                  ((reachable alloc l r root x_7) ->
                   (reachable alloc l0 r0 t1 x_7) \/
                   (reachable alloc l0 r0 p1 x_7))) /\
                 (exists stack:plist,
                  ((((((clr_list alloc c0 l0 r0 p1 stack) /\
                  (forall (p_0:pointer),
                   ((in_list p_0 stack) -> (acc m0 p_0) <> 0))) /\
                  (forall (x_6:pointer),
                   (((valid alloc x_6) /\ (reachable alloc l r root x_6)) /\
                    (acc m0 x_6) = 0 ->
                    (unmarked_reachable alloc l0 m0 r0 t1 x_6) \/
                    (exists y:pointer, (in_list y stack) /\
                     (unmarked_reachable alloc l0 m0 r0 (acc r0 y) x_6))))) /\
                  (forall (x_5:pointer),
                   (~(in_list x_5 stack) -> (acc r0 x_5) = (acc r x_5) /\
                    (acc l0 x_5) = (acc l x_5)))) /\
                  (forall (p1:pointer),
                   (forall (p2:pointer),
                    ((pair_in_list p1 p2 (cons t1 stack)) ->
                     (((acc c0 p2) <> 0 -> (acc l p2) = (acc l0 p2) /\
                       (acc r p2) = p1)) /\
                     (((acc c0 p2) = 0 -> (acc l p2) = p1 /\
                       (acc r p2) = (acc r0 p2))))))) /\
                  (forall (x_4:pointer),
                   (~(reachable alloc l r root x_4) -> (acc m0 x_4) =
                    (acc m x_4)))) /\
                  (forall (x_3:pointer),
                   (~(x_3 = null) /\ (reachable alloc l r root x_3) ->
                    (valid alloc x_3))))),
  forall (Pre34: (p1 = null -> (~(t1 = null) -> (valid alloc t1)))),
  forall (Test1: p1 = null /\ (t1 = null \/ ~(t1 = null) /\ (acc m0 t1) <> 0)),
  ((forall (x_2:pointer), (acc l x_2) = (acc l0 x_2) /\
    (acc r x_2) = (acc r0 x_2)) /\
  (forall (x_1:pointer),
   ((valid alloc x_1) /\ (reachable alloc l0 r0 root x_1) -> (acc m0 x_1) <>
    0))) /\
  (forall (x_0:pointer),
   (~(reachable alloc l0 r0 root x_0) -> (acc m0 x_0) = (acc m x_0))).
Proof.
(* post-condition of the function *)
intuition.
inversion_clear H0; intuition.
subst p1.
inversion H4.
subst x0.
generalize (H8 x); intuition.
inversion H1.
elim H14.
auto.
inversion_clear H0; intuition.
subst p1.
inversion H4.
subst x0.
generalize (H8 x); intuition.
inversion H1.
elim H14.
auto.
inversion_clear H0; intuition.
subst p1.
inversion H4.
subst x0.
generalize (H12 x).
intuition.
assert (reachable alloc l r root x).
apply reachable_unchanged with l0 r0 ;auto.
generalize (H14 H1 H5);intros.
inversion_clear H15.
subst t1.
inversion H16.
subst;elim H6.
intros.
elim H0;auto.
subst.
inversion H3.
elim H0;auto.
inversion H3.
elim H0;auto.
inversion H16.
inversion H15.
inversion H17.
inversion H1.
elim H17;auto.
inversion_clear H0; intuition.
apply H7.
intro.
apply H4.
apply reachable_unchanged with l r ;auto.
intro.
assert (in_list x1 x0 -> False).
subst p1.
inversion H5.
subst x0.
auto.
inversion H12.
elim H16;auto.
generalize (H9 x1 H12).
intuition.
intuition.
inversion_clear H0; intuition.
subst p1.
inversion H3.
subst x0.
generalize (H9 x); intuition.
inversion H1.
elim H15.
auto.
inversion_clear H0; intuition.
subst p1.
inversion H3.
subst x0.
generalize (H9 x); intuition.
inversion H1.
elim H15.
auto.
inversion_clear H0; intuition.
subst p1.
inversion H3.
subst x0.
generalize (H13 x).
intuition.
assert (reachable alloc l r root x).
apply reachable_unchanged with l0 r0 ;auto.
generalize (H15 H1 H6);intros.
inversion_clear H16.
inversion H17;auto.
subst.
auto.
inversion H17.
inversion H16.
inversion H18.
inversion H1.
elim H18;auto.
inversion_clear H0; intuition.
apply H8.
intro.
apply H3.
apply reachable_unchanged with l r ;auto.
intro.
assert (in_list x1 x0 -> False).
subst p1.
inversion H6.
subst x0.
auto.
inversion H13.
elim H17;auto.
generalize (H10 x1 H13).
intuition.
Save.

(* Why obligation from file "why/schorr_waite.why", characters 645-2557 *)
Lemma schorr_waite_impl_po_12 : 
  forall (root: pointer),
  forall (alloc: alloc_table),
  forall (c: ((memory) Z)),
  forall (l: ((memory) pointer)),
  forall (m: ((memory) Z)),
  forall (r: ((memory) pointer)),
  forall (Pre37: (forall (x:pointer),
                  (~(x = null) /\ (reachable alloc l r root x) ->
                   (valid alloc x) /\ (acc m x) = 0))),
  forall (t: pointer),
  forall (Post35: t = root),
  forall (p: pointer),
  forall (Post34: p = null),
  (forall (x_7:pointer),
   ((reachable alloc l r root x_7) -> (reachable alloc l r t x_7) \/
    (reachable alloc l r p x_7))) /\
  (exists stack:plist, ((((((clr_list alloc c l r p stack) /\
   (forall (p_0:pointer), ((in_list p_0 stack) -> (acc m p_0) <> 0))) /\
   (forall (x_6:pointer),
    (((valid alloc x_6) /\ (reachable alloc l r root x_6)) /\ (acc m x_6) =
     0 -> (unmarked_reachable alloc l m r t x_6) \/
     (exists y:pointer, (in_list y stack) /\
      (unmarked_reachable alloc l m r (acc r y) x_6))))) /\
   (forall (x_5:pointer),
    (~(in_list x_5 stack) -> (acc r x_5) = (acc r x_5) /\
     (acc l x_5) = (acc l x_5)))) /\
   (forall (p1:pointer),
    (forall (p2:pointer),
     ((pair_in_list p1 p2 (cons t stack)) ->
      (((acc c p2) <> 0 -> (acc l p2) = (acc l p2) /\ (acc r p2) = p1)) /\
      (((acc c p2) = 0 -> (acc l p2) = p1 /\ (acc r p2) = (acc r p2))))))) /\
   (forall (x_4:pointer),
    (~(reachable alloc l r root x_4) -> (acc m x_4) = (acc m x_4)))) /\
   (forall (x_3:pointer),
    (~(x_3 = null) /\ (reachable alloc l r root x_3) -> (valid alloc x_3)))).
Proof.
(* loop invariant true at the beginning *)
intuition.
left; subst; auto.
exists (@nil pointer).
intuition.
constructor.
left; subst; auto.
simpl in H; tauto.
simpl in H; tauto.
Save.

