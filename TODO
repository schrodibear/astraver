
INPUT
=====

FEATURES
========

 - Java input
   see http://home.inreach.com/bronikov/grammars/java.html

 - pure code output (with annotations as comments)

 - functional code output (mainly to check the interpretation; auto-check?)

 - arguments which are types

 - option to suppress termination obligations (i.e. partial correctness)

 - mutually recursive functions 
   (many variants over the same type, one relation)

DOCUMENTATION
=============

 - bibliography

 - examples

BUGS
====

 - clash between global and local references:
   =======================================================
   external x : int ref
   let f = fun (u:unit) -> x := 0
   let g = fun (x':int ref) -> begin (f void); x' := 1 end
   =======================================================
   => rename locals (globals are unique)

IMPLEMENTATION
==============

