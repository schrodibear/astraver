(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Why.
Require Omega.

Parameter q : Z -> Prop.

Lemma p1_po_1 : 
  (x: Z)
  (Pre1: (q `x + 1`))
  (x0: Z)
  (Post1: x0 = `x + 1`)
  (q x0).
Proof. 
Intuition Rewrite Post1.
Save.

Lemma p2_po_1 : 
  (Pre1: (q `7`))
  (x0: Z)
  (Post1: x0 = `3 + 4`)
  (q x0).
Proof.
Intuition Rewrite Post1.
Save.

Lemma p3_po_1 : 
  (x: Z)
  (x0: Z)
  (Post1: x0 = `x + 1`)
  (x1: Z)
  (Post2: x1 = `x0 + 2`)
  x1 = `x + 3`.
Proof. 
Intros; Omega.
Save.

Lemma p4_po_1 : 
  (x0: Z)
  (Post1: x0 = `7`)
  (x1: Z)
  (Post2: x1 = `2 * x0`)
  x1 = `14`.
Proof. 
Intros; Omega.
Save.

Lemma p5_po_1 : 
  `3 + 4` = `7`.
Proof.
Omega.
Save.

Lemma p6_po_1 : 
  (result: Z)
  (Post1: result = `3`)
  `result + 4` = `7`.
Proof.
Intros; Omega.
Save.

Lemma p7_po_1 : 
  (result: Z)
  (Post1: result = `4`)
  `3 + (result + result)` = `11`.
Proof.
Intros; Omega.
Save.

Lemma p8_po_1 : 
  (x: Z)
  (Pre1: (q `x + 1`))
  (x0: Z)
  (Post1: x0 = `x + 1`)
  (q x0) /\ `3 + x0` = `x + 4`.
Proof.
Intuition; Rewrite Post1; Assumption.
Save.

Lemma p9_po_1 : 
  (x0: Z)
  (Post2: x0 = `2`)
  ((x:Z) (x = `1` -> `1 + 1` = `2` /\ x = `1`)).
Proof.
Intuition.
Save.

Lemma p9_po_2 : 
  (result: Z)
  (Post3: ((x:Z) (x = `1` -> `1 + result` = `2` /\ x = `1`)))
  (x1: Z)
  (Post1: x1 = `1`)
  `1 + result` = `2` /\ x1 = `1`.
Proof.
Intuition.
Save.

