/*
@OPTIONS: -ai polwp
*/

type intP = {
    integer intM;
}

type int16 = -32768..32767

integer binary_search(intP[..] t, integer n, integer v) {
    integer low = 0;
    integer up = (n-1) :> int16;
    while (low <= up ) ; {
	integer m = (((low + up) :> int16) / 2) :> int16;
	if ((t + m).intM < v)
	    low = (m + 1) :> int16;
	else if ((t + m).intM > v)
	    up = (m - 1) :> int16;
	else {
	    return m;
	}
    }
    return -1;
}

/*
Local Variables: 
mode: java
compile-command: "make binary_search_overflow_bad"
End: 
*/
