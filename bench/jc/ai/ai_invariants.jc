
# InvariantPolicy = Arguments
# AnnotationPolicy = Invariants
# AbstractDomain = Box

/*
  @OPTIONS: -main main
*/


type intM = { integer intP; }

type C1 = {
  intM[0..] t;
  invariant t_inv(this) = this.t != null &&
                          \offset_max(this.t) + 1 >= 1;
}

type C2 = {

}

intM[0..] st;

invariant st_inv : st != null && \offset_max(st) + 1 >= 1

unit m(C1[0] this, intM[0..] p) {  
   (p + 0).intP = 1;
}

unit main(C1[0] this) {  
   m(this, this.t);
   m(this, st);
}
