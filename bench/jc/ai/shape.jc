
/*
example taken from "Coping with Type Casts in C"
*/

type shape_kind = 0..1

type Shape = {
  shape_kind kind;
  invariant dicr(s) = (s.kind == 0 ==> s <: Circle)
		   && (s.kind == 1 ==> s <: Rectangle);
}

and type Circle = Shape with {
  real radius;
}

and type Rectangle = Shape with {
  real length;
  real width;
}

real circ_area(Circle[..] s) {
  return s.radius * s.radius * 3.14;
}

real rect_area(Rectangle[..] s) {
  return s.length * s.width;
}

real area(Shape[..] s)
  requires \mutable(s, Shape);
{
    if (s.kind == 0) {
    return circ_area(s:>Circle);
    } else if (s.kind == 1) {
    return rect_area(s:>Rectangle);
  }
  else return 0.;
}

/*
Local Variables: 
mode: java
compile-command: "make shape"
End: 
*/
