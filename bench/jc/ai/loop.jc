type integerT = { integer integerM; }


integer test0(integerT[0..10] t) 
  requires true;
  behavior test0:
    assigns t;
    ensures true;
{
  integer x = 0;
  while(x <= 9) 
    invariant true;
    variant 10 - x;
  {
    (t + x).integerM = x;
    x++;
  }
}

integer test1(integerT[0..10] t, integer max)
  requires true;
  behavior test0:
    assigns t;
    ensures true;
{
  integer x = 0;
  while(x <= max) 
    invariant true;
    variant 10 - x;
  {
    (t + x).integerM = x;
    x++;
  }
}
