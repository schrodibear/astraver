
typedef GF2  := mod[ 2 ];
typedef GF2N := mod[ GF2<X> / X**8 + X**4 + X**3 + X + 1 ];
typedef GF2V := vector[8] of GF2;

typedef S    := matrix[4,4] of GF2N;
typedef K    := matrix[4,4] of GF2N;

typedef Row  := matrix[1,4] of GF2N;
typedef RowV := vector[4] of GF2N;
typedef Col  := matrix[4,1] of GF2N;
typedef ColV := vector[4] of GF2N;

typedef Byte := unsigned bits[8];
typedef Bit  := unsigned bits[1];

  def M : matrix[8,8] of GF2 := { [1], [0], [0], [0], [1], [1], [1], [1],
                                [1], [1], [0], [0], [0], [1], [1], [1],
                                [1], [1], [1], [0], [0], [0], [1], [1],
                                [1], [1], [1], [1], [0], [0], [0], [1],
                                [1], [1], [1], [1], [1], [0], [0], [0],
                                [0], [1], [1], [1], [1], [1], [0], [0],
                                [0], [0], [1], [1], [1], [1], [1], [0],
                                [0], [0], [0], [1], [1], [1], [1], [1] };
                                 
  def C : vector[8]   of GF2 := { [1], [1], [0], [0], [0], [1], [1], [0] };


def SBox( e : GF2N ) : GF2N
{
  def x : GF2N;
  if (e == [0]) { x := [0]; }
  else { 
  /*@ assert e!=[0] */
  x := [1] / e; }
  
  def A : matrix[8,1] of GF2 := (matrix[8,1] of GF2)((GF2V)x);
  def B : GF2V := (GF2V)(M*A);
  return ((GF2N)B) + ((GF2N)C);
}