# InvariantPolicy = Arguments


type A = {
    integer i;
    boolean is_b;
    invariant is_b_inv(this) = this.is_b ==> this <: B;
}

tag B = A with {
    integer j;
}

boolean equal(A[0] a, A[0] b)
    requires \typeeq(\typeof(a), \typeof(b));
{
    if a.is_b then {
	return a.i == b.i && (a :> B).j == (b :> B).j;
    } else {
	return a.i == b.i;
    }
}

/*
Local Variables: 
mode: java
compile-command: "make typeof"
End: 
*/
