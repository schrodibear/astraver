type Family = {
  rep Person[0] mother;
  rep Person[0] father;
}
and type Person = {
  rep Family[0] family;
  integer age;
  invariant age_inv(this) = this.family.mother.age > this.age && this.family.father.age > this.age;
}

unit m(Person[0] this)
  requires this.age > 0;
  behavior ok:
    ensures true;
{
  this.age = 0; // ok thanks to the require
}

boolean older(Person[0] p1, Person[0] p2)
  requires true;
  behavior ok:
    ensures \result <==> p1.age > p2.age;
{
  return p1.age > p2.age;
}