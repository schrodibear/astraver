(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Why.

(* Why obligation from file "good-c/break.c", characters 34-82 *)
Lemma f1_po_1 : 
  (Variant1: Z)
  (Pre3: Variant1 = `1`)
  (Test2: `1 <> 0`)
  (Post2: (Zwf `0` `1` `1`))
  (Zwf `0` `1` Variant1).
Proof.
Intros; Subst Variant1; Trivial.
Save.

(* Why obligation from file "good-c/break.c", characters 227-233 *)
Lemma f2_po_1 : 
  (n: Z)
  (Post4: n = `10`)
  (Variant1: Z)
  (n1: Z)
  (Pre3: Variant1 = n1)
  (Pre2: `0 <= n1`)
  (Test4: `n1 >= 0`)
  (Test3: `n1 = 0`)
  (n2: Z)
  (Post1: n2 = `n1 + 1`)
  `n2 = 1`.
Proof.
Intuition.
Save.

(* Why obligation from file "good-c/break.c", characters 208-235 *)
Lemma f2_po_2 : 
  (n: Z)
  (Post4: n = `10`)
  (Variant1: Z)
  (n1: Z)
  (Pre3: Variant1 = n1)
  (Pre2: `0 <= n1`)
  (Test4: `n1 >= 0`)
  (Test2: `n1 <> 0`)
  ((n:Z) (n = `n1 - 1` -> `0 <= n` /\ (Zwf `0` n n1))).
Proof.
Unfold Zwf; Intuition.
Save.

(* Why obligation from file "good-c/break.c", characters 182-188 *)
Lemma f2_po_3 : 
  (n: Z)
  (Post4: n = `10`)
  `0 <= n`.
Proof.
Unfold Zwf; Intuition.
Save.

(* Why obligation from file "good-c/break.c", characters 147-248 *)
Lemma f2_po_4 : 
  (n: Z)
  (Post4: n = `10`)
  (n1: Z)
  (Post3: `0 <= n1` /\ `n1 < 0`)
  `n1 = 1`.
Proof.
Intros; Omega.
Save.


(* Why obligation from file "good-c/break.c", characters 395-401 *)
Lemma f3_po_1 : 
  (n: Z)
  (Post4: n = `10`)
  (Variant1: Z)
  (n1: Z)
  (Pre3: Variant1 = n1)
  (Pre2: `1 <= n1`)
  (Test4: `n1 >= 0`)
  (Test3: `n1 = 1`)
  (n2: Z)
  (Post1: n2 = `n1 + 1`)
  `n2 = 2`.
Proof.
Intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "good-c/break.c", characters 376-403 *)
Lemma f3_po_2 : 
  (n: Z)
  (Post4: n = `10`)
  (Variant1: Z)
  (n1: Z)
  (Pre3: Variant1 = n1)
  (Pre2: `1 <= n1`)
  (Test4: `n1 >= 0`)
  (Test2: `n1 <> 1`)
  ((n:Z) (n = `n1 - 1` -> `1 <= n` /\ (Zwf `0` n n1))).
Proof.
Intuition.
Save.

(* Why obligation from file "good-c/break.c", characters 350-356 *)
Lemma f3_po_3 : 
  (n: Z)
  (Post4: n = `10`)
  `1 <= n`.
Proof.
Intuition.
Save.

(* Why obligation from file "good-c/break.c", characters 315-416 *)
Lemma f3_po_4 : 
  (n: Z)
  (Post4: n = `10`)
  (n1: Z)
  (Post3: `1 <= n1` /\ `n1 < 0`)
  `n1 = 2`.
Proof.
Intuition.
Save.


(* Why obligation from file "good-c/break.c", characters 576-594 *)
Lemma f4_po_1 : 
  (i: Z)
  (Post4: i = `0`)
  (i1: Z)
  (Post1: i1 = `0`)
  (Variant1: Z)
  (i2: Z)
  (Pre3: Variant1 = `10 - i2`)
  (Pre2: `i2 <= 3`)
  (Test4: `i2 < 10`)
  (Test2: `i2 <> 3`)
  ((i:Z) (i = `i2 + 1` -> `i <= 3` /\ (Zwf `0` `10 - i` `10 - i2`))).
Proof.
Intuition.
Save.

(* Why obligation from file "good-c/break.c", characters 539-545 *)
Lemma f4_po_2 : 
  (i: Z)
  (Post4: i = `0`)
  (i1: Z)
  (Post1: i1 = `0`)
  `i1 <= 3`.
Proof.
Intuition.
Save.

(* Why obligation from file "good-c/break.c", characters 495-600 *)
Lemma f4_po_3 : 
  (i: Z)
  (Post4: i = `0`)
  (i1: Z)
  (Post1: i1 = `0`)
  (i2: Z)
  (Post3: `i2 <= 3` /\ `i2 >= 10`)
  `i2 = 3`.
Proof.
Intuition.
Save.


