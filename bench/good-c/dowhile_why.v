(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Why.


(* Why obligation from file "good-c/dowhile.c", characters 91-126 *)
Lemma main_po_1 : 
  (x: Z)
  (Pre4: `x >= 0`)
  (x0: Z)
  (Post1: x0 = `0`)
  (i0: Z)
  (Post2: i0 = `10`)
  (x1: Z)
  (Post3: x1 = `x0 + 1`)
  (i1: Z)
  (Post4: i1 = `i0 - 1`)
  (Variant1: Z)
  (i2: Z)
  (x2: Z)
  (Pre3: Variant1 = i2)
  (Pre2: `x2 = 10 - i2` /\ `i2 >= 0`)
  (Test2: `i2 > 0`)
  (x3: Z)
  (Post5: x3 = `x2 + 1`)
  (i3: Z)
  (Post6: i3 = `i2 - 1`)
  (`x3 = 10 - i3` /\ `i3 >= 0`) /\ (Zwf `0` i3 i2).
Proof.
Intuition.
Save.

(* Why obligation from file "good-c/dowhile.c", characters 144-165 *)
Lemma main_po_2 : 
  (x: Z)
  (Pre4: `x >= 0`)
  (x0: Z)
  (Post1: x0 = `0`)
  (i0: Z)
  (Post2: i0 = `10`)
  (x1: Z)
  (Post3: x1 = `x0 + 1`)
  (i1: Z)
  (Post4: i1 = `i0 - 1`)
  `x1 = 10 - i1` /\ `i1 >= 0`.
Proof.
Intuition.
Save.

(* Why obligation from file "good-c/dowhile.c", characters 54-211 *)
Lemma main_po_3 : 
  (x: Z)
  (Pre4: `x >= 0`)
  (x0: Z)
  (Post1: x0 = `0`)
  (i0: Z)
  (Post2: i0 = `10`)
  (x1: Z)
  (Post3: x1 = `x0 + 1`)
  (i1: Z)
  (Post4: i1 = `i0 - 1`)
  (i2: Z)
  (x2: Z)
  (Post7: (`x2 = 10 - i2` /\ `i2 >= 0`) /\ `i2 <= 0`)
  `x2 = 10`.
Proof.
Intuition.
Save.



