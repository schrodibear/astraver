(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export flag_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma flag_impl_po_1 : 
  forall (A799:Set),
  forall (t: ((pointer) A799)),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (int_Z6: ((memory) Z A799)),
  forall (HW_1: (* File "flag.c", line 20, characters 5-83 *)
                ((valid_range alloc t 0 (n - 1)) /\
                (forall (k:Z),
                 (0 <= k /\ k < n -> (isColor (acc int_Z6 (shift t k))))))),
  (* File "flag.c", line 34, characters 7-210 *)
  ((((((((forall (k:Z),
          (0 <= k /\ k < n -> (isColor (acc int_Z6 (shift t k))))) /\
  0 <= 0) /\ 0 <= 0) /\ 0 <= n) /\ n <= n) /\
  (isMonochrome int_Z6 alloc t 0 (0 - 1) BLUE)) /\
  (isMonochrome int_Z6 alloc t 0 (0 - 1) WHITE)) /\
  (isMonochrome int_Z6 alloc t n (n - 1) RED)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma flag_impl_po_2 : 
  forall (A800:Set),
  forall (t: ((pointer) A800)),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (int_Z6: ((memory) Z A800)),
  forall (HW_1: (* File "flag.c", line 20, characters 5-83 *)
                ((valid_range alloc t 0 (n - 1)) /\
                (forall (k:Z),
                 (0 <= k /\ k < n -> (isColor (acc int_Z6 (shift t k))))))),
  forall (HW_2: (* File "flag.c", line 34, characters 7-210 *)
                ((((((((forall (k:Z),
                        (0 <= k /\ k < n ->
                         (isColor (acc int_Z6 (shift t k))))) /\
                0 <= 0) /\ 0 <= 0) /\ 0 <= n) /\ n <= n) /\
                (isMonochrome int_Z6 alloc t 0 (0 - 1) BLUE)) /\
                (isMonochrome int_Z6 alloc t 0 (0 - 1) WHITE)) /\
                (isMonochrome int_Z6 alloc t n (n - 1) RED))),
  forall (b: Z),
  forall (i: Z),
  forall (int_Z6_0: ((memory) Z A800)),
  forall (r: Z),
  forall (HW_3: (* File "flag.c", line 34, characters 7-210 *)
                ((((((((forall (k:Z),
                        (0 <= k /\ k < n ->
                         (isColor (acc int_Z6_0 (shift t k))))) /\
                0 <= b) /\ b <= i) /\ i <= r) /\ r <= n) /\
                (isMonochrome int_Z6_0 alloc t 0 (b - 1) BLUE)) /\
                (isMonochrome int_Z6_0 alloc t b (i - 1) WHITE)) /\
                (isMonochrome int_Z6_0 alloc t r (n - 1) RED))),
  forall (HW_4: i < r),
  forall (result: ((pointer) A800)),
  forall (HW_5: result = (shift t i)),
  (valid alloc result).
Proof.
unfold isColor; intuition.
subst.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma flag_impl_po_3 : 
  forall (A801:Set),
  forall (t: ((pointer) A801)),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (int_Z6: ((memory) Z A801)),
  forall (HW_1: (* File "flag.c", line 20, characters 5-83 *)
                ((valid_range alloc t 0 (n - 1)) /\
                (forall (k:Z),
                 (0 <= k /\ k < n -> (isColor (acc int_Z6 (shift t k))))))),
  forall (HW_2: (* File "flag.c", line 34, characters 7-210 *)
                ((((((((forall (k:Z),
                        (0 <= k /\ k < n ->
                         (isColor (acc int_Z6 (shift t k))))) /\
                0 <= 0) /\ 0 <= 0) /\ 0 <= n) /\ n <= n) /\
                (isMonochrome int_Z6 alloc t 0 (0 - 1) BLUE)) /\
                (isMonochrome int_Z6 alloc t 0 (0 - 1) WHITE)) /\
                (isMonochrome int_Z6 alloc t n (n - 1) RED))),
  forall (b: Z),
  forall (i: Z),
  forall (int_Z6_0: ((memory) Z A801)),
  forall (r: Z),
  forall (HW_3: (* File "flag.c", line 34, characters 7-210 *)
                ((((((((forall (k:Z),
                        (0 <= k /\ k < n ->
                         (isColor (acc int_Z6_0 (shift t k))))) /\
                0 <= b) /\ b <= i) /\ i <= r) /\ r <= n) /\
                (isMonochrome int_Z6_0 alloc t 0 (b - 1) BLUE)) /\
                (isMonochrome int_Z6_0 alloc t b (i - 1) WHITE)) /\
                (isMonochrome int_Z6_0 alloc t r (n - 1) RED))),
  forall (HW_4: i < r),
  forall (result: ((pointer) A801)),
  forall (HW_5: result = (shift t i)),
  forall (HW_6: (valid alloc result)),
  forall (result0: Z),
  forall (HW_7: result0 = (acc int_Z6_0 result)),
  forall (HW_8: result0 = BLUE),
  forall (b0: Z),
  forall (HW_9: b0 = (b + 1)),
  forall (i0: Z),
  forall (HW_10: i0 = (i + 1)),
  (* File "flag.c", line 13, characters 14-52 *) ((valid_index alloc t b) /\
  (valid_index alloc t i)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma flag_impl_po_4 : 
  forall (A802:Set),
  forall (t: ((pointer) A802)),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (int_Z6: ((memory) Z A802)),
  forall (HW_1: (* File "flag.c", line 20, characters 5-83 *)
                ((valid_range alloc t 0 (n - 1)) /\
                (forall (k:Z),
                 (0 <= k /\ k < n -> (isColor (acc int_Z6 (shift t k))))))),
  forall (HW_2: (* File "flag.c", line 34, characters 7-210 *)
                ((((((((forall (k:Z),
                        (0 <= k /\ k < n ->
                         (isColor (acc int_Z6 (shift t k))))) /\
                0 <= 0) /\ 0 <= 0) /\ 0 <= n) /\ n <= n) /\
                (isMonochrome int_Z6 alloc t 0 (0 - 1) BLUE)) /\
                (isMonochrome int_Z6 alloc t 0 (0 - 1) WHITE)) /\
                (isMonochrome int_Z6 alloc t n (n - 1) RED))),
  forall (b: Z),
  forall (i: Z),
  forall (int_Z6_0: ((memory) Z A802)),
  forall (r: Z),
  forall (HW_3: (* File "flag.c", line 34, characters 7-210 *)
                ((((((((forall (k:Z),
                        (0 <= k /\ k < n ->
                         (isColor (acc int_Z6_0 (shift t k))))) /\
                0 <= b) /\ b <= i) /\ i <= r) /\ r <= n) /\
                (isMonochrome int_Z6_0 alloc t 0 (b - 1) BLUE)) /\
                (isMonochrome int_Z6_0 alloc t b (i - 1) WHITE)) /\
                (isMonochrome int_Z6_0 alloc t r (n - 1) RED))),
  forall (HW_4: i < r),
  forall (result: ((pointer) A802)),
  forall (HW_5: result = (shift t i)),
  forall (HW_6: (valid alloc result)),
  forall (result0: Z),
  forall (HW_7: result0 = (acc int_Z6_0 result)),
  forall (HW_8: result0 = BLUE),
  forall (b0: Z),
  forall (HW_9: b0 = (b + 1)),
  forall (i0: Z),
  forall (HW_10: i0 = (i + 1)),
  forall (HW_11: (* File "flag.c", line 13, characters 14-52 *)
                 ((valid_index alloc t b) /\ (valid_index alloc t i))),
  forall (int_Z6_1: ((memory) Z A802)),
  forall (HW_12: (* File "flag.c", line 15, characters 13-53 *)
                 ((acc int_Z6_1 (shift t b)) = (acc int_Z6_0 (shift t i)) /\
                 (acc int_Z6_1 (shift t i)) = (acc int_Z6_0 (shift t b))) /\
                 (not_assigns alloc int_Z6_0 int_Z6_1
                  (pset_union (pset_singleton (shift t i))
                   (pset_singleton (shift t b))))),
  (* File "flag.c", line 34, characters 7-210 *)
  ((((((((forall (k:Z),
          (0 <= k /\ k < n -> (isColor (acc int_Z6_1 (shift t k))))) /\
  0 <= b0) /\ b0 <= i0) /\ i0 <= r) /\ r <= n) /\
  (isMonochrome int_Z6_1 alloc t 0 (b0 - 1) BLUE)) /\
  (isMonochrome int_Z6_1 alloc t b0 (i0 - 1) WHITE)) /\
  (isMonochrome int_Z6_1 alloc t r (n - 1) RED)) /\ (Zwf 0 (r - i0) (r - i)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma flag_impl_po_5 : 
  forall (A803:Set),
  forall (t: ((pointer) A803)),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (int_Z6: ((memory) Z A803)),
  forall (HW_1: (* File "flag.c", line 20, characters 5-83 *)
                ((valid_range alloc t 0 (n - 1)) /\
                (forall (k:Z),
                 (0 <= k /\ k < n -> (isColor (acc int_Z6 (shift t k))))))),
  forall (HW_2: (* File "flag.c", line 34, characters 7-210 *)
                ((((((((forall (k:Z),
                        (0 <= k /\ k < n ->
                         (isColor (acc int_Z6 (shift t k))))) /\
                0 <= 0) /\ 0 <= 0) /\ 0 <= n) /\ n <= n) /\
                (isMonochrome int_Z6 alloc t 0 (0 - 1) BLUE)) /\
                (isMonochrome int_Z6 alloc t 0 (0 - 1) WHITE)) /\
                (isMonochrome int_Z6 alloc t n (n - 1) RED))),
  forall (b: Z),
  forall (i: Z),
  forall (int_Z6_0: ((memory) Z A803)),
  forall (r: Z),
  forall (HW_3: (* File "flag.c", line 34, characters 7-210 *)
                ((((((((forall (k:Z),
                        (0 <= k /\ k < n ->
                         (isColor (acc int_Z6_0 (shift t k))))) /\
                0 <= b) /\ b <= i) /\ i <= r) /\ r <= n) /\
                (isMonochrome int_Z6_0 alloc t 0 (b - 1) BLUE)) /\
                (isMonochrome int_Z6_0 alloc t b (i - 1) WHITE)) /\
                (isMonochrome int_Z6_0 alloc t r (n - 1) RED))),
  forall (HW_4: i < r),
  forall (result: ((pointer) A803)),
  forall (HW_5: result = (shift t i)),
  forall (HW_6: (valid alloc result)),
  forall (result0: Z),
  forall (HW_7: result0 = (acc int_Z6_0 result)),
  forall (HW_13: result0 <> BLUE),
  forall (HW_14: result0 = WHITE),
  forall (i0: Z),
  forall (HW_15: i0 = (i + 1)),
  (* File "flag.c", line 34, characters 7-210 *)
  ((((((((forall (k:Z),
          (0 <= k /\ k < n -> (isColor (acc int_Z6_0 (shift t k))))) /\
  0 <= b) /\ b <= i0) /\ i0 <= r) /\ r <= n) /\
  (isMonochrome int_Z6_0 alloc t 0 (b - 1) BLUE)) /\
  (isMonochrome int_Z6_0 alloc t b (i0 - 1) WHITE)) /\
  (isMonochrome int_Z6_0 alloc t r (n - 1) RED)) /\ (Zwf 0 (r - i0) (r - i)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma flag_impl_po_6 : 
  forall (A804:Set),
  forall (t: ((pointer) A804)),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (int_Z6: ((memory) Z A804)),
  forall (HW_1: (* File "flag.c", line 20, characters 5-83 *)
                ((valid_range alloc t 0 (n - 1)) /\
                (forall (k:Z),
                 (0 <= k /\ k < n -> (isColor (acc int_Z6 (shift t k))))))),
  forall (HW_2: (* File "flag.c", line 34, characters 7-210 *)
                ((((((((forall (k:Z),
                        (0 <= k /\ k < n ->
                         (isColor (acc int_Z6 (shift t k))))) /\
                0 <= 0) /\ 0 <= 0) /\ 0 <= n) /\ n <= n) /\
                (isMonochrome int_Z6 alloc t 0 (0 - 1) BLUE)) /\
                (isMonochrome int_Z6 alloc t 0 (0 - 1) WHITE)) /\
                (isMonochrome int_Z6 alloc t n (n - 1) RED))),
  forall (b: Z),
  forall (i: Z),
  forall (int_Z6_0: ((memory) Z A804)),
  forall (r: Z),
  forall (HW_3: (* File "flag.c", line 34, characters 7-210 *)
                ((((((((forall (k:Z),
                        (0 <= k /\ k < n ->
                         (isColor (acc int_Z6_0 (shift t k))))) /\
                0 <= b) /\ b <= i) /\ i <= r) /\ r <= n) /\
                (isMonochrome int_Z6_0 alloc t 0 (b - 1) BLUE)) /\
                (isMonochrome int_Z6_0 alloc t b (i - 1) WHITE)) /\
                (isMonochrome int_Z6_0 alloc t r (n - 1) RED))),
  forall (HW_4: i < r),
  forall (result: ((pointer) A804)),
  forall (HW_5: result = (shift t i)),
  forall (HW_6: (valid alloc result)),
  forall (result0: Z),
  forall (HW_7: result0 = (acc int_Z6_0 result)),
  forall (HW_13: result0 <> BLUE),
  forall (HW_16: result0 <> WHITE),
  forall (HW_17: result0 = RED),
  forall (r0: Z),
  forall (HW_18: r0 = (r - 1)),
  (* File "flag.c", line 13, characters 14-52 *) ((valid_index alloc t r0) /\
  (valid_index alloc t i)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma flag_impl_po_7 : 
  forall (A805:Set),
  forall (t: ((pointer) A805)),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (int_Z6: ((memory) Z A805)),
  forall (HW_1: (* File "flag.c", line 20, characters 5-83 *)
                ((valid_range alloc t 0 (n - 1)) /\
                (forall (k:Z),
                 (0 <= k /\ k < n -> (isColor (acc int_Z6 (shift t k))))))),
  forall (HW_2: (* File "flag.c", line 34, characters 7-210 *)
                ((((((((forall (k:Z),
                        (0 <= k /\ k < n ->
                         (isColor (acc int_Z6 (shift t k))))) /\
                0 <= 0) /\ 0 <= 0) /\ 0 <= n) /\ n <= n) /\
                (isMonochrome int_Z6 alloc t 0 (0 - 1) BLUE)) /\
                (isMonochrome int_Z6 alloc t 0 (0 - 1) WHITE)) /\
                (isMonochrome int_Z6 alloc t n (n - 1) RED))),
  forall (b: Z),
  forall (i: Z),
  forall (int_Z6_0: ((memory) Z A805)),
  forall (r: Z),
  forall (HW_3: (* File "flag.c", line 34, characters 7-210 *)
                ((((((((forall (k:Z),
                        (0 <= k /\ k < n ->
                         (isColor (acc int_Z6_0 (shift t k))))) /\
                0 <= b) /\ b <= i) /\ i <= r) /\ r <= n) /\
                (isMonochrome int_Z6_0 alloc t 0 (b - 1) BLUE)) /\
                (isMonochrome int_Z6_0 alloc t b (i - 1) WHITE)) /\
                (isMonochrome int_Z6_0 alloc t r (n - 1) RED))),
  forall (HW_4: i < r),
  forall (result: ((pointer) A805)),
  forall (HW_5: result = (shift t i)),
  forall (HW_6: (valid alloc result)),
  forall (result0: Z),
  forall (HW_7: result0 = (acc int_Z6_0 result)),
  forall (HW_13: result0 <> BLUE),
  forall (HW_16: result0 <> WHITE),
  forall (HW_17: result0 = RED),
  forall (r0: Z),
  forall (HW_18: r0 = (r - 1)),
  forall (HW_19: (* File "flag.c", line 13, characters 14-52 *)
                 ((valid_index alloc t r0) /\ (valid_index alloc t i))),
  forall (int_Z6_1: ((memory) Z A805)),
  forall (HW_20: (* File "flag.c", line 15, characters 13-53 *)
                 ((acc int_Z6_1 (shift t r0)) = (acc int_Z6_0 (shift t i)) /\
                 (acc int_Z6_1 (shift t i)) = (acc int_Z6_0 (shift t r0))) /\
                 (not_assigns alloc int_Z6_0 int_Z6_1
                  (pset_union (pset_singleton (shift t i))
                   (pset_singleton (shift t r0))))),
  (* File "flag.c", line 34, characters 7-210 *)
  ((((((((forall (k:Z),
          (0 <= k /\ k < n -> (isColor (acc int_Z6_1 (shift t k))))) /\
  0 <= b) /\ b <= i) /\ i <= r0) /\ r0 <= n) /\
  (isMonochrome int_Z6_1 alloc t 0 (b - 1) BLUE)) /\
  (isMonochrome int_Z6_1 alloc t b (i - 1) WHITE)) /\
  (isMonochrome int_Z6_1 alloc t r0 (n - 1) RED)) /\ (Zwf 0 (r0 - i) 
  (r - i)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma flag_impl_po_8 : 
  forall (A806:Set),
  forall (t: ((pointer) A806)),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (int_Z6: ((memory) Z A806)),
  forall (HW_1: (* File "flag.c", line 20, characters 5-83 *)
                ((valid_range alloc t 0 (n - 1)) /\
                (forall (k:Z),
                 (0 <= k /\ k < n -> (isColor (acc int_Z6 (shift t k))))))),
  forall (HW_2: (* File "flag.c", line 34, characters 7-210 *)
                ((((((((forall (k:Z),
                        (0 <= k /\ k < n ->
                         (isColor (acc int_Z6 (shift t k))))) /\
                0 <= 0) /\ 0 <= 0) /\ 0 <= n) /\ n <= n) /\
                (isMonochrome int_Z6 alloc t 0 (0 - 1) BLUE)) /\
                (isMonochrome int_Z6 alloc t 0 (0 - 1) WHITE)) /\
                (isMonochrome int_Z6 alloc t n (n - 1) RED))),
  forall (b: Z),
  forall (i: Z),
  forall (int_Z6_0: ((memory) Z A806)),
  forall (r: Z),
  forall (HW_3: (* File "flag.c", line 34, characters 7-210 *)
                ((((((((forall (k:Z),
                        (0 <= k /\ k < n ->
                         (isColor (acc int_Z6_0 (shift t k))))) /\
                0 <= b) /\ b <= i) /\ i <= r) /\ r <= n) /\
                (isMonochrome int_Z6_0 alloc t 0 (b - 1) BLUE)) /\
                (isMonochrome int_Z6_0 alloc t b (i - 1) WHITE)) /\
                (isMonochrome int_Z6_0 alloc t r (n - 1) RED))),
  forall (HW_4: i < r),
  forall (result: ((pointer) A806)),
  forall (HW_5: result = (shift t i)),
  forall (HW_6: (valid alloc result)),
  forall (result0: Z),
  forall (HW_7: result0 = (acc int_Z6_0 result)),
  forall (HW_13: result0 <> BLUE),
  forall (HW_16: result0 <> WHITE),
  forall (HW_21: result0 <> RED),
  (* File "flag.c", line 34, characters 7-210 *)
  ((((((((forall (k:Z),
          (0 <= k /\ k < n -> (isColor (acc int_Z6_0 (shift t k))))) /\
  0 <= b) /\ b <= i) /\ i <= r) /\ r <= n) /\
  (isMonochrome int_Z6_0 alloc t 0 (b - 1) BLUE)) /\
  (isMonochrome int_Z6_0 alloc t b (i - 1) WHITE)) /\
  (isMonochrome int_Z6_0 alloc t r (n - 1) RED)) /\ (Zwf 0 (r - i) (r - i)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma flag_impl_po_9 : 
  forall (A807:Set),
  forall (t: ((pointer) A807)),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (int_Z6: ((memory) Z A807)),
  forall (HW_1: (* File "flag.c", line 20, characters 5-83 *)
                ((valid_range alloc t 0 (n - 1)) /\
                (forall (k:Z),
                 (0 <= k /\ k < n -> (isColor (acc int_Z6 (shift t k))))))),
  forall (HW_2: (* File "flag.c", line 34, characters 7-210 *)
                ((((((((forall (k:Z),
                        (0 <= k /\ k < n ->
                         (isColor (acc int_Z6 (shift t k))))) /\
                0 <= 0) /\ 0 <= 0) /\ 0 <= n) /\ n <= n) /\
                (isMonochrome int_Z6 alloc t 0 (0 - 1) BLUE)) /\
                (isMonochrome int_Z6 alloc t 0 (0 - 1) WHITE)) /\
                (isMonochrome int_Z6 alloc t n (n - 1) RED))),
  forall (b: Z),
  forall (i: Z),
  forall (int_Z6_0: ((memory) Z A807)),
  forall (r: Z),
  forall (HW_3: (* File "flag.c", line 34, characters 7-210 *)
                ((((((((forall (k:Z),
                        (0 <= k /\ k < n ->
                         (isColor (acc int_Z6_0 (shift t k))))) /\
                0 <= b) /\ b <= i) /\ i <= r) /\ r <= n) /\
                (isMonochrome int_Z6_0 alloc t 0 (b - 1) BLUE)) /\
                (isMonochrome int_Z6_0 alloc t b (i - 1) WHITE)) /\
                (isMonochrome int_Z6_0 alloc t r (n - 1) RED))),
  forall (HW_22: i >= r),
  (* File "flag.c", line 24, characters 6-126 *)
  (exists b:Z,
   (exists r:Z, ((isMonochrome int_Z6_0 alloc t 0 (b - 1) BLUE) /\
    (isMonochrome int_Z6_0 alloc t b (r - 1) WHITE)) /\
    (isMonochrome int_Z6_0 alloc t r (n - 1) RED))) /\
  (not_assigns alloc int_Z6 int_Z6_0
   (pset_range (pset_singleton t) 0 (n - 1))).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

