(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export copy_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma copy_impl_po_1 : 
  forall (t1: ((pointer) global)),
  forall (t2: ((pointer) global)),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (intM_global: ((memory) Z global)),
  forall (HW_1: (* File "copy.c", line 4, characters 14-58 *)
                ((valid_range alloc t1 0 n) /\ (valid_range alloc t2 0 n))),
  (* File "copy.c", line 9, characters 17-70 *) (n <= n /\
  (forall (k:Z),
   (n <= k /\ k < n -> (acc intM_global (shift t2 k)) =
    (acc intM_global (shift t1 k))))).
Proof.
intuition; subst; auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma copy_impl_po_2 : 
  forall (t1: ((pointer) global)),
  forall (t2: ((pointer) global)),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (intM_global: ((memory) Z global)),
  forall (HW_1: (* File "copy.c", line 4, characters 14-58 *)
                ((valid_range alloc t1 0 n) /\ (valid_range alloc t2 0 n))),
  forall (HW_2: (* File "copy.c", line 9, characters 17-70 *) (n <= n /\
                (forall (k:Z),
                 (n <= k /\ k < n -> (acc intM_global (shift t2 k)) =
                  (acc intM_global (shift t1 k)))))),
  forall (i: Z),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_3: (* File "copy.c", line 9, characters 17-70 *) (i <= n /\
                (forall (k:Z),
                 (i <= k /\ k < n -> (acc intM_global0 (shift t2 k)) =
                  (acc intM_global0 (shift t1 k)))))),
  forall (i0: Z),
  forall (HW_4: i0 = (i - 1)),
  forall (HW_5: i > 0),
  forall (result: ((pointer) global)),
  forall (HW_6: result = (shift t2 i0)),
  forall (result0: ((pointer) global)),
  forall (HW_7: result0 = (shift t1 i0)),
  (valid alloc result0).
Proof.
intuition.
subst;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma copy_impl_po_3 : 
  forall (t1: ((pointer) global)),
  forall (t2: ((pointer) global)),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (intM_global: ((memory) Z global)),
  forall (HW_1: (* File "copy.c", line 4, characters 14-58 *)
                ((valid_range alloc t1 0 n) /\ (valid_range alloc t2 0 n))),
  forall (HW_2: (* File "copy.c", line 9, characters 17-70 *) (n <= n /\
                (forall (k:Z),
                 (n <= k /\ k < n -> (acc intM_global (shift t2 k)) =
                  (acc intM_global (shift t1 k)))))),
  forall (i: Z),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_3: (* File "copy.c", line 9, characters 17-70 *) (i <= n /\
                (forall (k:Z),
                 (i <= k /\ k < n -> (acc intM_global0 (shift t2 k)) =
                  (acc intM_global0 (shift t1 k)))))),
  forall (i0: Z),
  forall (HW_4: i0 = (i - 1)),
  forall (HW_5: i > 0),
  forall (result: ((pointer) global)),
  forall (HW_6: result = (shift t2 i0)),
  forall (result0: ((pointer) global)),
  forall (HW_7: result0 = (shift t1 i0)),
  forall (HW_8: (valid alloc result0)),
  forall (result1: Z),
  forall (HW_9: result1 = (acc intM_global0 result0)),
  (valid alloc result).
Proof.
intuition.
subst;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma copy_impl_po_4 : 
  forall (t1: ((pointer) global)),
  forall (t2: ((pointer) global)),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (intM_global: ((memory) Z global)),
  forall (HW_1: (* File "copy.c", line 4, characters 14-58 *)
                ((valid_range alloc t1 0 n) /\ (valid_range alloc t2 0 n))),
  forall (HW_2: (* File "copy.c", line 9, characters 17-70 *) (n <= n /\
                (forall (k:Z),
                 (n <= k /\ k < n -> (acc intM_global (shift t2 k)) =
                  (acc intM_global (shift t1 k)))))),
  forall (i: Z),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_3: (* File "copy.c", line 9, characters 17-70 *) (i <= n /\
                (forall (k:Z),
                 (i <= k /\ k < n -> (acc intM_global0 (shift t2 k)) =
                  (acc intM_global0 (shift t1 k)))))),
  forall (i0: Z),
  forall (HW_4: i0 = (i - 1)),
  forall (HW_5: i > 0),
  forall (result: ((pointer) global)),
  forall (HW_6: result = (shift t2 i0)),
  forall (result0: ((pointer) global)),
  forall (HW_7: result0 = (shift t1 i0)),
  forall (HW_8: (valid alloc result0)),
  forall (result1: Z),
  forall (HW_9: result1 = (acc intM_global0 result0)),
  forall (HW_10: (valid alloc result)),
  forall (intM_global1: ((memory) Z global)),
  forall (HW_11: intM_global1 = (upd intM_global0 result result1)),
  (* File "copy.c", line 9, characters 17-70 *) (i0 <= n /\
  (forall (k:Z),
   (i0 <= k /\ k < n -> (acc intM_global1 (shift t2 k)) =
    (acc intM_global1 (shift t1 k))))) /\
  (Zwf 0 i0 i).
Proof.
intuition.
subst.
assert (k=i-1 \/ i<=k). 
  omega. 
intuition; subst; caduceus.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma copy_impl_po_5 : 
  forall (t1: ((pointer) global)),
  forall (t2: ((pointer) global)),
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (intM_global: ((memory) Z global)),
  forall (HW_1: (* File "copy.c", line 4, characters 14-58 *)
                ((valid_range alloc t1 0 n) /\ (valid_range alloc t2 0 n))),
  forall (HW_2: (* File "copy.c", line 9, characters 17-70 *) (n <= n /\
                (forall (k:Z),
                 (n <= k /\ k < n -> (acc intM_global (shift t2 k)) =
                  (acc intM_global (shift t1 k)))))),
  forall (i: Z),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_3: (* File "copy.c", line 9, characters 17-70 *) (i <= n /\
                (forall (k:Z),
                 (i <= k /\ k < n -> (acc intM_global0 (shift t2 k)) =
                  (acc intM_global0 (shift t1 k)))))),
  forall (i0: Z),
  forall (HW_4: i0 = (i - 1)),
  forall (HW_12: i <= 0),
  (* File "copy.c", line 5, characters 13-56 *)
  (forall (k:Z),
   (0 <= k /\ k < n -> (acc intM_global0 (shift t2 k)) =
    (acc intM_global0 (shift t1 k)))).
Proof.
intuition.
Save.

