(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export struct2_spec_why.

(* Why obligation from file "why/struct2.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s0: pointer),
  forall (HW_1: (valid1 b) /\ (valid_range alloc s0 0 0) /\
                (valid1_range b 5)),
  forall (result: pointer),
  forall (HW_2: result = (acc b s0)),
  forall (result0: pointer),
  forall (HW_3: result0 = (shift result 2)),
  forall (intP0: ((memory) Z)),
  forall (HW_4: intP0 = (upd intP result0 1)),
  (* File \"struct2.c819618234.c1069824147.i\", line 0, characters 9-14 *)
  True.
Proof.
intuition.
Save.

(* Why obligation from file "why/struct2.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (s0: pointer),
  forall (HW_1: (valid1 b) /\ (valid_range alloc s0 0 0) /\
                (valid1_range b 5)),
  forall (result: pointer),
  forall (HW_2: result = (acc b s0)),
  forall (result0: pointer),
  forall (HW_3: result0 = (shift result 2)),
  (valid alloc result0).
Proof.
intuition.
subst.
unfold valid1_range in H2.
generalize (H2 s0 alloc Pre4).
intuition.
Save.


(* Why obligation from file "why/struct2.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (s0: pointer),
  forall (HW_1: (valid1 b) /\ (valid_range alloc s0 0 0) /\
                (valid1_range b 5)),
  (valid alloc s0).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/struct2.why", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (d: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (u: pointer),
  forall (HW_1: (valid_range alloc u 0 0) /\ (valid1 b) /\ (valid1 d) /\
                (separation2 d d) /\ (valid1_range b 5)),
  forall (result: pointer),
  forall (HW_2: result = (acc d u)),
  forall (result0: pointer),
  forall (HW_3: result0 = (acc b result)),
  forall (result1: pointer),
  forall (HW_4: result1 = (shift result0 2)),
  forall (intP0: ((memory) Z)),
  forall (HW_5: intP0 = (upd intP result1 1)),
  (* File \"struct2.c819618234.c1069824147.i\", line 0, characters 9-14 *)
  True.
Proof.
intuition.
Save.

(* Why obligation from file "why/struct2.why", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (d: ((memory) pointer)),
  forall (u: pointer),
  forall (HW_1: (valid_range alloc u 0 0) /\ (valid1 b) /\ (valid1 d) /\
                (separation2 d d) /\ (valid1_range b 5)),
  forall (result: pointer),
  forall (HW_2: result = (acc d u)),
  forall (result0: pointer),
  forall (HW_3: result0 = (acc b result)),
  forall (result1: pointer),
  forall (HW_4: result1 = (shift result0 2)),
  (valid alloc result1).
Proof.
intuition.
Save.

(* Why obligation from file "why/struct2.why", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (d: ((memory) pointer)),
  forall (u: pointer),
  forall (HW_1: (valid_range alloc u 0 0) /\ (valid1 b) /\ (valid1 d) /\
                (separation2 d d) /\ (valid1_range b 5)),
  forall (result: pointer),
  forall (HW_2: result = (acc d u)),
  (valid alloc result).
Proof.
intuition.
subst.
unfold valid1_range in H4.
generalize (H4 (u#d) alloc Pre6);intuition.
Save.

(* Why obligation from file "why/struct2.why", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_4 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (d: ((memory) pointer)),
  forall (u: pointer),
  forall (HW_1: (valid_range alloc u 0 0) /\ (valid1 b) /\ (valid1 d) /\
                (separation2 d d) /\ (valid1_range b 5)),
  (valid alloc u).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

