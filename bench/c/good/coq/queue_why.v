(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export queue_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (contents_global: ((memory) ((pointer) global) global)),
  forall (empty_global: ((memory) Z global)),
  forall (first_global: ((memory) Z global)),
  forall (full_global: ((memory) Z global)),
  forall (intM_global: ((memory) Z global)),
  forall (last_global: ((memory) Z global)),
  forall (length_global: ((memory) Z global)),
  forall (q: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: (valid_range alloc t 0 4) /\ (valid alloc q) /\
                ~((base_addr q) = (base_addr t))),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_2: intM_global0 = (upd intM_global t 0)),
  forall (result: ((pointer) global)),
  forall (HW_3: result = (shift t 1)),
  forall (intM_global1: ((memory) Z global)),
  forall (HW_4: intM_global1 = (upd intM_global0 result 0)),
  forall (result0: ((pointer) global)),
  forall (HW_5: result0 = (shift t 2)),
  forall (intM_global2: ((memory) Z global)),
  forall (HW_6: intM_global2 = (upd intM_global1 result0 0)),
  forall (result1: ((pointer) global)),
  forall (HW_7: result1 = (shift t 3)),
  forall (intM_global3: ((memory) Z global)),
  forall (HW_8: intM_global3 = (upd intM_global2 result1 0)),
  forall (result2: ((pointer) global)),
  forall (HW_9: result2 = (shift t 4)),
  forall (intM_global4: ((memory) Z global)),
  forall (HW_10: intM_global4 = (upd intM_global3 result2 0)),
  forall (contents_global0: ((memory) ((pointer) global) global)),
  forall (HW_11: contents_global0 = (upd contents_global q t)),
  forall (length_global0: ((memory) Z global)),
  forall (HW_12: length_global0 = (upd length_global q 5)),
  forall (first_global0: ((memory) Z global)),
  forall (HW_13: first_global0 = (upd first_global q 0)),
  forall (last_global0: ((memory) Z global)),
  forall (HW_14: last_global0 = (upd last_global q 0)),
  forall (empty_global0: ((memory) Z global)),
  forall (HW_15: empty_global0 = (upd empty_global q 0)),
  forall (full_global0: ((memory) Z global)),
  forall (HW_16: full_global0 = (upd full_global q 1)),
  (* File "queue.c", line 14, characters 5-105 *)
  (((valid_range alloc (acc contents_global0 q) 0
     ((acc length_global0 q) - 1)) /\
  0 <= (acc first_global0 q) /\ (acc first_global0 q) <
  (acc length_global0 q)) /\ 0 <= (acc last_global0 q) /\
  (acc last_global0 q) < (acc length_global0 q)).
Proof.
intuition.
Save.

Proof.
intuition;subst;auto;
caduceus;unfold valid_range in *|- *;intuition.
Save.


Proof.
intuition.
subst;auto.
Save.

Proof.
intuition.
subst;auto.
Save.

Proof.
intuition.
subst;auto.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
Save.

Proof.
intuition;subst;caduceus.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma pop_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (contents_global: ((memory) ((pointer) global) global)),
  forall (empty_global: ((memory) Z global)),
  forall (first_global: ((memory) Z global)),
  forall (last_global: ((memory) Z global)),
  forall (length_global: ((memory) Z global)),
  forall (q: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "queue.c", line 33, characters 14-22 *)
                 (acc empty_global q) = 0 /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global q) /\ (acc first_global q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))) /\
                (valid_range alloc t 0 4) /\ (valid alloc q) /\
                ~((base_addr q) = (base_addr t))),
  forall (result: ((pointer) global)),
  forall (HW_2: result = (acc contents_global q)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc first_global q)),
  forall (first_global0: ((memory) Z global)),
  forall (HW_4: first_global0 = (upd first_global q (1 + result0))),
  forall (result1: ((pointer) global)),
  forall (HW_5: result1 = (shift result result0)),
  (valid alloc result1).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma pop_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (contents_global: ((memory) ((pointer) global) global)),
  forall (empty_global: ((memory) Z global)),
  forall (first_global: ((memory) Z global)),
  forall (full_global: ((memory) Z global)),
  forall (intM_global: ((memory) Z global)),
  forall (last_global: ((memory) Z global)),
  forall (length_global: ((memory) Z global)),
  forall (q: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "queue.c", line 33, characters 14-22 *)
                 (acc empty_global q) = 0 /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global q) /\ (acc first_global q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))) /\
                (valid_range alloc t 0 4) /\ (valid alloc q) /\
                ~((base_addr q) = (base_addr t))),
  forall (result: ((pointer) global)),
  forall (HW_2: result = (acc contents_global q)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc first_global q)),
  forall (first_global0: ((memory) Z global)),
  forall (HW_4: first_global0 = (upd first_global q (1 + result0))),
  forall (result1: ((pointer) global)),
  forall (HW_5: result1 = (shift result result0)),
  forall (HW_6: (valid alloc result1)),
  forall (result2: Z),
  forall (HW_7: result2 = (acc intM_global result1)),
  forall (result3: Z),
  forall (HW_8: result3 = (acc first_global0 q)),
  forall (result4: Z),
  forall (HW_9: result4 = (acc length_global q)),
  forall (HW_10: result3 = result4),
  forall (first_global1: ((memory) Z global)),
  forall (HW_11: first_global1 = (upd first_global0 q 0)),
  forall (full_global0: ((memory) Z global)),
  forall (HW_12: full_global0 = (upd full_global q 0)),
  forall (result5: Z),
  forall (HW_13: result5 = (acc first_global1 q)),
  forall (result6: Z),
  forall (HW_14: result6 = (acc last_global q)),
  forall (HW_15: result5 = result6),
  forall (empty_global0: ((memory) Z global)),
  forall (HW_16: empty_global0 = (upd empty_global q 1)),
  (* File "queue.c", line 35, characters 13-60 *) ((acc full_global0 q) =
  0 /\ result2 =
  (acc intM_global (shift (acc contents_global q) (acc first_global q)))) /\
  (((((((not_assigns alloc length_global length_global pset_empty) /\
  (not_assigns alloc last_global last_global pset_empty)) /\
  (not_assigns alloc intM_global intM_global pset_empty)) /\
  (not_assigns alloc full_global full_global0 (pset_singleton q))) /\
  (not_assigns alloc first_global first_global1 (pset_singleton q))) /\
  (not_assigns alloc empty_global empty_global0 (pset_singleton q))) /\
  (not_assigns alloc contents_global contents_global pset_empty)) /\
  (* File "queue.c", line 14, characters 5-105 *)
  (((valid_range alloc (acc contents_global q) 0 ((acc length_global q) - 1)) /\
  0 <= (acc first_global1 q) /\ (acc first_global1 q) <
  (acc length_global q)) /\ 0 <= (acc last_global q) /\ (acc last_global q) <
  (acc length_global q)).
Proof.
intuition.
Save.


(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma pop_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (contents_global: ((memory) ((pointer) global) global)),
  forall (empty_global: ((memory) Z global)),
  forall (first_global: ((memory) Z global)),
  forall (full_global: ((memory) Z global)),
  forall (intM_global: ((memory) Z global)),
  forall (last_global: ((memory) Z global)),
  forall (length_global: ((memory) Z global)),
  forall (q: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "queue.c", line 33, characters 14-22 *)
                 (acc empty_global q) = 0 /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global q) /\ (acc first_global q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))) /\
                (valid_range alloc t 0 4) /\ (valid alloc q) /\
                ~((base_addr q) = (base_addr t))),
  forall (result: ((pointer) global)),
  forall (HW_2: result = (acc contents_global q)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc first_global q)),
  forall (first_global0: ((memory) Z global)),
  forall (HW_4: first_global0 = (upd first_global q (1 + result0))),
  forall (result1: ((pointer) global)),
  forall (HW_5: result1 = (shift result result0)),
  forall (HW_6: (valid alloc result1)),
  forall (result2: Z),
  forall (HW_7: result2 = (acc intM_global result1)),
  forall (result3: Z),
  forall (HW_8: result3 = (acc first_global0 q)),
  forall (result4: Z),
  forall (HW_9: result4 = (acc length_global q)),
  forall (HW_10: result3 = result4),
  forall (first_global1: ((memory) Z global)),
  forall (HW_11: first_global1 = (upd first_global0 q 0)),
  forall (full_global0: ((memory) Z global)),
  forall (HW_12: full_global0 = (upd full_global q 0)),
  forall (result5: Z),
  forall (HW_13: result5 = (acc first_global1 q)),
  forall (result6: Z),
  forall (HW_14: result6 = (acc last_global q)),
  forall (HW_17: result5 <> result6),
  forall (empty_global0: ((memory) Z global)),
  forall (HW_18: empty_global0 = (upd empty_global q 0)),
  (* File "queue.c", line 35, characters 13-60 *) ((acc full_global0 q) =
  0 /\ result2 =
  (acc intM_global (shift (acc contents_global q) (acc first_global q)))) /\
  (((((((not_assigns alloc length_global length_global pset_empty) /\
  (not_assigns alloc last_global last_global pset_empty)) /\
  (not_assigns alloc intM_global intM_global pset_empty)) /\
  (not_assigns alloc full_global full_global0 (pset_singleton q))) /\
  (not_assigns alloc first_global first_global1 (pset_singleton q))) /\
  (not_assigns alloc empty_global empty_global0 (pset_singleton q))) /\
  (not_assigns alloc contents_global contents_global pset_empty)) /\
  (* File "queue.c", line 14, characters 5-105 *)
  (((valid_range alloc (acc contents_global q) 0 ((acc length_global q) - 1)) /\
  0 <= (acc first_global1 q) /\ (acc first_global1 q) <
  (acc length_global q)) /\ 0 <= (acc last_global q) /\ (acc last_global q) <
  (acc length_global q)).
Proof.
intuition;subst;auto;caduceus.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma pop_impl_po_4 : 
  forall (alloc: alloc_table),
  forall (contents_global: ((memory) ((pointer) global) global)),
  forall (empty_global: ((memory) Z global)),
  forall (first_global: ((memory) Z global)),
  forall (full_global: ((memory) Z global)),
  forall (intM_global: ((memory) Z global)),
  forall (last_global: ((memory) Z global)),
  forall (length_global: ((memory) Z global)),
  forall (q: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "queue.c", line 33, characters 14-22 *)
                 (acc empty_global q) = 0 /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global q) /\ (acc first_global q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))) /\
                (valid_range alloc t 0 4) /\ (valid alloc q) /\
                ~((base_addr q) = (base_addr t))),
  forall (result: ((pointer) global)),
  forall (HW_2: result = (acc contents_global q)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc first_global q)),
  forall (first_global0: ((memory) Z global)),
  forall (HW_4: first_global0 = (upd first_global q (1 + result0))),
  forall (result1: ((pointer) global)),
  forall (HW_5: result1 = (shift result result0)),
  forall (HW_6: (valid alloc result1)),
  forall (result2: Z),
  forall (HW_7: result2 = (acc intM_global result1)),
  forall (result3: Z),
  forall (HW_8: result3 = (acc first_global0 q)),
  forall (result4: Z),
  forall (HW_9: result4 = (acc length_global q)),
  forall (HW_19: result3 <> result4),
  forall (full_global0: ((memory) Z global)),
  forall (HW_20: full_global0 = (upd full_global q 0)),
  forall (result5: Z),
  forall (HW_21: result5 = (acc first_global0 q)),
  forall (result6: Z),
  forall (HW_22: result6 = (acc last_global q)),
  forall (HW_23: result5 = result6),
  forall (empty_global0: ((memory) Z global)),
  forall (HW_24: empty_global0 = (upd empty_global q 1)),
  (* File "queue.c", line 35, characters 13-60 *) ((acc full_global0 q) =
  0 /\ result2 =
  (acc intM_global (shift (acc contents_global q) (acc first_global q)))) /\
  (((((((not_assigns alloc length_global length_global pset_empty) /\
  (not_assigns alloc last_global last_global pset_empty)) /\
  (not_assigns alloc intM_global intM_global pset_empty)) /\
  (not_assigns alloc full_global full_global0 (pset_singleton q))) /\
  (not_assigns alloc first_global first_global0 (pset_singleton q))) /\
  (not_assigns alloc empty_global empty_global0 (pset_singleton q))) /\
  (not_assigns alloc contents_global contents_global pset_empty)) /\
  (* File "queue.c", line 14, characters 5-105 *)
  (((valid_range alloc (acc contents_global q) 0 ((acc length_global q) - 1)) /\
  0 <= (acc first_global0 q) /\ (acc first_global0 q) <
  (acc length_global q)) /\ 0 <= (acc last_global q) /\ (acc last_global q) <
  (acc length_global q)).
Proof.
intuition.
subst;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma pop_impl_po_5 : 
  forall (alloc: alloc_table),
  forall (contents_global: ((memory) ((pointer) global) global)),
  forall (empty_global: ((memory) Z global)),
  forall (first_global: ((memory) Z global)),
  forall (full_global: ((memory) Z global)),
  forall (intM_global: ((memory) Z global)),
  forall (last_global: ((memory) Z global)),
  forall (length_global: ((memory) Z global)),
  forall (q: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "queue.c", line 33, characters 14-22 *)
                 (acc empty_global q) = 0 /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global q) /\ (acc first_global q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))) /\
                (valid_range alloc t 0 4) /\ (valid alloc q) /\
                ~((base_addr q) = (base_addr t))),
  forall (result: ((pointer) global)),
  forall (HW_2: result = (acc contents_global q)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc first_global q)),
  forall (first_global0: ((memory) Z global)),
  forall (HW_4: first_global0 = (upd first_global q (1 + result0))),
  forall (result1: ((pointer) global)),
  forall (HW_5: result1 = (shift result result0)),
  forall (HW_6: (valid alloc result1)),
  forall (result2: Z),
  forall (HW_7: result2 = (acc intM_global result1)),
  forall (result3: Z),
  forall (HW_8: result3 = (acc first_global0 q)),
  forall (result4: Z),
  forall (HW_9: result4 = (acc length_global q)),
  forall (HW_19: result3 <> result4),
  forall (full_global0: ((memory) Z global)),
  forall (HW_20: full_global0 = (upd full_global q 0)),
  forall (result5: Z),
  forall (HW_21: result5 = (acc first_global0 q)),
  forall (result6: Z),
  forall (HW_22: result6 = (acc last_global q)),
  forall (HW_25: result5 <> result6),
  forall (empty_global0: ((memory) Z global)),
  forall (HW_26: empty_global0 = (upd empty_global q 0)),
  (* File "queue.c", line 35, characters 13-60 *) ((acc full_global0 q) =
  0 /\ result2 =
  (acc intM_global (shift (acc contents_global q) (acc first_global q)))) /\
  (((((((not_assigns alloc length_global length_global pset_empty) /\
  (not_assigns alloc last_global last_global pset_empty)) /\
  (not_assigns alloc intM_global intM_global pset_empty)) /\
  (not_assigns alloc full_global full_global0 (pset_singleton q))) /\
  (not_assigns alloc first_global first_global0 (pset_singleton q))) /\
  (not_assigns alloc empty_global empty_global0 (pset_singleton q))) /\
  (not_assigns alloc contents_global contents_global pset_empty)) /\
  (* File "queue.c", line 14, characters 5-105 *)
  (((valid_range alloc (acc contents_global q) 0 ((acc length_global q) - 1)) /\
  0 <= (acc first_global0 q) /\ (acc first_global0 q) <
  (acc length_global q)) /\ 0 <= (acc last_global q) /\ (acc last_global q) <
  (acc length_global q)).
Proof.
intuition.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition;subst;caduceus.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition;subst;caduceus.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition;subst;caduceus.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition;subst;caduceus.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
rewrite acc_upd_eq in HW_30;auto.
assert (1 + q # first_Z7 < q # length_Z7 \/ 1 + q # first_Z7 = q # length_Z7).
omega.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma push_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (contents_global: ((memory) ((pointer) global) global)),
  forall (first_global: ((memory) Z global)),
  forall (full_global: ((memory) Z global)),
  forall (last_global: ((memory) Z global)),
  forall (length_global: ((memory) Z global)),
  forall (q: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "queue.c", line 20, characters 14-21 *)
                 (acc full_global q) = 0 /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global q) /\ (acc first_global q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))) /\
                (valid_range alloc t 0 4) /\ (valid alloc q) /\
                ~((base_addr q) = (base_addr t))),
  forall (result: ((pointer) global)),
  forall (HW_2: result = (acc contents_global q)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc last_global q)),
  forall (last_global0: ((memory) Z global)),
  forall (HW_4: last_global0 = (upd last_global q (1 + result0))),
  forall (result1: ((pointer) global)),
  forall (HW_5: result1 = (shift result result0)),
  (valid alloc result1).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma push_impl_po_2 : 
  forall (c: Z),
  forall (alloc: alloc_table),
  forall (contents_global: ((memory) ((pointer) global) global)),
  forall (empty_global: ((memory) Z global)),
  forall (first_global: ((memory) Z global)),
  forall (full_global: ((memory) Z global)),
  forall (intM_global: ((memory) Z global)),
  forall (last_global: ((memory) Z global)),
  forall (length_global: ((memory) Z global)),
  forall (q: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "queue.c", line 20, characters 14-21 *)
                 (acc full_global q) = 0 /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global q) /\ (acc first_global q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))) /\
                (valid_range alloc t 0 4) /\ (valid alloc q) /\
                ~((base_addr q) = (base_addr t))),
  forall (result: ((pointer) global)),
  forall (HW_2: result = (acc contents_global q)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc last_global q)),
  forall (last_global0: ((memory) Z global)),
  forall (HW_4: last_global0 = (upd last_global q (1 + result0))),
  forall (result1: ((pointer) global)),
  forall (HW_5: result1 = (shift result result0)),
  forall (HW_6: (valid alloc result1)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_7: intM_global0 = (upd intM_global result1 c)),
  forall (result2: Z),
  forall (HW_8: result2 = (acc last_global0 q)),
  forall (result3: Z),
  forall (HW_9: result3 = (acc length_global q)),
  forall (HW_10: result2 = result3),
  forall (last_global1: ((memory) Z global)),
  forall (HW_11: last_global1 = (upd last_global0 q 0)),
  forall (empty_global0: ((memory) Z global)),
  forall (HW_12: empty_global0 = (upd empty_global q 0)),
  forall (result4: Z),
  forall (HW_13: result4 = (acc first_global q)),
  forall (result5: Z),
  forall (HW_14: result5 = (acc last_global1 q)),
  forall (HW_15: result4 = result5),
  forall (full_global0: ((memory) Z global)),
  forall (HW_16: full_global0 = (upd full_global q 1)),
  (* File "queue.c", line 22, characters 13-54 *) ((acc empty_global0 q) =
  0 /\
  (acc intM_global0 (shift (acc contents_global q) (acc last_global q))) = c) /\
  (((((((not_assigns alloc length_global length_global pset_empty) /\
  (not_assigns alloc last_global last_global1 (pset_singleton q))) /\
  (not_assigns alloc intM_global intM_global0
   (pset_singleton (shift (acc contents_global q) (acc last_global q))))) /\
  (not_assigns alloc full_global full_global0 (pset_singleton q))) /\
  (not_assigns alloc first_global first_global pset_empty)) /\
  (not_assigns alloc empty_global empty_global0 (pset_singleton q))) /\
  (not_assigns alloc contents_global contents_global pset_empty)) /\
  (* File "queue.c", line 14, characters 5-105 *)
  (((valid_range alloc (acc contents_global q) 0 ((acc length_global q) - 1)) /\
  0 <= (acc first_global q) /\ (acc first_global q) <
  (acc length_global q)) /\ 0 <= (acc last_global1 q) /\
  (acc last_global1 q) < (acc length_global q)).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma push_impl_po_3 : 
  forall (c: Z),
  forall (alloc: alloc_table),
  forall (contents_global: ((memory) ((pointer) global) global)),
  forall (empty_global: ((memory) Z global)),
  forall (first_global: ((memory) Z global)),
  forall (full_global: ((memory) Z global)),
  forall (intM_global: ((memory) Z global)),
  forall (last_global: ((memory) Z global)),
  forall (length_global: ((memory) Z global)),
  forall (q: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "queue.c", line 20, characters 14-21 *)
                 (acc full_global q) = 0 /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global q) /\ (acc first_global q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))) /\
                (valid_range alloc t 0 4) /\ (valid alloc q) /\
                ~((base_addr q) = (base_addr t))),
  forall (result: ((pointer) global)),
  forall (HW_2: result = (acc contents_global q)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc last_global q)),
  forall (last_global0: ((memory) Z global)),
  forall (HW_4: last_global0 = (upd last_global q (1 + result0))),
  forall (result1: ((pointer) global)),
  forall (HW_5: result1 = (shift result result0)),
  forall (HW_6: (valid alloc result1)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_7: intM_global0 = (upd intM_global result1 c)),
  forall (result2: Z),
  forall (HW_8: result2 = (acc last_global0 q)),
  forall (result3: Z),
  forall (HW_9: result3 = (acc length_global q)),
  forall (HW_10: result2 = result3),
  forall (last_global1: ((memory) Z global)),
  forall (HW_11: last_global1 = (upd last_global0 q 0)),
  forall (empty_global0: ((memory) Z global)),
  forall (HW_12: empty_global0 = (upd empty_global q 0)),
  forall (result4: Z),
  forall (HW_13: result4 = (acc first_global q)),
  forall (result5: Z),
  forall (HW_14: result5 = (acc last_global1 q)),
  forall (HW_17: result4 <> result5),
  forall (full_global0: ((memory) Z global)),
  forall (HW_18: full_global0 = (upd full_global q 0)),
  (* File "queue.c", line 22, characters 13-54 *) ((acc empty_global0 q) =
  0 /\
  (acc intM_global0 (shift (acc contents_global q) (acc last_global q))) = c) /\
  (((((((not_assigns alloc length_global length_global pset_empty) /\
  (not_assigns alloc last_global last_global1 (pset_singleton q))) /\
  (not_assigns alloc intM_global intM_global0
   (pset_singleton (shift (acc contents_global q) (acc last_global q))))) /\
  (not_assigns alloc full_global full_global0 (pset_singleton q))) /\
  (not_assigns alloc first_global first_global pset_empty)) /\
  (not_assigns alloc empty_global empty_global0 (pset_singleton q))) /\
  (not_assigns alloc contents_global contents_global pset_empty)) /\
  (* File "queue.c", line 14, characters 5-105 *)
  (((valid_range alloc (acc contents_global q) 0 ((acc length_global q) - 1)) /\
  0 <= (acc first_global q) /\ (acc first_global q) <
  (acc length_global q)) /\ 0 <= (acc last_global1 q) /\
  (acc last_global1 q) < (acc length_global q)).
Proof.
intuition;subst;auto;caduceus.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma push_impl_po_4 : 
  forall (c: Z),
  forall (alloc: alloc_table),
  forall (contents_global: ((memory) ((pointer) global) global)),
  forall (empty_global: ((memory) Z global)),
  forall (first_global: ((memory) Z global)),
  forall (full_global: ((memory) Z global)),
  forall (intM_global: ((memory) Z global)),
  forall (last_global: ((memory) Z global)),
  forall (length_global: ((memory) Z global)),
  forall (q: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "queue.c", line 20, characters 14-21 *)
                 (acc full_global q) = 0 /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global q) /\ (acc first_global q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))) /\
                (valid_range alloc t 0 4) /\ (valid alloc q) /\
                ~((base_addr q) = (base_addr t))),
  forall (result: ((pointer) global)),
  forall (HW_2: result = (acc contents_global q)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc last_global q)),
  forall (last_global0: ((memory) Z global)),
  forall (HW_4: last_global0 = (upd last_global q (1 + result0))),
  forall (result1: ((pointer) global)),
  forall (HW_5: result1 = (shift result result0)),
  forall (HW_6: (valid alloc result1)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_7: intM_global0 = (upd intM_global result1 c)),
  forall (result2: Z),
  forall (HW_8: result2 = (acc last_global0 q)),
  forall (result3: Z),
  forall (HW_9: result3 = (acc length_global q)),
  forall (HW_19: result2 <> result3),
  forall (empty_global0: ((memory) Z global)),
  forall (HW_20: empty_global0 = (upd empty_global q 0)),
  forall (result4: Z),
  forall (HW_21: result4 = (acc first_global q)),
  forall (result5: Z),
  forall (HW_22: result5 = (acc last_global0 q)),
  forall (HW_23: result4 = result5),
  forall (full_global0: ((memory) Z global)),
  forall (HW_24: full_global0 = (upd full_global q 1)),
  (* File "queue.c", line 22, characters 13-54 *) ((acc empty_global0 q) =
  0 /\
  (acc intM_global0 (shift (acc contents_global q) (acc last_global q))) = c) /\
  (((((((not_assigns alloc length_global length_global pset_empty) /\
  (not_assigns alloc last_global last_global0 (pset_singleton q))) /\
  (not_assigns alloc intM_global intM_global0
   (pset_singleton (shift (acc contents_global q) (acc last_global q))))) /\
  (not_assigns alloc full_global full_global0 (pset_singleton q))) /\
  (not_assigns alloc first_global first_global pset_empty)) /\
  (not_assigns alloc empty_global empty_global0 (pset_singleton q))) /\
  (not_assigns alloc contents_global contents_global pset_empty)) /\
  (* File "queue.c", line 14, characters 5-105 *)
  (((valid_range alloc (acc contents_global q) 0 ((acc length_global q) - 1)) /\
  0 <= (acc first_global q) /\ (acc first_global q) <
  (acc length_global q)) /\ 0 <= (acc last_global0 q) /\
  (acc last_global0 q) < (acc length_global q)).
Proof.
intuition.
subst;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma push_impl_po_5 : 
  forall (c: Z),
  forall (alloc: alloc_table),
  forall (contents_global: ((memory) ((pointer) global) global)),
  forall (empty_global: ((memory) Z global)),
  forall (first_global: ((memory) Z global)),
  forall (full_global: ((memory) Z global)),
  forall (intM_global: ((memory) Z global)),
  forall (last_global: ((memory) Z global)),
  forall (length_global: ((memory) Z global)),
  forall (q: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "queue.c", line 20, characters 14-21 *)
                 (acc full_global q) = 0 /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global q) /\ (acc first_global q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))) /\
                (valid_range alloc t 0 4) /\ (valid alloc q) /\
                ~((base_addr q) = (base_addr t))),
  forall (result: ((pointer) global)),
  forall (HW_2: result = (acc contents_global q)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc last_global q)),
  forall (last_global0: ((memory) Z global)),
  forall (HW_4: last_global0 = (upd last_global q (1 + result0))),
  forall (result1: ((pointer) global)),
  forall (HW_5: result1 = (shift result result0)),
  forall (HW_6: (valid alloc result1)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_7: intM_global0 = (upd intM_global result1 c)),
  forall (result2: Z),
  forall (HW_8: result2 = (acc last_global0 q)),
  forall (result3: Z),
  forall (HW_9: result3 = (acc length_global q)),
  forall (HW_19: result2 <> result3),
  forall (empty_global0: ((memory) Z global)),
  forall (HW_20: empty_global0 = (upd empty_global q 0)),
  forall (result4: Z),
  forall (HW_21: result4 = (acc first_global q)),
  forall (result5: Z),
  forall (HW_22: result5 = (acc last_global0 q)),
  forall (HW_25: result4 <> result5),
  forall (full_global0: ((memory) Z global)),
  forall (HW_26: full_global0 = (upd full_global q 0)),
  (* File "queue.c", line 22, characters 13-54 *) ((acc empty_global0 q) =
  0 /\
  (acc intM_global0 (shift (acc contents_global q) (acc last_global q))) = c) /\
  (((((((not_assigns alloc length_global length_global pset_empty) /\
  (not_assigns alloc last_global last_global0 (pset_singleton q))) /\
  (not_assigns alloc intM_global intM_global0
   (pset_singleton (shift (acc contents_global q) (acc last_global q))))) /\
  (not_assigns alloc full_global full_global0 (pset_singleton q))) /\
  (not_assigns alloc first_global first_global pset_empty)) /\
  (not_assigns alloc empty_global empty_global0 (pset_singleton q))) /\
  (not_assigns alloc contents_global contents_global pset_empty)) /\
  (* File "queue.c", line 14, characters 5-105 *)
  (((valid_range alloc (acc contents_global q) 0 ((acc length_global q) - 1)) /\
  0 <= (acc first_global q) /\ (acc first_global q) <
  (acc length_global q)) /\ 0 <= (acc last_global0 q) /\
  (acc last_global0 q) < (acc length_global q)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition;subst;caduceus.
auto.
red;intros.
rewrite acc_upd_neq;auto.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<> shift (q # contents_Z7) (q # last_Z7) ).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition;subst;caduceus.
auto.
red;intros.
rewrite acc_upd_neq;auto.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<> shift (q # contents_Z7) (q # last_Z7)).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition;subst;caduceus.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<> shift (q # contents_Z7) (q # last_Z7)).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition;subst;caduceus.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>shift (q # contents_Z7) (q # last_Z7) ).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<>q).
apply pset_singleton_elim;auto.
auto.
rewrite acc_upd_eq in HW_30;auto.
assert (1 + q # last_Z7 = q # length_Z7 \/ 1 + q # last_Z7 < q # length_Z7).
omega.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma test_impl_po_1 : 
  forall (q1: ((pointer) global)),
  forall (alloc: alloc_table),
  forall (contents_global: ((memory) ((pointer) global) global)),
  forall (empty_global: ((memory) Z global)),
  forall (first_global: ((memory) Z global)),
  forall (last_global: ((memory) Z global)),
  forall (length_global: ((memory) Z global)),
  forall (q: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "queue.c", line 45, characters 14-48 *)
                 (((valid alloc q1) /\ ~(q1 = q)) /\ (acc empty_global q) =
                 0) /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global q) /\ (acc first_global q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))) /\
                (valid_range alloc t 0 4) /\ (valid alloc q) /\
                ~((base_addr q) = (base_addr t))),
  (* File "queue.c", line 33, characters 14-22 *) (acc empty_global q) = 0 /\
  (* File "queue.c", line 14, characters 5-105 *)
  (((valid_range alloc (acc contents_global q) 0 ((acc length_global q) - 1)) /\
  0 <= (acc first_global q) /\ (acc first_global q) <
  (acc length_global q)) /\ 0 <= (acc last_global q) /\ (acc last_global q) <
  (acc length_global q)).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma test_impl_po_2 : 
  forall (q1: ((pointer) global)),
  forall (alloc: alloc_table),
  forall (contents_global: ((memory) ((pointer) global) global)),
  forall (empty_global: ((memory) Z global)),
  forall (first_global: ((memory) Z global)),
  forall (full_global: ((memory) Z global)),
  forall (intM_global: ((memory) Z global)),
  forall (last_global: ((memory) Z global)),
  forall (length_global: ((memory) Z global)),
  forall (q: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "queue.c", line 45, characters 14-48 *)
                 (((valid alloc q1) /\ ~(q1 = q)) /\ (acc empty_global q) =
                 0) /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global q) /\ (acc first_global q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))) /\
                (valid_range alloc t 0 4) /\ (valid alloc q) /\
                ~((base_addr q) = (base_addr t))),
  forall (HW_2: (* File "queue.c", line 33, characters 14-22 *)
                (acc empty_global q) = 0 /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global q) /\ (acc first_global q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))),
  forall (result: Z),
  forall (empty_global0: ((memory) Z global)),
  forall (first_global0: ((memory) Z global)),
  forall (full_global0: ((memory) Z global)),
  forall (HW_3: (* File "queue.c", line 35, characters 13-60 *)
                ((acc full_global0 q) = 0 /\ result =
                (acc intM_global
                 (shift (acc contents_global q) (acc first_global q)))) /\
                (((((((not_assigns alloc length_global length_global
                       pset_empty) /\
                (not_assigns alloc last_global last_global pset_empty)) /\
                (not_assigns alloc intM_global intM_global pset_empty)) /\
                (not_assigns alloc full_global full_global0
                 (pset_singleton q))) /\
                (not_assigns alloc first_global first_global0
                 (pset_singleton q))) /\
                (not_assigns alloc empty_global empty_global0
                 (pset_singleton q))) /\
                (not_assigns alloc contents_global contents_global pset_empty)) /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global0 q) /\ (acc first_global0 q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))),
  (valid alloc q1).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma test_impl_po_3 : 
  forall (q1: ((pointer) global)),
  forall (alloc: alloc_table),
  forall (contents_global: ((memory) ((pointer) global) global)),
  forall (empty_global: ((memory) Z global)),
  forall (first_global: ((memory) Z global)),
  forall (full_global: ((memory) Z global)),
  forall (intM_global: ((memory) Z global)),
  forall (last_global: ((memory) Z global)),
  forall (length_global: ((memory) Z global)),
  forall (q: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "queue.c", line 45, characters 14-48 *)
                 (((valid alloc q1) /\ ~(q1 = q)) /\ (acc empty_global q) =
                 0) /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global q) /\ (acc first_global q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))) /\
                (valid_range alloc t 0 4) /\ (valid alloc q) /\
                ~((base_addr q) = (base_addr t))),
  forall (HW_2: (* File "queue.c", line 33, characters 14-22 *)
                (acc empty_global q) = 0 /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global q) /\ (acc first_global q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))),
  forall (result: Z),
  forall (empty_global0: ((memory) Z global)),
  forall (first_global0: ((memory) Z global)),
  forall (full_global0: ((memory) Z global)),
  forall (HW_3: (* File "queue.c", line 35, characters 13-60 *)
                ((acc full_global0 q) = 0 /\ result =
                (acc intM_global
                 (shift (acc contents_global q) (acc first_global q)))) /\
                (((((((not_assigns alloc length_global length_global
                       pset_empty) /\
                (not_assigns alloc last_global last_global pset_empty)) /\
                (not_assigns alloc intM_global intM_global pset_empty)) /\
                (not_assigns alloc full_global full_global0
                 (pset_singleton q))) /\
                (not_assigns alloc first_global first_global0
                 (pset_singleton q))) /\
                (not_assigns alloc empty_global empty_global0
                 (pset_singleton q))) /\
                (not_assigns alloc contents_global contents_global pset_empty)) /\
                (* File "queue.c", line 14, characters 5-105 *)
                (((valid_range alloc (acc contents_global q) 0
                   ((acc length_global q) - 1)) /\
                0 <= (acc first_global0 q) /\ (acc first_global0 q) <
                (acc length_global q)) /\ 0 <= (acc last_global q) /\
                (acc last_global q) < (acc length_global q))),
  forall (HW_4: (valid alloc q1)),
  forall (result0: Z),
  forall (HW_5: result0 = (acc empty_global0 q1)),
  (* File "queue.c", line 46, characters 13-39 *) result0 =
  (acc empty_global q1) /\
  (* File "queue.c", line 14, characters 5-105 *)
  (((valid_range alloc (acc contents_global q) 0 ((acc length_global q) - 1)) /\
  0 <= (acc first_global0 q) /\ (acc first_global0 q) <
  (acc length_global q)) /\ 0 <= (acc last_global q) /\ (acc last_global q) <
  (acc length_global q)).
Proof.
intuition.
subst;auto.
Save.

