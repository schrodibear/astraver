(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export separation3_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_1 : 
  forall (LPM_global: ((memory) ((pointer) global) global)),
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (alloc: alloc_table),
  forall (b_global: ((memory) ((pointer) global) global)),
  forall (c_global: ((memory) ((pointer) global) global)),
  forall (intM_global: ((memory) Z global)),
  forall (l: ((pointer) global)),
  forall (p_global: ((memory) ((pointer) global) global)),
  forall (q_global: ((memory) ((pointer) global) global)),
  forall (r_global: ((memory) ((pointer) global) global)),
  forall (s0: ((pointer) global)),
  forall (HW_1: (valid alloc l) /\ (valid alloc s0) /\
                (~((base_addr l) = (base_addr s0)) /\
                (~((base_addr s0) = (base_addr (acc q_global
                                                (acc LPM_global l)))) /\
                ~((base_addr s0) = (base_addr (acc r_global
                                               (acc LPM_global l))))) /\
                ~((base_addr l) = (base_addr (acc b_global
                                              (acc SPM_global s0)))) /\
                ~((base_addr l) = (base_addr (acc c_global
                                              (acc SPM_global s0))))) /\
                (valid1 b_global) /\ (valid1_range b_global 5)),
  forall (result: ((pointer) global)),
  forall (HW_2: result = (acc b_global s0)),
  forall (result0: ((pointer) global)),
  forall (HW_3: result0 = (shift result 2)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_4: intM_global0 = (upd intM_global result0 1)),
  forall (p_global0: ((memory) ((pointer) global) global)),
  forall (HW_5: p_global0 = (upd p_global l s0)),
  forall (result1: ((pointer) global)),
  forall (HW_6: result1 = (acc p_global0 l)),
  (valid alloc result1).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_2 : 
  forall (LPM_global: ((memory) ((pointer) global) global)),
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (alloc: alloc_table),
  forall (b_global: ((memory) ((pointer) global) global)),
  forall (c_global: ((memory) ((pointer) global) global)),
  forall (intM_global: ((memory) Z global)),
  forall (l: ((pointer) global)),
  forall (p_global: ((memory) ((pointer) global) global)),
  forall (q_global: ((memory) ((pointer) global) global)),
  forall (r_global: ((memory) ((pointer) global) global)),
  forall (s0: ((pointer) global)),
  forall (HW_1: (valid alloc l) /\ (valid alloc s0) /\
                (~((base_addr l) = (base_addr s0)) /\
                (~((base_addr s0) = (base_addr (acc q_global
                                                (acc LPM_global l)))) /\
                ~((base_addr s0) = (base_addr (acc r_global
                                               (acc LPM_global l))))) /\
                ~((base_addr l) = (base_addr (acc b_global
                                              (acc SPM_global s0)))) /\
                ~((base_addr l) = (base_addr (acc c_global
                                              (acc SPM_global s0))))) /\
                (valid1 b_global) /\ (valid1_range b_global 5)),
  forall (result: ((pointer) global)),
  forall (HW_2: result = (acc b_global s0)),
  forall (result0: ((pointer) global)),
  forall (HW_3: result0 = (shift result 2)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_4: intM_global0 = (upd intM_global result0 1)),
  forall (p_global0: ((memory) ((pointer) global) global)),
  forall (HW_5: p_global0 = (upd p_global l s0)),
  forall (result1: ((pointer) global)),
  forall (HW_6: result1 = (acc p_global0 l)),
  forall (HW_7: (valid alloc result1)),
  forall (result2: ((pointer) global)),
  forall (HW_8: result2 = (acc b_global result1)),
  forall (result3: ((pointer) global)),
  forall (HW_9: result3 = (shift result2 2)),
  forall (result4: Z),
  forall (HW_10: result4 = (acc intM_global0 result3)),
  (* File "separation3.c", line 17, characters 13-25 *) result4 = 1.
Proof.
intuition; subst.
generalize (H3 s0 alloc HW_2);intro.
apply valid_range_valid_shift with 0 (5-1);auto.
omega.
Save.

Proof.
intuition; subst; try caduceus.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
subst.
caduceus.
Save.

Proof.
intuition.
subst;caduceus.
Save.

Proof.
intuition.
subst.
caduceus.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f3_impl_po_1 : 
  forall (LPM_global: ((memory) ((pointer) global) global)),
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (alloc: alloc_table),
  forall (b_global: ((memory) ((pointer) global) global)),
  forall (c_global: ((memory) ((pointer) global) global)),
  forall (intM_global: ((memory) Z global)),
  forall (l: ((pointer) global)),
  forall (q_global: ((memory) ((pointer) global) global)),
  forall (r_global: ((memory) ((pointer) global) global)),
  forall (s0: ((pointer) global)),
  forall (HW_1: (valid alloc l) /\ (valid alloc s0) /\
                (~((base_addr l) = (base_addr s0)) /\
                (~((base_addr s0) = (base_addr (acc q_global
                                                (acc LPM_global l)))) /\
                ~((base_addr s0) = (base_addr (acc r_global
                                               (acc LPM_global l))))) /\
                ~((base_addr l) = (base_addr (acc b_global
                                              (acc SPM_global s0)))) /\
                ~((base_addr l) = (base_addr (acc c_global
                                              (acc SPM_global s0))))) /\
                (valid1 c_global) /\ (valid1 b_global) /\
                (separation1 b_global c_global) /\
                (valid1_range c_global 5) /\ (valid1_range b_global 5)),
  forall (result: ((pointer) global)),
  forall (HW_2: result = (acc b_global s0)),
  forall (result0: ((pointer) global)),
  forall (HW_3: result0 = (shift result 2)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_4: intM_global0 = (upd intM_global result0 1)),
  forall (result1: ((pointer) global)),
  forall (HW_5: result1 = (acc c_global s0)),
  forall (result2: ((pointer) global)),
  forall (HW_6: result2 = (shift result1 2)),
  forall (intM_global1: ((memory) Z global)),
  forall (HW_7: intM_global1 = (upd intM_global0 result2 2)),
  forall (result3: ((pointer) global)),
  forall (HW_8: result3 = (acc b_global s0)),
  forall (result4: ((pointer) global)),
  forall (HW_9: result4 = (shift result3 2)),
  forall (result5: Z),
  forall (HW_10: result5 = (acc intM_global1 result4)),
  (* File "separation3.c", line 25, characters 13-25 *) result5 = 1.
Proof.
intuition.
Save.

Proof.
intuition; subst.
generalize (H2 s0 alloc HW_2);
 intuition.
apply valid_range_valid_shift with 0 (5-1);auto.
omega.
Save.

Proof.
intuition; subst; caduceus; auto.
Save.

Proof.
intuition.
subst.
generalize (H2 s0 alloc HW_2).
intro.
apply valid_range_valid_shift with 0 (5-1).
auto.
omega.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
subst.
auto.
Save.

Proof.
intuition.
subst;caduceus.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_1 : 
  forall (LPM_global: ((memory) ((pointer) global) global)),
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (a_global: ((memory) Z global)),
  forall (alloc: alloc_table),
  forall (b_global: ((memory) ((pointer) global) global)),
  forall (c_global: ((memory) ((pointer) global) global)),
  forall (l: ((pointer) global)),
  forall (q_global: ((memory) ((pointer) global) global)),
  forall (r_global: ((memory) ((pointer) global) global)),
  forall (s0: ((pointer) global)),
  forall (HW_1: (valid alloc l) /\ (valid alloc s0) /\
                (~((base_addr l) = (base_addr s0)) /\
                (~((base_addr s0) = (base_addr (acc q_global
                                                (acc LPM_global l)))) /\
                ~((base_addr s0) = (base_addr (acc r_global
                                               (acc LPM_global l))))) /\
                ~((base_addr l) = (base_addr (acc b_global
                                              (acc SPM_global s0)))) /\
                ~((base_addr l) = (base_addr (acc c_global
                                              (acc SPM_global s0))))) /\
                (separation2 q_global q_global) /\ (valid1 q_global)),
  forall (a_global0: ((memory) Z global)),
  forall (HW_2: a_global0 = (upd a_global s0 1)),
  forall (result: ((pointer) global)),
  forall (HW_3: result = (acc q_global l)),
  forall (a_global1: ((memory) Z global)),
  forall (HW_4: a_global1 = (upd a_global0 result 2)),
  forall (result0: Z),
  forall (HW_5: result0 = (acc a_global1 s0)),
  (* File "separation3.c", line 9, characters 13-25 *) result0 = 1.
Proof.
intuition; subst; valid.
Save.

Proof.
intuition; subst; caduceus.
Save.

Proof.
intuition.
subst.
red in H3;auto.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
subst;caduceus.
Save.

