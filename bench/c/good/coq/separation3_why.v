(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export separation3_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (l: ((pointer) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0) /\
                (valid1 b_Z9) /\ (valid1_range b_Z9 5)),
  (valid alloc s0).
Proof.
intuition.
subst;auto.
rewrite acc_upd_eq;auto.
rewrite acc_upd_eq;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (l: ((pointer) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0) /\
                (valid1 b_Z9) /\ (valid1_range b_Z9 5)),
  forall (HW_2: (valid alloc s0)),
  forall (result: ((pointer) Z0)),
  forall (HW_3: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_4: result0 = (shift result 2)),
  (valid alloc result0).
Proof.
intuition; subst.
rewrite acc_upd_eq;auto.

Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (l: ((pointer) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0) /\
                (valid1 b_Z9) /\ (valid1_range b_Z9 5)),
  forall (HW_2: (valid alloc s0)),
  forall (result: ((pointer) Z0)),
  forall (HW_3: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_4: result0 = (shift result 2)),
  forall (HW_5: (valid alloc result0)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_6: int_Z0_0 = (upd int_Z0 result0 1)),
  (valid alloc l).
Proof.
intuition; subst; try caduceus.
valid.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_4 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (l: ((pointer) Z12)),
  forall (p_Z12: ((memory) ((pointer) Z9) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0) /\
                (valid1 b_Z9) /\ (valid1_range b_Z9 5)),
  forall (HW_2: (valid alloc s0)),
  forall (result: ((pointer) Z0)),
  forall (HW_3: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_4: result0 = (shift result 2)),
  forall (HW_5: (valid alloc result0)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_6: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (HW_7: (valid alloc l)),
  forall (p_Z12_0: ((memory) ((pointer) Z9) Z12)),
  forall (HW_8: p_Z12_0 = (upd p_Z12 l s0)),
  (valid alloc l).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_5 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (l: ((pointer) Z12)),
  forall (p_Z12: ((memory) ((pointer) Z9) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0) /\
                (valid1 b_Z9) /\ (valid1_range b_Z9 5)),
  forall (HW_2: (valid alloc s0)),
  forall (result: ((pointer) Z0)),
  forall (HW_3: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_4: result0 = (shift result 2)),
  forall (HW_5: (valid alloc result0)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_6: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (HW_7: (valid alloc l)),
  forall (p_Z12_0: ((memory) ((pointer) Z9) Z12)),
  forall (HW_8: p_Z12_0 = (upd p_Z12 l s0)),
  forall (HW_9: (valid alloc l)),
  forall (result1: ((pointer) Z9)),
  forall (HW_10: result1 = (acc p_Z12_0 l)),
  (valid alloc result1).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_6 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (l: ((pointer) Z12)),
  forall (p_Z12: ((memory) ((pointer) Z9) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0) /\
                (valid1 b_Z9) /\ (valid1_range b_Z9 5)),
  forall (HW_2: (valid alloc s0)),
  forall (result: ((pointer) Z0)),
  forall (HW_3: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_4: result0 = (shift result 2)),
  forall (HW_5: (valid alloc result0)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_6: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (HW_7: (valid alloc l)),
  forall (p_Z12_0: ((memory) ((pointer) Z9) Z12)),
  forall (HW_8: p_Z12_0 = (upd p_Z12 l s0)),
  forall (HW_9: (valid alloc l)),
  forall (result1: ((pointer) Z9)),
  forall (HW_10: result1 = (acc p_Z12_0 l)),
  forall (HW_11: (valid alloc result1)),
  forall (result2: ((pointer) Z0)),
  forall (HW_12: result2 = (acc b_Z9 result1)),
  forall (result3: ((pointer) Z0)),
  forall (HW_13: result3 = (shift result2 2)),
  (valid alloc result3).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_7 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (l: ((pointer) Z12)),
  forall (p_Z12: ((memory) ((pointer) Z9) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0) /\
                (valid1 b_Z9) /\ (valid1_range b_Z9 5)),
  forall (HW_2: (valid alloc s0)),
  forall (result: ((pointer) Z0)),
  forall (HW_3: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_4: result0 = (shift result 2)),
  forall (HW_5: (valid alloc result0)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_6: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (HW_7: (valid alloc l)),
  forall (p_Z12_0: ((memory) ((pointer) Z9) Z12)),
  forall (HW_8: p_Z12_0 = (upd p_Z12 l s0)),
  forall (HW_9: (valid alloc l)),
  forall (result1: ((pointer) Z9)),
  forall (HW_10: result1 = (acc p_Z12_0 l)),
  forall (HW_11: (valid alloc result1)),
  forall (result2: ((pointer) Z0)),
  forall (HW_12: result2 = (acc b_Z9 result1)),
  forall (result3: ((pointer) Z0)),
  forall (HW_13: result3 = (shift result2 2)),
  forall (HW_14: (valid alloc result3)),
  forall (result4: Z),
  forall (HW_15: result4 = (acc int_Z0_0 result3)),
  (* File "separation3.c", line 17, characters 13-25 *) result4 = 1.
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f3_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (c_Z9: ((memory) ((pointer) Z1) Z9)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc s0 0 0) /\ (valid1 c_Z9) /\
                (valid1 b_Z9) /\ (valid1_range c_Z9 5) /\
                (valid1_range b_Z9 5)),
  (valid alloc s0).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f3_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (c_Z9: ((memory) ((pointer) Z1) Z9)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc s0 0 0) /\ (valid1 c_Z9) /\
                (valid1 b_Z9) /\ (valid1_range c_Z9 5) /\
                (valid1_range b_Z9 5)),
  forall (HW_2: (valid alloc s0)),
  forall (result: ((pointer) Z0)),
  forall (HW_3: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_4: result0 = (shift result 2)),
  (valid alloc result0).
Proof.
intuition; subst.
generalize (H5 s0 alloc Pre4);
 intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f3_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (c_Z9: ((memory) ((pointer) Z1) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc s0 0 0) /\ (valid1 c_Z9) /\
                (valid1 b_Z9) /\ (valid1_range c_Z9 5) /\
                (valid1_range b_Z9 5)),
  forall (HW_2: (valid alloc s0)),
  forall (result: ((pointer) Z0)),
  forall (HW_3: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_4: result0 = (shift result 2)),
  forall (HW_5: (valid alloc result0)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_6: int_Z0_0 = (upd int_Z0 result0 1)),
  (valid alloc s0).
Proof.
intuition; subst; caduceus; auto.
rewrite acc_upd_neq.
caduceus.
generalize (H2 s0 alloc Pre4).
intros;apply neq_base_addr_neq_shift;intuition.
generalize (neq_base_addr_neq_shift (s0#c) (s0#b) 2 2).
intuition.
generalize (H3 s0 alloc Pre4);  intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f3_impl_po_4 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (c_Z9: ((memory) ((pointer) Z1) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc s0 0 0) /\ (valid1 c_Z9) /\
                (valid1 b_Z9) /\ (valid1_range c_Z9 5) /\
                (valid1_range b_Z9 5)),
  forall (HW_2: (valid alloc s0)),
  forall (result: ((pointer) Z0)),
  forall (HW_3: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_4: result0 = (shift result 2)),
  forall (HW_5: (valid alloc result0)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_6: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (HW_7: (valid alloc s0)),
  forall (result1: ((pointer) Z1)),
  forall (HW_8: result1 = (acc c_Z9 s0)),
  forall (result2: ((pointer) Z1)),
  forall (HW_9: result2 = (shift result1 2)),
  (valid alloc result2).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f3_impl_po_5 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (c_Z9: ((memory) ((pointer) Z1) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc s0 0 0) /\ (valid1 c_Z9) /\
                (valid1 b_Z9) /\ (valid1_range c_Z9 5) /\
                (valid1_range b_Z9 5)),
  forall (HW_2: (valid alloc s0)),
  forall (result: ((pointer) Z0)),
  forall (HW_3: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_4: result0 = (shift result 2)),
  forall (HW_5: (valid alloc result0)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_6: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (HW_7: (valid alloc s0)),
  forall (result1: ((pointer) Z1)),
  forall (HW_8: result1 = (acc c_Z9 s0)),
  forall (result2: ((pointer) Z1)),
  forall (HW_9: result2 = (shift result1 2)),
  forall (HW_10: (valid alloc result2)),
  forall (int_Z1_0: ((memory) Z Z1)),
  forall (HW_11: int_Z1_0 = (upd int_Z1 result2 2)),
  (valid alloc s0).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f3_impl_po_6 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (c_Z9: ((memory) ((pointer) Z1) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc s0 0 0) /\ (valid1 c_Z9) /\
                (valid1 b_Z9) /\ (valid1_range c_Z9 5) /\
                (valid1_range b_Z9 5)),
  forall (HW_2: (valid alloc s0)),
  forall (result: ((pointer) Z0)),
  forall (HW_3: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_4: result0 = (shift result 2)),
  forall (HW_5: (valid alloc result0)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_6: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (HW_7: (valid alloc s0)),
  forall (result1: ((pointer) Z1)),
  forall (HW_8: result1 = (acc c_Z9 s0)),
  forall (result2: ((pointer) Z1)),
  forall (HW_9: result2 = (shift result1 2)),
  forall (HW_10: (valid alloc result2)),
  forall (int_Z1_0: ((memory) Z Z1)),
  forall (HW_11: int_Z1_0 = (upd int_Z1 result2 2)),
  forall (HW_12: (valid alloc s0)),
  forall (result3: ((pointer) Z0)),
  forall (HW_13: result3 = (acc b_Z9 s0)),
  forall (result4: ((pointer) Z0)),
  forall (HW_14: result4 = (shift result3 2)),
  (valid alloc result4).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f3_impl_po_7 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (c_Z9: ((memory) ((pointer) Z1) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc s0 0 0) /\ (valid1 c_Z9) /\
                (valid1 b_Z9) /\ (valid1_range c_Z9 5) /\
                (valid1_range b_Z9 5)),
  forall (HW_2: (valid alloc s0)),
  forall (result: ((pointer) Z0)),
  forall (HW_3: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_4: result0 = (shift result 2)),
  forall (HW_5: (valid alloc result0)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_6: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (HW_7: (valid alloc s0)),
  forall (result1: ((pointer) Z1)),
  forall (HW_8: result1 = (acc c_Z9 s0)),
  forall (result2: ((pointer) Z1)),
  forall (HW_9: result2 = (shift result1 2)),
  forall (HW_10: (valid alloc result2)),
  forall (int_Z1_0: ((memory) Z Z1)),
  forall (HW_11: int_Z1_0 = (upd int_Z1 result2 2)),
  forall (HW_12: (valid alloc s0)),
  forall (result3: ((pointer) Z0)),
  forall (HW_13: result3 = (acc b_Z9 s0)),
  forall (result4: ((pointer) Z0)),
  forall (HW_14: result4 = (shift result3 2)),
  forall (HW_15: (valid alloc result4)),
  forall (result5: Z),
  forall (HW_16: result5 = (acc int_Z0_0 result4)),
  (* File "separation3.c", line 25, characters 13-25 *) result5 = 1.
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (l: ((pointer) Z12)),
  forall (q_Z12: ((memory) ((pointer) Z2) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0) /\
                (separation2 q_Z12 q_Z12) /\ (valid1 q_Z12)),
  (valid alloc s0).
Proof.
intuition; subst; valid.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_2 : 
  forall (a_Z9: ((memory) Z Z9)),
  forall (alloc: alloc_table),
  forall (l: ((pointer) Z12)),
  forall (q_Z12: ((memory) ((pointer) Z2) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0) /\
                (separation2 q_Z12 q_Z12) /\ (valid1 q_Z12)),
  forall (HW_2: (valid alloc s0)),
  forall (a_Z9_0: ((memory) Z Z9)),
  forall (HW_3: a_Z9_0 = (upd a_Z9 s0 1)),
  (valid alloc l).
Proof.
intuition; subst; caduceus.
rewrite acc_upd_neq; caduceus.
rewrite <- (shift_zero (l#q)).
rewrite <- (shift_zero s0).
apply neq_base_addr_neq_shift.
auto.
red in H0.
apply H0.
apply valid_range_valid with 0 0;auto with *.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_3 : 
  forall (a_Z9: ((memory) Z Z9)),
  forall (alloc: alloc_table),
  forall (l: ((pointer) Z12)),
  forall (q_Z12: ((memory) ((pointer) Z2) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0) /\
                (separation2 q_Z12 q_Z12) /\ (valid1 q_Z12)),
  forall (HW_2: (valid alloc s0)),
  forall (a_Z9_0: ((memory) Z Z9)),
  forall (HW_3: a_Z9_0 = (upd a_Z9 s0 1)),
  forall (HW_4: (valid alloc l)),
  forall (result: ((pointer) Z2)),
  forall (HW_5: result = (acc q_Z12 l)),
  (valid alloc result).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_4 : 
  forall (a_Z2: ((memory) Z Z2)),
  forall (a_Z9: ((memory) Z Z9)),
  forall (alloc: alloc_table),
  forall (l: ((pointer) Z12)),
  forall (q_Z12: ((memory) ((pointer) Z2) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0) /\
                (separation2 q_Z12 q_Z12) /\ (valid1 q_Z12)),
  forall (HW_2: (valid alloc s0)),
  forall (a_Z9_0: ((memory) Z Z9)),
  forall (HW_3: a_Z9_0 = (upd a_Z9 s0 1)),
  forall (HW_4: (valid alloc l)),
  forall (result: ((pointer) Z2)),
  forall (HW_5: result = (acc q_Z12 l)),
  forall (HW_6: (valid alloc result)),
  forall (a_Z2_0: ((memory) Z Z2)),
  forall (HW_7: a_Z2_0 = (upd a_Z2 result 2)),
  (valid alloc s0).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_5 : 
  forall (a_Z2: ((memory) Z Z2)),
  forall (a_Z9: ((memory) Z Z9)),
  forall (alloc: alloc_table),
  forall (l: ((pointer) Z12)),
  forall (q_Z12: ((memory) ((pointer) Z2) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0) /\
                (separation2 q_Z12 q_Z12) /\ (valid1 q_Z12)),
  forall (HW_2: (valid alloc s0)),
  forall (a_Z9_0: ((memory) Z Z9)),
  forall (HW_3: a_Z9_0 = (upd a_Z9 s0 1)),
  forall (HW_4: (valid alloc l)),
  forall (result: ((pointer) Z2)),
  forall (HW_5: result = (acc q_Z12 l)),
  forall (HW_6: (valid alloc result)),
  forall (a_Z2_0: ((memory) Z Z2)),
  forall (HW_7: a_Z2_0 = (upd a_Z2 result 2)),
  forall (HW_8: (valid alloc s0)),
  forall (result0: Z),
  forall (HW_9: result0 = (acc a_Z9_0 s0)),
  (* File "separation3.c", line 9, characters 13-25 *) result0 = 1.
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

