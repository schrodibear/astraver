(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export separation3_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (l: ((pointer) Z12)),
  forall (p_Z12: ((memory) ((pointer) Z9) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0)),
  forall (result: ((pointer) Z0)),
  forall (HW_2: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_3: result0 = (shift result 2)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_4: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (p_Z12_0: ((memory) ((pointer) Z9) Z12)),
  forall (HW_5: p_Z12_0 = (upd p_Z12 l s0)),
  forall (result1: ((pointer) Z9)),
  forall (HW_6: result1 = (acc p_Z12_0 l)),
  forall (result2: ((pointer) Z0)),
  forall (HW_7: result2 = (acc b_Z9 result1)),
  forall (result3: ((pointer) Z0)),
  forall (HW_8: result3 = (shift result2 2)),
  forall (result4: Z),
  forall (HW_9: result4 = (acc int_Z0_0 result3)),
  (* File "separation3.c", line 17, characters 13-25 *) result4 = 1.
Proof.
intuition.
subst;auto.
rewrite acc_upd_eq;auto.
rewrite acc_upd_eq;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (l: ((pointer) Z12)),
  forall (p_Z12: ((memory) ((pointer) Z9) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0)),
  forall (result: ((pointer) Z0)),
  forall (HW_2: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_3: result0 = (shift result 2)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_4: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (p_Z12_0: ((memory) ((pointer) Z9) Z12)),
  forall (HW_5: p_Z12_0 = (upd p_Z12 l s0)),
  forall (result1: ((pointer) Z9)),
  forall (HW_6: result1 = (acc p_Z12_0 l)),
  forall (result2: ((pointer) Z0)),
  forall (HW_7: result2 = (acc b_Z9 result1)),
  forall (result3: ((pointer) Z0)),
  forall (HW_8: result3 = (shift result2 2)),
  forall (HW_10: (forall (result:Z),
                  (result = (acc int_Z0_0 result3) ->
                   (* File "separation3.c", line 17, characters 13-25 *)
                   result = 1))),
  (valid alloc result3).
Proof.
intuition; subst.
rewrite acc_upd_eq;auto.

Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (l: ((pointer) Z12)),
  forall (p_Z12: ((memory) ((pointer) Z9) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0)),
  forall (result: ((pointer) Z0)),
  forall (HW_2: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_3: result0 = (shift result 2)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_4: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (p_Z12_0: ((memory) ((pointer) Z9) Z12)),
  forall (HW_5: p_Z12_0 = (upd p_Z12 l s0)),
  forall (result1: ((pointer) Z9)),
  forall (HW_6: result1 = (acc p_Z12_0 l)),
  forall (HW_11: (forall (result:((pointer) Z0)),
                  (result = (acc b_Z9 result1) ->
                   (forall (result0:((pointer) Z0)),
                    (result0 = (shift result 2) ->
                     (forall (result:Z),
                      (result = (acc int_Z0_0 result0) ->
                       (* File "separation3.c", line 17, characters 13-25 *)
                       result = 1)) /\
                     (valid alloc result0)))))),
  (valid alloc result1).
Proof.
intuition; subst; try caduceus.
valid.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_4 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (l: ((pointer) Z12)),
  forall (p_Z12: ((memory) ((pointer) Z9) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0)),
  forall (result: ((pointer) Z0)),
  forall (HW_2: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_3: result0 = (shift result 2)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_4: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (p_Z12_0: ((memory) ((pointer) Z9) Z12)),
  forall (HW_5: p_Z12_0 = (upd p_Z12 l s0)),
  forall (HW_12: (forall (result:((pointer) Z9)),
                  (result = (acc p_Z12_0 l) ->
                   (forall (result0:((pointer) Z0)),
                    (result0 = (acc b_Z9 result) ->
                     (forall (result:((pointer) Z0)),
                      (result = (shift result0 2) ->
                       (forall (result0:Z),
                        (result0 = (acc int_Z0_0 result) ->
                         (* File "separation3.c", line 17, characters 13-25 *)
                         result0 = 1)) /\
                       (valid alloc result))))) /\
                   (valid alloc result)))),
  (valid alloc l).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_5 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (l: ((pointer) Z12)),
  forall (p_Z12: ((memory) ((pointer) Z9) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0)),
  forall (result: ((pointer) Z0)),
  forall (HW_2: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_3: result0 = (shift result 2)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_4: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (HW_13: (forall (p_Z12_0:((memory) ((pointer) Z9) Z12)),
                  (p_Z12_0 = (upd p_Z12 l s0) ->
                   (forall (result:((pointer) Z9)),
                    (result = (acc p_Z12_0 l) ->
                     (forall (result0:((pointer) Z0)),
                      (result0 = (acc b_Z9 result) ->
                       (forall (result:((pointer) Z0)),
                        (result = (shift result0 2) ->
                         (forall (result0:Z),
                          (result0 = (acc int_Z0_0 result) ->
                           (* File "separation3.c", line 17, characters 13-25 *)
                           result0 = 1)) /\
                         (valid alloc result))))) /\
                     (valid alloc result))) /\
                   (valid alloc l)))),
  (valid alloc l).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_6 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (l: ((pointer) Z12)),
  forall (p_Z12: ((memory) ((pointer) Z9) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0)),
  forall (result: ((pointer) Z0)),
  forall (HW_2: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_3: result0 = (shift result 2)),
  forall (HW_14: (forall (int_Z0_0:((memory) Z Z0)),
                  (int_Z0_0 = (upd int_Z0 result0 1) ->
                   (forall (p_Z12_0:((memory) ((pointer) Z9) Z12)),
                    (p_Z12_0 = (upd p_Z12 l s0) ->
                     (forall (result:((pointer) Z9)),
                      (result = (acc p_Z12_0 l) ->
                       (forall (result0:((pointer) Z0)),
                        (result0 = (acc b_Z9 result) ->
                         (forall (result:((pointer) Z0)),
                          (result = (shift result0 2) ->
                           (forall (result0:Z),
                            (result0 = (acc int_Z0_0 result) ->
                             (* File "separation3.c", line 17, characters 13-25 *)
                             result0 = 1)) /\
                           (valid alloc result))))) /\
                       (valid alloc result))) /\
                     (valid alloc l))) /\
                   (valid alloc l)))),
  (valid alloc result0).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_7 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (l: ((pointer) Z12)),
  forall (p_Z12: ((memory) ((pointer) Z9) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0)),
  forall (HW_15: (forall (result:((pointer) Z0)),
                  (result = (acc b_Z9 s0) ->
                   (forall (result0:((pointer) Z0)),
                    (result0 = (shift result 2) ->
                     (forall (int_Z0_0:((memory) Z Z0)),
                      (int_Z0_0 = (upd int_Z0 result0 1) ->
                       (forall (p_Z12_0:((memory) ((pointer) Z9) Z12)),
                        (p_Z12_0 = (upd p_Z12 l s0) ->
                         (forall (result:((pointer) Z9)),
                          (result = (acc p_Z12_0 l) ->
                           (forall (result0:((pointer) Z0)),
                            (result0 = (acc b_Z9 result) ->
                             (forall (result:((pointer) Z0)),
                              (result = (shift result0 2) ->
                               (forall (result0:Z),
                                (result0 = (acc int_Z0_0 result) ->
                                 (* File "separation3.c", line 17, characters 13-25 *)
                                 result0 = 1)) /\
                               (valid alloc result))))) /\
                           (valid alloc result))) /\
                         (valid alloc l))) /\
                       (valid alloc l))) /\
                     (valid alloc result0)))))),
  (valid alloc s0).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f3_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (c_Z9: ((memory) ((pointer) Z1) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc s0 0 0)),
  forall (result: ((pointer) Z0)),
  forall (HW_2: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_3: result0 = (shift result 2)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_4: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (result1: ((pointer) Z1)),
  forall (HW_5: result1 = (acc c_Z9 s0)),
  forall (result2: ((pointer) Z1)),
  forall (HW_6: result2 = (shift result1 2)),
  forall (int_Z1_0: ((memory) Z Z1)),
  forall (HW_7: int_Z1_0 = (upd int_Z1 result2 2)),
  forall (result3: ((pointer) Z0)),
  forall (HW_8: result3 = (acc b_Z9 s0)),
  forall (result4: ((pointer) Z0)),
  forall (HW_9: result4 = (shift result3 2)),
  forall (result5: Z),
  forall (HW_10: result5 = (acc int_Z0_0 result4)),
  (* File "separation3.c", line 25, characters 13-25 *) result5 = 1.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f3_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (c_Z9: ((memory) ((pointer) Z1) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc s0 0 0)),
  forall (result: ((pointer) Z0)),
  forall (HW_2: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_3: result0 = (shift result 2)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_4: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (result1: ((pointer) Z1)),
  forall (HW_5: result1 = (acc c_Z9 s0)),
  forall (result2: ((pointer) Z1)),
  forall (HW_6: result2 = (shift result1 2)),
  forall (int_Z1_0: ((memory) Z Z1)),
  forall (HW_7: int_Z1_0 = (upd int_Z1 result2 2)),
  forall (result3: ((pointer) Z0)),
  forall (HW_8: result3 = (acc b_Z9 s0)),
  forall (result4: ((pointer) Z0)),
  forall (HW_9: result4 = (shift result3 2)),
  forall (HW_11: (forall (result:Z),
                  (result = (acc int_Z0_0 result4) ->
                   (* File "separation3.c", line 25, characters 13-25 *)
                   result = 1))),
  (valid alloc result4).
Proof.
intuition; subst.
generalize (H5 s0 alloc Pre4);
 intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f3_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (c_Z9: ((memory) ((pointer) Z1) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc s0 0 0)),
  forall (result: ((pointer) Z0)),
  forall (HW_2: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_3: result0 = (shift result 2)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_4: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (result1: ((pointer) Z1)),
  forall (HW_5: result1 = (acc c_Z9 s0)),
  forall (result2: ((pointer) Z1)),
  forall (HW_6: result2 = (shift result1 2)),
  forall (int_Z1_0: ((memory) Z Z1)),
  forall (HW_7: int_Z1_0 = (upd int_Z1 result2 2)),
  forall (HW_12: (forall (result:((pointer) Z0)),
                  (result = (acc b_Z9 s0) ->
                   (forall (result0:((pointer) Z0)),
                    (result0 = (shift result 2) ->
                     (forall (result:Z),
                      (result = (acc int_Z0_0 result0) ->
                       (* File "separation3.c", line 25, characters 13-25 *)
                       result = 1)) /\
                     (valid alloc result0)))))),
  (valid alloc s0).
Proof.
intuition; subst; caduceus; auto.
rewrite acc_upd_neq.
caduceus.
generalize (H2 s0 alloc Pre4).
intros;apply neq_base_addr_neq_shift;intuition.
generalize (neq_base_addr_neq_shift (s0#c) (s0#b) 2 2).
intuition.
generalize (H3 s0 alloc Pre4);  intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f3_impl_po_4 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (c_Z9: ((memory) ((pointer) Z1) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc s0 0 0)),
  forall (result: ((pointer) Z0)),
  forall (HW_2: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_3: result0 = (shift result 2)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_4: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (result1: ((pointer) Z1)),
  forall (HW_5: result1 = (acc c_Z9 s0)),
  forall (result2: ((pointer) Z1)),
  forall (HW_6: result2 = (shift result1 2)),
  forall (HW_13: (forall (int_Z1_0:((memory) Z Z1)),
                  (int_Z1_0 = (upd int_Z1 result2 2) ->
                   (forall (result:((pointer) Z0)),
                    (result = (acc b_Z9 s0) ->
                     (forall (result0:((pointer) Z0)),
                      (result0 = (shift result 2) ->
                       (forall (result:Z),
                        (result = (acc int_Z0_0 result0) ->
                         (* File "separation3.c", line 25, characters 13-25 *)
                         result = 1)) /\
                       (valid alloc result0))))) /\
                   (valid alloc s0)))),
  (valid alloc result2).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f3_impl_po_5 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (c_Z9: ((memory) ((pointer) Z1) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc s0 0 0)),
  forall (result: ((pointer) Z0)),
  forall (HW_2: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_3: result0 = (shift result 2)),
  forall (int_Z0_0: ((memory) Z Z0)),
  forall (HW_4: int_Z0_0 = (upd int_Z0 result0 1)),
  forall (HW_14: (forall (result:((pointer) Z1)),
                  (result = (acc c_Z9 s0) ->
                   (forall (result0:((pointer) Z1)),
                    (result0 = (shift result 2) ->
                     (forall (int_Z1_0:((memory) Z Z1)),
                      (int_Z1_0 = (upd int_Z1 result0 2) ->
                       (forall (result:((pointer) Z0)),
                        (result = (acc b_Z9 s0) ->
                         (forall (result0:((pointer) Z0)),
                          (result0 = (shift result 2) ->
                           (forall (result:Z),
                            (result = (acc int_Z0_0 result0) ->
                             (* File "separation3.c", line 25, characters 13-25 *)
                             result = 1)) /\
                           (valid alloc result0))))) /\
                       (valid alloc s0))) /\
                     (valid alloc result0)))))),
  (valid alloc s0).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f3_impl_po_6 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (c_Z9: ((memory) ((pointer) Z1) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc s0 0 0)),
  forall (result: ((pointer) Z0)),
  forall (HW_2: result = (acc b_Z9 s0)),
  forall (result0: ((pointer) Z0)),
  forall (HW_3: result0 = (shift result 2)),
  forall (HW_15: (forall (int_Z0_0:((memory) Z Z0)),
                  (int_Z0_0 = (upd int_Z0 result0 1) ->
                   (forall (result:((pointer) Z1)),
                    (result = (acc c_Z9 s0) ->
                     (forall (result0:((pointer) Z1)),
                      (result0 = (shift result 2) ->
                       (forall (int_Z1_0:((memory) Z Z1)),
                        (int_Z1_0 = (upd int_Z1 result0 2) ->
                         (forall (result:((pointer) Z0)),
                          (result = (acc b_Z9 s0) ->
                           (forall (result0:((pointer) Z0)),
                            (result0 = (shift result 2) ->
                             (forall (result:Z),
                              (result = (acc int_Z0_0 result0) ->
                               (* File "separation3.c", line 25, characters 13-25 *)
                               result = 1)) /\
                             (valid alloc result0))))) /\
                         (valid alloc s0))) /\
                       (valid alloc result0))))) /\
                   (valid alloc s0)))),
  (valid alloc result0).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f3_impl_po_7 : 
  forall (alloc: alloc_table),
  forall (b_Z9: ((memory) ((pointer) Z0) Z9)),
  forall (c_Z9: ((memory) ((pointer) Z1) Z9)),
  forall (int_Z0: ((memory) Z Z0)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc s0 0 0)),
  forall (HW_16: (forall (result:((pointer) Z0)),
                  (result = (acc b_Z9 s0) ->
                   (forall (result0:((pointer) Z0)),
                    (result0 = (shift result 2) ->
                     (forall (int_Z0_0:((memory) Z Z0)),
                      (int_Z0_0 = (upd int_Z0 result0 1) ->
                       (forall (result:((pointer) Z1)),
                        (result = (acc c_Z9 s0) ->
                         (forall (result0:((pointer) Z1)),
                          (result0 = (shift result 2) ->
                           (forall (int_Z1_0:((memory) Z Z1)),
                            (int_Z1_0 = (upd int_Z1 result0 2) ->
                             (forall (result:((pointer) Z0)),
                              (result = (acc b_Z9 s0) ->
                               (forall (result0:((pointer) Z0)),
                                (result0 = (shift result 2) ->
                                 (forall (result:Z),
                                  (result = (acc int_Z0_0 result0) ->
                                   (* File "separation3.c", line 25, characters 13-25 *)
                                   result = 1)) /\
                                 (valid alloc result0))))) /\
                             (valid alloc s0))) /\
                           (valid alloc result0))))) /\
                       (valid alloc s0))) /\
                     (valid alloc result0)))))),
  (valid alloc s0).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_1 : 
  forall (a_Z2: ((memory) Z Z2)),
  forall (a_Z9: ((memory) Z Z9)),
  forall (alloc: alloc_table),
  forall (l: ((pointer) Z12)),
  forall (q_Z12: ((memory) ((pointer) Z2) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0)),
  forall (a_Z9_0: ((memory) Z Z9)),
  forall (HW_2: a_Z9_0 = (upd a_Z9 s0 1)),
  forall (result: ((pointer) Z2)),
  forall (HW_3: result = (acc q_Z12 l)),
  forall (a_Z2_0: ((memory) Z Z2)),
  forall (HW_4: a_Z2_0 = (upd a_Z2 result 2)),
  forall (result0: Z),
  forall (HW_5: result0 = (acc a_Z9_0 s0)),
  (* File "separation3.c", line 9, characters 13-25 *) result0 = 1.
Proof.
intuition; subst; valid.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_2 : 
  forall (a_Z2: ((memory) Z Z2)),
  forall (a_Z9: ((memory) Z Z9)),
  forall (alloc: alloc_table),
  forall (l: ((pointer) Z12)),
  forall (q_Z12: ((memory) ((pointer) Z2) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0)),
  forall (a_Z9_0: ((memory) Z Z9)),
  forall (HW_2: a_Z9_0 = (upd a_Z9 s0 1)),
  forall (result: ((pointer) Z2)),
  forall (HW_3: result = (acc q_Z12 l)),
  forall (a_Z2_0: ((memory) Z Z2)),
  forall (HW_4: a_Z2_0 = (upd a_Z2 result 2)),
  forall (HW_6: (forall (result:Z),
                 (result = (acc a_Z9_0 s0) ->
                  (* File "separation3.c", line 9, characters 13-25 *)
                  result = 1))),
  (valid alloc s0).
Proof.
intuition; subst; caduceus.
rewrite acc_upd_neq; caduceus.
rewrite <- (shift_zero (l#q)).
rewrite <- (shift_zero s0).
apply neq_base_addr_neq_shift.
auto.
red in H0.
apply H0.
apply valid_range_valid with 0 0;auto with *.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_3 : 
  forall (a_Z2: ((memory) Z Z2)),
  forall (a_Z9: ((memory) Z Z9)),
  forall (alloc: alloc_table),
  forall (l: ((pointer) Z12)),
  forall (q_Z12: ((memory) ((pointer) Z2) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0)),
  forall (a_Z9_0: ((memory) Z Z9)),
  forall (HW_2: a_Z9_0 = (upd a_Z9 s0 1)),
  forall (result: ((pointer) Z2)),
  forall (HW_3: result = (acc q_Z12 l)),
  forall (HW_7: (forall (a_Z2_0:((memory) Z Z2)),
                 (a_Z2_0 = (upd a_Z2 result 2) ->
                  (forall (result:Z),
                   (result = (acc a_Z9_0 s0) ->
                    (* File "separation3.c", line 9, characters 13-25 *)
                    result = 1)) /\
                  (valid alloc s0)))),
  (valid alloc result).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_4 : 
  forall (a_Z2: ((memory) Z Z2)),
  forall (a_Z9: ((memory) Z Z9)),
  forall (alloc: alloc_table),
  forall (l: ((pointer) Z12)),
  forall (q_Z12: ((memory) ((pointer) Z2) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0)),
  forall (a_Z9_0: ((memory) Z Z9)),
  forall (HW_2: a_Z9_0 = (upd a_Z9 s0 1)),
  forall (HW_8: (forall (result:((pointer) Z2)),
                 (result = (acc q_Z12 l) ->
                  (forall (a_Z2_0:((memory) Z Z2)),
                   (a_Z2_0 = (upd a_Z2 result 2) ->
                    (forall (result:Z),
                     (result = (acc a_Z9_0 s0) ->
                      (* File "separation3.c", line 9, characters 13-25 *)
                      result = 1)) /\
                    (valid alloc s0))) /\
                  (valid alloc result)))),
  (valid alloc l).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_5 : 
  forall (a_Z2: ((memory) Z Z2)),
  forall (a_Z9: ((memory) Z Z9)),
  forall (alloc: alloc_table),
  forall (l: ((pointer) Z12)),
  forall (q_Z12: ((memory) ((pointer) Z2) Z12)),
  forall (s0: ((pointer) Z9)),
  forall (HW_1: (valid_range alloc l 0 0) /\ (valid_range alloc s0 0 0)),
  forall (HW_9: (forall (a_Z9_0:((memory) Z Z9)),
                 (a_Z9_0 = (upd a_Z9 s0 1) ->
                  (forall (result:((pointer) Z2)),
                   (result = (acc q_Z12 l) ->
                    (forall (a_Z2_0:((memory) Z Z2)),
                     (a_Z2_0 = (upd a_Z2 result 2) ->
                      (forall (result:Z),
                       (result = (acc a_Z9_0 s0) ->
                        (* File "separation3.c", line 9, characters 13-25 *)
                        result = 1)) /\
                      (valid alloc s0))) /\
                    (valid alloc result))) /\
                  (valid alloc l)))),
  (valid alloc s0).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

