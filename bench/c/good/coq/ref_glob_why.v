(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export ref_glob_spec_why.

(* Why obligation from file "why/ref_glob.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f1_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (x: pointer),
  forall (HW_1: (valid_range alloc x 0 0)),
  forall (intP0: ((memory) Z)),
  forall (HW_2: intP0 = (upd intP x 1)),
  (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 23-29 *)
  (acc intP0 x) = 1 /\ (not_assigns alloc intP intP0 (pset_singleton x)).
Proof.
intuition.
subst;auto.
Qed.

(* Why obligation from file "why/ref_glob.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f1_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (x: pointer),
  forall (HW_1: (valid_range alloc x 0 0)),
  (valid alloc x).
Proof.
intuition;subst; caduceus.
red.
intros.
rewrite acc_upd_neq;auto.
generalize (pset_singleton_elim _ _ H0);auto.
Qed.

(* Why obligation from file "why/ref_glob.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (x: pointer),
  forall (HW_1: (valid_range alloc x 0 0)),
  forall (intP0: ((memory) Z)),
  forall (HW_2: (* File \"ref_glob.c819618234.c\", line 0, characters 7-14 *)
                (acc intP0 x) = 1 /\
                (not_assigns alloc intP intP0 (pset_singleton x))),
  (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 23-29 *)
  (acc intP0 x) = 1 /\ (not_assigns alloc intP intP0 (pset_singleton x)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.


(* Why obligation from file "why/ref_glob.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (x: pointer),
  forall (HW_1: (valid_range alloc x 0 0)),
  (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 10-19 *)
  (valid alloc x).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/ref_glob.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (c1: ((memory) pointer)),
  forall (c2: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (plas: pointer),
  forall (HW_1: (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 14-26 *)
                (valid alloc plas) /\ (valid1_range c2 1) /\
                (valid1_range c1 1) /\ (separation1 c2 c1) /\ (valid1 c2) /\
                (valid1 c1)),
  forall (result: pointer),
  forall (HW_2: result = (acc c2 plas)),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP result 2)),
  forall (result0: pointer),
  forall (HW_4: result0 = (acc c1 plas)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: (* File \"ref_glob.c819618234.c\", line 0, characters 7-14 *)
                (acc intP1 result0) = 1 /\
                (not_assigns alloc intP0 intP1 (pset_singleton result0))),
  forall (result1: pointer),
  forall (HW_6: result1 = (acc c2 plas)),
  forall (intP2: ((memory) Z)),
  forall (HW_7: (* File \"ref_glob.c819618234.c\", line 0, characters 7-14 *)
                (acc intP2 result1) = 1 /\
                (not_assigns alloc intP1 intP2 (pset_singleton result1))),
  (* File \"<built-in>\", line 0, characters 1-31 *)
  ((acc intP2 (acc c1 plas)) = 1 /\ (acc intP2 (acc c2 plas)) = 1) /\
  (not_assigns alloc intP intP2
   (pset_union (pset_singleton (acc c2 plas)) (pset_singleton (acc c1 plas)))).
Proof.
intuition.
Save.

(* Why obligation from file "why/ref_glob.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (c1: ((memory) pointer)),
  forall (c2: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (plas: pointer),
  forall (HW_1: (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 14-26 *)
                (valid alloc plas) /\ (valid1_range c2 1) /\
                (valid1_range c1 1) /\ (separation1 c2 c1) /\ (valid1 c2) /\
                (valid1 c1)),
  forall (result: pointer),
  forall (HW_2: result = (acc c2 plas)),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP result 2)),
  forall (result0: pointer),
  forall (HW_4: result0 = (acc c1 plas)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: (* File \"ref_glob.c819618234.c\", line 0, characters 7-14 *)
                (acc intP1 result0) = 1 /\
                (not_assigns alloc intP0 intP1 (pset_singleton result0))),
  forall (result1: pointer),
  forall (HW_6: result1 = (acc c2 plas)),
  (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 10-19 *)
  (valid alloc result1).
Proof.
intuition.
subst;auto.
Save.

(* Why obligation from file "why/ref_glob.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (c1: ((memory) pointer)),
  forall (c2: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (plas: pointer),
  forall (HW_1: (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 14-26 *)
                (valid alloc plas) /\ (valid1_range c2 1) /\
                (valid1_range c1 1) /\ (separation1 c2 c1) /\ (valid1 c2) /\
                (valid1 c1)),
  forall (result: pointer),
  forall (HW_2: result = (acc c2 plas)),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP result 2)),
  forall (result0: pointer),
  forall (HW_4: result0 = (acc c1 plas)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: (* File \"ref_glob.c819618234.c\", line 0, characters 7-14 *)
                (acc intP1 result0) = 1 /\
                (not_assigns alloc intP0 intP1 (pset_singleton result0))),
  (valid alloc plas).
Proof.
intuition.
subst.
rewrite H11;auto.
generalize (H2 plas alloc H).
intro.
apply pset_singleton_intro.
generalize (neq_base_addr_neq_shift (plas#c1) (plas#c2) 0 0 H4).
repeat rewrite shift_zero;auto.
subst;auto.
subst.
red.
intros.
rewrite H11;auto.
rewrite H8;auto.
rewrite acc_upd_neq;auto.
intro;subst.
generalize (pset_union_elim1 _  _ _  H6);auto.
apply not_not_in_pset_singleton.
generalize (pset_union_elim2 _  _ _  H6);auto.
generalize (pset_union_elim1 _ _ _ H6);auto.
subst;auto.
subst.
unfold valid1 in H5.
intuition.
Save.

(* Why obligation from file "why/ref_glob.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_4 : 
  forall (alloc: alloc_table),
  forall (c1: ((memory) pointer)),
  forall (c2: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (plas: pointer),
  forall (HW_1: (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 14-26 *)
                (valid alloc plas) /\ (valid1_range c2 1) /\
                (valid1_range c1 1) /\ (separation1 c2 c1) /\ (valid1 c2) /\
                (valid1 c1)),
  forall (result: pointer),
  forall (HW_2: result = (acc c2 plas)),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP result 2)),
  forall (result0: pointer),
  forall (HW_4: result0 = (acc c1 plas)),
  (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 10-19 *)
  (valid alloc result0).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/ref_glob.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_5 : 
  forall (alloc: alloc_table),
  forall (c1: ((memory) pointer)),
  forall (c2: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (plas: pointer),
  forall (HW_1: (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 14-26 *)
                (valid alloc plas) /\ (valid1_range c2 1) /\
                (valid1_range c1 1) /\ (separation1 c2 c1) /\ (valid1 c2) /\
                (valid1 c1)),
  forall (result: pointer),
  forall (HW_2: result = (acc c2 plas)),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP result 2)),
  (valid alloc plas).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/ref_glob.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_6 : 
  forall (alloc: alloc_table),
  forall (c1: ((memory) pointer)),
  forall (c2: ((memory) pointer)),
  forall (plas: pointer),
  forall (HW_1: (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 14-26 *)
                (valid alloc plas) /\ (valid1_range c2 1) /\
                (valid1_range c1 1) /\ (separation1 c2 c1) /\ (valid1 c2) /\
                (valid1 c1)),
  forall (result: pointer),
  forall (HW_2: result = (acc c2 plas)),
  (valid alloc result).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/ref_glob.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_7 : 
  forall (alloc: alloc_table),
  forall (c1: ((memory) pointer)),
  forall (c2: ((memory) pointer)),
  forall (plas: pointer),
  forall (HW_1: (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 14-26 *)
                (valid alloc plas) /\ (valid1_range c2 1) /\
                (valid1_range c1 1) /\ (separation1 c2 c1) /\ (valid1 c2) /\
                (valid1 c1)),
  (valid alloc plas).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/ref_glob.why", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_1 : 
  forall (p: pointer),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (HW_1: (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 10-19 *)
                (valid alloc p)),
  forall (intP0: ((memory) Z)),
  forall (HW_2: intP0 = (upd intP p 1)),
  (* File \"ref_glob.c819618234.c\", line 0, characters 7-14 *)
  (acc intP0 p) = 1 /\ (not_assigns alloc intP intP0 (pset_singleton p)).
Proof.
intuition.
Save.

(* Why obligation from file "why/ref_glob.why", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_2 : 
  forall (p: pointer),
  forall (alloc: alloc_table),
  forall (HW_1: (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 10-19 *)
                (valid alloc p)),
  (valid alloc p).
Proof.
intuition.
subst; caduceus.
Save.

(* Why obligation from file "why/ref_glob.why", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_1 : 
  forall (p: pointer),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (intPP: ((memory) pointer)),
  forall (HW_1: (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 10-34 *)
                ((valid alloc p) /\ (valid alloc (acc intPP p)))),
  forall (result: pointer),
  forall (HW_2: result = (acc intPP p)),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP result 2)),
  (* File \"ref_glob.c819618234.c\", line 0, characters 23-31 *)
  (acc intP0 (acc intPP p)) = 2 /\
  (not_assigns alloc intP intP0 (pset_singleton (acc intPP p))).
Proof.
intuition;subst;auto.
Save.

(* Why obligation from file "why/ref_glob.why", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_2 : 
  forall (p: pointer),
  forall (alloc: alloc_table),
  forall (intPP: ((memory) pointer)),
  forall (HW_1: (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 10-34 *)
                ((valid alloc p) /\ (valid alloc (acc intPP p)))),
  forall (result: pointer),
  forall (HW_2: result = (acc intPP p)),
  (valid alloc result).
Proof.
intuition;subst;auto.
Save.

(* Why obligation from file "why/ref_glob.why", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_3 : 
  forall (p: pointer),
  forall (alloc: alloc_table),
  forall (intPP: ((memory) pointer)),
  forall (HW_1: (* File \"ref_glob.c819618234.c1069824147.i\", line 0, characters 10-34 *)
                ((valid alloc p) /\ (valid alloc (acc intPP p)))),
  (valid alloc p).
Proof.
intuition; subst; caduceus.
red;intros.
rewrite acc_upd_neq;auto.
generalize (pset_singleton_elim _ _ H2);auto.
Save.

