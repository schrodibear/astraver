(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export caduceus_spec_why.

(* Why obligation from file "why/ref_glob.why", characters 175-202 *)
Lemma f1_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (x: pointer),
  forall (Pre4: (valid_range alloc x 0 1) /\ (valid_range alloc x 0 1) /\
                (separation_x_x x)),
  forall (caduceus_1: pointer),
  forall (Post3: caduceus_1 = x),
  (valid alloc caduceus_1).
Proof.
intuition.
subst;auto.
Qed.

(* Why obligation from file "why/ref_glob.why", characters 152-202 *)
Lemma f1_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (x: pointer),
  forall (Pre4: (valid_range alloc x 0 1) /\ (valid_range alloc x 0 1) /\
                (separation_x_x x)),
  forall (caduceus_1: pointer),
  forall (Post3: caduceus_1 = x),
  forall (Pre3: (valid alloc caduceus_1)),
  forall (intP0: ((memory) Z)),
  forall (Post5: intP0 = (upd intP caduceus_1 1)),
  (acc intP0 x) = 1 /\ (not_assigns alloc intP intP0 (pset_singleton x)).
Proof.
intuition.
subst; caduceus.
Qed.

(* Why obligation from file "why/ref_glob.why", characters 454-469 *)
Lemma f2_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (x: pointer),
  forall (Pre4: (valid_range alloc x 0 1) /\ (valid_range alloc x 0 1) /\
                (separation_x_x x)),
  (valid alloc x).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.


(* Why obligation from file "why/ref_glob.why", characters 2741-2768 *)
Lemma f4_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (c1: ((memory) pointer)),
  forall (c2: ((memory) pointer)),
  forall (plas: pointer),
  forall (Pre11: (valid alloc plas) /\ (valid1_range c2 1) /\
                 (valid1_range c1 1) /\ (separation2 c2 c2) /\
                 (separation2 c1 c2) /\
                 (forall (index_0:pointer),
                  ~((base_addr (acc c1 index_0)) = (base_addr (acc c2 index_0)))) /\
                 (forall (index_0:pointer),
                  ~((base_addr (acc c1 index_0)) = (base_addr (acc c2 index_0)))) /\
                 (forall (index_1:pointer),
                  (forall (index_2:pointer),
                   ~((base_addr (acc c1 index_1)) = (base_addr (acc c1
                                                                index_2))))) /\
                 (valid1 c2) /\ (valid1 c1) /\
                 (forall (index_7:pointer),
                  (forall (index_8:pointer),
                   ~((base_addr (acc c2 index_7)) = (base_addr (acc c2
                                                                index_8))))) /\
                 (forall (index_5:pointer),
                  (forall (index_6:pointer),
                   ~((base_addr (acc c2 index_5)) = (base_addr (acc c1
                                                                index_6))))) /\
                 (separation1 c1 c2) /\ (separation1 c1 c2) /\
                 (separation2 c1 c1)),
  forall (Pre4: (valid alloc plas)),
  forall (caduceus_1: pointer),
  forall (Post3: caduceus_1 = (acc c2 plas)),
  (valid alloc caduceus_1).
Proof.
intuition.
subst;auto.
Save.

(* Why obligation from file "why/ref_glob.why", characters 2703-2768 *)
Lemma f4_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (c1: ((memory) pointer)),
  forall (c2: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (plas: pointer),
  forall (Pre11: (valid alloc plas) /\ (valid1_range c2 1) /\
                 (valid1_range c1 1) /\ (separation2 c2 c2) /\
                 (separation2 c1 c2) /\
                 (forall (index_0:pointer),
                  ~((base_addr (acc c1 index_0)) = (base_addr (acc c2 index_0)))) /\
                 (forall (index_0:pointer),
                  ~((base_addr (acc c1 index_0)) = (base_addr (acc c2 index_0)))) /\
                 (forall (index_1:pointer),
                  (forall (index_2:pointer),
                   ~((base_addr (acc c1 index_1)) = (base_addr (acc c1
                                                                index_2))))) /\
                 (valid1 c2) /\ (valid1 c1) /\
                 (forall (index_7:pointer),
                  (forall (index_8:pointer),
                   ~((base_addr (acc c2 index_7)) = (base_addr (acc c2
                                                                index_8))))) /\
                 (forall (index_5:pointer),
                  (forall (index_6:pointer),
                   ~((base_addr (acc c2 index_5)) = (base_addr (acc c1
                                                                index_6))))) /\
                 (separation1 c1 c2) /\ (separation1 c1 c2) /\
                 (separation2 c1 c1)),
  forall (Pre4: (valid alloc plas)),
  forall (caduceus_1: pointer),
  forall (Post3: caduceus_1 = (acc c2 plas)),
  forall (Pre3: (valid alloc caduceus_1)),
  forall (intP0: ((memory) Z)),
  forall (Post8: intP0 = (upd intP caduceus_1 2)),
  (forall (result:pointer),
   (result = (acc c1 plas) ->
    (forall (intP1:((memory) Z)),
     ((acc intP1 result) = 1 /\
      (not_assigns alloc intP0 intP1 (pset_singleton result)) ->
      (forall (result:pointer),
       (result = (acc c2 plas) ->
        (forall (intP0:((memory) Z)),
         ((acc intP0 result) = 1 /\
          (not_assigns alloc intP1 intP0 (pset_singleton result)) ->
          ((acc intP0 (acc c1 plas)) = 1 /\ (acc intP0 (acc c2 plas)) = 1) /\
          (not_assigns alloc intP intP0
           (pset_union (pset_singleton (acc c2 plas))
            (pset_singleton (acc c1 plas)))))) /\
        (valid alloc result))) /\
      (valid alloc plas))) /\
    (valid alloc result))) /\
  (valid alloc plas).
Proof.
intuition.
subst.
rewrite H20;auto.
generalize (H4 plas ).
intro.
apply pset_singleton_intro.
generalize (neq_base_addr_neq_shift _ _ 0 0 H13).
repeat rewrite shift_zero;auto.
subst;auto.
subst.
red.
intros.
rewrite H20;auto.
rewrite H17;auto.
rewrite acc_upd_neq;auto.
intro;subst.
generalize (pset_union_elim1 _  _ _  H15);auto.
apply not_not_in_pset_singleton.
generalize (pset_union_elim2 _  _ _  H15);auto.
generalize (pset_union_elim1 _ _ _ H15);auto.
subst;auto.
subst.
unfold valid1 in H8.
intuition.
Save.

(* Why obligation from file "why/ref_glob.why", characters 3112-3266 *)
Lemma g_impl_po_1 : 
  forall (p: pointer),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (Pre3: (valid alloc p)),
  forall (intP0: ((memory) Z)),
  forall (Post3: intP0 = (upd intP p 1)),
  (acc intP0 p) = 1 /\ (not_assigns alloc intP intP0 (pset_singleton p)).
Proof.
intuition.
subst; caduceus.
Save.

(* Why obligation from file "why/ref_glob.why", characters 3424-3451 *)
Lemma h_impl_po_1 : 
  forall (p: pointer),
  forall (alloc: alloc_table),
  forall (intPP: ((memory) pointer)),
  forall (Pre5: (valid alloc p) /\ (valid alloc (acc intPP p))),
  forall (Pre4: (valid alloc p)),
  forall (caduceus_1: pointer),
  forall (Post3: caduceus_1 = (acc intPP p)),
  (valid alloc caduceus_1).
Proof.
intuition.
subst;auto.
Save.

(* Why obligation from file "why/ref_glob.why", characters 3387-3451 *)
Lemma h_impl_po_2 : 
  forall (p: pointer),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (intPP: ((memory) pointer)),
  forall (Pre5: (valid alloc p) /\ (valid alloc (acc intPP p))),
  forall (Pre4: (valid alloc p)),
  forall (caduceus_1: pointer),
  forall (Post3: caduceus_1 = (acc intPP p)),
  forall (Pre3: (valid alloc caduceus_1)),
  forall (intP0: ((memory) Z)),
  forall (Post5: intP0 = (upd intP caduceus_1 2)),
  (acc intP0 (acc intPP p)) = 2 /\
  (not_assigns alloc intP intP0 (pset_singleton (acc intPP p))).
Proof.
intuition;subst;auto.
caduceus.
Save.

