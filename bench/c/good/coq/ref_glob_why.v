(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export ref_glob_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f1_impl_po_1 : 
  forall (Int_Z11: ((memory) Z Z11)),
  forall (alloc: alloc_table),
  forall (t: ((pointer) Z13)),
  forall (x: ((pointer) Z11)),
  forall (HW_1: (valid alloc x) /\ (valid_range alloc t 0 2)),
  forall (Int_Z11_0: ((memory) Z Z11)),
  forall (HW_2: Int_Z11_0 = (upd Int_Z11 x 1)),
  (* File "ref_glob.c", line 13, characters 13-19 *) (acc Int_Z11_0 x) = 1 /\
  (not_assigns alloc Int_Z11 Int_Z11_0 (pset_singleton x)).
Proof.
intuition.
Qed.

Proof.
intuition;subst; caduceus.
red.
intros.
rewrite acc_upd_neq;auto.
generalize (pset_singleton_elim H0);auto.
Qed.

Proof.
intuition.
Save.


Proof.
intuition.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_1 : 
  forall (Int_Z8: ((memory) Z Z8)),
  forall (alloc: alloc_table),
  forall (c1_struct_anonymous_0_12: ((memory) ((pointer) Z9)
                                    struct_anonymous_0_12)),
  forall (c2_struct_anonymous_0_12: ((memory) ((pointer) Z8)
                                    struct_anonymous_0_12)),
  forall (plas: ((pointer) struct_anonymous_0_12)),
  forall (t: ((pointer) Z13)),
  forall (x: ((pointer) Z11)),
  forall (HW_1: (* File "ref_glob.c", line 30, characters 14-26 *)
                (valid alloc plas) /\ (valid alloc x) /\
                (valid_range alloc t 0 2) /\
                (valid1_range c2_struct_anonymous_0_12 1) /\
                (valid1_range c1_struct_anonymous_0_12 1) /\
                (valid1 c2_struct_anonymous_0_12) /\
                (valid1 c1_struct_anonymous_0_12)),
  forall (HW_2: (valid alloc plas)),
  forall (result: ((pointer) Z8)),
  forall (HW_3: result = (acc c2_struct_anonymous_0_12 plas)),
  forall (Int_Z8_0: ((memory) Z Z8)),
  forall (HW_4: Int_Z8_0 = (upd Int_Z8 result 2)),
  forall (HW_5: (valid alloc plas)),
  forall (result0: ((pointer) Z9)),
  forall (HW_6: result0 = (acc c1_struct_anonymous_0_12 plas)),
  (* File "ref_glob.c", line 2, characters 14-23 *) (valid alloc result0).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_2 : 
  forall (Int_Z8: ((memory) Z Z8)),
  forall (Int_Z9: ((memory) Z Z9)),
  forall (alloc: alloc_table),
  forall (c1_struct_anonymous_0_12: ((memory) ((pointer) Z9)
                                    struct_anonymous_0_12)),
  forall (c2_struct_anonymous_0_12: ((memory) ((pointer) Z8)
                                    struct_anonymous_0_12)),
  forall (plas: ((pointer) struct_anonymous_0_12)),
  forall (t: ((pointer) Z13)),
  forall (x: ((pointer) Z11)),
  forall (HW_1: (* File "ref_glob.c", line 30, characters 14-26 *)
                (valid alloc plas) /\ (valid alloc x) /\
                (valid_range alloc t 0 2) /\
                (valid1_range c2_struct_anonymous_0_12 1) /\
                (valid1_range c1_struct_anonymous_0_12 1) /\
                (valid1 c2_struct_anonymous_0_12) /\
                (valid1 c1_struct_anonymous_0_12)),
  forall (HW_2: (valid alloc plas)),
  forall (result: ((pointer) Z8)),
  forall (HW_3: result = (acc c2_struct_anonymous_0_12 plas)),
  forall (Int_Z8_0: ((memory) Z Z8)),
  forall (HW_4: Int_Z8_0 = (upd Int_Z8 result 2)),
  forall (HW_5: (valid alloc plas)),
  forall (result0: ((pointer) Z9)),
  forall (HW_6: result0 = (acc c1_struct_anonymous_0_12 plas)),
  forall (HW_7: (* File "ref_glob.c", line 2, characters 14-23 *)
                (valid alloc result0)),
  forall (Int_Z9_0: ((memory) Z Z9)),
  forall (HW_8: (* File "ref_glob.c", line 4, characters 13-20 *)
                (acc Int_Z9_0 result0) = 1 /\
                (not_assigns alloc Int_Z9 Int_Z9_0 (pset_singleton result0))),
  forall (HW_9: (valid alloc plas)),
  forall (result1: ((pointer) Z8)),
  forall (HW_10: result1 = (acc c2_struct_anonymous_0_12 plas)),
  (* File "ref_glob.c", line 2, characters 14-23 *) (valid alloc result1).
Proof.
intuition.
subst;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_3 : 
  forall (Int_Z8: ((memory) Z Z8)),
  forall (Int_Z9: ((memory) Z Z9)),
  forall (alloc: alloc_table),
  forall (c1_struct_anonymous_0_12: ((memory) ((pointer) Z9)
                                    struct_anonymous_0_12)),
  forall (c2_struct_anonymous_0_12: ((memory) ((pointer) Z8)
                                    struct_anonymous_0_12)),
  forall (plas: ((pointer) struct_anonymous_0_12)),
  forall (t: ((pointer) Z13)),
  forall (x: ((pointer) Z11)),
  forall (HW_1: (* File "ref_glob.c", line 30, characters 14-26 *)
                (valid alloc plas) /\ (valid alloc x) /\
                (valid_range alloc t 0 2) /\
                (valid1_range c2_struct_anonymous_0_12 1) /\
                (valid1_range c1_struct_anonymous_0_12 1) /\
                (valid1 c2_struct_anonymous_0_12) /\
                (valid1 c1_struct_anonymous_0_12)),
  forall (HW_2: (valid alloc plas)),
  forall (result: ((pointer) Z8)),
  forall (HW_3: result = (acc c2_struct_anonymous_0_12 plas)),
  forall (Int_Z8_0: ((memory) Z Z8)),
  forall (HW_4: Int_Z8_0 = (upd Int_Z8 result 2)),
  forall (HW_5: (valid alloc plas)),
  forall (result0: ((pointer) Z9)),
  forall (HW_6: result0 = (acc c1_struct_anonymous_0_12 plas)),
  forall (HW_7: (* File "ref_glob.c", line 2, characters 14-23 *)
                (valid alloc result0)),
  forall (Int_Z9_0: ((memory) Z Z9)),
  forall (HW_8: (* File "ref_glob.c", line 4, characters 13-20 *)
                (acc Int_Z9_0 result0) = 1 /\
                (not_assigns alloc Int_Z9 Int_Z9_0 (pset_singleton result0))),
  forall (HW_9: (valid alloc plas)),
  forall (result1: ((pointer) Z8)),
  forall (HW_10: result1 = (acc c2_struct_anonymous_0_12 plas)),
  forall (HW_11: (* File "ref_glob.c", line 2, characters 14-23 *)
                 (valid alloc result1)),
  forall (Int_Z8_1: ((memory) Z Z8)),
  forall (HW_12: (* File "ref_glob.c", line 4, characters 13-20 *)
                 (acc Int_Z8_1 result1) = 1 /\
                 (not_assigns alloc Int_Z8_0 Int_Z8_1
                  (pset_singleton result1))),
  (* File "ref_glob.c", line 32, characters 13-43 *)
  ((acc Int_Z9_0 (acc c1_struct_anonymous_0_12 plas)) = 1 /\
  (acc Int_Z8_1 (acc c2_struct_anonymous_0_12 plas)) = 1) /\
  (((not_assigns alloc c2_struct_anonymous_0_12 c2_struct_anonymous_0_12
     pset_empty) /\
  (not_assigns alloc c1_struct_anonymous_0_12 c1_struct_anonymous_0_12
   pset_empty)) /\
  (not_assigns alloc Int_Z9 Int_Z9_0
   (pset_singleton (acc c1_struct_anonymous_0_12 plas)))) /\
  (not_assigns alloc Int_Z8 Int_Z8_1
   (pset_singleton (acc c2_struct_anonymous_0_12 plas))).
Proof.
intuition.
Save.

Proof.
intuition.
subst;auto.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
subst;auto.
Save.

Proof.
intuition.
subst.
rewrite H8;auto.
apply pset_singleton_intro.
red in H2.
replace (plas # c1_Z12 <> plas # c2_Z12) with (shift (plas # c1_Z12) 0 <> shift (plas # c2_Z12) 0).
apply neq_base_addr_neq_shift.
apply H2 with alloc;auto.
rewrite shift_zero;rewrite shift_zero;auto.
subst;auto.
red;intros.
rewrite H8;auto.
rewrite H6;auto.
subst.
rewrite acc_upd_neq;auto.
generalize (pset_union_elim1 H10);intro.
assert (p<> plas # c2_Z12).
apply pset_singleton_elim;auto.
auto.
subst.
generalize (pset_union_elim2 H10);auto.
subst.
generalize (pset_union_elim1 H10);auto.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_1 : 
  forall (A892:Set),
  forall (p: ((pointer) A892)),
  forall (Int_Z10: ((memory) Z A892)),
  forall (alloc: alloc_table),
  forall (t: ((pointer) Z13)),
  forall (x: ((pointer) Z11)),
  forall (HW_1: (* File "ref_glob.c", line 2, characters 14-23 *)
                (valid alloc p) /\ (valid alloc x) /\
                (valid_range alloc t 0 2)),
  forall (HW_2: (valid alloc p)),
  forall (Int_Z10_0: ((memory) Z A892)),
  forall (HW_3: Int_Z10_0 = (upd Int_Z10 p 1)),
  (* File "ref_glob.c", line 4, characters 13-20 *) (acc Int_Z10_0 p) = 1 /\
  (not_assigns alloc Int_Z10 Int_Z10_0 (pset_singleton p)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_1 : 
  forall (A893:Set),
  forall (p: ((pointer) A893)),
  forall (IntP_Z14: ((memory) ((pointer) Z15) A893)),
  forall (alloc: alloc_table),
  forall (t: ((pointer) Z13)),
  forall (x: ((pointer) Z11)),
  forall (HW_1: (* File "ref_glob.c", line 45, characters 14-38 *)
                ((valid alloc p) /\ (valid alloc (acc IntP_Z14 p))) /\
                (valid alloc x) /\ (valid_range alloc t 0 2)),
  (valid alloc p).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_2 : 
  forall (A894:Set),
  forall (p: ((pointer) A894)),
  forall (IntP_Z14: ((memory) ((pointer) Z15) A894)),
  forall (alloc: alloc_table),
  forall (t: ((pointer) Z13)),
  forall (x: ((pointer) Z11)),
  forall (HW_1: (* File "ref_glob.c", line 45, characters 14-38 *)
                ((valid alloc p) /\ (valid alloc (acc IntP_Z14 p))) /\
                (valid alloc x) /\ (valid_range alloc t 0 2)),
  forall (HW_2: (valid alloc p)),
  forall (result: ((pointer) Z15)),
  forall (HW_3: result = (acc IntP_Z14 p)),
  (valid alloc result).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_3 : 
  forall (A895:Set),
  forall (p: ((pointer) A895)),
  forall (IntP_Z14: ((memory) ((pointer) Z15) A895)),
  forall (Int_Z15: ((memory) Z Z15)),
  forall (alloc: alloc_table),
  forall (t: ((pointer) Z13)),
  forall (x: ((pointer) Z11)),
  forall (HW_1: (* File "ref_glob.c", line 45, characters 14-38 *)
                ((valid alloc p) /\ (valid alloc (acc IntP_Z14 p))) /\
                (valid alloc x) /\ (valid_range alloc t 0 2)),
  forall (HW_2: (valid alloc p)),
  forall (result: ((pointer) Z15)),
  forall (HW_3: result = (acc IntP_Z14 p)),
  forall (HW_4: (valid alloc result)),
  forall (Int_Z15_0: ((memory) Z Z15)),
  forall (HW_5: Int_Z15_0 = (upd Int_Z15 result 2)),
  (* File "ref_glob.c", line 47, characters 13-21 *)
  (acc Int_Z15_0 (acc IntP_Z14 p)) = 2 /\
  (not_assigns alloc Int_Z15 Int_Z15_0 (pset_singleton (acc IntP_Z14 p))) /\
  (not_assigns alloc IntP_Z14 IntP_Z14 pset_empty).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

