(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export ref_glob_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f1_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (intM_global: ((memory) Z global)),
  forall (t: ((pointer) global)),
  forall (x: ((pointer) global)),
  forall (HW_1: (valid alloc x) /\ (valid_range alloc t 0 2) /\
                ~((base_addr t) = (base_addr x))),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_2: intM_global0 = (upd intM_global x 1)),
  (* File "ref_glob.c", line 13, characters 13-19 *) (acc intM_global0 x) = 1 /\
  (not_assigns alloc intM_global intM_global0 (pset_singleton x)).
Proof.
intuition.
Qed.

Proof.
intuition;subst; caduceus.
red.
intros.
rewrite acc_upd_neq;auto.
generalize (pset_singleton_elim H0);auto.
Qed.

Proof.
intuition.
Save.


Proof.
intuition.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (c1_global: ((memory) ((pointer) global) global)),
  forall (c2_global: ((memory) ((pointer) global) global)),
  forall (intM_global: ((memory) Z global)),
  forall (plas: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (x: ((pointer) global)),
  forall (HW_1: (* File "ref_glob.c", line 30, characters 14-26 *)
                (valid alloc plas) /\ (valid alloc x) /\
                (valid_range alloc t 0 2) /\
                ~((base_addr t) = (base_addr x)) /\
                (valid1_range c2_global 1) /\ (valid1_range c1_global 1) /\
                (separation1 c1_global c2_global) /\ (valid1 c2_global) /\
                (valid1 c1_global)),
  forall (HW_2: (valid alloc plas)),
  forall (result: ((pointer) global)),
  forall (HW_3: result = (acc c2_global plas)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_4: intM_global0 = (upd intM_global result 2)),
  forall (HW_5: (valid alloc plas)),
  forall (result0: ((pointer) global)),
  forall (HW_6: result0 = (acc c1_global plas)),
  (* File "ref_glob.c", line 2, characters 14-23 *) (valid alloc result0).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (c1_global: ((memory) ((pointer) global) global)),
  forall (c2_global: ((memory) ((pointer) global) global)),
  forall (intM_global: ((memory) Z global)),
  forall (plas: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (x: ((pointer) global)),
  forall (HW_1: (* File "ref_glob.c", line 30, characters 14-26 *)
                (valid alloc plas) /\ (valid alloc x) /\
                (valid_range alloc t 0 2) /\
                ~((base_addr t) = (base_addr x)) /\
                (valid1_range c2_global 1) /\ (valid1_range c1_global 1) /\
                (separation1 c1_global c2_global) /\ (valid1 c2_global) /\
                (valid1 c1_global)),
  forall (HW_2: (valid alloc plas)),
  forall (result: ((pointer) global)),
  forall (HW_3: result = (acc c2_global plas)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_4: intM_global0 = (upd intM_global result 2)),
  forall (HW_5: (valid alloc plas)),
  forall (result0: ((pointer) global)),
  forall (HW_6: result0 = (acc c1_global plas)),
  forall (HW_7: (* File "ref_glob.c", line 2, characters 14-23 *)
                (valid alloc result0)),
  forall (intM_global1: ((memory) Z global)),
  forall (HW_8: (* File "ref_glob.c", line 4, characters 13-20 *)
                (acc intM_global1 result0) = 1 /\
                (not_assigns alloc intM_global0 intM_global1
                 (pset_singleton result0))),
  forall (HW_9: (valid alloc plas)),
  forall (result1: ((pointer) global)),
  forall (HW_10: result1 = (acc c2_global plas)),
  (* File "ref_glob.c", line 2, characters 14-23 *) (valid alloc result1).
Proof.
intuition.
subst;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (c1_global: ((memory) ((pointer) global) global)),
  forall (c2_global: ((memory) ((pointer) global) global)),
  forall (intM_global: ((memory) Z global)),
  forall (plas: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (x: ((pointer) global)),
  forall (HW_1: (* File "ref_glob.c", line 30, characters 14-26 *)
                (valid alloc plas) /\ (valid alloc x) /\
                (valid_range alloc t 0 2) /\
                ~((base_addr t) = (base_addr x)) /\
                (valid1_range c2_global 1) /\ (valid1_range c1_global 1) /\
                (separation1 c1_global c2_global) /\ (valid1 c2_global) /\
                (valid1 c1_global)),
  forall (HW_2: (valid alloc plas)),
  forall (result: ((pointer) global)),
  forall (HW_3: result = (acc c2_global plas)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_4: intM_global0 = (upd intM_global result 2)),
  forall (HW_5: (valid alloc plas)),
  forall (result0: ((pointer) global)),
  forall (HW_6: result0 = (acc c1_global plas)),
  forall (HW_7: (* File "ref_glob.c", line 2, characters 14-23 *)
                (valid alloc result0)),
  forall (intM_global1: ((memory) Z global)),
  forall (HW_8: (* File "ref_glob.c", line 4, characters 13-20 *)
                (acc intM_global1 result0) = 1 /\
                (not_assigns alloc intM_global0 intM_global1
                 (pset_singleton result0))),
  forall (HW_9: (valid alloc plas)),
  forall (result1: ((pointer) global)),
  forall (HW_10: result1 = (acc c2_global plas)),
  forall (HW_11: (* File "ref_glob.c", line 2, characters 14-23 *)
                 (valid alloc result1)),
  forall (intM_global2: ((memory) Z global)),
  forall (HW_12: (* File "ref_glob.c", line 4, characters 13-20 *)
                 (acc intM_global2 result1) = 1 /\
                 (not_assigns alloc intM_global1 intM_global2
                  (pset_singleton result1))),
  (* File "ref_glob.c", line 32, characters 13-43 *)
  ((acc intM_global2 (acc c1_global plas)) = 1 /\
  (acc intM_global2 (acc c2_global plas)) = 1) /\
  ((not_assigns alloc intM_global intM_global2
    (pset_union (pset_singleton (acc c2_global plas))
     (pset_singleton (acc c1_global plas)))) /\
  (not_assigns alloc c2_global c2_global pset_empty)) /\
  (not_assigns alloc c1_global c1_global pset_empty).
Proof.
intuition.
Save.

Proof.
intuition.
subst;auto.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
subst;auto.
Save.

Proof.
intuition.
subst.
rewrite H8;auto.
apply pset_singleton_intro.
red in H2.
replace (plas # c1_Z12 <> plas # c2_Z12) with (shift (plas # c1_Z12) 0 <> shift (plas # c2_Z12) 0).
apply neq_base_addr_neq_shift.
apply H2 with alloc;auto.
rewrite shift_zero;rewrite shift_zero;auto.
subst;auto.
red;intros.
rewrite H8;auto.
rewrite H6;auto.
subst.
rewrite acc_upd_neq;auto.
generalize (pset_union_elim1 H10);intro.
assert (p<> plas # c2_Z12).
apply pset_singleton_elim;auto.
auto.
subst.
generalize (pset_union_elim2 H10);auto.
subst.
generalize (pset_union_elim1 H10);auto.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_1 : 
  forall (p: ((pointer) global)),
  forall (alloc: alloc_table),
  forall (intM_global: ((memory) Z global)),
  forall (t: ((pointer) global)),
  forall (x: ((pointer) global)),
  forall (HW_1: (* File "ref_glob.c", line 2, characters 14-23 *)
                (valid alloc p) /\ (valid alloc x) /\
                (valid_range alloc t 0 2) /\ ~((base_addr t) = (base_addr x))),
  forall (HW_2: (valid alloc p)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_3: intM_global0 = (upd intM_global p 1)),
  (* File "ref_glob.c", line 4, characters 13-20 *) (acc intM_global0 p) = 1 /\
  (not_assigns alloc intM_global intM_global0 (pset_singleton p)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_1 : 
  forall (p: ((pointer) global)),
  forall (alloc: alloc_table),
  forall (intPM_global: ((memory) ((pointer) global) global)),
  forall (t: ((pointer) global)),
  forall (x: ((pointer) global)),
  forall (HW_1: (* File "ref_glob.c", line 45, characters 14-38 *)
                ((valid alloc p) /\ (valid alloc (acc intPM_global p))) /\
                (valid alloc x) /\ (valid_range alloc t 0 2) /\
                ~((base_addr t) = (base_addr x))),
  (valid alloc p).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_2 : 
  forall (p: ((pointer) global)),
  forall (alloc: alloc_table),
  forall (intPM_global: ((memory) ((pointer) global) global)),
  forall (t: ((pointer) global)),
  forall (x: ((pointer) global)),
  forall (HW_1: (* File "ref_glob.c", line 45, characters 14-38 *)
                ((valid alloc p) /\ (valid alloc (acc intPM_global p))) /\
                (valid alloc x) /\ (valid_range alloc t 0 2) /\
                ~((base_addr t) = (base_addr x))),
  forall (HW_2: (valid alloc p)),
  forall (result: ((pointer) global)),
  forall (HW_3: result = (acc intPM_global p)),
  (valid alloc result).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_3 : 
  forall (p: ((pointer) global)),
  forall (alloc: alloc_table),
  forall (intM_global: ((memory) Z global)),
  forall (intPM_global: ((memory) ((pointer) global) global)),
  forall (t: ((pointer) global)),
  forall (x: ((pointer) global)),
  forall (HW_1: (* File "ref_glob.c", line 45, characters 14-38 *)
                ((valid alloc p) /\ (valid alloc (acc intPM_global p))) /\
                (valid alloc x) /\ (valid_range alloc t 0 2) /\
                ~((base_addr t) = (base_addr x))),
  forall (HW_2: (valid alloc p)),
  forall (result: ((pointer) global)),
  forall (HW_3: result = (acc intPM_global p)),
  forall (HW_4: (valid alloc result)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_5: intM_global0 = (upd intM_global result 2)),
  (* File "ref_glob.c", line 47, characters 13-21 *)
  (acc intM_global0 (acc intPM_global p)) = 2 /\
  (not_assigns alloc intPM_global intPM_global pset_empty) /\
  (not_assigns alloc intM_global intM_global0
   (pset_singleton (acc intPM_global p))).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

