(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export ref_glob_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f1_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (x: ((pointer) Z8)),
  forall (HW_1: (valid_range alloc x 0 0)),
  (valid alloc x).
Proof.
intuition.
Qed.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f1_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (int_Z8: ((memory) Z Z8)),
  forall (x: ((pointer) Z8)),
  forall (HW_1: (valid_range alloc x 0 0)),
  forall (HW_2: (valid alloc x)),
  forall (int_Z8_0: ((memory) Z Z8)),
  forall (HW_3: int_Z8_0 = (upd int_Z8 x 1)),
  (* File "ref_glob.c", line 13, characters 13-19 *) (acc int_Z8_0 x) = 1 /\
  (not_assigns alloc int_Z8 int_Z8_0 (pset_singleton x)).
Proof.
intuition;subst; caduceus.
red.
intros.
rewrite acc_upd_neq;auto.
generalize (pset_singleton_elim H0);auto.
Qed.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (x: ((pointer) Z8)),
  forall (HW_1: (valid_range alloc x 0 0)),
  (* File "ref_glob.c", line 2, characters 14-23 *) (valid alloc x).
Proof.
intuition.
Save.


(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (int_Z8: ((memory) Z Z8)),
  forall (x: ((pointer) Z8)),
  forall (HW_1: (valid_range alloc x 0 0)),
  forall (HW_2: (* File "ref_glob.c", line 2, characters 14-23 *)
                (valid alloc x)),
  forall (int_Z8_0: ((memory) Z Z8)),
  forall (HW_3: (* File "ref_glob.c", line 4, characters 13-20 *)
                (acc int_Z8_0 x) = 1 /\
                (not_assigns alloc int_Z8 int_Z8_0 (pset_singleton x))),
  (* File "ref_glob.c", line 20, characters 13-19 *) (acc int_Z8_0 x) = 1 /\
  (not_assigns alloc int_Z8 int_Z8_0 (pset_singleton x)).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (c1_Z12: ((memory) ((pointer) Z8) Z12)),
  forall (c2_Z12: ((memory) ((pointer) Z8) Z12)),
  forall (plas: ((pointer) Z12)),
  forall (HW_1: (* File "ref_glob.c", line 30, characters 14-26 *)
                (valid alloc plas) /\ (valid1_range c2_Z12 1) /\
                (valid1_range c1_Z12 1) /\ (separation1 c1_Z12 c2_Z12) /\
                (valid1 c2_Z12) /\ (valid1 c1_Z12)),
  (valid alloc plas).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (c1_Z12: ((memory) ((pointer) Z8) Z12)),
  forall (c2_Z12: ((memory) ((pointer) Z8) Z12)),
  forall (plas: ((pointer) Z12)),
  forall (HW_1: (* File "ref_glob.c", line 30, characters 14-26 *)
                (valid alloc plas) /\ (valid1_range c2_Z12 1) /\
                (valid1_range c1_Z12 1) /\ (separation1 c1_Z12 c2_Z12) /\
                (valid1 c2_Z12) /\ (valid1 c1_Z12)),
  forall (HW_2: (valid alloc plas)),
  forall (result: ((pointer) Z8)),
  forall (HW_3: result = (acc c2_Z12 plas)),
  (valid alloc result).
Proof.
intuition.
subst;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (c1_Z12: ((memory) ((pointer) Z8) Z12)),
  forall (c2_Z12: ((memory) ((pointer) Z8) Z12)),
  forall (int_Z8: ((memory) Z Z8)),
  forall (plas: ((pointer) Z12)),
  forall (HW_1: (* File "ref_glob.c", line 30, characters 14-26 *)
                (valid alloc plas) /\ (valid1_range c2_Z12 1) /\
                (valid1_range c1_Z12 1) /\ (separation1 c1_Z12 c2_Z12) /\
                (valid1 c2_Z12) /\ (valid1 c1_Z12)),
  forall (HW_2: (valid alloc plas)),
  forall (result: ((pointer) Z8)),
  forall (HW_3: result = (acc c2_Z12 plas)),
  forall (HW_4: (valid alloc result)),
  forall (int_Z8_0: ((memory) Z Z8)),
  forall (HW_5: int_Z8_0 = (upd int_Z8 result 2)),
  (valid alloc plas).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_4 : 
  forall (alloc: alloc_table),
  forall (c1_Z12: ((memory) ((pointer) Z8) Z12)),
  forall (c2_Z12: ((memory) ((pointer) Z8) Z12)),
  forall (int_Z8: ((memory) Z Z8)),
  forall (plas: ((pointer) Z12)),
  forall (HW_1: (* File "ref_glob.c", line 30, characters 14-26 *)
                (valid alloc plas) /\ (valid1_range c2_Z12 1) /\
                (valid1_range c1_Z12 1) /\ (separation1 c1_Z12 c2_Z12) /\
                (valid1 c2_Z12) /\ (valid1 c1_Z12)),
  forall (HW_2: (valid alloc plas)),
  forall (result: ((pointer) Z8)),
  forall (HW_3: result = (acc c2_Z12 plas)),
  forall (HW_4: (valid alloc result)),
  forall (int_Z8_0: ((memory) Z Z8)),
  forall (HW_5: int_Z8_0 = (upd int_Z8 result 2)),
  forall (HW_6: (valid alloc plas)),
  forall (result0: ((pointer) Z8)),
  forall (HW_7: result0 = (acc c1_Z12 plas)),
  (* File "ref_glob.c", line 2, characters 14-23 *) (valid alloc result0).
Proof.
intuition.
subst;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_5 : 
  forall (alloc: alloc_table),
  forall (c1_Z12: ((memory) ((pointer) Z8) Z12)),
  forall (c2_Z12: ((memory) ((pointer) Z8) Z12)),
  forall (int_Z8: ((memory) Z Z8)),
  forall (plas: ((pointer) Z12)),
  forall (HW_1: (* File "ref_glob.c", line 30, characters 14-26 *)
                (valid alloc plas) /\ (valid1_range c2_Z12 1) /\
                (valid1_range c1_Z12 1) /\ (separation1 c1_Z12 c2_Z12) /\
                (valid1 c2_Z12) /\ (valid1 c1_Z12)),
  forall (HW_2: (valid alloc plas)),
  forall (result: ((pointer) Z8)),
  forall (HW_3: result = (acc c2_Z12 plas)),
  forall (HW_4: (valid alloc result)),
  forall (int_Z8_0: ((memory) Z Z8)),
  forall (HW_5: int_Z8_0 = (upd int_Z8 result 2)),
  forall (HW_6: (valid alloc plas)),
  forall (result0: ((pointer) Z8)),
  forall (HW_7: result0 = (acc c1_Z12 plas)),
  forall (HW_8: (* File "ref_glob.c", line 2, characters 14-23 *)
                (valid alloc result0)),
  forall (int_Z8_1: ((memory) Z Z8)),
  forall (HW_9: (* File "ref_glob.c", line 4, characters 13-20 *)
                (acc int_Z8_1 result0) = 1 /\
                (not_assigns alloc int_Z8_0 int_Z8_1 (pset_singleton result0))),
  (valid alloc plas).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_6 : 
  forall (alloc: alloc_table),
  forall (c1_Z12: ((memory) ((pointer) Z8) Z12)),
  forall (c2_Z12: ((memory) ((pointer) Z8) Z12)),
  forall (int_Z8: ((memory) Z Z8)),
  forall (plas: ((pointer) Z12)),
  forall (HW_1: (* File "ref_glob.c", line 30, characters 14-26 *)
                (valid alloc plas) /\ (valid1_range c2_Z12 1) /\
                (valid1_range c1_Z12 1) /\ (separation1 c1_Z12 c2_Z12) /\
                (valid1 c2_Z12) /\ (valid1 c1_Z12)),
  forall (HW_2: (valid alloc plas)),
  forall (result: ((pointer) Z8)),
  forall (HW_3: result = (acc c2_Z12 plas)),
  forall (HW_4: (valid alloc result)),
  forall (int_Z8_0: ((memory) Z Z8)),
  forall (HW_5: int_Z8_0 = (upd int_Z8 result 2)),
  forall (HW_6: (valid alloc plas)),
  forall (result0: ((pointer) Z8)),
  forall (HW_7: result0 = (acc c1_Z12 plas)),
  forall (HW_8: (* File "ref_glob.c", line 2, characters 14-23 *)
                (valid alloc result0)),
  forall (int_Z8_1: ((memory) Z Z8)),
  forall (HW_9: (* File "ref_glob.c", line 4, characters 13-20 *)
                (acc int_Z8_1 result0) = 1 /\
                (not_assigns alloc int_Z8_0 int_Z8_1 (pset_singleton result0))),
  forall (HW_10: (valid alloc plas)),
  forall (result1: ((pointer) Z8)),
  forall (HW_11: result1 = (acc c2_Z12 plas)),
  (* File "ref_glob.c", line 2, characters 14-23 *) (valid alloc result1).
Proof.
intuition.
subst;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f4_impl_po_7 : 
  forall (alloc: alloc_table),
  forall (c1_Z12: ((memory) ((pointer) Z8) Z12)),
  forall (c2_Z12: ((memory) ((pointer) Z8) Z12)),
  forall (int_Z8: ((memory) Z Z8)),
  forall (plas: ((pointer) Z12)),
  forall (HW_1: (* File "ref_glob.c", line 30, characters 14-26 *)
                (valid alloc plas) /\ (valid1_range c2_Z12 1) /\
                (valid1_range c1_Z12 1) /\ (separation1 c1_Z12 c2_Z12) /\
                (valid1 c2_Z12) /\ (valid1 c1_Z12)),
  forall (HW_2: (valid alloc plas)),
  forall (result: ((pointer) Z8)),
  forall (HW_3: result = (acc c2_Z12 plas)),
  forall (HW_4: (valid alloc result)),
  forall (int_Z8_0: ((memory) Z Z8)),
  forall (HW_5: int_Z8_0 = (upd int_Z8 result 2)),
  forall (HW_6: (valid alloc plas)),
  forall (result0: ((pointer) Z8)),
  forall (HW_7: result0 = (acc c1_Z12 plas)),
  forall (HW_8: (* File "ref_glob.c", line 2, characters 14-23 *)
                (valid alloc result0)),
  forall (int_Z8_1: ((memory) Z Z8)),
  forall (HW_9: (* File "ref_glob.c", line 4, characters 13-20 *)
                (acc int_Z8_1 result0) = 1 /\
                (not_assigns alloc int_Z8_0 int_Z8_1 (pset_singleton result0))),
  forall (HW_10: (valid alloc plas)),
  forall (result1: ((pointer) Z8)),
  forall (HW_11: result1 = (acc c2_Z12 plas)),
  forall (HW_12: (* File "ref_glob.c", line 2, characters 14-23 *)
                 (valid alloc result1)),
  forall (int_Z8_2: ((memory) Z Z8)),
  forall (HW_13: (* File "ref_glob.c", line 4, characters 13-20 *)
                 (acc int_Z8_2 result1) = 1 /\
                 (not_assigns alloc int_Z8_1 int_Z8_2
                  (pset_singleton result1))),
  (* File "ref_glob.c", line 32, characters 13-43 *)
  ((acc int_Z8_2 (acc c1_Z12 plas)) = 1 /\ (acc int_Z8_2 (acc c2_Z12 plas)) =
  1) /\
  (not_assigns alloc int_Z8 int_Z8_2
   (pset_union (pset_singleton (acc c2_Z12 plas))
    (pset_singleton (acc c1_Z12 plas)))).
Proof.
intuition.
subst.
rewrite H8;auto.
apply pset_singleton_intro.
red in H2.
replace (plas # c1_Z12 <> plas # c2_Z12) with (shift (plas # c1_Z12) 0 <> shift (plas # c2_Z12) 0).
apply neq_base_addr_neq_shift.
apply H2 with alloc;auto.
rewrite shift_zero;rewrite shift_zero;auto.
subst;auto.
red;intros.
rewrite H8;auto.
rewrite H6;auto.
subst.
rewrite acc_upd_neq;auto.
generalize (pset_union_elim1 H10);intro.
assert (p<> plas # c2_Z12).
apply pset_singleton_elim;auto.
auto.
subst.
generalize (pset_union_elim2 H10);auto.
subst.
generalize (pset_union_elim1 H10);auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_1 : 
  forall (p: ((pointer) Z8)),
  forall (alloc: alloc_table),
  forall (HW_1: (* File "ref_glob.c", line 2, characters 14-23 *)
                (valid alloc p)),
  (valid alloc p).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_2 : 
  forall (p: ((pointer) Z8)),
  forall (alloc: alloc_table),
  forall (int_Z8: ((memory) Z Z8)),
  forall (HW_1: (* File "ref_glob.c", line 2, characters 14-23 *)
                (valid alloc p)),
  forall (HW_2: (valid alloc p)),
  forall (int_Z8_0: ((memory) Z Z8)),
  forall (HW_3: int_Z8_0 = (upd int_Z8 p 1)),
  (* File "ref_glob.c", line 4, characters 13-20 *) (acc int_Z8_0 p) = 1 /\
  (not_assigns alloc int_Z8 int_Z8_0 (pset_singleton p)).
Proof.
intuition.
subst; caduceus.
red;intros.
subst.
rewrite acc_upd_neq;auto.
assert (p0<>p).
apply pset_singleton_elim;auto.
auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_1 : 
  forall (p: ((pointer) Z14)),
  forall (alloc: alloc_table),
  forall (int_Z15_Z14: ((memory) ((pointer) Z15) Z14)),
  forall (HW_1: (* File "ref_glob.c", line 45, characters 14-38 *)
                ((valid alloc p) /\ (valid alloc (acc int_Z15_Z14 p)))),
  (valid alloc p).
Proof.
intuition;subst;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_2 : 
  forall (p: ((pointer) Z14)),
  forall (alloc: alloc_table),
  forall (int_Z15_Z14: ((memory) ((pointer) Z15) Z14)),
  forall (HW_1: (* File "ref_glob.c", line 45, characters 14-38 *)
                ((valid alloc p) /\ (valid alloc (acc int_Z15_Z14 p)))),
  forall (HW_2: (valid alloc p)),
  forall (result: ((pointer) Z15)),
  forall (HW_3: result = (acc int_Z15_Z14 p)),
  (valid alloc result).
Proof.
intuition;subst;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_3 : 
  forall (p: ((pointer) Z14)),
  forall (alloc: alloc_table),
  forall (int_Z15: ((memory) Z Z15)),
  forall (int_Z15_Z14: ((memory) ((pointer) Z15) Z14)),
  forall (HW_1: (* File "ref_glob.c", line 45, characters 14-38 *)
                ((valid alloc p) /\ (valid alloc (acc int_Z15_Z14 p)))),
  forall (HW_2: (valid alloc p)),
  forall (result: ((pointer) Z15)),
  forall (HW_3: result = (acc int_Z15_Z14 p)),
  forall (HW_4: (valid alloc result)),
  forall (int_Z15_0: ((memory) Z Z15)),
  forall (HW_5: int_Z15_0 = (upd int_Z15 result 2)),
  (* File "ref_glob.c", line 47, characters 13-21 *)
  (acc int_Z15_0 (acc int_Z15_Z14 p)) = 2 /\
  (not_assigns alloc int_Z15 int_Z15_0 (pset_singleton (acc int_Z15_Z14 p))).
Proof.
intuition; subst; caduceus.
red;intros.
rewrite acc_upd_neq;auto.
generalize (pset_singleton_elim H2);auto.
Save.

