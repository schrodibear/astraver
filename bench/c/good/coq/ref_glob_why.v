(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export caduceus_spec_why.

(* Why obligation from file "why/ref_glob.why", characters 113-140 *)
Lemma f1_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (x: pointer),
  forall (Pre4: (valid_range alloc x 0 1)),
  forall (caduceus_1: pointer),
  forall (Post3: caduceus_1 = x),
  (valid alloc caduceus_1).
Proof.
intuition.
subst;auto.
Qed.

(* Why obligation from file "why/ref_glob.why", characters 90-140 *)
Lemma f1_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (x: pointer),
  forall (Pre4: (valid_range alloc x 0 1)),
  forall (caduceus_1: pointer),
  forall (Post3: caduceus_1 = x),
  forall (Pre3: (valid alloc caduceus_1)),
  forall (intP0: ((memory) Z)),
  forall (Post5: intP0 = (upd intP caduceus_1 1)),
  (acc intP0 x) = 1 /\ (assigns alloc intP intP0 (pointer_loc x)).
Proof.
intuition.
subst; caduceus.
subst;auto.
Qed.

(* Why obligation from file "why/ref_glob.why", characters 321-336 *)
Lemma f2_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (x: pointer),
  forall (Pre4: (valid_range alloc x 0 1)),
  (valid alloc x).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/ref_glob.why", characters 731-746 *)
Lemma f3_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (intPP: ((memory) pointer)),
  forall (t: pointer),
  forall (Pre4: (acc intP (shift (acc intPP t) 1)) = 2 /\
                (valid_range alloc t 0 1) /\
                (forall (counter:Z),
                 (0 <= counter /\ counter < 1 ->
                  (valid_range alloc (shift t counter) 0 3)))),
  (valid alloc t) /\ (valid alloc (acc intPP t)).
Proof.
 intuition.
assert (0<=0<1).
omega.
generalize (H2 0 H0).
intro.
rewrite shift_zero in H3.
assert (0<=0<=3).
omega.
generalize (valid_range_valid_shift alloc t 0 3 0 H3 H4).
intro.
rewrite shift_zero in H5.
Admitted.


(* Why obligation from file "why/ref_glob.why", characters 465-858 *)
Lemma f3_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (intPP: ((memory) pointer)),
  forall (t: pointer),
  forall (Pre4: (acc intP (shift (acc intPP t) 1)) = 2 /\
                (valid_range alloc t 0 1) /\
                (forall (counter:Z),
                 (0 <= counter /\ counter < 1 ->
                  (valid_range alloc (shift t counter) 0 3)))),
  forall (Pre3: (valid alloc t) /\ (valid alloc (acc intPP t))),
  forall (intP0: ((memory) Z)),
  forall (Post2: (acc intP0 (acc intPP t)) = 2 /\
                 (assigns alloc intP intP0 (pointer_loc (acc intPP t)))),
  (acc intP0 (shift (acc intPP t) 0)) = 2 /\
  (acc intP0 (shift (acc intPP t) 1)) = 2.
Proof.
intuition.
rewrite shift_zero; auto.
rewrite H5;auto.
Admitted.
(*
apply unchanged_pointer_intro.
assert (shift (t # intPP) 1 <> shift (t # intPP) 0).
apply neq_offset_neq_shift.
omega.
rewrite shift_zero in H5; auto.
Qed.
*)

(* Why obligation from file "why/ref_glob.why", characters 985-1012 *)
Lemma f4_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (c2: ((memory) pointer)),
  forall (plas: pointer),
  forall (Pre4: (valid alloc plas)),
  forall (caduceus_1: pointer),
  forall (Post3: caduceus_1 = (acc c2 plas)),
  (valid alloc caduceus_1).
Proof.
intuition.
subst;auto.
Admitted.

(* Why obligation from file "why/ref_glob.why", characters 947-1012 *)
Lemma f4_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (c1: ((memory) pointer)),
  forall (c2: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (plas: pointer),
  forall (Pre4: (valid alloc plas)),
  forall (caduceus_1: pointer),
  forall (Post3: caduceus_1 = (acc c2 plas)),
  forall (Pre3: (valid alloc caduceus_1)),
  forall (intP0: ((memory) Z)),
  forall (Post8: intP0 = (upd intP caduceus_1 2)),
  (forall (result:pointer),
   (result = (acc c1 plas) ->
    (forall (intP1:((memory) Z)),
     ((acc intP1 result) = 1 /\
      (assigns alloc intP0 intP1 (pointer_loc result)) ->
      (forall (result:pointer),
       (result = (acc c2 plas) ->
        (forall (intP0:((memory) Z)),
         ((acc intP0 result) = 1 /\
          (assigns alloc intP1 intP0 (pointer_loc result)) ->
          ((acc intP0 (acc c1 plas)) = 1 /\ (acc intP0 (acc c2 plas)) = 1) /\
          (assigns alloc intP intP0
           (union_loc (pointer_loc (acc c2 plas)) (pointer_loc (acc c1 plas)))))) /\
        (valid alloc result))) /\
      (valid alloc plas))) /\
    (valid alloc result))) /\
  (valid alloc plas).
Proof.
intros.
cut (valid alloc (plas # c1)).
cut (valid alloc (plas # c2)).
cut (plas # c1 <> plas #c2).
intuition.
subst; rewrite H8; auto.
subst; auto.
apply assigns_trans with intP1.
apply assigns_trans with intP0.
red; subst; intuition.
assert (p<>plas#c2).
apply unchanged_pointer_elim.
apply unchanged_union_elim1 with (pointer_loc (plas # c1)).
auto.
caduceus.
Admitted.

(* Why obligation from file "why/ref_glob.why", characters 1337-1484 *)
Lemma g_impl_po_1 : 
  forall (p: pointer),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (Pre3: (valid alloc p)),
  forall (intP0: ((memory) Z)),
  forall (Post3: intP0 = (upd intP p 1)),
  (acc intP0 p) = 1 /\ (assigns alloc intP intP0 (pointer_loc p)).
Proof.
intuition.
subst; caduceus.
Save.

(* Why obligation from file "why/ref_glob.why", characters 1642-1669 *)
Lemma h_impl_po_1 : 
  forall (p: pointer),
  forall (alloc: alloc_table),
  forall (intPP: ((memory) pointer)),
  forall (Pre5: (valid alloc p) /\ (valid alloc (acc intPP p))),
  forall (Pre4: (valid alloc p)),
  forall (caduceus_1: pointer),
  forall (Post3: caduceus_1 = (acc intPP p)),
  (valid alloc caduceus_1).
Proof.
intuition.
subst;auto.
Save.

(* Why obligation from file "why/ref_glob.why", characters 1605-1669 *)
Lemma h_impl_po_2 : 
  forall (p: pointer),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (intPP: ((memory) pointer)),
  forall (Pre5: (valid alloc p) /\ (valid alloc (acc intPP p))),
  forall (Pre4: (valid alloc p)),
  forall (caduceus_1: pointer),
  forall (Post3: caduceus_1 = (acc intPP p)),
  forall (Pre3: (valid alloc caduceus_1)),
  forall (intP0: ((memory) Z)),
  forall (Post5: intP0 = (upd intP caduceus_1 2)),
  (acc intP0 (acc intPP p)) = 2 /\
  (assigns alloc intP intP0 (pointer_loc (acc intPP p))).
Proof.
intuition;subst;auto.
caduceus.
Save.

