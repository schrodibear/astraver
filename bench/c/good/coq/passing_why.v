(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export passing_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_1 : 
  forall (x: ((pointer) Z7)),
  forall (alloc: alloc_table),
  forall (int_Z7: ((memory) Z Z7)),
  forall (HW_1: (* File "passing.c", line 21, characters 14-31 *)
                (valid_index alloc x 0)),
  forall (int_Z7_0: ((memory) Z Z7)),
  forall (HW_2: int_Z7_0 = (upd int_Z7 x 1)),
  (* File "passing.c", line 21, characters 53-62 *) (acc int_Z7_0 x) = 1 /\
  (not_assigns alloc int_Z7 int_Z7_0 (pset_singleton x)).
Proof.
intuition.
subst; auto.
rewrite <- shift_zero;apply valid_index_valid_shift;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_2 : 
  forall (x: ((pointer) Z7)),
  forall (alloc: alloc_table),
  forall (int_Z7: ((memory) Z Z7)),
  forall (HW_1: (* File "passing.c", line 21, characters 14-31 *)
                (valid_index alloc x 0)),
  forall (HW_3: (forall (int_Z7_0:((memory) Z Z7)),
                 (int_Z7_0 = (upd int_Z7 x 1) ->
                  (* File "passing.c", line 21, characters 53-62 *)
                  (acc int_Z7_0 x) = 1 /\
                  (not_assigns alloc int_Z7 int_Z7_0 (pset_singleton x))))),
  (valid alloc x).
Proof.
intuition.
subst; caduceus.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g2_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (int_Z5: ((memory) Z Z5)),
  forall (r: ((pointer) Z5)),
  forall (HW_1: (* File "passing.c", line 13, characters 14-23 *)
                (valid alloc r)),
  forall (int_Z5_0: ((memory) Z Z5)),
  forall (HW_2: (* File "passing.c", line 8, characters 43-50 *)
                (acc int_Z5_0 r) = 0 /\
                (not_assigns alloc int_Z5 int_Z5_0 (pset_singleton r))),
  forall (result: Z),
  forall (HW_3: result = (acc int_Z5_0 r)),
  (* File "passing.c", line 13, characters 32-44 *) result = 0.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g2_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (int_Z5: ((memory) Z Z5)),
  forall (r: ((pointer) Z5)),
  forall (HW_1: (* File "passing.c", line 13, characters 14-23 *)
                (valid alloc r)),
  forall (int_Z5_0: ((memory) Z Z5)),
  forall (HW_2: (* File "passing.c", line 8, characters 43-50 *)
                (acc int_Z5_0 r) = 0 /\
                (not_assigns alloc int_Z5 int_Z5_0 (pset_singleton r))),
  forall (HW_4: (forall (result:Z),
                 (result = (acc int_Z5_0 r) ->
                  (* File "passing.c", line 13, characters 32-44 *) result =
                  0))),
  (valid alloc r).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g2_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (int_Z5: ((memory) Z Z5)),
  forall (r: ((pointer) Z5)),
  forall (HW_1: (* File "passing.c", line 13, characters 14-23 *)
                (valid alloc r)),
  forall (HW_5: (forall (int_Z5_0:((memory) Z Z5)),
                 ((* File "passing.c", line 8, characters 43-50 *)
                  (acc int_Z5_0 r) = 0 /\
                  (not_assigns alloc int_Z5 int_Z5_0 (pset_singleton r)) ->
                  (forall (result:Z),
                   (result = (acc int_Z5_0 r) ->
                    (* File "passing.c", line 13, characters 32-44 *)
                    result = 0)) /\
                  (valid alloc r)))),
  (* File "passing.c", line 8, characters 14-23 *) (valid alloc r).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_1 : 
  forall (x: ((pointer) Z5)),
  forall (alloc: alloc_table),
  forall (int_Z5: ((memory) Z Z5)),
  forall (HW_1: (* File "passing.c", line 8, characters 14-23 *)
                (valid alloc x)),
  forall (int_Z5_0: ((memory) Z Z5)),
  forall (HW_2: int_Z5_0 = (upd int_Z5 x 0)),
  (* File "passing.c", line 8, characters 43-50 *) (acc int_Z5_0 x) = 0 /\
  (not_assigns alloc int_Z5 int_Z5_0 (pset_singleton x)).
Proof.
intuition.
Save.


(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_2 : 
  forall (x: ((pointer) Z5)),
  forall (alloc: alloc_table),
  forall (int_Z5: ((memory) Z Z5)),
  forall (HW_1: (* File "passing.c", line 8, characters 14-23 *)
                (valid alloc x)),
  forall (HW_3: (forall (int_Z5_0:((memory) Z Z5)),
                 (int_Z5_0 = (upd int_Z5 x 0) ->
                  (* File "passing.c", line 8, characters 43-50 *)
                  (acc int_Z5_0 x) = 0 /\
                  (not_assigns alloc int_Z5 int_Z5_0 (pset_singleton x))))),
  (valid alloc x).
Proof.
intuition.
subst; caduceus.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma main_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (int_Z7: ((memory) Z Z7)),
  forall (t: ((pointer) Z7)),
  forall (HW_1: (valid_range alloc t 0 1)),
  forall (int_Z7_0: ((memory) Z Z7)),
  forall (HW_2: (* File "passing.c", line 21, characters 53-62 *)
                (acc int_Z7_0 t) = 1 /\
                (not_assigns alloc int_Z7 int_Z7_0 (pset_singleton t))),
  (* File "passing.c", line 28, characters 13-22 *) (acc int_Z7_0 t) = 1.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma main_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (int_Z7: ((memory) Z Z7)),
  forall (t: ((pointer) Z7)),
  forall (HW_1: (valid_range alloc t 0 1)),
  forall (HW_3: (forall (int_Z7_0:((memory) Z Z7)),
                 ((* File "passing.c", line 21, characters 53-62 *)
                  (acc int_Z7_0 t) = 1 /\
                  (not_assigns alloc int_Z7 int_Z7_0 (pset_singleton t)) ->
                  (* File "passing.c", line 28, characters 13-22 *)
                  (acc int_Z7_0 t) = 1))),
  (* File "passing.c", line 21, characters 14-31 *) (valid_index alloc t 0).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

