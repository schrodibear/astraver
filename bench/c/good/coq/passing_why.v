(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export caduceus_spec_why.

(* Why obligation from file "why/passing.why", characters 128-155 *)
Lemma f_impl_po_1 : 
  forall (x: pointer),
  forall (alloc: alloc_table),
  forall (Pre4: (valid_index alloc x 0)),
  forall (caduceus_1: pointer),
  forall (Post3: caduceus_1 = (shift x 0)),
  (valid alloc caduceus_1).
Proof.
intuition.
subst; auto.
apply valid_index_valid_shift;auto.
Save.

(* Why obligation from file "why/passing.why", characters 93-155 *)
Lemma f_impl_po_2 : 
  forall (x: pointer),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (Pre4: (valid_index alloc x 0)),
  forall (caduceus_1: pointer),
  forall (Post3: caduceus_1 = (shift x 0)),
  forall (Pre3: (valid alloc caduceus_1)),
  forall (intP0: ((memory) Z)),
  forall (Post5: intP0 = (upd intP caduceus_1 1)),
  (acc intP0 (shift x 0)) = 1 /\
  (assigns alloc intP intP0 (pointer_loc (shift x 0))).
Proof.
intuition.
subst; caduceus.
subst; auto.
Save.

(* Why obligation from file "why/passing.why", characters 305-408 *)
Lemma g2_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (r: pointer),
  forall (Pre4: (valid alloc r)),
  forall (intP0: ((memory) Z)),
  forall (Post3: (acc intP0 r) = 0 /\
                 (assigns alloc intP intP0 (pointer_loc r))),
  forall (Pre3: (valid alloc r)),
  forall (result0: Z),
  forall (Post2: result0 = (acc intP0 r)),
  result0 = 0.
Proof.
intuition.
Save.

(* Why obligation from file "why/passing.why", characters 448-595 *)
Lemma g_impl_po_1 : 
  forall (x: pointer),
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (Pre3: (valid alloc x)),
  forall (intP0: ((memory) Z)),
  forall (Post3: intP0 = (upd intP x 0)),
  (acc intP0 x) = 0 /\ (assigns alloc intP intP0 (pointer_loc x)).
Proof.
intuition.
subst; caduceus.
Save.

(* Why obligation from file "why/passing.why", characters 763-790 *)
Lemma invariants_initially_established_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (t: pointer),
  forall (Pre7: (valid_t t alloc)),
  forall (r0: pointer),
  forall (Post1: r0 = null),
  forall (caduceus_2: pointer),
  forall (Post4: caduceus_2 = (shift t 0)),
  (valid alloc caduceus_2).
Proof.
intuition.
subst;red in Pre7.
apply valid_range_valid_shift with 0 1;auto;omega.
Save.

(* Why obligation from file "why/passing.why", characters 727-790 *)
Lemma invariants_initially_established_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (t: pointer),
  forall (Pre7: (valid_t t alloc)),
  forall (r0: pointer),
  forall (Post1: r0 = null),
  forall (caduceus_2: pointer),
  forall (Post4: caduceus_2 = (shift t 0)),
  forall (Pre3: (valid alloc caduceus_2)),
  forall (intP0: ((memory) Z)),
  forall (Post8: intP0 = (upd intP caduceus_2 0)),
  (forall (result:pointer),
   (result = (shift t 1) ->
    (forall (intP:((memory) Z)), (intP = (upd intP0 result 0) -> True)) /\
    (valid alloc result))).
Proof.
intuition.
subst;red in Pre7.
apply valid_range_valid_shift with 0 1;auto;omega.
Save.

(* Why obligation from file "why/passing.why", characters 959-974 *)
Lemma main_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (t: pointer),
  forall (Pre4: (valid_t t alloc)),
  (valid_index alloc t 0).
Proof.
unfold valid_t.
intuition.
Save.

