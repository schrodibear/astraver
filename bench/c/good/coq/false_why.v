(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export false_spec_why.

(* Why obligation from file "why/false.why", characters 260-316 *)
Lemma false1_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (x_0: pointer),
  forall (y: ((memory) pointer)),
  forall (y_0: pointer),
  forall (z: pointer),
  forall (Pre11: (valid_range alloc y_0 0 4) /\
                 (valid_range alloc x_0 0 3) /\
                 ~((base_addr y_0) = (base_addr x_0)) /\
                 (valid1_range y 5) /\ (valid1 y)),
  (valid alloc z).
Proof.
Admitted.

(* Why obligation from file "why/false.why", characters 324-351 *)
Lemma false1_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (x_0: pointer),
  forall (y: ((memory) pointer)),
  forall (y_0: pointer),
  forall (z: pointer),
  forall (Pre11: (valid_range alloc y_0 0 4) /\
                 (valid_range alloc x_0 0 3) /\
                 ~((base_addr y_0) = (base_addr x_0)) /\
                 (valid1_range y 5) /\ (valid1 y)),
  forall (Pre4: (valid alloc z)),
  forall (caduceus_5: pointer),
  forall (Post3: caduceus_5 = (shift (acc y z) 5)),
  (valid alloc caduceus_5).
Proof.
Admitted.


(* Why obligation from file "why/false.why", characters 243-351 *)
Lemma false1_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (x_0: pointer),
  forall (y: ((memory) pointer)),
  forall (y_0: pointer),
  forall (z: pointer),
  forall (Pre11: (valid_range alloc y_0 0 4) /\
                 (valid_range alloc x_0 0 3) /\
                 ~((base_addr y_0) = (base_addr x_0)) /\
                 (valid1_range y 5) /\ (valid1 y)),
  forall (Pre4: (valid alloc z)),
  forall (caduceus_5: pointer),
  forall (Post3: caduceus_5 = (shift (acc y z) 5)),
  forall (Pre3: (valid alloc caduceus_5)),
  forall (intP0: ((memory) Z)),
  forall (Post10: intP0 = (upd intP caduceus_5 3)),
  (forall (result:pointer),
   (result = (shift x_0 (Zopp 1)) ->
    (forall (intP:((memory) Z)),
     (intP = (upd intP0 result 1) ->
      (forall (result:pointer),
       (result = (shift y_0 5) ->
        (forall (intP0:((memory) Z)),
         (intP0 = (upd intP result 2) ->
          (* File \"false.c\", line 15, characters 13-19 *) False)) /\
        (valid alloc result))))) /\
    (valid alloc result))).
Proof.
Admitted.
