(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export caduceus_spec_why.

(* Why obligation from file "why/separation.why", characters 477-533 *)
Lemma f_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (s: pointer),
  forall (t: ((memory) pointer)),
  forall (tab: pointer),
  forall (u: ((memory) pointer)),
  forall (v: pointer),
  forall (x: ((memory) pointer)),
  forall (Pre15: (separation_intern_tab tab) /\
                 (separation_tab_v alloc v x tab) /\
                 (separation_tab_s alloc t u s x tab) /\
                 (separation_intern_s alloc t u s) /\ (valid_v alloc v) /\
                 (valid_s alloc t u s) /\ (valid_tab alloc x tab) /\
                 (separation_v_s alloc t u s v)),
  (valid alloc s).
Proof.
unfold  valid_s; intuition.
Save.

(* Why obligation from file "why/separation.why", characters 541-568 *)
Lemma f_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (s: pointer),
  forall (t: ((memory) pointer)),
  forall (tab: pointer),
  forall (u: ((memory) pointer)),
  forall (v: pointer),
  forall (x: ((memory) pointer)),
  forall (Pre15: (separation_intern_tab tab) /\
                 (separation_tab_v alloc v x tab) /\
                 (separation_tab_s alloc t u s x tab) /\
                 (separation_intern_s alloc t u s) /\ (valid_v alloc v) /\
                 (valid_s alloc t u s) /\ (valid_tab alloc x tab) /\
                 (separation_v_s alloc t u s v)),
  forall (Pre4: (valid alloc s)),
  forall (caduceus_6: pointer),
  forall (Post3: caduceus_6 = (shift (acc t s) 0)),
  (valid alloc caduceus_6).
Proof.
unfold valid_s; intuition.
subst;auto.
Save.

(* Why obligation from file "why/separation.why", characters 460-568 *)
Lemma f_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: ((memory) pointer)),
  forall (tab: pointer),
  forall (u: ((memory) pointer)),
  forall (v: pointer),
  forall (x: ((memory) pointer)),
  forall (Pre15: (separation_intern_tab tab) /\
                 (separation_tab_v alloc v x tab) /\
                 (separation_tab_s alloc t u s x tab) /\
                 (separation_intern_s alloc t u s) /\ (valid_v alloc v) /\
                 (valid_s alloc t u s) /\ (valid_tab alloc x tab) /\
                 (separation_v_s alloc t u s v)),
  forall (Pre4: (valid alloc s)),
  forall (caduceus_6: pointer),
  forall (Post3: caduceus_6 = (shift (acc t s) 0)),
  forall (Pre3: (valid alloc caduceus_6)),
  forall (intP0: ((memory) Z)),
  forall (Post11: intP0 = (upd intP caduceus_6 1)),
  (forall (result:pointer),
   (result = (shift (acc u s) 0) ->
    (forall (intP:((memory) Z)),
     (intP = (upd intP0 result 2) ->
      (forall (result:pointer),
       (result = (shift v 0) ->
        (forall (intP0:((memory) Z)),
         (intP0 = (upd intP result 3) ->
          (((forall (result:Z),
             (result = (acc intP0 (shift (acc t s) 0)) -> result = 1)) /\
          (valid alloc s)) /\ (valid alloc (shift (acc t s) 0))) /\
          (valid alloc (shift (acc t s) 0)))) /\
        (valid alloc result))))) /\
    (valid alloc result))) /\
  (valid alloc s).
Proof.
intuition;subst;auto.
rewrite shift_zero.
rewrite shift_zero.
rewrite shift_zero.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
rewrite acc_upd_eq;auto.
red in H2.
intuition.
apply H9.
generalize (pointer_pair_2 (s # u)  (s # t) H6);intuition. 
red in H7;intuition.
apply H8.
generalize (pointer_pair_2 v  (s # t) H6);intuition. 
rewrite shift_zero;red in H3;auto.
rewrite shift_zero;red in H4;intuition.
Save.

(* Why obligation from file "why/separation.why", characters 1315-1343 *)
Lemma g_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (s: pointer),
  forall (t: ((memory) pointer)),
  forall (tab: pointer),
  forall (u: ((memory) pointer)),
  forall (v: pointer),
  forall (x: ((memory) pointer)),
  forall (Pre3: (separation_intern_tab tab) /\
                (separation_tab_v alloc v x tab) /\
                (separation_tab_s alloc t u s x tab) /\
                (separation_intern_s alloc t u s) /\ (valid_v alloc v) /\
                (valid_s alloc t u s) /\ (valid_tab alloc x tab) /\
                (separation_v_s alloc t u s v)),
  (valid alloc (shift v 0)).
Proof.
intuition.
rewrite shift_zero;red in H3;auto.
Save.

(* Why obligation from file "why/separation.why", characters 1821-1922 *)
Lemma h_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (s: pointer),
  forall (t: ((memory) pointer)),
  forall (tab: pointer),
  forall (u: ((memory) pointer)),
  forall (v: pointer),
  forall (x: ((memory) pointer)),
  forall (Pre5: (separation_intern_tab tab) /\
                (separation_tab_v alloc v x tab) /\
                (separation_tab_s alloc t u s x tab) /\
                (separation_intern_s alloc t u s) /\ (valid_v alloc v) /\
                (valid_s alloc t u s) /\ (valid_tab alloc x tab) /\
                (separation_v_s alloc t u s v)),
  (valid alloc (shift tab 0)).
Proof.
intuition.
rewrite shift_zero;red in H5;intuition.
Save.

(* Why obligation from file "why/separation.why", characters 1821-1922 *)
Lemma h_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (s: pointer),
  forall (t: ((memory) pointer)),
  forall (tab: pointer),
  forall (u: ((memory) pointer)),
  forall (v: pointer),
  forall (x: ((memory) pointer)),
  forall (Pre5: (separation_intern_tab tab) /\
                (separation_tab_v alloc v x tab) /\
                (separation_tab_s alloc t u s x tab) /\
                (separation_intern_s alloc t u s) /\ (valid_v alloc v) /\
                (valid_s alloc t u s) /\ (valid_tab alloc x tab) /\
                (separation_v_s alloc t u s v)),
  forall (Pre2: (valid alloc (shift tab 0))),
  (valid alloc (shift (acc x (shift tab 0)) 0)).
Proof.
intuition.
rewrite shift_zero;rewrite shift_zero;red in H5;intuition.
assert (h: 0 <= 0 < 5).
omega. 
generalize (H8 0 h);rewrite shift_zero;auto.
Save.

