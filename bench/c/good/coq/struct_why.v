(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export caduceus_spec_why.

(* Why obligation from file "why/struct.why", characters 151-170 *)
Lemma f_impl_po_1 : 
  forall (t: pointer),
  forall (alloc: alloc_table),
  forall (x: ((memory) Z)),
  forall (Pre9: (valid alloc t) /\ (acc x t) = 0),
  forall (caduceus1: pointer),
  forall (Post4: caduceus1 = t),
  (valid alloc caduceus1).
Proof.
intuition; subst; auto.
Save.

(* Why obligation from file "why/struct.why", characters 135-223 *)
Lemma f_impl_po_2 : 
  forall (t: pointer),
  forall (alloc: alloc_table),
  forall (x: ((memory) Z)),
  forall (y: ((memory) Z)),
  forall (Pre9: (valid alloc t) /\ (acc x t) = 0),
  forall (caduceus1: pointer),
  forall (Post4: caduceus1 = t),
  forall (Pre4: (valid alloc caduceus1)),
  forall (caduceus2: Z),
  forall (Post3: caduceus2 = (acc x caduceus1)),
  forall (Pre3: (valid alloc caduceus1)),
  forall (x0: ((memory) Z)),
  forall (Post10: x0 = (upd x caduceus1 (caduceus2 + 1))),
  (forall (result:pointer),
   (result = t ->
    (forall (result0:Z),
     (result0 = (acc x0 result) ->
      (forall (x1:((memory) Z)),
       (x1 = (upd x0 result (1 + result0)) ->
        (forall (result:Z),
         (result = result0 -> ((result = 1 /\ (acc x1 t) = 2) /\ (acc y t) =
          (acc y t)) /\ (assigns alloc x x1 (pointer_loc t)))))) /\
      (valid alloc result))) /\
    (valid alloc result))).
Proof.
intuition; subst; caduceus; auto.
Save.

(* Why obligation from file "why/struct.why", characters 713-725 *)
Lemma g_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (ps: pointer),
  forall (s: pointer),
  forall (Pre11: (valid alloc ps) /\ (valid_range alloc s 0 1)),
  forall (ps0: pointer),
  forall (Post1: ps0 = s),
  (valid alloc s).
Proof.
 intuition.
Save.

(* Why obligation from file "why/struct.why", characters 751-764 *)
Lemma g_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (ps: pointer),
  forall (s: pointer),
  forall (t: ((memory) pointer)),
  forall (Pre11: (valid alloc ps) /\ (valid_range alloc s 0 1)),
  forall (ps0: pointer),
  forall (Post1: ps0 = s),
  forall (p1: pointer),
  forall (Post2: p1 = (acc t s)),
  (valid alloc ps0).
Proof.
 intuition.
subst; auto.
Save.

(* Why obligation from file "why/struct.why", characters 769-793 *)
Lemma g_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (ps: pointer),
  forall (s: pointer),
  forall (t: ((memory) pointer)),
  forall (Pre11: (valid alloc ps) /\ (valid_range alloc s 0 1)),
  forall (ps0: pointer),
  forall (Post1: ps0 = s),
  forall (p1: pointer),
  forall (Post2: p1 = (acc t s)),
  forall (Pre7: (valid alloc ps0)),
  forall (caduceus_1: pointer),
  forall (Post5: caduceus_1 = (acc t ps0)),
  (valid alloc caduceus_1).
Proof.
unfold valid_S;intuition.
subst;
auto.
generalize (valid_S_pointer alloc t s).
unfold valid_S; intuition.
Save.

(* Why obligation from file "why/struct.why", characters 734-793 *)
Lemma g_impl_po_4 : 
  forall (alloc: alloc_table),
  forall (ps: pointer),
  forall (s: pointer),
  forall (t: ((memory) pointer)),
  forall (x: ((memory) Z)),
  forall (Pre11: (valid alloc ps) /\ (valid_range alloc s 0 1)),
  forall (ps0: pointer),
  forall (Post1: ps0 = s),
  forall (p1: pointer),
  forall (Post2: p1 = (acc t s)),
  forall (Pre7: (valid alloc ps0)),
  forall (caduceus_1: pointer),
  forall (Post5: caduceus_1 = (acc t ps0)),
  forall (Pre6: (valid alloc caduceus_1)),
  forall (x0: ((memory) Z)),
  forall (Post13: x0 = (upd x caduceus_1 1)),
  (((forall (result:Z), (result = (acc x0 (acc t s)) -> result = 1)) /\
  (valid alloc s)) /\ (valid alloc (acc t s))) /\ (valid alloc (acc t s)).
Proof.
intuition; subst; auto.
caduceus.
Save.

