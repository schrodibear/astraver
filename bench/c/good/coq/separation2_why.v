(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export separation2_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (anonymous_0PM_global: ((memory) ((pointer) global) global)),
  forall (m: ((pointer) global)),
  forall (p1_global: ((memory) ((pointer) global) global)),
  forall (p2_global: ((memory) ((pointer) global) global)),
  forall (pp1_global: ((memory) ((pointer) global) global)),
  forall (pp2_global: ((memory) ((pointer) global) global)),
  forall (u: ((pointer) global)),
  forall (u2: ((pointer) global)),
  forall (v: ((pointer) global)),
  forall (v2_0: ((pointer) global)),
  forall (w: ((pointer) global)),
  forall (HW_1: (* File "separation2.c", line 43, characters 12-116 *)
                ((((((valid alloc (acc pp1_global u)) /\
                (valid alloc (acc pp1_global v))) /\
                (valid alloc (acc pp1_global w))) /\
                (valid alloc (acc pp1_global m))) /\
                (valid alloc (acc pp2_global u2))) /\
                (valid alloc (acc pp2_global v2_0))) /\ (valid alloc w) /\
                (valid alloc v) /\ (~((base_addr w) = (base_addr v)) /\
                (~((base_addr v) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global w)))) /\
                ~((base_addr v) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global w))))) /\
                ~((base_addr w) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global v)))) /\
                ~((base_addr w) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global v))))) /\
                (~((base_addr u2) = (base_addr w)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global w)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global w))))) /\
                (valid alloc u) /\ (~((base_addr w) = (base_addr u)) /\
                (~((base_addr u) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global w)))) /\
                ~((base_addr u) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global w))))) /\
                ~((base_addr w) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global u)))) /\
                ~((base_addr w) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global u))))) /\
                (~((base_addr u2) = (base_addr v)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global v)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global v))))) /\
                (~((base_addr u2) = (base_addr u)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global u)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global u))))) /\
                (valid alloc m) /\ (~((base_addr u2) = (base_addr m)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global m))))) /\
                ~((base_addr v2_0) = (base_addr u2)) /\
                (~((base_addr m) = (base_addr w)) /\
                (~((base_addr w) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr w) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global m))))) /\
                ~((base_addr m) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global w)))) /\
                ~((base_addr m) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global w))))) /\
                (~((base_addr m) = (base_addr v)) /\
                (~((base_addr v) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr v) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global m))))) /\
                ~((base_addr m) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global v)))) /\
                ~((base_addr m) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global v))))) /\
                (~((base_addr m) = (base_addr u)) /\
                (~((base_addr u) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr u) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global m))))) /\
                ~((base_addr m) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global u)))) /\
                ~((base_addr m) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global u))))) /\
                (~((base_addr v2_0) = (base_addr w)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global w)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global w))))) /\
                (~((base_addr v2_0) = (base_addr v)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global v)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global v))))) /\
                (~((base_addr v2_0) = (base_addr u)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global u)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global u))))) /\
                (~((base_addr v2_0) = (base_addr m)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global m)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global m))))) /\
                (valid alloc v2_0) /\ (~((base_addr v) = (base_addr u)) /\
                (~((base_addr u) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global v)))) /\
                ~((base_addr u) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global v))))) /\
                ~((base_addr v) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global u)))) /\
                ~((base_addr v) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global u))))) /\
                (valid alloc u2) /\ (separation1 p1_global p2_global) /\
                (valid1_range p2_global 5) /\ (valid1_range p1_global 5) /\
                (valid1 p2_global) /\ (valid1 p1_global)),
  (* File "separation2.c", line 28, characters 12-129 *)
  ((((((valid alloc u) /\ (valid alloc (acc p1_global u))) /\
  (valid alloc (acc p2_global u))) /\ (valid alloc (acc pp1_global u))) /\
  (valid_range alloc (acc p1_global u) 0 4)) /\
  (valid_range alloc (acc p2_global u) 0 4)).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (anonymous_0PM_global: ((memory) ((pointer) global) global)),
  forall (intM_global: ((memory) Z global)),
  forall (m: ((pointer) global)),
  forall (p1_global: ((memory) ((pointer) global) global)),
  forall (p2_global: ((memory) ((pointer) global) global)),
  forall (pp1_global: ((memory) ((pointer) global) global)),
  forall (pp2_global: ((memory) ((pointer) global) global)),
  forall (u: ((pointer) global)),
  forall (u2: ((pointer) global)),
  forall (v: ((pointer) global)),
  forall (v1_global: ((memory) Z global)),
  forall (v2_0: ((pointer) global)),
  forall (v2_global: ((memory) Z global)),
  forall (w: ((pointer) global)),
  forall (HW_1: (* File "separation2.c", line 43, characters 12-116 *)
                ((((((valid alloc (acc pp1_global u)) /\
                (valid alloc (acc pp1_global v))) /\
                (valid alloc (acc pp1_global w))) /\
                (valid alloc (acc pp1_global m))) /\
                (valid alloc (acc pp2_global u2))) /\
                (valid alloc (acc pp2_global v2_0))) /\ (valid alloc w) /\
                (valid alloc v) /\ (~((base_addr w) = (base_addr v)) /\
                (~((base_addr v) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global w)))) /\
                ~((base_addr v) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global w))))) /\
                ~((base_addr w) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global v)))) /\
                ~((base_addr w) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global v))))) /\
                (~((base_addr u2) = (base_addr w)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global w)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global w))))) /\
                (valid alloc u) /\ (~((base_addr w) = (base_addr u)) /\
                (~((base_addr u) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global w)))) /\
                ~((base_addr u) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global w))))) /\
                ~((base_addr w) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global u)))) /\
                ~((base_addr w) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global u))))) /\
                (~((base_addr u2) = (base_addr v)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global v)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global v))))) /\
                (~((base_addr u2) = (base_addr u)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global u)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global u))))) /\
                (valid alloc m) /\ (~((base_addr u2) = (base_addr m)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global m))))) /\
                ~((base_addr v2_0) = (base_addr u2)) /\
                (~((base_addr m) = (base_addr w)) /\
                (~((base_addr w) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr w) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global m))))) /\
                ~((base_addr m) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global w)))) /\
                ~((base_addr m) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global w))))) /\
                (~((base_addr m) = (base_addr v)) /\
                (~((base_addr v) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr v) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global m))))) /\
                ~((base_addr m) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global v)))) /\
                ~((base_addr m) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global v))))) /\
                (~((base_addr m) = (base_addr u)) /\
                (~((base_addr u) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr u) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global m))))) /\
                ~((base_addr m) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global u)))) /\
                ~((base_addr m) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global u))))) /\
                (~((base_addr v2_0) = (base_addr w)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global w)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global w))))) /\
                (~((base_addr v2_0) = (base_addr v)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global v)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global v))))) /\
                (~((base_addr v2_0) = (base_addr u)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global u)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global u))))) /\
                (~((base_addr v2_0) = (base_addr m)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global m)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global m))))) /\
                (valid alloc v2_0) /\ (~((base_addr v) = (base_addr u)) /\
                (~((base_addr u) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global v)))) /\
                ~((base_addr u) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global v))))) /\
                ~((base_addr v) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global u)))) /\
                ~((base_addr v) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global u))))) /\
                (valid alloc u2) /\ (separation1 p1_global p2_global) /\
                (valid1_range p2_global 5) /\ (valid1_range p1_global 5) /\
                (valid1 p2_global) /\ (valid1 p1_global)),
  forall (HW_2: (* File "separation2.c", line 28, characters 12-129 *)
                ((((((valid alloc u) /\ (valid alloc (acc p1_global u))) /\
                (valid alloc (acc p2_global u))) /\
                (valid alloc (acc pp1_global u))) /\
                (valid_range alloc (acc p1_global u) 0 4)) /\
                (valid_range alloc (acc p2_global u) 0 4))),
  forall (intM_global0: ((memory) Z global)),
  forall (v1_global0: ((memory) Z global)),
  forall (v2_global0: ((memory) Z global)),
  forall (HW_3: (* File "separation2.c", line 31, characters 11-28 *)
                (acc intM_global0 (shift (acc p1_global u) 1)) <=
                (acc v1_global0 u) /\
                (((((not_assigns alloc intM_global intM_global0
                     (pset_union (pset_singleton (acc pp1_global u))
                      (pset_union (pset_range (pset_singleton (acc p2_global
                                                               u))
                                   0 5)
                       (pset_range (pset_singleton (acc p1_global u)) 0 5)))) /\
                (not_assigns alloc p1_global p1_global pset_empty)) /\
                (not_assigns alloc p2_global p2_global pset_empty)) /\
                (not_assigns alloc pp1_global pp1_global pset_empty)) /\
                (not_assigns alloc v1_global v1_global0 (pset_singleton u))) /\
                (not_assigns alloc v2_global v2_global0 (pset_singleton u))),
  (* File "separation2.c", line 28, characters 12-129 *)
  ((((((valid alloc v) /\ (valid alloc (acc p1_global v))) /\
  (valid alloc (acc p2_global v))) /\ (valid alloc (acc pp1_global v))) /\
  (valid_range alloc (acc p1_global v) 0 4)) /\
  (valid_range alloc (acc p2_global v) 0 4)).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (anonymous_0PM_global: ((memory) ((pointer) global) global)),
  forall (intM_global: ((memory) Z global)),
  forall (m: ((pointer) global)),
  forall (p1_global: ((memory) ((pointer) global) global)),
  forall (p2_global: ((memory) ((pointer) global) global)),
  forall (pp1_global: ((memory) ((pointer) global) global)),
  forall (pp2_global: ((memory) ((pointer) global) global)),
  forall (u: ((pointer) global)),
  forall (u2: ((pointer) global)),
  forall (v: ((pointer) global)),
  forall (v1_global: ((memory) Z global)),
  forall (v2_0: ((pointer) global)),
  forall (v2_global: ((memory) Z global)),
  forall (w: ((pointer) global)),
  forall (HW_1: (* File "separation2.c", line 43, characters 12-116 *)
                ((((((valid alloc (acc pp1_global u)) /\
                (valid alloc (acc pp1_global v))) /\
                (valid alloc (acc pp1_global w))) /\
                (valid alloc (acc pp1_global m))) /\
                (valid alloc (acc pp2_global u2))) /\
                (valid alloc (acc pp2_global v2_0))) /\ (valid alloc w) /\
                (valid alloc v) /\ (~((base_addr w) = (base_addr v)) /\
                (~((base_addr v) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global w)))) /\
                ~((base_addr v) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global w))))) /\
                ~((base_addr w) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global v)))) /\
                ~((base_addr w) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global v))))) /\
                (~((base_addr u2) = (base_addr w)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global w)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global w))))) /\
                (valid alloc u) /\ (~((base_addr w) = (base_addr u)) /\
                (~((base_addr u) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global w)))) /\
                ~((base_addr u) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global w))))) /\
                ~((base_addr w) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global u)))) /\
                ~((base_addr w) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global u))))) /\
                (~((base_addr u2) = (base_addr v)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global v)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global v))))) /\
                (~((base_addr u2) = (base_addr u)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global u)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global u))))) /\
                (valid alloc m) /\ (~((base_addr u2) = (base_addr m)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global m))))) /\
                ~((base_addr v2_0) = (base_addr u2)) /\
                (~((base_addr m) = (base_addr w)) /\
                (~((base_addr w) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr w) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global m))))) /\
                ~((base_addr m) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global w)))) /\
                ~((base_addr m) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global w))))) /\
                (~((base_addr m) = (base_addr v)) /\
                (~((base_addr v) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr v) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global m))))) /\
                ~((base_addr m) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global v)))) /\
                ~((base_addr m) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global v))))) /\
                (~((base_addr m) = (base_addr u)) /\
                (~((base_addr u) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr u) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global m))))) /\
                ~((base_addr m) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global u)))) /\
                ~((base_addr m) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global u))))) /\
                (~((base_addr v2_0) = (base_addr w)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global w)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global w))))) /\
                (~((base_addr v2_0) = (base_addr v)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global v)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global v))))) /\
                (~((base_addr v2_0) = (base_addr u)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global u)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global u))))) /\
                (~((base_addr v2_0) = (base_addr m)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global m)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global m))))) /\
                (valid alloc v2_0) /\ (~((base_addr v) = (base_addr u)) /\
                (~((base_addr u) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global v)))) /\
                ~((base_addr u) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global v))))) /\
                ~((base_addr v) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global u)))) /\
                ~((base_addr v) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global u))))) /\
                (valid alloc u2) /\ (separation1 p1_global p2_global) /\
                (valid1_range p2_global 5) /\ (valid1_range p1_global 5) /\
                (valid1 p2_global) /\ (valid1 p1_global)),
  forall (HW_2: (* File "separation2.c", line 28, characters 12-129 *)
                ((((((valid alloc u) /\ (valid alloc (acc p1_global u))) /\
                (valid alloc (acc p2_global u))) /\
                (valid alloc (acc pp1_global u))) /\
                (valid_range alloc (acc p1_global u) 0 4)) /\
                (valid_range alloc (acc p2_global u) 0 4))),
  forall (intM_global0: ((memory) Z global)),
  forall (v1_global0: ((memory) Z global)),
  forall (v2_global0: ((memory) Z global)),
  forall (HW_3: (* File "separation2.c", line 31, characters 11-28 *)
                (acc intM_global0 (shift (acc p1_global u) 1)) <=
                (acc v1_global0 u) /\
                (((((not_assigns alloc intM_global intM_global0
                     (pset_union (pset_singleton (acc pp1_global u))
                      (pset_union (pset_range (pset_singleton (acc p2_global
                                                               u))
                                   0 5)
                       (pset_range (pset_singleton (acc p1_global u)) 0 5)))) /\
                (not_assigns alloc p1_global p1_global pset_empty)) /\
                (not_assigns alloc p2_global p2_global pset_empty)) /\
                (not_assigns alloc pp1_global pp1_global pset_empty)) /\
                (not_assigns alloc v1_global v1_global0 (pset_singleton u))) /\
                (not_assigns alloc v2_global v2_global0 (pset_singleton u))),
  forall (HW_4: (* File "separation2.c", line 28, characters 12-129 *)
                ((((((valid alloc v) /\ (valid alloc (acc p1_global v))) /\
                (valid alloc (acc p2_global v))) /\
                (valid alloc (acc pp1_global v))) /\
                (valid_range alloc (acc p1_global v) 0 4)) /\
                (valid_range alloc (acc p2_global v) 0 4))),
  forall (intM_global1: ((memory) Z global)),
  forall (v1_global1: ((memory) Z global)),
  forall (v2_global1: ((memory) Z global)),
  forall (HW_5: (* File "separation2.c", line 31, characters 11-28 *)
                (acc intM_global1 (shift (acc p1_global v) 1)) <=
                (acc v1_global1 v) /\
                (((((not_assigns alloc intM_global0 intM_global1
                     (pset_union (pset_singleton (acc pp1_global v))
                      (pset_union (pset_range (pset_singleton (acc p2_global
                                                               v))
                                   0 5)
                       (pset_range (pset_singleton (acc p1_global v)) 0 5)))) /\
                (not_assigns alloc p1_global p1_global pset_empty)) /\
                (not_assigns alloc p2_global p2_global pset_empty)) /\
                (not_assigns alloc pp1_global pp1_global pset_empty)) /\
                (not_assigns alloc v1_global0 v1_global1 (pset_singleton v))) /\
                (not_assigns alloc v2_global0 v2_global1 (pset_singleton v))),
  (* File "separation2.c", line 28, characters 12-129 *)
  ((((((valid alloc w) /\ (valid alloc (acc p1_global w))) /\
  (valid alloc (acc p2_global w))) /\ (valid alloc (acc pp1_global w))) /\
  (valid_range alloc (acc p1_global w) 0 4)) /\
  (valid_range alloc (acc p2_global w) 0 4)).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_4 : 
  forall (alloc: alloc_table),
  forall (anonymous_0PM_global: ((memory) ((pointer) global) global)),
  forall (intM_global: ((memory) Z global)),
  forall (m: ((pointer) global)),
  forall (p1_global: ((memory) ((pointer) global) global)),
  forall (p2_global: ((memory) ((pointer) global) global)),
  forall (pp1_global: ((memory) ((pointer) global) global)),
  forall (pp2_global: ((memory) ((pointer) global) global)),
  forall (u: ((pointer) global)),
  forall (u2: ((pointer) global)),
  forall (v: ((pointer) global)),
  forall (v1_global: ((memory) Z global)),
  forall (v2_0: ((pointer) global)),
  forall (v2_global: ((memory) Z global)),
  forall (w: ((pointer) global)),
  forall (HW_1: (* File "separation2.c", line 43, characters 12-116 *)
                ((((((valid alloc (acc pp1_global u)) /\
                (valid alloc (acc pp1_global v))) /\
                (valid alloc (acc pp1_global w))) /\
                (valid alloc (acc pp1_global m))) /\
                (valid alloc (acc pp2_global u2))) /\
                (valid alloc (acc pp2_global v2_0))) /\ (valid alloc w) /\
                (valid alloc v) /\ (~((base_addr w) = (base_addr v)) /\
                (~((base_addr v) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global w)))) /\
                ~((base_addr v) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global w))))) /\
                ~((base_addr w) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global v)))) /\
                ~((base_addr w) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global v))))) /\
                (~((base_addr u2) = (base_addr w)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global w)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global w))))) /\
                (valid alloc u) /\ (~((base_addr w) = (base_addr u)) /\
                (~((base_addr u) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global w)))) /\
                ~((base_addr u) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global w))))) /\
                ~((base_addr w) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global u)))) /\
                ~((base_addr w) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global u))))) /\
                (~((base_addr u2) = (base_addr v)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global v)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global v))))) /\
                (~((base_addr u2) = (base_addr u)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global u)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global u))))) /\
                (valid alloc m) /\ (~((base_addr u2) = (base_addr m)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global m))))) /\
                ~((base_addr v2_0) = (base_addr u2)) /\
                (~((base_addr m) = (base_addr w)) /\
                (~((base_addr w) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr w) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global m))))) /\
                ~((base_addr m) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global w)))) /\
                ~((base_addr m) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global w))))) /\
                (~((base_addr m) = (base_addr v)) /\
                (~((base_addr v) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr v) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global m))))) /\
                ~((base_addr m) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global v)))) /\
                ~((base_addr m) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global v))))) /\
                (~((base_addr m) = (base_addr u)) /\
                (~((base_addr u) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr u) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global m))))) /\
                ~((base_addr m) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global u)))) /\
                ~((base_addr m) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global u))))) /\
                (~((base_addr v2_0) = (base_addr w)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global w)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global w))))) /\
                (~((base_addr v2_0) = (base_addr v)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global v)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global v))))) /\
                (~((base_addr v2_0) = (base_addr u)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global u)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global u))))) /\
                (~((base_addr v2_0) = (base_addr m)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global m)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global m))))) /\
                (valid alloc v2_0) /\ (~((base_addr v) = (base_addr u)) /\
                (~((base_addr u) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global v)))) /\
                ~((base_addr u) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global v))))) /\
                ~((base_addr v) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global u)))) /\
                ~((base_addr v) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global u))))) /\
                (valid alloc u2) /\ (separation1 p1_global p2_global) /\
                (valid1_range p2_global 5) /\ (valid1_range p1_global 5) /\
                (valid1 p2_global) /\ (valid1 p1_global)),
  forall (HW_2: (* File "separation2.c", line 28, characters 12-129 *)
                ((((((valid alloc u) /\ (valid alloc (acc p1_global u))) /\
                (valid alloc (acc p2_global u))) /\
                (valid alloc (acc pp1_global u))) /\
                (valid_range alloc (acc p1_global u) 0 4)) /\
                (valid_range alloc (acc p2_global u) 0 4))),
  forall (intM_global0: ((memory) Z global)),
  forall (v1_global0: ((memory) Z global)),
  forall (v2_global0: ((memory) Z global)),
  forall (HW_3: (* File "separation2.c", line 31, characters 11-28 *)
                (acc intM_global0 (shift (acc p1_global u) 1)) <=
                (acc v1_global0 u) /\
                (((((not_assigns alloc intM_global intM_global0
                     (pset_union (pset_singleton (acc pp1_global u))
                      (pset_union (pset_range (pset_singleton (acc p2_global
                                                               u))
                                   0 5)
                       (pset_range (pset_singleton (acc p1_global u)) 0 5)))) /\
                (not_assigns alloc p1_global p1_global pset_empty)) /\
                (not_assigns alloc p2_global p2_global pset_empty)) /\
                (not_assigns alloc pp1_global pp1_global pset_empty)) /\
                (not_assigns alloc v1_global v1_global0 (pset_singleton u))) /\
                (not_assigns alloc v2_global v2_global0 (pset_singleton u))),
  forall (HW_4: (* File "separation2.c", line 28, characters 12-129 *)
                ((((((valid alloc v) /\ (valid alloc (acc p1_global v))) /\
                (valid alloc (acc p2_global v))) /\
                (valid alloc (acc pp1_global v))) /\
                (valid_range alloc (acc p1_global v) 0 4)) /\
                (valid_range alloc (acc p2_global v) 0 4))),
  forall (intM_global1: ((memory) Z global)),
  forall (v1_global1: ((memory) Z global)),
  forall (v2_global1: ((memory) Z global)),
  forall (HW_5: (* File "separation2.c", line 31, characters 11-28 *)
                (acc intM_global1 (shift (acc p1_global v) 1)) <=
                (acc v1_global1 v) /\
                (((((not_assigns alloc intM_global0 intM_global1
                     (pset_union (pset_singleton (acc pp1_global v))
                      (pset_union (pset_range (pset_singleton (acc p2_global
                                                               v))
                                   0 5)
                       (pset_range (pset_singleton (acc p1_global v)) 0 5)))) /\
                (not_assigns alloc p1_global p1_global pset_empty)) /\
                (not_assigns alloc p2_global p2_global pset_empty)) /\
                (not_assigns alloc pp1_global pp1_global pset_empty)) /\
                (not_assigns alloc v1_global0 v1_global1 (pset_singleton v))) /\
                (not_assigns alloc v2_global0 v2_global1 (pset_singleton v))),
  forall (HW_6: (* File "separation2.c", line 28, characters 12-129 *)
                ((((((valid alloc w) /\ (valid alloc (acc p1_global w))) /\
                (valid alloc (acc p2_global w))) /\
                (valid alloc (acc pp1_global w))) /\
                (valid_range alloc (acc p1_global w) 0 4)) /\
                (valid_range alloc (acc p2_global w) 0 4))),
  forall (intM_global2: ((memory) Z global)),
  forall (v1_global2: ((memory) Z global)),
  forall (v2_global2: ((memory) Z global)),
  forall (HW_7: (* File "separation2.c", line 31, characters 11-28 *)
                (acc intM_global2 (shift (acc p1_global w) 1)) <=
                (acc v1_global2 w) /\
                (((((not_assigns alloc intM_global1 intM_global2
                     (pset_union (pset_singleton (acc pp1_global w))
                      (pset_union (pset_range (pset_singleton (acc p2_global
                                                               w))
                                   0 5)
                       (pset_range (pset_singleton (acc p1_global w)) 0 5)))) /\
                (not_assigns alloc p1_global p1_global pset_empty)) /\
                (not_assigns alloc p2_global p2_global pset_empty)) /\
                (not_assigns alloc pp1_global pp1_global pset_empty)) /\
                (not_assigns alloc v1_global1 v1_global2 (pset_singleton w))) /\
                (not_assigns alloc v2_global1 v2_global2 (pset_singleton w))),
  (* File "separation2.c", line 28, characters 12-129 *)
  ((((((valid alloc m) /\ (valid alloc (acc p1_global m))) /\
  (valid alloc (acc p2_global m))) /\ (valid alloc (acc pp1_global m))) /\
  (valid_range alloc (acc p1_global m) 0 4)) /\
  (valid_range alloc (acc p2_global m) 0 4)).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_5 : 
  forall (alloc: alloc_table),
  forall (anonymous_0PM_global: ((memory) ((pointer) global) global)),
  forall (intM_global: ((memory) Z global)),
  forall (m: ((pointer) global)),
  forall (p1_global: ((memory) ((pointer) global) global)),
  forall (p2_global: ((memory) ((pointer) global) global)),
  forall (pp1_global: ((memory) ((pointer) global) global)),
  forall (pp2_global: ((memory) ((pointer) global) global)),
  forall (u: ((pointer) global)),
  forall (u2: ((pointer) global)),
  forall (v: ((pointer) global)),
  forall (v1_global: ((memory) Z global)),
  forall (v2_0: ((pointer) global)),
  forall (v2_global: ((memory) Z global)),
  forall (w: ((pointer) global)),
  forall (HW_1: (* File "separation2.c", line 43, characters 12-116 *)
                ((((((valid alloc (acc pp1_global u)) /\
                (valid alloc (acc pp1_global v))) /\
                (valid alloc (acc pp1_global w))) /\
                (valid alloc (acc pp1_global m))) /\
                (valid alloc (acc pp2_global u2))) /\
                (valid alloc (acc pp2_global v2_0))) /\ (valid alloc w) /\
                (valid alloc v) /\ (~((base_addr w) = (base_addr v)) /\
                (~((base_addr v) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global w)))) /\
                ~((base_addr v) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global w))))) /\
                ~((base_addr w) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global v)))) /\
                ~((base_addr w) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global v))))) /\
                (~((base_addr u2) = (base_addr w)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global w)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global w))))) /\
                (valid alloc u) /\ (~((base_addr w) = (base_addr u)) /\
                (~((base_addr u) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global w)))) /\
                ~((base_addr u) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global w))))) /\
                ~((base_addr w) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global u)))) /\
                ~((base_addr w) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global u))))) /\
                (~((base_addr u2) = (base_addr v)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global v)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global v))))) /\
                (~((base_addr u2) = (base_addr u)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global u)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global u))))) /\
                (valid alloc m) /\ (~((base_addr u2) = (base_addr m)) /\
                ~((base_addr u2) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr u2) = (base_addr (acc p2_global
                                               (acc anonymous_0PM_global m))))) /\
                ~((base_addr v2_0) = (base_addr u2)) /\
                (~((base_addr m) = (base_addr w)) /\
                (~((base_addr w) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr w) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global m))))) /\
                ~((base_addr m) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global w)))) /\
                ~((base_addr m) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global w))))) /\
                (~((base_addr m) = (base_addr v)) /\
                (~((base_addr v) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr v) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global m))))) /\
                ~((base_addr m) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global v)))) /\
                ~((base_addr m) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global v))))) /\
                (~((base_addr m) = (base_addr u)) /\
                (~((base_addr u) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global m)))) /\
                ~((base_addr u) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global m))))) /\
                ~((base_addr m) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global u)))) /\
                ~((base_addr m) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global u))))) /\
                (~((base_addr v2_0) = (base_addr w)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global w)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global w))))) /\
                (~((base_addr v2_0) = (base_addr v)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global v)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global v))))) /\
                (~((base_addr v2_0) = (base_addr u)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global u)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global u))))) /\
                (~((base_addr v2_0) = (base_addr m)) /\
                ~((base_addr v2_0) = (base_addr (acc p1_global
                                                 (acc anonymous_0PM_global m)))) /\
                ~((base_addr v2_0) = (base_addr (acc p2_global
                                                 (acc anonymous_0PM_global m))))) /\
                (valid alloc v2_0) /\ (~((base_addr v) = (base_addr u)) /\
                (~((base_addr u) = (base_addr (acc p1_global
                                               (acc anonymous_0PM_global v)))) /\
                ~((base_addr u) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global v))))) /\
                ~((base_addr v) = (base_addr (acc p1_global
                                              (acc anonymous_0PM_global u)))) /\
                ~((base_addr v) = (base_addr (acc p2_global
                                              (acc anonymous_0PM_global u))))) /\
                (valid alloc u2) /\ (separation1 p1_global p2_global) /\
                (valid1_range p2_global 5) /\ (valid1_range p1_global 5) /\
                (valid1 p2_global) /\ (valid1 p1_global)),
  forall (HW_2: (* File "separation2.c", line 28, characters 12-129 *)
                ((((((valid alloc u) /\ (valid alloc (acc p1_global u))) /\
                (valid alloc (acc p2_global u))) /\
                (valid alloc (acc pp1_global u))) /\
                (valid_range alloc (acc p1_global u) 0 4)) /\
                (valid_range alloc (acc p2_global u) 0 4))),
  forall (intM_global0: ((memory) Z global)),
  forall (v1_global0: ((memory) Z global)),
  forall (v2_global0: ((memory) Z global)),
  forall (HW_3: (* File "separation2.c", line 31, characters 11-28 *)
                (acc intM_global0 (shift (acc p1_global u) 1)) <=
                (acc v1_global0 u) /\
                (((((not_assigns alloc intM_global intM_global0
                     (pset_union (pset_singleton (acc pp1_global u))
                      (pset_union (pset_range (pset_singleton (acc p2_global
                                                               u))
                                   0 5)
                       (pset_range (pset_singleton (acc p1_global u)) 0 5)))) /\
                (not_assigns alloc p1_global p1_global pset_empty)) /\
                (not_assigns alloc p2_global p2_global pset_empty)) /\
                (not_assigns alloc pp1_global pp1_global pset_empty)) /\
                (not_assigns alloc v1_global v1_global0 (pset_singleton u))) /\
                (not_assigns alloc v2_global v2_global0 (pset_singleton u))),
  forall (HW_4: (* File "separation2.c", line 28, characters 12-129 *)
                ((((((valid alloc v) /\ (valid alloc (acc p1_global v))) /\
                (valid alloc (acc p2_global v))) /\
                (valid alloc (acc pp1_global v))) /\
                (valid_range alloc (acc p1_global v) 0 4)) /\
                (valid_range alloc (acc p2_global v) 0 4))),
  forall (intM_global1: ((memory) Z global)),
  forall (v1_global1: ((memory) Z global)),
  forall (v2_global1: ((memory) Z global)),
  forall (HW_5: (* File "separation2.c", line 31, characters 11-28 *)
                (acc intM_global1 (shift (acc p1_global v) 1)) <=
                (acc v1_global1 v) /\
                (((((not_assigns alloc intM_global0 intM_global1
                     (pset_union (pset_singleton (acc pp1_global v))
                      (pset_union (pset_range (pset_singleton (acc p2_global
                                                               v))
                                   0 5)
                       (pset_range (pset_singleton (acc p1_global v)) 0 5)))) /\
                (not_assigns alloc p1_global p1_global pset_empty)) /\
                (not_assigns alloc p2_global p2_global pset_empty)) /\
                (not_assigns alloc pp1_global pp1_global pset_empty)) /\
                (not_assigns alloc v1_global0 v1_global1 (pset_singleton v))) /\
                (not_assigns alloc v2_global0 v2_global1 (pset_singleton v))),
  forall (HW_6: (* File "separation2.c", line 28, characters 12-129 *)
                ((((((valid alloc w) /\ (valid alloc (acc p1_global w))) /\
                (valid alloc (acc p2_global w))) /\
                (valid alloc (acc pp1_global w))) /\
                (valid_range alloc (acc p1_global w) 0 4)) /\
                (valid_range alloc (acc p2_global w) 0 4))),
  forall (intM_global2: ((memory) Z global)),
  forall (v1_global2: ((memory) Z global)),
  forall (v2_global2: ((memory) Z global)),
  forall (HW_7: (* File "separation2.c", line 31, characters 11-28 *)
                (acc intM_global2 (shift (acc p1_global w) 1)) <=
                (acc v1_global2 w) /\
                (((((not_assigns alloc intM_global1 intM_global2
                     (pset_union (pset_singleton (acc pp1_global w))
                      (pset_union (pset_range (pset_singleton (acc p2_global
                                                               w))
                                   0 5)
                       (pset_range (pset_singleton (acc p1_global w)) 0 5)))) /\
                (not_assigns alloc p1_global p1_global pset_empty)) /\
                (not_assigns alloc p2_global p2_global pset_empty)) /\
                (not_assigns alloc pp1_global pp1_global pset_empty)) /\
                (not_assigns alloc v1_global1 v1_global2 (pset_singleton w))) /\
                (not_assigns alloc v2_global1 v2_global2 (pset_singleton w))),
  forall (HW_8: (* File "separation2.c", line 28, characters 12-129 *)
                ((((((valid alloc m) /\ (valid alloc (acc p1_global m))) /\
                (valid alloc (acc p2_global m))) /\
                (valid alloc (acc pp1_global m))) /\
                (valid_range alloc (acc p1_global m) 0 4)) /\
                (valid_range alloc (acc p2_global m) 0 4))),
  forall (intM_global3: ((memory) Z global)),
  forall (v1_global3: ((memory) Z global)),
  forall (v2_global3: ((memory) Z global)),
  forall (HW_9: (* File "separation2.c", line 31, characters 11-28 *)
                (acc intM_global3 (shift (acc p1_global m) 1)) <=
                (acc v1_global3 m) /\
                (((((not_assigns alloc intM_global2 intM_global3
                     (pset_union (pset_singleton (acc pp1_global m))
                      (pset_union (pset_range (pset_singleton (acc p2_global
                                                               m))
                                   0 5)
                       (pset_range (pset_singleton (acc p1_global m)) 0 5)))) /\
                (not_assigns alloc p1_global p1_global pset_empty)) /\
                (not_assigns alloc p2_global p2_global pset_empty)) /\
                (not_assigns alloc pp1_global pp1_global pset_empty)) /\
                (not_assigns alloc v1_global2 v1_global3 (pset_singleton m))) /\
                (not_assigns alloc v2_global2 v2_global3 (pset_singleton m))),
  (((exists i:Z, (acc intM_global3 (shift (acc p1_global u) i)) <=
     (acc v1_global3 u)) /\
  (exists i:Z, (acc intM_global3 (shift (acc p1_global v) i)) <=
   (acc v1_global3 v))) /\
  (exists i:Z, (acc intM_global3 (shift (acc p1_global w) i)) <=
   (acc v1_global3 w))) /\
  (exists i:Z, (acc intM_global3 (shift (acc p1_global m) i)) <=
   (acc v1_global3 m)).
Proof.
intuition.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
subst;auto.
exists 1;auto.
rewrite H86;auto.
rewrite H71;auto.
rewrite H56;auto.
apply pset_range_intro.
intro.
Admitted.



Proof.
intuition.
Admitted.

Proof.
intuition.
Admitted.

Proof.
intuition.
Admitted.
