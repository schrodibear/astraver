(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export clash_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f1_impl_po_1 : 
  forall (A761:Set),
  forall (ma_structure: ((pointer) A761)),
  forall (alloc: alloc_table),
  forall (toto_ma_structure_6: ((memory) Z A761)),
  forall (y: Z),
  forall (HW_1: (valid alloc ma_structure) /\ (constant_y y)),
  forall (toto_0: Z),
  forall (HW_3: toto_0 = 0),
  forall (toto_ma_structure_6_0: ((memory) Z A761)),
  forall (HW_4: toto_ma_structure_6_0 = (upd toto_ma_structure_6 ma_structure
                                         toto_0)),
  (not_assigns alloc toto_ma_structure_6 toto_ma_structure_6_0
   (pset_singleton ma_structure)).
Proof.
intuition.
subst.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<> ma_structure).
apply pset_singleton_elim;auto.
auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_1 : 
  forall (A762:Set),
  forall (ma_structure: ((pointer) A762)),
  forall (alloc: alloc_table),
  forall (substruct_ma_structure_7: ((memory) ((pointer) substruct_2) A762)),
  forall (y: Z),
  forall (HW_1: ((valid alloc ma_structure) /\ (valid alloc ma_structure) /\
                (valid alloc (acc substruct_ma_structure_7 ma_structure))) /\
                (constant_y y) /\ (valid1 substruct_ma_structure_7) /\
                (separation2 substruct_ma_structure_7
                 substruct_ma_structure_7)),
  1 >= 1.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_2 : 
  forall (A763:Set), forall (A764:Set),
  forall (ma_structure: ((pointer) A763)),
  forall (alloc: alloc_table),
  forall (fst_substruct_2: ((memory) Z substruct_2)),
  forall (fst_substruct_8: ((memory) Z A764)),
  forall (substruct_ma_structure_7: ((memory) ((pointer) substruct_2) A763)),
  forall (y: Z),
  forall (HW_1: ((valid alloc ma_structure) /\ (valid alloc ma_structure) /\
                (valid alloc (acc substruct_ma_structure_7 ma_structure))) /\
                (constant_y y) /\ (valid1 substruct_ma_structure_7) /\
                (separation2 substruct_ma_structure_7
                 substruct_ma_structure_7)),
  forall (HW_2: 1 >= 1),
  forall (result: ((pointer) A764)),
  forall (alloc0: alloc_table),
  forall (HW_3: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 1 /\
                (valid_range alloc0 result 0 (1 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_extends alloc alloc0)),
  forall (fst_substruct_8_0: ((memory) Z A764)),
  forall (HW_4: fst_substruct_8_0 = (upd fst_substruct_8 result 0)),
  forall (result0: ((pointer) substruct_2)),
  forall (HW_5: result0 = (acc substruct_ma_structure_7 ma_structure)),
  forall (result1: Z),
  forall (HW_6: result1 = (acc fst_substruct_8_0 result)),
  forall (fst_substruct_2_0: ((memory) Z substruct_2)),
  forall (HW_7: fst_substruct_2_0 = (upd fst_substruct_2 result0 result1)),
  (not_assigns alloc fst_substruct_2 fst_substruct_2_0
   (pset_singleton (acc substruct_ma_structure_7 ma_structure))).
Proof.
intuition;subst;
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<> ma_structure # substruct_ma_structure_7 ).
apply pset_singleton_elim;auto.
auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_3 : 
  forall (A765:Set), forall (A766:Set),
  forall (ma_structure: ((pointer) A765)),
  forall (alloc: alloc_table),
  forall (fst_substruct_2: ((memory) Z substruct_2)),
  forall (fst_substruct_8: ((memory) Z A766)),
  forall (substruct_ma_structure_7: ((memory) ((pointer) substruct_2) A765)),
  forall (y: Z),
  forall (HW_1: ((valid alloc ma_structure) /\ (valid alloc ma_structure) /\
                (valid alloc (acc substruct_ma_structure_7 ma_structure))) /\
                (constant_y y) /\ (valid1 substruct_ma_structure_7) /\
                (separation2 substruct_ma_structure_7
                 substruct_ma_structure_7)),
  forall (HW_2: 1 >= 1),
  forall (result: ((pointer) A766)),
  forall (alloc0: alloc_table),
  forall (HW_3: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 1 /\
                (valid_range alloc0 result 0 (1 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_extends alloc alloc0)),
  forall (fst_substruct_8_0: ((memory) Z A766)),
  forall (HW_4: fst_substruct_8_0 = (upd fst_substruct_8 result 0)),
  forall (result0: ((pointer) substruct_2)),
  forall (HW_5: result0 = (acc substruct_ma_structure_7 ma_structure)),
  forall (result1: Z),
  forall (HW_6: result1 = (acc fst_substruct_8_0 result)),
  forall (fst_substruct_2_0: ((memory) Z substruct_2)),
  forall (HW_7: fst_substruct_2_0 = (upd fst_substruct_2 result0 result1)),
  (not_assigns alloc fst_substruct_8 fst_substruct_8_0 pset_empty).
Proof.
intuition.
subst;auto.
red;intros.
rewrite acc_upd_neq;auto.
intro;subst.
rewrite <- shift_zero in H11.
generalize H11.
apply fresh_not_valid.
auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_4 : 
  forall (A767:Set), forall (A768:Set),
  forall (ma_structure: ((pointer) A767)),
  forall (alloc: alloc_table),
  forall (fst_substruct_2: ((memory) Z substruct_2)),
  forall (fst_substruct_8: ((memory) Z A768)),
  forall (substruct_ma_structure_7: ((memory) ((pointer) substruct_2) A767)),
  forall (y: Z),
  forall (HW_1: ((valid alloc ma_structure) /\ (valid alloc ma_structure) /\
                (valid alloc (acc substruct_ma_structure_7 ma_structure))) /\
                (constant_y y) /\ (valid1 substruct_ma_structure_7) /\
                (separation2 substruct_ma_structure_7
                 substruct_ma_structure_7)),
  forall (HW_2: 1 >= 1),
  forall (result: ((pointer) A768)),
  forall (alloc0: alloc_table),
  forall (HW_3: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 1 /\
                (valid_range alloc0 result 0 (1 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_extends alloc alloc0)),
  forall (fst_substruct_8_0: ((memory) Z A768)),
  forall (HW_4: fst_substruct_8_0 = (upd fst_substruct_8 result 0)),
  forall (result0: ((pointer) substruct_2)),
  forall (HW_5: result0 = (acc substruct_ma_structure_7 ma_structure)),
  forall (result1: Z),
  forall (HW_6: result1 = (acc fst_substruct_8_0 result)),
  forall (fst_substruct_2_0: ((memory) Z substruct_2)),
  forall (HW_7: fst_substruct_2_0 = (upd fst_substruct_2 result0 result1)),
  (not_assigns alloc substruct_ma_structure_7 substruct_ma_structure_7
   pset_empty).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_1 : 
  forall (x: Z),
  forall (y: Z),
  forall (HW_1: (constant_y y)),
  forall (HW_2: x = 0),
  forall (y_0: Z),
  forall (HW_4: y_0 = 1),
  forall (HW_5: x = 0),
  y_0 = 1.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_2 : 
  forall (x: Z),
  forall (y: Z),
  forall (HW_1: (constant_y y)),
  forall (HW_2: x = 0),
  forall (y_0: Z),
  forall (HW_4: y_0 = 1),
  forall (HW_6: x <> 0),
  y_0 = 2.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_3 : 
  forall (x: Z),
  forall (y: Z),
  forall (HW_1: (constant_y y)),
  forall (HW_7: x <> 0),
  forall (y_0: Z),
  forall (HW_9: y_0 = 2),
  forall (HW_10: x = 0),
  y_0 = 1.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_4 : 
  forall (x: Z),
  forall (y: Z),
  forall (HW_1: (constant_y y)),
  forall (HW_7: x <> 0),
  forall (y_0: Z),
  forall (HW_9: y_0 = 2),
  forall (HW_11: x <> 0),
  y_0 = 2.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_1 : 
  forall (y: Z),
  forall (HW_1: (constant_y y)),
  forall (y_0: Z),
  forall (HW_3: y_0 = 0),
  y_0 = 0.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_1 : 
  forall (x: Z),
  forall (y: Z),
  forall (HW_1: (constant_y y)),
  forall (y_0: Z),
  forall (HW_3: y_0 = 2),
  forall (HW_4: x = 0),
  forall (y_1: Z),
  forall (HW_6: y_1 = 1),
  forall (HW_7: x = 0),
  y_1 = 1.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_2 : 
  forall (x: Z),
  forall (y: Z),
  forall (HW_1: (constant_y y)),
  forall (y_0: Z),
  forall (HW_3: y_0 = 2),
  forall (HW_4: x = 0),
  forall (y_1: Z),
  forall (HW_6: y_1 = 1),
  forall (HW_8: x <> 0),
  y_1 = 2.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_3 : 
  forall (x: Z),
  forall (y: Z),
  forall (HW_1: (constant_y y)),
  forall (y_0: Z),
  forall (HW_3: y_0 = 2),
  forall (HW_9: x <> 0),
  forall (HW_10: x = 0),
  y_0 = 1.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_4 : 
  forall (x: Z),
  forall (y: Z),
  forall (HW_1: (constant_y y)),
  forall (y_0: Z),
  forall (HW_3: y_0 = 2),
  forall (HW_11: x <> 0),
  y_0 = 2.
Proof.
intuition.
Save.

