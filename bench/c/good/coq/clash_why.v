(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export clash_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f1_impl_po_1 : 
  forall (A803:Set),
  forall (ma_structure: ((pointer) A803)),
  forall (alloc: alloc_table),
  forall (toto_struct_anonymous_0_6: ((memory) Z A803)),
  forall (HW_1: (valid alloc ma_structure)),
  forall (toto_0: Z),
  forall (HW_3: toto_0 = 0),
  forall (toto_struct_anonymous_0_6_0: ((memory) Z A803)),
  forall (HW_4: toto_struct_anonymous_0_6_0 = (upd toto_struct_anonymous_0_6
                                               ma_structure toto_0)),
  (not_assigns alloc toto_struct_anonymous_0_6 toto_struct_anonymous_0_6_0
   (pset_singleton ma_structure)).
Proof.
intuition.
Save.

Proof.
intuition.
subst.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<> ma_structure).
apply pset_singleton_elim;auto.
auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_1 : 
  forall (A804:Set),
  forall (ma_structure: ((pointer) A804)),
  forall (alloc: alloc_table),
  forall (substruct_struct_anonymous_2_7: ((memory) ((pointer) struct_anonymous_1_2)
                                          A804)),
  forall (HW_1: ((valid alloc ma_structure) /\ (valid alloc ma_structure) /\
                (valid alloc
                 (acc substruct_struct_anonymous_2_7 ma_structure))) /\
                (valid1 substruct_struct_anonymous_2_7) /\
                (separation2 substruct_struct_anonymous_2_7
                 substruct_struct_anonymous_2_7)),
  1 >= 1.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_2 : 
  forall (A805:Set), forall (A806:Set), forall (A807:Set), forall (A808:Set),
  forall (A809:Set), forall (A810:Set), forall (A811:Set), forall (A812:Set),
  forall (A813:Set),
  forall (ma_structure: ((pointer) A813)),
  forall (alloc: alloc_table),
  forall (fst_struct_anonymous_1_2: ((memory) Z struct_anonymous_1_2)),
  forall (fst_struct_anonymous_1_8: ((memory) Z A812)),
  forall (substruct_struct_anonymous_2_7: ((memory) ((pointer) struct_anonymous_1_2)
                                          A813)),
  forall (HW_1: ((valid alloc ma_structure) /\ (valid alloc ma_structure) /\
                (valid alloc
                 (acc substruct_struct_anonymous_2_7 ma_structure))) /\
                (valid1 substruct_struct_anonymous_2_7) /\
                (separation2 substruct_struct_anonymous_2_7
                 substruct_struct_anonymous_2_7)),
  forall (HW_2: 1 >= 1),
  forall (result: ((pointer) A812)),
  forall (alloc0: alloc_table),
  forall (HW_3: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 1 /\
                (valid_range alloc0 result 0 (1 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (fst_struct_anonymous_1_8_0: ((memory) Z A812)),
  forall (HW_4: fst_struct_anonymous_1_8_0 = (upd fst_struct_anonymous_1_8
                                              result 0)),
  forall (result0: ((pointer) struct_anonymous_1_2)),
  forall (HW_5: result0 = (acc substruct_struct_anonymous_2_7 ma_structure)),
  forall (result1: Z),
  forall (HW_6: result1 = (acc fst_struct_anonymous_1_8_0 result)),
  forall (fst_struct_anonymous_1_2_0: ((memory) Z struct_anonymous_1_2)),
  forall (HW_7: fst_struct_anonymous_1_2_0 = (upd fst_struct_anonymous_1_2
                                              result0 result1)),
  ((not_assigns alloc substruct_struct_anonymous_2_7
    substruct_struct_anonymous_2_7 pset_empty) /\
  (not_assigns alloc fst_struct_anonymous_1_8 fst_struct_anonymous_1_8_0
   pset_empty)) /\
  (not_assigns alloc fst_struct_anonymous_1_2 fst_struct_anonymous_1_2_0
   (pset_singleton (acc substruct_struct_anonymous_2_7 ma_structure))).
Proof.
intuition.
Save.

Proof.
intuition.
subst.
apply alloc_stack_valid with Z8 result alloc; auto.
Save.

Proof.
intros.
subst;auto.
Save.



Proof.
intuition.
subst;auto.
Save.

Proof.
intuition;subst;auto.
red;intros.
rewrite acc_upd_neq;auto.
intro;subst.
rewrite <- shift_zero in H10.
generalize H10.
apply fresh_not_valid.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<> ma_structure # substruct_Z7).
apply pset_singleton_elim;auto.
auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_1 : 
  forall (x: Z),
  forall (HW_1: x = 0),
  forall (y_0: Z),
  forall (HW_3: y_0 = 1),
  (* File "clash.c", line 12, characters 13-62 *) (((x = 0 -> y_0 = 1)) /\
  ((x <> 0 -> y_0 = 2))).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_2 : 
  forall (x: Z),
  forall (HW_4: x <> 0),
  forall (y_0: Z),
  forall (HW_6: y_0 = 2),
  (* File "clash.c", line 12, characters 13-62 *) (((x = 0 -> y_0 = 1)) /\
  ((x <> 0 -> y_0 = 2))).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_1 : 
  forall (y: Z),
  forall (y_0: Z),
  forall (HW_2: y_0 = 0),
  (* File "clash.c", line 5, characters 13-41 *) (y_0 = 0 /\ y = y).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_1 : 
  forall (x: Z),
  forall (y_0: Z),
  forall (HW_2: y_0 = 2),
  forall (HW_3: x = 0),
  forall (y_1: Z),
  forall (HW_5: y_1 = 1),
  (* File "clash.c", line 27, characters 13-65 *) (((x = 0 -> y_1 = 1)) /\
  ((x <> 0 -> y_1 = 2))).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_2 : 
  forall (x: Z),
  forall (y_0: Z),
  forall (HW_2: y_0 = 2),
  forall (HW_6: x <> 0),
  (* File "clash.c", line 27, characters 13-65 *) (((x = 0 -> y_0 = 1)) /\
  ((x <> 0 -> y_0 = 2))).
Proof.
intuition.
Save.

