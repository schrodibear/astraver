(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export clash_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f1_impl_po_1 : 
  forall (ma_structure: ((pointer) global)),
  forall (alloc: alloc_table),
  forall (toto_global: ((memory) Z global)),
  forall (HW_1: (valid alloc ma_structure)),
  forall (toto_0: Z),
  forall (HW_3: toto_0 = 0),
  forall (toto_global0: ((memory) Z global)),
  forall (HW_4: toto_global0 = (upd toto_global ma_structure toto_0)),
  (not_assigns alloc toto_global toto_global0 (pset_singleton ma_structure)).
Proof.
intuition.
subst.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<> ma_structure).
apply pset_singleton_elim;auto.
auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_1 : 
  forall (ma_structure: ((pointer) global)),
  forall (alloc: alloc_table),
  forall (substruct_global: ((memory) ((pointer) global) global)),
  forall (HW_1: ((valid alloc ma_structure) /\ (valid alloc ma_structure) /\
                (valid alloc (acc substruct_global ma_structure))) /\
                (valid1 substruct_global) /\
                (separation2 substruct_global substruct_global)),
  1 >= 1.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_2 : 
  forall (A785:Set), forall (A786:Set), forall (A787:Set), forall (A788:Set),
  forall (A789:Set), forall (A790:Set), forall (A791:Set),
  forall (ma_structure: ((pointer) global)),
  forall (alloc: alloc_table),
  forall (fst_global: ((memory) Z global)),
  forall (substruct_global: ((memory) ((pointer) global) global)),
  forall (HW_1: ((valid alloc ma_structure) /\ (valid alloc ma_structure) /\
                (valid alloc (acc substruct_global ma_structure))) /\
                (valid1 substruct_global) /\
                (separation2 substruct_global substruct_global)),
  forall (HW_2: 1 >= 1),
  forall (result: ((pointer) global)),
  forall (alloc0: alloc_table),
  forall (HW_3: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 1 /\
                (valid_range alloc0 result 0 (1 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (fst_global0: ((memory) Z global)),
  forall (HW_4: fst_global0 = (upd fst_global result 0)),
  forall (result0: ((pointer) global)),
  forall (HW_5: result0 = (acc substruct_global ma_structure)),
  forall (result1: Z),
  forall (HW_6: result1 = (acc fst_global0 result)),
  forall (fst_global1: ((memory) Z global)),
  forall (HW_7: fst_global1 = (upd fst_global0 result0 result1)),
  (not_assigns alloc substruct_global substruct_global pset_empty) /\
  (not_assigns alloc fst_global fst_global1
   (pset_singleton (acc substruct_global ma_structure))).
Proof.
intuition;subst;
auto.
red;intros.
rewrite acc_upd_neq;auto.
intro;subst.
rewrite <- shift_zero in H10.
generalize H10.
apply fresh_not_valid.
auto.
red;intros.
rewrite acc_upd_neq;auto.
assert (p<> ma_structure # substruct_struct_anonymous_2_7).
apply pset_singleton_elim;auto.
auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_1 : 
  forall (x: Z),
  forall (HW_1: x = 0),
  forall (y_0: Z),
  forall (HW_3: y_0 = 1),
  (* File "clash.c", line 12, characters 13-62 *) (((x = 0 -> y_0 = 1)) /\
  ((x <> 0 -> y_0 = 2))).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_2 : 
  forall (x: Z),
  forall (HW_4: x <> 0),
  forall (y_0: Z),
  forall (HW_6: y_0 = 2),
  (* File "clash.c", line 12, characters 13-62 *) (((x = 0 -> y_0 = 1)) /\
  ((x <> 0 -> y_0 = 2))).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_1 : 
  forall (y: Z),
  forall (y_0: Z),
  forall (HW_2: y_0 = 0),
  (* File "clash.c", line 5, characters 13-41 *) (y_0 = 0 /\ y = y).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_1 : 
  forall (x: Z),
  forall (y_0: Z),
  forall (HW_2: y_0 = 2),
  forall (HW_3: x = 0),
  forall (y_1: Z),
  forall (HW_5: y_1 = 1),
  (* File "clash.c", line 27, characters 13-65 *) (((x = 0 -> y_1 = 1)) /\
  ((x <> 0 -> y_1 = 2))).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_2 : 
  forall (x: Z),
  forall (y_0: Z),
  forall (HW_2: y_0 = 2),
  forall (HW_6: x <> 0),
  (* File "clash.c", line 27, characters 13-65 *) (((x = 0 -> y_0 = 1)) /\
  ((x <> 0 -> y_0 = 2))).
Proof.
intuition.
Save.

