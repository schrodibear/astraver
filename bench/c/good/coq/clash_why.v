(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export caduceus_spec_why.

(* Why obligation from file "why/clash.why", characters 145-203 *)
Lemma f1_impl_po_1 : 
  forall (ma_structure: pointer),
  forall (alloc: alloc_table),
  forall (toto: ((memory) Z)),
  forall (Pre4: (valid alloc ma_structure)),
  forall (toto_0_1: Z),
  forall (Post1: toto_0_1 = 0),
  forall (Pre3: (valid alloc ma_structure)),
  forall (toto0: ((memory) Z)),
  forall (Post7: toto0 = (upd toto ma_structure toto_0_1)),
  (assigns alloc toto toto0 (pointer_loc ma_structure)).
Proof.
intuition.
Save.

(* Why obligation from file "why/clash.why", characters 654-681 *)
Lemma f2_impl_po_1 : 
  forall (ma_structure: pointer),
  forall (alloc: alloc_table),
  forall (substruct: ((memory) pointer)),
  forall (Pre8: (valid alloc ma_structure) /\
                (valid alloc (acc substruct ma_structure))),
  forall (alloc0: alloc_table),
  forall (substruct_0: pointer),
  forall (Post8: ((valid alloc0 substruct_0) /\ (fresh alloc substruct_0)) /\
                 (alloc_stack substruct_0 alloc alloc0)),
  (valid alloc0 substruct_0).
Proof.
intuition.
Save.

(* Why obligation from file "why/clash.why", characters 705-735 *)
Lemma f2_impl_po_2 : 
  forall (ma_structure: pointer),
  forall (alloc: alloc_table),
  forall (fst: ((memory) Z)),
  forall (substruct: ((memory) pointer)),
  forall (Pre8: (valid alloc ma_structure) /\
                (valid alloc (acc substruct ma_structure))),
  forall (alloc0: alloc_table),
  forall (substruct_0: pointer),
  forall (Post8: ((valid alloc0 substruct_0) /\ (fresh alloc substruct_0)) /\
                 (alloc_stack substruct_0 alloc alloc0)),
  forall (Pre7: (valid alloc0 substruct_0)),
  forall (fst0: ((memory) Z)),
  forall (Post11: fst0 = (upd fst substruct_0 0)),
  (valid alloc0 ma_structure).
Proof.
intuition.
apply alloc_stack_valid with substruct_0 alloc; auto.
Save.

(* Why obligation from file "why/clash.why", characters 744-793 *)
Lemma f2_impl_po_3 : 
  forall (ma_structure: pointer),
  forall (alloc: alloc_table),
  forall (fst: ((memory) Z)),
  forall (substruct: ((memory) pointer)),
  forall (Pre8: (valid alloc ma_structure) /\
                (valid alloc (acc substruct ma_structure))),
  forall (alloc0: alloc_table),
  forall (substruct_0: pointer),
  forall (Post8: ((valid alloc0 substruct_0) /\ (fresh alloc substruct_0)) /\
                 (alloc_stack substruct_0 alloc alloc0)),
  forall (Pre7: (valid alloc0 substruct_0)),
  forall (fst0: ((memory) Z)),
  forall (Post11: fst0 = (upd fst substruct_0 0)),
  forall (Pre6: (valid alloc0 ma_structure)),
  forall (caduceus_1: pointer),
  forall (Post6: caduceus_1 = (acc substruct ma_structure)),
  forall (Pre5: (valid alloc0 substruct_0)),
  forall (aux_1: Z),
  forall (Post5: aux_1 = (acc fst0 substruct_0)),
  (valid alloc0 caduceus_1).
Proof.
intuition.
subst; apply alloc_stack_valid with substruct_0 alloc; auto.
Save.

(* Why obligation from file "why/clash.why", characters 744-793 *)
Lemma f2_impl_po_4 : 
  forall (ma_structure: pointer),
  forall (alloc: alloc_table),
  forall (fst: ((memory) Z)),
  forall (substruct: ((memory) pointer)),
  forall (Pre8: (valid alloc ma_structure) /\
                (valid alloc (acc substruct ma_structure))),
  forall (alloc0: alloc_table),
  forall (substruct_0: pointer),
  forall (Post8: ((valid alloc0 substruct_0) /\ (fresh alloc substruct_0)) /\
                 (alloc_stack substruct_0 alloc alloc0)),
  forall (Pre7: (valid alloc0 substruct_0)),
  forall (fst0: ((memory) Z)),
  forall (Post11: fst0 = (upd fst substruct_0 0)),
  forall (Pre6: (valid alloc0 ma_structure)),
  forall (caduceus_1: pointer),
  forall (Post6: caduceus_1 = (acc substruct ma_structure)),
  forall (Pre5: (valid alloc0 substruct_0)),
  forall (aux_1: Z),
  forall (Post5: aux_1 = (acc fst0 substruct_0)),
  forall (Pre3: (valid alloc0 caduceus_1)),
  forall (fst1: ((memory) Z)),
  forall (Post15: fst1 = (upd fst0 caduceus_1 aux_1)),
  (assigns alloc fst fst1 (pointer_loc (acc substruct ma_structure))).
Proof.
intros.
unfold assigns.
intros.
subst.
caduceus.
rewrite acc_upd_neq;generalize (unchanged_pointer_elim p (ma_structure # substruct) H0);auto.
intro.
rewrite acc_upd_neq;auto.
Admitted.






(* Why obligation from file "why/clash.why", characters 1009-1032 *)
Lemma f_impl_po_1 : 
  forall (x: Z),
  forall (Test2: x = 0),
  forall (y_0_1: Z),
  forall (Post4: y_0_1 = 1),
  forall (result1: Z),
  forall (Post5: result1 = y_0_1),
  ((x = 0 -> result1 = 1)) /\ ((x <> 0 -> result1 = 2)).
Proof.
intuition.
Save.

(* Why obligation from file "why/clash.why", characters 1076-1099 *)
Lemma f_impl_po_2 : 
  forall (x: Z),
  forall (Test1: x <> 0),
  forall (y_0_1: Z),
  forall (Post1: y_0_1 = 2),
  forall (result1: Z),
  forall (Post2: result1 = y_0_1),
  ((x = 0 -> result1 = 1)) /\ ((x <> 0 -> result1 = 2)).
Proof.
intuition.
Save.

(* Why obligation from file "why/clash.why", characters 1295-1318 *)
Lemma g_impl_po_1 : 
  forall (y: Z),
  forall (y_0_1: Z),
  forall (Post1: y_0_1 = 0),
  forall (result0: Z),
  forall (Post2: result0 = y_0_1),
  result0 = 0 /\ y = y.
Proof.
intuition.
Save.

(* Why obligation from file "why/clash.why", characters 1557-1580 *)
Lemma h_impl_po_1 : 
  forall (x: Z),
  forall (y_0_1: Z),
  forall (Post1: y_0_1 = 2),
  forall (Test2: x = 0),
  forall (y_1_1: Z),
  forall (Post3: y_1_1 = 1),
  forall (result2: Z),
  forall (Post4: result2 = y_1_1),
  ((x = 0 -> result2 = 1)) /\ ((x <> 0 -> result2 = 2)).
Proof.
intuition.
Save.

(* Why obligation from file "why/clash.why", characters 1593-1594 *)
Lemma h_impl_po_2 : 
  forall (x: Z),
  forall (y_0_1: Z),
  forall (Post1: y_0_1 = 2),
  forall (Test1: x <> 0),
  forall (result1: Z),
  forall (Post2: result1 = y_0_1),
  ((x = 0 -> result1 = 1)) /\ ((x <> 0 -> result1 = 2)).
Proof.
intuition.
Save.

