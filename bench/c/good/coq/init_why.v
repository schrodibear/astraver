(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export init_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_1 : 
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (alloc: alloc_table),
  forall (b_global: ((memory) ((pointer) global) global)),
  forall (intM_global: ((memory) Z global)),
  forall (s: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "init.c", line 5, characters 25-34 *)
                 (acc intM_global (shift t 1)) = 2 /\
                (* File "init.c", line 13, characters 25-51 *)
                ((acc intM_global (acc b_global s)) = 1 /\
                (acc intM_global (shift (acc b_global s) 2)) = 4)) /\
                (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b_global (acc SPM_global s))))) /\
                (valid_range alloc t 0 2) /\ (valid alloc s) /\
                (valid1 b_global) /\ (valid1_range b_global 3)),
  forall (result: ((pointer) global)),
  forall (HW_2: result = (shift t 1)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc intM_global result)),
  forall (result1: ((pointer) global)),
  forall (HW_4: result1 = (acc b_global s)),
  forall (result2: Z),
  forall (HW_5: result2 = (acc intM_global result1)),
  forall (result3: ((pointer) global)),
  forall (HW_6: result3 = (acc b_global s)),
  forall (result4: ((pointer) global)),
  forall (HW_7: result4 = (shift result3 2)),
  forall (result5: Z),
  forall (HW_8: result5 = (acc intM_global result4)),
  (* File "init.c", line 15, characters 13-25 *)
  (result0 + result2 + result5) = 7 /\
  (* File "init.c", line 5, characters 25-34 *)
  (acc intM_global (shift t 1)) = 2 /\
  (* File "init.c", line 13, characters 25-51 *)
  ((acc intM_global (acc b_global s)) = 1 /\
  (acc intM_global (shift (acc b_global s) 2)) = 4).
Proof.
intuition.
subst;auto.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
subst;auto.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
subst;auto.
unfold valid1_range in H6.
apply valid_range_valid_shift with 0 (3-1).
apply H6;auto.
omega.
Save.

Proof.
intuition.
subst;auto.
rewrite H0.
rewrite H4.
rewrite H1.
auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_1 : 
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (alloc: alloc_table),
  forall (b_global: ((memory) ((pointer) global) global)),
  forall (intM_global: ((memory) Z global)),
  forall (s: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "init.c", line 5, characters 25-34 *)
                 (acc intM_global (shift t 1)) = 2 /\
                (* File "init.c", line 13, characters 25-51 *)
                ((acc intM_global (acc b_global s)) = 1 /\
                (acc intM_global (shift (acc b_global s) 2)) = 4)) /\
                (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b_global (acc SPM_global s))))) /\
                (valid_range alloc t 0 2) /\ (valid alloc s) /\
                (valid1 b_global) /\ (valid1_range b_global 3)),
  2 >= 1.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_2 : 
  forall (A1021:Set), forall (A1022:Set), forall (A1023:Set),
  forall (A1024:Set), forall (A1025:Set), forall (A1026:Set),
  forall (A1027:Set),
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (alloc: alloc_table),
  forall (b_global: ((memory) ((pointer) global) global)),
  forall (intM_global: ((memory) Z global)),
  forall (s: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "init.c", line 5, characters 25-34 *)
                 (acc intM_global (shift t 1)) = 2 /\
                (* File "init.c", line 13, characters 25-51 *)
                ((acc intM_global (acc b_global s)) = 1 /\
                (acc intM_global (shift (acc b_global s) 2)) = 4)) /\
                (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b_global (acc SPM_global s))))) /\
                (valid_range alloc t 0 2) /\ (valid alloc s) /\
                (valid1 b_global) /\ (valid1_range b_global 3)),
  forall (HW_2: 2 >= 1),
  forall (result: ((pointer) global)),
  forall (alloc0: alloc_table),
  forall (HW_3: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 2 /\
                (valid_range alloc0 result 0 (2 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_4: intM_global0 = (upd intM_global result 4)),
  forall (result0: ((pointer) global)),
  forall (HW_5: result0 = (shift result 1)),
  forall (intM_global1: ((memory) Z global)),
  forall (HW_6: intM_global1 = (upd intM_global0 result0 5)),
  forall (result1: Z),
  forall (HW_7: result1 = (acc intM_global1 result)),
  (* File "init.c", line 22, characters 13-25 *) result1 = 4 /\
  (* File "init.c", line 5, characters 25-34 *)
  (acc intM_global1 (shift t 1)) = 2 /\
  (* File "init.c", line 13, characters 25-51 *)
  ((acc intM_global1 (acc b_global s)) = 1 /\
  (acc intM_global1 (shift (acc b_global s) 2)) = 4).
Proof.
intuition.
Save.

Proof.
intuition;subst.
subst;auto.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
subst;auto.
rewrite acc_upd_neq;auto.
rewrite acc_upd_eq;auto.
replace (shift result 1 <> result) with (shift result 1 <> shift result 0).
apply neq_offset_neq_shift.
omega.
rewrite shift_zero.
auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_1 : 
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (alloc: alloc_table),
  forall (b_global: ((memory) ((pointer) global) global)),
  forall (intM_global: ((memory) Z global)),
  forall (s: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "init.c", line 5, characters 25-34 *)
                 (acc intM_global (shift t 1)) = 2 /\
                (* File "init.c", line 13, characters 25-51 *)
                ((acc intM_global (acc b_global s)) = 1 /\
                (acc intM_global (shift (acc b_global s) 2)) = 4)) /\
                (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b_global (acc SPM_global s))))) /\
                (valid_range alloc t 0 2) /\ (valid alloc s) /\
                (valid1 b_global) /\ (valid1_range b_global 3)),
  3 >= 1.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_2 : 
  forall (A1028:Set), forall (A1029:Set), forall (A1030:Set),
  forall (A1031:Set), forall (A1032:Set), forall (A1033:Set),
  forall (A1034:Set),
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (alloc: alloc_table),
  forall (b_global: ((memory) ((pointer) global) global)),
  forall (intM_global: ((memory) Z global)),
  forall (s: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: ((* File "init.c", line 5, characters 25-34 *)
                 (acc intM_global (shift t 1)) = 2 /\
                (* File "init.c", line 13, characters 25-51 *)
                ((acc intM_global (acc b_global s)) = 1 /\
                (acc intM_global (shift (acc b_global s) 2)) = 4)) /\
                (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b_global (acc SPM_global s))))) /\
                (valid_range alloc t 0 2) /\ (valid alloc s) /\
                (valid1 b_global) /\ (valid1_range b_global 3)),
  forall (HW_2: 3 >= 1),
  forall (result: ((pointer) global)),
  forall (alloc0: alloc_table),
  forall (HW_3: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 3 /\
                (valid_range alloc0 result 0 (3 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_4: intM_global0 = (upd intM_global result 3)),
  forall (result0: ((pointer) global)),
  forall (HW_5: result0 = (shift result 1)),
  forall (intM_global1: ((memory) Z global)),
  forall (HW_6: intM_global1 = (upd intM_global0 result0 4)),
  forall (result1: ((pointer) global)),
  forall (HW_7: result1 = (shift result 2)),
  forall (intM_global2: ((memory) Z global)),
  forall (HW_8: intM_global2 = (upd intM_global1 result1 5)),
  forall (result2: Z),
  forall (HW_9: result2 = (acc intM_global2 result)),
  forall (result3: ((pointer) global)),
  forall (HW_10: result3 = (shift result 1)),
  forall (result4: Z),
  forall (HW_11: result4 = (acc intM_global2 result3)),
  forall (result5: ((pointer) global)),
  forall (HW_12: result5 = (shift result 2)),
  forall (result6: Z),
  forall (HW_13: result6 = (acc intM_global2 result5)),
  (* File "init.c", line 30, characters 13-26 *)
  (result2 + result4 + result6) = 12 /\
  (* File "init.c", line 5, characters 25-34 *)
  (acc intM_global2 (shift t 1)) = 2 /\
  (* File "init.c", line 13, characters 25-51 *)
  ((acc intM_global2 (acc b_global s)) = 1 /\
  (acc intM_global2 (shift (acc b_global s) 2)) = 4).
Proof.
intuition;subst;auto.
Save.

Proof.
intuition;subst;auto.
Save.

Proof.
intuition.
subst;auto.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
subst;auto.
Save.

Proof.
intuition.
subst;auto.
Save.

Proof.
intuition.
subst.
rewrite acc_upd_neq;auto.
rewrite acc_upd_neq;auto.
rewrite acc_upd_eq;auto.
rewrite acc_upd_neq;auto.
rewrite acc_upd_eq;auto.
rewrite acc_upd_eq;auto.
apply neq_offset_neq_shift;omega.
replace (shift result 1 <> result) with (shift result 1 <> shift result 0).
apply neq_offset_neq_shift;omega.
rewrite shift_zero;auto.
replace (shift result 2 <> result) with (shift result 2 <> shift result 0).
apply neq_offset_neq_shift;omega.
rewrite shift_zero;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_1 : 
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (a_global: ((memory) Z global)),
  forall (alloc: alloc_table),
  forall (b_global: ((memory) ((pointer) global) global)),
  forall (intM_global: ((memory) Z global)),
  forall (s: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (HW_1: (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b_global (acc SPM_global s))))) /\
                (valid_range alloc t 0 2) /\ (valid alloc s) /\
                (valid1 b_global) /\ (valid1_range b_global 3)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_3: intM_global0 = (upd intM_global t 1)),
  forall (result: ((pointer) global)),
  forall (HW_4: result = (shift t 1)),
  forall (intM_global1: ((memory) Z global)),
  forall (HW_5: intM_global1 = (upd intM_global0 result 2)),
  forall (result0: ((pointer) global)),
  forall (HW_6: result0 = (shift t 2)),
  forall (intM_global2: ((memory) Z global)),
  forall (HW_7: intM_global2 = (upd intM_global1 result0 3)),
  forall (a_global0: ((memory) Z global)),
  forall (HW_8: a_global0 = (upd a_global s 1)),
  forall (result1: ((pointer) global)),
  forall (HW_9: result1 = (acc b_global s)),
  forall (intM_global3: ((memory) Z global)),
  forall (HW_10: intM_global3 = (upd intM_global2 result1 1)),
  forall (result2: ((pointer) global)),
  forall (HW_11: result2 = (acc b_global s)),
  forall (result3: ((pointer) global)),
  forall (HW_12: result3 = (shift result2 1)),
  forall (intM_global4: ((memory) Z global)),
  forall (HW_13: intM_global4 = (upd intM_global3 result3 3)),
  forall (result4: ((pointer) global)),
  forall (HW_14: result4 = (acc b_global s)),
  forall (result5: ((pointer) global)),
  forall (HW_15: result5 = (shift result4 2)),
  forall (intM_global5: ((memory) Z global)),
  forall (HW_16: intM_global5 = (upd intM_global4 result5 4)),
  (* File "init.c", line 5, characters 25-34 *)
  ((acc intM_global5 (shift t 1)) = 2 /\
  (acc intM_global5 (acc b_global s)) = 1 /\
  (acc intM_global5 (shift (acc b_global s) 2)) = 4).
Proof.
intuition;subst;auto.
Save.

Proof.
intuition;subst;auto.
Save.

Proof.
intuition.
subst;auto.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
subst;auto.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
subst;auto.
apply valid_range_valid_shift with 0 (3-1).
apply H3;auto.
omega.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
subst;auto.
apply valid_range_valid_shift with 0 (3-1).
apply H3;auto.
omega.
Save.

Proof.
intuition;subst;auto.
rewrite acc_upd_neq.
rewrite acc_upd_eq;auto.
apply neq_offset_neq_shift;omega.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
rewrite acc_upd_eq;auto.
replace (shift (s # b_Z7) 1 <> s # b_Z7) with (shift (s # b_Z7) 1 <> shift (s # b_Z7) 0).
apply neq_offset_neq_shift;omega.
rewrite shift_zero;auto.
replace (shift (s # b_Z7) 2 <> s # b_Z7) with (shift (s # b_Z7) 2 <> shift (s # b_Z7) 0).
apply neq_offset_neq_shift;omega.
rewrite shift_zero;auto.
rewrite acc_upd_eq;auto.
Save.
