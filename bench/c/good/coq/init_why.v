(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export init_spec_why.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: ((* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
                 (acc intP (shift t 1)) = 2 /\
                (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
                ((acc intP (acc b s)) = 1 /\ (acc intP (shift (acc b s) 2)) =
                4)) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (result: pointer),
  forall (HW_2: result = (shift t 1)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc intP result)),
  forall (result1: pointer),
  forall (HW_4: result1 = (acc b s)),
  forall (result2: Z),
  forall (HW_5: result2 = (acc intP result1)),
  forall (result3: pointer),
  forall (HW_6: result3 = (acc b s)),
  forall (result4: pointer),
  forall (HW_7: result4 = (shift result3 2)),
  forall (result5: Z),
  forall (HW_8: result5 = (acc intP result4)),
  (* File \"init.c819618234.c1069824147.i\", line 0, characters 9-21 *)
  (result0 + result2 + result5) = 7.
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: ((* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
                 (acc intP (shift t 1)) = 2 /\
                (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
                ((acc intP (acc b s)) = 1 /\ (acc intP (shift (acc b s) 2)) =
                4)) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (result: pointer),
  forall (HW_2: result = (shift t 1)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc intP result)),
  forall (result1: pointer),
  forall (HW_4: result1 = (acc b s)),
  forall (result2: Z),
  forall (HW_5: result2 = (acc intP result1)),
  forall (result3: pointer),
  forall (HW_6: result3 = (acc b s)),
  forall (result4: pointer),
  forall (HW_7: result4 = (shift result3 2)),
  (valid alloc result4).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: ((* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
                 (acc intP (shift t 1)) = 2 /\
                (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
                ((acc intP (acc b s)) = 1 /\ (acc intP (shift (acc b s) 2)) =
                4)) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (result: pointer),
  forall (HW_2: result = (shift t 1)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc intP result)),
  forall (result1: pointer),
  forall (HW_4: result1 = (acc b s)),
  forall (result2: Z),
  forall (HW_5: result2 = (acc intP result1)),
  (valid alloc s).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_4 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: ((* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
                 (acc intP (shift t 1)) = 2 /\
                (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
                ((acc intP (acc b s)) = 1 /\ (acc intP (shift (acc b s) 2)) =
                4)) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (result: pointer),
  forall (HW_2: result = (shift t 1)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc intP result)),
  forall (result1: pointer),
  forall (HW_4: result1 = (acc b s)),
  (valid alloc result1).
Proof.
intuition.
generalize (H8 s alloc Pre6);intuition.
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_5 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: ((* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
                 (acc intP (shift t 1)) = 2 /\
                (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
                ((acc intP (acc b s)) = 1 /\ (acc intP (shift (acc b s) 2)) =
                4)) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (result: pointer),
  forall (HW_2: result = (shift t 1)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc intP result)),
  (valid alloc s).
Proof.
intuition.
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_6 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: ((* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
                 (acc intP (shift t 1)) = 2 /\
                (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
                ((acc intP (acc b s)) = 1 /\ (acc intP (shift (acc b s) 2)) =
                4)) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (result: pointer),
  forall (HW_2: result = (shift t 1)),
  (valid alloc result).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: ((* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
                 (acc intP (shift t 1)) = 2 /\
                (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
                ((acc intP (acc b s)) = 1 /\ (acc intP (shift (acc b s) 2)) =
                4)) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (result: pointer),
  forall (alloc0: alloc_table),
  forall (HW_2: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 2 /\
                (valid_range alloc0 result 0 (2 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP result 4)),
  forall (result0: pointer),
  forall (HW_4: result0 = (shift result 1)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: intP1 = (upd intP0 result0 5)),
  forall (result1: Z),
  forall (HW_6: result1 = (acc intP1 result)),
  (* File \"init.c819618234.c1069824147.i\", line 0, characters 9-21 *)
  result1 = 4 /\
  (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
  (acc intP1 (shift t 1)) = 2 /\
  (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
  ((acc intP1 (acc b s)) = 1 /\ (acc intP1 (shift (acc b s) 2)) = 4).
Proof.
intuition.
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: ((* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
                 (acc intP (shift t 1)) = 2 /\
                (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
                ((acc intP (acc b s)) = 1 /\ (acc intP (shift (acc b s) 2)) =
                4)) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (result: pointer),
  forall (alloc0: alloc_table),
  forall (HW_2: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 2 /\
                (valid_range alloc0 result 0 (2 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP result 4)),
  forall (result0: pointer),
  forall (HW_4: result0 = (shift result 1)),
  (valid alloc0 result0).
Proof.
intuition.
subst;auto.
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: ((* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
                 (acc intP (shift t 1)) = 2 /\
                (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
                ((acc intP (acc b s)) = 1 /\ (acc intP (shift (acc b s) 2)) =
                4)) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  2 >= 1.
Proof.
intuition;subst.
rewrite acc_upd_neq;auto.
caduceus.
replace (shift t_0 1 <> t_0)  with (shift t_0 1 <> shift t_0 0).
apply neq_offset_neq_shift .
omega.
rewrite  shift_zero with t_0;auto.
rewrite acc_upd_neq;auto.
rewrite acc_upd_neq;auto.
generalize (fresh_not_valid _ _ H12 0).
intro.
intro.
subst.
apply H14.
rewrite shift_zero.
intuition.
generalize (fresh_not_valid _ _ H12 1).
intro.
intro.
apply H14.
rewrite H16 .
intuition.
rewrite acc_upd_neq;auto.
rewrite acc_upd_neq;auto.
generalize (fresh_not_valid _ _ H12 0).
intro.
intro.
apply H14.
rewrite shift_zero.
rewrite H16 .
intuition.
generalize (fresh_not_valid _ _ H12 1).
intro.
intro.
apply H14.
rewrite H16 .
intuition.
rewrite acc_upd_neq;auto.
rewrite acc_upd_neq;auto.
generalize (fresh_not_valid _ _ H12 0).
intro.
intro.
apply H14.
rewrite shift_zero.
rewrite H16 .
assert (valid alloc s).
intuition.
generalize (H8 s alloc H17).
intuition.
generalize (fresh_not_valid _ _ H12 1).
intro.
intro.
apply H14.
rewrite H16 .
assert (valid alloc s).
intuition.
generalize (H8 s alloc H17).
intuition.
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: ((* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
                 (acc intP (shift t 1)) = 2 /\
                (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
                ((acc intP (acc b s)) = 1 /\ (acc intP (shift (acc b s) 2)) =
                4)) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (result: pointer),
  forall (alloc0: alloc_table),
  forall (HW_2: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 3 /\
                (valid_range alloc0 result 0 (3 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP result 3)),
  forall (result0: pointer),
  forall (HW_4: result0 = (shift result 1)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: intP1 = (upd intP0 result0 4)),
  forall (result1: pointer),
  forall (HW_6: result1 = (shift result 2)),
  forall (intP2: ((memory) Z)),
  forall (HW_7: intP2 = (upd intP1 result1 5)),
  forall (result2: Z),
  forall (HW_8: result2 = (acc intP2 result)),
  forall (result3: pointer),
  forall (HW_9: result3 = (shift result 1)),
  forall (result4: Z),
  forall (HW_10: result4 = (acc intP2 result3)),
  forall (result5: pointer),
  forall (HW_11: result5 = (shift result 2)),
  forall (result6: Z),
  forall (HW_12: result6 = (acc intP2 result5)),
  (* File \"init.c819618234.c1069824147.i\", line 0, characters 9-22 *)
  (result2 + result4 + result6) = 12 /\
  (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
  (acc intP2 (shift t 1)) = 2 /\
  (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
  ((acc intP2 (acc b s)) = 1 /\ (acc intP2 (shift (acc b s) 2)) = 4).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: ((* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
                 (acc intP (shift t 1)) = 2 /\
                (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
                ((acc intP (acc b s)) = 1 /\ (acc intP (shift (acc b s) 2)) =
                4)) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (result: pointer),
  forall (alloc0: alloc_table),
  forall (HW_2: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 3 /\
                (valid_range alloc0 result 0 (3 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP result 3)),
  forall (result0: pointer),
  forall (HW_4: result0 = (shift result 1)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: intP1 = (upd intP0 result0 4)),
  forall (result1: pointer),
  forall (HW_6: result1 = (shift result 2)),
  forall (intP2: ((memory) Z)),
  forall (HW_7: intP2 = (upd intP1 result1 5)),
  forall (result2: Z),
  forall (HW_8: result2 = (acc intP2 result)),
  forall (result3: pointer),
  forall (HW_9: result3 = (shift result 1)),
  forall (result4: Z),
  forall (HW_10: result4 = (acc intP2 result3)),
  forall (result5: pointer),
  forall (HW_11: result5 = (shift result 2)),
  (valid alloc0 result5).
Proof.
intuition;subst;auto.
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: ((* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
                 (acc intP (shift t 1)) = 2 /\
                (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
                ((acc intP (acc b s)) = 1 /\ (acc intP (shift (acc b s) 2)) =
                4)) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (result: pointer),
  forall (alloc0: alloc_table),
  forall (HW_2: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 3 /\
                (valid_range alloc0 result 0 (3 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP result 3)),
  forall (result0: pointer),
  forall (HW_4: result0 = (shift result 1)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: intP1 = (upd intP0 result0 4)),
  forall (result1: pointer),
  forall (HW_6: result1 = (shift result 2)),
  forall (intP2: ((memory) Z)),
  forall (HW_7: intP2 = (upd intP1 result1 5)),
  forall (result2: Z),
  forall (HW_8: result2 = (acc intP2 result)),
  forall (result3: pointer),
  forall (HW_9: result3 = (shift result 1)),
  (valid alloc0 result3).
Proof.
intuition;subst;auto.
caduceus.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
caduceus.
replace (shift u 1 <> u) with (shift u 1 <> shift u 0).
apply neq_offset_neq_shift .
omega.
rewrite shift_zero with u;auto.
replace (shift u 2 <> u) with (shift u 2 <> shift u 0).
apply neq_offset_neq_shift .
omega.
rewrite shift_zero with u;auto.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
auto.
generalize (fresh_not_valid _ _ H12 0).
intro.
intro.
subst.
apply H14.
rewrite shift_zero.
intuition.
generalize (fresh_not_valid _ _ H12 1).
intro.
intro.
apply H14.
rewrite H16.
intuition.
generalize (fresh_not_valid _ _ H12 2).
intro.
intro.
apply H14.
rewrite H16.
intuition.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
auto.
generalize (fresh_not_valid _ _ H12 0).
intro.
intro.
subst.
apply H14.
rewrite shift_zero.
intuition.
generalize (fresh_not_valid _ _ H12 1).
intro.
intro.
apply H14.
rewrite H16.
intuition.
generalize (fresh_not_valid _ _ H12 2).
intro.
intro.
apply H14.
rewrite H16.
intuition.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
auto.
generalize (fresh_not_valid _ _ H12 0).
intro.
intro.
subst.
apply H14.
rewrite shift_zero.
assert (valid alloc s).
intuition.
generalize (H8 _ _ H16). 
intuition.
generalize (fresh_not_valid _ _ H12 1).
intro.
intro.
apply H14.
rewrite H16.
assert (valid alloc s).
intuition.
generalize (H8 _ _ H17). 
intuition.
generalize (fresh_not_valid _ _ H12 2).
intro.
intro.
apply H14.
rewrite H16.
assert (valid alloc s).
intuition.
generalize (H8 _ _ H17). 
intuition.
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_4 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: ((* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
                 (acc intP (shift t 1)) = 2 /\
                (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
                ((acc intP (acc b s)) = 1 /\ (acc intP (shift (acc b s) 2)) =
                4)) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (result: pointer),
  forall (alloc0: alloc_table),
  forall (HW_2: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 3 /\
                (valid_range alloc0 result 0 (3 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP result 3)),
  forall (result0: pointer),
  forall (HW_4: result0 = (shift result 1)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: intP1 = (upd intP0 result0 4)),
  forall (result1: pointer),
  forall (HW_6: result1 = (shift result 2)),
  (valid alloc0 result1).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_5 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: ((* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
                 (acc intP (shift t 1)) = 2 /\
                (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
                ((acc intP (acc b s)) = 1 /\ (acc intP (shift (acc b s) 2)) =
                4)) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (result: pointer),
  forall (alloc0: alloc_table),
  forall (HW_2: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 3 /\
                (valid_range alloc0 result 0 (3 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP result 3)),
  forall (result0: pointer),
  forall (HW_4: result0 = (shift result 1)),
  (valid alloc0 result0).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_6 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: ((* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
                 (acc intP (shift t 1)) = 2 /\
                (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-47 *)
                ((acc intP (acc b s)) = 1 /\ (acc intP (shift (acc b s) 2)) =
                4)) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  3 >= 1.
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_1 : 
  forall (a: ((memory) Z)),
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP t 1)),
  forall (result: pointer),
  forall (HW_4: result = (shift t 1)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: intP1 = (upd intP0 result 2)),
  forall (result0: pointer),
  forall (HW_6: result0 = (shift t 2)),
  forall (intP2: ((memory) Z)),
  forall (HW_7: intP2 = (upd intP1 result0 3)),
  forall (a0: ((memory) Z)),
  forall (HW_8: a0 = (upd a s 1)),
  forall (result1: pointer),
  forall (HW_9: result1 = (acc b s)),
  forall (intP3: ((memory) Z)),
  forall (HW_10: intP3 = (upd intP2 result1 1)),
  forall (result2: pointer),
  forall (HW_11: result2 = (acc b s)),
  forall (result3: pointer),
  forall (HW_12: result3 = (shift result2 1)),
  forall (intP4: ((memory) Z)),
  forall (HW_13: intP4 = (upd intP3 result3 3)),
  forall (result4: pointer),
  forall (HW_14: result4 = (acc b s)),
  forall (result5: pointer),
  forall (HW_15: result5 = (shift result4 2)),
  forall (intP5: ((memory) Z)),
  forall (HW_16: intP5 = (upd intP4 result5 4)),
  (* File \"init.c819618234.c1069824147.i\", line 0, characters 21-30 *)
  ((acc intP5 (shift t 1)) = 2 /\ (acc intP5 (acc b s)) = 1 /\
  (acc intP5 (shift (acc b s) 2)) = 4).
Proof.
intuition;subst;auto.
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_2 : 
  forall (a: ((memory) Z)),
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP t 1)),
  forall (result: pointer),
  forall (HW_4: result = (shift t 1)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: intP1 = (upd intP0 result 2)),
  forall (result0: pointer),
  forall (HW_6: result0 = (shift t 2)),
  forall (intP2: ((memory) Z)),
  forall (HW_7: intP2 = (upd intP1 result0 3)),
  forall (a0: ((memory) Z)),
  forall (HW_8: a0 = (upd a s 1)),
  forall (result1: pointer),
  forall (HW_9: result1 = (acc b s)),
  forall (intP3: ((memory) Z)),
  forall (HW_10: intP3 = (upd intP2 result1 1)),
  forall (result2: pointer),
  forall (HW_11: result2 = (acc b s)),
  forall (result3: pointer),
  forall (HW_12: result3 = (shift result2 1)),
  forall (intP4: ((memory) Z)),
  forall (HW_13: intP4 = (upd intP3 result3 3)),
  forall (result4: pointer),
  forall (HW_14: result4 = (acc b s)),
  forall (result5: pointer),
  forall (HW_15: result5 = (shift result4 2)),
  (valid alloc result5).
Proof.
intuition;subst;auto.
caduceus.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
caduceus.
apply neq_offset_neq_shift .
omega.
rewrite <- shift_zero with (s#b).
apply neq_base_addr_neq_shift;auto.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
caduceus.
pattern (s#b) at -1; rewrite <- shift_zero with (s#b).
apply neq_offset_neq_shift .
omega.
pattern (s#b) at -1; rewrite <- shift_zero with (s#b).
apply neq_offset_neq_shift .
omega.
caduceus.
assert (valid alloc s).
intuition.
generalize (H5 _ _ H4).
intuition.
assert (valid alloc s).
intuition.
generalize (H5 _ _ H4).
intuition.
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_3 : 
  forall (a: ((memory) Z)),
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP t 1)),
  forall (result: pointer),
  forall (HW_4: result = (shift t 1)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: intP1 = (upd intP0 result 2)),
  forall (result0: pointer),
  forall (HW_6: result0 = (shift t 2)),
  forall (intP2: ((memory) Z)),
  forall (HW_7: intP2 = (upd intP1 result0 3)),
  forall (a0: ((memory) Z)),
  forall (HW_8: a0 = (upd a s 1)),
  forall (result1: pointer),
  forall (HW_9: result1 = (acc b s)),
  forall (intP3: ((memory) Z)),
  forall (HW_10: intP3 = (upd intP2 result1 1)),
  forall (result2: pointer),
  forall (HW_11: result2 = (acc b s)),
  forall (result3: pointer),
  forall (HW_12: result3 = (shift result2 1)),
  forall (intP4: ((memory) Z)),
  forall (HW_13: intP4 = (upd intP3 result3 3)),
  (valid alloc s).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_4 : 
  forall (a: ((memory) Z)),
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP t 1)),
  forall (result: pointer),
  forall (HW_4: result = (shift t 1)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: intP1 = (upd intP0 result 2)),
  forall (result0: pointer),
  forall (HW_6: result0 = (shift t 2)),
  forall (intP2: ((memory) Z)),
  forall (HW_7: intP2 = (upd intP1 result0 3)),
  forall (a0: ((memory) Z)),
  forall (HW_8: a0 = (upd a s 1)),
  forall (result1: pointer),
  forall (HW_9: result1 = (acc b s)),
  forall (intP3: ((memory) Z)),
  forall (HW_10: intP3 = (upd intP2 result1 1)),
  forall (result2: pointer),
  forall (HW_11: result2 = (acc b s)),
  forall (result3: pointer),
  forall (HW_12: result3 = (shift result2 1)),
  (valid alloc result3).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_5 : 
  forall (a: ((memory) Z)),
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP t 1)),
  forall (result: pointer),
  forall (HW_4: result = (shift t 1)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: intP1 = (upd intP0 result 2)),
  forall (result0: pointer),
  forall (HW_6: result0 = (shift t 2)),
  forall (intP2: ((memory) Z)),
  forall (HW_7: intP2 = (upd intP1 result0 3)),
  forall (a0: ((memory) Z)),
  forall (HW_8: a0 = (upd a s 1)),
  forall (result1: pointer),
  forall (HW_9: result1 = (acc b s)),
  forall (intP3: ((memory) Z)),
  forall (HW_10: intP3 = (upd intP2 result1 1)),
  (valid alloc s).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_6 : 
  forall (a: ((memory) Z)),
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP t 1)),
  forall (result: pointer),
  forall (HW_4: result = (shift t 1)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: intP1 = (upd intP0 result 2)),
  forall (result0: pointer),
  forall (HW_6: result0 = (shift t 2)),
  forall (intP2: ((memory) Z)),
  forall (HW_7: intP2 = (upd intP1 result0 3)),
  forall (a0: ((memory) Z)),
  forall (HW_8: a0 = (upd a s 1)),
  forall (result1: pointer),
  forall (HW_9: result1 = (acc b s)),
  (valid alloc result1).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_7 : 
  forall (a: ((memory) Z)),
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP t 1)),
  forall (result: pointer),
  forall (HW_4: result = (shift t 1)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: intP1 = (upd intP0 result 2)),
  forall (result0: pointer),
  forall (HW_6: result0 = (shift t 2)),
  forall (intP2: ((memory) Z)),
  forall (HW_7: intP2 = (upd intP1 result0 3)),
  forall (a0: ((memory) Z)),
  forall (HW_8: a0 = (upd a s 1)),
  (valid alloc s).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_8 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP t 1)),
  forall (result: pointer),
  forall (HW_4: result = (shift t 1)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: intP1 = (upd intP0 result 2)),
  forall (result0: pointer),
  forall (HW_6: result0 = (shift t 2)),
  forall (intP2: ((memory) Z)),
  forall (HW_7: intP2 = (upd intP1 result0 3)),
  (valid alloc s).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_9 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP t 1)),
  forall (result: pointer),
  forall (HW_4: result = (shift t 1)),
  forall (intP1: ((memory) Z)),
  forall (HW_5: intP1 = (upd intP0 result 2)),
  forall (result0: pointer),
  forall (HW_6: result0 = (shift t 2)),
  (valid alloc result0).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_10 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (intP0: ((memory) Z)),
  forall (HW_3: intP0 = (upd intP t 1)),
  forall (result: pointer),
  forall (HW_4: result = (shift t 1)),
  (valid alloc result).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_11 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (s: pointer),
  forall (t: pointer),
  forall (HW_1: (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc b s)))) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0) /\
                (valid1 b) /\ (valid1_range b 3)),
  forall (x: Z),
  forall (HW_2: x = 45),
  (valid alloc t).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

