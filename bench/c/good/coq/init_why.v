(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export caduceus_spec_why.

(* Why obligation from file "why/init.why", characters 506-936 *)
Lemma f_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (Pre9: (acc intP (shift t 1)) = 2 /\ (valid_range alloc t 0 2) /\
                ((~((base_addr s) = (base_addr t)) /\
                ~((base_addr (acc b s)) = (base_addr t)) /\
                ~((base_addr (acc b s)) = (base_addr s))) /\
                (valid alloc s) /\ (valid_range alloc (acc b s) 0 2)) /\
                (acc intP (shift (acc b s) 0)) = 1 /\
                (acc intP (shift (acc b s) 2)) = 4),
  (valid alloc (shift t 1)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", characters 506-936 *)
Lemma f_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (Pre9: (acc intP (shift t 1)) = 2 /\ (valid_range alloc t 0 2) /\
                ((~((base_addr s) = (base_addr t)) /\
                ~((base_addr (acc b s)) = (base_addr t)) /\
                ~((base_addr (acc b s)) = (base_addr s))) /\
                (valid alloc s) /\ (valid_range alloc (acc b s) 0 2)) /\
                (acc intP (shift (acc b s) 0)) = 1 /\
                (acc intP (shift (acc b s) 2)) = 4),
  forall (Pre2: (valid alloc (shift t 1))),
  (valid alloc s).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", characters 506-936 *)
Lemma f_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (Pre9: (acc intP (shift t 1)) = 2 /\ (valid_range alloc t 0 2) /\
                ((~((base_addr s) = (base_addr t)) /\
                ~((base_addr (acc b s)) = (base_addr t)) /\
                ~((base_addr (acc b s)) = (base_addr s))) /\
                (valid alloc s) /\ (valid_range alloc (acc b s) 0 2)) /\
                (acc intP (shift (acc b s) 0)) = 1 /\
                (acc intP (shift (acc b s) 2)) = 4),
  forall (Pre2: (valid alloc (shift t 1))),
  forall (Pre3: (valid alloc s)),
  (valid alloc (shift (acc b s) 0)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", characters 506-936 *)
Lemma f_impl_po_4 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (Pre9: (acc intP (shift t 1)) = 2 /\ (valid_range alloc t 0 2) /\
                ((~((base_addr s) = (base_addr t)) /\
                ~((base_addr (acc b s)) = (base_addr t)) /\
                ~((base_addr (acc b s)) = (base_addr s))) /\
                (valid alloc s) /\ (valid_range alloc (acc b s) 0 2)) /\
                (acc intP (shift (acc b s) 0)) = 1 /\
                (acc intP (shift (acc b s) 2)) = 4),
  forall (Pre2: (valid alloc (shift t 1))),
  forall (Pre3: (valid alloc s)),
  forall (Pre5: (valid alloc (shift (acc b s) 0))),
  forall (Pre6: (valid alloc s)),
  (valid alloc (shift (acc b s) 2)).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", characters 35-966 *)
Lemma f_impl_po_5 : 
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (Pre9: (acc intP (shift t 1)) = 2 /\ (valid_range alloc t 0 2) /\
                ((~((base_addr s) = (base_addr t)) /\
                ~((base_addr (acc b s)) = (base_addr t)) /\
                ~((base_addr (acc b s)) = (base_addr s))) /\
                (valid alloc s) /\ (valid_range alloc (acc b s) 0 2)) /\
                (acc intP (shift (acc b s) 0)) = 1 /\
                (acc intP (shift (acc b s) 2)) = 4),
  forall (Pre2: (valid alloc (shift t 1))),
  forall (Pre3: (valid alloc s)),
  forall (Pre5: (valid alloc (shift (acc b s) 0))),
  forall (Pre6: (valid alloc s)),
  forall (Pre8: (valid alloc (shift (acc b s) 2))),
  forall (result: Z),
  forall (Post1: result =
                 ((acc intP (shift t 1)) + (acc intP (shift (acc b s) 0)) +
                 (acc intP (shift (acc b s) 2)))),
  result = 7.
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", characters 1116-1144 *)
Lemma invariants_initially_established_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (t: pointer),
  forall (x0: Z),
  forall (Post1: x0 = 45),
  forall (caduceus_10: pointer),
  forall (Post4: caduceus_10 = (shift t 0)),
  (valid alloc caduceus_10).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/init.why", characters 1079-1144 *)
Lemma invariants_initially_established_impl_po_2 : 
  forall (a: ((memory) Z)),
  forall (alloc: alloc_table),
  forall (b: ((memory) pointer)),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (t: pointer),
  forall (x0: Z),
  forall (Post1: x0 = 45),
  forall (caduceus_10: pointer),
  forall (Post4: caduceus_10 = (shift t 0)),
  forall (Pre3: (valid alloc caduceus_10)),
  forall (intP0: ((memory) Z)),
  forall (Post23: intP0 = (upd intP caduceus_10 1)),
  (forall (result:pointer),
   (result = (shift t 1) ->
    (forall (intP:((memory) Z)),
     (intP = (upd intP0 result 2) ->
      (forall (result:pointer),
       (result = (shift t 2) ->
        (forall (intP0:((memory) Z)),
         (intP0 = (upd intP result 3) ->
          (forall (result:pointer),
           (result = (shift (acc b s) 0) ->
            (forall (intP:((memory) Z)),
             (intP = (upd intP0 result 1) ->
              (forall (result:pointer),
               (result = (shift (acc b s) 1) ->
                (forall (intP0:((memory) Z)),
                 (intP0 = (upd intP result 1) ->
                  (forall (result:pointer),
                   (result = (shift (acc b s) 2) ->
                    (forall (intP:((memory) Z)),
                     (intP = (upd intP0 result 3) ->
                      (forall (result:pointer),
                       (result = s ->
                        (forall (a0:((memory) Z)),
                         (a0 = (upd a result 4) -> (acc intP (shift t 1)) =
                          2 /\ (acc intP (shift (acc b s) 0)) = 1 /\
                          (acc intP (shift (acc b s) 2)) = 4)) /\
                        (valid alloc result))))) /\
                    (valid alloc result))) /\
                  (valid alloc s))) /\
                (valid alloc result))) /\
              (valid alloc s))) /\
            (valid alloc result))) /\
          (valid alloc s))) /\
        (valid alloc result))))) /\
    (valid alloc result))).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

