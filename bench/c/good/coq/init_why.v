(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export init_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: ((* File \"init.c\", line 5, characters 25-34:\n *)
                 (acc int_Z5 (shift t 1)) = 2 /\
                (* File \"init.c\", line 13, characters 25-51:\n *)
                ((acc int_Z1 (acc b_Z7 s)) = 1 /\
                (acc int_Z1 (shift (acc b_Z7 s) 2)) = 4)) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (result: ((pointer) Z5)),
  forall (HW_2: result = (shift t 1)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc int_Z5 result)),
  forall (result1: ((pointer) Z1)),
  forall (HW_4: result1 = (acc b_Z7 s)),
  forall (result2: Z),
  forall (HW_5: result2 = (acc int_Z1 result1)),
  forall (result3: ((pointer) Z1)),
  forall (HW_6: result3 = (acc b_Z7 s)),
  forall (result4: ((pointer) Z1)),
  forall (HW_7: result4 = (shift result3 2)),
  forall (result5: Z),
  forall (HW_8: result5 = (acc int_Z1 result4)),
  (* File \"init.c\", line 15, characters 13-25:\n *)
  (result0 + result2 + result5) = 7.
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: ((* File \"init.c\", line 5, characters 25-34:\n *)
                 (acc int_Z5 (shift t 1)) = 2 /\
                (* File \"init.c\", line 13, characters 25-51:\n *)
                ((acc int_Z1 (acc b_Z7 s)) = 1 /\
                (acc int_Z1 (shift (acc b_Z7 s) 2)) = 4)) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (result: ((pointer) Z5)),
  forall (HW_2: result = (shift t 1)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc int_Z5 result)),
  forall (result1: ((pointer) Z1)),
  forall (HW_4: result1 = (acc b_Z7 s)),
  forall (result2: Z),
  forall (HW_5: result2 = (acc int_Z1 result1)),
  forall (result3: ((pointer) Z1)),
  forall (HW_6: result3 = (acc b_Z7 s)),
  forall (result4: ((pointer) Z1)),
  forall (HW_7: result4 = (shift result3 2)),
  forall (HW_9: (forall (result:Z),
                 (result = (acc int_Z1 result4) ->
                  (* File \"init.c\", line 15, characters 13-25:\n *)
                  (result0 + result2 + result) = 7))),
  (valid alloc result4).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: ((* File \"init.c\", line 5, characters 25-34:\n *)
                 (acc int_Z5 (shift t 1)) = 2 /\
                (* File \"init.c\", line 13, characters 25-51:\n *)
                ((acc int_Z1 (acc b_Z7 s)) = 1 /\
                (acc int_Z1 (shift (acc b_Z7 s) 2)) = 4)) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (result: ((pointer) Z5)),
  forall (HW_2: result = (shift t 1)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc int_Z5 result)),
  forall (result1: ((pointer) Z1)),
  forall (HW_4: result1 = (acc b_Z7 s)),
  forall (result2: Z),
  forall (HW_5: result2 = (acc int_Z1 result1)),
  forall (HW_10: (forall (result:((pointer) Z1)),
                  (result = (acc b_Z7 s) ->
                   (forall (result1:((pointer) Z1)),
                    (result1 = (shift result 2) ->
                     (forall (result:Z),
                      (result = (acc int_Z1 result1) ->
                       (* File \"init.c\", line 15, characters 13-25:\n *)
                       (result0 + result2 + result) = 7)) /\
                     (valid alloc result1)))))),
  (valid alloc s).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_4 : 
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: ((* File \"init.c\", line 5, characters 25-34:\n *)
                 (acc int_Z5 (shift t 1)) = 2 /\
                (* File \"init.c\", line 13, characters 25-51:\n *)
                ((acc int_Z1 (acc b_Z7 s)) = 1 /\
                (acc int_Z1 (shift (acc b_Z7 s) 2)) = 4)) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (result: ((pointer) Z5)),
  forall (HW_2: result = (shift t 1)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc int_Z5 result)),
  forall (result1: ((pointer) Z1)),
  forall (HW_4: result1 = (acc b_Z7 s)),
  forall (HW_11: (forall (result:Z),
                  (result = (acc int_Z1 result1) ->
                   (forall (result1:((pointer) Z1)),
                    (result1 = (acc b_Z7 s) ->
                     (forall (result2:((pointer) Z1)),
                      (result2 = (shift result1 2) ->
                       (forall (result1:Z),
                        (result1 = (acc int_Z1 result2) ->
                         (* File \"init.c\", line 15, characters 13-25:\n *)
                         (result0 + result + result1) = 7)) /\
                       (valid alloc result2))))) /\
                   (valid alloc s)))),
  (valid alloc result1).
Proof.
intuition.
generalize (H8 s alloc Pre6);intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_5 : 
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: ((* File \"init.c\", line 5, characters 25-34:\n *)
                 (acc int_Z5 (shift t 1)) = 2 /\
                (* File \"init.c\", line 13, characters 25-51:\n *)
                ((acc int_Z1 (acc b_Z7 s)) = 1 /\
                (acc int_Z1 (shift (acc b_Z7 s) 2)) = 4)) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (result: ((pointer) Z5)),
  forall (HW_2: result = (shift t 1)),
  forall (result0: Z),
  forall (HW_3: result0 = (acc int_Z5 result)),
  forall (HW_12: (forall (result:((pointer) Z1)),
                  (result = (acc b_Z7 s) ->
                   (forall (result1:Z),
                    (result1 = (acc int_Z1 result) ->
                     (forall (result:((pointer) Z1)),
                      (result = (acc b_Z7 s) ->
                       (forall (result2:((pointer) Z1)),
                        (result2 = (shift result 2) ->
                         (forall (result:Z),
                          (result = (acc int_Z1 result2) ->
                           (* File \"init.c\", line 15, characters 13-25:\n *)
                           (result0 + result1 + result) = 7)) /\
                         (valid alloc result2))))) /\
                     (valid alloc s))) /\
                   (valid alloc result)))),
  (valid alloc s).
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_6 : 
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: ((* File \"init.c\", line 5, characters 25-34:\n *)
                 (acc int_Z5 (shift t 1)) = 2 /\
                (* File \"init.c\", line 13, characters 25-51:\n *)
                ((acc int_Z1 (acc b_Z7 s)) = 1 /\
                (acc int_Z1 (shift (acc b_Z7 s) 2)) = 4)) /\
                (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (result: ((pointer) Z5)),
  forall (HW_2: result = (shift t 1)),
  forall (HW_13: (forall (result0:Z),
                  (result0 = (acc int_Z5 result) ->
                   (forall (result:((pointer) Z1)),
                    (result = (acc b_Z7 s) ->
                     (forall (result1:Z),
                      (result1 = (acc int_Z1 result) ->
                       (forall (result:((pointer) Z1)),
                        (result = (acc b_Z7 s) ->
                         (forall (result2:((pointer) Z1)),
                          (result2 = (shift result 2) ->
                           (forall (result:Z),
                            (result = (acc int_Z1 result2) ->
                             (* File \"init.c\", line 15, characters 13-25:\n *)
                             (result0 + result1 + result) = 7)) /\
                           (valid alloc result2))))) /\
                       (valid alloc s))) /\
                     (valid alloc result))) /\
                   (valid alloc s)))),
  (valid alloc result).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (int_Z3: ((memory) Z Z3)),
  forall (result: ((pointer) Z3)),
  forall (alloc0: alloc_table),
  forall (HW_1: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 2 /\
                (valid_range alloc0 result 0 (2 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (int_Z3_0: ((memory) Z Z3)),
  forall (HW_2: int_Z3_0 = (upd int_Z3 result 4)),
  forall (result0: ((pointer) Z3)),
  forall (HW_3: result0 = (shift result 1)),
  forall (int_Z3_1: ((memory) Z Z3)),
  forall (HW_4: int_Z3_1 = (upd int_Z3_0 result0 5)),
  forall (result1: Z),
  forall (HW_5: result1 = (acc int_Z3_1 result)),
  (* File \"init.c\", line 22, characters 13-25:\n *) result1 = 4.
Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (int_Z3: ((memory) Z Z3)),
  forall (result: ((pointer) Z3)),
  forall (alloc0: alloc_table),
  forall (HW_1: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 2 /\
                (valid_range alloc0 result 0 (2 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (int_Z3_0: ((memory) Z Z3)),
  forall (HW_2: int_Z3_0 = (upd int_Z3 result 4)),
  forall (result0: ((pointer) Z3)),
  forall (HW_3: result0 = (shift result 1)),
  forall (int_Z3_1: ((memory) Z Z3)),
  forall (HW_4: int_Z3_1 = (upd int_Z3_0 result0 5)),
  forall (HW_6: (forall (result0:Z),
                 (result0 = (acc int_Z3_1 result) ->
                  (* File \"init.c\", line 22, characters 13-25:\n *)
                  result0 = 4))),
  (valid alloc0 result).
Proof.
intuition.
subst;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (int_Z3: ((memory) Z Z3)),
  forall (result: ((pointer) Z3)),
  forall (alloc0: alloc_table),
  forall (HW_1: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 2 /\
                (valid_range alloc0 result 0 (2 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (int_Z3_0: ((memory) Z Z3)),
  forall (HW_2: int_Z3_0 = (upd int_Z3 result 4)),
  forall (result0: ((pointer) Z3)),
  forall (HW_3: result0 = (shift result 1)),
  forall (HW_7: (forall (int_Z3:((memory) Z Z3)),
                 (int_Z3 = (upd int_Z3_0 result0 5) ->
                  (forall (result0:Z),
                   (result0 = (acc int_Z3 result) ->
                    (* File \"init.c\", line 22, characters 13-25:\n *)
                    result0 = 4)) /\
                  (valid alloc0 result)))),
  (valid alloc0 result0).
Proof.
intuition;subst.
rewrite acc_upd_neq;auto.
caduceus.
replace (shift t_0 1 <> t_0)  with (shift t_0 1 <> shift t_0 0).
apply neq_offset_neq_shift .
omega.
rewrite  shift_zero with t_0;auto.
rewrite acc_upd_neq;auto.
rewrite acc_upd_neq;auto.
generalize (fresh_not_valid _ _ H12 0).
intro.
intro.
subst.
apply H14.
rewrite shift_zero.
intuition.
generalize (fresh_not_valid _ _ H12 1).
intro.
intro.
apply H14.
rewrite H16 .
intuition.
rewrite acc_upd_neq;auto.
rewrite acc_upd_neq;auto.
generalize (fresh_not_valid _ _ H12 0).
intro.
intro.
apply H14.
rewrite shift_zero.
rewrite H16 .
intuition.
generalize (fresh_not_valid _ _ H12 1).
intro.
intro.
apply H14.
rewrite H16 .
intuition.
rewrite acc_upd_neq;auto.
rewrite acc_upd_neq;auto.
generalize (fresh_not_valid _ _ H12 0).
intro.
intro.
apply H14.
rewrite shift_zero.
rewrite H16 .
assert (valid alloc s).
intuition.
generalize (H8 s alloc H17).
intuition.
generalize (fresh_not_valid _ _ H12 1).
intro.
intro.
apply H14.
rewrite H16 .
assert (valid alloc s).
intuition.
generalize (H8 s alloc H17).
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_4 : 
  forall (alloc: alloc_table),
  forall (int_Z3: ((memory) Z Z3)),
  forall (result: ((pointer) Z3)),
  forall (alloc0: alloc_table),
  forall (HW_1: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 2 /\
                (valid_range alloc0 result 0 (2 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (HW_8: (forall (int_Z3_0:((memory) Z Z3)),
                 (int_Z3_0 = (upd int_Z3 result 4) ->
                  (forall (result0:((pointer) Z3)),
                   (result0 = (shift result 1) ->
                    (forall (int_Z3:((memory) Z Z3)),
                     (int_Z3 = (upd int_Z3_0 result0 5) ->
                      (forall (result0:Z),
                       (result0 = (acc int_Z3 result) ->
                        (* File \"init.c\", line 22, characters 13-25:\n *)
                        result0 = 4)) /\
                      (valid alloc0 result))) /\
                    (valid alloc0 result0)))))),
  (valid alloc0 result).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_5 : 
  forall (alloc: alloc_table),
  forall (int_Z3: ((memory) Z Z3)),
  forall (HW_9: (forall (result:((pointer) Z3)),
                 (forall (alloc0:alloc_table),
                  ((valid alloc0 result) /\ (offset result) = 0 /\
                   (block_length alloc0 result) = 2 /\
                   (valid_range alloc0 result 0 (2 - 1)) /\
                   (fresh alloc result) /\ (on_stack alloc0 result) /\
                   (alloc_stack result alloc alloc0) ->
                   (forall (int_Z3_0:((memory) Z Z3)),
                    (int_Z3_0 = (upd int_Z3 result 4) ->
                     (forall (result0:((pointer) Z3)),
                      (result0 = (shift result 1) ->
                       (forall (int_Z3:((memory) Z Z3)),
                        (int_Z3 = (upd int_Z3_0 result0 5) ->
                         (forall (result0:Z),
                          (result0 = (acc int_Z3 result) ->
                           (* File \"init.c\", line 22, characters 13-25:\n *)
                           result0 = 4)) /\
                         (valid alloc0 result))) /\
                       (valid alloc0 result0))))) /\
                   (valid alloc0 result))))),
  2 >= 1.
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (int_Z4: ((memory) Z Z4)),
  forall (result: ((pointer) Z4)),
  forall (alloc0: alloc_table),
  forall (HW_1: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 3 /\
                (valid_range alloc0 result 0 (3 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (int_Z4_0: ((memory) Z Z4)),
  forall (HW_2: int_Z4_0 = (upd int_Z4 result 3)),
  forall (result0: ((pointer) Z4)),
  forall (HW_3: result0 = (shift result 1)),
  forall (int_Z4_1: ((memory) Z Z4)),
  forall (HW_4: int_Z4_1 = (upd int_Z4_0 result0 4)),
  forall (result1: ((pointer) Z4)),
  forall (HW_5: result1 = (shift result 2)),
  forall (int_Z4_2: ((memory) Z Z4)),
  forall (HW_6: int_Z4_2 = (upd int_Z4_1 result1 5)),
  forall (result2: Z),
  forall (HW_7: result2 = (acc int_Z4_2 result)),
  forall (result3: ((pointer) Z4)),
  forall (HW_8: result3 = (shift result 1)),
  forall (result4: Z),
  forall (HW_9: result4 = (acc int_Z4_2 result3)),
  forall (result5: ((pointer) Z4)),
  forall (HW_10: result5 = (shift result 2)),
  forall (result6: Z),
  forall (HW_11: result6 = (acc int_Z4_2 result5)),
  (* File \"init.c\", line 30, characters 13-26:\n *)
  (result2 + result4 + result6) = 12.
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (int_Z4: ((memory) Z Z4)),
  forall (result: ((pointer) Z4)),
  forall (alloc0: alloc_table),
  forall (HW_1: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 3 /\
                (valid_range alloc0 result 0 (3 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (int_Z4_0: ((memory) Z Z4)),
  forall (HW_2: int_Z4_0 = (upd int_Z4 result 3)),
  forall (result0: ((pointer) Z4)),
  forall (HW_3: result0 = (shift result 1)),
  forall (int_Z4_1: ((memory) Z Z4)),
  forall (HW_4: int_Z4_1 = (upd int_Z4_0 result0 4)),
  forall (result1: ((pointer) Z4)),
  forall (HW_5: result1 = (shift result 2)),
  forall (int_Z4_2: ((memory) Z Z4)),
  forall (HW_6: int_Z4_2 = (upd int_Z4_1 result1 5)),
  forall (result2: Z),
  forall (HW_7: result2 = (acc int_Z4_2 result)),
  forall (result3: ((pointer) Z4)),
  forall (HW_8: result3 = (shift result 1)),
  forall (result4: Z),
  forall (HW_9: result4 = (acc int_Z4_2 result3)),
  forall (result5: ((pointer) Z4)),
  forall (HW_10: result5 = (shift result 2)),
  forall (HW_12: (forall (result:Z),
                  (result = (acc int_Z4_2 result5) ->
                   (* File \"init.c\", line 30, characters 13-26:\n *)
                   (result2 + result4 + result) = 12))),
  (valid alloc0 result5).
Proof.
intuition;subst;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_3 : 
  forall (alloc: alloc_table),
  forall (int_Z4: ((memory) Z Z4)),
  forall (result: ((pointer) Z4)),
  forall (alloc0: alloc_table),
  forall (HW_1: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 3 /\
                (valid_range alloc0 result 0 (3 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (int_Z4_0: ((memory) Z Z4)),
  forall (HW_2: int_Z4_0 = (upd int_Z4 result 3)),
  forall (result0: ((pointer) Z4)),
  forall (HW_3: result0 = (shift result 1)),
  forall (int_Z4_1: ((memory) Z Z4)),
  forall (HW_4: int_Z4_1 = (upd int_Z4_0 result0 4)),
  forall (result1: ((pointer) Z4)),
  forall (HW_5: result1 = (shift result 2)),
  forall (int_Z4_2: ((memory) Z Z4)),
  forall (HW_6: int_Z4_2 = (upd int_Z4_1 result1 5)),
  forall (result2: Z),
  forall (HW_7: result2 = (acc int_Z4_2 result)),
  forall (result3: ((pointer) Z4)),
  forall (HW_8: result3 = (shift result 1)),
  forall (HW_13: (forall (result0:Z),
                  (result0 = (acc int_Z4_2 result3) ->
                   (forall (result1:((pointer) Z4)),
                    (result1 = (shift result 2) ->
                     (forall (result:Z),
                      (result = (acc int_Z4_2 result1) ->
                       (* File \"init.c\", line 30, characters 13-26:\n *)
                       (result2 + result0 + result) = 12)) /\
                     (valid alloc0 result1)))))),
  (valid alloc0 result3).
Proof.
intuition;subst;auto.
caduceus.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
caduceus.
replace (shift u 1 <> u) with (shift u 1 <> shift u 0).
apply neq_offset_neq_shift .
omega.
rewrite shift_zero with u;auto.
replace (shift u 2 <> u) with (shift u 2 <> shift u 0).
apply neq_offset_neq_shift .
omega.
rewrite shift_zero with u;auto.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
auto.
generalize (fresh_not_valid _ _ H12 0).
intro.
intro.
subst.
apply H14.
rewrite shift_zero.
intuition.
generalize (fresh_not_valid _ _ H12 1).
intro.
intro.
apply H14.
rewrite H16.
intuition.
generalize (fresh_not_valid _ _ H12 2).
intro.
intro.
apply H14.
rewrite H16.
intuition.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
auto.
generalize (fresh_not_valid _ _ H12 0).
intro.
intro.
subst.
apply H14.
rewrite shift_zero.
intuition.
generalize (fresh_not_valid _ _ H12 1).
intro.
intro.
apply H14.
rewrite H16.
intuition.
generalize (fresh_not_valid _ _ H12 2).
intro.
intro.
apply H14.
rewrite H16.
intuition.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
auto.
generalize (fresh_not_valid _ _ H12 0).
intro.
intro.
subst.
apply H14.
rewrite shift_zero.
assert (valid alloc s).
intuition.
generalize (H8 _ _ H16). 
intuition.
generalize (fresh_not_valid _ _ H12 1).
intro.
intro.
apply H14.
rewrite H16.
assert (valid alloc s).
intuition.
generalize (H8 _ _ H17). 
intuition.
generalize (fresh_not_valid _ _ H12 2).
intro.
intro.
apply H14.
rewrite H16.
assert (valid alloc s).
intuition.
generalize (H8 _ _ H17). 
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_4 : 
  forall (alloc: alloc_table),
  forall (int_Z4: ((memory) Z Z4)),
  forall (result: ((pointer) Z4)),
  forall (alloc0: alloc_table),
  forall (HW_1: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 3 /\
                (valid_range alloc0 result 0 (3 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (int_Z4_0: ((memory) Z Z4)),
  forall (HW_2: int_Z4_0 = (upd int_Z4 result 3)),
  forall (result0: ((pointer) Z4)),
  forall (HW_3: result0 = (shift result 1)),
  forall (int_Z4_1: ((memory) Z Z4)),
  forall (HW_4: int_Z4_1 = (upd int_Z4_0 result0 4)),
  forall (result1: ((pointer) Z4)),
  forall (HW_5: result1 = (shift result 2)),
  forall (int_Z4_2: ((memory) Z Z4)),
  forall (HW_6: int_Z4_2 = (upd int_Z4_1 result1 5)),
  forall (HW_14: (forall (result0:Z),
                  (result0 = (acc int_Z4_2 result) ->
                   (forall (result1:((pointer) Z4)),
                    (result1 = (shift result 1) ->
                     (forall (result2:Z),
                      (result2 = (acc int_Z4_2 result1) ->
                       (forall (result1:((pointer) Z4)),
                        (result1 = (shift result 2) ->
                         (forall (result:Z),
                          (result = (acc int_Z4_2 result1) ->
                           (* File \"init.c\", line 30, characters 13-26:\n *)
                           (result0 + result2 + result) = 12)) /\
                         (valid alloc0 result1))))) /\
                     (valid alloc0 result1)))))),
  (valid alloc0 result).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_5 : 
  forall (alloc: alloc_table),
  forall (int_Z4: ((memory) Z Z4)),
  forall (result: ((pointer) Z4)),
  forall (alloc0: alloc_table),
  forall (HW_1: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 3 /\
                (valid_range alloc0 result 0 (3 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (int_Z4_0: ((memory) Z Z4)),
  forall (HW_2: int_Z4_0 = (upd int_Z4 result 3)),
  forall (result0: ((pointer) Z4)),
  forall (HW_3: result0 = (shift result 1)),
  forall (int_Z4_1: ((memory) Z Z4)),
  forall (HW_4: int_Z4_1 = (upd int_Z4_0 result0 4)),
  forall (result1: ((pointer) Z4)),
  forall (HW_5: result1 = (shift result 2)),
  forall (HW_15: (forall (int_Z4:((memory) Z Z4)),
                  (int_Z4 = (upd int_Z4_1 result1 5) ->
                   (forall (result0:Z),
                    (result0 = (acc int_Z4 result) ->
                     (forall (result1:((pointer) Z4)),
                      (result1 = (shift result 1) ->
                       (forall (result2:Z),
                        (result2 = (acc int_Z4 result1) ->
                         (forall (result1:((pointer) Z4)),
                          (result1 = (shift result 2) ->
                           (forall (result:Z),
                            (result = (acc int_Z4 result1) ->
                             (* File \"init.c\", line 30, characters 13-26:\n *)
                             (result0 + result2 + result) = 12)) /\
                           (valid alloc0 result1))))) /\
                       (valid alloc0 result1))))) /\
                   (valid alloc0 result)))),
  (valid alloc0 result1).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_6 : 
  forall (alloc: alloc_table),
  forall (int_Z4: ((memory) Z Z4)),
  forall (result: ((pointer) Z4)),
  forall (alloc0: alloc_table),
  forall (HW_1: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 3 /\
                (valid_range alloc0 result 0 (3 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (int_Z4_0: ((memory) Z Z4)),
  forall (HW_2: int_Z4_0 = (upd int_Z4 result 3)),
  forall (result0: ((pointer) Z4)),
  forall (HW_3: result0 = (shift result 1)),
  forall (HW_16: (forall (int_Z4:((memory) Z Z4)),
                  (int_Z4 = (upd int_Z4_0 result0 4) ->
                   (forall (result0:((pointer) Z4)),
                    (result0 = (shift result 2) ->
                     (forall (int_Z4_0:((memory) Z Z4)),
                      (int_Z4_0 = (upd int_Z4 result0 5) ->
                       (forall (result0:Z),
                        (result0 = (acc int_Z4_0 result) ->
                         (forall (result1:((pointer) Z4)),
                          (result1 = (shift result 1) ->
                           (forall (result2:Z),
                            (result2 = (acc int_Z4_0 result1) ->
                             (forall (result1:((pointer) Z4)),
                              (result1 = (shift result 2) ->
                               (forall (result:Z),
                                (result = (acc int_Z4_0 result1) ->
                                 (* File \"init.c\", line 30, characters 13-26:\n *)
                                 (result0 + result2 + result) = 12)) /\
                               (valid alloc0 result1))))) /\
                           (valid alloc0 result1))))) /\
                       (valid alloc0 result))) /\
                     (valid alloc0 result0)))))),
  (valid alloc0 result0).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_7 : 
  forall (alloc: alloc_table),
  forall (int_Z4: ((memory) Z Z4)),
  forall (result: ((pointer) Z4)),
  forall (alloc0: alloc_table),
  forall (HW_1: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 3 /\
                (valid_range alloc0 result 0 (3 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (HW_17: (forall (int_Z4_0:((memory) Z Z4)),
                  (int_Z4_0 = (upd int_Z4 result 3) ->
                   (forall (result0:((pointer) Z4)),
                    (result0 = (shift result 1) ->
                     (forall (int_Z4:((memory) Z Z4)),
                      (int_Z4 = (upd int_Z4_0 result0 4) ->
                       (forall (result0:((pointer) Z4)),
                        (result0 = (shift result 2) ->
                         (forall (int_Z4_0:((memory) Z Z4)),
                          (int_Z4_0 = (upd int_Z4 result0 5) ->
                           (forall (result0:Z),
                            (result0 = (acc int_Z4_0 result) ->
                             (forall (result1:((pointer) Z4)),
                              (result1 = (shift result 1) ->
                               (forall (result2:Z),
                                (result2 = (acc int_Z4_0 result1) ->
                                 (forall (result1:((pointer) Z4)),
                                  (result1 = (shift result 2) ->
                                   (forall (result:Z),
                                    (result = (acc int_Z4_0 result1) ->
                                     (* File \"init.c\", line 30, characters 13-26:\n *)
                                     (result0 + result2 + result) = 12)) /\
                                   (valid alloc0 result1))))) /\
                               (valid alloc0 result1))))) /\
                           (valid alloc0 result))) /\
                         (valid alloc0 result0))))) /\
                     (valid alloc0 result0)))))),
  (valid alloc0 result).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_8 : 
  forall (alloc: alloc_table),
  forall (int_Z4: ((memory) Z Z4)),
  forall (HW_18: (forall (result:((pointer) Z4)),
                  (forall (alloc0:alloc_table),
                   ((valid alloc0 result) /\ (offset result) = 0 /\
                    (block_length alloc0 result) = 3 /\
                    (valid_range alloc0 result 0 (3 - 1)) /\
                    (fresh alloc result) /\ (on_stack alloc0 result) /\
                    (alloc_stack result alloc alloc0) ->
                    (forall (int_Z4_0:((memory) Z Z4)),
                     (int_Z4_0 = (upd int_Z4 result 3) ->
                      (forall (result0:((pointer) Z4)),
                       (result0 = (shift result 1) ->
                        (forall (int_Z4:((memory) Z Z4)),
                         (int_Z4 = (upd int_Z4_0 result0 4) ->
                          (forall (result0:((pointer) Z4)),
                           (result0 = (shift result 2) ->
                            (forall (int_Z4_0:((memory) Z Z4)),
                             (int_Z4_0 = (upd int_Z4 result0 5) ->
                              (forall (result0:Z),
                               (result0 = (acc int_Z4_0 result) ->
                                (forall (result1:((pointer) Z4)),
                                 (result1 = (shift result 1) ->
                                  (forall (result2:Z),
                                   (result2 = (acc int_Z4_0 result1) ->
                                    (forall (result1:((pointer) Z4)),
                                     (result1 = (shift result 2) ->
                                      (forall (result:Z),
                                       (result = (acc int_Z4_0 result1) ->
                                        (* File \"init.c\", line 30, characters 13-26:\n *)
                                        (result0 + result2 + result) = 12)) /\
                                      (valid alloc0 result1))))) /\
                                  (valid alloc0 result1))))) /\
                              (valid alloc0 result))) /\
                            (valid alloc0 result0))))) /\
                        (valid alloc0 result0))))) /\
                    (valid alloc0 result))))),
  3 >= 1.
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_1 : 
  forall (a_Z7: ((memory) Z Z7)),
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (int_Z5_0: ((memory) Z Z5)),
  forall (HW_3: int_Z5_0 = (upd int_Z5 t 1)),
  forall (result: ((pointer) Z5)),
  forall (HW_4: result = (shift t 1)),
  forall (int_Z5_1: ((memory) Z Z5)),
  forall (HW_5: int_Z5_1 = (upd int_Z5_0 result 2)),
  forall (result0: ((pointer) Z5)),
  forall (HW_6: result0 = (shift t 2)),
  forall (int_Z5_2: ((memory) Z Z5)),
  forall (HW_7: int_Z5_2 = (upd int_Z5_1 result0 3)),
  forall (a_Z7_0: ((memory) Z Z7)),
  forall (HW_8: a_Z7_0 = (upd a_Z7 s 1)),
  forall (result1: ((pointer) Z1)),
  forall (HW_9: result1 = (acc b_Z7 s)),
  forall (int_Z1_0: ((memory) Z Z1)),
  forall (HW_10: int_Z1_0 = (upd int_Z1 result1 1)),
  forall (result2: ((pointer) Z1)),
  forall (HW_11: result2 = (acc b_Z7 s)),
  forall (result3: ((pointer) Z1)),
  forall (HW_12: result3 = (shift result2 1)),
  forall (int_Z1_1: ((memory) Z Z1)),
  forall (HW_13: int_Z1_1 = (upd int_Z1_0 result3 3)),
  forall (result4: ((pointer) Z1)),
  forall (HW_14: result4 = (acc b_Z7 s)),
  forall (result5: ((pointer) Z1)),
  forall (HW_15: result5 = (shift result4 2)),
  forall (int_Z1_2: ((memory) Z Z1)),
  forall (HW_16: int_Z1_2 = (upd int_Z1_1 result5 4)),
  (* File \"init.c\", line 5, characters 25-34:\n *)
  ((acc int_Z5_2 (shift t 1)) = 2 /\ (acc int_Z1_2 (acc b_Z7 s)) = 1 /\
  (acc int_Z1_2 (shift (acc b_Z7 s) 2)) = 4).
Proof.
intuition;subst;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_2 : 
  forall (a_Z7: ((memory) Z Z7)),
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (int_Z5_0: ((memory) Z Z5)),
  forall (HW_3: int_Z5_0 = (upd int_Z5 t 1)),
  forall (result: ((pointer) Z5)),
  forall (HW_4: result = (shift t 1)),
  forall (int_Z5_1: ((memory) Z Z5)),
  forall (HW_5: int_Z5_1 = (upd int_Z5_0 result 2)),
  forall (result0: ((pointer) Z5)),
  forall (HW_6: result0 = (shift t 2)),
  forall (int_Z5_2: ((memory) Z Z5)),
  forall (HW_7: int_Z5_2 = (upd int_Z5_1 result0 3)),
  forall (a_Z7_0: ((memory) Z Z7)),
  forall (HW_8: a_Z7_0 = (upd a_Z7 s 1)),
  forall (result1: ((pointer) Z1)),
  forall (HW_9: result1 = (acc b_Z7 s)),
  forall (int_Z1_0: ((memory) Z Z1)),
  forall (HW_10: int_Z1_0 = (upd int_Z1 result1 1)),
  forall (result2: ((pointer) Z1)),
  forall (HW_11: result2 = (acc b_Z7 s)),
  forall (result3: ((pointer) Z1)),
  forall (HW_12: result3 = (shift result2 1)),
  forall (int_Z1_1: ((memory) Z Z1)),
  forall (HW_13: int_Z1_1 = (upd int_Z1_0 result3 3)),
  forall (result4: ((pointer) Z1)),
  forall (HW_14: result4 = (acc b_Z7 s)),
  forall (result5: ((pointer) Z1)),
  forall (HW_15: result5 = (shift result4 2)),
  forall (HW_17: (forall (int_Z1:((memory) Z Z1)),
                  (int_Z1 = (upd int_Z1_1 result5 4) ->
                   (* File \"init.c\", line 5, characters 25-34:\n *)
                   ((acc int_Z5_2 (shift t 1)) = 2 /\
                   (acc int_Z1 (acc b_Z7 s)) = 1 /\
                   (acc int_Z1 (shift (acc b_Z7 s) 2)) = 4)))),
  (valid alloc result5).
Proof.
intuition;subst;auto.
caduceus.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
caduceus.
apply neq_offset_neq_shift .
omega.
rewrite <- shift_zero with (s#b).
apply neq_base_addr_neq_shift;auto.
rewrite acc_upd_neq.
rewrite acc_upd_neq.
caduceus.
pattern (s#b) at -1; rewrite <- shift_zero with (s#b).
apply neq_offset_neq_shift .
omega.
pattern (s#b) at -1; rewrite <- shift_zero with (s#b).
apply neq_offset_neq_shift .
omega.
caduceus.
assert (valid alloc s).
intuition.
generalize (H5 _ _ H4).
intuition.
assert (valid alloc s).
intuition.
generalize (H5 _ _ H4).
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_3 : 
  forall (a_Z7: ((memory) Z Z7)),
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (int_Z5_0: ((memory) Z Z5)),
  forall (HW_3: int_Z5_0 = (upd int_Z5 t 1)),
  forall (result: ((pointer) Z5)),
  forall (HW_4: result = (shift t 1)),
  forall (int_Z5_1: ((memory) Z Z5)),
  forall (HW_5: int_Z5_1 = (upd int_Z5_0 result 2)),
  forall (result0: ((pointer) Z5)),
  forall (HW_6: result0 = (shift t 2)),
  forall (int_Z5_2: ((memory) Z Z5)),
  forall (HW_7: int_Z5_2 = (upd int_Z5_1 result0 3)),
  forall (a_Z7_0: ((memory) Z Z7)),
  forall (HW_8: a_Z7_0 = (upd a_Z7 s 1)),
  forall (result1: ((pointer) Z1)),
  forall (HW_9: result1 = (acc b_Z7 s)),
  forall (int_Z1_0: ((memory) Z Z1)),
  forall (HW_10: int_Z1_0 = (upd int_Z1 result1 1)),
  forall (result2: ((pointer) Z1)),
  forall (HW_11: result2 = (acc b_Z7 s)),
  forall (result3: ((pointer) Z1)),
  forall (HW_12: result3 = (shift result2 1)),
  forall (int_Z1_1: ((memory) Z Z1)),
  forall (HW_13: int_Z1_1 = (upd int_Z1_0 result3 3)),
  forall (HW_18: (forall (result:((pointer) Z1)),
                  (result = (acc b_Z7 s) ->
                   (forall (result0:((pointer) Z1)),
                    (result0 = (shift result 2) ->
                     (forall (int_Z1:((memory) Z Z1)),
                      (int_Z1 = (upd int_Z1_1 result0 4) ->
                       (* File \"init.c\", line 5, characters 25-34:\n *)
                       ((acc int_Z5_2 (shift t 1)) = 2 /\
                       (acc int_Z1 (acc b_Z7 s)) = 1 /\
                       (acc int_Z1 (shift (acc b_Z7 s) 2)) = 4))) /\
                     (valid alloc result0)))))),
  (valid alloc s).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_4 : 
  forall (a_Z7: ((memory) Z Z7)),
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (int_Z5_0: ((memory) Z Z5)),
  forall (HW_3: int_Z5_0 = (upd int_Z5 t 1)),
  forall (result: ((pointer) Z5)),
  forall (HW_4: result = (shift t 1)),
  forall (int_Z5_1: ((memory) Z Z5)),
  forall (HW_5: int_Z5_1 = (upd int_Z5_0 result 2)),
  forall (result0: ((pointer) Z5)),
  forall (HW_6: result0 = (shift t 2)),
  forall (int_Z5_2: ((memory) Z Z5)),
  forall (HW_7: int_Z5_2 = (upd int_Z5_1 result0 3)),
  forall (a_Z7_0: ((memory) Z Z7)),
  forall (HW_8: a_Z7_0 = (upd a_Z7 s 1)),
  forall (result1: ((pointer) Z1)),
  forall (HW_9: result1 = (acc b_Z7 s)),
  forall (int_Z1_0: ((memory) Z Z1)),
  forall (HW_10: int_Z1_0 = (upd int_Z1 result1 1)),
  forall (result2: ((pointer) Z1)),
  forall (HW_11: result2 = (acc b_Z7 s)),
  forall (result3: ((pointer) Z1)),
  forall (HW_12: result3 = (shift result2 1)),
  forall (HW_19: (forall (int_Z1:((memory) Z Z1)),
                  (int_Z1 = (upd int_Z1_0 result3 3) ->
                   (forall (result:((pointer) Z1)),
                    (result = (acc b_Z7 s) ->
                     (forall (result0:((pointer) Z1)),
                      (result0 = (shift result 2) ->
                       (forall (int_Z1_0:((memory) Z Z1)),
                        (int_Z1_0 = (upd int_Z1 result0 4) ->
                         (* File \"init.c\", line 5, characters 25-34:\n *)
                         ((acc int_Z5_2 (shift t 1)) = 2 /\
                         (acc int_Z1_0 (acc b_Z7 s)) = 1 /\
                         (acc int_Z1_0 (shift (acc b_Z7 s) 2)) = 4))) /\
                       (valid alloc result0))))) /\
                   (valid alloc s)))),
  (valid alloc result3).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_5 : 
  forall (a_Z7: ((memory) Z Z7)),
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (int_Z5_0: ((memory) Z Z5)),
  forall (HW_3: int_Z5_0 = (upd int_Z5 t 1)),
  forall (result: ((pointer) Z5)),
  forall (HW_4: result = (shift t 1)),
  forall (int_Z5_1: ((memory) Z Z5)),
  forall (HW_5: int_Z5_1 = (upd int_Z5_0 result 2)),
  forall (result0: ((pointer) Z5)),
  forall (HW_6: result0 = (shift t 2)),
  forall (int_Z5_2: ((memory) Z Z5)),
  forall (HW_7: int_Z5_2 = (upd int_Z5_1 result0 3)),
  forall (a_Z7_0: ((memory) Z Z7)),
  forall (HW_8: a_Z7_0 = (upd a_Z7 s 1)),
  forall (result1: ((pointer) Z1)),
  forall (HW_9: result1 = (acc b_Z7 s)),
  forall (int_Z1_0: ((memory) Z Z1)),
  forall (HW_10: int_Z1_0 = (upd int_Z1 result1 1)),
  forall (HW_20: (forall (result:((pointer) Z1)),
                  (result = (acc b_Z7 s) ->
                   (forall (result0:((pointer) Z1)),
                    (result0 = (shift result 1) ->
                     (forall (int_Z1:((memory) Z Z1)),
                      (int_Z1 = (upd int_Z1_0 result0 3) ->
                       (forall (result:((pointer) Z1)),
                        (result = (acc b_Z7 s) ->
                         (forall (result0:((pointer) Z1)),
                          (result0 = (shift result 2) ->
                           (forall (int_Z1_0:((memory) Z Z1)),
                            (int_Z1_0 = (upd int_Z1 result0 4) ->
                             (* File \"init.c\", line 5, characters 25-34:\n *)
                             ((acc int_Z5_2 (shift t 1)) = 2 /\
                             (acc int_Z1_0 (acc b_Z7 s)) = 1 /\
                             (acc int_Z1_0 (shift (acc b_Z7 s) 2)) = 4))) /\
                           (valid alloc result0))))) /\
                       (valid alloc s))) /\
                     (valid alloc result0)))))),
  (valid alloc s).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_6 : 
  forall (a_Z7: ((memory) Z Z7)),
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (int_Z5_0: ((memory) Z Z5)),
  forall (HW_3: int_Z5_0 = (upd int_Z5 t 1)),
  forall (result: ((pointer) Z5)),
  forall (HW_4: result = (shift t 1)),
  forall (int_Z5_1: ((memory) Z Z5)),
  forall (HW_5: int_Z5_1 = (upd int_Z5_0 result 2)),
  forall (result0: ((pointer) Z5)),
  forall (HW_6: result0 = (shift t 2)),
  forall (int_Z5_2: ((memory) Z Z5)),
  forall (HW_7: int_Z5_2 = (upd int_Z5_1 result0 3)),
  forall (a_Z7_0: ((memory) Z Z7)),
  forall (HW_8: a_Z7_0 = (upd a_Z7 s 1)),
  forall (result1: ((pointer) Z1)),
  forall (HW_9: result1 = (acc b_Z7 s)),
  forall (HW_21: (forall (int_Z1_0:((memory) Z Z1)),
                  (int_Z1_0 = (upd int_Z1 result1 1) ->
                   (forall (result:((pointer) Z1)),
                    (result = (acc b_Z7 s) ->
                     (forall (result0:((pointer) Z1)),
                      (result0 = (shift result 1) ->
                       (forall (int_Z1:((memory) Z Z1)),
                        (int_Z1 = (upd int_Z1_0 result0 3) ->
                         (forall (result:((pointer) Z1)),
                          (result = (acc b_Z7 s) ->
                           (forall (result0:((pointer) Z1)),
                            (result0 = (shift result 2) ->
                             (forall (int_Z1_0:((memory) Z Z1)),
                              (int_Z1_0 = (upd int_Z1 result0 4) ->
                               (* File \"init.c\", line 5, characters 25-34:\n *)
                               ((acc int_Z5_2 (shift t 1)) = 2 /\
                               (acc int_Z1_0 (acc b_Z7 s)) = 1 /\
                               (acc int_Z1_0 (shift (acc b_Z7 s) 2)) = 4))) /\
                             (valid alloc result0))))) /\
                         (valid alloc s))) /\
                       (valid alloc result0))))) /\
                   (valid alloc s)))),
  (valid alloc result1).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_7 : 
  forall (a_Z7: ((memory) Z Z7)),
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (int_Z5_0: ((memory) Z Z5)),
  forall (HW_3: int_Z5_0 = (upd int_Z5 t 1)),
  forall (result: ((pointer) Z5)),
  forall (HW_4: result = (shift t 1)),
  forall (int_Z5_1: ((memory) Z Z5)),
  forall (HW_5: int_Z5_1 = (upd int_Z5_0 result 2)),
  forall (result0: ((pointer) Z5)),
  forall (HW_6: result0 = (shift t 2)),
  forall (int_Z5_2: ((memory) Z Z5)),
  forall (HW_7: int_Z5_2 = (upd int_Z5_1 result0 3)),
  forall (a_Z7_0: ((memory) Z Z7)),
  forall (HW_8: a_Z7_0 = (upd a_Z7 s 1)),
  forall (HW_22: (forall (result:((pointer) Z1)),
                  (result = (acc b_Z7 s) ->
                   (forall (int_Z1_0:((memory) Z Z1)),
                    (int_Z1_0 = (upd int_Z1 result 1) ->
                     (forall (result:((pointer) Z1)),
                      (result = (acc b_Z7 s) ->
                       (forall (result0:((pointer) Z1)),
                        (result0 = (shift result 1) ->
                         (forall (int_Z1:((memory) Z Z1)),
                          (int_Z1 = (upd int_Z1_0 result0 3) ->
                           (forall (result:((pointer) Z1)),
                            (result = (acc b_Z7 s) ->
                             (forall (result0:((pointer) Z1)),
                              (result0 = (shift result 2) ->
                               (forall (int_Z1_0:((memory) Z Z1)),
                                (int_Z1_0 = (upd int_Z1 result0 4) ->
                                 (* File \"init.c\", line 5, characters 25-34:\n *)
                                 ((acc int_Z5_2 (shift t 1)) = 2 /\
                                 (acc int_Z1_0 (acc b_Z7 s)) = 1 /\
                                 (acc int_Z1_0 (shift (acc b_Z7 s) 2)) = 4))) /\
                               (valid alloc result0))))) /\
                           (valid alloc s))) /\
                         (valid alloc result0))))) /\
                     (valid alloc s))) /\
                   (valid alloc result)))),
  (valid alloc s).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_8 : 
  forall (a_Z7: ((memory) Z Z7)),
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (int_Z5_0: ((memory) Z Z5)),
  forall (HW_3: int_Z5_0 = (upd int_Z5 t 1)),
  forall (result: ((pointer) Z5)),
  forall (HW_4: result = (shift t 1)),
  forall (int_Z5_1: ((memory) Z Z5)),
  forall (HW_5: int_Z5_1 = (upd int_Z5_0 result 2)),
  forall (result0: ((pointer) Z5)),
  forall (HW_6: result0 = (shift t 2)),
  forall (int_Z5_2: ((memory) Z Z5)),
  forall (HW_7: int_Z5_2 = (upd int_Z5_1 result0 3)),
  forall (HW_23: (forall (a_Z7_0:((memory) Z Z7)),
                  (a_Z7_0 = (upd a_Z7 s 1) ->
                   (forall (result:((pointer) Z1)),
                    (result = (acc b_Z7 s) ->
                     (forall (int_Z1_0:((memory) Z Z1)),
                      (int_Z1_0 = (upd int_Z1 result 1) ->
                       (forall (result:((pointer) Z1)),
                        (result = (acc b_Z7 s) ->
                         (forall (result0:((pointer) Z1)),
                          (result0 = (shift result 1) ->
                           (forall (int_Z1:((memory) Z Z1)),
                            (int_Z1 = (upd int_Z1_0 result0 3) ->
                             (forall (result:((pointer) Z1)),
                              (result = (acc b_Z7 s) ->
                               (forall (result0:((pointer) Z1)),
                                (result0 = (shift result 2) ->
                                 (forall (int_Z1_0:((memory) Z Z1)),
                                  (int_Z1_0 = (upd int_Z1 result0 4) ->
                                   (* File \"init.c\", line 5, characters 25-34:\n *)
                                   ((acc int_Z5_2 (shift t 1)) = 2 /\
                                   (acc int_Z1_0 (acc b_Z7 s)) = 1 /\
                                   (acc int_Z1_0 (shift (acc b_Z7 s) 2)) = 4))) /\
                                 (valid alloc result0))))) /\
                             (valid alloc s))) /\
                           (valid alloc result0))))) /\
                       (valid alloc s))) /\
                     (valid alloc result))) /\
                   (valid alloc s)))),
  (valid alloc s).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_9 : 
  forall (a_Z7: ((memory) Z Z7)),
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (int_Z5_0: ((memory) Z Z5)),
  forall (HW_3: int_Z5_0 = (upd int_Z5 t 1)),
  forall (result: ((pointer) Z5)),
  forall (HW_4: result = (shift t 1)),
  forall (int_Z5_1: ((memory) Z Z5)),
  forall (HW_5: int_Z5_1 = (upd int_Z5_0 result 2)),
  forall (result0: ((pointer) Z5)),
  forall (HW_6: result0 = (shift t 2)),
  forall (HW_24: (forall (int_Z5:((memory) Z Z5)),
                  (int_Z5 = (upd int_Z5_1 result0 3) ->
                   (forall (a_Z7_0:((memory) Z Z7)),
                    (a_Z7_0 = (upd a_Z7 s 1) ->
                     (forall (result:((pointer) Z1)),
                      (result = (acc b_Z7 s) ->
                       (forall (int_Z1_0:((memory) Z Z1)),
                        (int_Z1_0 = (upd int_Z1 result 1) ->
                         (forall (result:((pointer) Z1)),
                          (result = (acc b_Z7 s) ->
                           (forall (result0:((pointer) Z1)),
                            (result0 = (shift result 1) ->
                             (forall (int_Z1:((memory) Z Z1)),
                              (int_Z1 = (upd int_Z1_0 result0 3) ->
                               (forall (result:((pointer) Z1)),
                                (result = (acc b_Z7 s) ->
                                 (forall (result0:((pointer) Z1)),
                                  (result0 = (shift result 2) ->
                                   (forall (int_Z1_0:((memory) Z Z1)),
                                    (int_Z1_0 = (upd int_Z1 result0 4) ->
                                     (* File \"init.c\", line 5, characters 25-34:\n *)
                                     ((acc int_Z5 (shift t 1)) = 2 /\
                                     (acc int_Z1_0 (acc b_Z7 s)) = 1 /\
                                     (acc int_Z1_0 (shift (acc b_Z7 s) 2)) =
                                     4))) /\
                                   (valid alloc result0))))) /\
                               (valid alloc s))) /\
                             (valid alloc result0))))) /\
                         (valid alloc s))) /\
                       (valid alloc result))) /\
                     (valid alloc s))) /\
                   (valid alloc s)))),
  (valid alloc result0).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_10 : 
  forall (a_Z7: ((memory) Z Z7)),
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (int_Z5_0: ((memory) Z Z5)),
  forall (HW_3: int_Z5_0 = (upd int_Z5 t 1)),
  forall (result: ((pointer) Z5)),
  forall (HW_4: result = (shift t 1)),
  forall (HW_25: (forall (int_Z5:((memory) Z Z5)),
                  (int_Z5 = (upd int_Z5_0 result 2) ->
                   (forall (result:((pointer) Z5)),
                    (result = (shift t 2) ->
                     (forall (int_Z5_0:((memory) Z Z5)),
                      (int_Z5_0 = (upd int_Z5 result 3) ->
                       (forall (a_Z7_0:((memory) Z Z7)),
                        (a_Z7_0 = (upd a_Z7 s 1) ->
                         (forall (result:((pointer) Z1)),
                          (result = (acc b_Z7 s) ->
                           (forall (int_Z1_0:((memory) Z Z1)),
                            (int_Z1_0 = (upd int_Z1 result 1) ->
                             (forall (result:((pointer) Z1)),
                              (result = (acc b_Z7 s) ->
                               (forall (result0:((pointer) Z1)),
                                (result0 = (shift result 1) ->
                                 (forall (int_Z1:((memory) Z Z1)),
                                  (int_Z1 = (upd int_Z1_0 result0 3) ->
                                   (forall (result:((pointer) Z1)),
                                    (result = (acc b_Z7 s) ->
                                     (forall (result0:((pointer) Z1)),
                                      (result0 = (shift result 2) ->
                                       (forall (int_Z1_0:((memory) Z Z1)),
                                        (int_Z1_0 = (upd int_Z1 result0 4) ->
                                         (* File \"init.c\", line 5, characters 25-34:\n *)
                                         ((acc int_Z5_0 (shift t 1)) = 2 /\
                                         (acc int_Z1_0 (acc b_Z7 s)) = 1 /\
                                         (acc int_Z1_0 (shift (acc b_Z7 s) 2)) =
                                         4))) /\
                                       (valid alloc result0))))) /\
                                   (valid alloc s))) /\
                                 (valid alloc result0))))) /\
                             (valid alloc s))) /\
                           (valid alloc result))) /\
                         (valid alloc s))) /\
                       (valid alloc s))) /\
                     (valid alloc result)))))),
  (valid alloc result).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma invariants_initially_established_impl_po_11 : 
  forall (a_Z7: ((memory) Z Z7)),
  forall (alloc: alloc_table),
  forall (b_Z7: ((memory) ((pointer) Z1) Z7)),
  forall (int_Z1: ((memory) Z Z1)),
  forall (int_Z5: ((memory) Z Z5)),
  forall (s: ((pointer) Z7)),
  forall (t: ((pointer) Z5)),
  forall (HW_1: (valid_range alloc t 0 2) /\ (valid_range alloc s 0 0)),
  forall (x: Z),
  forall (HW_2: x = 45),
  forall (HW_26: (forall (int_Z5_0:((memory) Z Z5)),
                  (int_Z5_0 = (upd int_Z5 t 1) ->
                   (forall (result:((pointer) Z5)),
                    (result = (shift t 1) ->
                     (forall (int_Z5:((memory) Z Z5)),
                      (int_Z5 = (upd int_Z5_0 result 2) ->
                       (forall (result:((pointer) Z5)),
                        (result = (shift t 2) ->
                         (forall (int_Z5_0:((memory) Z Z5)),
                          (int_Z5_0 = (upd int_Z5 result 3) ->
                           (forall (a_Z7_0:((memory) Z Z7)),
                            (a_Z7_0 = (upd a_Z7 s 1) ->
                             (forall (result:((pointer) Z1)),
                              (result = (acc b_Z7 s) ->
                               (forall (int_Z1_0:((memory) Z Z1)),
                                (int_Z1_0 = (upd int_Z1 result 1) ->
                                 (forall (result:((pointer) Z1)),
                                  (result = (acc b_Z7 s) ->
                                   (forall (result0:((pointer) Z1)),
                                    (result0 = (shift result 1) ->
                                     (forall (int_Z1:((memory) Z Z1)),
                                      (int_Z1 = (upd int_Z1_0 result0 3) ->
                                       (forall (result:((pointer) Z1)),
                                        (result = (acc b_Z7 s) ->
                                         (forall (result0:((pointer) Z1)),
                                          (result0 = (shift result 2) ->
                                           (forall (int_Z1_0:((memory) Z
                                            Z1)),
                                            (int_Z1_0 = (upd int_Z1 result0 4) ->
                                             (* File \"init.c\", line 5, characters 25-34:\n *)
                                             ((acc int_Z5_0 (shift t 1)) =
                                             2 /\
                                             (acc int_Z1_0 (acc b_Z7 s)) =
                                             1 /\
                                             (acc int_Z1_0
                                              (shift (acc b_Z7 s) 2)) =
                                             4))) /\
                                           (valid alloc result0))))) /\
                                       (valid alloc s))) /\
                                     (valid alloc result0))))) /\
                                 (valid alloc s))) /\
                               (valid alloc result))) /\
                             (valid alloc s))) /\
                           (valid alloc s))) /\
                         (valid alloc result))))) /\
                     (valid alloc result)))))),
  (valid alloc t).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

