(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Import caduceus_why.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/pointer.why", characters 166-189 *)
Lemma f2_impl_po_1 : 
  forall (x: pointer),
  forall (alloc: alloc),
  forall (intP: ((memory) Z)),
  forall (Pre10: (valid alloc x)),
  forall (Pre9: (valid alloc x)),
  forall (intP0: ((memory) Z)),
  forall (Post3: intP0 = (upd intP x 0)),
  forall (caduceus1: pointer),
  forall (Post1: caduceus1 = x),
  (valid alloc caduceus1).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/pointer.why", characters 156-193 *)
Lemma f2_impl_po_2 : 
  forall (x: pointer),
  forall (alloc: alloc),
  forall (intP: ((memory) Z)),
  forall (Pre10: (valid alloc x)),
  forall (Pre9: (valid alloc x)),
  forall (intP0: ((memory) Z)),
  forall (Post3: intP0 = (upd intP x 0)),
  forall (caduceus1: pointer),
  forall (Post1: caduceus1 = x),
  forall (Pre5: (valid alloc caduceus1)),
  forall (aux_1: Z),
  forall (Post7: aux_1 = (acc intP0 caduceus1)),
  (forall (intP:((memory) Z)),
   (intP = (upd intP0 caduceus1 (aux_1 + 1)) -> (acc intP x) = 1 /\
    (aux_1 + 1) = 1)) /\
  (valid alloc caduceus1).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/pointer.why", characters 478-501 *)
Lemma f_impl_po_1 : 
  forall (x: pointer),
  forall (alloc: alloc),
  forall (intP: ((memory) Z)),
  forall (Pre10: (valid alloc x)),
  forall (Pre9: (valid alloc x)),
  forall (intP0: ((memory) Z)),
  forall (Post3: intP0 = (upd intP x 0)),
  forall (caduceus1: pointer),
  forall (Post1: caduceus1 = x),
  (valid alloc caduceus1).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/pointer.why", characters 567-576 *)
Lemma f_impl_po_2 : 
  forall (x: pointer),
  forall (alloc: alloc),
  forall (intP: ((memory) Z)),
  forall (Pre10: (valid alloc x)),
  forall (Pre9: (valid alloc x)),
  forall (intP0: ((memory) Z)),
  forall (Post3: intP0 = (upd intP x 0)),
  forall (caduceus1: pointer),
  forall (Post1: caduceus1 = x),
  forall (Pre8: (valid alloc caduceus1)),
  forall (caduceus2: Z),
  forall (Post7: caduceus2 = (acc intP0 caduceus1)),
  forall (Pre7: (valid alloc caduceus1)),
  forall (intP1: ((memory) Z)),
  forall (Post10: intP1 = (upd intP0 caduceus1 (1 + caduceus2))),
  (acc intP1 x) = 1 /\ caduceus2 = 0.
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

