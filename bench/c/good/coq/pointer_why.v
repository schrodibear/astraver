(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export pointer_spec_why.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma array1_impl_po_1 : 
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (alloc: alloc_table),
  forall (intM_global: ((memory) Z global)),
  forall (s: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (x_global: ((memory) ((pointer) global) global)),
  forall (HW_1: (* File "pointer.c", line 42, characters 14-31 *)
                (valid_index alloc t 2) /\
                (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc x_global (acc SPM_global s))))) /\
                (valid_range alloc t 0 4) /\ (valid alloc s)),
  forall (result: ((pointer) global)),
  forall (HW_3: result = (shift t 2)),
  forall (p: ((pointer) global)),
  forall (HW_4: p = result),
  forall (result0: ((pointer) global)),
  forall (HW_5: result0 = (shift p 1)),
  forall (p0: ((pointer) global)),
  forall (HW_6: p0 = result0),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_7: intM_global0 = (upd intM_global p 1)),
  (* File "pointer.c", line 42, characters 40-52 *) 1 = 1.
Proof.
intuition;subst;auto.
Save.

Proof.
intuition.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f2_impl_po_1 : 
  forall (x: ((pointer) global)),
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (alloc: alloc_table),
  forall (intM_global: ((memory) Z global)),
  forall (s: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (x_global: ((memory) ((pointer) global) global)),
  forall (HW_1: (* File "pointer.c", line 12, characters 14-23 *)
                (valid alloc x) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc x_global (acc SPM_global s))))) /\
                (valid_range alloc t 0 4) /\ (valid alloc s)),
  forall (HW_2: (valid alloc x)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_3: intM_global0 = (upd intM_global x 0)),
  forall (HW_4: (valid alloc x)),
  forall (result: Z),
  forall (HW_5: result = (acc intM_global0 x)),
  forall (intM_global1: ((memory) Z global)),
  forall (HW_6: intM_global1 = (upd intM_global0 x (result + 1))),
  (* File "pointer.c", line 13, characters 13-36 *) ((acc intM_global1 x) =
  1 /\ (result + 1) = 1).
Proof.
intuition.
Save.

Proof.
intuition.
Save.

Proof.
intuition.
Save.

Proof.
intuition;subst;auto.
rewrite acc_upd_eq;auto.
rewrite acc_upd_eq;auto.
rewrite acc_upd_eq;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma f_impl_po_1 : 
  forall (x: ((pointer) global)),
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (alloc: alloc_table),
  forall (intM_global: ((memory) Z global)),
  forall (s: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (x_global: ((memory) ((pointer) global) global)),
  forall (HW_1: (* File "pointer.c", line 4, characters 14-23 *)
                (valid alloc x) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc x_global (acc SPM_global s))))) /\
                (valid_range alloc t 0 4) /\ (valid alloc s)),
  forall (HW_2: (valid alloc x)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_3: intM_global0 = (upd intM_global x 0)),
  forall (HW_4: (valid alloc x)),
  forall (result: Z),
  forall (HW_5: result = (acc intM_global0 x)),
  forall (intM_global1: ((memory) Z global)),
  forall (HW_6: intM_global1 = (upd intM_global0 x (1 + result))),
  (* File "pointer.c", line 6, characters 13-36 *) ((acc intM_global1 x) =
  1 /\ result = 0) /\
  (not_assigns alloc intM_global intM_global1 (pset_singleton x)).
Proof.
intuition.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition;subst;auto.
rewrite acc_upd_eq;auto.
rewrite acc_upd_eq;auto.
rewrite acc_upd_eq;auto.
red.
intros.
assert (p<>x).
apply pset_singleton_elim;auto.
rewrite acc_upd_neq;auto.
rewrite acc_upd_neq;auto.
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma g_impl_po_1 : 
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (alloc: alloc_table),
  forall (intM_global: ((memory) Z global)),
  forall (r: ((pointer) global)),
  forall (s: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (x_global: ((memory) ((pointer) global) global)),
  forall (HW_1: (* File "pointer.c", line 22, characters 14-23 *)
                (valid alloc r) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc x_global (acc SPM_global s))))) /\
                (valid_range alloc t 0 4) /\ (valid alloc s)),
  forall (HW_2: (* File "pointer.c", line 4, characters 14-23 *)
                (valid alloc r)),
  forall (result: Z),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_3: (* File "pointer.c", line 6, characters 13-36 *)
                ((acc intM_global0 r) = 1 /\ result = 0) /\
                (not_assigns alloc intM_global intM_global0
                 (pset_singleton r))),
  (* File "pointer.c", line 23, characters 13-20 *) (acc intM_global0 r) = 1.
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_1 : 
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (alloc: alloc_table),
  forall (s: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (x_global: ((memory) ((pointer) global) global)),
  forall (HW_1: (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc x_global (acc SPM_global s))))) /\
                (valid_range alloc t 0 4) /\ (valid alloc s)),
  1 >= 1.
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma h_impl_po_2 : 
  forall (A861:Set), forall (A862:Set), forall (A863:Set), forall (A864:Set),
  forall (A865:Set), forall (A866:Set), forall (A867:Set),
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (alloc: alloc_table),
  forall (intM_global: ((memory) Z global)),
  forall (s: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (x_global: ((memory) ((pointer) global) global)),
  forall (HW_1: (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc x_global (acc SPM_global s))))) /\
                (valid_range alloc t 0 4) /\ (valid alloc s)),
  forall (HW_2: 1 >= 1),
  forall (result: ((pointer) global)),
  forall (alloc0: alloc_table),
  forall (HW_3: (valid alloc0 result) /\ (offset result) = 0 /\
                (block_length alloc0 result) = 1 /\
                (valid_range alloc0 result 0 (1 - 1)) /\
                (fresh alloc result) /\ (on_stack alloc0 result) /\
                (alloc_stack result alloc alloc0)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_4: intM_global0 = (upd intM_global result 0)),
  forall (HW_5: (* File "pointer.c", line 4, characters 14-23 *)
                (valid alloc0 result)),
  forall (result0: Z),
  forall (intM_global1: ((memory) Z global)),
  forall (HW_6: (* File "pointer.c", line 6, characters 13-36 *)
                ((acc intM_global1 result) = 1 /\ result0 = 0) /\
                (not_assigns alloc0 intM_global0 intM_global1
                 (pset_singleton result))),
  forall (result1: Z),
  forall (HW_7: result1 = (acc intM_global1 result)),
  (* File "pointer.c", line 36, characters 13-25 *) (result0 + result1) = 1.
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma struct1_impl_po_1 : 
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (alloc: alloc_table),
  forall (s: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (x_global: ((memory) ((pointer) global) global)),
  forall (HW_1: (* File "pointer.c", line 53, characters 14-23 *)
                (valid alloc s) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc x_global (acc SPM_global s))))) /\
                (valid_range alloc t 0 4) /\ (valid alloc s) /\
                (valid1_range x_global 1) /\ (valid1 x_global)),
  forall (result: ((pointer) global)),
  forall (HW_2: result = (acc x_global s)),
  (valid alloc result).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "", line 0, characters 0-0: *)
(*Why goal*) Lemma struct1_impl_po_2 : 
  forall (SPM_global: ((memory) ((pointer) global) global)),
  forall (alloc: alloc_table),
  forall (intM_global: ((memory) Z global)),
  forall (s: ((pointer) global)),
  forall (t: ((pointer) global)),
  forall (x_global: ((memory) ((pointer) global) global)),
  forall (y_global: ((memory) Z global)),
  forall (HW_1: (* File "pointer.c", line 53, characters 14-23 *)
                (valid alloc s) /\ (~((base_addr s) = (base_addr t)) /\
                ~((base_addr t) = (base_addr (acc x_global (acc SPM_global s))))) /\
                (valid_range alloc t 0 4) /\ (valid alloc s) /\
                (valid1_range x_global 1) /\ (valid1 x_global)),
  forall (result: ((pointer) global)),
  forall (HW_2: result = (acc x_global s)),
  forall (HW_3: (valid alloc result)),
  forall (intM_global0: ((memory) Z global)),
  forall (HW_4: intM_global0 = (upd intM_global result 1)),
  forall (y_global0: ((memory) Z global)),
  forall (HW_5: y_global0 = (upd y_global s 2)),
  forall (HW_6: (valid alloc result)),
  forall (result0: Z),
  forall (HW_7: result0 = (acc intM_global0 result)),
  (* File "pointer.c", line 53, characters 33-45 *) result0 >= 1.
Proof.
intuition.
subst;auto.

Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
subst.
caduceus.
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

