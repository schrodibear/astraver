(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export caduceus_spec_why.

(* Why obligation from file "why/invariants.why", characters 412-469 *)
Lemma f_impl_po_1 : 
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (c: pointer),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (x: ((memory) Z)),
  forall (y: ((memory) Z)),
  forall (Pre6: (n >= 0 /\ (acc intP c) = 12 /\ (0 <= (acc x s) /\
                (acc x s) <= (acc y s)) /\ (acc y s) <= 100) /\
                (valid_range alloc s 0 1) /\ (constant_c alloc c intP) /\
                (valid_range alloc c 0 2) /\ ~((base_addr c) = (base_addr s))),
  (valid alloc s).
Proof.
intuition.
Save.

(* Why obligation from file "why/invariants.why", characters 652-681 *)
Lemma f_impl_po_2 : 
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (c: pointer),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (x: ((memory) Z)),
  forall (y: ((memory) Z)),
  forall (Pre6: (n >= 0 /\ (acc intP c) = 12 /\ (0 <= (acc x s) /\
                (acc x s) <= (acc y s)) /\ (acc y s) <= 100) /\
                (valid_range alloc s 0 1) /\ (constant_c alloc c intP) /\
                (valid_range alloc c 0 2) /\ ~((base_addr c) = (base_addr s))),
  forall (Pre5: (valid alloc s)),
  forall (t: Z),
  forall (Post7: t = ((acc x s) + n)),
  forall (Pre4: (valid alloc s)),
  forall (Test2: t <= ((acc y s) - 20)),
  forall (caduceus_2: pointer),
  forall (Post5: caduceus_2 = s),
  (valid alloc c).
Proof.
intuition.
Save.

(* Why obligation from file "why/invariants.why", characters 629-682 *)
Lemma f_impl_po_3 : 
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (c: pointer),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (x: ((memory) Z)),
  forall (y: ((memory) Z)),
  forall (Pre6: (n >= 0 /\ (acc intP c) = 12 /\ (0 <= (acc x s) /\
                (acc x s) <= (acc y s)) /\ (acc y s) <= 100) /\
                (valid_range alloc s 0 1) /\ (constant_c alloc c intP) /\
                (valid_range alloc c 0 2) /\ ~((base_addr c) = (base_addr s))),
  forall (Pre5: (valid alloc s)),
  forall (t: Z),
  forall (Post7: t = ((acc x s) + n)),
  forall (Pre4: (valid alloc s)),
  forall (Test2: t <= ((acc y s) - 20)),
  forall (caduceus_2: pointer),
  forall (Post5: caduceus_2 = s),
  forall (Pre3: (valid alloc c)),
  forall (aux_3: Z),
  forall (Post4: aux_3 = (t + (acc intP c))),
  (valid alloc caduceus_2).
Proof.
intuition.
subst; auto.
Save.

(* Why obligation from file "why/invariants.why", characters 629-682 *)
Lemma f_impl_po_4 : 
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (c: pointer),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (x: ((memory) Z)),
  forall (y: ((memory) Z)),
  forall (Pre6: (n >= 0 /\ (acc intP c) = 12 /\ (0 <= (acc x s) /\
                (acc x s) <= (acc y s)) /\ (acc y s) <= 100) /\
                (valid_range alloc s 0 1) /\ (constant_c alloc c intP) /\
                (valid_range alloc c 0 2) /\ ~((base_addr c) = (base_addr s))),
  forall (Pre5: (valid alloc s)),
  forall (t: Z),
  forall (Post7: t = ((acc x s) + n)),
  forall (Pre4: (valid alloc s)),
  forall (Test2: t <= ((acc y s) - 20)),
  forall (caduceus_2: pointer),
  forall (Post5: caduceus_2 = s),
  forall (Pre3: (valid alloc c)),
  forall (aux_3: Z),
  forall (Post4: aux_3 = (t + (acc intP c))),
  forall (Pre1: (valid alloc caduceus_2)),
  forall (x0: ((memory) Z)),
  forall (Post14: x0 = (upd x caduceus_2 aux_3)),
  (0 <= (acc x0 s) /\ (acc x0 s) <= (acc y s)) /\ (acc y s) <= 100.
Proof.
intuition;subst; caduceus.
Save.

(* Why obligation from file "why/invariants.why", characters 694-694 *)
Lemma f_impl_po_5 : 
  forall (n: Z),
  forall (alloc: alloc_table),
  forall (c: pointer),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (x: ((memory) Z)),
  forall (y: ((memory) Z)),
  forall (Pre6: (n >= 0 /\ (acc intP c) = 12 /\ (0 <= (acc x s) /\
                (acc x s) <= (acc y s)) /\ (acc y s) <= 100) /\
                (valid_range alloc s 0 1) /\ (constant_c alloc c intP) /\
                (valid_range alloc c 0 2) /\ ~((base_addr c) = (base_addr s))),
  forall (Pre5: (valid alloc s)),
  forall (t: Z),
  forall (Post7: t = ((acc x s) + n)),
  forall (Pre4: (valid alloc s)),
  forall (Test1: t > ((acc y s) - 20)),
  forall (result0: unit),
  forall (Post1: result0 = tt),
  (0 <= (acc x s) /\ (acc x s) <= (acc y s)) /\ (acc y s) <= 100.
Proof.
intuition.
Save.

(* Why obligation from file "why/invariants.why", characters 1072-1096 *)
Lemma invariants_initially_established_impl_po_1 : 
  forall (alloc: alloc_table),
  forall (c: pointer),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (Pre13: (valid_range alloc s 0 1) /\ (constant_c alloc c intP) /\
                 (valid_range alloc c 0 2) /\
                 ~((base_addr c) = (base_addr s))),
  forall (caduceus_4: pointer),
  forall (Post3: caduceus_4 = s),
  (valid alloc caduceus_4).
Proof.
intros;subst.
inversion_clear Pre13.
inversion_clear H0.
auto.
Save.

(* Why obligation from file "why/invariants.why", characters 1049-1096 *)
Lemma invariants_initially_established_impl_po_2 : 
  forall (alloc: alloc_table),
  forall (c: pointer),
  forall (intP: ((memory) Z)),
  forall (s: pointer),
  forall (x: ((memory) Z)),
  forall (y: ((memory) Z)),
  forall (Pre13: (valid_range alloc s 0 1) /\ (constant_c alloc c intP) /\
                 (valid_range alloc c 0 2) /\
                 ~((base_addr c) = (base_addr s))),
  forall (caduceus_4: pointer),
  forall (Post3: caduceus_4 = s),
  forall (Pre3: (valid alloc caduceus_4)),
  forall (x0: ((memory) Z)),
  forall (Post13: x0 = (upd x caduceus_4 0)),
  (forall (result:pointer),
   (result = s ->
    (forall (y0:((memory) Z)),
     (y0 = (upd y result 0) ->
      (forall (result:pointer),
       (result = c ->
        (forall (intP0:((memory) Z)),
         (intP0 = (upd intP result 12) ->
          (forall (result:pointer),
           (result = (shift c 1) ->
            (forall (intP:((memory) Z)),
             (intP = (upd intP0 result 14) -> ((0 <= (acc x0 s) /\
              (acc x0 s) <= (acc y0 s)) /\ (acc y0 s) <= 100) /\
              (acc intP c) = 12)) /\
            (valid alloc result))))) /\
        (valid alloc result))))) /\
    (valid alloc result))).
Proof.
intuition;subst;auto;caduceus.
rewrite acc_upd_neq;caduceus.
assert (offset c +1 <> offset c).
intuition.
assert (shift c 1 <> shift c 0 -> shift c 1 <> c).
rewrite shift_zero;auto.
apply H4.
apply neq_offset_neq_shift.
auto with *.
Qed.

