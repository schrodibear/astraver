(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export caduceus_spec_why.


Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "why/test.why", characters 181-235 *)
Lemma f_impl_po_1 : 
  forall (alloc: alloc),
  forall (ps: pointer),
  forall (s: pointer),
  forall (t: ((memory) pointer)),
  forall (z: ((memory) Z)),
  forall (Pre14: ((valid alloc s) /\ (valid alloc (acc t s))) /\
                 (valid alloc ps)),
  forall (p: pointer),
  forall (Post3: p = (any_pointer tt)),
  forall (caduceus_2: pointer),
  forall (Post1: caduceus_2 = p),
  forall (result: bool),
  forall (Post7: (if result then ~(caduceus_2 = null) else caduceus_2 = null)),
  (if result
   then (forall (ps:pointer),
         (ps = s ->
          (forall (p:pointer),
           (p = (acc t s) ->
            (forall (result:pointer),
             (result = (acc t ps) ->
              (forall (z0:((memory) Z)),
               (z0 = (upd z result 1) ->
                (forall (result:pointer),
                 (result = (acc t s) ->
                  (forall (result0:Z),
                   (result0 = (acc z0 result) -> result0 = 1)) /\
                  (valid alloc result))) /\
                (valid alloc s))) /\
              (valid alloc result))) /\
            (valid alloc ps))) /\
          (valid alloc s)))
   else (forall (ps:pointer),
         (ps = s ->
          (forall (p:pointer),
           (p = (acc t s) ->
            (forall (result:pointer),
             (result = (acc t ps) ->
              (forall (z0:((memory) Z)),
               (z0 = (upd z result 1) ->
                (forall (result:pointer),
                 (result = (acc t s) ->
                  (forall (result0:Z),
                   (result0 = (acc z0 result) -> result0 = 1)) /\
                  (valid alloc result))) /\
                (valid alloc s))) /\
              (valid alloc result))) /\
            (valid alloc ps))) /\
          (valid alloc s)))).
Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

Proof.
intuition.
(* FILL PROOF HERE *)
Save.

