(* This file was originally generated by why.
   It can be modified; only the generated parts will be overwritten. *)

Require Export Why

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

Proof.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "sort.why", characters 345-360 *)
Lemma sort4_2_po_1 : 
  forall (a: pointer),
  forall (b: pointer),
  forall (c: pointer),
  forall (d: pointer),
  forall (Pre81: (((((((((valid a) /\ (valid b)) /\ (valid c)) /\
                 (valid d)) /\ ~(a = b)) /\ ~(a = c)) /\ ~(a = d)) /\
                 ~(b = c)) /\ ~(b = d)) /\ ~(c = d)),
  forall (tmp: Z),
  forall (Post1: tmp = (any_int tt)),
  ~(a = null) /\ 0 <= (offset a) /\ (offset a) < (block_length a).
Proof.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "sort.why", characters 391-406 *)
Lemma sort4_2_po_2 : 
  forall (a: pointer),
  forall (b: pointer),
  forall (c: pointer),
  forall (d: pointer),
  forall (intP: ((memory) Z)),
  forall (Pre81: (((((((((valid a) /\ (valid b)) /\ (valid c)) /\
                 (valid d)) /\ ~(a = b)) /\ ~(a = c)) /\ ~(a = d)) /\
                 ~(b = c)) /\ ~(b = d)) /\ ~(c = d)),
  forall (tmp: Z),
  forall (Post1: tmp = (any_int tt)),
  forall (Pre6: ~(a = null) /\ 0 <= (offset a) /\ (offset a) <
                (block_length a)),
  forall (caduceus5: Z),
  forall (Post9: caduceus5 = (acc intP a)),
  ~(b = null) /\ 0 <= (offset b) /\ (offset b) < (block_length b).
Proof.
(* FILL PROOF HERE *)
Save.

(* Why obligation from file "sort.why", characters 371-407 *)
Lemma sort4_2_po_3 : 
  forall (a: pointer),
  forall (b: pointer),
  forall (c: pointer),
  forall (d: pointer),
  forall (intP: ((memory) Z)),
  forall (Pre81: (((((((((valid a) /\ (valid b)) /\ (valid c)) /\
                 (valid d)) /\ ~(a = b)) /\ ~(a = c)) /\ ~(a = d)) /\
                 ~(b = c)) /\ ~(b = d)) /\ ~(c = d)),
  forall (tmp: Z),
  forall (Post1: tmp = (any_int tt)),
  forall (Pre6: ~(a = null) /\ 0 <= (offset a) /\ (offset a) <
                (block_length a)),
  forall (caduceus5: Z),
  forall (Post9: caduceus5 = (acc intP a)),
  forall (Pre5: ~(b = null) /\ 0 <= (offset b) /\ (offset b) <
                (block_length b)),
  forall (aux_1: Z),
  forall (Post11: aux_1 = (acc intP b)),
  forall (result: bool),
  forall (Post13: (if result then caduceus5 > aux_1 else caduceus5 <= aux_1)),
  (if result
   then (forall (tmp:Z),
         (tmp = (acc intP a) ->
          (forall (result:Z),
           (result = (acc intP b) ->
            (forall (intP0:((memory) Z)),
             (intP0 = (upd intP a result) ->
              (forall (intP:((memory) Z)),
               (intP = (upd intP0 b tmp) ->
                (forall (result:Z),
                 (result = (acc intP c) ->
                  (forall (result0:Z),
                   (result0 = (acc intP d) ->
                    ((result > result0 ->
                      (forall (tmp:Z),
                       (tmp = (acc intP c) ->
                        (forall (result:Z),
                         (result = (acc intP d) ->
                          (forall (intP0:((memory) Z)),
                           (intP0 = (upd intP c result) ->
                            (forall (intP:((memory) Z)),
                             (intP = (upd intP0 d tmp) ->
                              (forall (result:Z),
                               (result = (acc intP a) ->
                                (forall (result0:Z),
                                 (result0 = (acc intP c) ->
                                  ((result > result0 ->
                                    (forall (tmp:Z),
                                     (tmp = (acc intP a) ->
                                      (forall (result:Z),
                                       (result = (acc intP c) ->
                                        (forall (intP0:((memory) Z)),
                                         (intP0 = (upd intP a result) ->
                                          (forall (intP:((memory) Z)),
                                           (intP = (upd intP0 c tmp) ->
                                            (forall (result:Z),
                                             (result = (acc intP b) ->
                                              (forall (result0:Z),
                                               (result0 = (acc intP d) ->
                                                ((result > result0 ->
                                                  (forall (tmp:Z),
                                                   (tmp = (acc intP b) ->
                                                    (forall (result:Z),
                                                     (result = (acc intP d) ->
                                                      (forall (intP0:((memory) Z)),
                                                       (intP0 = (upd intP b
                                                                 result) ->
                                                        (forall (intP:((memory) Z)),
                                                         (intP = (upd intP0 d
                                                                  tmp) ->
                                                          (forall (result:Z),
                                                           (result = (
                                                            acc intP b) ->
                                                            (forall (result0:Z),
                                                             (result0 = (
                                                              acc intP c) ->
                                                              ((result >
                                                                result0 ->
                                                                (forall (tmp:Z),
                                                                 (tmp = (
                                                                  acc intP b) ->
                                                                  (forall (result:Z),
                                                                   (result = (
                                                                    acc intP
                                                                    c) ->
                                                                    (
                                                                    forall (intP0:((memory) Z)),
                                                                    (
                                                                    intP0 = (
                                                                    upd intP
                                                                    b result) ->
                                                                    (
                                                                    forall (intP:((memory) Z)),
                                                                    (
                                                                    intP = (
                                                                    upd intP0
                                                                    c tmp) ->
                                                                    ((
                                                                    acc intP
                                                                    a) <=
                                                                    (
                                                                    acc intP
                                                                    b) /\
                                                                    (
                                                                    acc intP
                                                                    b) <=
                                                                    (
                                                                    acc intP
                                                                    c)) /\
                                                                    (
                                                                    acc intP
                                                                    c) <=
                                                                    (
                                                                    acc intP
                                                                    d))) /\
                                                                    ~(c = null) /\
                                                                    0 <=
                                                                    (
                                                                    offset c) /\
                                                                    (
                                                                    offset c) <
                                                                    (
                                                                    block_length c))) /\
                                                                    ~(b = null) /\
                                                                    0 <=
                                                                    (
                                                                    offset b) /\
                                                                    (
                                                                    offset b) <
                                                                    (
                                                                    block_length b))) /\
                                                                  ~(c = null) /\
                                                                  0 <=
                                                                  (offset c) /\
                                                                  (offset c) <
                                                                  (block_length c))) /\
                                                                ~(b = null) /\
                                                                0 <=
                                                                (offset b) /\
                                                                (offset b) <
                                                                (block_length b))) /\
                                                              ((result <=
                                                                result0 ->
                                                                ((acc intP a) <=
                                                                (acc intP b) /\
                                                                (acc intP b) <=
                                                                (acc intP c)) /\
                                                                (acc intP c) <=
                                                                (acc intP d))))) /\
                                                            ~(c = null) /\
                                                            0 <=
                                                            (offset c) /\
                                                            (offset c) <
                                                            (block_length c))) /\
                                                          ~(b = null) /\ 0 <=
                                                          (offset b) /\
                                                          (offset b) <
                                                          (block_length b))) /\
                                                        ~(d = null) /\ 0 <=
                                                        (offset d) /\
                                                        (offset d) <
                                                        (block_length d))) /\
                                                      ~(b = null) /\ 0 <=
                                                      (offset b) /\
                                                      (offset b) <
                                                      (block_length b))) /\
                                                    ~(d = null) /\ 0 <=
                                                    (offset d) /\
                                                    (offset d) <
                                                    (block_length d))) /\
                                                  ~(b = null) /\ 0 <=
                                                  (offset b) /\ (offset b) <
                                                  (block_length b))) /\
                                                ((result <= result0 ->
                                                  (forall (result:Z),
                                                   (result = (acc intP b) ->
                                                    (forall (result0:Z),
                                                     (result0 = (acc intP c) ->
                                                      ((result > result0 ->
                                                        (forall (tmp:Z),
                                                         (tmp = (acc intP b) ->
                                                          (forall (result:Z),
                                                           (result = (
                                                            acc intP c) ->
                                                            (forall (intP0:((memory) Z)),
                                                             (intP0 = (
                                                              upd intP b
                                                              result) ->
                                                              (forall (intP:((memory) Z)),
                                                               (intP = (
                                                                upd intP0 c
                                                                tmp) ->
                                                                ((acc intP a) <=
                                                                (acc intP b) /\
                                                                (acc intP b) <=
                                                                (acc intP c)) /\
                                                                (acc intP c) <=
                                                                (acc intP d))) /\
                                                              ~(c = null) /\
                                                              0 <=
                                                              (offset c) /\
                                                              (offset c) <
                                                              (block_length c))) /\
                                                            ~(b = null) /\
                                                            0 <=
                                                            (offset b) /\
                                                            (offset b) <
                                                            (block_length b))) /\
                                                          ~(c = null) /\ 0 <=
                                                          (offset c) /\
                                                          (offset c) <
                                                          (block_length c))) /\
                                                        ~(b = null) /\ 0 <=
                                                        (offset b) /\
                                                        (offset b) <
                                                        (block_length b))) /\
                                                      ((result <= result0 ->
                                                        ((acc intP a) <=
                                                        (acc intP b) /\
                                                        (acc intP b) <=
                                                        (acc intP c)) /\
                                                        (acc intP c) <=
                                                        (acc intP d))))) /\
                                                    ~(c = null) /\ 0 <=
                                                    (offset c) /\
                                                    (offset c) <
                                                    (block_length c))) /\
                                                  ~(b = null) /\ 0 <=
                                                  (offset b) /\ (offset b) <
                                                  (block_length b))))) /\
                                              ~(d = null) /\ 0 <=
                                              (offset d) /\ (offset d) <
                                              (block_length d))) /\
                                            ~(b = null) /\ 0 <= (offset b) /\
                                            (offset b) < (block_length b))) /\
                                          ~(c = null) /\ 0 <= (offset c) /\
                                          (offset c) < (block_length c))) /\
                                        ~(a = null) /\ 0 <= (offset a) /\
                                        (offset a) < (block_length a))) /\
                                      ~(c = null) /\ 0 <= (offset c) /\
                                      (offset c) < (block_length c))) /\
                                    ~(a = null) /\ 0 <= (offset a) /\
                                    (offset a) < (block_length a))) /\
                                  ((result <= result0 ->
                                    (forall (result:Z),
                                     (result = (acc intP b) ->
                                      (forall (result0:Z),
                                       (result0 = (acc intP d) ->
                                        ((result > result0 ->
                                          (forall (tmp:Z),
                                           (tmp = (acc intP b) ->
                                            (forall (result:Z),
                                             (result = (acc intP d) ->
                                              (forall (intP0:((memory) Z)),
                                               (intP0 = (upd intP b result) ->
                                                (forall (intP:((memory) Z)),
                                                 (intP = (upd intP0 d tmp) ->
                                                  (forall (result:Z),
                                                   (result = (acc intP b) ->
                                                    (forall (result0:Z),
                                                     (result0 = (acc intP c) ->
                                                      ((result > result0 ->
                                                        (forall (tmp:Z),
                                                         (tmp = (acc intP b) ->
                                                          (forall (result:Z),
                                                           (result = (
                                                            acc intP c) ->
                                                            (forall (intP0:((memory) Z)),
                                                             (intP0 = (
                                                              upd intP b
                                                              result) ->
                                                              (forall (intP:((memory) Z)),
                                                               (intP = (
                                                                upd intP0 c
                                                                tmp) ->
                                                                ((acc intP a) <=
                                                                (acc intP b) /\
                                                                (acc intP b) <=
                                                                (acc intP c)) /\
                                                                (acc intP c) <=
                                                                (acc intP d))) /\
                                                              ~(c = null) /\
                                                              0 <=
                                                              (offset c) /\
                                                              (offset c) <
                                                              (block_length c))) /\
                                                            ~(b = null) /\
                                                            0 <=
                                                            (offset b) /\
                                                            (offset b) <
                                                            (block_length b))) /\
                                                          ~(c = null) /\ 0 <=
                                                          (offset c) /\
                                                          (offset c) <
                                                          (block_length c))) /\
                                                        ~(b = null) /\ 0 <=
                                                        (offset b) /\
                                                        (offset b) <
                                                        (block_length b))) /\
                                                      ((result <= result0 ->
                                                        ((acc intP a) <=
                                                        (acc intP b) /\
                                                        (acc intP b) <=
                                                        (acc intP c)) /\
                                                        (acc intP c) <=
                                                        (acc intP d))))) /\
                                                    ~(c = null) /\ 0 <=
                                                    (offset c) /\
                                                    (offset c) <
                                                    (block_length c))) /\
                                                  ~(b = null) /\ 0 <=
                                                  (offset b) /\ (offset b) <
                                                  (block_length b))) /\
                                                ~(d = null) /\ 0 <=
                                                (offset d) /\ (offset d) <
                                                (block_length d))) /\
                                              ~(b = null) /\ 0 <=
                                              (offset b) /\ (offset b) <
                                              (block_length b))) /\
                                            ~(d = null) /\ 0 <= (offset d) /\
                                            (offset d) < (block_length d))) /\
                                          ~(b = null) /\ 0 <= (offset b) /\
                                          (offset b) < (block_length b))) /\
                                        ((result <= result0 ->
                                          (forall (result:Z),
                                           (result = (acc intP b) ->
                                            (forall (result0:Z),
                                             (result0 = (acc intP c) ->
                                              ((result > result0 ->
                                                (forall (tmp:Z),
                                                 (tmp = (acc intP b) ->
                                                  (forall (result:Z),
                                                   (result = (acc intP c) ->
                                                    (forall (intP0:((memory) Z)),
                                                     (intP0 = (upd intP b
                                                               result) ->
                                                      (forall (intP:((memory) Z)),
                                                       (intP = (upd intP0 c
                                                                tmp) ->
                                                        ((acc intP a) <=
                                                        (acc intP b) /\
                                                        (acc intP b) <=
                                                        (acc intP c)) /\
                                                        (acc intP c) <=
                                                        (acc intP d))) /\
                                                      ~(c = null) /\ 0 <=
                                                      (offset c) /\
                                                      (offset c) <
                                                      (block_length c))) /\
                                                    ~(b = null) /\ 0 <=
                                                    (offset b) /\
                                                    (offset b) <
                                                    (block_length b))) /\
                                                  ~(c = null) /\ 0 <=
                                                  (offset c) /\ (offset c) <
                                                  (block_length c))) /\
                                                ~(b = null) /\ 0 <=
                                                (offset b) /\ (offset b) <
                                                (block_length b))) /\
                                              ((result <= result0 ->
                                                ((acc intP a) <=
                                                (acc intP b) /\
                                                (acc intP b) <=
                                                (acc intP c)) /\
                                                (acc intP c) <= (acc intP d))))) /\
                                            ~(c = null) /\ 0 <= (offset c) /\
                                            (offset c) < (block_length c))) /\
                                          ~(b = null) /\ 0 <= (offset b) /\
                                          (offset b) < (block_length b))))) /\
                                      ~(d = null) /\ 0 <= (offset d) /\
                                      (offset d) < (block_length d))) /\
                                    ~(b = null) /\ 0 <= (offset b) /\
                                    (offset b) < (block_length b))))) /\
                                ~(c = null) /\ 0 <= (offset c) /\
                                (offset c) < (block_length c))) /\
                              ~(a = null) /\ 0 <= (offset a) /\ (offset a) <
                              (block_length a))) /\
                            ~(d = null) /\ 0 <= (offset d) /\ (offset d) <
                            (block_length d))) /\
                          ~(c = null) /\ 0 <= (offset c) /\ (offset c) <
                          (block_length c))) /\
                        ~(d = null) /\ 0 <= (offset d) /\ (offset d) <
                        (block_length d))) /\
                      ~(c = null) /\ 0 <= (offset c) /\ (offset c) <
                      (block_length c))) /\
                    ((result <= result0 ->
                      (forall (result:Z),
                       (result = (acc intP a) ->
                        (forall (result0:Z),
                         (result0 = (acc intP c) ->
                          ((result > result0 ->
                            (forall (tmp:Z),
                             (tmp = (acc intP a) ->
                              (forall (result:Z),
                               (result = (acc intP c) ->
                                (forall (intP0:((memory) Z)),
                                 (intP0 = (upd intP a result) ->
                                  (forall (intP:((memory) Z)),
                                   (intP = (upd intP0 c tmp) ->
                                    (forall (result:Z),
                                     (result = (acc intP b) ->
                                      (forall (result0:Z),
                                       (result0 = (acc intP d) ->
                                        ((result > result0 ->
                                          (forall (tmp:Z),
                                           (tmp = (acc intP b) ->
                                            (forall (result:Z),
                                             (result = (acc intP d) ->
                                              (forall (intP0:((memory) Z)),
                                               (intP0 = (upd intP b result) ->
                                                (forall (intP:((memory) Z)),
                                                 (intP = (upd intP0 d tmp) ->
                                                  (forall (result:Z),
                                                   (result = (acc intP b) ->
                                                    (forall (result0:Z),
                                                     (result0 = (acc intP c) ->
                                                      ((result > result0 ->
                                                        (forall (tmp:Z),
                                                         (tmp = (acc intP b) ->
                                                          (forall (result:Z),
                                                           (result = (
                                                            acc intP c) ->
                                                            (forall (intP0:((memory) Z)),
                                                             (intP0 = (
                                                              upd intP b
                                                              result) ->
                                                              (forall (intP:((memory) Z)),
                                                               (intP = (
                                                                upd intP0 c
                                                                tmp) ->
                                                                ((acc intP a) <=
                                                                (acc intP b) /\
                                                                (acc intP b) <=
                                                                (acc intP c)) /\
                                                                (acc intP c) <=
                                                                (acc intP d))) /\
                                                              ~(c = null) /\
                                                              0 <=
                                                              (offset c) /\
                                                              (offset c) <
                                                              (block_length c))) /\
                                                            ~(b = null) /\
                                                            0 <=
                                                            (offset b) /\
                                                            (offset b) <
                                                            (block_length b))) /\
                                                          ~(c = null) /\ 0 <=
                                                          (offset c) /\
                                                          (offset c) <
                                                          (block_length c))) /\
                                                        ~(b = null) /\ 0 <=
                                                        (offset b) /\
                                                        (offset b) <
                                                        (block_length b))) /\
                                                      ((result <= result0 ->
                                                        ((acc intP a) <=
                                                        (acc intP b) /\
                                                        (acc intP b) <=
                                                        (acc intP c)) /\
                                                        (acc intP c) <=
                                                        (acc intP d))))) /\
                                                    ~(c = null) /\ 0 <=
                                                    (offset c) /\
                                                    (offset c) <
                                                    (block_length c))) /\
                                                  ~(b = null) /\ 0 <=
                                                  (offset b) /\ (offset b) <
                                                  (block_length b))) /\
                                                ~(d = null) /\ 0 <=
                                                (offset d) /\ (offset d) <
                                                (block_length d))) /\
                                              ~(b = null) /\ 0 <=
                                              (offset b) /\ (offset b) <
                                              (block_length b))) /\
                                            ~(d = null) /\ 0 <= (offset d) /\
                                            (offset d) < (block_length d))) /\
                                          ~(b = null) /\ 0 <= (offset b) /\
                                          (offset b) < (block_length b))) /\
                                        ((result <= result0 ->
                                          (forall (result:Z),
                                           (result = (acc intP b) ->
                                            (forall (result0:Z),
                                             (result0 = (acc intP c) ->
                                              ((result > result0 ->
                                                (forall (tmp:Z),
                                                 (tmp = (acc intP b) ->
                                                  (forall (result:Z),
                                                   (result = (acc intP c) ->
                                                    (forall (intP0:((memory) Z)),
                                                     (intP0 = (upd intP b
                                                               result) ->
                                                      (forall (intP:((memory) Z)),
                                                       (intP = (upd intP0 c
                                                                tmp) ->
                                                        ((acc intP a) <=
                                                        (acc intP b) /\
                                                        (acc intP b) <=
                                                        (acc intP c)) /\
                                                        (acc intP c) <=
                                                        (acc intP d))) /\
                                                      ~(c = null) /\ 0 <=
                                                      (offset c) /\
                                                      (offset c) <
                                                      (block_length c))) /\
                                                    ~(b = null) /\ 0 <=
                                                    (offset b) /\
                                                    (offset b) <
                                                    (block_length b))) /\
                                                  ~(c = null) /\ 0 <=
                                                  (offset c) /\ (offset c) <
                                                  (block_length c))) /\
                                                ~(b = null) /\ 0 <=
                                                (offset b) /\ (offset b) <
                                                (block_length b))) /\
                                              ((result <= result0 ->
                                                ((acc intP a) <=
                                                (acc intP b) /\
                                                (acc intP b) <=
                                                (acc intP c)) /\
                                                (acc intP c) <= (acc intP d))))) /\
                                            ~(c = null) /\ 0 <= (offset c) /\
                                            (offset c) < (block_length c))) /\
                                          ~(b = null) /\ 0 <= (offset b) /\
                                          (offset b) < (block_length b))))) /\
                                      ~(d = null) /\ 0 <= (offset d) /\
                                      (offset d) < (block_length d))) /\
                                    ~(b = null) /\ 0 <= (offset b) /\
                                    (offset b) < (block_length b))) /\
                                  ~(c = null) /\ 0 <= (offset c) /\
                                  (offset c) < (block_length c))) /\
                                ~(a = null) /\ 0 <= (offset a) /\
                                (offset a) < (block_length a))) /\
                              ~(c = null) /\ 0 <= (offset c) /\ (offset c) <
                              (block_length c))) /\
                            ~(a = null) /\ 0 <= (offset a) /\ (offset a) <
                            (block_length a))) /\
                          ((result <= result0 ->
                            (forall (result:Z),
                             (result = (acc intP b) ->
                              (forall (result0:Z),
                               (result0 = (acc intP d) ->
                                ((result > result0 ->
                                  (forall (tmp:Z),
                                   (tmp = (acc intP b) ->
                                    (forall (result:Z),
                                     (result = (acc intP d) ->
                                      (forall (intP0:((memory) Z)),
                                       (intP0 = (upd intP b result) ->
                                        (forall (intP:((memory) Z)),
                                         (intP = (upd intP0 d tmp) ->
                                          (forall (result:Z),
                                           (result = (acc intP b) ->
                                            (forall (result0:Z),
                                             (result0 = (acc intP c) ->
                                              ((result > result0 ->
                                                (forall (tmp:Z),
                                                 (tmp = (acc intP b) ->
                                                  (forall (result:Z),
                                                   (result = (acc intP c) ->
                                                    (forall (intP0:((memory) Z)),
                                                     (intP0 = (upd intP b
                                                               result) ->
                                                      (forall (intP:((memory) Z)),
                                                       (intP = (upd intP0 c
                                                                tmp) ->
                                                        ((acc intP a) <=
                                                        (acc intP b) /\
                                                        (acc intP b) <=
                                                        (acc intP c)) /\
                                                        (acc intP c) <=
                                                        (acc intP d))) /\
                                                      ~(c = null) /\ 0 <=
                                                      (offset c) /\
                                                      (offset c) <
                                                      (block_length c))) /\
                                                    ~(b = null) /\ 0 <=
                                                    (offset b) /\
                                                    (offset b) <
                                                    (block_length b))) /\
                                                  ~(c = null) /\ 0 <=
                                                  (offset c) /\ (offset c) <
                                                  (block_length c))) /\
                                                ~(b = null) /\ 0 <=
                                                (offset b) /\ (offset b) <
                                                (block_length b))) /\
                                              ((result <= result0 ->
                                                ((acc intP a) <=
                                                (acc intP b) /\
                                                (acc intP b) <=
                                                (acc intP c)) /\
                                                (acc intP c) <= (acc intP d))))) /\
                                            ~(c = null) /\ 0 <= (offset c) /\
                                            (offset c) < (block_length c))) /\
                                          ~(b = null) /\ 0 <= (offset b) /\
                                          (offset b) < (block_length b))) /\
                                        ~(d = null) /\ 0 <= (offset d) /\
                                        (offset d) < (block_length d))) /\
                                      ~(b = null) /\ 0 <= (offset b) /\
                                      (offset b) < (block_length b))) /\
                                    ~(d = null) /\ 0 <= (offset d) /\
                                    (offset d) < (block_length d))) /\
                                  ~(b = null) /\ 0 <= (offset b) /\
                                  (offset b) < (block_length b))) /\
                                ((result <= result0 ->
                                  (forall (result:Z),
                                   (result = (acc intP b) ->
                                    (forall (result0:Z),
                                     (result0 = (acc intP c) ->
                                      ((result > result0 ->
                                        (forall (tmp:Z),
                                         (tmp = (acc intP b) ->
                                          (forall (result:Z),
                                           (result = (acc intP c) ->
                                            (forall (intP0:((memory) Z)),
                                             (intP0 = (upd intP b result) ->
                                              (forall (intP:((memory) Z)),
                                               (intP = (upd intP0 c tmp) ->
                                                ((acc intP a) <=
                                                (acc intP b) /\
                                                (acc intP b) <=
                                                (acc intP c)) /\
                                                (acc intP c) <= (acc intP d))) /\
                                              ~(c = null) /\ 0 <=
                                              (offset c) /\ (offset c) <
                                              (block_length c))) /\
                                            ~(b = null) /\ 0 <= (offset b) /\
                                            (offset b) < (block_length b))) /\
                                          ~(c = null) /\ 0 <= (offset c) /\
                                          (offset c) < (block_length c))) /\
                                        ~(b = null) /\ 0 <= (offset b) /\
                                        (offset b) < (block_length b))) /\
                                      ((result <= result0 -> ((acc intP a) <=
                                        (acc intP b) /\ (acc intP b) <=
                                        (acc intP c)) /\ (acc intP c) <=
                                        (acc intP d))))) /\
                                    ~(c = null) /\ 0 <= (offset c) /\
                                    (offset c) < (block_length c))) /\
                                  ~(b = null) /\ 0 <= (offset b) /\
                                  (offset b) < (block_length b))))) /\
                              ~(d = null) /\ 0 <= (offset d) /\ (offset d) <
                              (block_length d))) /\
                            ~(b = null) /\ 0 <= (offset b) /\ (offset b) <
                            (block_length b))))) /\
                        ~(c = null) /\ 0 <= (offset c) /\ (offset c) <
                        (block_length c))) /\
                      ~(a = null) /\ 0 <= (offset a) /\ (offset a) <
                      (block_length a))))) /\
                  ~(d = null) /\ 0 <= (offset d) /\ (offset d) <
                  (block_length d))) /\
                ~(c = null) /\ 0 <= (offset c) /\ (offset c) <
                (block_length c))) /\
              ~(b = null) /\ 0 <= (offset b) /\ (offset b) < (block_length b))) /\
            ~(a = null) /\ 0 <= (offset a) /\ (offset a) < (block_length a))) /\
          ~(b = null) /\ 0 <= (offset b) /\ (offset b) < (block_length b))) /\
   ~(a = null) /\ 0 <= (offset a) /\ (offset a) < (block_length a)
   else (forall (result:Z),
         (result = (acc intP c) ->
          (forall (result0:Z),
           (result0 = (acc intP d) ->
            ((result > result0 ->
              (forall (tmp:Z),
               (tmp = (acc intP c) ->
                (forall (result:Z),
                 (result = (acc intP d) ->
                  (forall (intP0:((memory) Z)),
                   (intP0 = (upd intP c result) ->
                    (forall (intP:((memory) Z)),
                     (intP = (upd intP0 d tmp) ->
                      (forall (result:Z),
                       (result = (acc intP a) ->
                        (forall (result0:Z),
                         (result0 = (acc intP c) ->
                          ((result > result0 ->
                            (forall (tmp:Z),
                             (tmp = (acc intP a) ->
                              (forall (result:Z),
                               (result = (acc intP c) ->
                                (forall (intP0:((memory) Z)),
                                 (intP0 = (upd intP a result) ->
                                  (forall (intP:((memory) Z)),
                                   (intP = (upd intP0 c tmp) ->
                                    (forall (result:Z),
                                     (result = (acc intP b) ->
                                      (forall (result0:Z),
                                       (result0 = (acc intP d) ->
                                        ((result > result0 ->
                                          (forall (tmp:Z),
                                           (tmp = (acc intP b) ->
                                            (forall (result:Z),
                                             (result = (acc intP d) ->
                                              (forall (intP0:((memory) Z)),
                                               (intP0 = (upd intP b result) ->
                                                (forall (intP:((memory) Z)),
                                                 (intP = (upd intP0 d tmp) ->
                                                  (forall (result:Z),
                                                   (result = (acc intP b) ->
                                                    (forall (result0:Z),
                                                     (result0 = (acc intP c) ->
                                                      ((result > result0 ->
                                                        (forall (tmp:Z),
                                                         (tmp = (acc intP b) ->
                                                          (forall (result:Z),
                                                           (result = (
                                                            acc intP c) ->
                                                            (forall (intP0:((memory) Z)),
                                                             (intP0 = (
                                                              upd intP b
                                                              result) ->
                                                              (forall (intP:((memory) Z)),
                                                               (intP = (
                                                                upd intP0 c
                                                                tmp) ->
                                                                ((acc intP a) <=
                                                                (acc intP b) /\
                                                                (acc intP b) <=
                                                                (acc intP c)) /\
                                                                (acc intP c) <=
                                                                (acc intP d))) /\
                                                              ~(c = null) /\
                                                              0 <=
                                                              (offset c) /\
                                                              (offset c) <
                                                              (block_length c))) /\
                                                            ~(b = null) /\
                                                            0 <=
                                                            (offset b) /\
                                                            (offset b) <
                                                            (block_length b))) /\
                                                          ~(c = null) /\ 0 <=
                                                          (offset c) /\
                                                          (offset c) <
                                                          (block_length c))) /\
                                                        ~(b = null) /\ 0 <=
                                                        (offset b) /\
                                                        (offset b) <
                                                        (block_length b))) /\
                                                      ((result <= result0 ->
                                                        ((acc intP a) <=
                                                        (acc intP b) /\
                                                        (acc intP b) <=
                                                        (acc intP c)) /\
                                                        (acc intP c) <=
                                                        (acc intP d))))) /\
                                                    ~(c = null) /\ 0 <=
                                                    (offset c) /\
                                                    (offset c) <
                                                    (block_length c))) /\
                                                  ~(b = null) /\ 0 <=
                                                  (offset b) /\ (offset b) <
                                                  (block_length b))) /\
                                                ~(d = null) /\ 0 <=
                                                (offset d) /\ (offset d) <
                                                (block_length d))) /\
                                              ~(b = null) /\ 0 <=
                                              (offset b) /\ (offset b) <
                                              (block_length b))) /\
                                            ~(d = null) /\ 0 <= (offset d) /\
                                            (offset d) < (block_length d))) /\
                                          ~(b = null) /\ 0 <= (offset b) /\
                                          (offset b) < (block_length b))) /\
                                        ((result <= result0 ->
                                          (forall (result:Z),
                                           (result = (acc intP b) ->
                                            (forall (result0:Z),
                                             (result0 = (acc intP c) ->
                                              ((result > result0 ->
                                                (forall (tmp:Z),
                                                 (tmp = (acc intP b) ->
                                                  (forall (result:Z),
                                                   (result = (acc intP c) ->
                                                    (forall (intP0:((memory) Z)),
                                                     (intP0 = (upd intP b
                                                               result) ->
                                                      (forall (intP:((memory) Z)),
                                                       (intP = (upd intP0 c
                                                                tmp) ->
                                                        ((acc intP a) <=
                                                        (acc intP b) /\
                                                        (acc intP b) <=
                                                        (acc intP c)) /\
                                                        (acc intP c) <=
                                                        (acc intP d))) /\
                                                      ~(c = null) /\ 0 <=
                                                      (offset c) /\
                                                      (offset c) <
                                                      (block_length c))) /\
                                                    ~(b = null) /\ 0 <=
                                                    (offset b) /\
                                                    (offset b) <
                                                    (block_length b))) /\
                                                  ~(c = null) /\ 0 <=
                                                  (offset c) /\ (offset c) <
                                                  (block_length c))) /\
                                                ~(b = null) /\ 0 <=
                                                (offset b) /\ (offset b) <
                                                (block_length b))) /\
                                              ((result <= result0 ->
                                                ((acc intP a) <=
                                                (acc intP b) /\
                                                (acc intP b) <=
                                                (acc intP c)) /\
                                                (acc intP c) <= (acc intP d))))) /\
                                            ~(c = null) /\ 0 <= (offset c) /\
                                            (offset c) < (block_length c))) /\
                                          ~(b = null) /\ 0 <= (offset b) /\
                                          (offset b) < (block_length b))))) /\
                                      ~(d = null) /\ 0 <= (offset d) /\
                                      (offset d) < (block_length d))) /\
                                    ~(b = null) /\ 0 <= (offset b) /\
                                    (offset b) < (block_length b))) /\
                                  ~(c = null) /\ 0 <= (offset c) /\
                                  (offset c) < (block_length c))) /\
                                ~(a = null) /\ 0 <= (offset a) /\
                                (offset a) < (block_length a))) /\
                              ~(c = null) /\ 0 <= (offset c) /\ (offset c) <
                              (block_length c))) /\
                            ~(a = null) /\ 0 <= (offset a) /\ (offset a) <
                            (block_length a))) /\
                          ((result <= result0 ->
                            (forall (result:Z),
                             (result = (acc intP b) ->
                              (forall (result0:Z),
                               (result0 = (acc intP d) ->
                                ((result > result0 ->
                                  (forall (tmp:Z),
                                   (tmp = (acc intP b) ->
                                    (forall (result:Z),
                                     (result = (acc intP d) ->
                                      (forall (intP0:((memory) Z)),
                                       (intP0 = (upd intP b result) ->
                                        (forall (intP:((memory) Z)),
                                         (intP = (upd intP0 d tmp) ->
                                          (forall (result:Z),
                                           (result = (acc intP b) ->
                                            (forall (result0:Z),
                                             (result0 = (acc intP c) ->
                                              ((result > result0 ->
                                                (forall (tmp:Z),
                                                 (tmp = (acc intP b) ->
                                                  (forall (result:Z),
                                                   (result = (acc intP c) ->
                                                    (forall (intP0:((memory) Z)),
                                                     (intP0 = (upd intP b
                                                               result) ->
                                                      (forall (intP:((memory) Z)),
                                                       (intP = (upd intP0 c
                                                                tmp) ->
                                                        ((acc intP a) <=
                                                        (acc intP b) /\
                                                        (acc intP b) <=
                                                        (acc intP c)) /\
                                                        (acc intP c) <=
                                                        (acc intP d))) /\
                                                      ~(c = null) /\ 0 <=
                                                      (offset c) /\
                                                      (offset c) <
                                                      (block_length c))) /\
                                                    ~(b = null) /\ 0 <=
                                                    (offset b) /\
                                                    (offset b) <
                                                    (block_length b))) /\
                                                  ~(c = null) /\ 0 <=
                                                  (offset c) /\ (offset c) <
                                                  (block_length c))) /\
                                                ~(b = null) /\ 0 <=
                                                (offset b) /\ (offset b) <
                                                (block_length b))) /\
                                              ((result <= result0 ->
                                                ((acc intP a) <=
                                                (acc intP b) /\
                                                (acc intP b) <=
                                                (acc intP c)) /\
                                                (acc intP c) <= (acc intP d))))) /\
                                            ~(c = null) /\ 0 <= (offset c) /\
                                            (offset c) < (block_length c))) /\
                                          ~(b = null) /\ 0 <= (offset b) /\
                                          (offset b) < (block_length b))) /\
                                        ~(d = null) /\ 0 <= (offset d) /\
                                        (offset d) < (block_length d))) /\
                                      ~(b = null) /\ 0 <= (offset b) /\
                                      (offset b) < (block_length b))) /\
                                    ~(d = null) /\ 0 <= (offset d) /\
                                    (offset d) < (block_length d))) /\
                                  ~(b = null) /\ 0 <= (offset b) /\
                                  (offset b) < (block_length b))) /\
                                ((result <= result0 ->
                                  (forall (result:Z),
                                   (result = (acc intP b) ->
                                    (forall (result0:Z),
                                     (result0 = (acc intP c) ->
                                      ((result > result0 ->
                                        (forall (tmp:Z),
                                         (tmp = (acc intP b) ->
                                          (forall (result:Z),
                                           (result = (acc intP c) ->
                                            (forall (intP0:((memory) Z)),
                                             (intP0 = (upd intP b result) ->
                                              (forall (intP:((memory) Z)),
                                               (intP = (upd intP0 c tmp) ->
                                                ((acc intP a) <=
                                                (acc intP b) /\
                                                (acc intP b) <=
                                                (acc intP c)) /\
                                                (acc intP c) <= (acc intP d))) /\
                                              ~(c = null) /\ 0 <=
                                              (offset c) /\ (offset c) <
                                              (block_length c))) /\
                                            ~(b = null) /\ 0 <= (offset b) /\
                                            (offset b) < (block_length b))) /\
                                          ~(c = null) /\ 0 <= (offset c) /\
                                          (offset c) < (block_length c))) /\
                                        ~(b = null) /\ 0 <= (offset b) /\
                                        (offset b) < (block_length b))) /\
                                      ((result <= result0 -> ((acc intP a) <=
                                        (acc intP b) /\ (acc intP b) <=
                                        (acc intP c)) /\ (acc intP c) <=
                                        (acc intP d))))) /\
                                    ~(c = null) /\ 0 <= (offset c) /\
                                    (offset c) < (block_length c))) /\
                                  ~(b = null) /\ 0 <= (offset b) /\
                                  (offset b) < (block_length b))))) /\
                              ~(d = null) /\ 0 <= (offset d) /\ (offset d) <
                              (block_length d))) /\
                            ~(b = null) /\ 0 <= (offset b) /\ (offset b) <
                            (block_length b))))) /\
                        ~(c = null) /\ 0 <= (offset c) /\ (offset c) <
                        (block_length c))) /\
                      ~(a = null) /\ 0 <= (offset a) /\ (offset a) <
                      (block_length a))) /\
                    ~(d = null) /\ 0 <= (offset d) /\ (offset d) <
                    (block_length d))) /\
                  ~(c = null) /\ 0 <= (offset c) /\ (offset c) <
                  (block_length c))) /\
                ~(d = null) /\ 0 <= (offset d) /\ (offset d) <
                (block_length d))) /\
              ~(c = null) /\ 0 <= (offset c) /\ (offset c) < (block_length c))) /\
            ((result <= result0 ->
              (forall (result:Z),
               (result = (acc intP a) ->
                (forall (result0:Z),
                 (result0 = (acc intP c) ->
                  ((result > result0 ->
                    (forall (tmp:Z),
                     (tmp = (acc intP a) ->
                      (forall (result:Z),
                       (result = (acc intP c) ->
                        (forall (intP0:((memory) Z)),
                         (intP0 = (upd intP a result) ->
                          (forall (intP:((memory) Z)),
                           (intP = (upd intP0 c tmp) ->
                            (forall (result:Z),
                             (result = (acc intP b) ->
                              (forall (result0:Z),
                               (result0 = (acc intP d) ->
                                ((result > result0 ->
                                  (forall (tmp:Z),
                                   (tmp = (acc intP b) ->
                                    (forall (result:Z),
                                     (result = (acc intP d) ->
                                      (forall (intP0:((memory) Z)),
                                       (intP0 = (upd intP b result) ->
                                        (forall (intP:((memory) Z)),
                                         (intP = (upd intP0 d tmp) ->
                                          (forall (result:Z),
                                           (result = (acc intP b) ->
                                            (forall (result0:Z),
                                             (result0 = (acc intP c) ->
                                              ((result > result0 ->
                                                (forall (tmp:Z),
                                                 (tmp = (acc intP b) ->
                                                  (forall (result:Z),
                                                   (result = (acc intP c) ->
                                                    (forall (intP0:((memory) Z)),
                                                     (intP0 = (upd intP b
                                                               result) ->
                                                      (forall (intP:((memory) Z)),
                                                       (intP = (upd intP0 c
                                                                tmp) ->
                                                        ((acc intP a) <=
                                                        (acc intP b) /\
                                                        (acc intP b) <=
                                                        (acc intP c)) /\
                                                        (acc intP c) <=
                                                        (acc intP d))) /\
                                                      ~(c = null) /\ 0 <=
                                                      (offset c) /\
                                                      (offset c) <
                                                      (block_length c))) /\
                                                    ~(b = null) /\ 0 <=
                                                    (offset b) /\
                                                    (offset b) <
                                                    (block_length b))) /\
                                                  ~(c = null) /\ 0 <=
                                                  (offset c) /\ (offset c) <
                                                  (block_length c))) /\
                                                ~(b = null) /\ 0 <=
                                                (offset b) /\ (offset b) <
                                                (block_length b))) /\
                                              ((result <= result0 ->
                                                ((acc intP a) <=
                                                (acc intP b) /\
                                                (acc intP b) <=
                                                (acc intP c)) /\
                                                (acc intP c) <= (acc intP d))))) /\
                                            ~(c = null) /\ 0 <= (offset c) /\
                                            (offset c) < (block_length c))) /\
                                          ~(b = null) /\ 0 <= (offset b) /\
                                          (offset b) < (block_length b))) /\
                                        ~(d = null) /\ 0 <= (offset d) /\
                                        (offset d) < (block_length d))) /\
                                      ~(b = null) /\ 0 <= (offset b) /\
                                      (offset b) < (block_length b))) /\
                                    ~(d = null) /\ 0 <= (offset d) /\
                                    (offset d) < (block_length d))) /\
                                  ~(b = null) /\ 0 <= (offset b) /\
                                  (offset b) < (block_length b))) /\
                                ((result <= result0 ->
                                  (forall (result:Z),
                                   (result = (acc intP b) ->
                                    (forall (result0:Z),
                                     (result0 = (acc intP c) ->
                                      ((result > result0 ->
                                        (forall (tmp:Z),
                                         (tmp = (acc intP b) ->
                                          (forall (result:Z),
                                           (result = (acc intP c) ->
                                            (forall (intP0:((memory) Z)),
                                             (intP0 = (upd intP b result) ->
                                              (forall (intP:((memory) Z)),
                                               (intP = (upd intP0 c tmp) ->
                                                ((acc intP a) <=
                                                (acc intP b) /\
                                                (acc intP b) <=
                                                (acc intP c)) /\
                                                (acc intP c) <= (acc intP d))) /\
                                              ~(c = null) /\ 0 <=
                                              (offset c) /\ (offset c) <
                                              (block_length c))) /\
                                            ~(b = null) /\ 0 <= (offset b) /\
                                            (offset b) < (block_length b))) /\
                                          ~(c = null) /\ 0 <= (offset c) /\
                                          (offset c) < (block_length c))) /\
                                        ~(b = null) /\ 0 <= (offset b) /\
                                        (offset b) < (block_length b))) /\
                                      ((result <= result0 -> ((acc intP a) <=
                                        (acc intP b) /\ (acc intP b) <=
                                        (acc intP c)) /\ (acc intP c) <=
                                        (acc intP d))))) /\
                                    ~(c = null) /\ 0 <= (offset c) /\
                                    (offset c) < (block_length c))) /\
                                  ~(b = null) /\ 0 <= (offset b) /\
                                  (offset b) < (block_length b))))) /\
                              ~(d = null) /\ 0 <= (offset d) /\ (offset d) <
                              (block_length d))) /\
                            ~(b = null) /\ 0 <= (offset b) /\ (offset b) <
                            (block_length b))) /\
                          ~(c = null) /\ 0 <= (offset c) /\ (offset c) <
                          (block_length c))) /\
                        ~(a = null) /\ 0 <= (offset a) /\ (offset a) <
                        (block_length a))) /\
                      ~(c = null) /\ 0 <= (offset c) /\ (offset c) <
                      (block_length c))) /\
                    ~(a = null) /\ 0 <= (offset a) /\ (offset a) <
                    (block_length a))) /\
                  ((result <= result0 ->
                    (forall (result:Z),
                     (result = (acc intP b) ->
                      (forall (result0:Z),
                       (result0 = (acc intP d) ->
                        ((result > result0 ->
                          (forall (tmp:Z),
                           (tmp = (acc intP b) ->
                            (forall (result:Z),
                             (result = (acc intP d) ->
                              (forall (intP0:((memory) Z)),
                               (intP0 = (upd intP b result) ->
                                (forall (intP:((memory) Z)),
                                 (intP = (upd intP0 d tmp) ->
                                  (forall (result:Z),
                                   (result = (acc intP b) ->
                                    (forall (result0:Z),
                                     (result0 = (acc intP c) ->
                                      ((result > result0 ->
                                        (forall (tmp:Z),
                                         (tmp = (acc intP b) ->
                                          (forall (result:Z),
                                           (result = (acc intP c) ->
                                            (forall (intP0:((memory) Z)),
                                             (intP0 = (upd intP b result) ->
                                              (forall (intP:((memory) Z)),
                                               (intP = (upd intP0 c tmp) ->
                                                ((acc intP a) <=
                                                (acc intP b) /\
                                                (acc intP b) <=
                                                (acc intP c)) /\
                                                (acc intP c) <= (acc intP d))) /\
                                              ~(c = null) /\ 0 <=
                                              (offset c) /\ (offset c) <
                                              (block_length c))) /\
                                            ~(b = null) /\ 0 <= (offset b) /\
                                            (offset b) < (block_length b))) /\
                                          ~(c = null) /\ 0 <= (offset c) /\
                                          (offset c) < (block_length c))) /\
                                        ~(b = null) /\ 0 <= (offset b) /\
                                        (offset b) < (block_length b))) /\
                                      ((result <= result0 -> ((acc intP a) <=
                                        (acc intP b) /\ (acc intP b) <=
                                        (acc intP c)) /\ (acc intP c) <=
                                        (acc intP d))))) /\
                                    ~(c = null) /\ 0 <= (offset c) /\
                                    (offset c) < (block_length c))) /\
                                  ~(b = null) /\ 0 <= (offset b) /\
                                  (offset b) < (block_length b))) /\
                                ~(d = null) /\ 0 <= (offset d) /\
                                (offset d) < (block_length d))) /\
                              ~(b = null) /\ 0 <= (offset b) /\ (offset b) <
                              (block_length b))) /\
                            ~(d = null) /\ 0 <= (offset d) /\ (offset d) <
                            (block_length d))) /\
                          ~(b = null) /\ 0 <= (offset b) /\ (offset b) <
                          (block_length b))) /\
                        ((result <= result0 ->
                          (forall (result:Z),
                           (result = (acc intP b) ->
                            (forall (result0:Z),
                             (result0 = (acc intP c) ->
                              ((result > result0 ->
                                (forall (tmp:Z),
                                 (tmp = (acc intP b) ->
                                  (forall (result:Z),
                                   (result = (acc intP c) ->
                                    (forall (intP0:((memory) Z)),
                                     (intP0 = (upd intP b result) ->
                                      (forall (intP:((memory) Z)),
                                       (intP = (upd intP0 c tmp) ->
                                        ((acc intP a) <= (acc intP b) /\
                                        (acc intP b) <= (acc intP c)) /\
                                        (acc intP c) <= (acc intP d))) /\
                                      ~(c = null) /\ 0 <= (offset c) /\
                                      (offset c) < (block_length c))) /\
                                    ~(b = null) /\ 0 <= (offset b) /\
                                    (offset b) < (block_length b))) /\
                                  ~(c = null) /\ 0 <= (offset c) /\
                                  (offset c) < (block_length c))) /\
                                ~(b = null) /\ 0 <= (offset b) /\
                                (offset b) < (block_length b))) /\
                              ((result <= result0 -> ((acc intP a) <=
                                (acc intP b) /\ (acc intP b) <=
                                (acc intP c)) /\ (acc intP c) <= (acc intP d))))) /\
                            ~(c = null) /\ 0 <= (offset c) /\ (offset c) <
                            (block_length c))) /\
                          ~(b = null) /\ 0 <= (offset b) /\ (offset b) <
                          (block_length b))))) /\
                      ~(d = null) /\ 0 <= (offset d) /\ (offset d) <
                      (block_length d))) /\
                    ~(b = null) /\ 0 <= (offset b) /\ (offset b) <
                    (block_length b))))) /\
                ~(c = null) /\ 0 <= (offset c) /\ (offset c) <
                (block_length c))) /\
              ~(a = null) /\ 0 <= (offset a) /\ (offset a) < (block_length a))))) /\
          ~(d = null) /\ 0 <= (offset d) /\ (offset d) < (block_length d))) /\
   ~(c = null) /\ 0 <= (offset c) /\ (offset c) < (block_length c)).
Proof.
(* FILL PROOF HERE *)
Save.

