#!/bin/sh

FILES="array assigns break call clash clash_alloc clash_redef \
    continue coord \
    copy dowhile invariants ifs logic_cast \
    param passing purse queue rec ref ref_glob search see \
    sizeof alloca \
    struct switch enum separation3 separation"

# benchmark for caduceus
export CADUCEUSLIB=`pwd`/../../lib/why

# C files to parse with success
echo "C parsing (good)"
cd good/syntax
parsing="../../../../bin/caduceus.opt -parse-only"
for f in *.c; do
    echo -n "  "$f"... "
    if ! gcc -c $f > /dev/null 2>&1; then
	echo "GCC failed"
	if test $f != "obfuscated.c" ; then
           gcc -c $f
	   exit 1
        fi
    else
      echo -n "GCC ok... "
    fi
    if ! $parsing  $f > /dev/null 2>&1; then
	echo "caduceus FAILED"
	#$parsing $f
	#exit 1
    else
	echo "caduceus ok... "
    fi
done

echo "C parsing (bad)"
cd ../../bad-syn
parsing="../../../bin/caduceus.opt -parse-only"
for f in *.c; do
    echo -n "  "$f"... "
    if gcc -c $f > /dev/null 2>&1; then
	echo "GCC failed (accepted a bad file)"
	gcc -c $f
	exit 1
    fi
    echo -n "GCC ok... "
    if $parsing  $f > /dev/null 2>&1; then
	echo "caduceus FAILED (accepted a bad file)"
	#$parsing $f
	#exit 1
    else
	echo "caduceus ok... "
    fi
done

echo "C parsing/typing (bad)"
cd ../bad-sem
parsing="../../../bin/caduceus.opt -type-only"
for f in *.c; do
    echo -n "  "$f"... "
    if gcc -c $f > /dev/null 2>&1; then
	echo "GCC failed (accepted a bad file)"
	gcc -c $f
	exit 1
    fi
    echo -n "GCC ok... "
    if $parsing  $f > /dev/null 2>&1; then
	echo "caduceus FAILED (accepted a bad file)"
	#$parsing $f
	#exit 1
    else
	echo "caduceus ok... "
    fi
done

echo "C parsing/typing (good)"
cd ../good
parsing="../../../bin/caduceus.opt -type-only"
for f in *.c; do
    echo -n "  "$f"... "
    if ! gcc -c $f > /dev/null 2>&1; then
	echo "GCC failed"
	gcc -c $f
	exit 1
    fi
    echo -n "GCC ok... "
    if ! $parsing  $f > /dev/null 2>&1; then
	echo "caduceus FAILED"
	#$parsing $f
	#exit 1
    else
	echo "caduceus ok... "
    fi
done

echo "C interp (bad)"
cd ../bad-interp
parsing="../../../bin/caduceus.opt"
for f in *.c; do
    echo -n "  "$f"... "
    if gcc -ansi -pedantic -Wall -Werror -c $f > /dev/null 2>&1; then
	echo "GCC failed (accepted a bad file, maybe not detected)"
	gcc -ansi -pedantic -Wall -Werror -c $f
    else
        echo -n "GCC ok... "
    fi
    if $parsing  $f > /dev/null 2>&1; then
	echo "caduceus FAILED (accepted a bad file)"
	#$parsing $f
	#exit 1
    else
	echo "caduceus ok... "
    fi
done

echo "C interp (good)"
cd ../good
export CADUCEUSLIB=`pwd`/../../../lib
parsing="../../../bin/caduceus.opt"

rm -f simplify/*_why.sx.all
for f in $FILES; do
    echo -n "  Generating simplify VCG for $f.c... "
    if $parsing  $f.c > /tmp/caduceus.tmp 2>&1; then
        make -f $f.makefile simplify/${f}_why.sx.all > /tmp/caduceus.tmp 2>&1
	echo "ok"
    else
	echo "caduceus FAILED (rejected a good file) :"
	cat /tmp/caduceus.tmp
	exit 1
    fi
done
../../../bin/dp.opt -timeout 10 simplify/*_why.sx.all || true


for f in $FILES; do
    echo -n "  $f.c... "
    rm -f coq/caduceus_spec_why.v
    if $parsing  $f.c > /tmp/caduceus.tmp 2>&1; then
	echo -n "caduceus ok... "
	if make -f $f.makefile coq > /tmp/caduceus.tmp 2>&1; then
	    n=`grep -c Admitted coq/${f}_why.v`
	    if test $n -ne 0 ; then
		echo "Coq proof ok (with $n Admitted)... "
	    else
		echo "Coq proof ok... "
	    fi
	else
	    echo "Coq proof FAILED !"
	    cat /tmp/caduceus.tmp
	    exit 1
	fi
    else
	echo "caduceus FAILED (rejected a good file) :"
	cat /tmp/caduceus.tmp
	exit 1
    fi
done


