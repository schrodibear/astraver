
logic D : int

parameter vx,vy : int ref

parameter sq : x:int -> {} int { result = x*x }

let g () =
 { true }
 if !vx=0 && !vy=0 && sq !vx + sq !vy < sq D  then 1 else 2
 { result=1 -> vx=0 and vy=0 }

parameter incr : x:int ref -> { } unit writes x { x = x@ + 1 }

parameter x : int ref

let test_and () =
  if (incr x; !x > 0) && not (10 / !x = 10) then 1 else 2
  { result = 3 }

let test_or () =
  if (incr x; !x > 0) || !x > 1 then 1 else 2
  { result = 3 }

